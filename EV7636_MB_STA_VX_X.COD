LX51 LINKER/LOCATER V3.65b                                                              11/04/2010  11:32:29  PAGE 1





ASSEMBLER CODE PACKING OF MODULE:  EV7636_MB_STA_VX_X (MAINFLOW)


80000B A50280F96D        EJMP    080F96DH
800023 A5028078F2        EJMP    08078F2H
800053 A5028138E1        EJMP    08138E1H
----- FUNCTION ChooseReturn (BEGIN) -----
 FILE: 'mainflow.c'
  352: u_char ChooseReturn( )
  353: {
  354: //	u_char xdata length = 0;
  355: 	u_char xdata pt= 0;
8019DD E4                CLR     A
8019DE 90159C            MOV     DPTR,#pt
8019E1 F0                MOVX    @DPTR,A
  356: 	u_char xdata MyKey = 0;
8019E2 A3                INC     DPTR
8019E3 F0                MOVX    @DPTR,A
  357: 
  358: 	ClearKey();	
8019E4 A512808FA5        ECALL   ClearKey
  359: 	//显示字符	
  360: 	DisplayLine = STR_OK_NOT;	 
8019E9 900B27            MOV     DPTR,#DisplayLine
8019EC 7405              MOV     A,#05H
8019EE F0                MOVX    @DPTR,A
  361: 	DisplayStr( 0, __LINE1__ , 1, DispInformationTable[	DisplayLine ].str , DispInformationTable[ DisplayLine ].len 
>> );
8019EF D21A              SETB    ?_DisplayStr?BIT
8019F1 E0                MOVX    A,@DPTR
8019F2 FF                MOV     R7,A
8019F3 25E0              ADD     A,ACC
8019F5 25E0              ADD     A,ACC
8019F7 2471              ADD     A,#LOW DispInformationTable
8019F9 F582              MOV     DPL,A
8019FB E4                CLR     A
8019FC 3404              ADDC    A,#HIGH DispInformationTable
8019FE F583              MOV     DPH,A
801A00 A5128007C0        ECALL   ?C?PLDCODE
801A05 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
801A08 A5128007B6        ECALL   ?C?PSTXDATA
801A0D EF                MOV     A,R7
801A0E 25E0              ADD     A,ACC
801A10 25E0              ADD     A,ACC
801A12 2474              ADD     A,#LOW DispInformationTable+03H
801A14 F582              MOV     DPL,A
801A16 E4                CLR     A
801A17 3404              ADDC    A,#HIGH DispInformationTable+03H
801A19 F583              MOV     DPH,A
801A1B E4                CLR     A
801A1C 93                MOVC    A,@A+DPTR
801A1D 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
801A20 F0                MOVX    @DPTR,A
801A21 7D01              MOV     R5,#01H
801A23 E4                CLR     A
801A24 FF                MOV     R7,A
801A25 A51280885F        ECALL   _DisplayStr
  362:     
  363: 	//等待选择
  364: 	LzjSecTimer= DEFAULT_PRESSKEY_TIMEOUT;
801A2A 751D0F            MOV     LzjSecTimer,#0FH
801A2D         ?C0070?MAINFLOW:
  365: 	while( LzjSecTimer )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 2


801A2D E51D              MOV     A,LzjSecTimer
801A2F 6026              JZ      ?C0071?MAINFLOW
  366: 	{
  367: 		SchedulerProcess();
801A31 A5128090B6        ECALL   SchedulerProcess
  368: 		MyKey = GetKey();
801A36 A5128096D1        ECALL   GetKey
801A3B 90159D            MOV     DPTR,#MyKey
801A3E EF                MOV     A,R7
801A3F F0                MOVX    @DPTR,A
  369: 		if ( MyKey == KEY_NULL ) 
801A40 F4                CPL     A
801A41 60EA              JZ      ?C0070?MAINFLOW
  370: 			continue;
801A43         ?C0072?MAINFLOW:
  371: 		switch ( MyKey )
801A43 90159D            MOV     DPTR,#MyKey
801A46 E0                MOVX    A,@DPTR
801A47 24E5              ADD     A,#0E5H
801A49 6008              JZ      ?C0076?MAINFLOW
801A4B 240E              ADD     A,#0EH
801A4D 70DE              JNZ     ?C0070?MAINFLOW
  372: 	 	{			
  373: 			case 	KEY_SUBMIT:			
801A4F         ?C0074?MAINFLOW:
  374: 				return 0 ;			
801A4F 7F00              MOV     R7,#00H
801A51 8006              SJMP    ?C0075?MAINFLOW
  375: 			case KEY_CANCEL:				
801A53         ?C0076?MAINFLOW:
  376: 				return 1 ;					
801A53 7F01              MOV     R7,#01H
801A55 8002              SJMP    ?C0075?MAINFLOW
  377: 			default:
  378: 				continue;
  379: 		}	
  380: 	}
801A57         ?C0071?MAINFLOW:
  381: 	return 2;
801A57 7F02              MOV     R7,#02H
  382: }
801A59         ?C0075?MAINFLOW:
801A59 A522              ERET    
----- FUNCTION ChooseReturn (END) -------


----- FUNCTION CheaperOnePlz (BEGIN) -----
 FILE: 'mainflow.c'
 3423: u_char CheaperOnePlz()
 3424: {
 3425: //	u_char xdata length;
 3426: 	u_char xdata pt= 0;
801A5B E4                CLR     A
801A5C 90159B            MOV     DPTR,#pt
801A5F F0                MOVX    @DPTR,A
 3427: //	u_int xdata Unicode_buffer[ MAX_CHAR_NUMBER *2 ];
 3428: 
 3429: //	Trace( "\n CheaperOnePlz");
 3430: 	DisplayLine = STR_CHOICE_CHEAPERONE;
801A60 900B27            MOV     DPTR,#DisplayLine
801A63 740C              MOV     A,#0CH
801A65 A512808829        ECALL   ?L?COM0003
 3431:   //  length = DispInformationTable[	DisplayLine ].len;
 3432:   //  memcpy( DisplayBuffer , DispInformationTable[ DisplayLine ].str , length );	
 3433: 	DisplayStr( 0, 0, 1, DispInformationTable[	DisplayLine ].str, DispInformationTable[ DisplayLine ].len );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 3


 3434: //	DisplayInfo( __LINE0__ , 0 , DisplayBuffer );
 3435: 
 3436: 	pt = ChooseReturn( );
801A6A A5128019DD        ECALL   ChooseReturn
801A6F 90159B            MOV     DPTR,#pt
801A72 EF                MOV     A,R7
801A73 F0                MOVX    @DPTR,A
 3437: 	if( pt == 0 )//确定
801A74 7009              JNZ     ?C0746?MAINFLOW
 3438: 	{
 3439: 		ClearKey();	
801A76 A512808FA5        ECALL   ClearKey
 3440: 		return 1;
801A7B 7F01              MOV     R7,#01H
801A7D 8028              SJMP    ?C0747?MAINFLOW
 3441: 	}
801A7F         ?C0746?MAINFLOW:
 3442: 	if( pt == 1 ) //取消
801A7F 90159B            MOV     DPTR,#pt
801A82 E0                MOVX    A,@DPTR
801A83 B40104            CJNE    A,#01H,?C0748?MAINFLOW
 3443: 		return 0;
801A86 7F00              MOV     R7,#00H
801A88 801D              SJMP    ?C0747?MAINFLOW
801A8A         ?C0748?MAINFLOW:
 3444: 	DisplayLine = STR_OPERATION_TIMEOUT;
801A8A 900B27            MOV     DPTR,#DisplayLine
801A8D 741E              MOV     A,#01EH
801A8F A512808829        ECALL   ?L?COM0003
 3445: 	DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len );
>> 
 3446: 	ClearDisplayLine( 2 );
801A94 7F02              MOV     R7,#02H
801A96 A512808FB8        ECALL   _ClearDisplayLine
 3447: 	WaitForWork( 500 , NULL );
801A9B E4                CLR     A
801A9C 7FF4              MOV     R7,#0F4H
801A9E 7E01              MOV     R6,#01H
801AA0 A512808330        ECALL   ?L?COM000D
 3448: 	return 0;
801AA5 7F00              MOV     R7,#00H
 3449: }
801AA7         ?C0747?MAINFLOW:
801AA7 A522              ERET    
----- FUNCTION CheaperOnePlz (END) -------


----- FUNCTION DispInputMoney (BEGIN) -----
 FILE: 'mainflow.c'
 3379: u_char DispInputMoney()
 3380: {
 3381: 	u_char xdata length = 0;
 3382: 	u_char xdata pt= 0;
801AA9 E4                CLR     A
801AAA 90159B            MOV     DPTR,#length
801AAD F0                MOVX    @DPTR,A
 3383: 
;---- Variable 'pt' assigned to Register 'R7' ----
 3384: 	//先显示钞票不足
 3385: 	DisplayLine = STR_NOT_ENOUGH_NOTE;
801AAE 900B27            MOV     DPTR,#DisplayLine
801AB1 7413              MOV     A,#013H
801AB3 A512808829        ECALL   ?L?COM0003
 3386: 	DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len );
>> 	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 4


 3387: 	pt = 0;
801AB8 E4                CLR     A
801AB9 FF                MOV     R7,A
 3388: 	pt = ChooseReturn( );
801ABA A5128019DD        ECALL   ChooseReturn
 3389: 	if( pt == 0 )//确定
801ABF EF                MOV     A,R7
801AC0 700E              JNZ     ?C0738?MAINFLOW
 3390: 	{
 3391: 		EnableBillDev();
801AC2 A51280962E        ECALL   EnableBillDev
 3392: 		DisplayCurrentMoney( CurrentPayed );
801AC7 A512801AFF        ECALL   ?L?COM001F
 3393: 		return 1;
801ACC 7F01              MOV     R7,#01H
801ACE 802D              SJMP    ?C0739?MAINFLOW
 3394: 	}
801AD0         ?C0738?MAINFLOW:
 3395: 	else //取消或超时
 3396: 	{
 3397: 		memset( DisplayBuffer , 0 , sizeof( DisplayBuffer ));
801AD0 7E00              MOV     R6,#00H
801AD2 7F14              MOV     R7,#014H
801AD4 7D00              MOV     R5,#00H
801AD6 7B00              MOV     R3,#?C?XDATASEG
801AD8 7A04              MOV     R2,#HIGH DisplayBuffer
801ADA 7970              MOV     R1,#LOW DisplayBuffer
801ADC A5128008A6        ECALL   ?C?MEMSET
 3398: 		DisplayLine = STR_PLEASE_WAIT;		
801AE1 900B27            MOV     DPTR,#DisplayLine
801AE4 7412              MOV     A,#012H
801AE6 A512808829        ECALL   ?L?COM0003
 3399: 		DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len )
>> ;
 3400: //		ClearDisplayLine1();
 3401: 		ClearDisplayLine( 2 );
801AEB 7F02              MOV     R7,#02H
801AED A512808FB8        ECALL   _ClearDisplayLine
 3402: 		WaitForWork( 100 , NULL );
801AF2 E4                CLR     A
801AF3 7F64              MOV     R7,#064H
801AF5 FE                MOV     R6,A
801AF6 A512808330        ECALL   ?L?COM000D
 3403: 		return 0;
801AFB 7F00              MOV     R7,#00H
 3404: 	}
 3405: }
801AFD         ?C0739?MAINFLOW:
801AFD A522              ERET    
----- FUNCTION DispInputMoney (END) -------


----- FUNCTION ?L?COM001F (BEGIN) -----
801AFF 900B25            MOV     DPTR,#CurrentPayed
801B02 E0                MOVX    A,@DPTR
801B03 FE                MOV     R6,A
801B04 A3                INC     DPTR
801B05 E0                MOVX    A,@DPTR
801B06 FF                MOV     R7,A
----- FUNCTION _DisplayCurrentMoney (BEGIN) -----
 FILE: 'mainflow.c'
  526: u_char DisplayCurrentMoney( u_int Money )
  527: {
801B07 90159F            MOV     DPTR,#Money
801B0A EE                MOV     A,R6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 5


801B0B F0                MOVX    @DPTR,A
801B0C A3                INC     DPTR
801B0D EF                MOV     A,R7
801B0E F0                MOVX    @DPTR,A
  528: 	u_char xdata length = 0;
  529: 	
801B0F E4                CLR     A
801B10 A3                INC     DPTR
801B11 F0                MOVX    @DPTR,A
  530: 	if( Money <= 0 )
801B12 D3                SETB    C
801B13 EF                MOV     A,R7
801B14 9400              SUBB    A,#00H
801B16 EE                MOV     A,R6
801B17 9400              SUBB    A,#00H
801B19 5005              JNC     ?C0111?MAINFLOW
  531: 		return 0;
801B1B 7F00              MOV     R7,#00H
801B1D 021CFC            LJMP    ?C0112?MAINFLOW
801B20         ?C0111?MAINFLOW:
  532: 	DisplayLine = STR_CUSTOM_PAYED;
801B20 900B27            MOV     DPTR,#DisplayLine
801B23 740B              MOV     A,#0BH
801B25 F0                MOVX    @DPTR,A
  533: 	memset( DisplayBuffer , 0 , sizeof( DisplayBuffer ));
801B26 7E00              MOV     R6,#00H
801B28 7F14              MOV     R7,#014H
801B2A 7D00              MOV     R5,#00H
801B2C 7B00              MOV     R3,#?C?XDATASEG
801B2E 7A04              MOV     R2,#HIGH DisplayBuffer
801B30 7970              MOV     R1,#LOW DisplayBuffer
801B32 A5128008A6        ECALL   ?C?MEMSET
  534: 	length = DispInformationTable[DisplayLine].len;
801B37 900B27            MOV     DPTR,#DisplayLine
801B3A E0                MOVX    A,@DPTR
801B3B FF                MOV     R7,A
801B3C 25E0              ADD     A,ACC
801B3E 25E0              ADD     A,ACC
801B40 2474              ADD     A,#LOW DispInformationTable+03H
801B42 F582              MOV     DPL,A
801B44 E4                CLR     A
801B45 3404              ADDC    A,#HIGH DispInformationTable+03H
801B47 F583              MOV     DPH,A
801B49 E4                CLR     A
801B4A 93                MOVC    A,@A+DPTR
801B4B 9015A1            MOV     DPTR,#length
801B4E F0                MOVX    @DPTR,A
  535: 	memcpy( DisplayBuffer , DispInformationTable[DisplayLine].str , DispInformationTable[DisplayLine].len );
801B4F FD                MOV     R5,A
801B50 7C00              MOV     R4,#00H
801B52 C004              PUSH    AR4
801B54 C005              PUSH    AR5
801B56 EF                MOV     A,R7
801B57 25E0              ADD     A,ACC
801B59 25E0              ADD     A,ACC
801B5B 2471              ADD     A,#LOW DispInformationTable
801B5D F582              MOV     DPL,A
801B5F E4                CLR     A
801B60 3404              ADDC    A,#HIGH DispInformationTable
801B62 F583              MOV     DPH,A
801B64 A5128007C0        ECALL   ?C?PLDCODE
801B69 7870              MOV     R0,#LOW DisplayBuffer
801B6B 7C04              MOV     R4,#HIGH DisplayBuffer
801B6D 7D00              MOV     R5,#?C?XDATASEG
801B6F D007              POP     AR7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 6


801B71 D006              POP     AR6
801B73 A51280052D        ECALL   ?C?COPY
  536: 	DisplayBuffer[ length ] = ' ';	
801B78 9015A1            MOV     DPTR,#length
801B7B E0                MOVX    A,@DPTR
801B7C FF                MOV     R7,A
801B7D 2470              ADD     A,#LOW DisplayBuffer
801B7F F582              MOV     DPL,A
801B81 E4                CLR     A
801B82 3404              ADDC    A,#HIGH DisplayBuffer
801B84 F583              MOV     DPH,A
801B86 7420              MOV     A,#020H
801B88 F0                MOVX    @DPTR,A
  537: 	switch( SystemParameter.curUnit )
801B89 900468            MOV     DPTR,#SystemParameter+048H
801B8C E0                MOVX    A,@DPTR
801B8D FC                MOV     R4,A
801B8E A3                INC     DPTR
801B8F E0                MOVX    A,@DPTR
801B90 FD                MOV     R5,A
801B91 EC                MOV     A,R4
801B92 6003              JZ      $ + 5H
801B94 021CA1            LJMP    ?C0113?MAINFLOW
801B97 ED                MOV     A,R5
801B98 24F6              ADD     A,#0F6H
801B9A 603D              JZ      ?C0115?MAINFLOW
801B9C 24A6              ADD     A,#0A6H
801B9E 7003              JNZ     $ + 5H
801BA0 021C35            LJMP    ?C0116?MAINFLOW
801BA3 2463              ADD     A,#063H
801BA5 6003              JZ      $ + 5H
801BA7 021CA1            LJMP    ?C0113?MAINFLOW
  538: 	{
  539: 		case 1:
801BAA         ?C0114?MAINFLOW:
  540: 			length += sprintf( DisplayBuffer + length + 1 , "%u" , Money );	
801BAA 7471              MOV     A,#LOW DisplayBuffer+01H
801BAC 2F                ADD     A,R7
801BAD F9                MOV     R1,A
801BAE E4                CLR     A
801BAF 3404              ADDC    A,#HIGH DisplayBuffer+01H
801BB1 FA                MOV     R2,A
801BB2 7B00              MOV     R3,#?C?XDATASEG
801BB4 C003              PUSH    AR3
801BB6 C002              PUSH    AR2
801BB8 C001              PUSH    AR1
801BBA 7B80              MOV     R3,#BYTE2 080030EH
801BBC 7A03              MOV     R2,#HIGH 080030EH
801BBE 790E              MOV     R1,#LOW 080030EH
801BC0 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
801BC3 A5128007B6        ECALL   ?C?PSTXDATA
801BC8 90159F            MOV     DPTR,#Money
801BCB E0                MOVX    A,@DPTR
801BCC FF                MOV     R7,A
801BCD A3                INC     DPTR
801BCE E0                MOVX    A,@DPTR
801BCF 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
801BD2 CF                XCH     A,R7
801BD3 F0                MOVX    @DPTR,A
801BD4 A3                INC     DPTR
801BD5 EF                MOV     A,R7
  541: 		break;				
801BD6 021C8F            LJMP    ?C1056?MAINFLOW
  542: 		case 10:
801BD9         ?C0115?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 7


  543: 			length += sprintf( DisplayBuffer + length + 1 , "%u.%u" , (Money / SystemParameter.curUnit),( Money %SystemPar
>> ameter.curUnit));	
801BD9 9015A1            MOV     DPTR,#length
801BDC E0                MOVX    A,@DPTR
801BDD 2471              ADD     A,#LOW DisplayBuffer+01H
801BDF F9                MOV     R1,A
801BE0 E4                CLR     A
801BE1 3404              ADDC    A,#HIGH DisplayBuffer+01H
801BE3 FA                MOV     R2,A
801BE4 7B00              MOV     R3,#?C?XDATASEG
801BE6 C003              PUSH    AR3
801BE8 C002              PUSH    AR2
801BEA C001              PUSH    AR1
801BEC 7B80              MOV     R3,#BYTE2 0800311H
801BEE 7A03              MOV     R2,#HIGH 0800311H
801BF0 7911              MOV     R1,#LOW 0800311H
801BF2 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
801BF5 A5128007B6        ECALL   ?C?PSTXDATA
801BFA 900468            MOV     DPTR,#SystemParameter+048H
801BFD E0                MOVX    A,@DPTR
801BFE FA                MOV     R2,A
801BFF A3                INC     DPTR
801C00 E0                MOVX    A,@DPTR
801C01 FB                MOV     R3,A
801C02 90159F            MOV     DPTR,#Money
801C05 E0                MOVX    A,@DPTR
801C06 FE                MOV     R6,A
801C07 A3                INC     DPTR
801C08 E0                MOVX    A,@DPTR
801C09 FF                MOV     R7,A
801C0A AD03              MOV     R5,AR3
801C0C AC02              MOV     R4,AR2
801C0E A51280056C        ECALL   ?C?UIDIV
801C13 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
801C16 EE                MOV     A,R6
801C17 F0                MOVX    @DPTR,A
801C18 A3                INC     DPTR
801C19 EF                MOV     A,R7
801C1A F0                MOVX    @DPTR,A
801C1B 90159F            MOV     DPTR,#Money
801C1E E0                MOVX    A,@DPTR
801C1F FE                MOV     R6,A
801C20 A3                INC     DPTR
801C21 E0                MOVX    A,@DPTR
801C22 FF                MOV     R7,A
801C23 AD03              MOV     R5,AR3
801C25 AC02              MOV     R4,AR2
801C27 A51280056C        ECALL   ?C?UIDIV
801C2C 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
801C2F EC                MOV     A,R4
801C30 F0                MOVX    @DPTR,A
801C31 A3                INC     DPTR
801C32 ED                MOV     A,R5
801C33         
  544: 		break;
801C33 805A              SJMP    ?C1056?MAINFLOW
  545: 		case 100:
801C35         ?C0116?MAINFLOW:
  546: 			length += sprintf( DisplayBuffer + length + 1 , "%u.%02u" , (Money / SystemParameter.curUnit),( Money %SystemP
>> arameter.curUnit));	
801C35 9015A1            MOV     DPTR,#length
801C38 E0                MOVX    A,@DPTR
801C39 2471              ADD     A,#LOW DisplayBuffer+01H
801C3B F9                MOV     R1,A
801C3C E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 8


801C3D 3404              ADDC    A,#HIGH DisplayBuffer+01H
801C3F FA                MOV     R2,A
801C40 7B00              MOV     R3,#?C?XDATASEG
801C42 C003              PUSH    AR3
801C44 C002              PUSH    AR2
801C46 C001              PUSH    AR1
801C48 7B80              MOV     R3,#BYTE2 0800317H
801C4A 7A03              MOV     R2,#HIGH 0800317H
801C4C 7917              MOV     R1,#LOW 0800317H
801C4E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
801C51 A5128007B6        ECALL   ?C?PSTXDATA
801C56 900468            MOV     DPTR,#SystemParameter+048H
801C59 E0                MOVX    A,@DPTR
801C5A FA                MOV     R2,A
801C5B A3                INC     DPTR
801C5C E0                MOVX    A,@DPTR
801C5D FB                MOV     R3,A
801C5E 90159F            MOV     DPTR,#Money
801C61 E0                MOVX    A,@DPTR
801C62 FE                MOV     R6,A
801C63 A3                INC     DPTR
801C64 E0                MOVX    A,@DPTR
801C65 FF                MOV     R7,A
801C66 AD03              MOV     R5,AR3
801C68 AC02              MOV     R4,AR2
801C6A A51280056C        ECALL   ?C?UIDIV
801C6F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
801C72 EE                MOV     A,R6
801C73 F0                MOVX    @DPTR,A
801C74 A3                INC     DPTR
801C75 EF                MOV     A,R7
801C76 F0                MOVX    @DPTR,A
801C77 90159F            MOV     DPTR,#Money
801C7A E0                MOVX    A,@DPTR
801C7B FE                MOV     R6,A
801C7C A3                INC     DPTR
801C7D E0                MOVX    A,@DPTR
801C7E FF                MOV     R7,A
801C7F AD03              MOV     R5,AR3
801C81 AC02              MOV     R4,AR2
801C83 A51280056C        ECALL   ?C?UIDIV
801C88 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
801C8B EC                MOV     A,R4
801C8C F0                MOVX    @DPTR,A
801C8D A3                INC     DPTR
801C8E ED                MOV     A,R5
801C8F         
801C8F F0                MOVX    @DPTR,A
801C90 D001              POP     AR1
801C92 D002              POP     AR2
801C94 D003              POP     AR3
801C96 A512800949        ECALL   _sprintf
801C9B 9015A1            MOV     DPTR,#length
801C9E E0                MOVX    A,@DPTR
801C9F 2F                ADD     A,R7
801CA0 F0                MOVX    @DPTR,A
  547: 		break;		
  548: 	}		
801CA1         ?C0113?MAINFLOW:
  549: 	length++;
801CA1 9015A1            MOV     DPTR,#length
801CA4 E0                MOVX    A,@DPTR
801CA5 04                INC     A
801CA6 F0                MOVX    @DPTR,A
  550: 	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 9


  551: 	DisplayStr( 0, 0, 1, DisplayBuffer, length );
801CA7 D21A              SETB    ?_DisplayStr?BIT
801CA9 7B00              MOV     R3,#?C?XDATASEG
801CAB 7A04              MOV     R2,#HIGH DisplayBuffer
801CAD 7970              MOV     R1,#LOW DisplayBuffer
801CAF 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
801CB2 A5128007B6        ECALL   ?C?PSTXDATA
801CB7 9015A1            MOV     DPTR,#length
801CBA E0                MOVX    A,@DPTR
801CBB A512808858        ECALL   ?L?COM0006
  552: 	DisplayStr( 0, 1, 1, DispInformationTable[4].str, DispInformationTable[4].len - 1 );	
801CC0 D21A              SETB    ?_DisplayStr?BIT
801CC2 900481            MOV     DPTR,#DispInformationTable+010H
801CC5 A5128007C0        ECALL   ?C?PLDCODE
801CCA 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
801CCD A5128007B6        ECALL   ?C?PSTXDATA
801CD2 900484            MOV     DPTR,#DispInformationTable+013H
801CD5 E4                CLR     A
801CD6 93                MOVC    A,@A+DPTR
801CD7 14                DEC     A
801CD8 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
801CDB F0                MOVX    @DPTR,A
801CDC 7D01              MOV     R5,#01H
801CDE E4                CLR     A
801CDF FF                MOV     R7,A
801CE0 A51280885F        ECALL   _DisplayStr
  553: 	WaitForWork( 100 , &Lcd );
801CE5 E4                CLR     A
801CE6 7F64              MOV     R7,#064H
801CE8 FE                MOV     R6,A
801CE9 FD                MOV     R5,A
801CEA FC                MOV     R4,A
801CEB 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
801CEE 7423              MOV     A,#HIGH Lcd
801CF0 F0                MOVX    @DPTR,A
801CF1 A3                INC     DPTR
801CF2 7469              MOV     A,#LOW Lcd
801CF4 F0                MOVX    @DPTR,A
801CF5 A512808338        ECALL   _WaitForWork
  554: 	return( 0 );
801CFA 7F00              MOV     R7,#00H
  555: }
801CFC         ?C0112?MAINFLOW:
801CFC A522              ERET    
----- FUNCTION _DisplayCurrentMoney (END) -------


----- FUNCTION GetBill (BEGIN) -----
 FILE: 'mainflow.c'
 2170: u_char GetBill( )
 2171: {
 2172: 	u_int xdata CurrentDomain = 0;
 2173: 	u_int xdata CoinSum = 0;	
801CFE E4                CLR     A
801CFF 90159B            MOV     DPTR,#CurrentDomain
801D02 F0                MOVX    @DPTR,A
801D03 A3                INC     DPTR
801D04 F0                MOVX    @DPTR,A
 2174: //	Trace( "\n CheckBill");
801D05 A3                INC     DPTR
801D06 F0                MOVX    @DPTR,A
801D07 A3                INC     DPTR
801D08 F0                MOVX    @DPTR,A
 2175: 
 2176: 	CurrentDomain = 0;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 10


801D09 90159B            MOV     DPTR,#CurrentDomain
801D0C F0                MOVX    @DPTR,A
801D0D A3                INC     DPTR
801D0E F0                MOVX    @DPTR,A
 2177: //	CurrentTransType = 1;//正在交易
 2178: 	if( CurrentPayed > 0 )//确实有钱收入了才是进入了服务状态
801D0F D3                SETB    C
801D10 900B26            MOV     DPTR,#CurrentPayed+01H
801D13 E0                MOVX    A,@DPTR
801D14 9400              SUBB    A,#00H
801D16 900B25            MOV     DPTR,#CurrentPayed
801D19 E0                MOVX    A,@DPTR
801D1A 9400              SUBB    A,#00H
801D1C 4007              JC      ?C0477?MAINFLOW
 2179: 		CasherGetMachineState( 1 );//交易状态
801D1E 7F01              MOV     R7,#01H
801D20 A512807FA6        ECALL   _CasherGetMachineState
801D25         ?C0477?MAINFLOW:
 2180: //	ClearDisplayLine( 2 );	
 2181: 	if( KeyLockFlag )
801D25 302907            JNB     KeyLockFlag,?C0478?MAINFLOW
 2182: 	{
 2183: //		Trace( "\n KeyUnLock");
 2184: 		KeyUnLock(); //打开键盘，让客户按键
801D28 A512807F45        ECALL   KeyUnLock
 2185: 		KeyLockFlag = 0;		
801D2D C229              CLR     KeyLockFlag
 2186: 	}	
801D2F         ?C0478?MAINFLOW:
 2187: 	
 2188: 	if( QueryFlag == 1 )
801D2F 302776            JNB     QueryFlag,?C1080?MAINFLOW
 2189: 	{
 2190: 		DisplayCursorState( 0, 1, 1, 0, 1 );
801D32 D21A              SETB    ?_DisplayCursorState?BIT
801D34 E4                CLR     A
801D35 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
801D38 F0                MOVX    @DPTR,A
801D39 D21B              SETB    ?_DisplayCursorState?BIT+01H
801D3B 7D01              MOV     R5,#01H
801D3D FF                MOV     R7,A
801D3E A51280897C        ECALL   _DisplayCursorState
 2191: 		QueryFlag = 0;
801D43 C227              CLR     QueryFlag
 2192: 		QueryTimer = 0;
801D45 E4                CLR     A
801D46 F514              MOV     QueryTimer,A
 2193: 		CurrentStockCode = 0;
801D48 900B28            MOV     DPTR,#CurrentStockCode
801D4B F0                MOVX    @DPTR,A
 2194: 	}
801D4C         ?C0479?MAINFLOW:
 2195: 
 2196: 	/////
 2197: 	CoinSum = GetCoin();
801D4C 805A              SJMP    ?C1080?MAINFLOW
801D4E         ?C0480?MAINFLOW:
 2198: 	while ( CoinSum ) 
801D4E 90159D            MOV     DPTR,#CoinSum
801D51 E0                MOVX    A,@DPTR
801D52 7002              JNZ     ?C1026?MAINFLOW
801D54 A3                INC     DPTR
801D55 E0                MOVX    A,@DPTR
801D56         ?C1026?MAINFLOW:
801D56 605F              JZ      ?C0481?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 11


 2199: 	{	
 2200: 	#ifdef _COIN_INPUT_PARALLEL	
 2201: 		CurrentPayed += CoinSum ;
801D58 90159D            MOV     DPTR,#CoinSum
801D5B E0                MOVX    A,@DPTR
801D5C FE                MOV     R6,A
801D5D A3                INC     DPTR
801D5E E0                MOVX    A,@DPTR
801D5F FF                MOV     R7,A
801D60 900B25            MOV     DPTR,#CurrentPayed
801D63 EE                MOV     A,R6
801D64 8FF0              MOV     B,R7
801D66 A512800600        ECALL   ?C?IILDX
 2202: 		TradeCounter.TrueCurrencySum += CoinSum;
801D6B 900AF1            MOV     DPTR,#TradeCounter
801D6E A51280073E        ECALL   ?C?LLDXDATA0
801D73 E4                CLR     A
801D74 FC                MOV     R4,A
801D75 FD                MOV     R5,A
801D76 A51280062E        ECALL   ?C?LADD
801D7B 900AF1            MOV     DPTR,#TradeCounter
801D7E A512800792        ECALL   ?C?LSTXDATA
 2203: 		TradeCounter.CoinSum += CoinSum;
801D83 900AF9            MOV     DPTR,#TradeCounter+08H
801D86 A51280073E        ECALL   ?C?LLDXDATA0
801D8B 90159D            MOV     DPTR,#CoinSum
801D8E E0                MOVX    A,@DPTR
801D8F FE                MOV     R6,A
801D90 A3                INC     DPTR
801D91 E0                MOVX    A,@DPTR
801D92 FF                MOV     R7,A
801D93 E4                CLR     A
801D94 FC                MOV     R4,A
801D95 FD                MOV     R5,A
801D96 A51280062E        ECALL   ?C?LADD
801D9B 900AF9            MOV     DPTR,#TradeCounter+08H
801D9E A512800792        ECALL   ?C?LSTXDATA
 2204: 	#else
 2205: 		CurrentPayed += CoinSum * COINMULTIPLE ;
 2206: 		TradeCounter.TrueCurrencySum += CoinSum * COINMULTIPLE;
 2207: 		TradeCounter.CoinSum += CoinSum * COINMULTIPLE;
 2208: 	#endif	
 2209: 		SchedulerProcess();
801DA3 A5128090B6        ECALL   SchedulerProcess
 2210: 		CoinSum = GetCoin();	
801DA8         
801DA8 A51280926F        ECALL   GetCoin
801DAD 90159D            MOV     DPTR,#CoinSum
801DB0 EE                MOV     A,R6
801DB1 F0                MOVX    @DPTR,A
801DB2 A3                INC     DPTR
801DB3 EF                MOV     A,R7
801DB4 F0                MOVX    @DPTR,A
 2211: 	}	
801DB5 8097              SJMP    ?C0480?MAINFLOW
801DB7         ?C0481?MAINFLOW:
 2212: 
 2213: //	CurrentPayed = 300;
 2214: 
 2215: 	if( SystemParameter.BillNo == 1 )
801DB7 900427            MOV     DPTR,#SystemParameter+07H
801DBA E0                MOVX    A,@DPTR
801DBB 6401              XRL     A,#01H
801DBD 6003              JZ      $ + 5H
801DBF 021ED9            LJMP    ?C0482?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 12


 2216: 	{
 2217: 		if( CasherIsCashIn() )
801DC2 A51280958C        ECALL   CasherIsCashIn
801DC7 EF                MOV     A,R7
801DC8 7003              JNZ     $ + 5H
801DCA 021ED9            LJMP    ?C0482?MAINFLOW
 2218: 		{
 2219: 			CurrentDomain = GetComingCash( );//读取已检测到的纸币面额	
801DCD A51281307A        ECALL   GetComingCash
801DD2 90159B            MOV     DPTR,#CurrentDomain
801DD5 EE                MOV     A,R6
801DD6 F0                MOVX    @DPTR,A
801DD7 A3                INC     DPTR
801DD8 EF                MOV     A,R7
801DD9 F0                MOVX    @DPTR,A
 2220: 			if( CurrentDomain == 0 )//不可识别的纸币
801DDA 4E                ORL     A,R6
801DDB 7008              JNZ     ?C0484?MAINFLOW
 2221: 			{
 2222: 				Trace( "\n Do not know bill" );		
 2223: 				RejectBill();//退钞				
801DDD A512808FEE        ECALL   RejectBill
 2224: 			}
801DE2 021ED0            LJMP    ?C0485?MAINFLOW
801DE5         ?C0484?MAINFLOW:
 2225: 			else
 2226: 			{
 2227: 				if( CurrentPayed + CurrentDomain*BILLMULTIPLE > SystemParameter.BanknoteMax )
801DE5 90159B            MOV     DPTR,#CurrentDomain
801DE8 E0                MOVX    A,@DPTR
801DE9 FE                MOV     R6,A
801DEA A3                INC     DPTR
801DEB E0                MOVX    A,@DPTR
801DEC FF                MOV     R7,A
801DED 900B26            MOV     DPTR,#CurrentPayed+01H
801DF0 E0                MOVX    A,@DPTR
801DF1 2F                ADD     A,R7
801DF2 FF                MOV     R7,A
801DF3 900B25            MOV     DPTR,#CurrentPayed
801DF6 E0                MOVX    A,@DPTR
801DF7 3E                ADDC    A,R6
801DF8 FE                MOV     R6,A
801DF9 C3                CLR     C
801DFA 90042C            MOV     DPTR,#SystemParameter+0CH
801DFD E0                MOVX    A,@DPTR
801DFE 9F                SUBB    A,R7
801DFF 90042B            MOV     DPTR,#SystemParameter+0BH
801E02 E0                MOVX    A,@DPTR
801E03 9E                SUBB    A,R6
801E04 5034              JNC     ?C0486?MAINFLOW
 2228: 				{
 2229: 					//收到的钱超出了限制,退出纸币
 2230: 					DisplayLine = STR_DOMAIN_ERROR;
801E06 900B27            MOV     DPTR,#DisplayLine
801E09 7403              MOV     A,#03H
801E0B A512808829        ECALL   ?L?COM0003
 2231: 					DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
>> 
 2232: 					ClearDisplayLine( 2 );
801E10 7F02              MOV     R7,#02H
801E12 A512808FB8        ECALL   _ClearDisplayLine
 2233: 					WaitForWork( 1500, NULL );				
801E17 E4                CLR     A
801E18 7FDC              MOV     R7,#0DCH
801E1A 7E05              MOV     R6,#05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 13


801E1C A512808330        ECALL   ?L?COM000D
 2234: 					RejectBill();//退钞			
801E21 A512808FEE        ECALL   RejectBill
 2235: 					if( CurrentPayed == 0 )
801E26 900B25            MOV     DPTR,#CurrentPayed
801E29 E0                MOVX    A,@DPTR
801E2A FC                MOV     R4,A
801E2B A3                INC     DPTR
801E2C E0                MOVX    A,@DPTR
801E2D FD                MOV     R5,A
801E2E 4C                ORL     A,R4
801E2F 7002              JNZ     ?C0487?MAINFLOW
 2236: 					{
 2237: 						UpdataDisp = 0;
 2238: 						return 2;
801E31 8049              SJMP    ?C1081?MAINFLOW
 2239: 					}
801E33         ?C0487?MAINFLOW:
 2240: 					else
 2241: 					{
 2242: 						DisplayCurrentMoney( CurrentPayed );
801E33 AF05              MOV     R7,AR5
801E35 AE04              MOV     R6,AR4
 2243: 						return 0;
801E37 021F9B            LJMP    ?C1082?MAINFLOW
 2244: 					}
 2245: 				}
801E3A         ?C0486?MAINFLOW:
 2246: 				Trace( "\n Have cash in");		
 2247: 				Trace( "\n CurrentPayed = %d",CurrentPayed );		
 2248: 				CasherAccept(); //准备收下		
801E3A A512813040        ECALL   CasherAccept
 2249: 				LzjSecTimer = DEFAULT_GET_BILL_TIMEOUT;
801E3F 751D0A            MOV     LzjSecTimer,#0AH
801E42         ?C0490?MAINFLOW:
 2250: 				while( LzjSecTimer )
801E42 E51D              MOV     A,LzjSecTimer
801E44 600F              JZ      ?C0491?MAINFLOW
 2251: 				{
 2252: 					if( CasherIsAcceptOK() )							
801E46 A512813071        ECALL   CasherIsAcceptOK
801E4B EF                MOV     A,R7
801E4C 7007              JNZ     ?C0491?MAINFLOW
 2253: 						break;			
801E4E         ?C0492?MAINFLOW:
 2254: 					SchedulerProcess();
801E4E A5128090B6        ECALL   SchedulerProcess
 2255: 				}
801E53 80ED              SJMP    ?C0490?MAINFLOW
801E55         ?C0491?MAINFLOW:
 2256: 				if( LzjSecTimer == 0 )
801E55 E51D              MOV     A,LzjSecTimer
801E57 702C              JNZ     ?C0493?MAINFLOW
 2257: 				{
 2258: 					Trace( "\n Out Cash" );
 2259: 					RejectBill();//退钞
801E59 A512808FEE        ECALL   RejectBill
 2260: 					SystemParameter.DoubtCash = CurrentDomain * BILLMULTIPLE;				
801E5E 90159B            MOV     DPTR,#CurrentDomain
801E61 E0                MOVX    A,@DPTR
801E62 FF                MOV     R7,A
801E63 A3                INC     DPTR
801E64 E0                MOVX    A,@DPTR
801E65 90042D            MOV     DPTR,#SystemParameter+0DH
801E68 CF                XCH     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 14


801E69 F0                MOVX    @DPTR,A
801E6A A3                INC     DPTR
801E6B EF                MOV     A,R7
801E6C F0                MOVX    @DPTR,A
 2261: 					SaveGlobalParam();
801E6D A51280DC7C        ECALL   SaveGlobalParam
 2262: 					if( CurrentPayed == 0 )
801E72 900B25            MOV     DPTR,#CurrentPayed
801E75 E0                MOVX    A,@DPTR
801E76 7002              JNZ     ?C1027?MAINFLOW
801E78 A3                INC     DPTR
801E79 E0                MOVX    A,@DPTR
801E7A         ?C1027?MAINFLOW:
801E7A 7054              JNZ     ?C0485?MAINFLOW
 2263: 					{					
 2264: 						UpdataDisp = 0;
801E7C         
801E7C 900B29            MOV     DPTR,#UpdataDisp
801E7F F0                MOVX    @DPTR,A
 2265: 						return 2;	
801E80 7F02              MOV     R7,#02H
801E82 021FA2            LJMP    ?C0488?MAINFLOW
 2266: 					}
 2267: 				}
801E85         ?C0493?MAINFLOW:
 2268: 				else
 2269: 				{
 2270: 					Trace( "\n Get in Cash Ok" );
 2271: 			//		CurrentDomain = GetCash();
 2272: 					Trace( "\n CurrentDomain = %d",CurrentDomain );		
 2273: 					CurrentPayed += CurrentDomain * BILLMULTIPLE;	
801E85 90159B            MOV     DPTR,#CurrentDomain
801E88 E0                MOVX    A,@DPTR
801E89 FE                MOV     R6,A
801E8A A3                INC     DPTR
801E8B E0                MOVX    A,@DPTR
801E8C FF                MOV     R7,A
801E8D 900B25            MOV     DPTR,#CurrentPayed
801E90 EE                MOV     A,R6
801E91 8FF0              MOV     B,R7
801E93 A512800600        ECALL   ?C?IILDX
 2274: 					TradeCounter.TrueCurrencySum += CurrentDomain * BILLMULTIPLE;
801E98 900AF1            MOV     DPTR,#TradeCounter
801E9B A51280073E        ECALL   ?C?LLDXDATA0
801EA0 E4                CLR     A
801EA1 FC                MOV     R4,A
801EA2 FD                MOV     R5,A
801EA3 A51280062E        ECALL   ?C?LADD
801EA8 900AF1            MOV     DPTR,#TradeCounter
801EAB A512800792        ECALL   ?C?LSTXDATA
 2275: 					TradeCounter.CashSum += CurrentDomain * BILLMULTIPLE;
801EB0 900AF5            MOV     DPTR,#TradeCounter+04H
801EB3 A51280073E        ECALL   ?C?LLDXDATA0
801EB8 90159B            MOV     DPTR,#CurrentDomain
801EBB E0                MOVX    A,@DPTR
801EBC FE                MOV     R6,A
801EBD A3                INC     DPTR
801EBE E0                MOVX    A,@DPTR
801EBF FF                MOV     R7,A
801EC0 E4                CLR     A
801EC1 FC                MOV     R4,A
801EC2 FD                MOV     R5,A
801EC3 A51280062E        ECALL   ?C?LADD
801EC8 900AF5            MOV     DPTR,#TradeCounter+04H
801ECB A512800792        ECALL   ?C?LSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 15


 2276: 				}			
 2277: 			}	
801ED0         ?C0485?MAINFLOW:
 2278: 			WaitForWork( 20, NULL );
801ED0 E4                CLR     A
801ED1 7F14              MOV     R7,#014H
801ED3 FE                MOV     R6,A
801ED4 A512808330        ECALL   ?L?COM000D
 2279: 		}
 2280: 	}	
801ED9         ?C0482?MAINFLOW:
 2281: 
 2282: 	//判断收入的金额
 2283: 	if( CurrentPayed >= SystemParameter.BanknoteMax )
801ED9 90042B            MOV     DPTR,#SystemParameter+0BH
801EDC E0                MOVX    A,@DPTR
801EDD FE                MOV     R6,A
801EDE A3                INC     DPTR
801EDF E0                MOVX    A,@DPTR
801EE0 FF                MOV     R7,A
801EE1 C3                CLR     C
801EE2 900B26            MOV     DPTR,#CurrentPayed+01H
801EE5 E0                MOVX    A,@DPTR
801EE6 9F                SUBB    A,R7
801EE7 900B25            MOV     DPTR,#CurrentPayed
801EEA E0                MOVX    A,@DPTR
801EEB 9E                SUBB    A,R6
801EEC 5003              JNC     $ + 5H
801EEE 021F93            LJMP    ?C0496?MAINFLOW
 2284: 	{		
 2285: 		WaitForWork( 50, NULL );
801EF1 E4                CLR     A
801EF2 7F32              MOV     R7,#032H
801EF4 FE                MOV     R6,A
801EF5 A512808330        ECALL   ?L?COM000D
 2286: 		LzjMSecTimer = 400;
801EFA 751690            MOV     LzjMSecTimer,#090H
801EFD         ?C0497?MAINFLOW:
 2287: 		while( LzjMSecTimer )
801EFD E516              MOV     A,LzjMSecTimer
801EFF 6052              JZ      ?C0498?MAINFLOW
 2288: 		{
 2289: 			CoinSum = GetCoin();			
801F01 A51280926F        ECALL   GetCoin
801F06 90159D            MOV     DPTR,#CoinSum
801F09 EE                MOV     A,R6
801F0A F0                MOVX    @DPTR,A
801F0B A3                INC     DPTR
801F0C EF                MOV     A,R7
801F0D F0                MOVX    @DPTR,A
 2290: 			if ( CoinSum ) 
801F0E 4E                ORL     A,R6
801F0F 603B              JZ      ?C0499?MAINFLOW
 2291: 			{
 2292: 				Trace( "\n Get CoinSum" );
 2293: 			#ifdef _COIN_INPUT_PARALLEL	
 2294: 				CurrentPayed += CoinSum ;
801F11 90159D            MOV     DPTR,#CoinSum
801F14 E0                MOVX    A,@DPTR
801F15 FE                MOV     R6,A
801F16 A3                INC     DPTR
801F17 E0                MOVX    A,@DPTR
801F18 FF                MOV     R7,A
801F19 900B25            MOV     DPTR,#CurrentPayed
801F1C EE                MOV     A,R6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 16


801F1D 8FF0              MOV     B,R7
801F1F A512800600        ECALL   ?C?IILDX
 2295: 				TradeCounter.TrueCurrencySum += CoinSum;
801F24 900AF1            MOV     DPTR,#TradeCounter
801F27 A51280073E        ECALL   ?C?LLDXDATA0
801F2C E4                CLR     A
801F2D FC                MOV     R4,A
801F2E FD                MOV     R5,A
801F2F A51280062E        ECALL   ?C?LADD
801F34 900AF1            MOV     DPTR,#TradeCounter
801F37 A512800792        ECALL   ?C?LSTXDATA
 2296: 				TradeCounter.CoinSum += CoinSum;
801F3C 900AF9            MOV     DPTR,#TradeCounter+08H
801F3F A51280073E        ECALL   ?C?LLDXDATA0
801F44 90159D            MOV     DPTR,#CoinSum
801F47 A51280909E        ECALL   ?L?COM0020
 2297: 			#else
 2298: 				CurrentPayed += CoinSum * COINMULTIPLE ;
 2299: 				TradeCounter.TrueCurrencySum += CoinSum * COINMULTIPLE;
 2300: 				TradeCounter.CoinSum += CoinSum * COINMULTIPLE;
 2301: 			#endif					
 2302: 				LzjMSecTimer = 400;	
 2303: 				SchedulerProcess();
 2304: 			}
801F4C         ?C0499?MAINFLOW:
 2305: 			SchedulerProcess();
801F4C A5128090B6        ECALL   SchedulerProcess
 2306: 		}
801F51 80AA              SJMP    ?C0497?MAINFLOW
801F53         ?C0498?MAINFLOW:
 2307: 		DisableBillDev();//禁能纸、硬币品
801F53 A5128095A4        ECALL   DisableBillDev
 2308: 		DisplayCurrentMoney( CurrentPayed );
801F58 A512801AFF        ECALL   ?L?COM001F
 2309: 
 2310: 		if( SystemParameter.BillNo == 1 )
801F5D 900427            MOV     DPTR,#SystemParameter+07H
801F60 E0                MOVX    A,@DPTR
801F61 B40121            CJNE    A,#01H,?C0500?MAINFLOW
 2311: 		{			
 2312: 			LzjSecTimer = 1;
801F64 751D01            MOV     LzjSecTimer,#01H
801F67         ?C0501?MAINFLOW:
 2313: 			while( LzjSecTimer )
801F67 E51D              MOV     A,LzjSecTimer
801F69 601A              JZ      ?C0500?MAINFLOW
 2314: 			{
 2315: 				if( CasherIsCashIn() )//是否有纸币进入
801F6B A51280958C        ECALL   CasherIsCashIn
801F70 EF                MOV     A,R7
801F71 6007              JZ      ?C0503?MAINFLOW
 2316: 				{	
 2317: 					RejectBill();//退钞																
801F73 A512808FEE        ECALL   RejectBill
 2318: 					break;
801F78 800B              SJMP    ?C0500?MAINFLOW
 2319: 				}
801F7A         ?C0503?MAINFLOW:
 2320: 				WaitForWork( 10, NULL );
801F7A E4                CLR     A
801F7B 7F0A              MOV     R7,#0AH
801F7D FE                MOV     R6,A
801F7E A512808330        ECALL   ?L?COM000D
 2321: 			}
801F83 80E2              SJMP    ?C0501?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 17


 2322: 		}		
801F85         ?C0500?MAINFLOW:
 2323: 		WaitForWork( 500, NULL );
801F85 E4                CLR     A
801F86 7FF4              MOV     R7,#0F4H
801F88 7E01              MOV     R6,#01H
801F8A A512808330        ECALL   ?L?COM000D
 2324: 		return 1;		
801F8F 7F01              MOV     R7,#01H
801F91 800F              SJMP    ?C0488?MAINFLOW
 2325: 	}	
801F93         ?C0496?MAINFLOW:
 2326: 	else	
 2327: 	{
 2328: 		DisplayCurrentMoney( CurrentPayed );
801F93 900B25            MOV     DPTR,#CurrentPayed
801F96 E0                MOVX    A,@DPTR
801F97 FE                MOV     R6,A
801F98 A3                INC     DPTR
801F99 E0                MOVX    A,@DPTR
801F9A FF                MOV     R7,A
801F9B         
801F9B A512801B07        ECALL   _DisplayCurrentMoney
 2329: 		return 0;	
801FA0 7F00              MOV     R7,#00H
 2330: 	}
 2331: }
801FA2         ?C0488?MAINFLOW:
801FA2 A522              ERET    
----- FUNCTION GetBill (END) -------


----- FUNCTION SystemInit (BEGIN) -----
 FILE: 'mainflow.c'
 1439: u_char SystemInit()
 1440: {    
 1441: 	u_char xdata i = 0;  
 1442: 
801FA4 E4                CLR     A
801FA5 90159B            MOV     DPTR,#i
801FA8 F0                MOVX    @DPTR,A
 1443: 	memset( &SystemParameter, 0, sizeof( SystemParameter ) );
801FA9 FE                MOV     R6,A
801FAA 7F4E              MOV     R7,#04EH
801FAC FD                MOV     R5,A
801FAD 7B00              MOV     R3,#?C?XDATASEG
801FAF 7A04              MOV     R2,#HIGH SystemParameter
801FB1 7920              MOV     R1,#LOW SystemParameter
801FB3 A5128008A6        ECALL   ?C?MEMSET
 1444: 	WaitForWork( 100, NULL );
801FB8 E4                CLR     A
801FB9 7F64              MOV     R7,#064H
801FBB FE                MOV     R6,A
801FBC A512808330        ECALL   ?L?COM000D
 1445:     //Trace( "\n Begin" );
 1446: 	DisplayStr( 0, 0, 1, DispInformationTable[ STR_TYPE_VER ].str, DispInformationTable[ STR_TYPE_VER ].len );	
801FC1 D21A              SETB    ?_DisplayStr?BIT
801FC3 900501            MOV     DPTR,#DispInformationTable+090H
801FC6 A5128007C0        ECALL   ?C?PLDCODE
801FCB 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
801FCE A5128007B6        ECALL   ?C?PSTXDATA
801FD3 900504            MOV     DPTR,#DispInformationTable+093H
801FD6 A512808856        ECALL   ?L?COM0005
 1447: 	DisplayStr( 0, 1, 1, DispInformationTable[ STR_PLEASE_WAIT ].str, DispInformationTable[ STR_PLEASE_WAIT ].len );
>> 	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 18


801FDB D21A              SETB    ?_DisplayStr?BIT
801FDD 9004B9            MOV     DPTR,#DispInformationTable+048H
801FE0 A5128007C0        ECALL   ?C?PLDCODE
801FE5 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
801FE8 A5128007B6        ECALL   ?C?PSTXDATA
801FED 9004BC            MOV     DPTR,#DispInformationTable+04BH
801FF0 E4                CLR     A
801FF1 93                MOVC    A,@A+DPTR
801FF2 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
801FF5 F0                MOVX    @DPTR,A
801FF6 7D01              MOV     R5,#01H
801FF8 E4                CLR     A
801FF9 FF                MOV     R7,A
801FFA A51280885F        ECALL   _DisplayStr
 1448: 	WaitForWork( 100, NULL );
801FFF E4                CLR     A
802000 7F64              MOV     R7,#064H
802002 FE                MOV     R6,A
802003 A512808330        ECALL   ?L?COM000D
 1449: 	return 0;
802008 7F00              MOV     R7,#00H
 1450: }
80200A         ?C0321?MAINFLOW:
80200A A522              ERET    
----- FUNCTION SystemInit (END) -------


----- FUNCTION QueryDisplayInputCode (BEGIN) -----
 FILE: 'mainflow.c'
 1932: u_char QueryDisplayInputCode()
 1933: {
 1934: 	u_char xdata MyKey = 0 ;
 1935: 	u_char xdata len = 0;
80200C E4                CLR     A
80200D 90159B            MOV     DPTR,#MyKey
802010 F0                MOVX    @DPTR,A
 1936: 
802011 A3                INC     DPTR
802012 F0                MOVX    @DPTR,A
 1937: 	Trace("\n QueryDisplayInputCode" );	
 1938: 	memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );															
802013 FE                MOV     R6,A
802014 7F14              MOV     R7,#014H
802016 FD                MOV     R5,A
802017 7B00              MOV     R3,#?C?XDATASEG
802019 7A04              MOV     R2,#HIGH DisplayBuffer
80201B 7970              MOV     R1,#LOW DisplayBuffer
80201D A5128008A6        ECALL   ?C?MEMSET
 1939: 	DisplayLine = STR_INPUT_GOODS;	
802022 900B27            MOV     DPTR,#DisplayLine
802025 7404              MOV     A,#04H
802027 F0                MOVX    @DPTR,A
 1940: 	if( CurrentStockCode != 0 )
802028 A3                INC     DPTR
802029 E0                MOVX    A,@DPTR
80202A FF                MOV     R7,A
80202B 7003              JNZ     $ + 5H
80202D 0220C6            LJMP    ?C0425?MAINFLOW
 1941: 	{
 1942: 		len = sprintf( DisplayBuffer,"%s%bu", DispInformationTable[DisplayLine].str, CurrentStockCode );		
802030 7B80              MOV     R3,#BYTE2 0800404H
802032 7A04              MOV     R2,#HIGH 0800404H
802034 7904              MOV     R1,#LOW 0800404H
802036 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802039 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 19


80203E 900B27            MOV     DPTR,#DisplayLine
802041 E0                MOVX    A,@DPTR
802042 25E0              ADD     A,ACC
802044 25E0              ADD     A,ACC
802046 2471              ADD     A,#LOW DispInformationTable
802048 F582              MOV     DPL,A
80204A E4                CLR     A
80204B 3404              ADDC    A,#HIGH DispInformationTable
80204D F583              MOV     DPH,A
80204F A5128007C0        ECALL   ?C?PLDCODE
802054 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802057 A5128007B6        ECALL   ?C?PSTXDATA
80205C 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80205F EF                MOV     A,R7
802060 F0                MOVX    @DPTR,A
802061 7B00              MOV     R3,#?C?XDATASEG
802063 7A04              MOV     R2,#HIGH DisplayBuffer
802065 7970              MOV     R1,#LOW DisplayBuffer
802067 A512800949        ECALL   _sprintf
80206C 90159C            MOV     DPTR,#len
80206F EF                MOV     A,R7
802070 F0                MOVX    @DPTR,A
 1943: 		DisplayStr( 0, __LINE0__, 1, DisplayBuffer, len + 1 );
802071 D21A              SETB    ?_DisplayStr?BIT
802073 7B00              MOV     R3,#?C?XDATASEG
802075 7A04              MOV     R2,#HIGH DisplayBuffer
802077 7970              MOV     R1,#LOW DisplayBuffer
802079 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80207C A5128007B6        ECALL   ?C?PSTXDATA
802081 EF                MOV     A,R7
802082 04                INC     A
802083 A512808858        ECALL   ?L?COM0006
 1944: 		if( CurrentStockCode < 10 )
802088 900B28            MOV     DPTR,#CurrentStockCode
80208B E0                MOVX    A,@DPTR
80208C C3                CLR     C
80208D 940A              SUBB    A,#0AH
80208F 5022              JNC     ?C0426?MAINFLOW
 1945: 		{
 1946: 			ClearDisplayLine( 2 );
802091 7F02              MOV     R7,#02H
802093 A512808FB8        ECALL   _ClearDisplayLine
 1947: 			DisplayCursorState( len, __LINE0__, 1, 1, 1 );	
802098 90159C            MOV     DPTR,#len
80209B E0                MOVX    A,@DPTR
80209C FF                MOV     R7,A
80209D D21A              SETB    ?_DisplayCursorState?BIT
80209F 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8020A2 7401              MOV     A,#01H
8020A4 F0                MOVX    @DPTR,A
8020A5 D21B              SETB    ?_DisplayCursorState?BIT+01H
8020A7 E4                CLR     A
8020A8 FD                MOV     R5,A
8020A9 A51280897C        ECALL   _DisplayCursorState
 1948: 			return 1;
8020AE 7F01              MOV     R7,#01H
8020B0 022161            LJMP    ?C0427?MAINFLOW
 1949: 		}
8020B3         ?C0426?MAINFLOW:
 1950: 		else
 1951: 			DisplayCursorState( 0, 1, 1, 0, 1 );
8020B3 D21A              SETB    ?_DisplayCursorState?BIT
8020B5 E4                CLR     A
8020B6 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8020B9 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 20


8020BA D21B              SETB    ?_DisplayCursorState?BIT+01H
8020BC 7D01              MOV     R5,#01H
8020BE FF                MOV     R7,A
8020BF A51280897C        ECALL   _DisplayCursorState
 1952: 	}
8020C4 8013              SJMP    ?C0429?MAINFLOW
8020C6         ?C0425?MAINFLOW:
 1953: 	else
 1954: 	{
 1955: 		DisplayCursorState( 0, 1, 1, 0, 1 );
8020C6 D21A              SETB    ?_DisplayCursorState?BIT
8020C8 E4                CLR     A
8020C9 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8020CC F0                MOVX    @DPTR,A
8020CD D21B              SETB    ?_DisplayCursorState?BIT+01H
8020CF 7D01              MOV     R5,#01H
8020D1 FF                MOV     R7,A
8020D2 A51280897C        ECALL   _DisplayCursorState
 1956: 		QueryFlag = 0;
 1957: 		QueryTimer = 0;
 1958: 		CurrentStockCode = 0;
 1959: 		UpdataDisp = 6;
 1960: 		return 1;
8020D7 8075              SJMP    ?C1073?MAINFLOW
 1961: 	}
8020D9         ?C0429?MAINFLOW:
 1962: 
 1963: 	ClearKey();
8020D9 A512808FA5        ECALL   ClearKey
 1964: 	if( ( CurrentStockCode > 99 ) || ( CurrentStockCode <= 0 ) )
8020DE 900B28            MOV     DPTR,#CurrentStockCode
8020E1 E0                MOVX    A,@DPTR
8020E2 FF                MOV     R7,A
8020E3 D3                SETB    C
8020E4 9463              SUBB    A,#063H
8020E6 5005              JNC     ?C0431?MAINFLOW
8020E8 EF                MOV     A,R7
8020E9 9400              SUBB    A,#00H
8020EB 500F              JNC     ?C0430?MAINFLOW
8020ED         ?C0431?MAINFLOW:
 1965: 	{
 1966: 		DisplayCursorState( 0, 1, 1, 0, 1 );
8020ED D21A              SETB    ?_DisplayCursorState?BIT
8020EF E4                CLR     A
8020F0 A512808816        ECALL   ?L?COM0001
 1967: 		// 客户输入错误 		
 1968: 		DisplayLine = STR_INVAILD_CHOICE;
 1969: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 1970: 		DisplayLine = STR_RE_INPUT_GOODS;
8020F5 A5128082EA        ECALL   ?L?COM0008
 1971: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 1972: 		WaitForWork( 2000 , NULL );
 1973: 		QueryFlag = 0;
8020FA         
 1974: 		QueryTimer = 0;
 1975: 		CurrentStockCode = 0;
 1976: 		UpdataDisp = 6;
 1977: 		return 1 ;
8020FA 8052              SJMP    ?C1073?MAINFLOW
 1978: 	}	
8020FC         ?C0430?MAINFLOW:
 1979: 	//输入规则正确	
 1980: 	MyKey = 0;
8020FC E4                CLR     A
8020FD 90159B            MOV     DPTR,#MyKey
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 21


802100 F0                MOVX    @DPTR,A
 1981: 	for( len = 0; len < GOODSWAYNUM; len ++ )
802101 A3                INC     DPTR
802102 F0                MOVX    @DPTR,A
802103         ?C0432?MAINFLOW:
802103 90159C            MOV     DPTR,#len
802106 E0                MOVX    A,@DPTR
802107 FF                MOV     R7,A
802108 C3                CLR     C
802109 9440              SUBB    A,#040H
80210B 502F              JNC     ?C0433?MAINFLOW
 1982: 	{
 1983: 		if( CurrentStockCode == InputGoodsWayList[len].GoodsWayNo )
80210D EF                MOV     A,R7
80210E 25E0              ADD     A,ACC
802110 25E0              ADD     A,ACC
802112 24DC              ADD     A,#LOW InputGoodsWayList
802114 F582              MOV     DPL,A
802116 E4                CLR     A
802117 342B              ADDC    A,#HIGH InputGoodsWayList
802119 F583              MOV     DPH,A
80211B E0                MOVX    A,@DPTR
80211C FF                MOV     R7,A
80211D 900B28            MOV     DPTR,#CurrentStockCode
802120 E0                MOVX    A,@DPTR
802121 B50710            CJNE    A,AR7,?C0434?MAINFLOW
 1984: 		{
 1985: 			CurrentStockCode = len;//InputGoodsWayList[len].SetArrayNo;
802124 90159C            MOV     DPTR,#len
802127 E0                MOVX    A,@DPTR
802128 900B28            MOV     DPTR,#CurrentStockCode
80212B F0                MOVX    @DPTR,A
 1986: 			MyKey = 1;
80212C 90159B            MOV     DPTR,#MyKey
80212F 7401              MOV     A,#01H
802131 F0                MOVX    @DPTR,A
 1987: 			break;
802132 8008              SJMP    ?C0433?MAINFLOW
 1988: 		}
 1989: 	}
802134         ?C0434?MAINFLOW:
802134 90159C            MOV     DPTR,#len
802137 E0                MOVX    A,@DPTR
802138 04                INC     A
802139 F0                MOVX    @DPTR,A
80213A 80C7              SJMP    ?C0432?MAINFLOW
80213C         ?C0433?MAINFLOW:
 1990: 	if( MyKey == 0 )
80213C 90159B            MOV     DPTR,#MyKey
80213F E0                MOVX    A,@DPTR
802140 701D              JNZ     ?C0436?MAINFLOW
 1991: 	{
 1992: 		DisplayCursorState( 0, 1, 1, 0, 1 );
802142 D21A              SETB    ?_DisplayCursorState?BIT
802144 A512808816        ECALL   ?L?COM0001
 1993: 		// 客户输入错误 		
 1994: 		DisplayLine = STR_INVAILD_CHOICE;
 1995: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 1996: 		DisplayLine = STR_RE_INPUT_GOODS;
802149 A5128082EA        ECALL   ?L?COM0008
 1997: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 1998: 		WaitForWork( 2000 , NULL );
 1999: 		QueryFlag = 0;
80214E         
80214E C227              CLR     QueryFlag
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 22


 2000: 		QueryTimer = 0;
802150 E4                CLR     A
802151 F514              MOV     QueryTimer,A
 2001: 		CurrentStockCode = 0;
802153 900B28            MOV     DPTR,#CurrentStockCode
802156 F0                MOVX    @DPTR,A
 2002: 		UpdataDisp = 6;
802157 A3                INC     DPTR
802158 7406              MOV     A,#06H
80215A F0                MOVX    @DPTR,A
 2003: 		return 1;
80215B 7F01              MOV     R7,#01H
80215D 8002              SJMP    ?C0427?MAINFLOW
 2004: 	}
80215F         ?C0436?MAINFLOW:
 2005: 	Trace( "\n QueryDisplayInputCode CurrentStockCode = %bu", CurrentStockCode );		
 2006: 	return 0 ;
80215F 7F00              MOV     R7,#00H
 2007: 
 2008: }
802161         ?C0427?MAINFLOW:
802161 A522              ERET    
----- FUNCTION QueryDisplayInputCode (END) -------


----- FUNCTION DispWelOrOutServ (BEGIN) -----
 FILE: 'mainflow.c'
 2068: u_char DispWelOrOutServ()
 2069: {
 2070: 	u_char xdata j = 0;
 2071: 	//显示欢迎信息或暂停服务
802163 E4                CLR     A
802164 90159B            MOV     DPTR,#j
802167 F0                MOVX    @DPTR,A
 2072: 	if( ( QueryFlag == 1 ) && ( QueryTimer != 0 ) )
802168 302709            JNB     QueryFlag,?C0449?MAINFLOW
80216B E514              MOV     A,QueryTimer
80216D 6005              JZ      ?C0449?MAINFLOW
 2073: 		return 1;
80216F 7F01              MOV     R7,#01H
802171 022361            LJMP    ?C0450?MAINFLOW
802174         ?C0449?MAINFLOW:
 2074: 	else
 2075: 		CurrentStockCode = 0;	
802174 E4                CLR     A
802175 900B28            MOV     DPTR,#CurrentStockCode
802178 F0                MOVX    @DPTR,A
802179         ?C0451?MAINFLOW:
 2076: //	if( KeyLockFlag == 0 )
 2077: //	{
 2078: //		KeyLock(); //锁定键盘，不让客户按键
 2079: //		KeyLockFlag = 1;
 2080: //	}
 2081: //	Trace( "\n DispWelOrOutServ" );
 2082: 	if( HardWareErr == 0 )
802179 900484            MOV     DPTR,#HardWareErr
80217C E0                MOVX    A,@DPTR
80217D 7002              JNZ     ?C1025?MAINFLOW
80217F A3                INC     DPTR
802180 E0                MOVX    A,@DPTR
802181         ?C1025?MAINFLOW:
802181 7005              JNZ     ?C0452?MAINFLOW
 2083: 		SystemStatus = 1;
802183 9001C6            MOV     DPTR,#SystemStatus
802186 04                INC     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 23


802187 F0                MOVX    @DPTR,A
802188         ?C0452?MAINFLOW:
 2084: 	if ( SystemStatus == 1)
802188 9001C6            MOV     DPTR,#SystemStatus
80218B E0                MOVX    A,@DPTR
80218C 6401              XRL     A,#01H
80218E 6003              JZ      $ + 5H
802190 022328            LJMP    ?C0453?MAINFLOW
 2085: 	{				
 2086: 		if( UpdataDisp/6 >= 1 )
802193 900B29            MOV     DPTR,#UpdataDisp
802196 E0                MOVX    A,@DPTR
802197 75F006            MOV     B,#06H
80219A 84                DIV     AB
80219B C3                CLR     C
80219C 9401              SUBB    A,#01H
80219E 5003              JNC     $ + 5H
8021A0 022343            LJMP    ?C0474?MAINFLOW
 2087: 		{			
 2088: 			if( SystemParameter.BillNo == 1 )
8021A3 900427            MOV     DPTR,#SystemParameter+07H
8021A6 E0                MOVX    A,@DPTR
8021A7 6401              XRL     A,#01H
8021A9 6003              JZ      $ + 5H
8021AB 02224B            LJMP    ?C0455?MAINFLOW
 2089: 			{
 2090: 	/*			if( ( IsCanInCashFlag == 1 ) && ( DeviceStatus.BillAccepter == 0 ) && ( DeviceStatus.CoinAccepter == 0 ) )
 2091: 					DisplayLine = STR_INSERT_BILL_COIN;
 2092: 				else if( DeviceStatus.CoinAccepter == 0 )
 2093: 					DisplayLine = STR_INSERT_COIN;
 2094: 				else if( ( IsCanInCashFlag == 1 ) && ( DeviceStatus.BillAccepter == 0 ) )
 2095: 					DisplayLine = STR_INSERT_BILL;*/
 2096: //				Trace( "\n DeviceStatus.BillAccepter11 = %bu", DeviceStatus.BillAccepter );			
 2097: 				if( IsCanInCashFlag == 1 )
8021AE 30264C            JNB     IsCanInCashFlag,?C0456?MAINFLOW
 2098: 				{
 2099: 					DisplayLine = STR_WELCOME;
8021B1 900B27            MOV     DPTR,#DisplayLine
8021B4 A512808829        ECALL   ?L?COM0003
 2100: 					DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].le
>> n );
 2101: 					if(  ( DeviceStatus.BillAccepter == 0 ) && ( DeviceStatus.CoinAccepter == 0 ) )
8021B9 900B1B            MOV     DPTR,#DeviceStatus
8021BC E0                MOVX    A,@DPTR
8021BD FF                MOV     R7,A
8021BE 700D              JNZ     ?C0457?MAINFLOW
8021C0 A3                INC     DPTR
8021C1 E0                MOVX    A,@DPTR
8021C2 7009              JNZ     ?C0457?MAINFLOW
 2102: 						DisplayLine = STR_INSERT_BILL_COIN;
8021C4 900B27            MOV     DPTR,#DisplayLine
8021C7 740A              MOV     A,#0AH
8021C9 F0                MOVX    @DPTR,A
8021CA 022267            LJMP    ?C0468?MAINFLOW
8021CD         ?C0457?MAINFLOW:
 2103: 					else if(  ( DeviceStatus.BillAccepter == 0 ) && ( DeviceStatus.CoinAccepter != 0 ) )
8021CD EF                MOV     A,R7
8021CE 700F              JNZ     ?C0459?MAINFLOW
8021D0 900B1C            MOV     DPTR,#DeviceStatus+01H
8021D3 E0                MOVX    A,@DPTR
8021D4 6009              JZ      ?C0459?MAINFLOW
 2104: 						DisplayLine = STR_INSERT_BILL;
8021D6 900B27            MOV     DPTR,#DisplayLine
8021D9 7422              MOV     A,#022H
8021DB F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 24


8021DC 022267            LJMP    ?C0468?MAINFLOW
8021DF         ?C0459?MAINFLOW:
 2105: 					else if(  ( DeviceStatus.BillAccepter != 0 ) && ( DeviceStatus.CoinAccepter == 0 ) )
8021DF 900B1B            MOV     DPTR,#DeviceStatus
8021E2 E0                MOVX    A,@DPTR
8021E3 6009              JZ      ?C0461?MAINFLOW
8021E5 A3                INC     DPTR
8021E6 E0                MOVX    A,@DPTR
8021E7 7005              JNZ     ?C0461?MAINFLOW
 2106: 						DisplayLine = STR_INSERT_COIN;
8021E9 900B27            MOV     DPTR,#DisplayLine
8021EC 8071              SJMP    ?C1079?MAINFLOW
8021EE         ?C0461?MAINFLOW:
 2107: 					else
 2108: 					{
 2109: 						HardWareErr |= 0x0001;					
8021EE 900485            MOV     DPTR,#HardWareErr+01H
8021F1 E0                MOVX    A,@DPTR
8021F2 4401              ORL     A,#01H
8021F4 F0                MOVX    @DPTR,A
 2110: 						DisplayLine = STR_OUT_OF_SERVICE;
8021F5 900B27            MOV     DPTR,#DisplayLine
8021F8 7410              MOV     A,#010H
8021FA F0                MOVX    @DPTR,A
 2111: 					}
 2112: 				}
8021FB 806A              SJMP    ?C0468?MAINFLOW
8021FD         ?C0456?MAINFLOW:
 2113: 				else
 2114: 				{
 2115: 					DisplayLine = STR_SHORT_CHANGE;
8021FD 900B27            MOV     DPTR,#DisplayLine
802200 7426              MOV     A,#026H
802202 A512808829        ECALL   ?L?COM0003
 2116: 					DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].le
>> n );
 2117: 					DisplayLine = STR_INSERT_MONEY;	
802207 900B27            MOV     DPTR,#DisplayLine
80220A 7423              MOV     A,#023H
80220C F0                MOVX    @DPTR,A
 2118: 					for( j = 0; j < HOPPERNUM; j ++ )
80220D E4                CLR     A
80220E 90159B            MOV     DPTR,#j
802211 F0                MOVX    @DPTR,A
802212         ?C0464?MAINFLOW:
802212 90159B            MOV     DPTR,#j
802215 E0                MOVX    A,@DPTR
802216 FF                MOV     R7,A
802217 C3                CLR     C
802218 9403              SUBB    A,#03H
80221A 504B              JNC     ?C0468?MAINFLOW
 2119: 					{
 2120: 						if( HopperSetList[j].HopperState != 2 )
80221C EF                MOV     A,R7
80221D 25E0              ADD     A,ACC
80221F 25E0              ADD     A,ACC
802221 24E7              ADD     A,#LOW HopperSetList+03H
802223 F582              MOV     DPL,A
802225 E4                CLR     A
802226 340A              ADDC    A,#HIGH HopperSetList+03H
802228 F583              MOV     DPH,A
80222A E0                MOVX    A,@DPTR
80222B 6402              XRL     A,#02H
80222D 6014              JZ      ?C0466?MAINFLOW
 2121: 							HopperSetList[j].HopperState = 2;	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 25


80222F 90159B            MOV     DPTR,#j
802232 E0                MOVX    A,@DPTR
802233 25E0              ADD     A,ACC
802235 25E0              ADD     A,ACC
802237 24E7              ADD     A,#LOW HopperSetList+03H
802239 F582              MOV     DPL,A
80223B E4                CLR     A
80223C 340A              ADDC    A,#HIGH HopperSetList+03H
80223E F583              MOV     DPH,A
802240 7402              MOV     A,#02H
802242 F0                MOVX    @DPTR,A
 2122: 					}					
802243         ?C0466?MAINFLOW:
802243 90159B            MOV     DPTR,#j
802246 E0                MOVX    A,@DPTR
802247 04                INC     A
802248 F0                MOVX    @DPTR,A
802249 80C7              SJMP    ?C0464?MAINFLOW
 2123: 				}
 2124: 			}
80224B         ?C0455?MAINFLOW:
 2125: 			else if( DeviceStatus.CoinAccepter == 0 ) 
80224B 900B1C            MOV     DPTR,#DeviceStatus+01H
80224E E0                MOVX    A,@DPTR
80224F 7016              JNZ     ?C0468?MAINFLOW
 2126: 			{
 2127: 				DisplayLine = STR_WELCOME;
802251 900B27            MOV     DPTR,#DisplayLine
802254 A512808829        ECALL   ?L?COM0003
 2128: 				DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len )
>> ;
 2129: 				if ( IsCanInCashFlag == 1 )
802259 900B27            MOV     DPTR,#DisplayLine
80225C 302605            JNB     IsCanInCashFlag,?C0470?MAINFLOW
 2130: 					DisplayLine = STR_INSERT_COIN;
80225F         
80225F 7421              MOV     A,#021H
802261 F0                MOVX    @DPTR,A
802262 8003              SJMP    ?C0468?MAINFLOW
802264         ?C0470?MAINFLOW:
 2131: 				else
 2132: 					DisplayLine = STR_INSERT_MONEY;	
802264 7423              MOV     A,#023H
802266 F0                MOVX    @DPTR,A
 2133: 			}
802267         ?C0468?MAINFLOW:
 2134: 	
 2135: 			DisplayStr( 0, __LINE1__ , 1 , DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
>> 
802267 D21A              SETB    ?_DisplayStr?BIT
802269 900B27            MOV     DPTR,#DisplayLine
80226C E0                MOVX    A,@DPTR
80226D FF                MOV     R7,A
80226E 25E0              ADD     A,ACC
802270 25E0              ADD     A,ACC
802272 2471              ADD     A,#LOW DispInformationTable
802274 F582              MOV     DPL,A
802276 E4                CLR     A
802277 3404              ADDC    A,#HIGH DispInformationTable
802279 F583              MOV     DPH,A
80227B A5128007C0        ECALL   ?C?PLDCODE
802280 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
802283 A5128007B6        ECALL   ?C?PSTXDATA
802288 EF                MOV     A,R7
802289 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 26


80228B 25E0              ADD     A,ACC
80228D 2474              ADD     A,#LOW DispInformationTable+03H
80228F F582              MOV     DPL,A
802291 E4                CLR     A
802292 3404              ADDC    A,#HIGH DispInformationTable+03H
802294 F583              MOV     DPH,A
802296 E4                CLR     A
802297 93                MOVC    A,@A+DPTR
802298 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80229B F0                MOVX    @DPTR,A
80229C 7D01              MOV     R5,#01H
80229E E4                CLR     A
80229F FF                MOV     R7,A
8022A0 A51280885F        ECALL   _DisplayStr
 2136: 			WaitForWork( 800, NULL );          //100-800-(Changed by Andy 20100826),
8022A5 E4                CLR     A
8022A6 7F20              MOV     R7,#020H
8022A8 7E03              MOV     R6,#03H
8022AA A512808330        ECALL   ?L?COM000D
 2137: 			if( GetDisplayState() == 1 )
8022AF A512812E77        ECALL   GetDisplayState
8022B4 EF                MOV     A,R7
8022B5 6401              XRL     A,#01H
8022B7 705E              JNZ     ?C0472?MAINFLOW
 2138: 			{
 2139: 				DisplayStr( 0, __LINE1__ , 1 , DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len )
>> ;
8022B9 D21A              SETB    ?_DisplayStr?BIT
8022BB 900B27            MOV     DPTR,#DisplayLine
8022BE E0                MOVX    A,@DPTR
8022BF FF                MOV     R7,A
8022C0 25E0              ADD     A,ACC
8022C2 25E0              ADD     A,ACC
8022C4 2471              ADD     A,#LOW DispInformationTable
8022C6 F582              MOV     DPL,A
8022C8 E4                CLR     A
8022C9 3404              ADDC    A,#HIGH DispInformationTable
8022CB F583              MOV     DPH,A
8022CD A5128007C0        ECALL   ?C?PLDCODE
8022D2 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8022D5 A5128007B6        ECALL   ?C?PSTXDATA
8022DA EF                MOV     A,R7
8022DB 25E0              ADD     A,ACC
8022DD 25E0              ADD     A,ACC
8022DF 2474              ADD     A,#LOW DispInformationTable+03H
8022E1 F582              MOV     DPL,A
8022E3 E4                CLR     A
8022E4 3404              ADDC    A,#HIGH DispInformationTable+03H
8022E6 F583              MOV     DPH,A
8022E8 E4                CLR     A
8022E9 93                MOVC    A,@A+DPTR
8022EA 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8022ED F0                MOVX    @DPTR,A
8022EE 7D01              MOV     R5,#01H
8022F0 E4                CLR     A
8022F1 FF                MOV     R7,A
8022F2 A51280885F        ECALL   _DisplayStr
 2140: 				WaitForWork( 800, NULL );      //100-800-(Changed by Andy 20100826),
8022F7 E4                CLR     A
8022F8 7F20              MOV     R7,#020H
8022FA 7E03              MOV     R6,#03H
8022FC A512808330        ECALL   ?L?COM000D
 2141: 				if( GetDisplayState() == 1 )
802301 A512812E77        ECALL   GetDisplayState
802306 BF010E            CJNE    R7,#01H,?C0472?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 27


 2142: 				{
 2143: 					Trace( "\n LCD OutTime" );	
 2144: 					HardWareErr |= 0x0200;//LCD通讯不通
802309 900484            MOV     DPTR,#HardWareErr
80230C E0                MOVX    A,@DPTR
80230D 4402              ORL     A,#02H
80230F F0                MOVX    @DPTR,A
802310 A3                INC     DPTR
802311 E0                MOVX    A,@DPTR
802312 F0                MOVX    @DPTR,A
 2145: 					return 1;
802313 7F01              MOV     R7,#01H
802315 804A              SJMP    ?C0450?MAINFLOW
 2146: 				}
 2147: 			}	 			
802317         ?C0472?MAINFLOW:
 2148: 			WaitForWork( 500, NULL );
802317 E4                CLR     A
802318 7FF4              MOV     R7,#0F4H
80231A 7E01              MOV     R6,#01H
80231C A512808330        ECALL   ?L?COM000D
 2149: 			UpdataDisp = 0;
802321 E4                CLR     A
802322 900B29            MOV     DPTR,#UpdataDisp
802325 F0                MOVX    @DPTR,A
 2150: 		}
 2151: 	}
802326 801B              SJMP    ?C0474?MAINFLOW
802328         ?C0453?MAINFLOW:
 2152: 	else
 2153: 	{		
 2154: 		DisplayLine = STR_OUT_OF_SERVICE;	
802328 900B27            MOV     DPTR,#DisplayLine
80232B 7410              MOV     A,#010H
80232D A512808829        ECALL   ?L?COM0003
 2155: 		DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len )
>> ;
 2156: //		ClearDisplayLine1();
 2157: 		ClearDisplayLine( 2 );
802332 7F02              MOV     R7,#02H
802334 A512808FB8        ECALL   _ClearDisplayLine
 2158: 		WaitForWork( 500, NULL );		
802339 E4                CLR     A
80233A 7FF4              MOV     R7,#0F4H
80233C 7E01              MOV     R6,#01H
80233E A512808330        ECALL   ?L?COM000D
 2159: 	}
802343         ?C0474?MAINFLOW:
 2160: 	UpdataDisp++;
802343 900B29            MOV     DPTR,#UpdataDisp
802346 E0                MOVX    A,@DPTR
802347 04                INC     A
802348 F0                MOVX    @DPTR,A
 2161: 	if( IsInsertBill() == 1 )
802349 A512809197        ECALL   IsInsertBill
80234E BF0104            CJNE    R7,#01H,?C0475?MAINFLOW
 2162: 		return 2;
802351 7F02              MOV     R7,#02H
802353 800C              SJMP    ?C0450?MAINFLOW
802355         ?C0475?MAINFLOW:
 2163: 	else
 2164: 	{
 2165: 		WaitForWork( 500, NULL );
802355 E4                CLR     A
802356 7FF4              MOV     R7,#0F4H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 28


802358 7E01              MOV     R6,#01H
80235A A512808330        ECALL   ?L?COM000D
 2166: 		return 1;
80235F 7F01              MOV     R7,#01H
 2167: 	}
 2168: }
802361         ?C0450?MAINFLOW:
802361 A522              ERET    
----- FUNCTION DispWelOrOutServ (END) -------


----- FUNCTION DisplayInputCode (BEGIN) -----
 FILE: 'mainflow.c'
 2356: u_char DisplayInputCode()
 2357: {
 2358: 	u_char xdata PressKeyCount= 0;
 2359: 	u_char xdata tStockCode[3];
802363 E4                CLR     A
802364 90159B            MOV     DPTR,#PressKeyCount
802367 F0                MOVX    @DPTR,A
 2360: 	u_char xdata Temp[20];	
 2361: 	u_char xdata MyKey ;
 2362: 	u_char xdata len = 0;
802368 9015B4            MOV     DPTR,#len
80236B F0                MOVX    @DPTR,A
 2363: 	u_int  xdata CoinSum = 0;
80236C A3                INC     DPTR
80236D F0                MOVX    @DPTR,A
80236E A3                INC     DPTR
80236F F0                MOVX    @DPTR,A
 2364: 
 2365: //	Trace("\n DisplayInputCode" );
 2366: 	MyKey = 0;
802370 9015B3            MOV     DPTR,#MyKey
802373 F0                MOVX    @DPTR,A
 2367: 	LzjMSecTimer = 400;
802374 751690            MOV     LzjMSecTimer,#090H
802377         ?C0510?MAINFLOW:
 2368: 	while( LzjMSecTimer )
802377 E516              MOV     A,LzjMSecTimer
802379 6052              JZ      ?C0511?MAINFLOW
 2369: 	{
 2370: 		CoinSum = GetCoin();			
80237B A51280926F        ECALL   GetCoin
802380 9015B5            MOV     DPTR,#CoinSum
802383 EE                MOV     A,R6
802384 F0                MOVX    @DPTR,A
802385 A3                INC     DPTR
802386 EF                MOV     A,R7
802387 F0                MOVX    @DPTR,A
 2371: 		if ( CoinSum ) 
802388 4E                ORL     A,R6
802389 603B              JZ      ?C0512?MAINFLOW
 2372: 		{
 2373: 			Trace( "\n Get CoinSum" );			
 2374: 		#ifdef _COIN_INPUT_PARALLEL	
 2375: 			CurrentPayed += CoinSum ;
80238B 9015B5            MOV     DPTR,#CoinSum
80238E E0                MOVX    A,@DPTR
80238F FE                MOV     R6,A
802390 A3                INC     DPTR
802391 E0                MOVX    A,@DPTR
802392 FF                MOV     R7,A
802393 900B25            MOV     DPTR,#CurrentPayed
802396 EE                MOV     A,R6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 29


802397 8FF0              MOV     B,R7
802399 A512800600        ECALL   ?C?IILDX
 2376: 			TradeCounter.TrueCurrencySum += CoinSum;
80239E 900AF1            MOV     DPTR,#TradeCounter
8023A1 A51280073E        ECALL   ?C?LLDXDATA0
8023A6 E4                CLR     A
8023A7 FC                MOV     R4,A
8023A8 FD                MOV     R5,A
8023A9 A51280062E        ECALL   ?C?LADD
8023AE 900AF1            MOV     DPTR,#TradeCounter
8023B1 A512800792        ECALL   ?C?LSTXDATA
 2377: 			TradeCounter.CoinSum += CoinSum;
8023B6 900AF9            MOV     DPTR,#TradeCounter+08H
8023B9 A51280073E        ECALL   ?C?LLDXDATA0
8023BE 9015B5            MOV     DPTR,#CoinSum
8023C1 A51280909E        ECALL   ?L?COM0020
 2378: 		#else
 2379: 			CurrentPayed += CoinSum * COINMULTIPLE ;
 2380: 			TradeCounter.TrueCurrencySum += CoinSum * COINMULTIPLE;
 2381: 			TradeCounter.CoinSum += CoinSum * COINMULTIPLE;
 2382: 		#endif	
 2383: 			LzjMSecTimer = 400;				
 2384: 			SchedulerProcess();
 2385: 		}
8023C6         ?C0512?MAINFLOW:
 2386: 		SchedulerProcess();
8023C6 A5128090B6        ECALL   SchedulerProcess
 2387: 	}		
8023CB 80AA              SJMP    ?C0510?MAINFLOW
8023CD         ?C0511?MAINFLOW:
 2388: 	DisableBillDev();//禁能纸、硬币品
8023CD A5128095A4        ECALL   DisableBillDev
 2389: 	//如果没有投入金额，则从头开始
 2390: 	if( CurrentPayed == 0 )
8023D2 900B25            MOV     DPTR,#CurrentPayed
8023D5 E0                MOVX    A,@DPTR
8023D6 7002              JNZ     ?C1028?MAINFLOW
8023D8 A3                INC     DPTR
8023D9 E0                MOVX    A,@DPTR
8023DA         ?C1028?MAINFLOW:
8023DA 7005              JNZ     ?C0513?MAINFLOW
 2391: 		return 2;
8023DC 7F02              MOV     R7,#02H
8023DE 02268E            LJMP    ?C0514?MAINFLOW
8023E1         ?C0513?MAINFLOW:
 2392: 	memset( tStockCode , 0 , sizeof( tStockCode ));
8023E1 7E00              MOV     R6,#00H
8023E3 7F03              MOV     R7,#03H
8023E5 7D00              MOV     R5,#00H
8023E7 7B00              MOV     R3,#?C?XDATASEG
8023E9 7A15              MOV     R2,#HIGH tStockCode
8023EB 799C              MOV     R1,#LOW tStockCode
8023ED A5128008A6        ECALL   ?C?MEMSET
 2393: 	PressKeyCount = 0;		
8023F2 E4                CLR     A
8023F3 90159B            MOV     DPTR,#PressKeyCount
8023F6 F0                MOVX    @DPTR,A
 2394: 	memset( Temp, 0, sizeof( Temp ) );															
8023F7 FE                MOV     R6,A
8023F8 7F14              MOV     R7,#014H
8023FA FD                MOV     R5,A
8023FB 7B00              MOV     R3,#?C?XDATASEG
8023FD 7A15              MOV     R2,#HIGH Temp
8023FF 799F              MOV     R1,#LOW Temp
802401 A5128008A6        ECALL   ?C?MEMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 30


 2395: 	DisplayLine = STR_INPUT_GOODS;
802406 900B27            MOV     DPTR,#DisplayLine
802409 7404              MOV     A,#04H
80240B F0                MOVX    @DPTR,A
 2396: 	memcpy( Temp, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
80240C E0                MOVX    A,@DPTR
80240D FF                MOV     R7,A
80240E 25E0              ADD     A,ACC
802410 25E0              ADD     A,ACC
802412 2474              ADD     A,#LOW DispInformationTable+03H
802414 F582              MOV     DPL,A
802416 E4                CLR     A
802417 3404              ADDC    A,#HIGH DispInformationTable+03H
802419 F583              MOV     DPH,A
80241B E4                CLR     A
80241C 93                MOVC    A,@A+DPTR
80241D FD                MOV     R5,A
80241E 7C00              MOV     R4,#00H
802420 C004              PUSH    AR4
802422 C005              PUSH    AR5
802424 EF                MOV     A,R7
802425 25E0              ADD     A,ACC
802427 25E0              ADD     A,ACC
802429 2471              ADD     A,#LOW DispInformationTable
80242B F582              MOV     DPL,A
80242D E4                CLR     A
80242E 3404              ADDC    A,#HIGH DispInformationTable
802430 F583              MOV     DPH,A
802432 A5128007C0        ECALL   ?C?PLDCODE
802437 789F              MOV     R0,#LOW Temp
802439 7C15              MOV     R4,#HIGH Temp
80243B 7D00              MOV     R5,#?C?XDATASEG
80243D D007              POP     AR7
80243F D006              POP     AR6
802441 A51280052D        ECALL   ?C?COPY
 2397: 	len = DispInformationTable[DisplayLine].len;
802446 900B27            MOV     DPTR,#DisplayLine
802449 E0                MOVX    A,@DPTR
80244A 25E0              ADD     A,ACC
80244C 25E0              ADD     A,ACC
80244E 2474              ADD     A,#LOW DispInformationTable+03H
802450 F582              MOV     DPL,A
802452 E4                CLR     A
802453 3404              ADDC    A,#HIGH DispInformationTable+03H
802455 F583              MOV     DPH,A
802457 E4                CLR     A
802458 93                MOVC    A,@A+DPTR
802459 9015B4            MOV     DPTR,#len
80245C F0                MOVX    @DPTR,A
 2398: 	if( CurrentStockCode >= 0x30 )
80245D 900B28            MOV     DPTR,#CurrentStockCode
802460 E0                MOVX    A,@DPTR
802461 FF                MOV     R7,A
802462 C3                CLR     C
802463 9430              SUBB    A,#030H
802465 4051              JC      ?C0515?MAINFLOW
 2399: 	{
 2400: 		tStockCode[ 0 ] = CurrentStockCode;
802467 90159C            MOV     DPTR,#tStockCode
80246A EF                MOV     A,R7
80246B F0                MOVX    @DPTR,A
 2401: 		CurrentStockCode = CurrentStockCode - 0x30;
80246C 900B28            MOV     DPTR,#CurrentStockCode
80246F 24D0              ADD     A,#0D0H
802471 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 31


 2402: 		PressKeyCount++;
802472 90159B            MOV     DPTR,#PressKeyCount
802475 E0                MOVX    A,@DPTR
802476 04                INC     A
802477 F0                MOVX    @DPTR,A
 2403: 		memcpy( Temp + len, tStockCode, 1 );	
802478 9015B4            MOV     DPTR,#len
80247B E0                MOVX    A,@DPTR
80247C 249F              ADD     A,#LOW Temp
80247E F9                MOV     R1,A
80247F E4                CLR     A
802480 3415              ADDC    A,#HIGH Temp
802482 A801              MOV     R0,AR1
802484 FC                MOV     R4,A
802485 7D00              MOV     R5,#?C?XDATASEG
802487 7B00              MOV     R3,#?C?XDATASEG
802489 7A15              MOV     R2,#HIGH tStockCode
80248B 799C              MOV     R1,#LOW tStockCode
80248D 7E00              MOV     R6,#00H
80248F 7F01              MOV     R7,#01H
802491 A51280052D        ECALL   ?C?COPY
 2404: 		DisplayStr( 0, __LINE0__, 1, Temp, len + 1 );
802496 D21A              SETB    ?_DisplayStr?BIT
802498 7B00              MOV     R3,#?C?XDATASEG
80249A 7A15              MOV     R2,#HIGH Temp
80249C 799F              MOV     R1,#LOW Temp
80249E 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8024A1 A5128007B6        ECALL   ?C?PSTXDATA
8024A6 9015B4            MOV     DPTR,#len
8024A9 E0                MOVX    A,@DPTR
8024AA 04                INC     A
8024AB A512808858        ECALL   ?L?COM0006
 2405: 		len += 1;
8024B0 9015B4            MOV     DPTR,#len
8024B3 E0                MOVX    A,@DPTR
8024B4 04                INC     A
8024B5 F0                MOVX    @DPTR,A
 2406: 	}
8024B6 8019              SJMP    ?C0516?MAINFLOW
8024B8         ?C0515?MAINFLOW:
 2407: 	else
 2408: 		DisplayStr( 0, __LINE0__, 1, Temp, len );	
8024B8 D21A              SETB    ?_DisplayStr?BIT
8024BA 7B00              MOV     R3,#?C?XDATASEG
8024BC 7A15              MOV     R2,#HIGH Temp
8024BE 799F              MOV     R1,#LOW Temp
8024C0 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8024C3 A5128007B6        ECALL   ?C?PSTXDATA
8024C8 9015B4            MOV     DPTR,#len
8024CB E0                MOVX    A,@DPTR
8024CC A512808858        ECALL   ?L?COM0006
8024D1         ?C0516?MAINFLOW:
 2409: 	
 2410: 	DisplayLine = STR_OK_NOT;
8024D1 900B27            MOV     DPTR,#DisplayLine
8024D4 7405              MOV     A,#05H
8024D6 F0                MOVX    @DPTR,A
 2411: 	DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
8024D7 D21A              SETB    ?_DisplayStr?BIT
8024D9 E0                MOVX    A,@DPTR
8024DA FF                MOV     R7,A
8024DB 25E0              ADD     A,ACC
8024DD 25E0              ADD     A,ACC
8024DF 2471              ADD     A,#LOW DispInformationTable
8024E1 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 32


8024E3 E4                CLR     A
8024E4 3404              ADDC    A,#HIGH DispInformationTable
8024E6 F583              MOV     DPH,A
8024E8 A5128007C0        ECALL   ?C?PLDCODE
8024ED 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8024F0 A5128007B6        ECALL   ?C?PSTXDATA
8024F5 EF                MOV     A,R7
8024F6 25E0              ADD     A,ACC
8024F8 25E0              ADD     A,ACC
8024FA 2474              ADD     A,#LOW DispInformationTable+03H
8024FC F582              MOV     DPL,A
8024FE E4                CLR     A
8024FF 3404              ADDC    A,#HIGH DispInformationTable+03H
802501 F583              MOV     DPH,A
802503 E4                CLR     A
802504 93                MOVC    A,@A+DPTR
802505 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
802508 F0                MOVX    @DPTR,A
802509 7D01              MOV     R5,#01H
80250B E4                CLR     A
80250C FF                MOV     R7,A
80250D A51280885F        ECALL   _DisplayStr
 2412: 
 2413: 	DisplayCursorState( len, __LINE0__, 1, 1, 1 );			
802512 9015B4            MOV     DPTR,#len
802515 E0                MOVX    A,@DPTR
802516 FF                MOV     R7,A
802517 D21A              SETB    ?_DisplayCursorState?BIT
802519 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80251C 7401              MOV     A,#01H
80251E F0                MOVX    @DPTR,A
80251F D21B              SETB    ?_DisplayCursorState?BIT+01H
802521 E4                CLR     A
802522 FD                MOV     R5,A
802523 A512808FA0        ECALL   ?L?COM0013
 2414: 	ClearKey();	
 2415: 	if( SystemParameter.BillNo == 1 )
802528 900427            MOV     DPTR,#SystemParameter+07H
80252B E0                MOVX    A,@DPTR
80252C B40105            CJNE    A,#01H,?C0518?MAINFLOW
 2416: 		RejectBill();//退钞	
80252F A512808FEE        ECALL   RejectBill
802534         ?C0518?MAINFLOW:
 2417: 	while( 1 )
 2418: 	{		
 2419: 		MyKey = KEY_NULL;
802534 9015B3            MOV     DPTR,#MyKey
802537 74FF              MOV     A,#0FFH
802539 F0                MOVX    @DPTR,A
 2420: 		//Mission( ); 
 2421: 		WaitForWork( 20, NULL );
80253A E4                CLR     A
80253B 7F14              MOV     R7,#014H
80253D FE                MOV     R6,A
80253E A512808330        ECALL   ?L?COM000D
 2422: 		MyKey = GetKey();
802543 A5128096D1        ECALL   GetKey
802548 9015B3            MOV     DPTR,#MyKey
80254B EF                MOV     A,R7
80254C F0                MOVX    @DPTR,A
 2423: 		if ( MyKey == KEY_NULL ) 
80254D F4                CPL     A
80254E 60E4              JZ      ?C0518?MAINFLOW
 2424: 			continue;
802550         ?C0520?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 33


 2425: 		switch ( MyKey ) 
802550 9015B3            MOV     DPTR,#MyKey
802553 E0                MOVX    A,@DPTR
802554 FF                MOV     R7,A
802555 24F6              ADD     A,#0F6H
802557 5002              JNC     ?C0531?MAINFLOW
802559 805F              SJMP    ?C0521?MAINFLOW
 2426: 		{
 2427: 			case 	KEY_0:
 2428: 			case	KEY_1:
 2429: 			case	KEY_2:
 2430: 			case	KEY_3:
 2431: 			case	KEY_4:
 2432: 			case	KEY_5:
 2433: 			case	KEY_6:
 2434: 			case	KEY_7:
 2435: 			case	KEY_8:
 2436: 			case	KEY_9:
80255B         ?C0531?MAINFLOW:
 2437: 				if( PressKeyCount < 2 )
80255B 90159B            MOV     DPTR,#PressKeyCount
80255E E0                MOVX    A,@DPTR
80255F FE                MOV     R6,A
802560 C3                CLR     C
802561 9402              SUBB    A,#02H
802563 504F              JNC     ?C0532?MAINFLOW
 2438: 				{					
 2439:           			tStockCode[ PressKeyCount ] = '0' + MyKey - KEY_0;					
802565 EF                MOV     A,R7
802566 2430              ADD     A,#030H
802568 FF                MOV     R7,A
802569 749C              MOV     A,#LOW tStockCode
80256B 2E                ADD     A,R6
80256C F582              MOV     DPL,A
80256E E4                CLR     A
80256F 3415              ADDC    A,#HIGH tStockCode
802571 F583              MOV     DPH,A
802573 EF                MOV     A,R7
802574 F0                MOVX    @DPTR,A
 2440: 					PressKeyCount++;								
802575 90159B            MOV     DPTR,#PressKeyCount
802578 E0                MOVX    A,@DPTR
802579 04                INC     A
80257A F0                MOVX    @DPTR,A
 2441: 					DisplayStr( 0, __LINE0__, 0, tStockCode + (PressKeyCount - 1 ), 1 );						
80257B C21A              CLR     ?_DisplayStr?BIT
80257D E0                MOVX    A,@DPTR
80257E 249B              ADD     A,#LOW tStockCode-01H
802580 F9                MOV     R1,A
802581 E4                CLR     A
802582 3415              ADDC    A,#HIGH tStockCode-01H
802584 FA                MOV     R2,A
802585 7B00              MOV     R3,#?C?XDATASEG
802587 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80258A A5128007B6        ECALL   ?C?PSTXDATA
80258F 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
802592 7401              MOV     A,#01H
802594 A51280885B        ECALL   ?L?COM0007
 2442: 					CurrentStockCode = CurrentStockCode * 10 + MyKey;
802599 900B28            MOV     DPTR,#CurrentStockCode
80259C E0                MOVX    A,@DPTR
80259D 75F00A            MOV     B,#0AH
8025A0 A4                MUL     AB
8025A1 FF                MOV     R7,A
8025A2 9015B3            MOV     DPTR,#MyKey
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 34


8025A5 E0                MOVX    A,@DPTR
8025A6 2F                ADD     A,R7
8025A7 900B28            MOV     DPTR,#CurrentStockCode
8025AA F0                MOVX    @DPTR,A
 2443: 			//		memcpy( Temp + len, tStockCode, PressKeyCount );
 2444: 			//		DisplayStr( 0, __LINE0__, 1, Temp, len + PressKeyCount );										
 2445: 			//		DisplayCursorState( len + PressKeyCount, __LINE0__, 1, 1, 1 );	
 2446: 					WaitForWork( 20, NULL );
8025AB E4                CLR     A
8025AC 7F14              MOV     R7,#014H
8025AE FE                MOV     R6,A
8025AF A512808330        ECALL   ?L?COM000D
 2447: 				}
8025B4         ?C0532?MAINFLOW:
 2448: 				MyKey = KEY_NULL ;
8025B4 9015B3            MOV     DPTR,#MyKey
8025B7 74FF              MOV     A,#0FFH
8025B9 F0                MOVX    @DPTR,A
 2449:        			break;			
 2450: 			case	KEY_CANCEL:				
 2451: 			case 	KEY_SUBMIT:
 2452: 				break;
 2453: 			default:
 2454: 				break;
 2455: 		}
8025BA         ?C0521?MAINFLOW:
 2456: 		if( ( MyKey == KEY_CANCEL ) || ( MyKey == KEY_SUBMIT ) )
8025BA 9015B3            MOV     DPTR,#MyKey
8025BD E0                MOVX    A,@DPTR
8025BE FF                MOV     R7,A
8025BF 641B              XRL     A,#01BH
8025C1 6008              JZ      ?C0519?MAINFLOW
8025C3 EF                MOV     A,R7
8025C4 640D              XRL     A,#0DH
8025C6 6003              JZ      $ + 5H
8025C8 022534            LJMP    ?C0518?MAINFLOW
 2457: 			break;					
 2458: 	}	
8025CB         ?C0519?MAINFLOW:
 2459: 	ClearKey();
8025CB A512808FA5        ECALL   ClearKey
 2460: 	DisplayCursorState( 0, 1, 1, 0, 1 );
8025D0 D21A              SETB    ?_DisplayCursorState?BIT
8025D2 E4                CLR     A
8025D3 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8025D6 F0                MOVX    @DPTR,A
8025D7 D21B              SETB    ?_DisplayCursorState?BIT+01H
8025D9 7D01              MOV     R5,#01H
8025DB FF                MOV     R7,A
8025DC A51280897C        ECALL   _DisplayCursorState
 2461: 	if( MyKey == KEY_CANCEL )
8025E1 9015B3            MOV     DPTR,#MyKey
8025E4 E0                MOVX    A,@DPTR
8025E5 B41B03            CJNE    A,#01BH,?C0538?MAINFLOW
 2462: 	{
 2463: 		CurrentStockCode = 0;
 2464: 		return 1;
8025E8 022683            LJMP    ?C1085?MAINFLOW
 2465: 	}
8025EB         ?C0538?MAINFLOW:
 2466: 	if( ( PressKeyCount > 2 ) || ( PressKeyCount <= 0 ) )
8025EB 90159B            MOV     DPTR,#PressKeyCount
8025EE E0                MOVX    A,@DPTR
8025EF FF                MOV     R7,A
8025F0 D3                SETB    C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 35


8025F1 9402              SUBB    A,#02H
8025F3 5005              JNC     ?C0540?MAINFLOW
8025F5 EF                MOV     A,R7
8025F6 9400              SUBB    A,#00H
8025F8 500C              JNC     ?C0539?MAINFLOW
8025FA         ?C0540?MAINFLOW:
 2467: 	{
 2468: 		// 客户输入错误 		
 2469: 		DisplayLine = STR_INVAILD_CHOICE;
8025FA A512808824        ECALL   ?L?COM0002
 2470: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2471: 		DisplayLine = STR_RE_INPUT_GOODS;
8025FF A5128082EA        ECALL   ?L?COM0008
 2472: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2473: 		WaitForWork( 2000 , NULL );
 2474: 		//Trace( "\n ChooseItemCode cancel ret 2");
 2475: 		CurrentStockCode = 0;
802604         
 2476: 		return 1 ;
802604 807D              SJMP    ?C1085?MAINFLOW
 2477: 	}	
802606         ?C0539?MAINFLOW:
 2478: 	if( ( PressKeyCount == 2 ) && ( MyKey == KEY_SUBMIT ) )
802606 90159B            MOV     DPTR,#PressKeyCount
802609 E0                MOVX    A,@DPTR
80260A 6402              XRL     A,#02H
80260C 6003              JZ      $ + 5H
80260E 02268E            LJMP    ?C0514?MAINFLOW
802611 9015B3            MOV     DPTR,#MyKey
802614 E0                MOVX    A,@DPTR
802615 640D              XRL     A,#0DH
802617 7075              JNZ     ?C0514?MAINFLOW
 2479: 	{
 2480: 		WaitForWork( 200 , NULL );	
802619 7FC8              MOV     R7,#0C8H
80261B FE                MOV     R6,A
80261C A512808330        ECALL   ?L?COM000D
 2481: //		Trace( "\n input CurrentStockCode = %bu", CurrentStockCode );
 2482: 		if( CurrentStockCode == 0 )
802621 900B28            MOV     DPTR,#CurrentStockCode
802624 E0                MOVX    A,@DPTR
802625 700C              JNZ     ?C0542?MAINFLOW
 2483: 		{
 2484: 			// 客户输入错误 		
 2485: 			DisplayLine = STR_INVAILD_CHOICE;
802627 A512808824        ECALL   ?L?COM0002
 2486: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2487: 			DisplayLine = STR_RE_INPUT_GOODS;
80262C A5128082EA        ECALL   ?L?COM0008
 2488: 			DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2489: 			WaitForWork( 2000 , NULL );
 2490: 			CurrentStockCode = 0;
802631         
 2491: 			return 1;
802631 8050              SJMP    ?C1085?MAINFLOW
 2492: 		}
802633         ?C0542?MAINFLOW:
 2493: 		MyKey = 0;
802633 E4                CLR     A
802634 9015B3            MOV     DPTR,#MyKey
802637 F0                MOVX    @DPTR,A
 2494: 		for( len = 0; len < GOODSWAYNUM; len ++ )
802638 A3                INC     DPTR
802639 F0                MOVX    @DPTR,A
80263A         ?C0543?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 36


80263A 9015B4            MOV     DPTR,#len
80263D E0                MOVX    A,@DPTR
80263E FF                MOV     R7,A
80263F C3                CLR     C
802640 9440              SUBB    A,#040H
802642 502F              JNC     ?C0544?MAINFLOW
 2495: 		{
 2496: 			if( CurrentStockCode == InputGoodsWayList[len].GoodsWayNo )
802644 EF                MOV     A,R7
802645 25E0              ADD     A,ACC
802647 25E0              ADD     A,ACC
802649 24DC              ADD     A,#LOW InputGoodsWayList
80264B F582              MOV     DPL,A
80264D E4                CLR     A
80264E 342B              ADDC    A,#HIGH InputGoodsWayList
802650 F583              MOV     DPH,A
802652 E0                MOVX    A,@DPTR
802653 FF                MOV     R7,A
802654 900B28            MOV     DPTR,#CurrentStockCode
802657 E0                MOVX    A,@DPTR
802658 B50710            CJNE    A,AR7,?C0545?MAINFLOW
 2497: 			{
 2498: 				CurrentStockCode = len;//InputGoodsWayList[len].SetArrayNo;
80265B 9015B4            MOV     DPTR,#len
80265E E0                MOVX    A,@DPTR
80265F 900B28            MOV     DPTR,#CurrentStockCode
802662 F0                MOVX    @DPTR,A
 2499: 				MyKey = 1;
802663 9015B3            MOV     DPTR,#MyKey
802666 7401              MOV     A,#01H
802668 F0                MOVX    @DPTR,A
 2500: 				break;
802669 8008              SJMP    ?C0544?MAINFLOW
 2501: 			}
 2502: 		}
80266B         ?C0545?MAINFLOW:
80266B 9015B4            MOV     DPTR,#len
80266E E0                MOVX    A,@DPTR
80266F 04                INC     A
802670 F0                MOVX    @DPTR,A
802671 80C7              SJMP    ?C0543?MAINFLOW
802673         ?C0544?MAINFLOW:
 2503: 		if( MyKey == 0 )
802673 9015B3            MOV     DPTR,#MyKey
802676 E0                MOVX    A,@DPTR
802677 7013              JNZ     ?C0547?MAINFLOW
 2504: 		{
 2505: 			// 客户输入错误 		
 2506: 			DisplayLine = STR_INVAILD_CHOICE;
802679 A512808824        ECALL   ?L?COM0002
 2507: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2508: 			DisplayLine = STR_RE_INPUT_GOODS;
80267E A5128082EA        ECALL   ?L?COM0008
 2509: 			DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2510: 			WaitForWork( 2000 , NULL );
 2511: 			CurrentStockCode = 0;
802683         
802683 E4                CLR     A
802684 900B28            MOV     DPTR,#CurrentStockCode
802687 F0                MOVX    @DPTR,A
 2512: 			return 1;
802688 7F01              MOV     R7,#01H
80268A 8002              SJMP    ?C0514?MAINFLOW
 2513: 		}
80268C         ?C0547?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 37


 2514: //		Trace( "\n CurrentStockCode = %bu", CurrentStockCode );		
 2515: 		return 0 ;
80268C 7F00              MOV     R7,#00H
 2516: 	}	
 2517: }
80268E         ?C0514?MAINFLOW:
80268E A522              ERET    
----- FUNCTION DisplayInputCode (END) -------


----- FUNCTION IsGoodsWay (BEGIN) -----
 FILE: 'mainflow.c'
 2520: u_char IsGoodsWay()
 2521: {
 2522: 	Trace( "\n CurrentStockCode = %bu, GoodsCurrentSum = %bu", CurrentStockCode, GoodsWaySetVal[CurrentStockCode].Go
>> odsCurrentSum );		
 2523: //	Trace( "\n WayState = %bu", GoodsWaySetVal[CurrentStockCode].WayState );		
 2524: 	if( (SystemParameter.GOCOn!=0x01)&&(GoodsWaySetVal[CurrentStockCode].GoodsCurrentSum == 0) )
802690 90046B            MOV     DPTR,#SystemParameter+04BH
802693 E0                MOVX    A,@DPTR
802694 6401              XRL     A,#01H
802696 6014              JZ      ?C0548?MAINFLOW
802698 900B28            MOV     DPTR,#CurrentStockCode
80269B E0                MOVX    A,@DPTR
80269C 75F005            MOV     B,#05H
80269F 900008            MOV     DPTR,#GoodsWaySetVal+04H
8026A2 A51280079F        ECALL   ?C?OFFXADD
8026A7 E0                MOVX    A,@DPTR
8026A8 7002              JNZ     ?C0548?MAINFLOW
 2525: 	{			
 2526: 		DisplayLine = STR_GOODS_SOLDOUT;
 2527: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2528: 		DisplayLine = STR_INPUT_WAY_NO;
 2529: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
 2530: 		WaitForWork( 2000, NULL );
 2531: 		CurrentStockCode = 0;
 2532: 		return 2;
8026AA 801B              SJMP    ?C1086?MAINFLOW
 2533: 	}
8026AC         ?C0548?MAINFLOW:
 2534: 	else if( (SystemParameter.GOCOn==0x01)&&(GoodsWaySetVal[CurrentStockCode].WayState & 0x04) )
8026AC 90046B            MOV     DPTR,#SystemParameter+04BH
8026AF E0                MOVX    A,@DPTR
8026B0 6401              XRL     A,#01H
8026B2 7030              JNZ     ?C0550?MAINFLOW
8026B4 900B28            MOV     DPTR,#CurrentStockCode
8026B7 E0                MOVX    A,@DPTR
8026B8 75F005            MOV     B,#05H
8026BB 900005            MOV     DPTR,#GoodsWaySetVal+01H
8026BE A51280079F        ECALL   ?C?OFFXADD
8026C3 E0                MOVX    A,@DPTR
8026C4 30E21D            JNB     ACC.2,?C0550?MAINFLOW
 2535: 	{
 2536: 		
 2537:     	DisplayLine = STR_GOODS_SOLDOUT;
8026C7         
8026C7 900B27            MOV     DPTR,#DisplayLine
8026CA 740E              MOV     A,#0EH
8026CC A512808829        ECALL   ?L?COM0003
 2538: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2539: 		DisplayLine = STR_INPUT_WAY_NO;
8026D1 900B27            MOV     DPTR,#DisplayLine
8026D4 7419              MOV     A,#019H
8026D6 A5128082EF        ECALL   ?L?COM0009
 2540: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 38


 2541: 		WaitForWork( 2000, NULL );
 2542: 		CurrentStockCode = 0;
8026DB E4                CLR     A
8026DC 900B28            MOV     DPTR,#CurrentStockCode
8026DF F0                MOVX    @DPTR,A
 2543: 		return 2; 	
8026E0 7F02              MOV     R7,#02H
8026E2 8038              SJMP    ?C0549?MAINFLOW
 2544: 	}
8026E4         ?C0550?MAINFLOW:
 2545: 
 2546: 	//货没有开启或货道故障或单价为0		
 2547: 	if( ( ( GoodsWaySetVal[CurrentStockCode].WayState & 0x01 ) == 0x00 ) || ( ( GoodsWaySetVal[CurrentStockCode].Way
>> State & 0x0A ) != 0x00 ) || ( GoodsWaySetVal[CurrentStockCode].Price == 0 ) )
8026E4 900B28            MOV     DPTR,#CurrentStockCode
8026E7 E0                MOVX    A,@DPTR
8026E8 75F005            MOV     B,#05H
8026EB 900005            MOV     DPTR,#GoodsWaySetVal+01H
8026EE A51280079F        ECALL   ?C?OFFXADD
8026F3 E0                MOVX    A,@DPTR
8026F4 30E01A            JNB     ACC.0,?C0553?MAINFLOW
8026F7 540A              ANL     A,#0AH
8026F9 7016              JNZ     ?C0553?MAINFLOW
8026FB 900B28            MOV     DPTR,#CurrentStockCode
8026FE E0                MOVX    A,@DPTR
8026FF 75F005            MOV     B,#05H
802702 900006            MOV     DPTR,#GoodsWaySetVal+02H
802705 A51280079F        ECALL   ?C?OFFXADD
80270A E0                MOVX    A,@DPTR
80270B FE                MOV     R6,A
80270C A3                INC     DPTR
80270D E0                MOVX    A,@DPTR
80270E 4E                ORL     A,R6
80270F 7009              JNZ     ?C0552?MAINFLOW
802711         ?C0553?MAINFLOW:
 2548: 	{
 2549: 		CurrentStockCode = 0;
802711 E4                CLR     A
802712 900B28            MOV     DPTR,#CurrentStockCode
802715 F0                MOVX    @DPTR,A
 2550: 		return 1;		
802716 7F01              MOV     R7,#01H
802718 8002              SJMP    ?C0549?MAINFLOW
 2551: 	}
80271A         ?C0552?MAINFLOW:
 2552: 	return 0;
80271A 7F00              MOV     R7,#00H
 2553: }
80271C         ?C0549?MAINFLOW:
80271C A522              ERET    
----- FUNCTION IsGoodsWay (END) -------


----- FUNCTION GoodsWayErr (BEGIN) -----
 FILE: 'mainflow.c'
 2568: u_char GoodsWayErr()
 2569: {
 2570: 	u_char xdata MyKey ;
 2571: 	
 2572: //	Trace( "\n GoodsWayErr" );
 2573: 	DisplayLine = STR_GOODS_WAY_ERR1;
80271E 900B27            MOV     DPTR,#DisplayLine
802721 741C              MOV     A,#01CH
802723 A512808829        ECALL   ?L?COM0003
 2574: 	DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 39


 2575: //	ClearDisplayLine1( );
 2576: 	ClearDisplayLine( 2 );
802728 7F02              MOV     R7,#02H
80272A A512808FB8        ECALL   _ClearDisplayLine
 2577: 	WaitForWork( 1500, NULL );	
80272F E4                CLR     A
802730 7FDC              MOV     R7,#0DCH
802732 7E05              MOV     R6,#05H
802734 A512808330        ECALL   ?L?COM000D
 2578: 	if( IsCanChange() == 1 )
802739 A51280A003        ECALL   IsCanChange
80273E EF                MOV     A,R7
80273F 6401              XRL     A,#01H
802741 6003              JZ      $ + 5H
802743 0228A9            LJMP    ?C0556?MAINFLOW
 2579: 	{
 2580: 		DisplayLine = STR_GOODS_WAY_ERR2;	
802746 900B27            MOV     DPTR,#DisplayLine
802749 741D              MOV     A,#01DH
80274B A512808829        ECALL   ?L?COM0003
 2581: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2582: 		DisplayLine = STR_OK_NOT;
802750 900B27            MOV     DPTR,#DisplayLine
802753 7405              MOV     A,#05H
802755 A5128082EF        ECALL   ?L?COM0009
 2583: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2584: 		WaitForWork( 2000, NULL );
 2585: 		ClearKey();
80275A A512808FA5        ECALL   ClearKey
80275F         ?C0557?MAINFLOW:
 2586: 		while( 1 )
 2587: 		{		
 2588: 			CoreProcessCycle();
80275F A5128082D7        ECALL   CoreProcessCycle
 2589: 			MyKey = GetKey();
802764 A5128096D1        ECALL   GetKey
802769 90159B            MOV     DPTR,#MyKey
80276C EF                MOV     A,R7
80276D F0                MOVX    @DPTR,A
 2590: 			if ( MyKey == KEY_NULL ) 
80276E F4                CPL     A
80276F 60EE              JZ      ?C0557?MAINFLOW
 2591: 				continue;
802771         ?C0559?MAINFLOW:
 2592: 			switch ( MyKey ) 
802771 90159B            MOV     DPTR,#MyKey
802774 E0                MOVX    A,@DPTR
802775 24E5              ADD     A,#0E5H
802777 6004              JZ      ?C0560?MAINFLOW
802779 240E              ADD     A,#0EH
80277B 70E2              JNZ     ?C0557?MAINFLOW
 2593: 			{				
 2594: 				case	KEY_CANCEL:				
 2595: 				case 	KEY_SUBMIT:
 2596: 					break;
 2597: 				default:
 2598: 					continue;
 2599: 			}		
80277D         ?C0560?MAINFLOW:
 2600: 			if( ( MyKey == KEY_CANCEL ) || ( MyKey == KEY_SUBMIT ) )
80277D 90159B            MOV     DPTR,#MyKey
802780 E0                MOVX    A,@DPTR
802781 FF                MOV     R7,A
802782 641B              XRL     A,#01BH
802784 6004              JZ      ?C0558?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 40


802786 EF                MOV     A,R7
802787 B40DD5            CJNE    A,#0DH,?C0557?MAINFLOW
 2601: 				break;
 2602: 		}
80278A         ?C0558?MAINFLOW:
 2603: 		if( MyKey == KEY_CANCEL )
80278A EF                MOV     A,R7
80278B 641B              XRL     A,#01BH
80278D 6003              JZ      $ + 5H
80278F 02289F            LJMP    ?C0566?MAINFLOW
 2604: 		{		
 2605: 			//不选其它货,找零
 2606: 			DisplayLine = STR_OUTING_COIN;
802792 900B27            MOV     DPTR,#DisplayLine
802795 7415              MOV     A,#015H
802797 A512808829        ECALL   ?L?COM0003
 2607: 			DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len 
>> );	
 2608: 		//	ClearDisplayLine1( );
 2609: 		//	ClearDisplayLine( 2 );
 2610: 			memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );			
80279C 7E00              MOV     R6,#00H
80279E 7F14              MOV     R7,#014H
8027A0 7D00              MOV     R5,#00H
8027A2 7B00              MOV     R3,#?C?XDATASEG
8027A4 7A04              MOV     R2,#HIGH DisplayBuffer
8027A6 7970              MOV     R1,#LOW DisplayBuffer
8027A8 A5128008A6        ECALL   ?C?MEMSET
 2611: 			switch( SystemParameter.curUnit )
8027AD 900468            MOV     DPTR,#SystemParameter+048H
8027B0 E0                MOVX    A,@DPTR
8027B1 FE                MOV     R6,A
8027B2 A3                INC     DPTR
8027B3 E0                MOVX    A,@DPTR
8027B4 FF                MOV     R7,A
8027B5 EE                MOV     A,R6
8027B6 6003              JZ      $ + 5H
8027B8 022861            LJMP    ?C0567?MAINFLOW
8027BB EF                MOV     A,R7
8027BC 24F6              ADD     A,#0F6H
8027BE 6039              JZ      ?C0569?MAINFLOW
8027C0 24A6              ADD     A,#0A6H
8027C2 6035              JZ      ?C0569?MAINFLOW
8027C4 2463              ADD     A,#063H
8027C6 6003              JZ      $ + 5H
8027C8 022861            LJMP    ?C0567?MAINFLOW
 2612: 			{
 2613: 				case 1:
8027CB         ?C0568?MAINFLOW:
 2614: 					MyKey = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
8027CB 7B80              MOV     R3,#BYTE2 0800430H
8027CD 7A04              MOV     R2,#HIGH 0800430H
8027CF 7930              MOV     R1,#LOW 0800430H
8027D1 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8027D4 A5128007B6        ECALL   ?C?PSTXDATA
8027D9 90051D            MOV     DPTR,#DispInformationTable+0ACH
8027DC A5128007C0        ECALL   ?C?PLDCODE
8027E1 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8027E4 A5128007B6        ECALL   ?C?PSTXDATA
8027E9 900B25            MOV     DPTR,#CurrentPayed
8027EC E0                MOVX    A,@DPTR
8027ED FF                MOV     R7,A
8027EE A3                INC     DPTR
8027EF E0                MOVX    A,@DPTR
8027F0 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 41


8027F3 CF                XCH     A,R7
8027F4 F0                MOVX    @DPTR,A
8027F5 A3                INC     DPTR
8027F6 EF                MOV     A,R7
 2615: 				break;				
8027F7 8057              SJMP    ?C1088?MAINFLOW
 2616: 				case 10:
8027F9         ?C0569?MAINFLOW:
 2617: 					MyKey = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
8027F9 7B80              MOV     R3,#BYTE2 0800435H
8027FB 7A04              MOV     R2,#HIGH 0800435H
8027FD 7935              MOV     R1,#LOW 0800435H
8027FF 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802802 A5128007B6        ECALL   ?C?PSTXDATA
802807 90051D            MOV     DPTR,#DispInformationTable+0ACH
80280A A5128007C0        ECALL   ?C?PLDCODE
80280F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802812 A5128007B6        ECALL   ?C?PSTXDATA
802817 900468            MOV     DPTR,#SystemParameter+048H
80281A E0                MOVX    A,@DPTR
80281B FA                MOV     R2,A
80281C A3                INC     DPTR
80281D E0                MOVX    A,@DPTR
80281E FB                MOV     R3,A
80281F 900B25            MOV     DPTR,#CurrentPayed
802822 E0                MOVX    A,@DPTR
802823 FE                MOV     R6,A
802824 A3                INC     DPTR
802825 E0                MOVX    A,@DPTR
802826 FF                MOV     R7,A
802827 AD03              MOV     R5,AR3
802829 AC02              MOV     R4,AR2
80282B A51280056C        ECALL   ?C?UIDIV
802830 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
802833 EE                MOV     A,R6
802834 F0                MOVX    @DPTR,A
802835 A3                INC     DPTR
802836 EF                MOV     A,R7
802837 F0                MOVX    @DPTR,A
802838 900B25            MOV     DPTR,#CurrentPayed
80283B E0                MOVX    A,@DPTR
80283C FE                MOV     R6,A
80283D A3                INC     DPTR
80283E E0                MOVX    A,@DPTR
80283F FF                MOV     R7,A
802840 AD03              MOV     R5,AR3
802842 AC02              MOV     R4,AR2
802844 A51280056C        ECALL   ?C?UIDIV
802849 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
80284C EC                MOV     A,R4
80284D F0                MOVX    @DPTR,A
80284E A3                INC     DPTR
80284F ED                MOV     A,R5
802850         
 2618: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2619: 				break;
 2620: 				case 100:
802850         
802850 F0                MOVX    @DPTR,A
802851 7B00              MOV     R3,#?C?XDATASEG
802853 7A04              MOV     R2,#HIGH DisplayBuffer
802855 7970              MOV     R1,#LOW DisplayBuffer
802857 A512800949        ECALL   _sprintf
80285C 90159B            MOV     DPTR,#MyKey
80285F EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 42


802860 F0                MOVX    @DPTR,A
 2621: 					MyKey = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
 2622: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2623: 				break;		
 2624: 			}		
802861         ?C0567?MAINFLOW:
 2625: 			DisplayStr( 0, __LINE1__, 1, DisplayBuffer, MyKey );
802861 D21A              SETB    ?_DisplayStr?BIT
802863 7B00              MOV     R3,#?C?XDATASEG
802865 7A04              MOV     R2,#HIGH DisplayBuffer
802867 7970              MOV     R1,#LOW DisplayBuffer
802869 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80286C A5128007B6        ECALL   ?C?PSTXDATA
802871 90159B            MOV     DPTR,#MyKey
802874 E0                MOVX    A,@DPTR
802875 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
802878 F0                MOVX    @DPTR,A
802879 7D01              MOV     R5,#01H
80287B E4                CLR     A
80287C FF                MOV     R7,A
80287D A51280885F        ECALL   _DisplayStr
 2626: 			WaitForWork( 300, NULL );
802882 E4                CLR     A
802883 7F2C              MOV     R7,#02CH
802885 7E01              MOV     R6,#01H
802887 A512808330        ECALL   ?L?COM000D
 2627: 			CurrentDispenseCoin = CurrentPayed;	
80288C 900B25            MOV     DPTR,#CurrentPayed
80288F E0                MOVX    A,@DPTR
802890 FF                MOV     R7,A
802891 A3                INC     DPTR
802892 E0                MOVX    A,@DPTR
802893 90046E            MOV     DPTR,#CurrentDispenseCoin
802896 CF                XCH     A,R7
802897 F0                MOVX    @DPTR,A
802898 A3                INC     DPTR
802899 EF                MOV     A,R7
80289A F0                MOVX    @DPTR,A
 2628: 			return 1;
80289B 7F01              MOV     R7,#01H
80289D 8054              SJMP    ?C0571?MAINFLOW
 2629: 		}
80289F         ?C0566?MAINFLOW:
 2630: 	 	if( MyKey == KEY_SUBMIT )
80289F 90159B            MOV     DPTR,#MyKey
8028A2 E0                MOVX    A,@DPTR
8028A3 640D              XRL     A,#0DH
8028A5 704C              JNZ     ?C0571?MAINFLOW
 2631: 		{
 2632: 			ClearKey();	
 2633: 			CurrentStockCode = 0;
 2634: 			return 0;	
8028A7 803F              SJMP    ?C1089?MAINFLOW
 2635: 		}
 2636: 	}
8028A9         ?C0556?MAINFLOW:
 2637: 	else
 2638: 	{
 2639: 		//当不能找零时直接提示选其它商品
 2640: 		DisplayLine = STR_GOODS_WAY_ERR2;
8028A9 900B27            MOV     DPTR,#DisplayLine
8028AC 741D              MOV     A,#01DH
8028AE F0                MOVX    @DPTR,A
 2641: 		#ifdef _CHINA_
 2642: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len - 3 
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 43


>> );
 2643: 		#else
 2644: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len - 1 
>> );
8028AF D21A              SETB    ?_DisplayStr?BIT
8028B1 E0                MOVX    A,@DPTR
8028B2 FF                MOV     R7,A
8028B3 25E0              ADD     A,ACC
8028B5 25E0              ADD     A,ACC
8028B7 2471              ADD     A,#LOW DispInformationTable
8028B9 F582              MOV     DPL,A
8028BB E4                CLR     A
8028BC 3404              ADDC    A,#HIGH DispInformationTable
8028BE F583              MOV     DPH,A
8028C0 A5128007C0        ECALL   ?C?PLDCODE
8028C5 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8028C8 A5128007B6        ECALL   ?C?PSTXDATA
8028CD EF                MOV     A,R7
8028CE 25E0              ADD     A,ACC
8028D0 25E0              ADD     A,ACC
8028D2 2474              ADD     A,#LOW DispInformationTable+03H
8028D4 F582              MOV     DPL,A
8028D6 E4                CLR     A
8028D7 3404              ADDC    A,#HIGH DispInformationTable+03H
8028D9 F583              MOV     DPH,A
8028DB E4                CLR     A
8028DC 93                MOVC    A,@A+DPTR
8028DD 14                DEC     A
8028DE A512808858        ECALL   ?L?COM0006
 2645: 		#endif
 2646: 		WaitForWork( 2000, NULL );
8028E3 A51280832B        ECALL   ?L?COM000C
 2647: 		ClearKey();	
8028E8         
8028E8 A512808FA5        ECALL   ClearKey
 2648: 		CurrentStockCode = 0;
8028ED E4                CLR     A
8028EE 900B28            MOV     DPTR,#CurrentStockCode
8028F1 F0                MOVX    @DPTR,A
 2649: 		return 0;
8028F2 FF                MOV     R7,A
 2650: 	}
 2651: }
8028F3         ?C0571?MAINFLOW:
8028F3 A522              ERET    
----- FUNCTION GoodsWayErr (END) -------


----- FUNCTION OutGoods (BEGIN) -----
 FILE: 'mainflow.c'
 2663: u_char OutGoods()
 2664: {
 2665: 	u_char   xdata flag = 0 ;
 2666: 	u_char 	 xdata length = 0;
8028F5 E4                CLR     A
8028F6 90159B            MOV     DPTR,#flag
8028F9 F0                MOVX    @DPTR,A
 2667: 	
8028FA A3                INC     DPTR
8028FB F0                MOVX    @DPTR,A
 2668:     //Trace( "\n OutGoods" );
 2669: 	DisplayLine = STR_TRANCE_ING;
8028FC 900B27            MOV     DPTR,#DisplayLine
8028FF 7414              MOV     A,#014H
802901 A512808829        ECALL   ?L?COM0003
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 44


 2670: 	DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
 2671: 	
 2672: 	memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );	
802906 7E00              MOV     R6,#00H
802908 7F14              MOV     R7,#014H
80290A 7D00              MOV     R5,#00H
80290C 7B00              MOV     R3,#?C?XDATASEG
80290E 7A04              MOV     R2,#HIGH DisplayBuffer
802910 7970              MOV     R1,#LOW DisplayBuffer
802912 A5128008A6        ECALL   ?C?MEMSET
 2673: 	switch( SystemParameter.curUnit )
802917 900468            MOV     DPTR,#SystemParameter+048H
80291A E0                MOVX    A,@DPTR
80291B FE                MOV     R6,A
80291C A3                INC     DPTR
80291D E0                MOVX    A,@DPTR
80291E FF                MOV     R7,A
80291F EE                MOV     A,R6
802920 6003              JZ      $ + 5H
802922 022A28            LJMP    ?C0577?MAINFLOW
802925 EF                MOV     A,R7
802926 24F6              ADD     A,#0F6H
802928 603D              JZ      ?C0579?MAINFLOW
80292A 24A6              ADD     A,#0A6H
80292C 7003              JNZ     $ + 5H
80292E 0229C0            LJMP    ?C0580?MAINFLOW
802931 2463              ADD     A,#063H
802933 6003              JZ      $ + 5H
802935 022A28            LJMP    ?C0577?MAINFLOW
 2674: 	{
 2675: 		case 1:	
802938         ?C0578?MAINFLOW:
 2676: 			length = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_BALANCE].str,CurrentPayed );	
802938 7B80              MOV     R3,#BYTE2 0800430H
80293A 7A04              MOV     R2,#HIGH 0800430H
80293C 7930              MOV     R1,#LOW 0800430H
80293E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802941 A5128007B6        ECALL   ?C?PSTXDATA
802946 900521            MOV     DPTR,#DispInformationTable+0B0H
802949 A5128007C0        ECALL   ?C?PLDCODE
80294E 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802951 A5128007B6        ECALL   ?C?PSTXDATA
802956 900B25            MOV     DPTR,#CurrentPayed
802959 E0                MOVX    A,@DPTR
80295A FF                MOV     R7,A
80295B A3                INC     DPTR
80295C E0                MOVX    A,@DPTR
80295D 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
802960 CF                XCH     A,R7
802961 F0                MOVX    @DPTR,A
802962 A3                INC     DPTR
802963 EF                MOV     A,R7
 2677: 		break;				
802964 022A17            LJMP    ?C1091?MAINFLOW
 2678: 		case 10:
802967         ?C0579?MAINFLOW:
 2679: 			length = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_BALANCE].str,
802967 7B80              MOV     R3,#BYTE2 080043FH
802969 7A04              MOV     R2,#HIGH 080043FH
80296B 793F              MOV     R1,#LOW 080043FH
80296D 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802970 A5128007B6        ECALL   ?C?PSTXDATA
802975 900521            MOV     DPTR,#DispInformationTable+0B0H
802978 A5128007C0        ECALL   ?C?PLDCODE
80297D 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 45


802980 A5128007B6        ECALL   ?C?PSTXDATA
802985 900468            MOV     DPTR,#SystemParameter+048H
802988 E0                MOVX    A,@DPTR
802989 FA                MOV     R2,A
80298A A3                INC     DPTR
80298B E0                MOVX    A,@DPTR
80298C FB                MOV     R3,A
80298D 900B25            MOV     DPTR,#CurrentPayed
802990 E0                MOVX    A,@DPTR
802991 FE                MOV     R6,A
802992 A3                INC     DPTR
802993 E0                MOVX    A,@DPTR
802994 FF                MOV     R7,A
802995 AD03              MOV     R5,AR3
802997 AC02              MOV     R4,AR2
802999 A51280056C        ECALL   ?C?UIDIV
80299E 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
8029A1 EE                MOV     A,R6
8029A2 F0                MOVX    @DPTR,A
8029A3 A3                INC     DPTR
8029A4 EF                MOV     A,R7
8029A5 F0                MOVX    @DPTR,A
8029A6 900B25            MOV     DPTR,#CurrentPayed
8029A9 E0                MOVX    A,@DPTR
8029AA FE                MOV     R6,A
8029AB A3                INC     DPTR
8029AC E0                MOVX    A,@DPTR
8029AD FF                MOV     R7,A
8029AE AD03              MOV     R5,AR3
8029B0 AC02              MOV     R4,AR2
8029B2 A51280056C        ECALL   ?C?UIDIV
8029B7 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
8029BA EC                MOV     A,R4
8029BB F0                MOVX    @DPTR,A
8029BC A3                INC     DPTR
8029BD ED                MOV     A,R5
8029BE         
 2680: 				CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2681: 		break;
8029BE 8057              SJMP    ?C1091?MAINFLOW
 2682: 		case 100:
8029C0         ?C0580?MAINFLOW:
 2683: 			length = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_BALANCE].str,
8029C0 7B80              MOV     R3,#BYTE2 0800435H
8029C2 7A04              MOV     R2,#HIGH 0800435H
8029C4 7935              MOV     R1,#LOW 0800435H
8029C6 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8029C9 A5128007B6        ECALL   ?C?PSTXDATA
8029CE 900521            MOV     DPTR,#DispInformationTable+0B0H
8029D1 A5128007C0        ECALL   ?C?PLDCODE
8029D6 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8029D9 A5128007B6        ECALL   ?C?PSTXDATA
8029DE 900468            MOV     DPTR,#SystemParameter+048H
8029E1 E0                MOVX    A,@DPTR
8029E2 FA                MOV     R2,A
8029E3 A3                INC     DPTR
8029E4 E0                MOVX    A,@DPTR
8029E5 FB                MOV     R3,A
8029E6 900B25            MOV     DPTR,#CurrentPayed
8029E9 E0                MOVX    A,@DPTR
8029EA FE                MOV     R6,A
8029EB A3                INC     DPTR
8029EC E0                MOVX    A,@DPTR
8029ED FF                MOV     R7,A
8029EE AD03              MOV     R5,AR3
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 46


8029F0 AC02              MOV     R4,AR2
8029F2 A51280056C        ECALL   ?C?UIDIV
8029F7 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
8029FA EE                MOV     A,R6
8029FB F0                MOVX    @DPTR,A
8029FC A3                INC     DPTR
8029FD EF                MOV     A,R7
8029FE F0                MOVX    @DPTR,A
8029FF 900B25            MOV     DPTR,#CurrentPayed
802A02 E0                MOVX    A,@DPTR
802A03 FE                MOV     R6,A
802A04 A3                INC     DPTR
802A05 E0                MOVX    A,@DPTR
802A06 FF                MOV     R7,A
802A07 AD03              MOV     R5,AR3
802A09 AC02              MOV     R4,AR2
802A0B A51280056C        ECALL   ?C?UIDIV
802A10 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
802A13 EC                MOV     A,R4
802A14 F0                MOVX    @DPTR,A
802A15 A3                INC     DPTR
802A16 ED                MOV     A,R5
802A17         
802A17 F0                MOVX    @DPTR,A
802A18 7B00              MOV     R3,#?C?XDATASEG
802A1A 7A04              MOV     R2,#HIGH DisplayBuffer
802A1C 7970              MOV     R1,#LOW DisplayBuffer
802A1E A512800949        ECALL   _sprintf
802A23 90159C            MOV     DPTR,#length
802A26 EF                MOV     A,R7
802A27 F0                MOVX    @DPTR,A
 2684: 				CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2685: 		break;		
 2686: 	}	
802A28         ?C0577?MAINFLOW:
 2687: 	DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
802A28 D21A              SETB    ?_DisplayStr?BIT
802A2A 7B00              MOV     R3,#?C?XDATASEG
802A2C 7A04              MOV     R2,#HIGH DisplayBuffer
802A2E 7970              MOV     R1,#LOW DisplayBuffer
802A30 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
802A33 A5128007B6        ECALL   ?C?PSTXDATA
802A38 90159C            MOV     DPTR,#length
802A3B E0                MOVX    A,@DPTR
802A3C 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
802A3F F0                MOVX    @DPTR,A
802A40 7D01              MOV     R5,#01H
802A42 E4                CLR     A
802A43 FF                MOV     R7,A
802A44 A51280885F        ECALL   _DisplayStr
 2688: 	WaitForWork( 500 , NULL );	
802A49 E4                CLR     A
802A4A 7FF4              MOV     R7,#0F4H
802A4C 7E01              MOV     R6,#01H
802A4E A512808330        ECALL   ?L?COM000D
 2689: 	Trace("\n InputGoodsWayList[CurrentStockCode].SetArrayNo = %bu", InputGoodsWayList[CurrentStockCode].SetArrayNo 
>> );
 2690: 	flag = ChannelTask( InputGoodsWayList[CurrentStockCode].SetArrayNo, CHANNEL_EXEC );
802A53 A512809E71        ECALL   ?L?COM0025
802A58 90159B            MOV     DPTR,#flag
802A5B EF                MOV     A,R7
802A5C F0                MOVX    @DPTR,A
 2691: 	if( flag == 7 )
802A5D BF070C            CJNE    R7,#07H,?C0581?MAINFLOW
 2692: 	{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 47


 2693: 		//接收到的命令包有错误，但货没有出
 2694: 		flag = 0;
802A60 E4                CLR     A
802A61 F0                MOVX    @DPTR,A
 2695: 		flag = ChannelTask( InputGoodsWayList[CurrentStockCode].SetArrayNo, CHANNEL_EXEC );
802A62 A512809E71        ECALL   ?L?COM0025
802A67 90159B            MOV     DPTR,#flag
802A6A EF                MOV     A,R7
802A6B F0                MOVX    @DPTR,A
 2696: 	}
802A6C         ?C0581?MAINFLOW:
 2697: 	Trace( "\n OutGoods flag = %bu", flag );
 2698: 	switch( flag )
802A6C 90159B            MOV     DPTR,#flag
802A6F E0                MOVX    A,@DPTR
802A70 A5128007CD        ECALL   ?C?CCASEX
802A75 2A91              DW      ?C0584?MAINFLOW
802A77 00                DB      00H
802A78 2CE0              DW      ?C0597?MAINFLOW
802A7A 01                DB      01H
802A7B 2CE0              DW      ?C0597?MAINFLOW
802A7D 02                DB      02H
802A7E 2E8D              DW      ?C0606?MAINFLOW
802A80 03                DB      03H
802A81 2E8D              DW      ?C0606?MAINFLOW
802A83 04                DB      04H
802A84 2A91              DW      ?C0584?MAINFLOW
802A86 05                DB      05H
802A87 2E8D              DW      ?C0606?MAINFLOW
802A89 07                DB      07H
802A8A 2EC6              DW      ?C0610?MAINFLOW
802A8C 08                DB      08H
802A8D 0000              DW      00H
802A8F 2F70              DW      ?C0582?MAINFLOW
 2699: 	{
 2700: 		case 0://出货成功	
 2701: 		case 5://在限定的时间内电机不能到位（但货已出成功，货道有硬件故障）
802A91         ?C0584?MAINFLOW:
 2702: 		{		
 2703: 			Trace( "\n OutGoods 11" );
 2704: 			CurrentPayed = CurrentPayed - GoodsWaySetVal[CurrentStockCode].Price;
802A91 900B28            MOV     DPTR,#CurrentStockCode
802A94 E0                MOVX    A,@DPTR
802A95 75F005            MOV     B,#05H
802A98 900006            MOV     DPTR,#GoodsWaySetVal+02H
802A9B A51280079F        ECALL   ?C?OFFXADD
802AA0 E0                MOVX    A,@DPTR
802AA1 FE                MOV     R6,A
802AA2 A3                INC     DPTR
802AA3 E0                MOVX    A,@DPTR
802AA4 FF                MOV     R7,A
802AA5 C3                CLR     C
802AA6 900B26            MOV     DPTR,#CurrentPayed+01H
802AA9 E0                MOVX    A,@DPTR
802AAA 9F                SUBB    A,R7
802AAB F0                MOVX    @DPTR,A
802AAC 900B25            MOV     DPTR,#CurrentPayed
802AAF E0                MOVX    A,@DPTR
802AB0 9E                SUBB    A,R6
802AB1 F0                MOVX    @DPTR,A
 2705: 			DisplayLine = STR_TAKE_GOODS;
802AB2 900B27            MOV     DPTR,#DisplayLine
802AB5 741A              MOV     A,#01AH
802AB7 A512808829        ECALL   ?L?COM0003
 2706: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 48


 2707: 			if( ( IsCanChange() == 0 ) && ( ( SystemParameter.IsMuliVerd != 1 ) || \
802ABC A51280A003        ECALL   IsCanChange
802AC1 EF                MOV     A,R7
802AC2 7027              JNZ     ?C0585?MAINFLOW
802AC4 900428            MOV     DPTR,#SystemParameter+08H
802AC7 E0                MOVX    A,@DPTR
802AC8 B40116            CJNE    A,#01H,?C0586?MAINFLOW
802ACB B4011D            CJNE    A,#01H,?C0585?MAINFLOW
802ACE A3                INC     DPTR
802ACF E0                MOVX    A,@DPTR
802AD0 FE                MOV     R6,A
802AD1 A3                INC     DPTR
802AD2 E0                MOVX    A,@DPTR
802AD3 FF                MOV     R7,A
802AD4 C3                CLR     C
802AD5 900B26            MOV     DPTR,#CurrentPayed+01H
802AD8 E0                MOVX    A,@DPTR
802AD9 9F                SUBB    A,R7
802ADA 900B25            MOV     DPTR,#CurrentPayed
802ADD E0                MOVX    A,@DPTR
802ADE 9E                SUBB    A,R6
802ADF 500A              JNC     ?C0585?MAINFLOW
802AE1         ?C0586?MAINFLOW:
 2708: 			( ( SystemParameter.IsMuliVerd == 1 ) && ( CurrentPayed < SystemParameter.Min ) ) ) )
 2709:  		    	ClearDisplayLine( 2 );
802AE1 7F02              MOV     R7,#02H
802AE3 A512808FB8        ECALL   _ClearDisplayLine
802AE8 022C38            LJMP    ?C0587?MAINFLOW
802AEB         ?C0585?MAINFLOW:
 2710: 			else
 2711: 			{
 2712: 				memset( DisplayBuffer, 0, sizeof(DisplayBuffer ));
802AEB 7E00              MOV     R6,#00H
802AED 7F14              MOV     R7,#014H
802AEF 7D00              MOV     R5,#00H
802AF1 7B00              MOV     R3,#?C?XDATASEG
802AF3 7A04              MOV     R2,#HIGH DisplayBuffer
802AF5 7970              MOV     R1,#LOW DisplayBuffer
802AF7 A5128008A6        ECALL   ?C?MEMSET
 2713: 				switch( SystemParameter.curUnit )
802AFC 900468            MOV     DPTR,#SystemParameter+048H
802AFF E0                MOVX    A,@DPTR
802B00 FE                MOV     R6,A
802B01 A3                INC     DPTR
802B02 E0                MOVX    A,@DPTR
802B03 FF                MOV     R7,A
802B04 EE                MOV     A,R6
802B05 6003              JZ      $ + 5H
802B07 022C0D            LJMP    ?C0588?MAINFLOW
802B0A EF                MOV     A,R7
802B0B 24F6              ADD     A,#0F6H
802B0D 603D              JZ      ?C0590?MAINFLOW
802B0F 24A6              ADD     A,#0A6H
802B11 7003              JNZ     $ + 5H
802B13 022BA5            LJMP    ?C0591?MAINFLOW
802B16 2463              ADD     A,#063H
802B18 6003              JZ      $ + 5H
802B1A 022C0D            LJMP    ?C0588?MAINFLOW
 2714: 				{
 2715: 					case 1:	
802B1D         ?C0589?MAINFLOW:
 2716: 						length = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_BALANCE].str,CurrentPayed );	
802B1D 7B80              MOV     R3,#BYTE2 0800430H
802B1F 7A04              MOV     R2,#HIGH 0800430H
802B21 7930              MOV     R1,#LOW 0800430H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 49


802B23 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802B26 A5128007B6        ECALL   ?C?PSTXDATA
802B2B 900521            MOV     DPTR,#DispInformationTable+0B0H
802B2E A5128007C0        ECALL   ?C?PLDCODE
802B33 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802B36 A5128007B6        ECALL   ?C?PSTXDATA
802B3B 900B25            MOV     DPTR,#CurrentPayed
802B3E E0                MOVX    A,@DPTR
802B3F FF                MOV     R7,A
802B40 A3                INC     DPTR
802B41 E0                MOVX    A,@DPTR
802B42 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
802B45 CF                XCH     A,R7
802B46 F0                MOVX    @DPTR,A
802B47 A3                INC     DPTR
802B48 EF                MOV     A,R7
 2717: 					break;				
802B49 022BFC            LJMP    ?C1093?MAINFLOW
 2718: 					case 10:
802B4C         ?C0590?MAINFLOW:
 2719: 						length = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_BALANCE].str,
802B4C 7B80              MOV     R3,#BYTE2 080043FH
802B4E 7A04              MOV     R2,#HIGH 080043FH
802B50 793F              MOV     R1,#LOW 080043FH
802B52 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802B55 A5128007B6        ECALL   ?C?PSTXDATA
802B5A 900521            MOV     DPTR,#DispInformationTable+0B0H
802B5D A5128007C0        ECALL   ?C?PLDCODE
802B62 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802B65 A5128007B6        ECALL   ?C?PSTXDATA
802B6A 900468            MOV     DPTR,#SystemParameter+048H
802B6D E0                MOVX    A,@DPTR
802B6E FA                MOV     R2,A
802B6F A3                INC     DPTR
802B70 E0                MOVX    A,@DPTR
802B71 FB                MOV     R3,A
802B72 900B25            MOV     DPTR,#CurrentPayed
802B75 E0                MOVX    A,@DPTR
802B76 FE                MOV     R6,A
802B77 A3                INC     DPTR
802B78 E0                MOVX    A,@DPTR
802B79 FF                MOV     R7,A
802B7A AD03              MOV     R5,AR3
802B7C AC02              MOV     R4,AR2
802B7E A51280056C        ECALL   ?C?UIDIV
802B83 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
802B86 EE                MOV     A,R6
802B87 F0                MOVX    @DPTR,A
802B88 A3                INC     DPTR
802B89 EF                MOV     A,R7
802B8A F0                MOVX    @DPTR,A
802B8B 900B25            MOV     DPTR,#CurrentPayed
802B8E E0                MOVX    A,@DPTR
802B8F FE                MOV     R6,A
802B90 A3                INC     DPTR
802B91 E0                MOVX    A,@DPTR
802B92 FF                MOV     R7,A
802B93 AD03              MOV     R5,AR3
802B95 AC02              MOV     R4,AR2
802B97 A51280056C        ECALL   ?C?UIDIV
802B9C 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
802B9F EC                MOV     A,R4
802BA0 F0                MOVX    @DPTR,A
802BA1 A3                INC     DPTR
802BA2 ED                MOV     A,R5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 50


802BA3         
 2720: 							CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2721: 					break;
802BA3 8057              SJMP    ?C1093?MAINFLOW
 2722: 					case 100:
802BA5         ?C0591?MAINFLOW:
 2723: 						length = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_BALANCE].str,
802BA5 7B80              MOV     R3,#BYTE2 0800435H
802BA7 7A04              MOV     R2,#HIGH 0800435H
802BA9 7935              MOV     R1,#LOW 0800435H
802BAB 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802BAE A5128007B6        ECALL   ?C?PSTXDATA
802BB3 900521            MOV     DPTR,#DispInformationTable+0B0H
802BB6 A5128007C0        ECALL   ?C?PLDCODE
802BBB 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802BBE A5128007B6        ECALL   ?C?PSTXDATA
802BC3 900468            MOV     DPTR,#SystemParameter+048H
802BC6 E0                MOVX    A,@DPTR
802BC7 FA                MOV     R2,A
802BC8 A3                INC     DPTR
802BC9 E0                MOVX    A,@DPTR
802BCA FB                MOV     R3,A
802BCB 900B25            MOV     DPTR,#CurrentPayed
802BCE E0                MOVX    A,@DPTR
802BCF FE                MOV     R6,A
802BD0 A3                INC     DPTR
802BD1 E0                MOVX    A,@DPTR
802BD2 FF                MOV     R7,A
802BD3 AD03              MOV     R5,AR3
802BD5 AC02              MOV     R4,AR2
802BD7 A51280056C        ECALL   ?C?UIDIV
802BDC 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
802BDF EE                MOV     A,R6
802BE0 F0                MOVX    @DPTR,A
802BE1 A3                INC     DPTR
802BE2 EF                MOV     A,R7
802BE3 F0                MOVX    @DPTR,A
802BE4 900B25            MOV     DPTR,#CurrentPayed
802BE7 E0                MOVX    A,@DPTR
802BE8 FE                MOV     R6,A
802BE9 A3                INC     DPTR
802BEA E0                MOVX    A,@DPTR
802BEB FF                MOV     R7,A
802BEC AD03              MOV     R5,AR3
802BEE AC02              MOV     R4,AR2
802BF0 A51280056C        ECALL   ?C?UIDIV
802BF5 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
802BF8 EC                MOV     A,R4
802BF9 F0                MOVX    @DPTR,A
802BFA A3                INC     DPTR
802BFB ED                MOV     A,R5
802BFC         
802BFC F0                MOVX    @DPTR,A
802BFD 7B00              MOV     R3,#?C?XDATASEG
802BFF 7A04              MOV     R2,#HIGH DisplayBuffer
802C01 7970              MOV     R1,#LOW DisplayBuffer
802C03 A512800949        ECALL   _sprintf
802C08 90159C            MOV     DPTR,#length
802C0B EF                MOV     A,R7
802C0C F0                MOVX    @DPTR,A
 2724: 							CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2725: 					break;		
 2726: 				}
802C0D         ?C0588?MAINFLOW:
 2727: 				DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 51


802C0D D21A              SETB    ?_DisplayStr?BIT
802C0F 7B00              MOV     R3,#?C?XDATASEG
802C11 7A04              MOV     R2,#HIGH DisplayBuffer
802C13 7970              MOV     R1,#LOW DisplayBuffer
802C15 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
802C18 A5128007B6        ECALL   ?C?PSTXDATA
802C1D 90159C            MOV     DPTR,#length
802C20 E0                MOVX    A,@DPTR
802C21 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
802C24 F0                MOVX    @DPTR,A
802C25 7D01              MOV     R5,#01H
802C27 E4                CLR     A
802C28 FF                MOV     R7,A
802C29 A51280885F        ECALL   _DisplayStr
 2728: 				WaitForWork( 1500 , NULL );		
802C2E E4                CLR     A
802C2F 7FDC              MOV     R7,#0DCH
802C31 7E05              MOV     R6,#05H
802C33 A512808330        ECALL   ?L?COM000D
 2729: 			}
802C38         ?C0587?MAINFLOW:
 2730:             
 2731: 			if( SystemParameter.GOCOn != 0x01 )
802C38 90046B            MOV     DPTR,#SystemParameter+04BH
802C3B E0                MOVX    A,@DPTR
802C3C 6401              XRL     A,#01H
802C3E 6035              JZ      ?C0592?MAINFLOW
 2732: 			{
 2733: 				GoodsWaySetVal[ CurrentStockCode].GoodsCurrentSum --;
802C40 900B28            MOV     DPTR,#CurrentStockCode
802C43 E0                MOVX    A,@DPTR
802C44 FF                MOV     R7,A
802C45 75F005            MOV     B,#05H
802C48 900008            MOV     DPTR,#GoodsWaySetVal+04H
802C4B A51280079F        ECALL   ?C?OFFXADD
802C50 E0                MOVX    A,@DPTR
802C51 14                DEC     A
802C52 F0                MOVX    @DPTR,A
 2734: 				if( GoodsWaySetVal[ CurrentStockCode].GoodsCurrentSum == 0 )
802C53 75F005            MOV     B,#05H
802C56 EF                MOV     A,R7
802C57 900008            MOV     DPTR,#GoodsWaySetVal+04H
802C5A A51280079F        ECALL   ?C?OFFXADD
802C5F E0                MOVX    A,@DPTR
802C60 7013              JNZ     ?C0592?MAINFLOW
 2735: 					GoodsWaySetVal[CurrentStockCode].WayState |= 0x04;
802C62 900B28            MOV     DPTR,#CurrentStockCode
802C65 E0                MOVX    A,@DPTR
802C66 75F005            MOV     B,#05H
802C69 900005            MOV     DPTR,#GoodsWaySetVal+01H
802C6C A51280079F        ECALL   ?C?OFFXADD
802C71 E0                MOVX    A,@DPTR
802C72 4404              ORL     A,#04H
802C74 F0                MOVX    @DPTR,A
 2736:             }
802C75         ?C0592?MAINFLOW:
 2737: 
 2738: 			if( flag == 5 )
802C75 90159B            MOV     DPTR,#flag
802C78 E0                MOVX    A,@DPTR
802C79 B40513            CJNE    A,#05H,?C0594?MAINFLOW
 2739: 			{
 2740: 				GoodsWaySetVal[CurrentStockCode].WayState |= 0x02;
802C7C 900B28            MOV     DPTR,#CurrentStockCode
802C7F E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 52


802C80 75F005            MOV     B,#05H
802C83 900005            MOV     DPTR,#GoodsWaySetVal+01H
802C86 A51280079F        ECALL   ?C?OFFXADD
802C8B E0                MOVX    A,@DPTR
802C8C 4402              ORL     A,#02H
802C8E F0                MOVX    @DPTR,A
 2741: 			}
802C8F         ?C0594?MAINFLOW:
 2742: 
 2743: 			SaveGoodsSet();	
802C8F A51280DA64        ECALL   SaveGoodsSet
 2744: 			TradeCounter.TradeCurrencySum += GoodsWaySetVal[ CurrentStockCode].Price;//正常交易的总金额
802C94 900AFD            MOV     DPTR,#TradeCounter+0CH
802C97 A51280073E        ECALL   ?C?LLDXDATA0
802C9C 900B28            MOV     DPTR,#CurrentStockCode
802C9F E0                MOVX    A,@DPTR
802CA0 75F005            MOV     B,#05H
802CA3 900006            MOV     DPTR,#GoodsWaySetVal+02H
802CA6 A51280079F        ECALL   ?C?OFFXADD
802CAB E0                MOVX    A,@DPTR
802CAC FE                MOV     R6,A
802CAD A3                INC     DPTR
802CAE E0                MOVX    A,@DPTR
802CAF FF                MOV     R7,A
802CB0 E4                CLR     A
802CB1 FC                MOV     R4,A
802CB2 FD                MOV     R5,A
802CB3 A51280062E        ECALL   ?C?LADD
802CB8 900AFD            MOV     DPTR,#TradeCounter+0CH
802CBB A512800792        ECALL   ?C?LSTXDATA
 2745: 			TradeCounter.GoodTraceSum ++ ;//正常交易次数
802CC0 900B01            MOV     DPTR,#TradeCounter+010H
802CC3 E4                CLR     A
802CC4 75F001            MOV     B,#01H
802CC7 A512800600        ECALL   ?C?IILDX
 2746: 			TradeLog[ CurrentStockCode].TraceSum += 1;//此货道正常交易次数
802CCC 900B28            MOV     DPTR,#CurrentStockCode
802CCF E0                MOVX    A,@DPTR
802CD0 75F009            MOV     B,#09H
802CD3 9001C8            MOV     DPTR,#TradeLog+01H
802CD6 A51280DA7D        ECALL   ?L?COM002D
 2747: 			SaveTradeCounter();
 2748: 			return 0;
802CDB 7F00              MOV     R7,#00H
802CDD 022F72            LJMP    ?C0595?MAINFLOW
 2749: 		}
 2750: 		break;
 2751: 		//命令失败和超时都是有疑问的交易
 2752: 		case 2://超时,货道板和主机通讯有问题,可认为整个出货统有问题		
 2753: 		case 1://命令失败，但失败原因不明，只能当疑问处理了
802CE0         ?C0597?MAINFLOW:
 2754: 		{
 2755: 			Trace( "\n OutGoods 12" );
 2756: 			// 出货超时
 2757: 			DisplayLine = STR_GOODS_WAY_ERR1;
802CE0 900B27            MOV     DPTR,#DisplayLine
802CE3 741C              MOV     A,#01CH
802CE5 A512808829        ECALL   ?L?COM0003
 2758: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
>> 	
 2759: 			GoodsWaySetVal[CurrentStockCode].WayState |= 0x02;				
802CEA 900B28            MOV     DPTR,#CurrentStockCode
802CED E0                MOVX    A,@DPTR
802CEE 75F005            MOV     B,#05H
802CF1 900005            MOV     DPTR,#GoodsWaySetVal+01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 53


802CF4 A51280079F        ECALL   ?C?OFFXADD
802CF9 E0                MOVX    A,@DPTR
802CFA 4402              ORL     A,#02H
802CFC F0                MOVX    @DPTR,A
 2760: 			if( IsCanChange() == 1 )
802CFD A51280A003        ECALL   IsCanChange
802D02 EF                MOV     A,R7
802D03 6401              XRL     A,#01H
802D05 6003              JZ      $ + 5H
802D07 022E4D            LJMP    ?C0598?MAINFLOW
 2761: 			{
 2762: 				memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );				
802D0A FE                MOV     R6,A
802D0B 7F14              MOV     R7,#014H
802D0D FD                MOV     R5,A
802D0E 7B00              MOV     R3,#?C?XDATASEG
802D10 7A04              MOV     R2,#HIGH DisplayBuffer
802D12 7970              MOV     R1,#LOW DisplayBuffer
802D14 A5128008A6        ECALL   ?C?MEMSET
 2763: 				switch( SystemParameter.curUnit )
802D19 900468            MOV     DPTR,#SystemParameter+048H
802D1C E0                MOVX    A,@DPTR
802D1D FE                MOV     R6,A
802D1E A3                INC     DPTR
802D1F E0                MOVX    A,@DPTR
802D20 FF                MOV     R7,A
802D21 EE                MOV     A,R6
802D22 6003              JZ      $ + 5H
802D24 022E2A            LJMP    ?C0599?MAINFLOW
802D27 EF                MOV     A,R7
802D28 24F6              ADD     A,#0F6H
802D2A 603D              JZ      ?C0601?MAINFLOW
802D2C 24A6              ADD     A,#0A6H
802D2E 7003              JNZ     $ + 5H
802D30 022DC2            LJMP    ?C0602?MAINFLOW
802D33 2463              ADD     A,#063H
802D35 6003              JZ      $ + 5H
802D37 022E2A            LJMP    ?C0599?MAINFLOW
 2764: 				{
 2765: 					case 1:	
802D3A         ?C0600?MAINFLOW:
 2766: 						length = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_BALANCE].str,CurrentPayed );	
802D3A 7B80              MOV     R3,#BYTE2 0800430H
802D3C 7A04              MOV     R2,#HIGH 0800430H
802D3E 7930              MOV     R1,#LOW 0800430H
802D40 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802D43 A5128007B6        ECALL   ?C?PSTXDATA
802D48 900521            MOV     DPTR,#DispInformationTable+0B0H
802D4B A5128007C0        ECALL   ?C?PLDCODE
802D50 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802D53 A5128007B6        ECALL   ?C?PSTXDATA
802D58 900B25            MOV     DPTR,#CurrentPayed
802D5B E0                MOVX    A,@DPTR
802D5C FF                MOV     R7,A
802D5D A3                INC     DPTR
802D5E E0                MOVX    A,@DPTR
802D5F 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
802D62 CF                XCH     A,R7
802D63 F0                MOVX    @DPTR,A
802D64 A3                INC     DPTR
802D65 EF                MOV     A,R7
 2767: 					break;				
802D66 022E19            LJMP    ?C1095?MAINFLOW
 2768: 					case 10:
802D69         ?C0601?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 54


 2769: 						length = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_BALANCE].str,
802D69 7B80              MOV     R3,#BYTE2 080043FH
802D6B 7A04              MOV     R2,#HIGH 080043FH
802D6D 793F              MOV     R1,#LOW 080043FH
802D6F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802D72 A5128007B6        ECALL   ?C?PSTXDATA
802D77 900521            MOV     DPTR,#DispInformationTable+0B0H
802D7A A5128007C0        ECALL   ?C?PLDCODE
802D7F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802D82 A5128007B6        ECALL   ?C?PSTXDATA
802D87 900468            MOV     DPTR,#SystemParameter+048H
802D8A E0                MOVX    A,@DPTR
802D8B FA                MOV     R2,A
802D8C A3                INC     DPTR
802D8D E0                MOVX    A,@DPTR
802D8E FB                MOV     R3,A
802D8F 900B25            MOV     DPTR,#CurrentPayed
802D92 E0                MOVX    A,@DPTR
802D93 FE                MOV     R6,A
802D94 A3                INC     DPTR
802D95 E0                MOVX    A,@DPTR
802D96 FF                MOV     R7,A
802D97 AD03              MOV     R5,AR3
802D99 AC02              MOV     R4,AR2
802D9B A51280056C        ECALL   ?C?UIDIV
802DA0 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
802DA3 EE                MOV     A,R6
802DA4 F0                MOVX    @DPTR,A
802DA5 A3                INC     DPTR
802DA6 EF                MOV     A,R7
802DA7 F0                MOVX    @DPTR,A
802DA8 900B25            MOV     DPTR,#CurrentPayed
802DAB E0                MOVX    A,@DPTR
802DAC FE                MOV     R6,A
802DAD A3                INC     DPTR
802DAE E0                MOVX    A,@DPTR
802DAF FF                MOV     R7,A
802DB0 AD03              MOV     R5,AR3
802DB2 AC02              MOV     R4,AR2
802DB4 A51280056C        ECALL   ?C?UIDIV
802DB9 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
802DBC EC                MOV     A,R4
802DBD F0                MOVX    @DPTR,A
802DBE A3                INC     DPTR
802DBF ED                MOV     A,R5
802DC0         
 2770: 							CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2771: 					break;
802DC0 8057              SJMP    ?C1095?MAINFLOW
 2772: 					case 100:
802DC2         ?C0602?MAINFLOW:
 2773: 						length = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_BALANCE].str,
802DC2 7B80              MOV     R3,#BYTE2 0800435H
802DC4 7A04              MOV     R2,#HIGH 0800435H
802DC6 7935              MOV     R1,#LOW 0800435H
802DC8 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802DCB A5128007B6        ECALL   ?C?PSTXDATA
802DD0 900521            MOV     DPTR,#DispInformationTable+0B0H
802DD3 A5128007C0        ECALL   ?C?PLDCODE
802DD8 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802DDB A5128007B6        ECALL   ?C?PSTXDATA
802DE0 900468            MOV     DPTR,#SystemParameter+048H
802DE3 E0                MOVX    A,@DPTR
802DE4 FA                MOV     R2,A
802DE5 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 55


802DE6 E0                MOVX    A,@DPTR
802DE7 FB                MOV     R3,A
802DE8 900B25            MOV     DPTR,#CurrentPayed
802DEB E0                MOVX    A,@DPTR
802DEC FE                MOV     R6,A
802DED A3                INC     DPTR
802DEE E0                MOVX    A,@DPTR
802DEF FF                MOV     R7,A
802DF0 AD03              MOV     R5,AR3
802DF2 AC02              MOV     R4,AR2
802DF4 A51280056C        ECALL   ?C?UIDIV
802DF9 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
802DFC EE                MOV     A,R6
802DFD F0                MOVX    @DPTR,A
802DFE A3                INC     DPTR
802DFF EF                MOV     A,R7
802E00 F0                MOVX    @DPTR,A
802E01 900B25            MOV     DPTR,#CurrentPayed
802E04 E0                MOVX    A,@DPTR
802E05 FE                MOV     R6,A
802E06 A3                INC     DPTR
802E07 E0                MOVX    A,@DPTR
802E08 FF                MOV     R7,A
802E09 AD03              MOV     R5,AR3
802E0B AC02              MOV     R4,AR2
802E0D A51280056C        ECALL   ?C?UIDIV
802E12 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
802E15 EC                MOV     A,R4
802E16 F0                MOVX    @DPTR,A
802E17 A3                INC     DPTR
802E18 ED                MOV     A,R5
802E19         
802E19 F0                MOVX    @DPTR,A
802E1A 7B00              MOV     R3,#?C?XDATASEG
802E1C 7A04              MOV     R2,#HIGH DisplayBuffer
802E1E 7970              MOV     R1,#LOW DisplayBuffer
802E20 A512800949        ECALL   _sprintf
802E25 90159C            MOV     DPTR,#length
802E28 EF                MOV     A,R7
802E29 F0                MOVX    @DPTR,A
 2774: 							CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2775: 					break;		
 2776: 				}				
802E2A         ?C0599?MAINFLOW:
 2777: 				DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
802E2A D21A              SETB    ?_DisplayStr?BIT
802E2C 7B00              MOV     R3,#?C?XDATASEG
802E2E 7A04              MOV     R2,#HIGH DisplayBuffer
802E30 7970              MOV     R1,#LOW DisplayBuffer
802E32 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
802E35 A5128007B6        ECALL   ?C?PSTXDATA
802E3A 90159C            MOV     DPTR,#length
802E3D E0                MOVX    A,@DPTR
802E3E 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
802E41 F0                MOVX    @DPTR,A
802E42 7D01              MOV     R5,#01H
802E44 E4                CLR     A
802E45 FF                MOV     R7,A
802E46 A51280885F        ECALL   _DisplayStr
 2778: 				WaitForWork( 1000 , NULL );
 2779: 			}
802E4B 8007              SJMP    ?C1096?MAINFLOW
802E4D         ?C0598?MAINFLOW:
 2780: 			else
 2781: 			{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 56


 2782: 				ClearDisplayLine( 2 );
802E4D 7F02              MOV     R7,#02H
802E4F A512808FB8        ECALL   _ClearDisplayLine
 2783: 				WaitForWork( 1000 , NULL );	
802E54         
802E54 E4                CLR     A
802E55 7FE8              MOV     R7,#0E8H
802E57 7E03              MOV     R6,#03H
802E59 A512808330        ECALL   ?L?COM000D
 2784: 			}
802E5E         ?C0603?MAINFLOW:
 2785: 			CurrentDispenseCoin = CurrentPayed;	
802E5E A512803712        ECALL   ?L?COM0023
 2786: 			CurrentPayed = 0;
 2787: 			DispenseCoin();	
 2788:             //=====================================================================
 2789: 			GoodsWaySetVal[CurrentStockCode].WayState |= 0x02;
802E63 A51280DA51        ECALL   ?L?COM0024
 2790:             SaveGoodsSet();                  //Added by Andy on 2010.9.2
 2791: 			//---------------------------------------------------------------------							
 2792: 			TradeCounter.GoodDoubtTraceSum ++ ;//有疑问出货交易次数计数		
802E68 900B03            MOV     DPTR,#TradeCounter+012H
802E6B E4                CLR     A
802E6C 75F001            MOV     B,#01H
802E6F A512800600        ECALL   ?C?IILDX
 2793: 			TradeLog[ CurrentStockCode].DoubtTraceSum ++;//此货道有疑问交易次数
802E74 900B28            MOV     DPTR,#CurrentStockCode
802E77 E0                MOVX    A,@DPTR
802E78 75F009            MOV     B,#09H
802E7B 9001CA            MOV     DPTR,#TradeLog+03H
802E7E A51280DA7D        ECALL   ?L?COM002D
 2794: 			SaveTradeCounter();
 2795: 			SaveTradeParam();
802E83 A51280DB42        ECALL   SaveTradeParam
 2796: 			return 2;						
802E88 7F02              MOV     R7,#02H
802E8A 022F72            LJMP    ?C0595?MAINFLOW
 2797: 		}
 2798: 		break;
 2799: 		//出货失败，如果不能找零，则看其它货道是否能服务，如能则让顾额选其它货
 2800: 		case 3:   //在转动前电机没有到位，没有出货，此货道已不能工作了
 2801: 		case 4:   //电机没有转动，没有出货，可以重试一次
 2802: 		case 7:   //接收到的命令包有错误，但货没有出
802E8D         ?C0606?MAINFLOW:
 2803: 		{	
 2804: 			Trace( "\n OutGoods 13" );
 2805: 			DisplayLine = STR_GOODS_WAY_ERR1;
802E8D 900B27            MOV     DPTR,#DisplayLine
802E90 741C              MOV     A,#01CH
802E92 A512808829        ECALL   ?L?COM0003
 2806: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
>> 	
 2807: 			//=====================================================================
 2808: 			GoodsWaySetVal[CurrentStockCode].WayState |= 0x02;
802E97 A51280DA51        ECALL   ?L?COM0024
 2809:             SaveGoodsSet();                  //Added by Andy on 2010.9.2
 2810: 			//---------------------------------------------------------------------
 2811: 			if( IsCanChange() == 0 )
802E9C A51280A003        ECALL   IsCanChange
802EA1 EF                MOV     A,R7
802EA2 700C              JNZ     ?C0607?MAINFLOW
 2812: 			{
 2813: 				if( ColnumIsCanServer() == 1 )
802EA4 A51280A03B        ECALL   ColnumIsCanServer
802EA9 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 57


802EAA 6401              XRL     A,#01H
802EAC 7013              JNZ     ?C0609?MAINFLOW
 2814: 				{
 2815: 					memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );
 2816: 				#ifdef _CHINA_
 2817: 					length = sprintf( DisplayBuffer, "选择其它商品");
 2818: 				#else
 2819: 					length = sprintf( DisplayBuffer, "Select another one" );
 2820: 				#endif			
 2821: 					DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
 2822: 					WaitForWork( 2500 , NULL );
 2823: 					DisplayCurrentMoney(CurrentPayed);
 2824: 					return 1;
802EAE 804A              SJMP    ?C1097?MAINFLOW
 2825: 				}						
 2826: 			}
802EB0         ?C0607?MAINFLOW:
 2827: 			else
 2828: 			{
 2829: 				ClearDisplayLine( 2 );
802EB0 7F02              MOV     R7,#02H
802EB2 A512808FB8        ECALL   _ClearDisplayLine
 2830: 				WaitForWork( 2500 , NULL );
802EB7 E4                CLR     A
802EB8 7FC4              MOV     R7,#0C4H
802EBA 7E09              MOV     R6,#09H
802EBC A512808330        ECALL   ?L?COM000D
 2831: 			}
802EC1         ?C0609?MAINFLOW:
 2832: 			return 0;		
802EC1 7F00              MOV     R7,#00H
802EC3 022F72            LJMP    ?C0595?MAINFLOW
 2833: 		}
 2834: 		break;
 2835: 		case 8:   //The goods cann't pass the check position
802EC6         ?C0610?MAINFLOW:
 2836: 		{	
 2837: 			Trace( "\n OutGoods 13" );
 2838: 			DisplayLine = STR_GOODS_WAY_ERR1;
802EC6 900B27            MOV     DPTR,#DisplayLine
802EC9 741C              MOV     A,#01CH
802ECB A512808829        ECALL   ?L?COM0003
 2839: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
>> 	
 2840: 			//=====================================================================
 2841:             #ifdef SYS_GOOS_SOLDOUT_CTR
 2842: 				GoodsWaySetVal[CurrentStockCode].WayState |= 0x04;   //Need?
802ED0 900B28            MOV     DPTR,#CurrentStockCode
802ED3 E0                MOVX    A,@DPTR
802ED4 75F005            MOV     B,#05H
802ED7 900005            MOV     DPTR,#GoodsWaySetVal+01H
802EDA A51280079F        ECALL   ?C?OFFXADD
802EDF E0                MOVX    A,@DPTR
802EE0 4404              ORL     A,#04H
802EE2 F0                MOVX    @DPTR,A
 2843:             #endif
 2844:             SaveGoodsSet();                  
802EE3 A51280DA64        ECALL   SaveGoodsSet
 2845: 			//---------------------------------------------------------------------
 2846: 			if( IsCanChange() == 0 )
802EE8 A51280A003        ECALL   IsCanChange
802EED EF                MOV     A,R7
802EEE 706B              JNZ     ?C0611?MAINFLOW
 2847: 			{
 2848: 				if( ColnumIsCanServer() == 1 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 58


802EF0 A51280A03B        ECALL   ColnumIsCanServer
802EF5 EF                MOV     A,R7
802EF6 6401              XRL     A,#01H
802EF8 7072              JNZ     ?C0613?MAINFLOW
 2849: 				{
 2850: 					memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );
802EFA         
802EFA FE                MOV     R6,A
802EFB 7F14              MOV     R7,#014H
802EFD FD                MOV     R5,A
802EFE 7B00              MOV     R3,#?C?XDATASEG
802F00 7A04              MOV     R2,#HIGH DisplayBuffer
802F02 7970              MOV     R1,#LOW DisplayBuffer
802F04 A5128008A6        ECALL   ?C?MEMSET
 2851: 				#ifdef _CHINA_
 2852: 					length = sprintf( DisplayBuffer, "选择其它商品");
 2853: 				#else
 2854: 					length = sprintf( DisplayBuffer, "Select another one" );
802F09 7B80              MOV     R3,#BYTE2 0800447H
802F0B 7A04              MOV     R2,#HIGH 0800447H
802F0D 7947              MOV     R1,#LOW 0800447H
802F0F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802F12 A5128007B6        ECALL   ?C?PSTXDATA
802F17 7B00              MOV     R3,#?C?XDATASEG
802F19 7A04              MOV     R2,#HIGH DisplayBuffer
802F1B 7970              MOV     R1,#LOW DisplayBuffer
802F1D A512800949        ECALL   _sprintf
802F22 90159C            MOV     DPTR,#length
802F25 EF                MOV     A,R7
802F26 F0                MOVX    @DPTR,A
 2855: 				#endif			
 2856: 					DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
802F27 D21A              SETB    ?_DisplayStr?BIT
802F29 7B00              MOV     R3,#?C?XDATASEG
802F2B 7A04              MOV     R2,#HIGH DisplayBuffer
802F2D 7970              MOV     R1,#LOW DisplayBuffer
802F2F 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
802F32 A5128007B6        ECALL   ?C?PSTXDATA
802F37 90159C            MOV     DPTR,#length
802F3A E0                MOVX    A,@DPTR
802F3B 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
802F3E F0                MOVX    @DPTR,A
802F3F 7D01              MOV     R5,#01H
802F41 E4                CLR     A
802F42 FF                MOV     R7,A
802F43 A51280885F        ECALL   _DisplayStr
 2857: 					WaitForWork( 2500 , NULL );
802F48 E4                CLR     A
802F49 7FC4              MOV     R7,#0C4H
802F4B 7E09              MOV     R6,#09H
802F4D A512808330        ECALL   ?L?COM000D
 2858: 					DisplayCurrentMoney(CurrentPayed);
802F52 A512801AFF        ECALL   ?L?COM001F
 2859: 					return 1;
802F57 7F01              MOV     R7,#01H
802F59 8017              SJMP    ?C0595?MAINFLOW
 2860: 				}						
 2861: 			}
802F5B         ?C0611?MAINFLOW:
 2862: 			else
 2863: 			{
 2864: 				ClearDisplayLine( 2 );
802F5B 7F02              MOV     R7,#02H
802F5D A512808FB8        ECALL   _ClearDisplayLine
 2865: 				WaitForWork( 2500 , NULL );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 59


802F62 E4                CLR     A
802F63 7FC4              MOV     R7,#0C4H
802F65 7E09              MOV     R6,#09H
802F67 A512808330        ECALL   ?L?COM000D
 2866: 			}
802F6C         ?C0613?MAINFLOW:
 2867: 			return 0;		
802F6C 7F00              MOV     R7,#00H
802F6E 8002              SJMP    ?C0595?MAINFLOW
 2868: 		}
 2869: 		break;
 2870: 		default: break;
 2871: 	}
802F70         ?C0582?MAINFLOW:
 2872: 	return 0;
802F70 7F00              MOV     R7,#00H
 2873: }
802F72         ?C0595?MAINFLOW:
802F72 A522              ERET    
----- FUNCTION OutGoods (END) -------


----- FUNCTION ReBuy (BEGIN) -----
 FILE: 'mainflow.c'
 2876: u_char ReBuy()
 2877: {
 2878: 	u_char xdata i = 0;	
 2879: 	u_char xdata j = 0;
802F74 E4                CLR     A
802F75 90159B            MOV     DPTR,#i
802F78 F0                MOVX    @DPTR,A
 2880: 
802F79 A3                INC     DPTR
802F7A F0                MOVX    @DPTR,A
 2881: 	if( CurrentPayed == 0 )
802F7B 900B25            MOV     DPTR,#CurrentPayed
802F7E E0                MOVX    A,@DPTR
802F7F 7002              JNZ     ?C1030?MAINFLOW
802F81 A3                INC     DPTR
802F82 E0                MOVX    A,@DPTR
802F83         ?C1030?MAINFLOW:
802F83 7004              JNZ     ?C0615?MAINFLOW
 2882: 		return 0;
802F85 FF                MOV     R7,A
802F86 023710            LJMP    ?C0616?MAINFLOW
802F89         ?C0615?MAINFLOW:
 2883: 	//判断是否允许再次购买
 2884: 	if( SystemParameter.IsMuliVerd != 1 ) 
802F89 900428            MOV     DPTR,#SystemParameter+08H
802F8C E0                MOVX    A,@DPTR
802F8D 6401              XRL     A,#01H
802F8F 7003              JNZ     $ + 5H
802F91 0230E8            LJMP    ?C0617?MAINFLOW
 2885: 	{
 2886: 		i = 0;
802F94 A512809FFE        ECALL   ?L?COM0032
802F99 EF                MOV     A,R7
802F9A 6401              XRL     A,#01H
802F9C 6003              JZ      $ + 5H
802F9E 0230E3            LJMP    ?C0618?MAINFLOW
 2887: 		if( IsCanChange() == 1 ) 
 2888: 		{
 2889: 			ClearDisplayLine( 1 );
802FA1 7F01              MOV     R7,#01H
802FA3 A512808FB8        ECALL   _ClearDisplayLine
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 60


 2890: 			memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
802FA8 7E00              MOV     R6,#00H
802FAA 7F14              MOV     R7,#014H
802FAC 7D00              MOV     R5,#00H
802FAE 7B00              MOV     R3,#?C?XDATASEG
802FB0 7A04              MOV     R2,#HIGH DisplayBuffer
802FB2 7970              MOV     R1,#LOW DisplayBuffer
802FB4 A5128008A6        ECALL   ?C?MEMSET
 2891: 			switch( SystemParameter.curUnit )
802FB9 900468            MOV     DPTR,#SystemParameter+048H
802FBC E0                MOVX    A,@DPTR
802FBD FE                MOV     R6,A
802FBE A3                INC     DPTR
802FBF E0                MOVX    A,@DPTR
802FC0 FF                MOV     R7,A
802FC1 EE                MOV     A,R6
802FC2 6003              JZ      $ + 5H
802FC4 0230CA            LJMP    ?C0619?MAINFLOW
802FC7 EF                MOV     A,R7
802FC8 24F6              ADD     A,#0F6H
802FCA 603D              JZ      ?C0621?MAINFLOW
802FCC 24A6              ADD     A,#0A6H
802FCE 7003              JNZ     $ + 5H
802FD0 023062            LJMP    ?C0622?MAINFLOW
802FD3 2463              ADD     A,#063H
802FD5 6003              JZ      $ + 5H
802FD7 0230CA            LJMP    ?C0619?MAINFLOW
 2892: 			{
 2893: 				case 1:
802FDA         ?C0620?MAINFLOW:
 2894: 					i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
802FDA 7B80              MOV     R3,#BYTE2 0800430H
802FDC 7A04              MOV     R2,#HIGH 0800430H
802FDE 7930              MOV     R1,#LOW 0800430H
802FE0 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
802FE3 A5128007B6        ECALL   ?C?PSTXDATA
802FE8 90051D            MOV     DPTR,#DispInformationTable+0ACH
802FEB A5128007C0        ECALL   ?C?PLDCODE
802FF0 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
802FF3 A5128007B6        ECALL   ?C?PSTXDATA
802FF8 900B25            MOV     DPTR,#CurrentPayed
802FFB E0                MOVX    A,@DPTR
802FFC FF                MOV     R7,A
802FFD A3                INC     DPTR
802FFE E0                MOVX    A,@DPTR
802FFF 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
803002 CF                XCH     A,R7
803003 F0                MOVX    @DPTR,A
803004 A3                INC     DPTR
803005 EF                MOV     A,R7
 2895: 				break;				
803006 0230B9            LJMP    ?C1099?MAINFLOW
 2896: 				case 10:
803009         ?C0621?MAINFLOW:
 2897: 					i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
803009 7B80              MOV     R3,#BYTE2 080043FH
80300B 7A04              MOV     R2,#HIGH 080043FH
80300D 793F              MOV     R1,#LOW 080043FH
80300F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
803012 A5128007B6        ECALL   ?C?PSTXDATA
803017 90051D            MOV     DPTR,#DispInformationTable+0ACH
80301A A5128007C0        ECALL   ?C?PLDCODE
80301F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
803022 A5128007B6        ECALL   ?C?PSTXDATA
803027 900468            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 61


80302A E0                MOVX    A,@DPTR
80302B FA                MOV     R2,A
80302C A3                INC     DPTR
80302D E0                MOVX    A,@DPTR
80302E FB                MOV     R3,A
80302F 900B25            MOV     DPTR,#CurrentPayed
803032 E0                MOVX    A,@DPTR
803033 FE                MOV     R6,A
803034 A3                INC     DPTR
803035 E0                MOVX    A,@DPTR
803036 FF                MOV     R7,A
803037 AD03              MOV     R5,AR3
803039 AC02              MOV     R4,AR2
80303B A51280056C        ECALL   ?C?UIDIV
803040 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
803043 EE                MOV     A,R6
803044 F0                MOVX    @DPTR,A
803045 A3                INC     DPTR
803046 EF                MOV     A,R7
803047 F0                MOVX    @DPTR,A
803048 900B25            MOV     DPTR,#CurrentPayed
80304B E0                MOVX    A,@DPTR
80304C FE                MOV     R6,A
80304D A3                INC     DPTR
80304E E0                MOVX    A,@DPTR
80304F FF                MOV     R7,A
803050 AD03              MOV     R5,AR3
803052 AC02              MOV     R4,AR2
803054 A51280056C        ECALL   ?C?UIDIV
803059 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
80305C EC                MOV     A,R4
80305D F0                MOVX    @DPTR,A
80305E A3                INC     DPTR
80305F ED                MOV     A,R5
803060         
 2898: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );   //"%s%u.%02u--"%s%u.%u"				
 2899: 				break;
803060 8057              SJMP    ?C1099?MAINFLOW
 2900: 				case 100:
803062         ?C0622?MAINFLOW:
 2901: 					i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
803062 7B80              MOV     R3,#BYTE2 0800435H
803064 7A04              MOV     R2,#HIGH 0800435H
803066 7935              MOV     R1,#LOW 0800435H
803068 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80306B A5128007B6        ECALL   ?C?PSTXDATA
803070 90051D            MOV     DPTR,#DispInformationTable+0ACH
803073 A5128007C0        ECALL   ?C?PLDCODE
803078 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80307B A5128007B6        ECALL   ?C?PSTXDATA
803080 900468            MOV     DPTR,#SystemParameter+048H
803083 E0                MOVX    A,@DPTR
803084 FA                MOV     R2,A
803085 A3                INC     DPTR
803086 E0                MOVX    A,@DPTR
803087 FB                MOV     R3,A
803088 900B25            MOV     DPTR,#CurrentPayed
80308B E0                MOVX    A,@DPTR
80308C FE                MOV     R6,A
80308D A3                INC     DPTR
80308E E0                MOVX    A,@DPTR
80308F FF                MOV     R7,A
803090 AD03              MOV     R5,AR3
803092 AC02              MOV     R4,AR2
803094 A51280056C        ECALL   ?C?UIDIV
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 62


803099 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80309C EE                MOV     A,R6
80309D F0                MOVX    @DPTR,A
80309E A3                INC     DPTR
80309F EF                MOV     A,R7
8030A0 F0                MOVX    @DPTR,A
8030A1 900B25            MOV     DPTR,#CurrentPayed
8030A4 E0                MOVX    A,@DPTR
8030A5 FE                MOV     R6,A
8030A6 A3                INC     DPTR
8030A7 E0                MOVX    A,@DPTR
8030A8 FF                MOV     R7,A
8030A9 AD03              MOV     R5,AR3
8030AB AC02              MOV     R4,AR2
8030AD A51280056C        ECALL   ?C?UIDIV
8030B2 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
8030B5 EC                MOV     A,R4
8030B6 F0                MOVX    @DPTR,A
8030B7 A3                INC     DPTR
8030B8 ED                MOV     A,R5
8030B9         
8030B9 F0                MOVX    @DPTR,A
8030BA 7B00              MOV     R3,#?C?XDATASEG
8030BC 7A04              MOV     R2,#HIGH DisplayBuffer
8030BE 7970              MOV     R1,#LOW DisplayBuffer
8030C0 A512800949        ECALL   _sprintf
8030C5 90159B            MOV     DPTR,#i
8030C8 EF                MOV     A,R7
8030C9 F0                MOVX    @DPTR,A
 2902: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2903: 				break;		
 2904: 			}					
8030CA         ?C0619?MAINFLOW:
 2905: 			DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
8030CA D21A              SETB    ?_DisplayStr?BIT
8030CC 7B00              MOV     R3,#?C?XDATASEG
8030CE 7A04              MOV     R2,#HIGH DisplayBuffer
8030D0 7970              MOV     R1,#LOW DisplayBuffer
8030D2 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8030D5 A5128007B6        ECALL   ?C?PSTXDATA
8030DA 90159B            MOV     DPTR,#i
8030DD E0                MOVX    A,@DPTR
8030DE A51280831E        ECALL   ?L?COM000A
 2906: 			WaitForWork( 2000 , NULL );
 2907: 		}
8030E3         ?C0618?MAINFLOW:
 2908: 		return 0;
8030E3 7F00              MOV     R7,#00H
8030E5 023710            LJMP    ?C0616?MAINFLOW
 2909: 	}	
8030E8         ?C0617?MAINFLOW:
 2910: 	//先判断余钱是否超过再次购物的标准,如超过则让用户确定是否断续购物
 2911: 	if( ( CurrentPayed >= SystemParameter.Min ) && ( SystemParameter.Min != 0  ))
8030E8 900429            MOV     DPTR,#SystemParameter+09H
8030EB E0                MOVX    A,@DPTR
8030EC FE                MOV     R6,A
8030ED A3                INC     DPTR
8030EE E0                MOVX    A,@DPTR
8030EF FF                MOV     R7,A
8030F0 C3                CLR     C
8030F1 900B26            MOV     DPTR,#CurrentPayed+01H
8030F4 E0                MOVX    A,@DPTR
8030F5 9F                SUBB    A,R7
8030F6 900B25            MOV     DPTR,#CurrentPayed
8030F9 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 63


8030FA 9E                SUBB    A,R6
8030FB 5003              JNC     $ + 5H
8030FD 0235BB            LJMP    ?C0623?MAINFLOW
803100 EF                MOV     A,R7
803101 4E                ORL     A,R6
803102 7003              JNZ     $ + 5H
803104 0235BB            LJMP    ?C0623?MAINFLOW
 2912: 	{		
 2913: 		if( ColnumIsCanServer() == 1 )
803107 A51280A03B        ECALL   ColnumIsCanServer
80310C EF                MOV     A,R7
80310D 6401              XRL     A,#01H
80310F 6003              JZ      $ + 5H
803111 023451            LJMP    ?C0624?MAINFLOW
 2914: 		{
 2915: 			//还有好的货道可以服务,则询问顾客是否还买货			
 2916: 			//显示字符
 2917: 		#ifdef _CHINA_
 2918: 			DisplayStr( 0, 0, 1, DispInformationTable[STR_RE_BUY].str, DispInformationTable[STR_RE_BUY ].len );
 2919: 		#else
 2920: 			DisplayStr( 0, 0, 1, DispInformationTable[STR_RE_BUY].str, DispInformationTable[STR_RE_BUY ].len );
803114 D21A              SETB    ?_DisplayStr?BIT
803116 900505            MOV     DPTR,#DispInformationTable+094H
803119 A5128007C0        ECALL   ?C?PLDCODE
80311E 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
803121 A5128007B6        ECALL   ?C?PSTXDATA
803126 900508            MOV     DPTR,#DispInformationTable+097H
803129 A512808856        ECALL   ?L?COM0005
 2921: 		#endif
 2922: 		#ifdef _CHINA_
 2923: 			DisplayStr( 0, 1, 1, DispInformationTable[STR_OK_NOT].str, DispInformationTable[STR_OK_NOT ].len );
 2924: 		#else
 2925: 			DisplayStr( 0, 1, 1, DispInformationTable[STR_OK_NOT].str, DispInformationTable[STR_OK_NOT ].len );
80312E D21A              SETB    ?_DisplayStr?BIT
803130 900485            MOV     DPTR,#DispInformationTable+014H
803133 A5128007C0        ECALL   ?C?PLDCODE
803138 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80313B A5128007B6        ECALL   ?C?PSTXDATA
803140 900488            MOV     DPTR,#DispInformationTable+017H
803143 E4                CLR     A
803144 93                MOVC    A,@A+DPTR
803145 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
803148 F0                MOVX    @DPTR,A
803149 7D01              MOV     R5,#01H
80314B E4                CLR     A
80314C FF                MOV     R7,A
80314D A51280885F        ECALL   _DisplayStr
 2926: 		#endif			    
 2927: 			//等待选择
 2928: 			SgwSecTimer= 30;
803152 751E1E            MOV     SgwSecTimer,#01EH
803155         ?C0625?MAINFLOW:
 2929: 			while( SgwSecTimer )
803155 E51E              MOV     A,SgwSecTimer
803157 7003              JNZ     $ + 5H
803159 0232E7            LJMP    ?C0626?MAINFLOW
 2930: 			{
 2931: 				WaitForWork( 50, NULL ); 
80315C E4                CLR     A
80315D 7F32              MOV     R7,#032H
80315F FE                MOV     R6,A
803160 A512808330        ECALL   ?L?COM000D
 2932: 				i = GetKey();		
803165 A5128096D1        ECALL   GetKey
80316A 90159B            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 64


80316D EF                MOV     A,R7
80316E F0                MOVX    @DPTR,A
 2933: 				switch ( i )
80316F 24E5              ADD     A,#0E5H
803171 600E              JZ      ?C0629?MAINFLOW
803173 240E              ADD     A,#0EH
803175 70DE              JNZ     ?C0625?MAINFLOW
 2934: 			 	{
 2935: 					case KEY_SUBMIT:	
803177         ?C0628?MAINFLOW:
 2936: 						DisplayCurrentMoney(CurrentPayed);
803177 A512801AFF        ECALL   ?L?COM001F
 2937: 						return 1 ;	//确定再继续		
80317C 7F01              MOV     R7,#01H
80317E 023710            LJMP    ?C0616?MAINFLOW
 2938: 					case KEY_CANCEL:	
803181         ?C0629?MAINFLOW:
 2939: 						i = 0;
803181 A512809FFE        ECALL   ?L?COM0032
803186 EF                MOV     A,R7
803187 6401              XRL     A,#01H
803189 6003              JZ      $ + 5H
80318B 0232E2            LJMP    ?C0630?MAINFLOW
 2940: 						if( IsCanChange() == 1 )
 2941: 						{
 2942: 							ClearDisplayLine( 1 );
80318E 7F01              MOV     R7,#01H
803190 A512808FB8        ECALL   _ClearDisplayLine
 2943: 							memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
803195 7E00              MOV     R6,#00H
803197 7F14              MOV     R7,#014H
803199 7D00              MOV     R5,#00H
80319B 7B00              MOV     R3,#?C?XDATASEG
80319D 7A04              MOV     R2,#HIGH DisplayBuffer
80319F 7970              MOV     R1,#LOW DisplayBuffer
8031A1 A5128008A6        ECALL   ?C?MEMSET
 2944: 							switch( SystemParameter.curUnit )
8031A6 900468            MOV     DPTR,#SystemParameter+048H
8031A9 E0                MOVX    A,@DPTR
8031AA FE                MOV     R6,A
8031AB A3                INC     DPTR
8031AC E0                MOVX    A,@DPTR
8031AD FF                MOV     R7,A
8031AE EE                MOV     A,R6
8031AF 6003              JZ      $ + 5H
8031B1 0232B7            LJMP    ?C0631?MAINFLOW
8031B4 EF                MOV     A,R7
8031B5 24F6              ADD     A,#0F6H
8031B7 603D              JZ      ?C0633?MAINFLOW
8031B9 24A6              ADD     A,#0A6H
8031BB 7003              JNZ     $ + 5H
8031BD 02324F            LJMP    ?C0634?MAINFLOW
8031C0 2463              ADD     A,#063H
8031C2 6003              JZ      $ + 5H
8031C4 0232B7            LJMP    ?C0631?MAINFLOW
 2945: 							{
 2946: 								case 1:
8031C7         ?C0632?MAINFLOW:
 2947: 									i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
8031C7 7B80              MOV     R3,#BYTE2 0800430H
8031C9 7A04              MOV     R2,#HIGH 0800430H
8031CB 7930              MOV     R1,#LOW 0800430H
8031CD 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8031D0 A5128007B6        ECALL   ?C?PSTXDATA
8031D5 90051D            MOV     DPTR,#DispInformationTable+0ACH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 65


8031D8 A5128007C0        ECALL   ?C?PLDCODE
8031DD 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8031E0 A5128007B6        ECALL   ?C?PSTXDATA
8031E5 900B25            MOV     DPTR,#CurrentPayed
8031E8 E0                MOVX    A,@DPTR
8031E9 FF                MOV     R7,A
8031EA A3                INC     DPTR
8031EB E0                MOVX    A,@DPTR
8031EC 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
8031EF CF                XCH     A,R7
8031F0 F0                MOVX    @DPTR,A
8031F1 A3                INC     DPTR
8031F2 EF                MOV     A,R7
 2948: 								break;				
8031F3 0232A6            LJMP    ?C1101?MAINFLOW
 2949: 								case 10:
8031F6         ?C0633?MAINFLOW:
 2950: 									i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
8031F6 7B80              MOV     R3,#BYTE2 080043FH
8031F8 7A04              MOV     R2,#HIGH 080043FH
8031FA 793F              MOV     R1,#LOW 080043FH
8031FC 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8031FF A5128007B6        ECALL   ?C?PSTXDATA
803204 90051D            MOV     DPTR,#DispInformationTable+0ACH
803207 A5128007C0        ECALL   ?C?PLDCODE
80320C 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80320F A5128007B6        ECALL   ?C?PSTXDATA
803214 900468            MOV     DPTR,#SystemParameter+048H
803217 E0                MOVX    A,@DPTR
803218 FA                MOV     R2,A
803219 A3                INC     DPTR
80321A E0                MOVX    A,@DPTR
80321B FB                MOV     R3,A
80321C 900B25            MOV     DPTR,#CurrentPayed
80321F E0                MOVX    A,@DPTR
803220 FE                MOV     R6,A
803221 A3                INC     DPTR
803222 E0                MOVX    A,@DPTR
803223 FF                MOV     R7,A
803224 AD03              MOV     R5,AR3
803226 AC02              MOV     R4,AR2
803228 A51280056C        ECALL   ?C?UIDIV
80322D 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
803230 EE                MOV     A,R6
803231 F0                MOVX    @DPTR,A
803232 A3                INC     DPTR
803233 EF                MOV     A,R7
803234 F0                MOVX    @DPTR,A
803235 900B25            MOV     DPTR,#CurrentPayed
803238 E0                MOVX    A,@DPTR
803239 FE                MOV     R6,A
80323A A3                INC     DPTR
80323B E0                MOVX    A,@DPTR
80323C FF                MOV     R7,A
80323D AD03              MOV     R5,AR3
80323F AC02              MOV     R4,AR2
803241 A51280056C        ECALL   ?C?UIDIV
803246 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
803249 EC                MOV     A,R4
80324A F0                MOVX    @DPTR,A
80324B A3                INC     DPTR
80324C ED                MOV     A,R5
80324D         
 2951: 										CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );	//			
 2952: 								break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 66


80324D 8057              SJMP    ?C1101?MAINFLOW
 2953: 								case 100:
80324F         ?C0634?MAINFLOW:
 2954: 									i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
80324F 7B80              MOV     R3,#BYTE2 0800435H
803251 7A04              MOV     R2,#HIGH 0800435H
803253 7935              MOV     R1,#LOW 0800435H
803255 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
803258 A5128007B6        ECALL   ?C?PSTXDATA
80325D 90051D            MOV     DPTR,#DispInformationTable+0ACH
803260 A5128007C0        ECALL   ?C?PLDCODE
803265 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
803268 A5128007B6        ECALL   ?C?PSTXDATA
80326D 900468            MOV     DPTR,#SystemParameter+048H
803270 E0                MOVX    A,@DPTR
803271 FA                MOV     R2,A
803272 A3                INC     DPTR
803273 E0                MOVX    A,@DPTR
803274 FB                MOV     R3,A
803275 900B25            MOV     DPTR,#CurrentPayed
803278 E0                MOVX    A,@DPTR
803279 FE                MOV     R6,A
80327A A3                INC     DPTR
80327B E0                MOVX    A,@DPTR
80327C FF                MOV     R7,A
80327D AD03              MOV     R5,AR3
80327F AC02              MOV     R4,AR2
803281 A51280056C        ECALL   ?C?UIDIV
803286 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
803289 EE                MOV     A,R6
80328A F0                MOVX    @DPTR,A
80328B A3                INC     DPTR
80328C EF                MOV     A,R7
80328D F0                MOVX    @DPTR,A
80328E 900B25            MOV     DPTR,#CurrentPayed
803291 E0                MOVX    A,@DPTR
803292 FE                MOV     R6,A
803293 A3                INC     DPTR
803294 E0                MOVX    A,@DPTR
803295 FF                MOV     R7,A
803296 AD03              MOV     R5,AR3
803298 AC02              MOV     R4,AR2
80329A A51280056C        ECALL   ?C?UIDIV
80329F 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
8032A2 EC                MOV     A,R4
8032A3 F0                MOVX    @DPTR,A
8032A4 A3                INC     DPTR
8032A5 ED                MOV     A,R5
8032A6         
8032A6 F0                MOVX    @DPTR,A
8032A7 7B00              MOV     R3,#?C?XDATASEG
8032A9 7A04              MOV     R2,#HIGH DisplayBuffer
8032AB 7970              MOV     R1,#LOW DisplayBuffer
8032AD A512800949        ECALL   _sprintf
8032B2 90159B            MOV     DPTR,#i
8032B5 EF                MOV     A,R7
8032B6 F0                MOVX    @DPTR,A
 2955: 										CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2956: 								break;		
 2957: 							}													
8032B7         ?C0631?MAINFLOW:
 2958: 							DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
8032B7 D21A              SETB    ?_DisplayStr?BIT
8032B9 7B00              MOV     R3,#?C?XDATASEG
8032BB 7A04              MOV     R2,#HIGH DisplayBuffer
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 67


8032BD 7970              MOV     R1,#LOW DisplayBuffer
8032BF 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8032C2 A5128007B6        ECALL   ?C?PSTXDATA
8032C7 90159B            MOV     DPTR,#i
8032CA E0                MOVX    A,@DPTR
8032CB 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8032CE F0                MOVX    @DPTR,A
8032CF 7D01              MOV     R5,#01H
8032D1 E4                CLR     A
8032D2 FF                MOV     R7,A
8032D3 A51280885F        ECALL   _DisplayStr
 2959: 							WaitForWork( 1500 , NULL );
8032D8 E4                CLR     A
8032D9 7FDC              MOV     R7,#0DCH
8032DB 7E05              MOV     R6,#05H
8032DD A512808330        ECALL   ?L?COM000D
 2960: 						}
8032E2         ?C0630?MAINFLOW:
 2961: 						return 0 ;//确定不不买了
8032E2 7F00              MOV     R7,#00H
8032E4 023710            LJMP    ?C0616?MAINFLOW
 2962: 					default:
 2963: 						continue;
 2964: 				}	
 2965: 			}
8032E7         ?C0626?MAINFLOW:
 2966: 			//等待超时，直接找零了
 2967: 			if( IsCanChange() == 1 )
8032E7 A51280A003        ECALL   IsCanChange
8032EC EF                MOV     A,R7
8032ED 6401              XRL     A,#01H
8032EF 6003              JZ      $ + 5H
8032F1 02344C            LJMP    ?C0636?MAINFLOW
 2968: 			{
 2969: 				i = 0;
8032F4 90159B            MOV     DPTR,#i
8032F7 F0                MOVX    @DPTR,A
 2970: 				ClearDisplayLine( 1 );				
8032F8 7F01              MOV     R7,#01H
8032FA A512808FB8        ECALL   _ClearDisplayLine
 2971: 				memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
8032FF 7E00              MOV     R6,#00H
803301 7F14              MOV     R7,#014H
803303 7D00              MOV     R5,#00H
803305 7B00              MOV     R3,#?C?XDATASEG
803307 7A04              MOV     R2,#HIGH DisplayBuffer
803309 7970              MOV     R1,#LOW DisplayBuffer
80330B A5128008A6        ECALL   ?C?MEMSET
 2972: 				switch( SystemParameter.curUnit )
803310 900468            MOV     DPTR,#SystemParameter+048H
803313 E0                MOVX    A,@DPTR
803314 FE                MOV     R6,A
803315 A3                INC     DPTR
803316 E0                MOVX    A,@DPTR
803317 FF                MOV     R7,A
803318 EE                MOV     A,R6
803319 6003              JZ      $ + 5H
80331B 023421            LJMP    ?C0637?MAINFLOW
80331E EF                MOV     A,R7
80331F 24F6              ADD     A,#0F6H
803321 603D              JZ      ?C0639?MAINFLOW
803323 24A6              ADD     A,#0A6H
803325 7003              JNZ     $ + 5H
803327 0233B9            LJMP    ?C0640?MAINFLOW
80332A 2463              ADD     A,#063H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 68


80332C 6003              JZ      $ + 5H
80332E 023421            LJMP    ?C0637?MAINFLOW
 2973: 				{
 2974: 					case 1:
803331         ?C0638?MAINFLOW:
 2975: 						i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
803331 7B80              MOV     R3,#BYTE2 0800430H
803333 7A04              MOV     R2,#HIGH 0800430H
803335 7930              MOV     R1,#LOW 0800430H
803337 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80333A A5128007B6        ECALL   ?C?PSTXDATA
80333F 90051D            MOV     DPTR,#DispInformationTable+0ACH
803342 A5128007C0        ECALL   ?C?PLDCODE
803347 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80334A A5128007B6        ECALL   ?C?PSTXDATA
80334F 900B25            MOV     DPTR,#CurrentPayed
803352 E0                MOVX    A,@DPTR
803353 FF                MOV     R7,A
803354 A3                INC     DPTR
803355 E0                MOVX    A,@DPTR
803356 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
803359 CF                XCH     A,R7
80335A F0                MOVX    @DPTR,A
80335B A3                INC     DPTR
80335C EF                MOV     A,R7
 2976: 					break;				
80335D 023410            LJMP    ?C1103?MAINFLOW
 2977: 					case 10:
803360         ?C0639?MAINFLOW:
 2978: 						i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
803360 7B80              MOV     R3,#BYTE2 080043FH
803362 7A04              MOV     R2,#HIGH 080043FH
803364 793F              MOV     R1,#LOW 080043FH
803366 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
803369 A5128007B6        ECALL   ?C?PSTXDATA
80336E 90051D            MOV     DPTR,#DispInformationTable+0ACH
803371 A5128007C0        ECALL   ?C?PLDCODE
803376 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
803379 A5128007B6        ECALL   ?C?PSTXDATA
80337E 900468            MOV     DPTR,#SystemParameter+048H
803381 E0                MOVX    A,@DPTR
803382 FA                MOV     R2,A
803383 A3                INC     DPTR
803384 E0                MOVX    A,@DPTR
803385 FB                MOV     R3,A
803386 900B25            MOV     DPTR,#CurrentPayed
803389 E0                MOVX    A,@DPTR
80338A FE                MOV     R6,A
80338B A3                INC     DPTR
80338C E0                MOVX    A,@DPTR
80338D FF                MOV     R7,A
80338E AD03              MOV     R5,AR3
803390 AC02              MOV     R4,AR2
803392 A51280056C        ECALL   ?C?UIDIV
803397 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80339A EE                MOV     A,R6
80339B F0                MOVX    @DPTR,A
80339C A3                INC     DPTR
80339D EF                MOV     A,R7
80339E F0                MOVX    @DPTR,A
80339F 900B25            MOV     DPTR,#CurrentPayed
8033A2 E0                MOVX    A,@DPTR
8033A3 FE                MOV     R6,A
8033A4 A3                INC     DPTR
8033A5 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 69


8033A6 FF                MOV     R7,A
8033A7 AD03              MOV     R5,AR3
8033A9 AC02              MOV     R4,AR2
8033AB A51280056C        ECALL   ?C?UIDIV
8033B0 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
8033B3 EC                MOV     A,R4
8033B4 F0                MOVX    @DPTR,A
8033B5 A3                INC     DPTR
8033B6 ED                MOV     A,R5
8033B7         
 2979: 							CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2980: 					break;
8033B7 8057              SJMP    ?C1103?MAINFLOW
 2981: 					case 100:
8033B9         ?C0640?MAINFLOW:
 2982: 						i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
8033B9 7B80              MOV     R3,#BYTE2 0800435H
8033BB 7A04              MOV     R2,#HIGH 0800435H
8033BD 7935              MOV     R1,#LOW 0800435H
8033BF 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8033C2 A5128007B6        ECALL   ?C?PSTXDATA
8033C7 90051D            MOV     DPTR,#DispInformationTable+0ACH
8033CA A5128007C0        ECALL   ?C?PLDCODE
8033CF 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8033D2 A5128007B6        ECALL   ?C?PSTXDATA
8033D7 900468            MOV     DPTR,#SystemParameter+048H
8033DA E0                MOVX    A,@DPTR
8033DB FA                MOV     R2,A
8033DC A3                INC     DPTR
8033DD E0                MOVX    A,@DPTR
8033DE FB                MOV     R3,A
8033DF 900B25            MOV     DPTR,#CurrentPayed
8033E2 E0                MOVX    A,@DPTR
8033E3 FE                MOV     R6,A
8033E4 A3                INC     DPTR
8033E5 E0                MOVX    A,@DPTR
8033E6 FF                MOV     R7,A
8033E7 AD03              MOV     R5,AR3
8033E9 AC02              MOV     R4,AR2
8033EB A51280056C        ECALL   ?C?UIDIV
8033F0 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
8033F3 EE                MOV     A,R6
8033F4 F0                MOVX    @DPTR,A
8033F5 A3                INC     DPTR
8033F6 EF                MOV     A,R7
8033F7 F0                MOVX    @DPTR,A
8033F8 900B25            MOV     DPTR,#CurrentPayed
8033FB E0                MOVX    A,@DPTR
8033FC FE                MOV     R6,A
8033FD A3                INC     DPTR
8033FE E0                MOVX    A,@DPTR
8033FF FF                MOV     R7,A
803400 AD03              MOV     R5,AR3
803402 AC02              MOV     R4,AR2
803404 A51280056C        ECALL   ?C?UIDIV
803409 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
80340C EC                MOV     A,R4
80340D F0                MOVX    @DPTR,A
80340E A3                INC     DPTR
80340F ED                MOV     A,R5
803410         
803410 F0                MOVX    @DPTR,A
803411 7B00              MOV     R3,#?C?XDATASEG
803413 7A04              MOV     R2,#HIGH DisplayBuffer
803415 7970              MOV     R1,#LOW DisplayBuffer
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 70


803417 A512800949        ECALL   _sprintf
80341C 90159B            MOV     DPTR,#i
80341F EF                MOV     A,R7
803420 F0                MOVX    @DPTR,A
 2983: 							CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2984: 					break;		
 2985: 				}					
803421         ?C0637?MAINFLOW:
 2986: 			
 2987: 				DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
803421 D21A              SETB    ?_DisplayStr?BIT
803423 7B00              MOV     R3,#?C?XDATASEG
803425 7A04              MOV     R2,#HIGH DisplayBuffer
803427 7970              MOV     R1,#LOW DisplayBuffer
803429 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80342C A5128007B6        ECALL   ?C?PSTXDATA
803431 90159B            MOV     DPTR,#i
803434 E0                MOVX    A,@DPTR
803435 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
803438 F0                MOVX    @DPTR,A
803439 7D01              MOV     R5,#01H
80343B E4                CLR     A
80343C FF                MOV     R7,A
80343D A51280885F        ECALL   _DisplayStr
 2988: 				WaitForWork( 1500 , NULL );
803442 E4                CLR     A
803443 7FDC              MOV     R7,#0DCH
803445 7E05              MOV     R6,#05H
803447 A512808330        ECALL   ?L?COM000D
 2989: 			}
80344C         ?C0636?MAINFLOW:
 2990: 			return 0;
80344C 7F00              MOV     R7,#00H
80344E 023710            LJMP    ?C0616?MAINFLOW
 2991: 		}		
803451         ?C0624?MAINFLOW:
 2992: 		else
 2993: 		{
 2994: 			//已无货道可以服务了，直接找零
 2995: 			if( IsCanChange() == 1 )
803451 A51280A003        ECALL   IsCanChange
803456 EF                MOV     A,R7
803457 6401              XRL     A,#01H
803459 6003              JZ      $ + 5H
80345B 0235B6            LJMP    ?C0642?MAINFLOW
 2996: 			{
 2997: 				i = 0;
80345E 90159B            MOV     DPTR,#i
803461 F0                MOVX    @DPTR,A
 2998: 				ClearDisplayLine( 1 );
803462 7F01              MOV     R7,#01H
803464 A512808FB8        ECALL   _ClearDisplayLine
 2999: 				///////////////
 3000: 				memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
803469 7E00              MOV     R6,#00H
80346B 7F14              MOV     R7,#014H
80346D 7D00              MOV     R5,#00H
80346F 7B00              MOV     R3,#?C?XDATASEG
803471 7A04              MOV     R2,#HIGH DisplayBuffer
803473 7970              MOV     R1,#LOW DisplayBuffer
803475 A5128008A6        ECALL   ?C?MEMSET
 3001: 				switch( SystemParameter.curUnit )
80347A 900468            MOV     DPTR,#SystemParameter+048H
80347D E0                MOVX    A,@DPTR
80347E FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 71


80347F A3                INC     DPTR
803480 E0                MOVX    A,@DPTR
803481 FF                MOV     R7,A
803482 EE                MOV     A,R6
803483 6003              JZ      $ + 5H
803485 02358B            LJMP    ?C0643?MAINFLOW
803488 EF                MOV     A,R7
803489 24F6              ADD     A,#0F6H
80348B 603D              JZ      ?C0645?MAINFLOW
80348D 24A6              ADD     A,#0A6H
80348F 7003              JNZ     $ + 5H
803491 023523            LJMP    ?C0646?MAINFLOW
803494 2463              ADD     A,#063H
803496 6003              JZ      $ + 5H
803498 02358B            LJMP    ?C0643?MAINFLOW
 3002: 				{
 3003: 					case 1:
80349B         ?C0644?MAINFLOW:
 3004: 						i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
80349B 7B80              MOV     R3,#BYTE2 0800430H
80349D 7A04              MOV     R2,#HIGH 0800430H
80349F 7930              MOV     R1,#LOW 0800430H
8034A1 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8034A4 A5128007B6        ECALL   ?C?PSTXDATA
8034A9 90051D            MOV     DPTR,#DispInformationTable+0ACH
8034AC A5128007C0        ECALL   ?C?PLDCODE
8034B1 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8034B4 A5128007B6        ECALL   ?C?PSTXDATA
8034B9 900B25            MOV     DPTR,#CurrentPayed
8034BC E0                MOVX    A,@DPTR
8034BD FF                MOV     R7,A
8034BE A3                INC     DPTR
8034BF E0                MOVX    A,@DPTR
8034C0 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
8034C3 CF                XCH     A,R7
8034C4 F0                MOVX    @DPTR,A
8034C5 A3                INC     DPTR
8034C6 EF                MOV     A,R7
 3005: 					break;				
8034C7 02357A            LJMP    ?C1105?MAINFLOW
 3006: 					case 10:
8034CA         ?C0645?MAINFLOW:
 3007: 						i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
8034CA 7B80              MOV     R3,#BYTE2 080043FH
8034CC 7A04              MOV     R2,#HIGH 080043FH
8034CE 793F              MOV     R1,#LOW 080043FH
8034D0 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8034D3 A5128007B6        ECALL   ?C?PSTXDATA
8034D8 90051D            MOV     DPTR,#DispInformationTable+0ACH
8034DB A5128007C0        ECALL   ?C?PLDCODE
8034E0 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8034E3 A5128007B6        ECALL   ?C?PSTXDATA
8034E8 900468            MOV     DPTR,#SystemParameter+048H
8034EB E0                MOVX    A,@DPTR
8034EC FA                MOV     R2,A
8034ED A3                INC     DPTR
8034EE E0                MOVX    A,@DPTR
8034EF FB                MOV     R3,A
8034F0 900B25            MOV     DPTR,#CurrentPayed
8034F3 E0                MOVX    A,@DPTR
8034F4 FE                MOV     R6,A
8034F5 A3                INC     DPTR
8034F6 E0                MOVX    A,@DPTR
8034F7 FF                MOV     R7,A
8034F8 AD03              MOV     R5,AR3
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 72


8034FA AC02              MOV     R4,AR2
8034FC A51280056C        ECALL   ?C?UIDIV
803501 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
803504 EE                MOV     A,R6
803505 F0                MOVX    @DPTR,A
803506 A3                INC     DPTR
803507 EF                MOV     A,R7
803508 F0                MOVX    @DPTR,A
803509 900B25            MOV     DPTR,#CurrentPayed
80350C E0                MOVX    A,@DPTR
80350D FE                MOV     R6,A
80350E A3                INC     DPTR
80350F E0                MOVX    A,@DPTR
803510 FF                MOV     R7,A
803511 AD03              MOV     R5,AR3
803513 AC02              MOV     R4,AR2
803515 A51280056C        ECALL   ?C?UIDIV
80351A 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
80351D EC                MOV     A,R4
80351E F0                MOVX    @DPTR,A
80351F A3                INC     DPTR
803520 ED                MOV     A,R5
803521         
 3008: 							CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 3009: 					break;
803521 8057              SJMP    ?C1105?MAINFLOW
 3010: 					case 100:
803523         ?C0646?MAINFLOW:
 3011: 						i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
803523 7B80              MOV     R3,#BYTE2 0800435H
803525 7A04              MOV     R2,#HIGH 0800435H
803527 7935              MOV     R1,#LOW 0800435H
803529 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80352C A5128007B6        ECALL   ?C?PSTXDATA
803531 90051D            MOV     DPTR,#DispInformationTable+0ACH
803534 A5128007C0        ECALL   ?C?PLDCODE
803539 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80353C A5128007B6        ECALL   ?C?PSTXDATA
803541 900468            MOV     DPTR,#SystemParameter+048H
803544 E0                MOVX    A,@DPTR
803545 FA                MOV     R2,A
803546 A3                INC     DPTR
803547 E0                MOVX    A,@DPTR
803548 FB                MOV     R3,A
803549 900B25            MOV     DPTR,#CurrentPayed
80354C E0                MOVX    A,@DPTR
80354D FE                MOV     R6,A
80354E A3                INC     DPTR
80354F E0                MOVX    A,@DPTR
803550 FF                MOV     R7,A
803551 AD03              MOV     R5,AR3
803553 AC02              MOV     R4,AR2
803555 A51280056C        ECALL   ?C?UIDIV
80355A 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80355D EE                MOV     A,R6
80355E F0                MOVX    @DPTR,A
80355F A3                INC     DPTR
803560 EF                MOV     A,R7
803561 F0                MOVX    @DPTR,A
803562 900B25            MOV     DPTR,#CurrentPayed
803565 E0                MOVX    A,@DPTR
803566 FE                MOV     R6,A
803567 A3                INC     DPTR
803568 E0                MOVX    A,@DPTR
803569 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 73


80356A AD03              MOV     R5,AR3
80356C AC02              MOV     R4,AR2
80356E A51280056C        ECALL   ?C?UIDIV
803573 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
803576 EC                MOV     A,R4
803577 F0                MOVX    @DPTR,A
803578 A3                INC     DPTR
803579 ED                MOV     A,R5
80357A         
80357A F0                MOVX    @DPTR,A
80357B 7B00              MOV     R3,#?C?XDATASEG
80357D 7A04              MOV     R2,#HIGH DisplayBuffer
80357F 7970              MOV     R1,#LOW DisplayBuffer
803581 A512800949        ECALL   _sprintf
803586 90159B            MOV     DPTR,#i
803589 EF                MOV     A,R7
80358A F0                MOVX    @DPTR,A
 3012: 							CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 3013: 					break;		
 3014: 				}			
80358B         ?C0643?MAINFLOW:
 3015: 				DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
80358B D21A              SETB    ?_DisplayStr?BIT
80358D 7B00              MOV     R3,#?C?XDATASEG
80358F 7A04              MOV     R2,#HIGH DisplayBuffer
803591 7970              MOV     R1,#LOW DisplayBuffer
803593 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
803596 A5128007B6        ECALL   ?C?PSTXDATA
80359B 90159B            MOV     DPTR,#i
80359E E0                MOVX    A,@DPTR
80359F 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8035A2 F0                MOVX    @DPTR,A
8035A3 7D01              MOV     R5,#01H
8035A5 E4                CLR     A
8035A6 FF                MOV     R7,A
8035A7 A51280885F        ECALL   _DisplayStr
 3016: 				WaitForWork( 1500 , NULL );
8035AC E4                CLR     A
8035AD 7FDC              MOV     R7,#0DCH
8035AF 7E05              MOV     R6,#05H
8035B1 A512808330        ECALL   ?L?COM000D
 3017: 			}
8035B6         ?C0642?MAINFLOW:
 3018: 			return 0;
8035B6 7F00              MOV     R7,#00H
8035B8 023710            LJMP    ?C0616?MAINFLOW
 3019: 		}		
 3020: 	}
8035BB         ?C0623?MAINFLOW:
 3021: 	else  //直接找零
 3022: 	{
 3023: 		if( IsCanChange() == 1 )
8035BB A51280A003        ECALL   IsCanChange
8035C0 EF                MOV     A,R7
8035C1 6401              XRL     A,#01H
8035C3 6003              JZ      $ + 5H
8035C5 02370E            LJMP    ?C0648?MAINFLOW
 3024: 		{
 3025: 			i = 0;
8035C8 90159B            MOV     DPTR,#i
8035CB F0                MOVX    @DPTR,A
 3026: 			ClearDisplayLine( 1 );			
8035CC 7F01              MOV     R7,#01H
8035CE A512808FB8        ECALL   _ClearDisplayLine
 3027: 			memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 74


8035D3 7E00              MOV     R6,#00H
8035D5 7F14              MOV     R7,#014H
8035D7 7D00              MOV     R5,#00H
8035D9 7B00              MOV     R3,#?C?XDATASEG
8035DB 7A04              MOV     R2,#HIGH DisplayBuffer
8035DD 7970              MOV     R1,#LOW DisplayBuffer
8035DF A5128008A6        ECALL   ?C?MEMSET
 3028: 			switch( SystemParameter.curUnit )
8035E4 900468            MOV     DPTR,#SystemParameter+048H
8035E7 E0                MOVX    A,@DPTR
8035E8 FE                MOV     R6,A
8035E9 A3                INC     DPTR
8035EA E0                MOVX    A,@DPTR
8035EB FF                MOV     R7,A
8035EC EE                MOV     A,R6
8035ED 6003              JZ      $ + 5H
8035EF 0236F5            LJMP    ?C0649?MAINFLOW
8035F2 EF                MOV     A,R7
8035F3 24F6              ADD     A,#0F6H
8035F5 603D              JZ      ?C0651?MAINFLOW
8035F7 24A6              ADD     A,#0A6H
8035F9 7003              JNZ     $ + 5H
8035FB 02368D            LJMP    ?C0652?MAINFLOW
8035FE 2463              ADD     A,#063H
803600 6003              JZ      $ + 5H
803602 0236F5            LJMP    ?C0649?MAINFLOW
 3029: 			{
 3030: 				case 1:
803605         ?C0650?MAINFLOW:
 3031: 					i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
803605 7B80              MOV     R3,#BYTE2 0800430H
803607 7A04              MOV     R2,#HIGH 0800430H
803609 7930              MOV     R1,#LOW 0800430H
80360B 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80360E A5128007B6        ECALL   ?C?PSTXDATA
803613 90051D            MOV     DPTR,#DispInformationTable+0ACH
803616 A5128007C0        ECALL   ?C?PLDCODE
80361B 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80361E A5128007B6        ECALL   ?C?PSTXDATA
803623 900B25            MOV     DPTR,#CurrentPayed
803626 E0                MOVX    A,@DPTR
803627 FF                MOV     R7,A
803628 A3                INC     DPTR
803629 E0                MOVX    A,@DPTR
80362A 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80362D CF                XCH     A,R7
80362E F0                MOVX    @DPTR,A
80362F A3                INC     DPTR
803630 EF                MOV     A,R7
 3032: 				break;				
803631 0236E4            LJMP    ?C1107?MAINFLOW
 3033: 				case 10:
803634         ?C0651?MAINFLOW:
 3034: 					i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
803634 7B80              MOV     R3,#BYTE2 080043FH
803636 7A04              MOV     R2,#HIGH 080043FH
803638 793F              MOV     R1,#LOW 080043FH
80363A 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80363D A5128007B6        ECALL   ?C?PSTXDATA
803642 90051D            MOV     DPTR,#DispInformationTable+0ACH
803645 A5128007C0        ECALL   ?C?PLDCODE
80364A 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80364D A5128007B6        ECALL   ?C?PSTXDATA
803652 900468            MOV     DPTR,#SystemParameter+048H
803655 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 75


803656 FA                MOV     R2,A
803657 A3                INC     DPTR
803658 E0                MOVX    A,@DPTR
803659 FB                MOV     R3,A
80365A 900B25            MOV     DPTR,#CurrentPayed
80365D E0                MOVX    A,@DPTR
80365E FE                MOV     R6,A
80365F A3                INC     DPTR
803660 E0                MOVX    A,@DPTR
803661 FF                MOV     R7,A
803662 AD03              MOV     R5,AR3
803664 AC02              MOV     R4,AR2
803666 A51280056C        ECALL   ?C?UIDIV
80366B 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80366E EE                MOV     A,R6
80366F F0                MOVX    @DPTR,A
803670 A3                INC     DPTR
803671 EF                MOV     A,R7
803672 F0                MOVX    @DPTR,A
803673 900B25            MOV     DPTR,#CurrentPayed
803676 E0                MOVX    A,@DPTR
803677 FE                MOV     R6,A
803678 A3                INC     DPTR
803679 E0                MOVX    A,@DPTR
80367A FF                MOV     R7,A
80367B AD03              MOV     R5,AR3
80367D AC02              MOV     R4,AR2
80367F A51280056C        ECALL   ?C?UIDIV
803684 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
803687 EC                MOV     A,R4
803688 F0                MOVX    @DPTR,A
803689 A3                INC     DPTR
80368A ED                MOV     A,R5
80368B         
 3035: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 3036: 				break;
80368B 8057              SJMP    ?C1107?MAINFLOW
 3037: 				case 100:
80368D         ?C0652?MAINFLOW:
 3038: 					i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
80368D 7B80              MOV     R3,#BYTE2 0800435H
80368F 7A04              MOV     R2,#HIGH 0800435H
803691 7935              MOV     R1,#LOW 0800435H
803693 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
803696 A5128007B6        ECALL   ?C?PSTXDATA
80369B 90051D            MOV     DPTR,#DispInformationTable+0ACH
80369E A5128007C0        ECALL   ?C?PLDCODE
8036A3 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8036A6 A5128007B6        ECALL   ?C?PSTXDATA
8036AB 900468            MOV     DPTR,#SystemParameter+048H
8036AE E0                MOVX    A,@DPTR
8036AF FA                MOV     R2,A
8036B0 A3                INC     DPTR
8036B1 E0                MOVX    A,@DPTR
8036B2 FB                MOV     R3,A
8036B3 900B25            MOV     DPTR,#CurrentPayed
8036B6 E0                MOVX    A,@DPTR
8036B7 FE                MOV     R6,A
8036B8 A3                INC     DPTR
8036B9 E0                MOVX    A,@DPTR
8036BA FF                MOV     R7,A
8036BB AD03              MOV     R5,AR3
8036BD AC02              MOV     R4,AR2
8036BF A51280056C        ECALL   ?C?UIDIV
8036C4 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 76


8036C7 EE                MOV     A,R6
8036C8 F0                MOVX    @DPTR,A
8036C9 A3                INC     DPTR
8036CA EF                MOV     A,R7
8036CB F0                MOVX    @DPTR,A
8036CC 900B25            MOV     DPTR,#CurrentPayed
8036CF E0                MOVX    A,@DPTR
8036D0 FE                MOV     R6,A
8036D1 A3                INC     DPTR
8036D2 E0                MOVX    A,@DPTR
8036D3 FF                MOV     R7,A
8036D4 AD03              MOV     R5,AR3
8036D6 AC02              MOV     R4,AR2
8036D8 A51280056C        ECALL   ?C?UIDIV
8036DD 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
8036E0 EC                MOV     A,R4
8036E1 F0                MOVX    @DPTR,A
8036E2 A3                INC     DPTR
8036E3 ED                MOV     A,R5
8036E4         
8036E4 F0                MOVX    @DPTR,A
8036E5 7B00              MOV     R3,#?C?XDATASEG
8036E7 7A04              MOV     R2,#HIGH DisplayBuffer
8036E9 7970              MOV     R1,#LOW DisplayBuffer
8036EB A512800949        ECALL   _sprintf
8036F0 90159B            MOV     DPTR,#i
8036F3 EF                MOV     A,R7
8036F4 F0                MOVX    @DPTR,A
 3039: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 3040: 				break;		
 3041: 			}											
8036F5         ?C0649?MAINFLOW:
 3042: 			DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
8036F5 D21A              SETB    ?_DisplayStr?BIT
8036F7 7B00              MOV     R3,#?C?XDATASEG
8036F9 7A04              MOV     R2,#HIGH DisplayBuffer
8036FB 7970              MOV     R1,#LOW DisplayBuffer
8036FD 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
803700 A5128007B6        ECALL   ?C?PSTXDATA
803705 90159B            MOV     DPTR,#i
803708 E0                MOVX    A,@DPTR
803709 A51280831E        ECALL   ?L?COM000A
 3043: 			WaitForWork( 2000 , NULL );
 3044: 		}
80370E         ?C0648?MAINFLOW:
 3045: 		return 0;
80370E 7F00              MOV     R7,#00H
 3046: 	}
 3047: }
803710         ?C0616?MAINFLOW:
803710 A522              ERET    
----- FUNCTION ReBuy (END) -------


----- FUNCTION ?L?COM0023 (BEGIN) -----
803712 900B25            MOV     DPTR,#CurrentPayed
803715 E0                MOVX    A,@DPTR
803716 FF                MOV     R7,A
803717 A3                INC     DPTR
803718 E0                MOVX    A,@DPTR
803719 90046E            MOV     DPTR,#CurrentDispenseCoin
80371C CF                XCH     A,R7
80371D F0                MOVX    @DPTR,A
80371E A3                INC     DPTR
80371F EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 77


803720 F0                MOVX    @DPTR,A
803721 E4                CLR     A
803722 900B25            MOV     DPTR,#CurrentPayed
803725 F0                MOVX    @DPTR,A
803726 A3                INC     DPTR
803727 F0                MOVX    @DPTR,A
----- FUNCTION DispenseCoin (BEGIN) -----
 FILE: 'mainflow.c'
 3062: u_char DispenseCoin( )
 3063: {
 3064: 	u_char xdata tHopper1 = 0;
 3065: 	u_char xdata tHopper2 = 0;
803728 E4                CLR     A
803729 90159D            MOV     DPTR,#tHopper1
80372C F0                MOVX    @DPTR,A
 3066: 	u_char xdata tHopper3 = 0;
80372D A3                INC     DPTR
80372E F0                MOVX    @DPTR,A
 3067: 	u_char xdata ret = 0 ;
80372F A3                INC     DPTR
803730 F0                MOVX    @DPTR,A
 3068: 	uint xdata outMoney = 0;
803731 A3                INC     DPTR
803732 F0                MOVX    @DPTR,A
 3069: 	u_char xdata i = 0;
803733 A3                INC     DPTR
803734 F0                MOVX    @DPTR,A
803735 A3                INC     DPTR
803736 F0                MOVX    @DPTR,A
 3070: 	u_char xdata coin1flag = 1;
803737 A3                INC     DPTR
803738 F0                MOVX    @DPTR,A
 3071: 	u_char xdata coin2flag = 1;
803739 A3                INC     DPTR
80373A 04                INC     A
80373B F0                MOVX    @DPTR,A
 3072: 	u_char xdata coin3flag = 1;
80373C A3                INC     DPTR
80373D F0                MOVX    @DPTR,A
 3073: 	u_char xdata m_Errorflag = 0;
80373E A3                INC     DPTR
80373F F0                MOVX    @DPTR,A
 3074: 
803740 E4                CLR     A
803741 A3                INC     DPTR
803742 F0                MOVX    @DPTR,A
 3075: 	Trace( "\n DispenseCoin" );
 3076: 	Trace( "\n CurrentDispenseCoin = %d", CurrentDispenseCoin );		
 3077: 
 3078: 	if( ( IsCanChange() != 1 ) && ( ColnumIsCanServer() == 1 ) )
803743 A51280A003        ECALL   IsCanChange
803748 EF                MOV     A,R7
803749 6401              XRL     A,#01H
80374B 600D              JZ      ?C0659?MAINFLOW
80374D A51280A03B        ECALL   ColnumIsCanServer
803752 BF0105            CJNE    R7,#01H,?C0659?MAINFLOW
 3079: 		return 0;
803755 7F00              MOV     R7,#00H
803757 023F5A            LJMP    ?C0658?MAINFLOW
80375A         ?C0659?MAINFLOW:
 3080: 	while( 1 )
 3081: 	{
 3082: 		tHopper1 = 0;
80375A E4                CLR     A
80375B 90159D            MOV     DPTR,#tHopper1
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 78


80375E F0                MOVX    @DPTR,A
 3083: 		tHopper2 = 0;
80375F A3                INC     DPTR
803760 F0                MOVX    @DPTR,A
 3084: 		tHopper3 = 0;
803761 A3                INC     DPTR
803762 F0                MOVX    @DPTR,A
 3085: 		if( CurrentDispenseCoin == 0 )
803763 90046E            MOV     DPTR,#CurrentDispenseCoin
803766 E0                MOVX    A,@DPTR
803767 FE                MOV     R6,A
803768 A3                INC     DPTR
803769 E0                MOVX    A,@DPTR
80376A FF                MOV     R7,A
80376B 4E                ORL     A,R6
80376C 7007              JNZ     ?C0661?MAINFLOW
 3086: 		{
 3087: 			m_Errorflag = 0;
80376E 9015A7            MOV     DPTR,#m_Errorflag
803771 F0                MOVX    @DPTR,A
 3088: 			break;
803772 023D80            LJMP    ?C0660?MAINFLOW
 3089: 		}
803775         ?C0661?MAINFLOW:
 3090: 		ret = Cal( CurrentDispenseCoin , &tHopper1 , &tHopper2, &tHopper3 );
803775 7B00              MOV     R3,#?C?XDATASEG
803777 7A15              MOV     R2,#HIGH tHopper2
803779 799E              MOV     R1,#LOW tHopper2
80377B 9015AD            MOV     DPTR,#?_Cal?BYTE+05H
80377E A5128007B6        ECALL   ?C?PSTXDATA
803783 7A15              MOV     R2,#HIGH tHopper3
803785 09                INC     R1
803786 9015B0            MOV     DPTR,#?_Cal?BYTE+08H
803789 A5128007B6        ECALL   ?C?PSTXDATA
80378E 7A15              MOV     R2,#HIGH tHopper1
803790 799D              MOV     R1,#LOW tHopper1
803792 A512809802        ECALL   _Cal
803797 9015A0            MOV     DPTR,#ret
80379A EF                MOV     A,R7
80379B F0                MOVX    @DPTR,A
 3091: 		if ( ret ) 
80379C 7003              JNZ     $ + 5H
80379E 023834            LJMP    ?C0662?MAINFLOW
 3092: 		{ 		
 3093: 			for( ret = 0; ret < 3; ret ++ )
8037A1 E4                CLR     A
8037A2 F0                MOVX    @DPTR,A
8037A3         ?C0663?MAINFLOW:
8037A3 9015A0            MOV     DPTR,#ret
8037A6 E0                MOVX    A,@DPTR
8037A7 FF                MOV     R7,A
8037A8 C3                CLR     C
8037A9 9403              SUBB    A,#03H
8037AB 501D              JNC     ?C0664?MAINFLOW
 3094: 			{
 3095: 				if( HopperSetList[ret].price == 0 )
8037AD EF                MOV     A,R7
8037AE 25E0              ADD     A,ACC
8037B0 25E0              ADD     A,ACC
8037B2 24E4              ADD     A,#LOW HopperSetList
8037B4 F582              MOV     DPL,A
8037B6 E4                CLR     A
8037B7 340A              ADDC    A,#HIGH HopperSetList
8037B9 F583              MOV     DPH,A
8037BB E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 79


8037BC FE                MOV     R6,A
8037BD A3                INC     DPTR
8037BE E0                MOVX    A,@DPTR
8037BF 4E                ORL     A,R6
8037C0 6008              JZ      ?C0664?MAINFLOW
 3096: 					break;
 3097: 			}
8037C2         ?C0665?MAINFLOW:
8037C2 9015A0            MOV     DPTR,#ret
8037C5 E0                MOVX    A,@DPTR
8037C6 04                INC     A
8037C7 F0                MOVX    @DPTR,A
8037C8 80D9              SJMP    ?C0663?MAINFLOW
8037CA         ?C0664?MAINFLOW:
 3098: 			if( ret == 0 )
8037CA 9015A0            MOV     DPTR,#ret
8037CD E0                MOVX    A,@DPTR
8037CE FF                MOV     R7,A
8037CF 7019              JNZ     ?C0667?MAINFLOW
 3099: 			{
 3100: 				m_Errorflag = 1;
8037D1 9015A7            MOV     DPTR,#m_Errorflag
8037D4 04                INC     A
8037D5 F0                MOVX    @DPTR,A
 3101: 				SystemParameter.NotOutMax = CurrentDispenseCoin;
8037D6 90046E            MOV     DPTR,#CurrentDispenseCoin
8037D9 E0                MOVX    A,@DPTR
8037DA FD                MOV     R5,A
8037DB A3                INC     DPTR
8037DC E0                MOVX    A,@DPTR
8037DD 90042F            MOV     DPTR,#SystemParameter+0FH
8037E0 CD                XCH     A,R5
8037E1 F0                MOVX    @DPTR,A
8037E2 A3                INC     DPTR
8037E3 ED                MOV     A,R5
8037E4 F0                MOVX    @DPTR,A
 3102: 				IOUFlag = 1;
8037E5 D22B              SETB    IOUFlag
 3103: 				break;
8037E7 023D80            LJMP    ?C0660?MAINFLOW
 3104: 			}
8037EA         ?C0667?MAINFLOW:
 3105: 			if( CurrentDispenseCoin >= HopperSetList[ret - 1].price )//找零器坏,无法配币
8037EA EF                MOV     A,R7
8037EB 25E0              ADD     A,ACC
8037ED 25E0              ADD     A,ACC
8037EF 24E0              ADD     A,#LOW HopperSetList-04H
8037F1 F582              MOV     DPL,A
8037F3 E4                CLR     A
8037F4 340A              ADDC    A,#HIGH HopperSetList-04H
8037F6 F583              MOV     DPH,A
8037F8 E0                MOVX    A,@DPTR
8037F9 FE                MOV     R6,A
8037FA A3                INC     DPTR
8037FB E0                MOVX    A,@DPTR
8037FC FF                MOV     R7,A
8037FD 90046E            MOV     DPTR,#CurrentDispenseCoin
803800 E0                MOVX    A,@DPTR
803801 FC                MOV     R4,A
803802 A3                INC     DPTR
803803 E0                MOVX    A,@DPTR
803804 FD                MOV     R5,A
803805 C3                CLR     C
803806 9F                SUBB    A,R7
803807 EC                MOV     A,R4
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 80


803808 9E                SUBB    A,R6
803809 4012              JC      ?C0668?MAINFLOW
 3106: 			{
 3107: 				m_Errorflag = 1;
80380B 9015A7            MOV     DPTR,#m_Errorflag
80380E 7401              MOV     A,#01H
803810 F0                MOVX    @DPTR,A
 3108: 				SystemParameter.NotOutMax = CurrentDispenseCoin;
803811 90042F            MOV     DPTR,#SystemParameter+0FH
803814 EC                MOV     A,R4
803815 F0                MOVX    @DPTR,A
803816 A3                INC     DPTR
803817 ED                MOV     A,R5
803818 F0                MOVX    @DPTR,A
 3109: 				IOUFlag = 1;
803819 D22B              SETB    IOUFlag
 3110: 			}
80381B 800D              SJMP    ?C0669?MAINFLOW
80381D         ?C0668?MAINFLOW:
 3111: 			else
 3112: 			{
 3113: 				SystemParameter.NotOutMax = 0;
80381D E4                CLR     A
80381E 90042F            MOV     DPTR,#SystemParameter+0FH
803821 F0                MOVX    @DPTR,A
803822 A3                INC     DPTR
803823 F0                MOVX    @DPTR,A
 3114: 				IOUFlag = 0;
803824 C22B              CLR     IOUFlag
 3115: 				m_Errorflag = 0;
803826 9015A7            MOV     DPTR,#m_Errorflag
803829 F0                MOVX    @DPTR,A
 3116: 			}
80382A         ?C0669?MAINFLOW:
 3117: 			CurrentDispenseCoin = 0;
80382A E4                CLR     A
80382B 90046E            MOV     DPTR,#CurrentDispenseCoin
80382E F0                MOVX    @DPTR,A
80382F A3                INC     DPTR
803830 F0                MOVX    @DPTR,A
 3118: 			break;
803831 023D80            LJMP    ?C0660?MAINFLOW
 3119: 		}
803834         ?C0662?MAINFLOW:
 3120: 		outMoney = 0;
803834 E4                CLR     A
803835 9015A1            MOV     DPTR,#outMoney
803838 F0                MOVX    @DPTR,A
803839 A3                INC     DPTR
80383A F0                MOVX    @DPTR,A
 3121: 		if( tHopper1 )
80383B 90159D            MOV     DPTR,#tHopper1
80383E E0                MOVX    A,@DPTR
80383F FF                MOV     R7,A
803840 7003              JNZ     $ + 5H
803842 0238F2            LJMP    ?C0670?MAINFLOW
 3122: 		{	
 3123: 			Trace( "\n tHopper1 = %bu", tHopper1 );
 3124: 			if ( HopperOutCoin( tHopper1, 1, &Hopper1 ) == 0 )		
803845 7A23              MOV     R2,#HIGH Hopper1
803847 7B7E              MOV     R3,#LOW Hopper1
803849 7D01              MOV     R5,#01H
80384B A51280878E        ECALL   _HopperOutCoin
803850 EF                MOV     A,R7
803851 7076              JNZ     ?C0671?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 81


 3125: 			{
 3126: 				//出币命令发送成功
 3127: 				WaitForWork( 1000 , NULL );					
803853 7FE8              MOV     R7,#0E8H
803855 7E03              MOV     R6,#03H
803857 A512808330        ECALL   ?L?COM000D
 3128: 				//查询出币结果	
 3129: 				ret = 0;
80385C E4                CLR     A
80385D 9015A0            MOV     DPTR,#ret
803860 F0                MOVX    @DPTR,A
803861         ?C0672?MAINFLOW:
 3130: 				while( ret < 2 )
803861 9015A0            MOV     DPTR,#ret
803864 E0                MOVX    A,@DPTR
803865 C3                CLR     C
803866 9402              SUBB    A,#02H
803868 5054              JNC     ?C0673?MAINFLOW
 3131: 				{
 3132: 					if( GetHardWareDeviceState( 1, &Hopper1 ) != 1 ) //更新状态成功
80386A 7C23              MOV     R4,#HIGH Hopper1
80386C 7D7E              MOV     R5,#LOW Hopper1
80386E 7F01              MOV     R7,#01H
803870 A5128086B0        ECALL   _GetHardWareDeviceState
803875 EF                MOV     A,R7
803876 6401              XRL     A,#01H
803878 6032              JZ      ?C0674?MAINFLOW
 3133: 					{
 3134: 						if( Hopper1.State & 0x50 ) //红外线传感有问题或系统故障
80387A 902381            MOV     DPTR,#Hopper1+03H
80387D E0                MOVX    A,@DPTR
80387E FD                MOV     R5,A
80387F 5450              ANL     A,#050H
803881 6007              JZ      ?C0675?MAINFLOW
 3135: 							coin1flag |= 4;//硬件故障			
803883 9015A4            MOV     DPTR,#coin1flag
803886 E0                MOVX    A,@DPTR
803887 4404              ORL     A,#04H
803889 F0                MOVX    @DPTR,A
80388A         ?C0675?MAINFLOW:
 3136: 						if ( Hopper1.State & 0x28 )//实际无币或光测无币
80388A ED                MOV     A,R5
80388B 5428              ANL     A,#028H
80388D 6007              JZ      ?C0676?MAINFLOW
 3137: 							coin1flag |= 2;//币不足						
80388F 9015A4            MOV     DPTR,#coin1flag
803892 E0                MOVX    A,@DPTR
803893 4402              ORL     A,#02H
803895 F0                MOVX    @DPTR,A
803896         ?C0676?MAINFLOW:
 3138: 						outMoney = HopperGetCoinOut( 1 );
803896 7F01              MOV     R7,#01H
803898 A512812D56        ECALL   _HopperGetCoinOut
80389D 9015A1            MOV     DPTR,#outMoney
8038A0 EE                MOV     A,R6
8038A1 F0                MOVX    @DPTR,A
8038A2 A3                INC     DPTR
8038A3 EF                MOV     A,R7
8038A4 F0                MOVX    @DPTR,A
 3139: 						Trace( "\n outMoney1 = %d", outMoney );
 3140: 					//	if( outMoney == 0 )								
 3141: 					//		coin1flag = 3;//硬件		
 3142: 						ret = 0;
8038A5 E4                CLR     A
8038A6 9015A0            MOV     DPTR,#ret
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 82


8038A9 F0                MOVX    @DPTR,A
 3143: 						break;
8038AA 8012              SJMP    ?C0673?MAINFLOW
 3144: 					}
8038AC         ?C0674?MAINFLOW:
 3145: 					else//查询状态超时
 3146: 					{
 3147: 						ret++;					
8038AC 9015A0            MOV     DPTR,#ret
8038AF E0                MOVX    A,@DPTR
8038B0 04                INC     A
8038B1 F0                MOVX    @DPTR,A
 3148: 						WaitForWork( 1000, NULL );
8038B2 E4                CLR     A
8038B3 7FE8              MOV     R7,#0E8H
8038B5 7E03              MOV     R6,#03H
8038B7 A512808330        ECALL   ?L?COM000D
 3149: 					}
 3150: 				}//while
8038BC 80A3              SJMP    ?C0672?MAINFLOW
8038BE         ?C0673?MAINFLOW:
 3151: 				if( ret >= 2 )
8038BE 9015A0            MOV     DPTR,#ret
8038C1 E0                MOVX    A,@DPTR
8038C2 C3                CLR     C
8038C3 9402              SUBB    A,#02H
8038C5 4009              JC      ?C0679?MAINFLOW
 3152: 					coin1flag |= 4;
 3153: 			}
8038C7 8000              SJMP    ?C1108?MAINFLOW
8038C9         ?C0671?MAINFLOW:
 3154: 			else 		
 3155: 				coin1flag |= 4;
8038C9         
8038C9 9015A4            MOV     DPTR,#coin1flag
8038CC E0                MOVX    A,@DPTR
8038CD 4404              ORL     A,#04H
8038CF F0                MOVX    @DPTR,A
8038D0         ?C0679?MAINFLOW:
 3156: 		   CurrentDispenseCoin = CurrentDispenseCoin - outMoney*SystemParameter.HopperCoinPrice1;
8038D0 900421            MOV     DPTR,#SystemParameter+01H
8038D3 E0                MOVX    A,@DPTR
8038D4 FC                MOV     R4,A
8038D5 A3                INC     DPTR
8038D6 E0                MOVX    A,@DPTR
8038D7 FD                MOV     R5,A
8038D8 9015A1            MOV     DPTR,#outMoney
8038DB E0                MOVX    A,@DPTR
8038DC FE                MOV     R6,A
8038DD A3                INC     DPTR
8038DE E0                MOVX    A,@DPTR
8038DF FF                MOV     R7,A
8038E0 A512800559        ECALL   ?C?IMUL
8038E5 C3                CLR     C
8038E6 90046F            MOV     DPTR,#CurrentDispenseCoin+01H
8038E9 E0                MOVX    A,@DPTR
8038EA 9F                SUBB    A,R7
8038EB F0                MOVX    @DPTR,A
8038EC 90046E            MOV     DPTR,#CurrentDispenseCoin
8038EF E0                MOVX    A,@DPTR
8038F0 9E                SUBB    A,R6
8038F1 F0                MOVX    @DPTR,A
 3157: 		}
8038F2         ?C0670?MAINFLOW:
 3158: 		Trace( "\n coin1flag = %bu", coin1flag );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 83


 3159: 		TradeCounter.Hopper1Num += outMoney;//出币枚数
8038F2 9015A1            MOV     DPTR,#outMoney
8038F5 E0                MOVX    A,@DPTR
8038F6 FE                MOV     R6,A
8038F7 A3                INC     DPTR
8038F8 E0                MOVX    A,@DPTR
8038F9 FF                MOV     R7,A
8038FA 900B15            MOV     DPTR,#TradeCounter+024H
8038FD EE                MOV     A,R6
8038FE 8FF0              MOV     B,R7
803900 A512800600        ECALL   ?C?IILDX
 3160: 		TradeCounter.Hopper1Sum += outMoney*SystemParameter.HopperCoinPrice1;//出币金额
803905 900B09            MOV     DPTR,#TradeCounter+018H
803908 A51280073E        ECALL   ?C?LLDXDATA0
80390D C000              PUSH    AR0
80390F 900421            MOV     DPTR,#SystemParameter+01H
803912 E0                MOVX    A,@DPTR
803913 FC                MOV     R4,A
803914 A3                INC     DPTR
803915 E0                MOVX    A,@DPTR
803916 FD                MOV     R5,A
803917 9015A1            MOV     DPTR,#outMoney
80391A E0                MOVX    A,@DPTR
80391B FE                MOV     R6,A
80391C A3                INC     DPTR
80391D E0                MOVX    A,@DPTR
80391E FF                MOV     R7,A
80391F A512800559        ECALL   ?C?IMUL
803924 E4                CLR     A
803925 FC                MOV     R4,A
803926 FD                MOV     R5,A
803927 D000              POP     AR0
803929 A51280062E        ECALL   ?C?LADD
80392E 900B09            MOV     DPTR,#TradeCounter+018H
803931 A512800792        ECALL   ?C?LSTXDATA
 3161: 		TradeCounter.ChangeSum += outMoney*SystemParameter.HopperCoinPrice1;//出币金额
803936 900B05            MOV     DPTR,#TradeCounter+014H
803939 A51280073E        ECALL   ?C?LLDXDATA0
80393E C000              PUSH    AR0
803940 900421            MOV     DPTR,#SystemParameter+01H
803943 E0                MOVX    A,@DPTR
803944 FC                MOV     R4,A
803945 A3                INC     DPTR
803946 E0                MOVX    A,@DPTR
803947 FD                MOV     R5,A
803948 9015A1            MOV     DPTR,#outMoney
80394B E0                MOVX    A,@DPTR
80394C FE                MOV     R6,A
80394D A3                INC     DPTR
80394E E0                MOVX    A,@DPTR
80394F FF                MOV     R7,A
803950 A512800559        ECALL   ?C?IMUL
803955 E4                CLR     A
803956 FC                MOV     R4,A
803957 FD                MOV     R5,A
803958 D000              POP     AR0
80395A A51280062E        ECALL   ?C?LADD
80395F 900B05            MOV     DPTR,#TradeCounter+014H
803962 A512800792        ECALL   ?C?LSTXDATA
 3162: 		//出币不成功, 重新配币
 3163: 		if( coin1flag != 1 )
803967 9015A4            MOV     DPTR,#coin1flag
80396A E0                MOVX    A,@DPTR
80396B 6401              XRL     A,#01H
80396D 7003              JNZ     $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 84


80396F 0239FC            LJMP    ?C0680?MAINFLOW
 3164: 		{
 3165: 		//	Trace( "\n outMoney1 = %d", outMoney );											
 3166: 			for( i = 0; i < 3; i ++ )
803972 E4                CLR     A
803973 9015A3            MOV     DPTR,#i
803976 F0                MOVX    @DPTR,A
803977         ?C0681?MAINFLOW:
803977 9015A3            MOV     DPTR,#i
80397A E0                MOVX    A,@DPTR
80397B FF                MOV     R7,A
80397C C3                CLR     C
80397D 9403              SUBB    A,#03H
80397F 505F              JNC     ?C0682?MAINFLOW
 3167: 			{
 3168: 				if( HopperSetList[i].HopperIndex == 1)					
803981 EF                MOV     A,R7
803982 25E0              ADD     A,ACC
803984 25E0              ADD     A,ACC
803986 24E6              ADD     A,#LOW HopperSetList+02H
803988 F582              MOV     DPL,A
80398A E4                CLR     A
80398B 340A              ADDC    A,#HIGH HopperSetList+02H
80398D F583              MOV     DPH,A
80398F E0                MOVX    A,@DPTR
803990 6401              XRL     A,#01H
803992 7044              JNZ     ?C0683?MAINFLOW
 3169: 				{
 3170: 					if( coin1flag & 4 )					
803994 9015A4            MOV     DPTR,#coin1flag
803997 E0                MOVX    A,@DPTR
803998 FF                MOV     R7,A
803999 30E208            JNB     ACC.2,?C0685?MAINFLOW
 3171: 						DeviceStatus.ChangeUnit1 = 1; 					
80399C 900B1D            MOV     DPTR,#DeviceStatus+02H
80399F 7401              MOV     A,#01H
8039A1 F0                MOVX    @DPTR,A
8039A2 800A              SJMP    ?C0686?MAINFLOW
8039A4         ?C0685?MAINFLOW:
 3172: 					else if( coin1flag & 2 ) 					
8039A4 EF                MOV     A,R7
8039A5 30E106            JNB     ACC.1,?C0686?MAINFLOW
 3173: 						DeviceStatus.ChangeUnit1 = 2; 						
8039A8 900B1D            MOV     DPTR,#DeviceStatus+02H
8039AB 7402              MOV     A,#02H
8039AD F0                MOVX    @DPTR,A
8039AE         ?C0686?MAINFLOW:
 3174: 					HopperSetList[i].HopperState = 2;
8039AE 9015A3            MOV     DPTR,#i
8039B1 E0                MOVX    A,@DPTR
8039B2 25E0              ADD     A,ACC
8039B4 25E0              ADD     A,ACC
8039B6 24E7              ADD     A,#LOW HopperSetList+03H
8039B8 F582              MOV     DPL,A
8039BA E4                CLR     A
8039BB 340A              ADDC    A,#HIGH HopperSetList+03H
8039BD F583              MOV     DPH,A
8039BF 7402              MOV     A,#02H
8039C1 F0                MOVX    @DPTR,A
 3175: 					if( ( i == GetMinHopper()) && ( DeviceStatus.ChangeUnit1 != 0 ) )
8039C2 A512809FE0        ECALL   GetMinHopper
8039C7 9015A3            MOV     DPTR,#i
8039CA E0                MOVX    A,@DPTR
8039CB B50712            CJNE    A,AR7,?C0682?MAINFLOW
8039CE 900B1D            MOV     DPTR,#DeviceStatus+02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 85


8039D1 E0                MOVX    A,@DPTR
8039D2 600C              JZ      ?C0682?MAINFLOW
 3176: 						IsCanInCashFlag = 0;
8039D4 C226              CLR     IsCanInCashFlag
 3177: 					break;
8039D6 8008              SJMP    ?C0682?MAINFLOW
 3178: 				}			
 3179: 			}			
8039D8         ?C0683?MAINFLOW:
8039D8 9015A3            MOV     DPTR,#i
8039DB E0                MOVX    A,@DPTR
8039DC 04                INC     A
8039DD F0                MOVX    @DPTR,A
8039DE 8097              SJMP    ?C0681?MAINFLOW
8039E0         ?C0682?MAINFLOW:
 3180: 			coin1flag = 1;
8039E0 9015A4            MOV     DPTR,#coin1flag
8039E3 7401              MOV     A,#01H
8039E5 F0                MOVX    @DPTR,A
 3181: 			if( outMoney < tHopper1 )
8039E6 90159D            MOV     DPTR,#tHopper1
8039E9 E0                MOVX    A,@DPTR
8039EA FF                MOV     R7,A
8039EB C3                CLR     C
8039EC 9015A2            MOV     DPTR,#outMoney+01H
8039EF E0                MOVX    A,@DPTR
8039F0 9F                SUBB    A,R7
8039F1 9015A1            MOV     DPTR,#outMoney
8039F4 E0                MOVX    A,@DPTR
8039F5 9400              SUBB    A,#00H
8039F7 5003              JNC     $ + 5H
8039F9 02375A            LJMP    ?C0659?MAINFLOW
 3182: 				continue;
 3183: 		}
8039FC         ?C0680?MAINFLOW:
 3184: 		outMoney = 0;
8039FC E4                CLR     A
8039FD 9015A1            MOV     DPTR,#outMoney
803A00 F0                MOVX    @DPTR,A
803A01 A3                INC     DPTR
803A02 F0                MOVX    @DPTR,A
 3185: 		if ( tHopper2 )
803A03 90159E            MOV     DPTR,#tHopper2
803A06 E0                MOVX    A,@DPTR
803A07 FF                MOV     R7,A
803A08 7003              JNZ     $ + 5H
803A0A 023ABA            LJMP    ?C0690?MAINFLOW
 3186: 		{		
 3187: 			Trace( "\n tHopper2 = %bu", tHopper2 );
 3188: 			if ( HopperOutCoin( tHopper2, 2, &Hopper2 ) == 0 )
803A0D 7A23              MOV     R2,#HIGH Hopper2
803A0F 7B93              MOV     R3,#LOW Hopper2
803A11 7D02              MOV     R5,#02H
803A13 A51280878E        ECALL   _HopperOutCoin
803A18 EF                MOV     A,R7
803A19 7076              JNZ     ?C0691?MAINFLOW
 3189: 			{	
 3190: 				////出币命令发送成功
 3191: 				WaitForWork( 1000 , NULL );					
803A1B 7FE8              MOV     R7,#0E8H
803A1D 7E03              MOV     R6,#03H
803A1F A512808330        ECALL   ?L?COM000D
 3192: 				ret = 0;
803A24 E4                CLR     A
803A25 9015A0            MOV     DPTR,#ret
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 86


803A28 F0                MOVX    @DPTR,A
803A29         ?C0692?MAINFLOW:
 3193: 				while( ret < 2 )
803A29 9015A0            MOV     DPTR,#ret
803A2C E0                MOVX    A,@DPTR
803A2D C3                CLR     C
803A2E 9402              SUBB    A,#02H
803A30 5054              JNC     ?C0693?MAINFLOW
 3194: 				{
 3195: 					if( GetHardWareDeviceState( 2, &Hopper2 ) != 1 )
803A32 7C23              MOV     R4,#HIGH Hopper2
803A34 7D93              MOV     R5,#LOW Hopper2
803A36 7F02              MOV     R7,#02H
803A38 A5128086B0        ECALL   _GetHardWareDeviceState
803A3D EF                MOV     A,R7
803A3E 6401              XRL     A,#01H
803A40 6032              JZ      ?C0694?MAINFLOW
 3196: 					{
 3197: 						//更新状态出功
 3198: 						if( Hopper2.State & 0x50 ) //红外线传感有问题或系统故障
803A42 902396            MOV     DPTR,#Hopper2+03H
803A45 E0                MOVX    A,@DPTR
803A46 FD                MOV     R5,A
803A47 5450              ANL     A,#050H
803A49 6007              JZ      ?C0695?MAINFLOW
 3199: 							coin2flag |= 4;//硬件故障						
803A4B 9015A5            MOV     DPTR,#coin2flag
803A4E E0                MOVX    A,@DPTR
803A4F 4404              ORL     A,#04H
803A51 F0                MOVX    @DPTR,A
803A52         ?C0695?MAINFLOW:
 3200: 						if( ( Hopper2.State & 0x28 ) )//实际无币或光测无币
803A52 ED                MOV     A,R5
803A53 5428              ANL     A,#028H
803A55 6007              JZ      ?C0696?MAINFLOW
 3201: 							coin2flag |= 2;//币不足						
803A57 9015A5            MOV     DPTR,#coin2flag
803A5A E0                MOVX    A,@DPTR
803A5B 4402              ORL     A,#02H
803A5D F0                MOVX    @DPTR,A
803A5E         ?C0696?MAINFLOW:
 3202: 						outMoney = HopperGetCoinOut( 2 );
803A5E 7F02              MOV     R7,#02H
803A60 A512812D56        ECALL   _HopperGetCoinOut
803A65 9015A1            MOV     DPTR,#outMoney
803A68 EE                MOV     A,R6
803A69 F0                MOVX    @DPTR,A
803A6A A3                INC     DPTR
803A6B EF                MOV     A,R7
803A6C F0                MOVX    @DPTR,A
 3203: 						Trace( "\n outMoney2 = %d", outMoney );
 3204: 				//		if( outMoney == 0 )								
 3205: 				//			coin2flag = 3;
 3206: 						ret = 0;
803A6D E4                CLR     A
803A6E 9015A0            MOV     DPTR,#ret
803A71 F0                MOVX    @DPTR,A
 3207: 						break;
803A72 8012              SJMP    ?C0693?MAINFLOW
 3208: 					}
803A74         ?C0694?MAINFLOW:
 3209: 					else
 3210: 					{
 3211: 						ret++;
803A74 9015A0            MOV     DPTR,#ret
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 87


803A77 E0                MOVX    A,@DPTR
803A78 04                INC     A
803A79 F0                MOVX    @DPTR,A
 3212: 						WaitForWork( 1000, NULL );
803A7A E4                CLR     A
803A7B 7FE8              MOV     R7,#0E8H
803A7D 7E03              MOV     R6,#03H
803A7F A512808330        ECALL   ?L?COM000D
 3213: 					}
 3214: 				}//while
803A84 80A3              SJMP    ?C0692?MAINFLOW
803A86         ?C0693?MAINFLOW:
 3215: 				if( ret >= 2 )
803A86 9015A0            MOV     DPTR,#ret
803A89 E0                MOVX    A,@DPTR
803A8A C3                CLR     C
803A8B 9402              SUBB    A,#02H
803A8D 4009              JC      ?C0699?MAINFLOW
 3216: 					coin2flag |= 4;
 3217: 			}
803A8F 8000              SJMP    ?C1109?MAINFLOW
803A91         ?C0691?MAINFLOW:
 3218: 			else		
 3219: 				coin2flag |= 4;				
803A91         
803A91 9015A5            MOV     DPTR,#coin2flag
803A94 E0                MOVX    A,@DPTR
803A95 4404              ORL     A,#04H
803A97 F0                MOVX    @DPTR,A
803A98         ?C0699?MAINFLOW:
 3220: 		   CurrentDispenseCoin = CurrentDispenseCoin - outMoney*SystemParameter.HopperCoinPrice2;
803A98 900423            MOV     DPTR,#SystemParameter+03H
803A9B E0                MOVX    A,@DPTR
803A9C FC                MOV     R4,A
803A9D A3                INC     DPTR
803A9E E0                MOVX    A,@DPTR
803A9F FD                MOV     R5,A
803AA0 9015A1            MOV     DPTR,#outMoney
803AA3 E0                MOVX    A,@DPTR
803AA4 FE                MOV     R6,A
803AA5 A3                INC     DPTR
803AA6 E0                MOVX    A,@DPTR
803AA7 FF                MOV     R7,A
803AA8 A512800559        ECALL   ?C?IMUL
803AAD C3                CLR     C
803AAE 90046F            MOV     DPTR,#CurrentDispenseCoin+01H
803AB1 E0                MOVX    A,@DPTR
803AB2 9F                SUBB    A,R7
803AB3 F0                MOVX    @DPTR,A
803AB4 90046E            MOV     DPTR,#CurrentDispenseCoin
803AB7 E0                MOVX    A,@DPTR
803AB8 9E                SUBB    A,R6
803AB9 F0                MOVX    @DPTR,A
 3221: 		}
803ABA         ?C0690?MAINFLOW:
 3222: 		
 3223: 		Trace( "\n coin2flag = %bu", coin2flag );
 3224: 		TradeCounter.Hopper2Num += outMoney;//出币枚数
803ABA 9015A1            MOV     DPTR,#outMoney
803ABD E0                MOVX    A,@DPTR
803ABE FE                MOV     R6,A
803ABF A3                INC     DPTR
803AC0 E0                MOVX    A,@DPTR
803AC1 FF                MOV     R7,A
803AC2 900B17            MOV     DPTR,#TradeCounter+026H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 88


803AC5 EE                MOV     A,R6
803AC6 8FF0              MOV     B,R7
803AC8 A512800600        ECALL   ?C?IILDX
 3225: 		TradeCounter.Hopper2Sum += outMoney*SystemParameter.HopperCoinPrice2;//出币金额
803ACD 900B0D            MOV     DPTR,#TradeCounter+01CH
803AD0 A51280073E        ECALL   ?C?LLDXDATA0
803AD5 C000              PUSH    AR0
803AD7 900423            MOV     DPTR,#SystemParameter+03H
803ADA E0                MOVX    A,@DPTR
803ADB FC                MOV     R4,A
803ADC A3                INC     DPTR
803ADD E0                MOVX    A,@DPTR
803ADE FD                MOV     R5,A
803ADF 9015A1            MOV     DPTR,#outMoney
803AE2 E0                MOVX    A,@DPTR
803AE3 FE                MOV     R6,A
803AE4 A3                INC     DPTR
803AE5 E0                MOVX    A,@DPTR
803AE6 FF                MOV     R7,A
803AE7 A512800559        ECALL   ?C?IMUL
803AEC E4                CLR     A
803AED FC                MOV     R4,A
803AEE FD                MOV     R5,A
803AEF D000              POP     AR0
803AF1 A51280062E        ECALL   ?C?LADD
803AF6 900B0D            MOV     DPTR,#TradeCounter+01CH
803AF9 A512800792        ECALL   ?C?LSTXDATA
 3226: 		TradeCounter.ChangeSum += outMoney*SystemParameter.HopperCoinPrice2;//出币金额
803AFE 900B05            MOV     DPTR,#TradeCounter+014H
803B01 A51280073E        ECALL   ?C?LLDXDATA0
803B06 C000              PUSH    AR0
803B08 900423            MOV     DPTR,#SystemParameter+03H
803B0B E0                MOVX    A,@DPTR
803B0C FC                MOV     R4,A
803B0D A3                INC     DPTR
803B0E E0                MOVX    A,@DPTR
803B0F FD                MOV     R5,A
803B10 9015A1            MOV     DPTR,#outMoney
803B13 E0                MOVX    A,@DPTR
803B14 FE                MOV     R6,A
803B15 A3                INC     DPTR
803B16 E0                MOVX    A,@DPTR
803B17 FF                MOV     R7,A
803B18 A512800559        ECALL   ?C?IMUL
803B1D E4                CLR     A
803B1E FC                MOV     R4,A
803B1F FD                MOV     R5,A
803B20 D000              POP     AR0
803B22 A51280062E        ECALL   ?C?LADD
803B27 900B05            MOV     DPTR,#TradeCounter+014H
803B2A A512800792        ECALL   ?C?LSTXDATA
 3227: 		//出币不成功, 重新配币
 3228: 		if( coin2flag != 1 )
803B2F 9015A5            MOV     DPTR,#coin2flag
803B32 E0                MOVX    A,@DPTR
803B33 6401              XRL     A,#01H
803B35 7003              JNZ     $ + 5H
803B37 023BC2            LJMP    ?C0700?MAINFLOW
 3229: 		{
 3230: 		//	Trace( "\n outMoney1 = %d", outMoney );											
 3231: 			for( i = 0; i < 3; i ++ )
803B3A E4                CLR     A
803B3B 9015A3            MOV     DPTR,#i
803B3E F0                MOVX    @DPTR,A
803B3F         ?C0701?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 89


803B3F 9015A3            MOV     DPTR,#i
803B42 E0                MOVX    A,@DPTR
803B43 FF                MOV     R7,A
803B44 C3                CLR     C
803B45 9403              SUBB    A,#03H
803B47 505D              JNC     ?C0702?MAINFLOW
 3232: 			{
 3233: 				if( HopperSetList[i].HopperIndex == 2)					
803B49 EF                MOV     A,R7
803B4A 25E0              ADD     A,ACC
803B4C 25E0              ADD     A,ACC
803B4E 24E6              ADD     A,#LOW HopperSetList+02H
803B50 F582              MOV     DPL,A
803B52 E4                CLR     A
803B53 340A              ADDC    A,#HIGH HopperSetList+02H
803B55 F583              MOV     DPH,A
803B57 E0                MOVX    A,@DPTR
803B58 6402              XRL     A,#02H
803B5A 7042              JNZ     ?C0703?MAINFLOW
 3234: 				{
 3235: 					if( coin2flag & 4 )					
803B5C 9015A5            MOV     DPTR,#coin2flag
803B5F E0                MOVX    A,@DPTR
803B60 FF                MOV     R7,A
803B61 30E208            JNB     ACC.2,?C0705?MAINFLOW
 3236: 						DeviceStatus.ChangeUnit2 = 1; 					
803B64 900B1E            MOV     DPTR,#DeviceStatus+03H
803B67 7401              MOV     A,#01H
803B69 F0                MOVX    @DPTR,A
803B6A 800A              SJMP    ?C0706?MAINFLOW
803B6C         ?C0705?MAINFLOW:
 3237: 					else if( coin2flag & 2 )					
803B6C EF                MOV     A,R7
803B6D 30E106            JNB     ACC.1,?C0706?MAINFLOW
 3238: 						DeviceStatus.ChangeUnit2 = 2; 						
803B70 900B1E            MOV     DPTR,#DeviceStatus+03H
803B73 7402              MOV     A,#02H
803B75 F0                MOVX    @DPTR,A
803B76         ?C0706?MAINFLOW:
 3239: 					if( ( i == GetMinHopper()) && ( DeviceStatus.ChangeUnit2 != 0 ) )
803B76 A512809FE0        ECALL   GetMinHopper
803B7B 9015A3            MOV     DPTR,#i
803B7E E0                MOVX    A,@DPTR
803B7F FE                MOV     R6,A
803B80 B50708            CJNE    A,AR7,?C0708?MAINFLOW
803B83 900B1E            MOV     DPTR,#DeviceStatus+03H
803B86 E0                MOVX    A,@DPTR
803B87 6002              JZ      ?C0708?MAINFLOW
 3240: 						IsCanInCashFlag = 0;
803B89 C226              CLR     IsCanInCashFlag
803B8B         ?C0708?MAINFLOW:
 3241: 					HopperSetList[i].HopperState = 2;
803B8B EE                MOV     A,R6
803B8C 25E0              ADD     A,ACC
803B8E 25E0              ADD     A,ACC
803B90 24E7              ADD     A,#LOW HopperSetList+03H
803B92 F582              MOV     DPL,A
803B94 E4                CLR     A
803B95 340A              ADDC    A,#HIGH HopperSetList+03H
803B97 F583              MOV     DPH,A
803B99 7402              MOV     A,#02H
803B9B F0                MOVX    @DPTR,A
 3242: 					break;
803B9C 8008              SJMP    ?C0702?MAINFLOW
 3243: 				}			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 90


 3244: 			}			
803B9E         ?C0703?MAINFLOW:
803B9E 9015A3            MOV     DPTR,#i
803BA1 E0                MOVX    A,@DPTR
803BA2 04                INC     A
803BA3 F0                MOVX    @DPTR,A
803BA4 8099              SJMP    ?C0701?MAINFLOW
803BA6         ?C0702?MAINFLOW:
 3245: 			coin2flag = 1;
803BA6 9015A5            MOV     DPTR,#coin2flag
803BA9 7401              MOV     A,#01H
803BAB F0                MOVX    @DPTR,A
 3246: 			if( outMoney < tHopper2 )
803BAC 90159E            MOV     DPTR,#tHopper2
803BAF E0                MOVX    A,@DPTR
803BB0 FF                MOV     R7,A
803BB1 C3                CLR     C
803BB2 9015A2            MOV     DPTR,#outMoney+01H
803BB5 E0                MOVX    A,@DPTR
803BB6 9F                SUBB    A,R7
803BB7 9015A1            MOV     DPTR,#outMoney
803BBA E0                MOVX    A,@DPTR
803BBB 9400              SUBB    A,#00H
803BBD 5003              JNC     $ + 5H
803BBF 02375A            LJMP    ?C0659?MAINFLOW
 3247: 				continue;
 3248: 		}	
803BC2         ?C0700?MAINFLOW:
 3249: 		outMoney = 0;
803BC2 E4                CLR     A
803BC3 9015A1            MOV     DPTR,#outMoney
803BC6 F0                MOVX    @DPTR,A
803BC7 A3                INC     DPTR
803BC8 F0                MOVX    @DPTR,A
 3250: 		if ( tHopper3 )
803BC9 90159F            MOV     DPTR,#tHopper3
803BCC E0                MOVX    A,@DPTR
803BCD FF                MOV     R7,A
803BCE 7003              JNZ     $ + 5H
803BD0 023C7A            LJMP    ?C0710?MAINFLOW
 3251: 		{		
 3252: 			Trace( "\n tHopper3 = %bu", tHopper3 );
 3253: 			if ( HopperOutCoin( tHopper3, 3, &Hopper3 ) == 0 )
803BD3 7A23              MOV     R2,#HIGH Hopper3
803BD5 7BA8              MOV     R3,#LOW Hopper3
803BD7 7D03              MOV     R5,#03H
803BD9 A51280878E        ECALL   _HopperOutCoin
803BDE EF                MOV     A,R7
803BDF 7070              JNZ     ?C0711?MAINFLOW
 3254: 			{	
 3255: 				////出币命令发送成功
 3256: 				WaitForWork( 1000 , NULL );					
803BE1 7FE8              MOV     R7,#0E8H
803BE3 7E03              MOV     R6,#03H
803BE5 A512808330        ECALL   ?L?COM000D
 3257: 				ret = 0;
803BEA E4                CLR     A
803BEB 9015A0            MOV     DPTR,#ret
803BEE F0                MOVX    @DPTR,A
803BEF         ?C0712?MAINFLOW:
 3258: 				while( ret < 2 )
803BEF 9015A0            MOV     DPTR,#ret
803BF2 E0                MOVX    A,@DPTR
803BF3 C3                CLR     C
803BF4 9402              SUBB    A,#02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 91


803BF6 504E              JNC     ?C0713?MAINFLOW
 3259: 				{
 3260: 					if( GetHardWareDeviceState( 3, &Hopper3 ) != 1 )
803BF8 A5128086AA        ECALL   ?L?COM002C
803BFD EF                MOV     A,R7
803BFE 6401              XRL     A,#01H
803C00 6032              JZ      ?C0714?MAINFLOW
 3261: 					{
 3262: 						//更新状态出功
 3263: 						if( Hopper3.State & 0x50 ) //红外线传感有问题或系统故障
803C02 9023AB            MOV     DPTR,#Hopper3+03H
803C05 E0                MOVX    A,@DPTR
803C06 FD                MOV     R5,A
803C07 5450              ANL     A,#050H
803C09 6007              JZ      ?C0715?MAINFLOW
 3264: 							coin3flag |= 4;//硬件故障						
803C0B 9015A6            MOV     DPTR,#coin3flag
803C0E E0                MOVX    A,@DPTR
803C0F 4404              ORL     A,#04H
803C11 F0                MOVX    @DPTR,A
803C12         ?C0715?MAINFLOW:
 3265: 						if( ( Hopper3.State & 0x28 ) )//实际无币或光测无币
803C12 ED                MOV     A,R5
803C13 5428              ANL     A,#028H
803C15 6007              JZ      ?C0716?MAINFLOW
 3266: 							coin3flag |= 2;//币不足						
803C17 9015A6            MOV     DPTR,#coin3flag
803C1A E0                MOVX    A,@DPTR
803C1B 4402              ORL     A,#02H
803C1D F0                MOVX    @DPTR,A
803C1E         ?C0716?MAINFLOW:
 3267: 						outMoney = HopperGetCoinOut( 3 );
803C1E 7F03              MOV     R7,#03H
803C20 A512812D56        ECALL   _HopperGetCoinOut
803C25 9015A1            MOV     DPTR,#outMoney
803C28 EE                MOV     A,R6
803C29 F0                MOVX    @DPTR,A
803C2A A3                INC     DPTR
803C2B EF                MOV     A,R7
803C2C F0                MOVX    @DPTR,A
 3268: 						Trace( "\n outMoney3 = %d", outMoney );
 3269: 					//	if( outMoney == 0 )							
 3270: 					//		coin3flag = 3;
 3271: 						ret = 0;
803C2D E4                CLR     A
803C2E 9015A0            MOV     DPTR,#ret
803C31 F0                MOVX    @DPTR,A
 3272: 						break;
803C32 8012              SJMP    ?C0713?MAINFLOW
 3273: 					}
803C34         ?C0714?MAINFLOW:
 3274: 					else
 3275: 					{
 3276: 						Trace( "\n Hopper3 fail" );
 3277: 						ret++;
803C34 9015A0            MOV     DPTR,#ret
803C37 E0                MOVX    A,@DPTR
803C38 04                INC     A
803C39 F0                MOVX    @DPTR,A
 3278: 						WaitForWork( 1000, NULL );
803C3A E4                CLR     A
803C3B 7FE8              MOV     R7,#0E8H
803C3D 7E03              MOV     R6,#03H
803C3F A512808330        ECALL   ?L?COM000D
 3279: 					}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 92


 3280: 				}//while
803C44 80A9              SJMP    ?C0712?MAINFLOW
803C46         ?C0713?MAINFLOW:
 3281: 				if( ret >= 2 )
803C46 9015A0            MOV     DPTR,#ret
803C49 E0                MOVX    A,@DPTR
803C4A C3                CLR     C
803C4B 9402              SUBB    A,#02H
803C4D 4009              JC      ?C0719?MAINFLOW
 3282: 					coin3flag |= 4;
 3283: 			}
803C4F 8000              SJMP    ?C1110?MAINFLOW
803C51         ?C0711?MAINFLOW:
 3284: 			else		
 3285: 				coin3flag |= 4;				
803C51         
803C51 9015A6            MOV     DPTR,#coin3flag
803C54 E0                MOVX    A,@DPTR
803C55 4404              ORL     A,#04H
803C57 F0                MOVX    @DPTR,A
803C58         ?C0719?MAINFLOW:
 3286: 		  	CurrentDispenseCoin = CurrentDispenseCoin - outMoney*SystemParameter.HopperCoinPrice3;		
803C58 900425            MOV     DPTR,#SystemParameter+05H
803C5B E0                MOVX    A,@DPTR
803C5C FC                MOV     R4,A
803C5D A3                INC     DPTR
803C5E E0                MOVX    A,@DPTR
803C5F FD                MOV     R5,A
803C60 9015A1            MOV     DPTR,#outMoney
803C63 E0                MOVX    A,@DPTR
803C64 FE                MOV     R6,A
803C65 A3                INC     DPTR
803C66 E0                MOVX    A,@DPTR
803C67 FF                MOV     R7,A
803C68 A512800559        ECALL   ?C?IMUL
803C6D C3                CLR     C
803C6E 90046F            MOV     DPTR,#CurrentDispenseCoin+01H
803C71 E0                MOVX    A,@DPTR
803C72 9F                SUBB    A,R7
803C73 F0                MOVX    @DPTR,A
803C74 90046E            MOV     DPTR,#CurrentDispenseCoin
803C77 E0                MOVX    A,@DPTR
803C78 9E                SUBB    A,R6
803C79 F0                MOVX    @DPTR,A
 3287: 		}
803C7A         ?C0710?MAINFLOW:
 3288: 	
 3289: 		TradeCounter.Hopper3Num += outMoney;//出币枚数
803C7A 9015A1            MOV     DPTR,#outMoney
803C7D E0                MOVX    A,@DPTR
803C7E FE                MOV     R6,A
803C7F A3                INC     DPTR
803C80 E0                MOVX    A,@DPTR
803C81 FF                MOV     R7,A
803C82 900B19            MOV     DPTR,#TradeCounter+028H
803C85 EE                MOV     A,R6
803C86 8FF0              MOV     B,R7
803C88 A512800600        ECALL   ?C?IILDX
 3290: 		TradeCounter.Hopper3Sum += outMoney*SystemParameter.HopperCoinPrice3;//出币金额
803C8D 900B11            MOV     DPTR,#TradeCounter+020H
803C90 A51280073E        ECALL   ?C?LLDXDATA0
803C95 C000              PUSH    AR0
803C97 900425            MOV     DPTR,#SystemParameter+05H
803C9A E0                MOVX    A,@DPTR
803C9B FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 93


803C9C A3                INC     DPTR
803C9D E0                MOVX    A,@DPTR
803C9E FD                MOV     R5,A
803C9F 9015A1            MOV     DPTR,#outMoney
803CA2 E0                MOVX    A,@DPTR
803CA3 FE                MOV     R6,A
803CA4 A3                INC     DPTR
803CA5 E0                MOVX    A,@DPTR
803CA6 FF                MOV     R7,A
803CA7 A512800559        ECALL   ?C?IMUL
803CAC E4                CLR     A
803CAD FC                MOV     R4,A
803CAE FD                MOV     R5,A
803CAF D000              POP     AR0
803CB1 A51280062E        ECALL   ?C?LADD
803CB6 900B11            MOV     DPTR,#TradeCounter+020H
803CB9 A512800792        ECALL   ?C?LSTXDATA
 3291: 		TradeCounter.ChangeSum += outMoney*SystemParameter.HopperCoinPrice3;//出币金额
803CBE 900B05            MOV     DPTR,#TradeCounter+014H
803CC1 A51280073E        ECALL   ?C?LLDXDATA0
803CC6 C000              PUSH    AR0
803CC8 900425            MOV     DPTR,#SystemParameter+05H
803CCB E0                MOVX    A,@DPTR
803CCC FC                MOV     R4,A
803CCD A3                INC     DPTR
803CCE E0                MOVX    A,@DPTR
803CCF FD                MOV     R5,A
803CD0 9015A1            MOV     DPTR,#outMoney
803CD3 E0                MOVX    A,@DPTR
803CD4 FE                MOV     R6,A
803CD5 A3                INC     DPTR
803CD6 E0                MOVX    A,@DPTR
803CD7 FF                MOV     R7,A
803CD8 A512800559        ECALL   ?C?IMUL
803CDD E4                CLR     A
803CDE FC                MOV     R4,A
803CDF FD                MOV     R5,A
803CE0 D000              POP     AR0
803CE2 A51280062E        ECALL   ?C?LADD
803CE7 900B05            MOV     DPTR,#TradeCounter+014H
803CEA A512800792        ECALL   ?C?LSTXDATA
 3292: 		Trace( "\n coin3flag = %bu", coin3flag );
 3293: 		//出币不成功
 3294: 		if( coin3flag != 1 )
803CEF 9015A6            MOV     DPTR,#coin3flag
803CF2 E0                MOVX    A,@DPTR
803CF3 6401              XRL     A,#01H
803CF5 7003              JNZ     $ + 5H
803CF7 02375A            LJMP    ?C0659?MAINFLOW
 3295: 		{
 3296: 		//	Trace( "\n outMoney1 = %d", outMoney );											
 3297: 			for( i = 0; i < 3; i ++ )
803CFA E4                CLR     A
803CFB 9015A3            MOV     DPTR,#i
803CFE F0                MOVX    @DPTR,A
803CFF         ?C0721?MAINFLOW:
803CFF 9015A3            MOV     DPTR,#i
803D02 E0                MOVX    A,@DPTR
803D03 FF                MOV     R7,A
803D04 C3                CLR     C
803D05 9403              SUBB    A,#03H
803D07 505D              JNC     ?C0722?MAINFLOW
 3298: 			{
 3299: 				if( HopperSetList[i].HopperIndex == 3)					
803D09 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 94


803D0A 25E0              ADD     A,ACC
803D0C 25E0              ADD     A,ACC
803D0E 24E6              ADD     A,#LOW HopperSetList+02H
803D10 F582              MOV     DPL,A
803D12 E4                CLR     A
803D13 340A              ADDC    A,#HIGH HopperSetList+02H
803D15 F583              MOV     DPH,A
803D17 E0                MOVX    A,@DPTR
803D18 6403              XRL     A,#03H
803D1A 7042              JNZ     ?C0723?MAINFLOW
 3300: 				{
 3301: 					if( coin3flag & 4 )					
803D1C 9015A6            MOV     DPTR,#coin3flag
803D1F E0                MOVX    A,@DPTR
803D20 FF                MOV     R7,A
803D21 30E208            JNB     ACC.2,?C0725?MAINFLOW
 3302: 						DeviceStatus.ChangeUnit3 = 1; 					
803D24 900B1F            MOV     DPTR,#DeviceStatus+04H
803D27 7401              MOV     A,#01H
803D29 F0                MOVX    @DPTR,A
803D2A 800A              SJMP    ?C0726?MAINFLOW
803D2C         ?C0725?MAINFLOW:
 3303: 					else if( coin3flag & 2 )
803D2C EF                MOV     A,R7
803D2D 30E106            JNB     ACC.1,?C0726?MAINFLOW
 3304: 						DeviceStatus.ChangeUnit3 = 2; 					
803D30 900B1F            MOV     DPTR,#DeviceStatus+04H
803D33 7402              MOV     A,#02H
803D35 F0                MOVX    @DPTR,A
803D36         ?C0726?MAINFLOW:
 3305: 					if( ( i == GetMinHopper()) && ( DeviceStatus.ChangeUnit3 != 0 ) )
803D36 A512809FE0        ECALL   GetMinHopper
803D3B 9015A3            MOV     DPTR,#i
803D3E E0                MOVX    A,@DPTR
803D3F FE                MOV     R6,A
803D40 B50708            CJNE    A,AR7,?C0728?MAINFLOW
803D43 900B1F            MOV     DPTR,#DeviceStatus+04H
803D46 E0                MOVX    A,@DPTR
803D47 6002              JZ      ?C0728?MAINFLOW
 3306: 						IsCanInCashFlag = 0;
803D49 C226              CLR     IsCanInCashFlag
803D4B         ?C0728?MAINFLOW:
 3307: 					HopperSetList[i].HopperState = 2;
803D4B EE                MOV     A,R6
803D4C 25E0              ADD     A,ACC
803D4E 25E0              ADD     A,ACC
803D50 24E7              ADD     A,#LOW HopperSetList+03H
803D52 F582              MOV     DPL,A
803D54 E4                CLR     A
803D55 340A              ADDC    A,#HIGH HopperSetList+03H
803D57 F583              MOV     DPH,A
803D59 7402              MOV     A,#02H
803D5B F0                MOVX    @DPTR,A
 3308: 					break;
803D5C 8008              SJMP    ?C0722?MAINFLOW
 3309: 				}			
 3310: 			}			
803D5E         ?C0723?MAINFLOW:
803D5E 9015A3            MOV     DPTR,#i
803D61 E0                MOVX    A,@DPTR
803D62 04                INC     A
803D63 F0                MOVX    @DPTR,A
803D64 8099              SJMP    ?C0721?MAINFLOW
803D66         ?C0722?MAINFLOW:
 3311: 			coin3flag = 1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 95


803D66 9015A6            MOV     DPTR,#coin3flag
803D69 7401              MOV     A,#01H
803D6B F0                MOVX    @DPTR,A
 3312: 			if( outMoney < tHopper3 )
803D6C 90159F            MOV     DPTR,#tHopper3
803D6F E0                MOVX    A,@DPTR
803D70 FF                MOV     R7,A
803D71 C3                CLR     C
803D72 9015A2            MOV     DPTR,#outMoney+01H
803D75 E0                MOVX    A,@DPTR
803D76 9F                SUBB    A,R7
803D77 9015A1            MOV     DPTR,#outMoney
803D7A E0                MOVX    A,@DPTR
803D7B 9400              SUBB    A,#00H
 3313: 				continue;
803D7D 02375A            LJMP    ?C0659?MAINFLOW
 3314: 		}	
 3315: 	}
803D80         ?C0660?MAINFLOW:
 3316: //	Trace( "\n SystemParameter.NotOutMax = %d", SystemParameter.NotOutMax );	
 3317: //	CurrentDispenseCoin = 0;
 3318: //	SaveGlobalParam();
 3319: 
 3320: //////////////////////////////////////////
 3321: //	HopperSetList[0].HopperState = 1;//为调试加
 3322: /////////////////////////////////////////////
 3323: 
 3324: 	if( m_Errorflag == 0 )
803D80 9015A7            MOV     DPTR,#m_Errorflag
803D83 E0                MOVX    A,@DPTR
803D84 7012              JNZ     ?C0730?MAINFLOW
 3325: 	{		
 3326: 		DisplayLine = STR_TAKE_COIN;
803D86 900B27            MOV     DPTR,#DisplayLine
803D89 741B              MOV     A,#01BH
803D8B A512808829        ECALL   ?L?COM0003
 3327: 		DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[ DisplayLine ].str, DispInformationTable[ DisplayLine ].len
>>  );
 3328: 		WaitForWork( 2000 , NULL );		
803D90 E4                CLR     A
803D91 7FD0              MOV     R7,#0D0H
803D93 7E07              MOV     R6,#07H
 3329: 	}
803D95 023F53            LJMP    ?C1111?MAINFLOW
803D98         ?C0730?MAINFLOW:
 3330: 	else
 3331: 	{
 3332: 		SaveGlobalParam();
803D98 A51280DC7C        ECALL   SaveGlobalParam
 3333: 		DisplayLine = STR_COIN_NOT_ENOUGH; // 硬币不够 
803D9D 900B27            MOV     DPTR,#DisplayLine
803DA0 7401              MOV     A,#01H
803DA2 A512808829        ECALL   ?L?COM0003
 3334: 		DisplayStr( 0, __LINE0__ , 1, DispInformationTable[	DisplayLine ].str, DispInformationTable[ DisplayLine ].len 
>> );			
 3335: 		DisplayLine = STR_DUO_MONEY;
803DA7 900B27            MOV     DPTR,#DisplayLine
803DAA 7420              MOV     A,#020H
803DAC F0                MOVX    @DPTR,A
 3336: 		memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );
803DAD 7E00              MOV     R6,#00H
803DAF 7F14              MOV     R7,#014H
803DB1 7D00              MOV     R5,#00H
803DB3 7B00              MOV     R3,#?C?XDATASEG
803DB5 7A04              MOV     R2,#HIGH DisplayBuffer
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 96


803DB7 7970              MOV     R1,#LOW DisplayBuffer
803DB9 A5128008A6        ECALL   ?C?MEMSET
 3337: 		memcpy( DisplayBuffer, DispInformationTable[DisplayLine ].str, DispInformationTable[ DisplayLine ].len );
803DBE 900B27            MOV     DPTR,#DisplayLine
803DC1 E0                MOVX    A,@DPTR
803DC2 FF                MOV     R7,A
803DC3 25E0              ADD     A,ACC
803DC5 25E0              ADD     A,ACC
803DC7 2474              ADD     A,#LOW DispInformationTable+03H
803DC9 F582              MOV     DPL,A
803DCB E4                CLR     A
803DCC 3404              ADDC    A,#HIGH DispInformationTable+03H
803DCE F583              MOV     DPH,A
803DD0 E4                CLR     A
803DD1 93                MOVC    A,@A+DPTR
803DD2 FD                MOV     R5,A
803DD3 7C00              MOV     R4,#00H
803DD5 C004              PUSH    AR4
803DD7 C005              PUSH    AR5
803DD9 EF                MOV     A,R7
803DDA 25E0              ADD     A,ACC
803DDC 25E0              ADD     A,ACC
803DDE 2471              ADD     A,#LOW DispInformationTable
803DE0 F582              MOV     DPL,A
803DE2 E4                CLR     A
803DE3 3404              ADDC    A,#HIGH DispInformationTable
803DE5 F583              MOV     DPH,A
803DE7 A5128007C0        ECALL   ?C?PLDCODE
803DEC 7870              MOV     R0,#LOW DisplayBuffer
803DEE 7C04              MOV     R4,#HIGH DisplayBuffer
803DF0 7D00              MOV     R5,#?C?XDATASEG
803DF2 D007              POP     AR7
803DF4 D006              POP     AR6
803DF6 A51280052D        ECALL   ?C?COPY
 3338: 		i = DispInformationTable[ DisplayLine ].len;		
803DFB 900B27            MOV     DPTR,#DisplayLine
803DFE E0                MOVX    A,@DPTR
803DFF 25E0              ADD     A,ACC
803E01 25E0              ADD     A,ACC
803E03 2474              ADD     A,#LOW DispInformationTable+03H
803E05 F582              MOV     DPL,A
803E07 E4                CLR     A
803E08 3404              ADDC    A,#HIGH DispInformationTable+03H
803E0A F583              MOV     DPH,A
803E0C E4                CLR     A
803E0D 93                MOVC    A,@A+DPTR
803E0E 9015A3            MOV     DPTR,#i
803E11 F0                MOVX    @DPTR,A
 3339: 		switch( SystemParameter.curUnit )
803E12 900468            MOV     DPTR,#SystemParameter+048H
803E15 E0                MOVX    A,@DPTR
803E16 FE                MOV     R6,A
803E17 A3                INC     DPTR
803E18 E0                MOVX    A,@DPTR
803E19 FF                MOV     R7,A
803E1A EE                MOV     A,R6
803E1B 6003              JZ      $ + 5H
803E1D 023F2D            LJMP    ?C0732?MAINFLOW
803E20 EF                MOV     A,R7
803E21 24F6              ADD     A,#0F6H
803E23 6040              JZ      ?C0734?MAINFLOW
803E25 24A6              ADD     A,#0A6H
803E27 7003              JNZ     $ + 5H
803E29 023EC1            LJMP    ?C0735?MAINFLOW
803E2C 2463              ADD     A,#063H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 97


803E2E 6003              JZ      $ + 5H
803E30 023F2D            LJMP    ?C0732?MAINFLOW
 3340: 		{
 3341: 			case 1:
803E33         ?C0733?MAINFLOW:
 3342: 				i += sprintf( DisplayBuffer + i, "%u", SystemParameter.NotOutMax );
803E33 9015A3            MOV     DPTR,#i
803E36 E0                MOVX    A,@DPTR
803E37 2470              ADD     A,#LOW DisplayBuffer
803E39 F9                MOV     R1,A
803E3A E4                CLR     A
803E3B 3404              ADDC    A,#HIGH DisplayBuffer
803E3D FA                MOV     R2,A
803E3E 7B00              MOV     R3,#?C?XDATASEG
803E40 C003              PUSH    AR3
803E42 C002              PUSH    AR2
803E44 C001              PUSH    AR1
803E46 7B80              MOV     R3,#BYTE2 080030EH
803E48 7A03              MOV     R2,#HIGH 080030EH
803E4A 790E              MOV     R1,#LOW 080030EH
803E4C 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
803E4F A5128007B6        ECALL   ?C?PSTXDATA
803E54 90042F            MOV     DPTR,#SystemParameter+0FH
803E57 E0                MOVX    A,@DPTR
803E58 FF                MOV     R7,A
803E59 A3                INC     DPTR
803E5A E0                MOVX    A,@DPTR
803E5B 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
803E5E CF                XCH     A,R7
803E5F F0                MOVX    @DPTR,A
803E60 A3                INC     DPTR
803E61 EF                MOV     A,R7
 3343: 			break;				
803E62 023F1B            LJMP    ?C1113?MAINFLOW
 3344: 			case 10:
803E65         ?C0734?MAINFLOW:
 3345: 				i += sprintf( DisplayBuffer + i, "%u.%u", SystemParameter.NotOutMax/SystemParameter.curUnit, SystemParameter.
>> NotOutMax%SystemParameter.curUnit );
803E65 9015A3            MOV     DPTR,#i
803E68 E0                MOVX    A,@DPTR
803E69 2470              ADD     A,#LOW DisplayBuffer
803E6B F9                MOV     R1,A
803E6C E4                CLR     A
803E6D 3404              ADDC    A,#HIGH DisplayBuffer
803E6F FA                MOV     R2,A
803E70 7B00              MOV     R3,#?C?XDATASEG
803E72 C003              PUSH    AR3
803E74 C002              PUSH    AR2
803E76 C001              PUSH    AR1
803E78 7B80              MOV     R3,#BYTE2 0800311H
803E7A 7A03              MOV     R2,#HIGH 0800311H
803E7C 7911              MOV     R1,#LOW 0800311H
803E7E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
803E81 A5128007B6        ECALL   ?C?PSTXDATA
803E86 900468            MOV     DPTR,#SystemParameter+048H
803E89 E0                MOVX    A,@DPTR
803E8A FA                MOV     R2,A
803E8B A3                INC     DPTR
803E8C E0                MOVX    A,@DPTR
803E8D FB                MOV     R3,A
803E8E 90042F            MOV     DPTR,#SystemParameter+0FH
803E91 E0                MOVX    A,@DPTR
803E92 FE                MOV     R6,A
803E93 A3                INC     DPTR
803E94 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 98


803E95 FF                MOV     R7,A
803E96 AD03              MOV     R5,AR3
803E98 AC02              MOV     R4,AR2
803E9A A51280056C        ECALL   ?C?UIDIV
803E9F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
803EA2 EE                MOV     A,R6
803EA3 F0                MOVX    @DPTR,A
803EA4 A3                INC     DPTR
803EA5 EF                MOV     A,R7
803EA6 F0                MOVX    @DPTR,A
803EA7 90042F            MOV     DPTR,#SystemParameter+0FH
803EAA E0                MOVX    A,@DPTR
803EAB FE                MOV     R6,A
803EAC A3                INC     DPTR
803EAD E0                MOVX    A,@DPTR
803EAE FF                MOV     R7,A
803EAF AD03              MOV     R5,AR3
803EB1 AC02              MOV     R4,AR2
803EB3 A51280056C        ECALL   ?C?UIDIV
803EB8 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
803EBB EC                MOV     A,R4
803EBC F0                MOVX    @DPTR,A
803EBD A3                INC     DPTR
803EBE ED                MOV     A,R5
803EBF         
 3346: 			break;
803EBF 805A              SJMP    ?C1113?MAINFLOW
 3347: 			case 100:
803EC1         ?C0735?MAINFLOW:
 3348: 			i += sprintf( DisplayBuffer + i, "%u.%02u", SystemParameter.NotOutMax/SystemParameter.curUnit, SystemParameter
>> .NotOutMax%SystemParameter.curUnit );			
803EC1 9015A3            MOV     DPTR,#i
803EC4 E0                MOVX    A,@DPTR
803EC5 2470              ADD     A,#LOW DisplayBuffer
803EC7 F9                MOV     R1,A
803EC8 E4                CLR     A
803EC9 3404              ADDC    A,#HIGH DisplayBuffer
803ECB FA                MOV     R2,A
803ECC 7B00              MOV     R3,#?C?XDATASEG
803ECE C003              PUSH    AR3
803ED0 C002              PUSH    AR2
803ED2 C001              PUSH    AR1
803ED4 7B80              MOV     R3,#BYTE2 0800317H
803ED6 7A03              MOV     R2,#HIGH 0800317H
803ED8 7917              MOV     R1,#LOW 0800317H
803EDA 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
803EDD A5128007B6        ECALL   ?C?PSTXDATA
803EE2 900468            MOV     DPTR,#SystemParameter+048H
803EE5 E0                MOVX    A,@DPTR
803EE6 FA                MOV     R2,A
803EE7 A3                INC     DPTR
803EE8 E0                MOVX    A,@DPTR
803EE9 FB                MOV     R3,A
803EEA 90042F            MOV     DPTR,#SystemParameter+0FH
803EED E0                MOVX    A,@DPTR
803EEE FE                MOV     R6,A
803EEF A3                INC     DPTR
803EF0 E0                MOVX    A,@DPTR
803EF1 FF                MOV     R7,A
803EF2 AD03              MOV     R5,AR3
803EF4 AC02              MOV     R4,AR2
803EF6 A51280056C        ECALL   ?C?UIDIV
803EFB 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
803EFE EE                MOV     A,R6
803EFF F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 99


803F00 A3                INC     DPTR
803F01 EF                MOV     A,R7
803F02 F0                MOVX    @DPTR,A
803F03 90042F            MOV     DPTR,#SystemParameter+0FH
803F06 E0                MOVX    A,@DPTR
803F07 FE                MOV     R6,A
803F08 A3                INC     DPTR
803F09 E0                MOVX    A,@DPTR
803F0A FF                MOV     R7,A
803F0B AD03              MOV     R5,AR3
803F0D AC02              MOV     R4,AR2
803F0F A51280056C        ECALL   ?C?UIDIV
803F14 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
803F17 EC                MOV     A,R4
803F18 F0                MOVX    @DPTR,A
803F19 A3                INC     DPTR
803F1A ED                MOV     A,R5
803F1B         
803F1B F0                MOVX    @DPTR,A
803F1C D001              POP     AR1
803F1E D002              POP     AR2
803F20 D003              POP     AR3
803F22 A512800949        ECALL   _sprintf
803F27 9015A3            MOV     DPTR,#i
803F2A E0                MOVX    A,@DPTR
803F2B 2F                ADD     A,R7
803F2C F0                MOVX    @DPTR,A
 3349: 			break;		
 3350: 		}		
803F2D         ?C0732?MAINFLOW:
 3351: 		/*if( SystemParameter.NotOutMax >= 100 )					
 3352: 			i += LenOfNum( SystemParameter.NotOutMax ) + 1;
 3353: 		else 
 3354: 			i += LenOfNum( SystemParameter.NotOutMax ) + 2;*/
 3355: 		DisplayStr( 0, __LINE1__ , 1, DisplayBuffer, i );			
803F2D D21A              SETB    ?_DisplayStr?BIT
803F2F 7B00              MOV     R3,#?C?XDATASEG
803F31 7A04              MOV     R2,#HIGH DisplayBuffer
803F33 7970              MOV     R1,#LOW DisplayBuffer
803F35 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
803F38 A5128007B6        ECALL   ?C?PSTXDATA
803F3D 9015A3            MOV     DPTR,#i
803F40 E0                MOVX    A,@DPTR
803F41 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
803F44 F0                MOVX    @DPTR,A
803F45 7D01              MOV     R5,#01H
803F47 E4                CLR     A
803F48 FF                MOV     R7,A
803F49 A51280885F        ECALL   _DisplayStr
 3356: 		WaitForWork( 2500 , NULL );				
803F4E E4                CLR     A
803F4F 7FC4              MOV     R7,#0C4H
803F51 7E09              MOV     R6,#09H
803F53         
803F53 A512808330        ECALL   ?L?COM000D
 3357: 	//	HardWareErr = ERR_HOPPER;
 3358: 	}
803F58         ?C0731?MAINFLOW:
 3359: //	Trace( "\n DispenseCoin  HardWareErr = %bu", HardWareErr );
 3360: 	
 3361: 	return 0;
803F58 7F00              MOV     R7,#00H
 3362: }
803F5A         ?C0658?MAINFLOW:
803F5A A522              ERET    
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 100


----- FUNCTION DispenseCoin (END) -------


----- FUNCTION CheckChangePermit (BEGIN) -----
 FILE: 'mainflow.c'
 3452: u_char CheckChangePermit()
 3453: {
 3454: //	Trace( "\n CheckChangePermit");
 3455: //	ClearDisplayLine1();	
 3456: 	u_char xdata i;
 3457: 	if( CurrentPayed > 0 ) 
803F5C D3                SETB    C
803F5D 900B26            MOV     DPTR,#CurrentPayed+01H
803F60 E0                MOVX    A,@DPTR
803F61 9400              SUBB    A,#00H
803F63 900B25            MOV     DPTR,#CurrentPayed
803F66 E0                MOVX    A,@DPTR
803F67 9400              SUBB    A,#00H
803F69 5003              JNC     $ + 5H
803F6B 0240A5            LJMP    ?C0749?MAINFLOW
 3458: 	{
 3459: 		if ( SystemParameter.RefundPermission )
803F6E 900420            MOV     DPTR,#SystemParameter
803F71 E0                MOVX    A,@DPTR
803F72 7003              JNZ     $ + 5H
803F74 0240A1            LJMP    ?C0750?MAINFLOW
 3460: 		{
 3461: 			if( IsCanChange() != 1 )
803F77 A51280A003        ECALL   IsCanChange
803F7C EF                MOV     A,R7
803F7D 6401              XRL     A,#01H
803F7F 600C              JZ      ?C0751?MAINFLOW
 3462: 			{
 3463: 				CurrentDispenseCoin = 0;
803F81 E4                CLR     A
803F82 90046E            MOV     DPTR,#CurrentDispenseCoin
803F85 F0                MOVX    @DPTR,A
803F86 A3                INC     DPTR
803F87 F0                MOVX    @DPTR,A
 3464: 				return 2;
803F88 7F02              MOV     R7,#02H
803F8A 0240A7            LJMP    ?C0752?MAINFLOW
 3465: 			}
803F8D         ?C0751?MAINFLOW:
 3466: 			//在此设置出币总额
 3467: 			DisplayLine = STR_REFUND_MONEY;
803F8D 900B27            MOV     DPTR,#DisplayLine
803F90 741F              MOV     A,#01FH
803F92 A512808829        ECALL   ?L?COM0003
 3468: 			DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len 
>> );
 3469: 	//		DisplayLine = STR_PLEASE_WAIT;
 3470: 	//		DisplayStr( 0, __LINE1__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].le
>> n );
 3471: 			memset( DisplayBuffer , 0 , sizeof( DisplayBuffer ));
803F97 7E00              MOV     R6,#00H
803F99 7F14              MOV     R7,#014H
803F9B 7D00              MOV     R5,#00H
803F9D 7B00              MOV     R3,#?C?XDATASEG
803F9F 7A04              MOV     R2,#HIGH DisplayBuffer
803FA1 7970              MOV     R1,#LOW DisplayBuffer
803FA3 A5128008A6        ECALL   ?C?MEMSET
 3472: 			//////////////////
 3473: 			memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
803FA8 7E00              MOV     R6,#00H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 101


803FAA 7F14              MOV     R7,#014H
803FAC 7D00              MOV     R5,#00H
803FAE 7B00              MOV     R3,#?C?XDATASEG
803FB0 7A04              MOV     R2,#HIGH DisplayBuffer
803FB2 7970              MOV     R1,#LOW DisplayBuffer
803FB4 A5128008A6        ECALL   ?C?MEMSET
 3474: 			switch( SystemParameter.curUnit )
803FB9 900468            MOV     DPTR,#SystemParameter+048H
803FBC E0                MOVX    A,@DPTR
803FBD FE                MOV     R6,A
803FBE A3                INC     DPTR
803FBF E0                MOVX    A,@DPTR
803FC0 FF                MOV     R7,A
803FC1 EE                MOV     A,R6
803FC2 6003              JZ      $ + 5H
803FC4 02406D            LJMP    ?C0753?MAINFLOW
803FC7 EF                MOV     A,R7
803FC8 24F6              ADD     A,#0F6H
803FCA 6039              JZ      ?C0755?MAINFLOW
803FCC 24A6              ADD     A,#0A6H
803FCE 6035              JZ      ?C0755?MAINFLOW
803FD0 2463              ADD     A,#063H
803FD2 6003              JZ      $ + 5H
803FD4 02406D            LJMP    ?C0753?MAINFLOW
 3475: 			{
 3476: 				case 1:
803FD7         ?C0754?MAINFLOW:
 3477: 					i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
803FD7 7B80              MOV     R3,#BYTE2 0800430H
803FD9 7A04              MOV     R2,#HIGH 0800430H
803FDB 7930              MOV     R1,#LOW 0800430H
803FDD 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
803FE0 A5128007B6        ECALL   ?C?PSTXDATA
803FE5 90051D            MOV     DPTR,#DispInformationTable+0ACH
803FE8 A5128007C0        ECALL   ?C?PLDCODE
803FED 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
803FF0 A5128007B6        ECALL   ?C?PSTXDATA
803FF5 900B25            MOV     DPTR,#CurrentPayed
803FF8 E0                MOVX    A,@DPTR
803FF9 FF                MOV     R7,A
803FFA A3                INC     DPTR
803FFB E0                MOVX    A,@DPTR
803FFC 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
803FFF CF                XCH     A,R7
804000 F0                MOVX    @DPTR,A
804001 A3                INC     DPTR
804002 EF                MOV     A,R7
 3478: 				break;				
804003 8057              SJMP    ?C1115?MAINFLOW
 3479: 				case 10:
804005         ?C0755?MAINFLOW:
 3480: 					i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
804005 7B80              MOV     R3,#BYTE2 0800435H
804007 7A04              MOV     R2,#HIGH 0800435H
804009 7935              MOV     R1,#LOW 0800435H
80400B 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80400E A5128007B6        ECALL   ?C?PSTXDATA
804013 90051D            MOV     DPTR,#DispInformationTable+0ACH
804016 A5128007C0        ECALL   ?C?PLDCODE
80401B 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80401E A5128007B6        ECALL   ?C?PSTXDATA
804023 900468            MOV     DPTR,#SystemParameter+048H
804026 E0                MOVX    A,@DPTR
804027 FA                MOV     R2,A
804028 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 102


804029 E0                MOVX    A,@DPTR
80402A FB                MOV     R3,A
80402B 900B25            MOV     DPTR,#CurrentPayed
80402E E0                MOVX    A,@DPTR
80402F FE                MOV     R6,A
804030 A3                INC     DPTR
804031 E0                MOVX    A,@DPTR
804032 FF                MOV     R7,A
804033 AD03              MOV     R5,AR3
804035 AC02              MOV     R4,AR2
804037 A51280056C        ECALL   ?C?UIDIV
80403C 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80403F EE                MOV     A,R6
804040 F0                MOVX    @DPTR,A
804041 A3                INC     DPTR
804042 EF                MOV     A,R7
804043 F0                MOVX    @DPTR,A
804044 900B25            MOV     DPTR,#CurrentPayed
804047 E0                MOVX    A,@DPTR
804048 FE                MOV     R6,A
804049 A3                INC     DPTR
80404A E0                MOVX    A,@DPTR
80404B FF                MOV     R7,A
80404C AD03              MOV     R5,AR3
80404E AC02              MOV     R4,AR2
804050 A51280056C        ECALL   ?C?UIDIV
804055 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
804058 EC                MOV     A,R4
804059 F0                MOVX    @DPTR,A
80405A A3                INC     DPTR
80405B ED                MOV     A,R5
80405C         
 3481: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 3482: 				break;
 3483: 				case 100:
80405C         
80405C F0                MOVX    @DPTR,A
80405D 7B00              MOV     R3,#?C?XDATASEG
80405F 7A04              MOV     R2,#HIGH DisplayBuffer
804061 7970              MOV     R1,#LOW DisplayBuffer
804063 A512800949        ECALL   _sprintf
804068 90159B            MOV     DPTR,#i
80406B EF                MOV     A,R7
80406C F0                MOVX    @DPTR,A
 3484: 					i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
 3485: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 3486: 				break;		
 3487: 			}
80406D         ?C0753?MAINFLOW:
 3488: 			DisplayStr( 0, __LINE1__ , 1 , DisplayBuffer, i );
80406D D21A              SETB    ?_DisplayStr?BIT
80406F 7B00              MOV     R3,#?C?XDATASEG
804071 7A04              MOV     R2,#HIGH DisplayBuffer
804073 7970              MOV     R1,#LOW DisplayBuffer
804075 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804078 A5128007B6        ECALL   ?C?PSTXDATA
80407D 90159B            MOV     DPTR,#i
804080 E0                MOVX    A,@DPTR
804081 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804084 F0                MOVX    @DPTR,A
804085 7D01              MOV     R5,#01H
804087 E4                CLR     A
804088 FF                MOV     R7,A
804089 A51280885F        ECALL   _DisplayStr
 3489: 			CurrentDispenseCoin = CurrentPayed;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 103


80408E 900B25            MOV     DPTR,#CurrentPayed
804091 E0                MOVX    A,@DPTR
804092 FF                MOV     R7,A
804093 A3                INC     DPTR
804094 E0                MOVX    A,@DPTR
804095 90046E            MOV     DPTR,#CurrentDispenseCoin
804098 CF                XCH     A,R7
804099 F0                MOVX    @DPTR,A
80409A A3                INC     DPTR
80409B EF                MOV     A,R7
80409C F0                MOVX    @DPTR,A
 3490: 			return 0; //退币
80409D 7F00              MOV     R7,#00H
80409F 8006              SJMP    ?C0752?MAINFLOW
 3491: 		}
8040A1         ?C0750?MAINFLOW:
 3492: 		else
 3493: 			return 1;
8040A1 7F01              MOV     R7,#01H
8040A3 8002              SJMP    ?C0752?MAINFLOW
 3494: 	}
8040A5         ?C0749?MAINFLOW:
 3495: 	else 
 3496: 		return 2;
8040A5 7F02              MOV     R7,#02H
 3497: }
8040A7         ?C0752?MAINFLOW:
8040A7 A522              ERET    
----- FUNCTION CheckChangePermit (END) -------


----- FUNCTION DispThx (BEGIN) -----
 FILE: 'mainflow.c'
 3522: u_char DispThx()
 3523: {
 3524: 	DisplayLine = STR_THX_YOU_WITHOUT_COIN;
 3525: 	DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len );
>> 
8040A9 900B27            MOV     DPTR,#DisplayLine
8040AC 740F              MOV     A,#0FH
8040AE A512808829        ECALL   ?L?COM0003
 3526: 	ClearDisplayLine( 2 );
8040B3 7F02              MOV     R7,#02H
8040B5 A512808FB8        ECALL   _ClearDisplayLine
 3527: 	WaitForWork( 1500 , NULL );	
8040BA E4                CLR     A
8040BB 7FDC              MOV     R7,#0DCH
8040BD 7E05              MOV     R6,#05H
8040BF A512808330        ECALL   ?L?COM000D
 3528: 	return( 0 );
8040C4 7F00              MOV     R7,#00H
 3529: }
8040C6         ?C0763?MAINFLOW:
8040C6 A522              ERET    
----- FUNCTION DispThx (END) -------


----- FUNCTION AllGoodsWayError (BEGIN) -----
 FILE: 'mainflow.c'
 3546: u_char AllGoodsWayError()
 3547: {
 3548: 	u_char xdata i = 0;
 3549: 
8040C8 E4                CLR     A
8040C9 90159B            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 104


8040CC F0                MOVX    @DPTR,A
 3550: 	SaveTradeParam();
8040CD A51280DB42        ECALL   SaveTradeParam
 3551: 	
 3552: 	/*
 3553: 	Disabled by Andy on 2010.10.26
 3554: 	for( i = 0; i < GOODSWAYNUM; i ++ )	
 3555: 		GoodsWaySetVal[i].WayState = 0x08;
 3556: 	*/
 3557: 
 3558: 	HardWareErr |= 0x0040;
8040D2 900485            MOV     DPTR,#HardWareErr+01H
8040D5 E0                MOVX    A,@DPTR
8040D6 4440              ORL     A,#040H
8040D8 F0                MOVX    @DPTR,A
 3559:   //HardWareErr = ERR_GOODSBOARDERR;	
 3560: 	DisplayLine = STR_HARDWARE_ERR;
8040D9 900B27            MOV     DPTR,#DisplayLine
8040DC 740D              MOV     A,#0DH
8040DE A512808829        ECALL   ?L?COM0003
 3561: 	DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );	
 3562: 	return 1;
8040E3 7F01              MOV     R7,#01H
 3563: }
8040E5         ?C0765?MAINFLOW:
8040E5 A522              ERET    
----- FUNCTION AllGoodsWayError (END) -------


----- FUNCTION MaintFunction (BEGIN) -----
 FILE: 'mainflow.c'
 3565: u_char MaintFunction()
 3566: {	
 3567: 	u_char xdata i = 0;
 3568: 
8040E7 E4                CLR     A
8040E8 90159B            MOV     DPTR,#i
8040EB F0                MOVX    @DPTR,A
 3569: //	SaveGlobalParam();
 3570: 	AlarmSpacing = 0;
8040EC 902DF3            MOV     DPTR,#AlarmSpacing
8040EF F0                MOVX    @DPTR,A
 3571: 	AlarmTime = 0;
8040F0 900002            MOV     DPTR,#AlarmTime
8040F3 F0                MOVX    @DPTR,A
 3572: 	DisableBillDev();
8040F4 A5128095A4        ECALL   DisableBillDev
 3573: 	SystemStatus = 2;
8040F9 9001C6            MOV     DPTR,#SystemStatus
8040FC 7402              MOV     A,#02H
8040FE F0                MOVX    @DPTR,A
 3574: 	if( KeyLockFlag )
8040FF 302907            JNB     KeyLockFlag,?C0766?MAINFLOW
 3575: 	{
 3576: 		KeyUnLock(); //锁定键盘，不让客户按键
804102 A512807F45        ECALL   KeyUnLock
 3577: 		KeyLockFlag = 0;
804107 C229              CLR     KeyLockFlag
 3578: 	}
804109         ?C0766?MAINFLOW:
 3579: 	MaintFlag = 1;
804109 9028AD            MOV     DPTR,#MaintFlag
80410C 7401              MOV     A,#01H
80410E F0                MOVX    @DPTR,A
80410F         ?C0767?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 105


 3580: 	while( IsModeOff() ) //是否模式开关处于维护状态	
80410F A51280BAB3        ECALL   IsModeOff
804114 5007              JNC     ?C0768?MAINFLOW
 3581: 		mainmenu();		
804116 A512804598        ECALL   mainmenu
80411B 80F2              SJMP    ?C0767?MAINFLOW
80411D         ?C0768?MAINFLOW:
 3582: 	MaintFlag = 0;
80411D E4                CLR     A
80411E 9028AD            MOV     DPTR,#MaintFlag
804121 F0                MOVX    @DPTR,A
 3583: 	DisplayStr( 0, 0, 1, DispInformationTable[ STR_PLEASE_WAIT ].str, DispInformationTable[ STR_PLEASE_WAIT ].len );
>> 	
804122 D21A              SETB    ?_DisplayStr?BIT
804124 9004B9            MOV     DPTR,#DispInformationTable+048H
804127 A5128007C0        ECALL   ?C?PLDCODE
80412C 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80412F A5128007B6        ECALL   ?C?PSTXDATA
804134 9004BC            MOV     DPTR,#DispInformationTable+04BH
804137 A512808856        ECALL   ?L?COM0005
 3584: 	DisplayStr( 0, 1, 1, " ", 1 );
80413C D21A              SETB    ?_DisplayStr?BIT
80413E 7B80              MOV     R3,#BYTE2 080045AH
804140 7A04              MOV     R2,#HIGH 080045AH
804142 795A              MOV     R1,#LOW 080045AH
804144 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804147 A5128007B6        ECALL   ?C?PSTXDATA
80414C 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80414F 7401              MOV     A,#01H
804151 F0                MOVX    @DPTR,A
804152 FD                MOV     R5,A
804153 E4                CLR     A
804154 FF                MOV     R7,A
804155 A51280885F        ECALL   _DisplayStr
 3585: 	ClearKey();
80415A A512808FA5        ECALL   ClearKey
 3586: 	SystemStatus = 1;
80415F 9001C6            MOV     DPTR,#SystemStatus
804162 7401              MOV     A,#01H
804164 F0                MOVX    @DPTR,A
 3587: 	HardWareErr = 0; //默认硬件无故障，然后自检去真正检查	
804165 E4                CLR     A
804166 900484            MOV     DPTR,#HardWareErr
804169 F0                MOVX    @DPTR,A
80416A A3                INC     DPTR
80416B F0                MOVX    @DPTR,A
 3588: 	IsCanInCashFlag = 1;
80416C D226              SETB    IsCanInCashFlag
 3589: 	if( KeyLockFlag == 0 )
80416E 202907            JB      KeyLockFlag,?C0769?MAINFLOW
 3590: 	{
 3591: 		KeyLock(); //锁定键盘，不让客户按键
804171 A512807FAD        ECALL   KeyLock
 3592: 		KeyLockFlag = 1;
804176 D229              SETB    KeyLockFlag
 3593: 	}	
804178         ?C0769?MAINFLOW:
 3594: 	isShowLcd = 1;
804178 D228              SETB    isShowLcd
 3595: 	//扫描单价是否有为0的
 3596: 	for( i = 0; i < GOODSWAYNUM; i ++ )	
80417A E4                CLR     A
80417B 90159B            MOV     DPTR,#i
80417E F0                MOVX    @DPTR,A
80417F         ?C0770?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 106


80417F 90159B            MOV     DPTR,#i
804182 E0                MOVX    A,@DPTR
804183 FF                MOV     R7,A
804184 C3                CLR     C
804185 9440              SUBB    A,#040H
804187 505D              JNC     ?C0771?MAINFLOW
 3597: 	{
 3598: 		if( ( GoodsWaySetVal[i].WayNo == InputGoodsWayList[i].GoodsWayNo ) && 
804189 E0                MOVX    A,@DPTR
80418A FE                MOV     R6,A
80418B 25E0              ADD     A,ACC
80418D 25E0              ADD     A,ACC
80418F 24DC              ADD     A,#LOW InputGoodsWayList
804191 F582              MOV     DPL,A
804193 E4                CLR     A
804194 342B              ADDC    A,#HIGH InputGoodsWayList
804196 F583              MOV     DPH,A
804198 E0                MOVX    A,@DPTR
804199 FD                MOV     R5,A
80419A 75F005            MOV     B,#05H
80419D EE                MOV     A,R6
80419E 900004            MOV     DPTR,#GoodsWaySetVal
8041A1 A51280079F        ECALL   ?C?OFFXADD
8041A6 E0                MOVX    A,@DPTR
8041A7 6D                XRL     A,R5
8041A8 7034              JNZ     ?C0772?MAINFLOW
8041AA EF                MOV     A,R7
8041AB 25E0              ADD     A,ACC
8041AD 25E0              ADD     A,ACC
8041AF 24DE              ADD     A,#LOW InputGoodsWayList+02H
8041B1 F582              MOV     DPL,A
8041B3 E4                CLR     A
8041B4 342B              ADDC    A,#HIGH InputGoodsWayList+02H
8041B6 F583              MOV     DPH,A
8041B8 E0                MOVX    A,@DPTR
8041B9 B40122            CJNE    A,#01H,?C0772?MAINFLOW
8041BC 90159B            MOV     DPTR,#i
8041BF E0                MOVX    A,@DPTR
8041C0 75F005            MOV     B,#05H
8041C3 900006            MOV     DPTR,#GoodsWaySetVal+02H
8041C6 A51280079F        ECALL   ?C?OFFXADD
8041CB E0                MOVX    A,@DPTR
8041CC FE                MOV     R6,A
8041CD A3                INC     DPTR
8041CE E0                MOVX    A,@DPTR
8041CF 4E                ORL     A,R6
8041D0 700C              JNZ     ?C0772?MAINFLOW
 3599: 			( InputGoodsWayList[ i ].UseState == 1 ) &&
 3600: 			( GoodsWaySetVal[i].Price == 0 ) )
 3601: 		{
 3602: 			HardWareErr |= 0x0400;
8041D2 900484            MOV     DPTR,#HardWareErr
8041D5 E0                MOVX    A,@DPTR
8041D6 4404              ORL     A,#04H
8041D8 F0                MOVX    @DPTR,A
8041D9 A3                INC     DPTR
8041DA E0                MOVX    A,@DPTR
8041DB F0                MOVX    @DPTR,A
 3603: 			break;
8041DC 8008              SJMP    ?C0771?MAINFLOW
 3604: 		}
 3605: 	}	
8041DE         ?C0772?MAINFLOW:
8041DE 90159B            MOV     DPTR,#i
8041E1 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 107


8041E2 04                INC     A
8041E3 F0                MOVX    @DPTR,A
8041E4 8099              SJMP    ?C0770?MAINFLOW
8041E6         ?C0771?MAINFLOW:
 3606: 	if( i != GOODSWAYNUM )
8041E6 90159B            MOV     DPTR,#i
8041E9 E0                MOVX    A,@DPTR
8041EA 6440              XRL     A,#040H
8041EC 6002              JZ      ?C0774?MAINFLOW
 3607: 	{
 3608: 		UpdataDisp = 0;
 3609: 		///清除报警标志位	
 3610: 		MoneyDevAlarm = 0;
 3611: 		SystemErrorAlarm = 0;
 3612: 		SMSQuery = 0;
 3613: 		//清除短信发送缓存区内的所有短信
 3614: 		ClearAllSMSInSMSBuffer();
 3615: 		return 0;
8041EE 8055              SJMP    ?C1116?MAINFLOW
 3616: 	}
8041F0         ?C0774?MAINFLOW:
 3617: 	CheckHardWare( 0 );
8041F0 A512809A24        ECALL   ?L?COM0037
 3618: 	GetHopperList();		
 3619: 	for( i = 0; i < GOODSWAYNUM; i ++ )		
8041F5 E4                CLR     A
8041F6 90159B            MOV     DPTR,#i
8041F9 F0                MOVX    @DPTR,A
8041FA         ?C0776?MAINFLOW:
8041FA 90159B            MOV     DPTR,#i
8041FD E0                MOVX    A,@DPTR
8041FE FF                MOV     R7,A
8041FF C3                CLR     C
804200 9440              SUBB    A,#040H
804202 5018              JNC     ?C0777?MAINFLOW
 3620: 		GoodsWaySetVal[i].WayState &= 0x1f;	
804204 75F005            MOV     B,#05H
804207 EF                MOV     A,R7
804208 900005            MOV     DPTR,#GoodsWaySetVal+01H
80420B A51280079F        ECALL   ?C?OFFXADD
804210 E0                MOVX    A,@DPTR
804211 541F              ANL     A,#01FH
804213 F0                MOVX    @DPTR,A
804214 90159B            MOV     DPTR,#i
804217 E0                MOVX    A,@DPTR
804218 04                INC     A
804219 F0                MOVX    @DPTR,A
80421A 80DE              SJMP    ?C0776?MAINFLOW
80421C         ?C0777?MAINFLOW:
 3621: 
 3622: 	if( ( ( DeviceStatus.BillAccepter != 0 ) || ( IsCanInCashFlag == 0 ) ) && ( DeviceStatus.CoinAccepter != 0 ) )
80421C 900B1B            MOV     DPTR,#DeviceStatus
80421F E0                MOVX    A,@DPTR
804220 7003              JNZ     ?C0780?MAINFLOW
804222 20260D            JB      IsCanInCashFlag,?C0779?MAINFLOW
804225         ?C0780?MAINFLOW:
804225 900B1C            MOV     DPTR,#DeviceStatus+01H
804228 E0                MOVX    A,@DPTR
804229 6007              JZ      ?C0779?MAINFLOW
 3623: 		HardWareErr |= 0x0002;
80422B 900485            MOV     DPTR,#HardWareErr+01H
80422E E0                MOVX    A,@DPTR
80422F 4402              ORL     A,#02H
804231 F0                MOVX    @DPTR,A
804232         ?C0779?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 108


 3624:     
 3625:     //清货道控制板的SN
 3626: 	if( ChannelTask( 0, CHANNEL_CLEAR ) == 2 )
804232 7D53              MOV     R5,#053H
804234 E4                CLR     A
804235 FF                MOV     R7,A
804236 A512809E86        ECALL   _ChannelTask
80423B BF0207            CJNE    R7,#02H,?C0782?MAINFLOW
 3627: 	{
 3628: 		//执行命令超时,应是主板与货道驱动板通讯故障
 3629: 		Trace("\n Channel are break");
 3630:         
 3631:         /*
 3632:         //Disabled by Andy on 2010.10.26
 3633: 		for( i = 0; i < GOODSWAYNUM; i ++ )	
 3634: 			GoodsWaySetVal[i].WayState = 0x09;
 3635:         */
 3636: 
 3637: 		HardWareErr |= 0x0040;	
80423E 900485            MOV     DPTR,#HardWareErr+01H
804241 E0                MOVX    A,@DPTR
804242 4440              ORL     A,#040H
804244 F0                MOVX    @DPTR,A
 3638: 	}
 3639:     else
 3640:     {
 3641:         //ChannelTask( 0, CHANNEL_QUERY );
 3642:     }
804245         ?C0782?MAINFLOW:
 3643: 
 3644: 	UpdataDisp = 0;
804245         
804245 E4                CLR     A
804246 900B29            MOV     DPTR,#UpdataDisp
804249 F0                MOVX    @DPTR,A
 3645: 	///清除报警标志位	
 3646: 	MoneyDevAlarm = 0;
80424A 90041F            MOV     DPTR,#MoneyDevAlarm
80424D F0                MOVX    @DPTR,A
 3647: 	SystemErrorAlarm = 0;
80424E 900144            MOV     DPTR,#SystemErrorAlarm
804251 F0                MOVX    @DPTR,A
 3648: 	SMSQuery = 0;
804252 A3                INC     DPTR
804253 F0                MOVX    @DPTR,A
 3649: 	//清除短信发送缓存区内的所有短信
 3650: 	ClearAllSMSInSMSBuffer();
804254 A5128141FA        ECALL   ClearAllSMSInSMSBuffer
 3651: 	return 0;
804259 7F00              MOV     R7,#00H
 3652: }
80425B         ?C0775?MAINFLOW:
80425B A522              ERET    
----- FUNCTION MaintFunction (END) -------


----- FUNCTION OutofService (BEGIN) -----
 FILE: 'mainflow.c'
 3663: u_char OutofService()
 3664: {	
 3665:     #define CHKTIMES  1000
 3666: 	u_char xdata len = 0;	
80425D E4                CLR     A
80425E 90159B            MOV     DPTR,#len
804261 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 109


 3667: 	u_char xdata errcode = 0;
804262 A3                INC     DPTR
804263 F0                MOVX    @DPTR,A
 3668: 	static u_int  xdata chkTime = 0;
 3669: 	
 3670:     //Trace( "\n HardWareErr3 = %bu", HardWareErr );
 3671:     //CasherGetMachineState( 1 );//按交易状态处理
 3672: 	
 3673: 	chkTime++;
804264 900000            MOV     DPTR,#chkTime
804267 75F001            MOV     B,#01H
80426A A512800600        ECALL   ?C?IILDX
 3674: 	if( chkTime >= CHKTIMES )
80426F C3                CLR     C
804270 900001            MOV     DPTR,#chkTime+01H
804273 E0                MOVX    A,@DPTR
804274 94E8              SUBB    A,#0E8H
804276 900000            MOV     DPTR,#chkTime
804279 E0                MOVX    A,@DPTR
80427A 9403              SUBB    A,#03H
80427C 4017              JC      ?C0785?MAINFLOW
 3675: 	{
 3676: 		chkTime = 0;
80427E E4                CLR     A
80427F F0                MOVX    @DPTR,A
804280 A3                INC     DPTR
804281 F0                MOVX    @DPTR,A
 3677: 	    //-------------------------------------------
 3678: 		//Added by Andy on 2010.10.21 for GOC dev.
 3679: 	    if( ChannelTask( 1, CHANNEL_QUERY ) == 2 )
804282 7D51              MOV     R5,#051H
804284 7F01              MOV     R7,#01H
804286 A512809E86        ECALL   _ChannelTask
80428B BF0207            CJNE    R7,#02H,?C0785?MAINFLOW
 3680: 		{
 3681: 			//执行命令超时,应是主板与货道驱动板通讯故障
 3682: 			HardWareErr |= 0x0040;	
80428E 900485            MOV     DPTR,#HardWareErr+01H
804291 E0                MOVX    A,@DPTR
804292 4440              ORL     A,#040H
804294 F0                MOVX    @DPTR,A
 3683: 		}
 3684:     }
804295         ?C0785?MAINFLOW:
 3685: 
 3686: 	if ( isShowLcd == 1 )
804295 202803            JB      isShowLcd,$ + 6H
804298 02456E            LJMP    ?C0787?MAINFLOW
 3687: 	{		
 3688: 		DisableBillDev();
80429B A5128095A4        ECALL   DisableBillDev
 3689: 		DisplayLine = STR_OUT_OF_SERVICE;
8042A0 900B27            MOV     DPTR,#DisplayLine
8042A3 7410              MOV     A,#010H
8042A5 A512808829        ECALL   ?L?COM0003
 3690: 		DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len )
>> ;
 3691: 		WaitForWork( 500 , NULL );
8042AA E4                CLR     A
8042AB 7FF4              MOV     R7,#0F4H
8042AD 7E01              MOV     R6,#01H
8042AF A512808330        ECALL   ?L?COM000D
 3692: 	
 3693: 		if( HardWareErr & 0x0001 )
8042B4 900484            MOV     DPTR,#HardWareErr
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 110


8042B7 E0                MOVX    A,@DPTR
8042B8 FE                MOV     R6,A
8042B9 A3                INC     DPTR
8042BA E0                MOVX    A,@DPTR
8042BB FF                MOV     R7,A
8042BC 30E009            JNB     ACC.0,?C0788?MAINFLOW
 3694: 			errcode = 0xf1;
8042BF 90159C            MOV     DPTR,#errcode
8042C2 74F1              MOV     A,#0F1H
8042C4 F0                MOVX    @DPTR,A
8042C5 02434F            LJMP    ?C0789?MAINFLOW
8042C8         ?C0788?MAINFLOW:
 3695: 		else if( HardWareErr & 0x0002 )
8042C8 EF                MOV     A,R7
8042C9 30E108            JNB     ACC.1,?C0790?MAINFLOW
 3696: 			errcode = 0xf2;
8042CC 90159C            MOV     DPTR,#errcode
8042CF 74F2              MOV     A,#0F2H
8042D1 F0                MOVX    @DPTR,A
8042D2 807B              SJMP    ?C0789?MAINFLOW
8042D4         ?C0790?MAINFLOW:
 3697: 		else if( HardWareErr & 0x0004 )
8042D4 EF                MOV     A,R7
8042D5 30E208            JNB     ACC.2,?C0792?MAINFLOW
 3698: 			errcode = 0xf3;
8042D8 90159C            MOV     DPTR,#errcode
8042DB 74F3              MOV     A,#0F3H
8042DD F0                MOVX    @DPTR,A
8042DE 806F              SJMP    ?C0789?MAINFLOW
8042E0         ?C0792?MAINFLOW:
 3699: 		else if( HardWareErr & 0x0008 )
8042E0 EF                MOV     A,R7
8042E1 30E308            JNB     ACC.3,?C0794?MAINFLOW
 3700: 			errcode = 0xf4;
8042E4 90159C            MOV     DPTR,#errcode
8042E7 74F4              MOV     A,#0F4H
8042E9 F0                MOVX    @DPTR,A
8042EA 8063              SJMP    ?C0789?MAINFLOW
8042EC         ?C0794?MAINFLOW:
 3701: 		else if( HardWareErr & 0x0010 )
8042EC EF                MOV     A,R7
8042ED 30E408            JNB     ACC.4,?C0796?MAINFLOW
 3702: 			errcode = 0xf5;
8042F0 90159C            MOV     DPTR,#errcode
8042F3 74F5              MOV     A,#0F5H
8042F5 F0                MOVX    @DPTR,A
8042F6 8057              SJMP    ?C0789?MAINFLOW
8042F8         ?C0796?MAINFLOW:
 3703: 		else if( HardWareErr & 0x0020 )
8042F8 EF                MOV     A,R7
8042F9 30E508            JNB     ACC.5,?C0798?MAINFLOW
 3704: 			errcode = 0xf6;
8042FC 90159C            MOV     DPTR,#errcode
8042FF 74F6              MOV     A,#0F6H
804301 F0                MOVX    @DPTR,A
804302 804B              SJMP    ?C0789?MAINFLOW
804304         ?C0798?MAINFLOW:
 3705: 		else if( HardWareErr & 0x0040 )
804304 EF                MOV     A,R7
804305 30E608            JNB     ACC.6,?C0800?MAINFLOW
 3706: 			errcode = 0xf7;	
804308 90159C            MOV     DPTR,#errcode
80430B 74F7              MOV     A,#0F7H
80430D F0                MOVX    @DPTR,A
80430E 803F              SJMP    ?C0789?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 111


804310         ?C0800?MAINFLOW:
 3707: 		else if( HardWareErr & 0x0080 )
804310 EF                MOV     A,R7
804311 30E708            JNB     ACC.7,?C0802?MAINFLOW
 3708: 			errcode = 0xf8;	
804314 90159C            MOV     DPTR,#errcode
804317 74F8              MOV     A,#0F8H
804319 F0                MOVX    @DPTR,A
80431A 8033              SJMP    ?C0789?MAINFLOW
80431C         ?C0802?MAINFLOW:
 3709: 		else if( HardWareErr & 0x0100 )
80431C EE                MOV     A,R6
80431D 30E008            JNB     ACC.0,?C0804?MAINFLOW
 3710: 			errcode = 0xf9;	
804320 90159C            MOV     DPTR,#errcode
804323 74F9              MOV     A,#0F9H
804325 F0                MOVX    @DPTR,A
804326 8027              SJMP    ?C0789?MAINFLOW
804328         ?C0804?MAINFLOW:
 3711: 		else if( HardWareErr & 0x0200 )
804328 EE                MOV     A,R6
804329 30E108            JNB     ACC.1,?C0806?MAINFLOW
 3712: 			errcode = 0xfa;
80432C 90159C            MOV     DPTR,#errcode
80432F 74FA              MOV     A,#0FAH
804331 F0                MOVX    @DPTR,A
804332 801B              SJMP    ?C0789?MAINFLOW
804334         ?C0806?MAINFLOW:
 3713: 		else if( HardWareErr & 0x0400 )
804334 EE                MOV     A,R6
804335 30E208            JNB     ACC.2,?C0808?MAINFLOW
 3714: 			errcode = 0xfb;
804338 90159C            MOV     DPTR,#errcode
80433B 74FB              MOV     A,#0FBH
80433D F0                MOVX    @DPTR,A
80433E 800F              SJMP    ?C0789?MAINFLOW
804340         ?C0808?MAINFLOW:
 3715: 		else if( HardWareErr & 0x0800 )
804340 EE                MOV     A,R6
804341 90159C            MOV     DPTR,#errcode
804344 30E305            JNB     ACC.3,?C0810?MAINFLOW
 3716: 		    errcode = 0xfc;
804347 74FC              MOV     A,#0FCH
804349 F0                MOVX    @DPTR,A
80434A 8003              SJMP    ?C0789?MAINFLOW
80434C         ?C0810?MAINFLOW:
 3717: 		else
 3718: 			errcode = 0xff;
80434C 74FF              MOV     A,#0FFH
80434E F0                MOVX    @DPTR,A
80434F         ?C0789?MAINFLOW:
 3719: 		if( ( IOUFlag ) && ( SystemParameter.NotOutMax != 0 ) )
80434F 202B03            JB      IOUFlag,$ + 6H
804352 02450B            LJMP    ?C0812?MAINFLOW
804355 90042F            MOV     DPTR,#SystemParameter+0FH
804358 E0                MOVX    A,@DPTR
804359 7002              JNZ     ?C1034?MAINFLOW
80435B A3                INC     DPTR
80435C E0                MOVX    A,@DPTR
80435D         ?C1034?MAINFLOW:
80435D 7003              JNZ     $ + 5H
80435F 02450B            LJMP    ?C0812?MAINFLOW
 3720: 		{			
 3721: 		#ifdef _CHINA_
 3722: 			len = sprintf( DisplayBuffer, "状态代码 = %02bx " , errcode );			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 112


 3723: 		#else
 3724: 			len = sprintf( DisplayBuffer, "state code = %02bx  " , errcode );			
804362 7B80              MOV     R3,#BYTE2 080045CH
804364 7A04              MOV     R2,#HIGH 080045CH
804366 795C              MOV     R1,#LOW 080045CH
804368 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80436B A5128007B6        ECALL   ?C?PSTXDATA
804370 90159C            MOV     DPTR,#errcode
804373 E0                MOVX    A,@DPTR
804374 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
804377 F0                MOVX    @DPTR,A
804378 7B00              MOV     R3,#?C?XDATASEG
80437A 7A04              MOV     R2,#HIGH DisplayBuffer
80437C 7970              MOV     R1,#LOW DisplayBuffer
80437E A512800949        ECALL   _sprintf
804383 90159B            MOV     DPTR,#len
804386 EF                MOV     A,R7
804387 F0                MOVX    @DPTR,A
 3725: 	    #endif
 3726: 			DisplayLine = STR_DUO_MONEY;			
804388 900B27            MOV     DPTR,#DisplayLine
80438B 7420              MOV     A,#020H
80438D F0                MOVX    @DPTR,A
 3727: 			memcpy( DisplayBuffer + len , DispInformationTable[DisplayLine ].str, DispInformationTable[ DisplayLine ].len 
>> );
80438E E0                MOVX    A,@DPTR
80438F FE                MOV     R6,A
804390 25E0              ADD     A,ACC
804392 25E0              ADD     A,ACC
804394 2474              ADD     A,#LOW DispInformationTable+03H
804396 F582              MOV     DPL,A
804398 E4                CLR     A
804399 3404              ADDC    A,#HIGH DispInformationTable+03H
80439B F583              MOV     DPH,A
80439D E4                CLR     A
80439E 93                MOVC    A,@A+DPTR
80439F FD                MOV     R5,A
8043A0 7C00              MOV     R4,#00H
8043A2 C004              PUSH    AR4
8043A4 C005              PUSH    AR5
8043A6 EE                MOV     A,R6
8043A7 25E0              ADD     A,ACC
8043A9 25E0              ADD     A,ACC
8043AB 2471              ADD     A,#LOW DispInformationTable
8043AD F582              MOV     DPL,A
8043AF E4                CLR     A
8043B0 3404              ADDC    A,#HIGH DispInformationTable
8043B2 F583              MOV     DPH,A
8043B4 A5128007C0        ECALL   ?C?PLDCODE
8043B9 C001              PUSH    AR1
8043BB 7470              MOV     A,#LOW DisplayBuffer
8043BD 2F                ADD     A,R7
8043BE F9                MOV     R1,A
8043BF E4                CLR     A
8043C0 3404              ADDC    A,#HIGH DisplayBuffer
8043C2 A801              MOV     R0,AR1
8043C4 FC                MOV     R4,A
8043C5 7D00              MOV     R5,#?C?XDATASEG
8043C7 D001              POP     AR1
8043C9 D007              POP     AR7
8043CB D006              POP     AR6
8043CD A51280052D        ECALL   ?C?COPY
 3728: 			len += DispInformationTable[ DisplayLine ].len;
8043D2 900B27            MOV     DPTR,#DisplayLine
8043D5 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 113


8043D6 25E0              ADD     A,ACC
8043D8 25E0              ADD     A,ACC
8043DA 2474              ADD     A,#LOW DispInformationTable+03H
8043DC F582              MOV     DPL,A
8043DE E4                CLR     A
8043DF 3404              ADDC    A,#HIGH DispInformationTable+03H
8043E1 F583              MOV     DPH,A
8043E3 E4                CLR     A
8043E4 93                MOVC    A,@A+DPTR
8043E5 FF                MOV     R7,A
8043E6 90159B            MOV     DPTR,#len
8043E9 E0                MOVX    A,@DPTR
8043EA 2F                ADD     A,R7
8043EB F0                MOVX    @DPTR,A
 3729: 			switch( SystemParameter.curUnit )
8043EC 900468            MOV     DPTR,#SystemParameter+048H
8043EF E0                MOVX    A,@DPTR
8043F0 FE                MOV     R6,A
8043F1 A3                INC     DPTR
8043F2 E0                MOVX    A,@DPTR
8043F3 FF                MOV     R7,A
8043F4 EE                MOV     A,R6
8043F5 6003              JZ      $ + 5H
8043F7 024507            LJMP    ?C0813?MAINFLOW
8043FA EF                MOV     A,R7
8043FB 24F6              ADD     A,#0F6H
8043FD 6040              JZ      ?C0815?MAINFLOW
8043FF 24A6              ADD     A,#0A6H
804401 7003              JNZ     $ + 5H
804403 02449B            LJMP    ?C0816?MAINFLOW
804406 2463              ADD     A,#063H
804408 6003              JZ      $ + 5H
80440A 024507            LJMP    ?C0813?MAINFLOW
 3730: 			{
 3731: 				case 1:
80440D         ?C0814?MAINFLOW:
 3732: 					len += sprintf( DisplayBuffer + len, "%u", SystemParameter.NotOutMax);
80440D 90159B            MOV     DPTR,#len
804410 E0                MOVX    A,@DPTR
804411 2470              ADD     A,#LOW DisplayBuffer
804413 F9                MOV     R1,A
804414 E4                CLR     A
804415 3404              ADDC    A,#HIGH DisplayBuffer
804417 FA                MOV     R2,A
804418 7B00              MOV     R3,#?C?XDATASEG
80441A C003              PUSH    AR3
80441C C002              PUSH    AR2
80441E C001              PUSH    AR1
804420 7B80              MOV     R3,#BYTE2 080030EH
804422 7A03              MOV     R2,#HIGH 080030EH
804424 790E              MOV     R1,#LOW 080030EH
804426 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
804429 A5128007B6        ECALL   ?C?PSTXDATA
80442E 90042F            MOV     DPTR,#SystemParameter+0FH
804431 E0                MOVX    A,@DPTR
804432 FF                MOV     R7,A
804433 A3                INC     DPTR
804434 E0                MOVX    A,@DPTR
804435 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
804438 CF                XCH     A,R7
804439 F0                MOVX    @DPTR,A
80443A A3                INC     DPTR
80443B EF                MOV     A,R7
 3733: 					break;				
80443C 0244F5            LJMP    ?C1118?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 114


 3734: 				case 10:
80443F         ?C0815?MAINFLOW:
 3735: 					len += sprintf( DisplayBuffer + len, "%u.%u", SystemParameter.NotOutMax/SystemParameter.curUnit, SystemParam
>> eter.NotOutMax%SystemParameter.curUnit );
80443F 90159B            MOV     DPTR,#len
804442 E0                MOVX    A,@DPTR
804443 2470              ADD     A,#LOW DisplayBuffer
804445 F9                MOV     R1,A
804446 E4                CLR     A
804447 3404              ADDC    A,#HIGH DisplayBuffer
804449 FA                MOV     R2,A
80444A 7B00              MOV     R3,#?C?XDATASEG
80444C C003              PUSH    AR3
80444E C002              PUSH    AR2
804450 C001              PUSH    AR1
804452 7B80              MOV     R3,#BYTE2 0800311H
804454 7A03              MOV     R2,#HIGH 0800311H
804456 7911              MOV     R1,#LOW 0800311H
804458 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80445B A5128007B6        ECALL   ?C?PSTXDATA
804460 900468            MOV     DPTR,#SystemParameter+048H
804463 E0                MOVX    A,@DPTR
804464 FA                MOV     R2,A
804465 A3                INC     DPTR
804466 E0                MOVX    A,@DPTR
804467 FB                MOV     R3,A
804468 90042F            MOV     DPTR,#SystemParameter+0FH
80446B E0                MOVX    A,@DPTR
80446C FE                MOV     R6,A
80446D A3                INC     DPTR
80446E E0                MOVX    A,@DPTR
80446F FF                MOV     R7,A
804470 AD03              MOV     R5,AR3
804472 AC02              MOV     R4,AR2
804474 A51280056C        ECALL   ?C?UIDIV
804479 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80447C EE                MOV     A,R6
80447D F0                MOVX    @DPTR,A
80447E A3                INC     DPTR
80447F EF                MOV     A,R7
804480 F0                MOVX    @DPTR,A
804481 90042F            MOV     DPTR,#SystemParameter+0FH
804484 E0                MOVX    A,@DPTR
804485 FE                MOV     R6,A
804486 A3                INC     DPTR
804487 E0                MOVX    A,@DPTR
804488 FF                MOV     R7,A
804489 AD03              MOV     R5,AR3
80448B AC02              MOV     R4,AR2
80448D A51280056C        ECALL   ?C?UIDIV
804492 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
804495 EC                MOV     A,R4
804496 F0                MOVX    @DPTR,A
804497 A3                INC     DPTR
804498 ED                MOV     A,R5
804499         
 3736: 					break;
804499 805A              SJMP    ?C1118?MAINFLOW
 3737: 				case 100:
80449B         ?C0816?MAINFLOW:
 3738: 					len += sprintf( DisplayBuffer + len, "%u.%02u", SystemParameter.NotOutMax/SystemParameter.curUnit, SystemPar
>> ameter.NotOutMax%SystemParameter.curUnit );
80449B 90159B            MOV     DPTR,#len
80449E E0                MOVX    A,@DPTR
80449F 2470              ADD     A,#LOW DisplayBuffer
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 115


8044A1 F9                MOV     R1,A
8044A2 E4                CLR     A
8044A3 3404              ADDC    A,#HIGH DisplayBuffer
8044A5 FA                MOV     R2,A
8044A6 7B00              MOV     R3,#?C?XDATASEG
8044A8 C003              PUSH    AR3
8044AA C002              PUSH    AR2
8044AC C001              PUSH    AR1
8044AE 7B80              MOV     R3,#BYTE2 0800317H
8044B0 7A03              MOV     R2,#HIGH 0800317H
8044B2 7917              MOV     R1,#LOW 0800317H
8044B4 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8044B7 A5128007B6        ECALL   ?C?PSTXDATA
8044BC 900468            MOV     DPTR,#SystemParameter+048H
8044BF E0                MOVX    A,@DPTR
8044C0 FA                MOV     R2,A
8044C1 A3                INC     DPTR
8044C2 E0                MOVX    A,@DPTR
8044C3 FB                MOV     R3,A
8044C4 90042F            MOV     DPTR,#SystemParameter+0FH
8044C7 E0                MOVX    A,@DPTR
8044C8 FE                MOV     R6,A
8044C9 A3                INC     DPTR
8044CA E0                MOVX    A,@DPTR
8044CB FF                MOV     R7,A
8044CC AD03              MOV     R5,AR3
8044CE AC02              MOV     R4,AR2
8044D0 A51280056C        ECALL   ?C?UIDIV
8044D5 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8044D8 EE                MOV     A,R6
8044D9 F0                MOVX    @DPTR,A
8044DA A3                INC     DPTR
8044DB EF                MOV     A,R7
8044DC F0                MOVX    @DPTR,A
8044DD 90042F            MOV     DPTR,#SystemParameter+0FH
8044E0 E0                MOVX    A,@DPTR
8044E1 FE                MOV     R6,A
8044E2 A3                INC     DPTR
8044E3 E0                MOVX    A,@DPTR
8044E4 FF                MOV     R7,A
8044E5 AD03              MOV     R5,AR3
8044E7 AC02              MOV     R4,AR2
8044E9 A51280056C        ECALL   ?C?UIDIV
8044EE 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8044F1 EC                MOV     A,R4
8044F2 F0                MOVX    @DPTR,A
8044F3 A3                INC     DPTR
8044F4 ED                MOV     A,R5
8044F5         
8044F5 F0                MOVX    @DPTR,A
8044F6 D001              POP     AR1
8044F8 D002              POP     AR2
8044FA D003              POP     AR3
8044FC A512800949        ECALL   _sprintf
804501 90159B            MOV     DPTR,#len
804504 E0                MOVX    A,@DPTR
804505 2F                ADD     A,R7
804506 F0                MOVX    @DPTR,A
 3739: 				break;		
 3740: 			}			
804507         ?C0813?MAINFLOW:
 3741: 			IOUFlag = 0;
804507 C22B              CLR     IOUFlag
 3742: 		}
804509 8026              SJMP    ?C0817?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 116


80450B         ?C0812?MAINFLOW:
 3743: 		else		
 3744: 		#ifdef _CHINA_
 3745: 			len = sprintf( DisplayBuffer, "状态代码 = %02bx " , errcode );			
 3746: 		#else
 3747: 			len = sprintf( DisplayBuffer, "state code = %02bx  " , errcode );			
80450B 7B80              MOV     R3,#BYTE2 080045CH
80450D 7A04              MOV     R2,#HIGH 080045CH
80450F 795C              MOV     R1,#LOW 080045CH
804511 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
804514 A5128007B6        ECALL   ?C?PSTXDATA
804519 90159C            MOV     DPTR,#errcode
80451C E0                MOVX    A,@DPTR
80451D 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
804520 F0                MOVX    @DPTR,A
804521 7B00              MOV     R3,#?C?XDATASEG
804523 7A04              MOV     R2,#HIGH DisplayBuffer
804525 7970              MOV     R1,#LOW DisplayBuffer
804527 A512800949        ECALL   _sprintf
80452C 90159B            MOV     DPTR,#len
80452F EF                MOV     A,R7
804530 F0                MOVX    @DPTR,A
804531         ?C0817?MAINFLOW:
 3748: 	    #endif
 3749: //		Trace( "\n LEN = %bu", len );
 3750: 		DisplayStr( 0, __LINE1__ , 1, DisplayBuffer, len );
804531 D21A              SETB    ?_DisplayStr?BIT
804533 7B00              MOV     R3,#?C?XDATASEG
804535 7A04              MOV     R2,#HIGH DisplayBuffer
804537 7970              MOV     R1,#LOW DisplayBuffer
804539 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80453C A5128007B6        ECALL   ?C?PSTXDATA
804541 90159B            MOV     DPTR,#len
804544 E0                MOVX    A,@DPTR
804545 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804548 F0                MOVX    @DPTR,A
804549 7D01              MOV     R5,#01H
80454B E4                CLR     A
80454C FF                MOV     R7,A
80454D A51280885F        ECALL   _DisplayStr
 3751: 		WaitForWork( 500 , NULL );
804552 E4                CLR     A
804553 7FF4              MOV     R7,#0F4H
804555 7E01              MOV     R6,#01H
804557 A512808330        ECALL   ?L?COM000D
 3752: 		
 3753: 		isShowLcd = 0;	
80455C C228              CLR     isShowLcd
 3754: 		SystemStatus = 2;
80455E 9001C6            MOV     DPTR,#SystemStatus
804561 7402              MOV     A,#02H
804563 F0                MOVX    @DPTR,A
 3755: 		SaveGlobalParam();
804564 A51280DC7C        ECALL   SaveGlobalParam
 3756: 		SaveGoodsSet();			
804569 A51280DA64        ECALL   SaveGoodsSet
 3757: 	}	
80456E         ?C0787?MAINFLOW:
 3758: 	if( SystemParameter.MobileON != 1 )
80456E 900446            MOV     DPTR,#SystemParameter+026H
804571 E0                MOVX    A,@DPTR
804572 6401              XRL     A,#01H
804574 6004              JZ      ?C0818?MAINFLOW
 3759: 		return 1;
804576 7F01              MOV     R7,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 117


804578 801C              SJMP    ?C0819?MAINFLOW
80457A         ?C0818?MAINFLOW:
 3760: 	if( ( AlarmTime == 0x00 ) && ( ScanIsSendAlarm() == 0 ) )
80457A 900002            MOV     DPTR,#AlarmTime
80457D E0                MOVX    A,@DPTR
80457E 700F              JNZ     ?C0820?MAINFLOW
804580 A51280A082        ECALL   ScanIsSendAlarm
804585 EF                MOV     A,R7
804586 7007              JNZ     ?C0820?MAINFLOW
 3761: 	{	
 3762: 		Trace("\n The Frist Alarm");			
 3763: 		AlarmTime = 1;		
804588 900002            MOV     DPTR,#AlarmTime
80458B 04                INC     A
80458C F0                MOVX    @DPTR,A
 3764: 	}
80458D 8005              SJMP    ?C0821?MAINFLOW
80458F         ?C0820?MAINFLOW:
 3765: 	else 
 3766: 	{
 3767: 		CycleSendSMS();		
80458F A51280BCFD        ECALL   CycleSendSMS
 3768: 	}	
804594         ?C0821?MAINFLOW:
 3769:     return 1;
804594 7F01              MOV     R7,#01H
 3770: }
804596         ?C0819?MAINFLOW:
804596 A522              ERET    
----- FUNCTION OutofService (END) -------


----- FUNCTION mainmenu (BEGIN) -----
 FILE: 'maintmenu.c'
   49: void mainmenu()
   50: {
   51: 	u_char  xdata firstNum ;//一级菜单编号
   52: 	u_char  xdata LineNum ;//选中屏幕的行号	
   53: 	u_char  xdata i = 0;
804598 E4                CLR     A
804599 90159E            MOV     DPTR,#i
80459C F0                MOVX    @DPTR,A
   54: 	bit	data Notout = 1;
80459D D217              SETB    Notout
   55: 	u_char xdata ErrFlag = 0;
80459F A3                INC     DPTR
8045A0 F0                MOVX    @DPTR,A
   56: 	u_char xdata key = 0;
8045A1 A3                INC     DPTR
8045A2 F0                MOVX    @DPTR,A
   57: 	struct WaySet  xdata TempGoodsWaySetVal[GOODSWAYNUM];
   58: 	struct SYSTEMPARAMETER xdata TempSystemParameter;	
   59: 	//u_char xdata str[20];
   60:     //struct SHORTMSG xdata message;
   61: 
   62: 	ErrFlag = 0;
8045A3 024D60            LJMP    ?C0083?MAINTMENU
8045A6         ?C0001?MAINTMENU:
   63: 	while( ErrFlag == 0 )
8045A6 90159F            MOV     DPTR,#ErrFlag
8045A9 E0                MOVX    A,@DPTR
8045AA 6003              JZ      $ + 5H
8045AC 024D70            LJMP    ?C0002?MAINTMENU
   64: 	{
   65: 		ErrFlag = 0;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 118


8045AF F0                MOVX    @DPTR,A
   66: 		Notout = 1;
8045B0 D217              SETB    Notout
   67: 		ClearKey();	
8045B2 A512808FA5        ECALL   ClearKey
   68: 		/*显示两行菜单及其值*/
   69: 		DisplayStr( 0, 0, 1, MainMenuStr[0].str, MainMenuStr[0].len );//显示菜单	
8045B7 D21A              SETB    ?_DisplayStr?BIT
8045B9 9016AD            MOV     DPTR,#MainMenuStr
8045BC A5128007C0        ECALL   ?C?PLDCODE
8045C1 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8045C4 A5128007B6        ECALL   ?C?PSTXDATA
8045C9 9016B0            MOV     DPTR,#MainMenuStr+03H
8045CC A512808856        ECALL   ?L?COM0005
   70: 		DisplayStr( 0, 1, 1, MainMenuStr[1].str, MainMenuStr[1].len );//显示菜单				
8045D1 D21A              SETB    ?_DisplayStr?BIT
8045D3 9016B1            MOV     DPTR,#MainMenuStr+04H
8045D6 A5128007C0        ECALL   ?C?PLDCODE
8045DB 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8045DE A5128007B6        ECALL   ?C?PSTXDATA
8045E3 9016B4            MOV     DPTR,#MainMenuStr+07H
8045E6 A51280895F        ECALL   ?L?COM000E
   71: 		DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
   72: 		firstNum = 1;
8045EB 90159C            MOV     DPTR,#firstNum
8045EE 7401              MOV     A,#01H
8045F0 F0                MOVX    @DPTR,A
   73: 		LineNum = 2;	
8045F1 A3                INC     DPTR
8045F2 04                INC     A
8045F3 F0                MOVX    @DPTR,A
8045F4         ?C0003?MAINTMENU:
   74: 		while( Notout )    //超时或客户退出
8045F4 201703            JB      Notout,$ + 6H
8045F7 024A7A            LJMP    ?C0004?MAINTMENU
   75: 		{				
   76: 			key = GetKey();
8045FA A5128096D1        ECALL   GetKey
8045FF 9015A0            MOV     DPTR,#key
804602 EF                MOV     A,R7
804603 F0                MOVX    @DPTR,A
   77: 			switch( key )		
804604 24F3              ADD     A,#0F3H
804606 7003              JNZ     $ + 5H
804608 024790            LJMP    ?C0021?MAINTMENU
80460B 24F2              ADD     A,#0F2H
80460D 7003              JNZ     $ + 5H
80460F 02478B            LJMP    ?C0020?MAINTMENU
804612 24CB              ADD     A,#0CBH
804614 7003              JNZ     $ + 5H
804616 0246DF            LJMP    ?C0013?MAINTMENU
804619 2408              ADD     A,#08H
80461B 6003              JZ      $ + 5H
80461D 024A6B            LJMP    ?C0005?MAINTMENU
   78: 			{
   79: 				case KEY_UP://上移  	
804620         ?C0006?MAINTMENU:
   80: 				     if( LineNum == 2 )//选中标记上移
804620 90159D            MOV     DPTR,#LineNum
804623 E0                MOVX    A,@DPTR
804624 6402              XRL     A,#02H
804626 702D              JNZ     ?C0007?MAINTMENU
   81: 				     {			     
   82: 				     	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
804628 D21A              SETB    ?_DisplayCursorState?BIT
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 119


80462A 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80462D 7402              MOV     A,#02H
80462F F0                MOVX    @DPTR,A
804630 D21B              SETB    ?_DisplayCursorState?BIT+01H
804632 E4                CLR     A
804633 FD                MOV     R5,A
804634 FF                MOV     R7,A
804635 A51280897C        ECALL   _DisplayCursorState
   83: 				     	LineNum = 1;			   
80463A 90159D            MOV     DPTR,#LineNum
80463D 7401              MOV     A,#01H
80463F F0                MOVX    @DPTR,A
   84: 						if( firstNum == 0 )
804640 90159C            MOV     DPTR,#firstNum
804643 E0                MOVX    A,@DPTR
804644 7006              JNZ     ?C0008?MAINTMENU
   85: 							firstNum = MENU_COUNT(MainMenuStr)-1;					
804646 7405              MOV     A,#05H
804648 F0                MOVX    @DPTR,A
804649 024A6B            LJMP    ?C0005?MAINTMENU
80464C         ?C0008?MAINTMENU:
   86: 						else
   87: 							firstNum--;
80464C 90159C            MOV     DPTR,#firstNum
80464F E0                MOVX    A,@DPTR
804650 14                DEC     A
804651 F0                MOVX    @DPTR,A
   88: 				     }
804652 024A6B            LJMP    ?C0005?MAINTMENU
804655         ?C0007?MAINTMENU:
   89: 				     else//菜单上翻
   90: 				     {
   91: 				      	/*当firstNum<=1不能上翻了*/			      		
   92: 					//	DispDeviceMenu( firstNum, 1);									    
   93: 						DisplayStr( 0, 1, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
804655 D21A              SETB    ?_DisplayStr?BIT
804657 90159C            MOV     DPTR,#firstNum
80465A E0                MOVX    A,@DPTR
80465B FF                MOV     R7,A
80465C 25E0              ADD     A,ACC
80465E 25E0              ADD     A,ACC
804660 24AD              ADD     A,#LOW MainMenuStr
804662 F582              MOV     DPL,A
804664 E4                CLR     A
804665 3416              ADDC    A,#HIGH MainMenuStr
804667 F583              MOV     DPH,A
804669 A5128007C0        ECALL   ?C?PLDCODE
80466E 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804671 A5128007B6        ECALL   ?C?PSTXDATA
804676 EF                MOV     A,R7
804677 25E0              ADD     A,ACC
804679 25E0              ADD     A,ACC
80467B 24B0              ADD     A,#LOW MainMenuStr+03H
80467D F582              MOV     DPL,A
80467F E4                CLR     A
804680 3416              ADDC    A,#HIGH MainMenuStr+03H
804682 F583              MOV     DPH,A
804684 E4                CLR     A
804685 93                MOVC    A,@A+DPTR
804686 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804689 F0                MOVX    @DPTR,A
80468A 7D01              MOV     R5,#01H
80468C E4                CLR     A
80468D FF                MOV     R7,A
80468E A51280885F        ECALL   _DisplayStr
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 120


   94: 						if( firstNum == 0 )
804693 90159C            MOV     DPTR,#firstNum
804696 E0                MOVX    A,@DPTR
804697 7005              JNZ     ?C0011?MAINTMENU
   95: 							firstNum = MENU_COUNT(MainMenuStr)-1;					
804699 7405              MOV     A,#05H
80469B F0                MOVX    @DPTR,A
80469C 8006              SJMP    ?C0012?MAINTMENU
80469E         ?C0011?MAINTMENU:
   96: 						else
   97: 							firstNum--;
80469E 90159C            MOV     DPTR,#firstNum
8046A1 E0                MOVX    A,@DPTR
8046A2 14                DEC     A
8046A3 F0                MOVX    @DPTR,A
8046A4         ?C0012?MAINTMENU:
   98: 					//	DispDeviceMenu( firstNum, 0);						
   99: 						DisplayStr( 0, 0, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
8046A4 D21A              SETB    ?_DisplayStr?BIT
8046A6 90159C            MOV     DPTR,#firstNum
8046A9 E0                MOVX    A,@DPTR
8046AA FF                MOV     R7,A
8046AB 25E0              ADD     A,ACC
8046AD 25E0              ADD     A,ACC
8046AF 24AD              ADD     A,#LOW MainMenuStr
8046B1 F582              MOV     DPL,A
8046B3 E4                CLR     A
8046B4 3416              ADDC    A,#HIGH MainMenuStr
8046B6 F583              MOV     DPH,A
8046B8 A5128007C0        ECALL   ?C?PLDCODE
8046BD 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8046C0 A5128007B6        ECALL   ?C?PSTXDATA
8046C5 EF                MOV     A,R7
8046C6 25E0              ADD     A,ACC
8046C8 25E0              ADD     A,ACC
8046CA 24B0              ADD     A,#LOW MainMenuStr+03H
8046CC F582              MOV     DPL,A
8046CE E4                CLR     A
8046CF 3416              ADDC    A,#HIGH MainMenuStr+03H
8046D1 A512808854        ECALL   ?L?COM0004
  100: 						LineNum = 1;					
8046D6 90159D            MOV     DPTR,#LineNum
8046D9 7401              MOV     A,#01H
8046DB F0                MOVX    @DPTR,A
  101: 				     }
  102: 					 break;
8046DC 024A6B            LJMP    ?C0005?MAINTMENU
  103: 				case KEY_DOWN://下移				
8046DF         ?C0013?MAINTMENU:
  104: 					if( LineNum == 1 )//选中标记下移
8046DF 90159D            MOV     DPTR,#LineNum
8046E2 E0                MOVX    A,@DPTR
8046E3 6401              XRL     A,#01H
8046E5 701A              JNZ     ?C0014?MAINTMENU
  105: 					{				 
  106: 					     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标				   
8046E7 A51280896E        ECALL   ?L?COM000F
  107: 						if( firstNum == MENU_COUNT(MainMenuStr)-1 )
8046EC 90159C            MOV     DPTR,#firstNum
8046EF E0                MOVX    A,@DPTR
8046F0 B40505            CJNE    A,#05H,?C0015?MAINTMENU
  108: 							firstNum = 0;					
8046F3 E4                CLR     A
8046F4 F0                MOVX    @DPTR,A
8046F5 024782            LJMP    ?C0084?MAINTMENU
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 121


8046F8         ?C0015?MAINTMENU:
  109: 						else
  110: 							firstNum++;
8046F8 90159C            MOV     DPTR,#firstNum
8046FB E0                MOVX    A,@DPTR
8046FC 04                INC     A
8046FD F0                MOVX    @DPTR,A
8046FE         ?C0016?MAINTMENU:
  111: 					     LineNum = 2;				     
  112: 					 }
8046FE 024782            LJMP    ?C0084?MAINTMENU
804701         ?C0014?MAINTMENU:
  113: 					 else//菜单下翻
  114: 					 {
  115: 					    /*当firstNum<=2不能上翻了*/				    				
  116: 						DisplayStr( 0, 0, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
804701 D21A              SETB    ?_DisplayStr?BIT
804703 90159C            MOV     DPTR,#firstNum
804706 E0                MOVX    A,@DPTR
804707 FF                MOV     R7,A
804708 25E0              ADD     A,ACC
80470A 25E0              ADD     A,ACC
80470C 24AD              ADD     A,#LOW MainMenuStr
80470E F582              MOV     DPL,A
804710 E4                CLR     A
804711 3416              ADDC    A,#HIGH MainMenuStr
804713 F583              MOV     DPH,A
804715 A5128007C0        ECALL   ?C?PLDCODE
80471A 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80471D A5128007B6        ECALL   ?C?PSTXDATA
804722 EF                MOV     A,R7
804723 25E0              ADD     A,ACC
804725 25E0              ADD     A,ACC
804727 24B0              ADD     A,#LOW MainMenuStr+03H
804729 F582              MOV     DPL,A
80472B E4                CLR     A
80472C 3416              ADDC    A,#HIGH MainMenuStr+03H
80472E A512808854        ECALL   ?L?COM0004
  117: 				      	if( firstNum == MENU_COUNT(MainMenuStr)-1 )
804733 90159C            MOV     DPTR,#firstNum
804736 E0                MOVX    A,@DPTR
804737 B40504            CJNE    A,#05H,?C0018?MAINTMENU
  118: 							firstNum = 0;					
80473A E4                CLR     A
80473B F0                MOVX    @DPTR,A
80473C 8006              SJMP    ?C0019?MAINTMENU
80473E         ?C0018?MAINTMENU:
  119: 						else
  120: 							firstNum++;
80473E 90159C            MOV     DPTR,#firstNum
804741 E0                MOVX    A,@DPTR
804742 04                INC     A
804743 F0                MOVX    @DPTR,A
804744         ?C0019?MAINTMENU:
  121: 						DisplayStr( 0, 1, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
804744 D21A              SETB    ?_DisplayStr?BIT
804746 90159C            MOV     DPTR,#firstNum
804749 E0                MOVX    A,@DPTR
80474A FF                MOV     R7,A
80474B 25E0              ADD     A,ACC
80474D 25E0              ADD     A,ACC
80474F 24AD              ADD     A,#LOW MainMenuStr
804751 F582              MOV     DPL,A
804753 E4                CLR     A
804754 3416              ADDC    A,#HIGH MainMenuStr
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 122


804756 F583              MOV     DPH,A
804758 A5128007C0        ECALL   ?C?PLDCODE
80475D 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804760 A5128007B6        ECALL   ?C?PSTXDATA
804765 EF                MOV     A,R7
804766 25E0              ADD     A,ACC
804768 25E0              ADD     A,ACC
80476A 24B0              ADD     A,#LOW MainMenuStr+03H
80476C F582              MOV     DPL,A
80476E E4                CLR     A
80476F 3416              ADDC    A,#HIGH MainMenuStr+03H
804771 F583              MOV     DPH,A
804773 E4                CLR     A
804774 93                MOVC    A,@A+DPTR
804775 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804778 F0                MOVX    @DPTR,A
804779 7D01              MOV     R5,#01H
80477B E4                CLR     A
80477C FF                MOV     R7,A
80477D A51280885F        ECALL   _DisplayStr
  122: 						LineNum = 2;					
804782         
804782 90159D            MOV     DPTR,#LineNum
804785 7402              MOV     A,#02H
804787 F0                MOVX    @DPTR,A
  123: 					}
  124: 					break;
804788 024A6B            LJMP    ?C0005?MAINTMENU
  125: 				case KEY_CANCEL:
80478B         ?C0020?MAINTMENU:
  126: 					Notout = 0;
80478B C217              CLR     Notout
  127: 					break;			
80478D 024A6B            LJMP    ?C0005?MAINTMENU
  128: 				case KEY_SUBMIT://Enter,选中了某项菜单	
804790         ?C0021?MAINTMENU:
  129: 					DisplayCursorState( 0, 0, 0, 0, 1 );//第二行整光标
804790 C21A              CLR     ?_DisplayCursorState?BIT
804792 E4                CLR     A
804793 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
804796 F0                MOVX    @DPTR,A
804797 D21B              SETB    ?_DisplayCursorState?BIT+01H
804799 FD                MOV     R5,A
80479A A512808F9F        ECALL   ?L?COM0012
  130: 					ClearKey();				
  131: 					switch(firstNum)
80479F 90159C            MOV     DPTR,#firstNum
8047A2 E0                MOVX    A,@DPTR
8047A3 14                DEC     A
8047A4 6027              JZ      ?C0024?MAINTMENU
8047A6 14                DEC     A
8047A7 7003              JNZ     $ + 5H
8047A9 024919            LJMP    ?C0040?MAINTMENU
8047AC 14                DEC     A
8047AD 7003              JNZ     $ + 5H
8047AF 024920            LJMP    ?C0041?MAINTMENU
8047B2 14                DEC     A
8047B3 7003              JNZ     $ + 5H
8047B5 024927            LJMP    ?C0042?MAINTMENU
8047B8 14                DEC     A
8047B9 7003              JNZ     $ + 5H
8047BB 02492E            LJMP    ?C0043?MAINTMENU
8047BE 2405              ADD     A,#05H
8047C0 6003              JZ      $ + 5H
8047C2 024933            LJMP    ?C0022?MAINTMENU
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 123


  132: 					{					
  133: 						case 0:
8047C5         ?C0023?MAINTMENU:
  134: 							//货道设置
  135: 							GoodsParamManage();						
8047C5 A51280E44E        ECALL   GoodsParamManage
  136: 						break;
8047CA 024933            LJMP    ?C0022?MAINTMENU
  137: 						case 1://添货
8047CD         ?C0024?MAINTMENU:
  138: 							key = 0;
8047CD E4                CLR     A
8047CE 9015A0            MOV     DPTR,#key
8047D1 F0                MOVX    @DPTR,A
  139: 							i = 1;
8047D2 90159E            MOV     DPTR,#i
8047D5 04                INC     A
8047D6 F0                MOVX    @DPTR,A
  140: 					#ifdef _CHINA_
  141: 							DisplayStr( 0, 0, 1, "    你确定添货吗?", 17 ),//全部计数值清零
  142: 							DisplayStr( 0, 1, 1, "确定ENTER 取消CANCEL", 20 );	
  143: 					#else		
  144: 							DisplayStr( 0, 0, 1, "   Are you sure ?", 17 ),//全部计数值清零
8047D7 D21A              SETB    ?_DisplayStr?BIT
8047D9 7B80              MOV     R3,#BYTE2 0801655H
8047DB 7A16              MOV     R2,#HIGH 0801655H
8047DD 7955              MOV     R1,#LOW 0801655H
8047DF 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8047E2 A5128007B6        ECALL   ?C?PSTXDATA
8047E7 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8047EA 7411              MOV     A,#011H
8047EC A51280885B        ECALL   ?L?COM0007
8047F1 D21A              SETB    ?_DisplayStr?BIT
8047F3 7B80              MOV     R3,#BYTE2 0801667H
8047F5 7A16              MOV     R2,#HIGH 0801667H
8047F7 7967              MOV     R1,#LOW 0801667H
8047F9 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8047FC A5128007B6        ECALL   ?C?PSTXDATA
804801 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804804 7411              MOV     A,#011H
804806 F0                MOVX    @DPTR,A
804807 7D01              MOV     R5,#01H
804809 E4                CLR     A
80480A FF                MOV     R7,A
80480B A51280885F        ECALL   _DisplayStr
804810         ?C0025?MAINTMENU:
  145: 							DisplayStr( 0, 1, 1, "   ENTER   CANCEL", 17 );	
  146: 					#endif													
  147: 							while( i == 1 )
804810 90159E            MOV     DPTR,#i
804813 E0                MOVX    A,@DPTR
804814 B4011E            CJNE    A,#01H,?C0026?MAINTMENU
  148: 							{
  149: 								key = GetKey();
804817 A5128096D1        ECALL   GetKey
80481C 9015A0            MOV     DPTR,#key
80481F EF                MOV     A,R7
804820 F0                MOVX    @DPTR,A
  150: 								if( ( key == KEY_CANCEL ) || (key == KEY_SUBMIT) )
804821 641B              XRL     A,#01BH
804823 6010              JZ      ?C0026?MAINTMENU
804825 E0                MOVX    A,@DPTR
804826 640D              XRL     A,#0DH
804828 600B              JZ      ?C0026?MAINTMENU
  151: 									break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 124


80482A         ?C0027?MAINTMENU:
  152: 								WaitForWork( 100, NULL );	
80482A E4                CLR     A
80482B 7F64              MOV     R7,#064H
80482D FE                MOV     R6,A
80482E A512808330        ECALL   ?L?COM000D
  153: 							}
804833 80DB              SJMP    ?C0025?MAINTMENU
804835         ?C0026?MAINTMENU:
  154: 							if( key == KEY_CANCEL )
804835 9015A0            MOV     DPTR,#key
804838 E0                MOVX    A,@DPTR
804839 641B              XRL     A,#01BH
80483B 7003              JNZ     $ + 5H
80483D 024933            LJMP    ?C0022?MAINTMENU
  155: 									break;								
804840         ?C0029?MAINTMENU:
  156: 							for( key = 0; key < GOODSWAYNUM; key ++ )
804840 E4                CLR     A
804841 9015A0            MOV     DPTR,#key
804844 F0                MOVX    @DPTR,A
804845         ?C0030?MAINTMENU:
804845 9015A0            MOV     DPTR,#key
804848 E0                MOVX    A,@DPTR
804849 FF                MOV     R7,A
80484A C3                CLR     C
80484B 9440              SUBB    A,#040H
80484D 4003              JC      $ + 5H
80484F 024908            LJMP    ?C0031?MAINTMENU
  157: 							{	
  158: 								if( InputGoodsWayList[key].UseState != 1 )
804852 EF                MOV     A,R7
804853 25E0              ADD     A,ACC
804855 25E0              ADD     A,ACC
804857 24DE              ADD     A,#LOW InputGoodsWayList+02H
804859 F582              MOV     DPL,A
80485B E4                CLR     A
80485C 342B              ADDC    A,#HIGH InputGoodsWayList+02H
80485E F583              MOV     DPH,A
804860 E0                MOVX    A,@DPTR
804861 6401              XRL     A,#01H
804863 6003              JZ      $ + 5H
804865 0248FF            LJMP    ?C0032?MAINTMENU
  159:                                 {
  160: 									continue;
  161:                                 }
804868         ?C0033?MAINTMENU:
  162: 								else
  163: 								{
  164: 									if( InputGoodsWayList[key].GoodsWayNo == GoodsWaySetVal[key].WayNo )
804868 9015A0            MOV     DPTR,#key
80486B E0                MOVX    A,@DPTR
80486C FF                MOV     R7,A
80486D 75F005            MOV     B,#05H
804870 900004            MOV     DPTR,#GoodsWaySetVal
804873 A51280079F        ECALL   ?C?OFFXADD
804878 E0                MOVX    A,@DPTR
804879 FE                MOV     R6,A
80487A EF                MOV     A,R7
80487B 25E0              ADD     A,ACC
80487D 25E0              ADD     A,ACC
80487F 24DC              ADD     A,#LOW InputGoodsWayList
804881 F582              MOV     DPL,A
804883 E4                CLR     A
804884 342B              ADDC    A,#HIGH InputGoodsWayList
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 125


804886 F583              MOV     DPH,A
804888 E0                MOVX    A,@DPTR
804889 6E                XRL     A,R6
80488A 7062              JNZ     ?C0035?MAINTMENU
  165: 									{
  166:                                         //--------------------------------------------------------------------
  167:                                         if( SystemParameter.GOCOn == 0x01 )
80488C 90046B            MOV     DPTR,#SystemParameter+04BH
80488F E0                MOVX    A,@DPTR
804890 B40112            CJNE    A,#01H,?C0036?MAINTMENU
  168:                                         {
  169:                                         	GoodsWaySetVal[key].WayState &= 0xfb;
804893 9015A0            MOV     DPTR,#key
804896 E0                MOVX    A,@DPTR
804897 75F005            MOV     B,#05H
80489A 900005            MOV     DPTR,#GoodsWaySetVal+01H
80489D A51280079F        ECALL   ?C?OFFXADD
8048A2 E0                MOVX    A,@DPTR
  170:                                         }
8048A3 8044              SJMP    ?C0085?MAINTMENU
8048A5         ?C0036?MAINTMENU:
  171:                                         else
  172: 										{
  173: 											GoodsWaySetVal[key].GoodsCurrentSum = InputGoodsWayList[key].GoodsMax;
8048A5 9015A0            MOV     DPTR,#key
8048A8 E0                MOVX    A,@DPTR
8048A9 FF                MOV     R7,A
8048AA 25E0              ADD     A,ACC
8048AC 25E0              ADD     A,ACC
8048AE 24DF              ADD     A,#LOW InputGoodsWayList+03H
8048B0 F582              MOV     DPL,A
8048B2 E4                CLR     A
8048B3 342B              ADDC    A,#HIGH InputGoodsWayList+03H
8048B5 F583              MOV     DPH,A
8048B7 E0                MOVX    A,@DPTR
8048B8 FE                MOV     R6,A
8048B9 75F005            MOV     B,#05H
8048BC EF                MOV     A,R7
8048BD 900008            MOV     DPTR,#GoodsWaySetVal+04H
8048C0 A51280079F        ECALL   ?C?OFFXADD
8048C5 EE                MOV     A,R6
8048C6 F0                MOVX    @DPTR,A
  174: 										    if( ( GoodsWaySetVal[key].WayState & 0x04 ) == 0x04 )
8048C7 9015A0            MOV     DPTR,#key
8048CA E0                MOVX    A,@DPTR
8048CB FF                MOV     R7,A
8048CC 75F005            MOV     B,#05H
8048CF 900005            MOV     DPTR,#GoodsWaySetVal+01H
8048D2 A51280079F        ECALL   ?C?OFFXADD
8048D7 E0                MOVX    A,@DPTR
8048D8 FE                MOV     R6,A
8048D9 30E223            JNB     ACC.2,?C0032?MAINTMENU
  175: 												GoodsWaySetVal[key].WayState &= 0xfb;
8048DC 75F005            MOV     B,#05H
8048DF EF                MOV     A,R7
8048E0 900005            MOV     DPTR,#GoodsWaySetVal+01H
8048E3 A51280079F        ECALL   ?C?OFFXADD
8048E8 EE                MOV     A,R6
8048E9         
8048E9 54FB              ANL     A,#0FBH
8048EB F0                MOVX    @DPTR,A
  176: 										}
  177:                                         //====================================================================
  178: 									}
8048EC 8011              SJMP    ?C0032?MAINTMENU
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 126


8048EE         ?C0035?MAINTMENU:
  179: 									else
  180:                                     {
  181: 										GoodsWaySetVal[key].GoodsCurrentSum = 0;
8048EE 9015A0            MOV     DPTR,#key
8048F1 E0                MOVX    A,@DPTR
8048F2 75F005            MOV     B,#05H
8048F5 900008            MOV     DPTR,#GoodsWaySetVal+04H
8048F8 A51280079F        ECALL   ?C?OFFXADD
8048FD E4                CLR     A
8048FE F0                MOVX    @DPTR,A
  182:                                     }
  183: 								}								
  184: 							}
8048FF         ?C0032?MAINTMENU:
8048FF 9015A0            MOV     DPTR,#key
804902 E0                MOVX    A,@DPTR
804903 04                INC     A
804904 F0                MOVX    @DPTR,A
804905 024845            LJMP    ?C0030?MAINTMENU
804908         ?C0031?MAINTMENU:
  185: 							GoodsSetSave = 1;
804908 902DF8            MOV     DPTR,#GoodsSetSave
80490B 7401              MOV     A,#01H
80490D F0                MOVX    @DPTR,A
  186: 							i = 0;
80490E E4                CLR     A
80490F 90159E            MOV     DPTR,#i
804912 F0                MOVX    @DPTR,A
  187: 							key = 0;
804913 9015A0            MOV     DPTR,#key
804916 F0                MOVX    @DPTR,A
  188: 						//	j = 0;							
  189: 						break;				
804917 801A              SJMP    ?C0022?MAINTMENU
  190: 						case 2:
804919         ?C0040?MAINTMENU:
  191: 							//设备检测	
  192: 							DeviceCheck();
804919 A51280C6F1        ECALL   DeviceCheck
  193: 		//					Trace("\n GoodsSetSave2 = %bu", GoodsSetSave );					
  194: 							break;					
80491E 8013              SJMP    ?C0022?MAINTMENU
  195: 						case 3:
804920         ?C0041?MAINTMENU:
  196: 							//系统参数维护
  197: 							SysParamManage();
804920 A51280E554        ECALL   SysParamManage
  198: 							break;	
804925 800C              SJMP    ?C0022?MAINTMENU
  199: 						case 4:
804927         ?C0042?MAINTMENU:
  200: 							CounterMainMenu();
804927 A512806B00        ECALL   CounterMainMenu
  201: 							break;	
80492C 8005              SJMP    ?C0022?MAINTMENU
  202: 						case 5:
80492E         ?C0043?MAINTMENU:
  203: 							//层架配置
  204: 							RackParamManage();
80492E A512807015        ECALL   RackParamManage
  205: 							break;
  206: 					//	case 6:
  207: 					//	{							
  208: 						//	memset( &message, 0, sizeof( struct SHORTMSG ) );	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 127


  209: 						//	PhoneTBCD( 										
  210: 						//	message.phone[0] = 0x86;
  211: 						//	message.phone[1] = 0x13;
  212: 						//	message.phone[2] = 0x76;
  213: 						//	message.phone[3] = 0x38;
  214: 						//	message.phone[4] = 0x92;
  215: 						//	message.phone[5] = 0x17;
  216: 						//	message.phone[6] = 0x2f;
  217: 						//	message.phone[7] = '\0';
  218: 						//	strcpy((char*)message.phone , "8613763892172");
  219: 						//	memcpy( message.msg, "SMSGSM12345M0101", 16 );
  220: 						//	message.len = 16;
  221: 						//	PutShortMsg( &message );
  222: 					//	}
  223: 					//		break;
  224: 					}
804933         ?C0022?MAINTMENU:
  225: 					if(LineNum ==2)
804933 90159D            MOV     DPTR,#LineNum
804936 E0                MOVX    A,@DPTR
804937 6402              XRL     A,#02H
804939 6003              JZ      $ + 5H
80493B 0249CA            LJMP    ?C0044?MAINTMENU
  226: 					{	
  227: 						if( firstNum == 0 )											
80493E 90159C            MOV     DPTR,#firstNum
804941 E0                MOVX    A,@DPTR
804942 7017              JNZ     ?C0045?MAINTMENU
  228: 							DisplayStr( 0, 0, 1, MainMenuStr[MENU_COUNT(MainMenuStr)-1].str, MainMenuStr[MENU_COUNT(MainMenuStr)-1].le
>> n );
804944 D21A              SETB    ?_DisplayStr?BIT
804946 9016C1            MOV     DPTR,#MainMenuStr+014H
804949 A5128007C0        ECALL   ?C?PLDCODE
80494E 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804951 A5128007B6        ECALL   ?C?PSTXDATA
804956 9016C4            MOV     DPTR,#MainMenuStr+017H
804959 802F              SJMP    ?C0081?MAINTMENU
80495B         ?C0045?MAINTMENU:
  229: 						else						
  230: 							DisplayStr( 0, 0, 1, MainMenuStr[firstNum - 1].str, MainMenuStr[firstNum - 1].len );
80495B D21A              SETB    ?_DisplayStr?BIT
80495D 90159C            MOV     DPTR,#firstNum
804960 E0                MOVX    A,@DPTR
804961 FF                MOV     R7,A
804962 25E0              ADD     A,ACC
804964 25E0              ADD     A,ACC
804966 24A9              ADD     A,#LOW MainMenuStr-04H
804968 F582              MOV     DPL,A
80496A E4                CLR     A
80496B 3416              ADDC    A,#HIGH MainMenuStr-04H
80496D F583              MOV     DPH,A
80496F A5128007C0        ECALL   ?C?PLDCODE
804974 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804977 A5128007B6        ECALL   ?C?PSTXDATA
80497C EF                MOV     A,R7
80497D 25E0              ADD     A,ACC
80497F 25E0              ADD     A,ACC
804981 24AC              ADD     A,#LOW MainMenuStr-01H
804983 F582              MOV     DPL,A
804985 E4                CLR     A
804986 3416              ADDC    A,#HIGH MainMenuStr-01H
804988 F583              MOV     DPH,A
80498A         
80498A A512808856        ECALL   ?L?COM0005
80498F         ?C0046?MAINTMENU:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 128


  231: 						DisplayStr( 0, 1, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
80498F D21A              SETB    ?_DisplayStr?BIT
804991 90159C            MOV     DPTR,#firstNum
804994 E0                MOVX    A,@DPTR
804995 FF                MOV     R7,A
804996 25E0              ADD     A,ACC
804998 25E0              ADD     A,ACC
80499A 24AD              ADD     A,#LOW MainMenuStr
80499C F582              MOV     DPL,A
80499E E4                CLR     A
80499F 3416              ADDC    A,#HIGH MainMenuStr
8049A1 F583              MOV     DPH,A
8049A3 A5128007C0        ECALL   ?C?PLDCODE
8049A8 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8049AB A5128007B6        ECALL   ?C?PSTXDATA
8049B0 EF                MOV     A,R7
8049B1 25E0              ADD     A,ACC
8049B3 25E0              ADD     A,ACC
8049B5 24B0              ADD     A,#LOW MainMenuStr+03H
8049B7 F582              MOV     DPL,A
8049B9 E4                CLR     A
8049BA 3416              ADDC    A,#HIGH MainMenuStr+03H
8049BC F583              MOV     DPH,A
8049BE E4                CLR     A
8049BF 93                MOVC    A,@A+DPTR
8049C0 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8049C3 F0                MOVX    @DPTR,A
8049C4 7D01              MOV     R5,#01H
8049C6 E4                CLR     A
  232: 					}
8049C7 024A5D            LJMP    ?C0086?MAINTMENU
8049CA         ?C0044?MAINTMENU:
  233: 					else
  234: 					{												
  235: 						if( firstNum == ( MENU_COUNT(MainMenuStr)-1 ) )				
8049CA 90159C            MOV     DPTR,#firstNum
8049CD E0                MOVX    A,@DPTR
8049CE B40517            CJNE    A,#05H,?C0048?MAINTMENU
  236: 							DisplayStr( 0, 1, 1, MainMenuStr[0].str, MainMenuStr[0].len );
8049D1 D21A              SETB    ?_DisplayStr?BIT
8049D3 9016AD            MOV     DPTR,#MainMenuStr
8049D6 A5128007C0        ECALL   ?C?PLDCODE
8049DB 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8049DE A5128007B6        ECALL   ?C?PSTXDATA
8049E3 9016B0            MOV     DPTR,#MainMenuStr+03H
8049E6 802F              SJMP    ?C0082?MAINTMENU
8049E8         ?C0048?MAINTMENU:
  237: 						else						
  238: 							DisplayStr( 0, 1, 1, MainMenuStr[firstNum + 1].str, MainMenuStr[firstNum + 1].len );
8049E8 D21A              SETB    ?_DisplayStr?BIT
8049EA 90159C            MOV     DPTR,#firstNum
8049ED E0                MOVX    A,@DPTR
8049EE FF                MOV     R7,A
8049EF 25E0              ADD     A,ACC
8049F1 25E0              ADD     A,ACC
8049F3 24B1              ADD     A,#LOW MainMenuStr+04H
8049F5 F582              MOV     DPL,A
8049F7 E4                CLR     A
8049F8 3416              ADDC    A,#HIGH MainMenuStr+04H
8049FA F583              MOV     DPH,A
8049FC A5128007C0        ECALL   ?C?PLDCODE
804A01 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804A04 A5128007B6        ECALL   ?C?PSTXDATA
804A09 EF                MOV     A,R7
804A0A 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 129


804A0C 25E0              ADD     A,ACC
804A0E 24B4              ADD     A,#LOW MainMenuStr+07H
804A10 F582              MOV     DPL,A
804A12 E4                CLR     A
804A13 3416              ADDC    A,#HIGH MainMenuStr+07H
804A15 F583              MOV     DPH,A
804A17         
804A17 E4                CLR     A
804A18 93                MOVC    A,@A+DPTR
804A19 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804A1C F0                MOVX    @DPTR,A
804A1D 7D01              MOV     R5,#01H
804A1F E4                CLR     A
804A20 FF                MOV     R7,A
804A21 A51280885F        ECALL   _DisplayStr
804A26         ?C0049?MAINTMENU:
  239: 						DisplayStr( 0, 0, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
804A26 D21A              SETB    ?_DisplayStr?BIT
804A28 90159C            MOV     DPTR,#firstNum
804A2B E0                MOVX    A,@DPTR
804A2C FF                MOV     R7,A
804A2D 25E0              ADD     A,ACC
804A2F 25E0              ADD     A,ACC
804A31 24AD              ADD     A,#LOW MainMenuStr
804A33 F582              MOV     DPL,A
804A35 E4                CLR     A
804A36 3416              ADDC    A,#HIGH MainMenuStr
804A38 F583              MOV     DPH,A
804A3A A5128007C0        ECALL   ?C?PLDCODE
804A3F 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804A42 A5128007B6        ECALL   ?C?PSTXDATA
804A47 EF                MOV     A,R7
804A48 25E0              ADD     A,ACC
804A4A 25E0              ADD     A,ACC
804A4C 24B0              ADD     A,#LOW MainMenuStr+03H
804A4E F582              MOV     DPL,A
804A50 E4                CLR     A
804A51 3416              ADDC    A,#HIGH MainMenuStr+03H
804A53 F583              MOV     DPH,A
804A55 E4                CLR     A
804A56 93                MOVC    A,@A+DPTR
804A57 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804A5A F0                MOVX    @DPTR,A
804A5B E4                CLR     A
804A5C FD                MOV     R5,A
804A5D         
804A5D FF                MOV     R7,A
804A5E A51280885F        ECALL   _DisplayStr
  240: 					}				
804A63         ?C0047?MAINTMENU:
  241: 					DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//第二行整光标
804A63 90159D            MOV     DPTR,#LineNum
804A66 A512808F91        ECALL   ?L?COM0011
  242: 					ClearKey();	
  243: 					break;
  244: 			}
804A6B         ?C0005?MAINTMENU:
  245: 			CoreProcessCycle();//让出时间片
804A6B A5128082D7        ECALL   CoreProcessCycle
  246: 			DelayMs( 10 );
804A70 7F0A              MOV     R7,#0AH
804A72 A512807EAB        ECALL   _DelayMs
  247: 		}	
804A77 0245F4            LJMP    ?C0003?MAINTMENU
804A7A         ?C0004?MAINTMENU:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 130


  248: 		WaitForWork( 300, &Lcd );
804A7A E4                CLR     A
804A7B 7F2C              MOV     R7,#02CH
804A7D 7E01              MOV     R6,#01H
804A7F FD                MOV     R5,A
804A80 FC                MOV     R4,A
804A81 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
804A84 7423              MOV     A,#HIGH Lcd
804A86 F0                MOVX    @DPTR,A
804A87 A3                INC     DPTR
804A88 7469              MOV     A,#LOW Lcd
804A8A F0                MOVX    @DPTR,A
804A8B A512808338        ECALL   _WaitForWork
  249: 		DisplayClear();//清屏操作		
804A90 A512812D8F        ECALL   DisplayClear
  250: 		DisplayCursorState( 0, 0, 1, 0, 1 );//无光标
804A95 D21A              SETB    ?_DisplayCursorState?BIT
804A97 E4                CLR     A
804A98 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
804A9B F0                MOVX    @DPTR,A
804A9C D21B              SETB    ?_DisplayCursorState?BIT+01H
804A9E FD                MOV     R5,A
804A9F FF                MOV     R7,A
804AA0 A51280897C        ECALL   _DisplayCursorState
  251: 		DisplayCursorState( 1, 0, 1, 0, 1 );//无光标
804AA5 D21A              SETB    ?_DisplayCursorState?BIT
804AA7 E4                CLR     A
804AA8 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
804AAB F0                MOVX    @DPTR,A
804AAC D21B              SETB    ?_DisplayCursorState?BIT+01H
804AAE FD                MOV     R5,A
804AAF 7F01              MOV     R7,#01H
804AB1 A51280897C        ECALL   _DisplayCursorState
  252: 		//////////////////
  253: //		Trace("\n GoodsSetSave3 = %bu", GoodsSetSave );
  254: 		if( ( GoodsSetSave ) || ( SystemSave ) )
804AB6 902DF8            MOV     DPTR,#GoodsSetSave
804AB9 E0                MOVX    A,@DPTR
804ABA 7003              JNZ     ?C0051?MAINTMENU
804ABC 302E4E            JNB     SystemSave,?C0050?MAINTMENU
804ABF         ?C0051?MAINTMENU:
  255: 		{
  256: 		#ifdef _CHINA_
  257: 			DisplayStr( 0, 0, 1, "  \xd5\xfd在保存", 10 );	
  258: 		#else
  259: 			DisplayStr( 0, 0, 1, "  Saving...", 11 );	
804ABF D21A              SETB    ?_DisplayStr?BIT
804AC1 7B80              MOV     R3,#BYTE2 0801679H
804AC3 7A16              MOV     R2,#HIGH 0801679H
804AC5 7979              MOV     R1,#LOW 0801679H
804AC7 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804ACA A5128007B6        ECALL   ?C?PSTXDATA
804ACF 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804AD2 740B              MOV     A,#0BH
804AD4 A51280885B        ECALL   ?L?COM0007
  260: 		#endif
  261: 			DisplayStr( 0, 1, 1, " ", 1 );
804AD9 D21A              SETB    ?_DisplayStr?BIT
804ADB 7B80              MOV     R3,#BYTE2 0801685H
804ADD 7A16              MOV     R2,#HIGH 0801685H
804ADF 7985              MOV     R1,#LOW 0801685H
804AE1 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804AE4 A5128007B6        ECALL   ?C?PSTXDATA
804AE9 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804AEC 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 131


804AEE F0                MOVX    @DPTR,A
804AEF FD                MOV     R5,A
804AF0 E4                CLR     A
804AF1 FF                MOV     R7,A
804AF2 A51280885F        ECALL   _DisplayStr
  262: 			WaitForWork( 1500, &Lcd );
804AF7 E4                CLR     A
804AF8 7FDC              MOV     R7,#0DCH
804AFA 7E05              MOV     R6,#05H
804AFC FD                MOV     R5,A
804AFD FC                MOV     R4,A
804AFE 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
804B01 7423              MOV     A,#HIGH Lcd
804B03 F0                MOVX    @DPTR,A
804B04 A3                INC     DPTR
804B05 7469              MOV     A,#LOW Lcd
804B07 F0                MOVX    @DPTR,A
804B08 A512808338        ECALL   _WaitForWork
  263: 		}	
804B0D         ?C0050?MAINTMENU:
  264: 		///////////
  265: 	//	Trace("\n GoodsSetSave4 = %bu", GoodsSetSave );
  266: 		if( GoodsSetSave )
804B0D 902DF8            MOV     DPTR,#GoodsSetSave
804B10 E0                MOVX    A,@DPTR
804B11 7003              JNZ     $ + 5H
804B13 024BD7            LJMP    ?C0052?MAINTMENU
  267: 		{
  268: 	//		Trace("\n GoodsSetSave5 = %bu", GoodsSetSave );
  269: 			//写货道参数
  270: 			SaveGoodsSet();	
804B16 A51280DA64        ECALL   SaveGoodsSet
  271: 			WaitForWork( 100, NULL );
804B1B E4                CLR     A
804B1C 7F64              MOV     R7,#064H
804B1E FE                MOV     R6,A
804B1F A512808330        ECALL   ?L?COM000D
  272: 			memset( TempGoodsWaySetVal, 0, sizeof( TempGoodsWaySetVal ) );
804B24 7E01              MOV     R6,#01H
804B26 7F40              MOV     R7,#040H
804B28 7D00              MOV     R5,#00H
804B2A 7B00              MOV     R3,#?C?XDATASEG
804B2C 7A15              MOV     R2,#HIGH TempGoodsWaySetVal
804B2E 79A1              MOV     R1,#LOW TempGoodsWaySetVal
804B30 A5128008A6        ECALL   ?C?MEMSET
  273: 			MovFlashToSram( ADDRF_GOODSWAYS_SET , ( unsigned char xdata * )TempGoodsWaySetVal , sizeof( TempGoodsWaySetVal
>>  ) );
804B35 7F80              MOV     R7,#080H
804B37 7E02              MOV     R6,#02H
804B39 7D08              MOV     R5,#08H
804B3B 7C00              MOV     R4,#00H
804B3D 753815            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TempGoodsWaySetVal
804B40 7539A1            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TempGoodsWaySetVal
804B43 A51280D888        ECALL   ?L?COM0031
  274: 		//	TempGoodsWaySetVal[2].GoodsCurrentSum = 324;
  275: 			for( i = 0; i < GOODSWAYNUM; i ++ )
804B48 E4                CLR     A
804B49 90159E            MOV     DPTR,#i
804B4C F0                MOVX    @DPTR,A
804B4D         ?C0053?MAINTMENU:
  276: 			{
  277: 		//		Trace("\n GoodsWaySetVal[%bu].WayState = %bu", i ,GoodsWaySetVal[i].WayState );
  278: 		//		Trace("\n TempGoodsWaySetVal[%bu].WayState = %bu",i, TempGoodsWaySetVal[i].WayState );
  279: 				if( ( GoodsWaySetVal[i].GoodsCurrentSum != TempGoodsWaySetVal[i].GoodsCurrentSum ) || \
804B4D 90159E            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 132


804B50 E0                MOVX    A,@DPTR
804B51 FF                MOV     R7,A
804B52 75F005            MOV     B,#05H
804B55 9015A5            MOV     DPTR,#TempGoodsWaySetVal+04H
804B58 A51280079F        ECALL   ?C?OFFXADD
804B5D E0                MOVX    A,@DPTR
804B5E FE                MOV     R6,A
804B5F 75F005            MOV     B,#05H
804B62 EF                MOV     A,R7
804B63 900008            MOV     DPTR,#GoodsWaySetVal+04H
804B66 A51280079F        ECALL   ?C?OFFXADD
804B6B E0                MOVX    A,@DPTR
804B6C 6E                XRL     A,R6
804B6D 7057              JNZ     ?C0054?MAINTMENU
804B6F 90159E            MOV     DPTR,#i
804B72 E0                MOVX    A,@DPTR
804B73 75F005            MOV     B,#05H
804B76 9015A2            MOV     DPTR,#TempGoodsWaySetVal+01H
804B79 A51280079F        ECALL   ?C?OFFXADD
804B7E E0                MOVX    A,@DPTR
804B7F FE                MOV     R6,A
804B80 75F005            MOV     B,#05H
804B83 EF                MOV     A,R7
804B84 900005            MOV     DPTR,#GoodsWaySetVal+01H
804B87 A51280079F        ECALL   ?C?OFFXADD
804B8C E0                MOVX    A,@DPTR
804B8D B50636            CJNE    A,AR6,?C0054?MAINTMENU
804B90 90159E            MOV     DPTR,#i
804B93 E0                MOVX    A,@DPTR
804B94 75F005            MOV     B,#05H
804B97 9015A3            MOV     DPTR,#TempGoodsWaySetVal+02H
804B9A A51280079F        ECALL   ?C?OFFXADD
804B9F E0                MOVX    A,@DPTR
804BA0 FC                MOV     R4,A
804BA1 A3                INC     DPTR
804BA2 E0                MOVX    A,@DPTR
804BA3 FD                MOV     R5,A
804BA4 75F005            MOV     B,#05H
804BA7 EF                MOV     A,R7
804BA8 900006            MOV     DPTR,#GoodsWaySetVal+02H
804BAB A51280079F        ECALL   ?C?OFFXADD
804BB0 E0                MOVX    A,@DPTR
804BB1 FE                MOV     R6,A
804BB2 A3                INC     DPTR
804BB3 E0                MOVX    A,@DPTR
804BB4 B5050F            CJNE    A,AR5,?C0054?MAINTMENU
804BB7 EE                MOV     A,R6
804BB8 B5040B            CJNE    A,AR4,?C0054?MAINTMENU
  280: 					( GoodsWaySetVal[i].WayState != TempGoodsWaySetVal[i].WayState ) || \
  281: 					( GoodsWaySetVal[i].Price != TempGoodsWaySetVal[i].Price ) )
  282: 					break;
  283: 			}
804BBB         ?C0055?MAINTMENU:
804BBB 90159E            MOV     DPTR,#i
804BBE E0                MOVX    A,@DPTR
804BBF 04                INC     A
804BC0 F0                MOVX    @DPTR,A
804BC1 E0                MOVX    A,@DPTR
804BC2 6440              XRL     A,#040H
804BC4 7087              JNZ     ?C0053?MAINTMENU
804BC6         ?C0054?MAINTMENU:
  284: 			if( i != GOODSWAYNUM )//不相同
804BC6 90159E            MOV     DPTR,#i
804BC9 E0                MOVX    A,@DPTR
804BCA 6440              XRL     A,#040H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 133


804BCC 6004              JZ      ?C0058?MAINTMENU
  285: 			{
  286: 				Trace("\n GoodsWaySetVal error" );
  287: 				ErrFlag = 1;	
804BCE A3                INC     DPTR
804BCF 7401              MOV     A,#01H
804BD1 F0                MOVX    @DPTR,A
  288: 			}
804BD2         ?C0058?MAINTMENU:
  289: 			GoodsSetSave = 0;
804BD2 E4                CLR     A
804BD3 902DF8            MOV     DPTR,#GoodsSetSave
804BD6 F0                MOVX    @DPTR,A
  290: 		}
804BD7         ?C0052?MAINTMENU:
  291: 		if( SystemSave )
804BD7 202E03            JB      SystemSave,$ + 6H
804BDA 024CCB            LJMP    ?C0059?MAINTMENU
  292: 		{
  293: 			//写系统参数
  294: 			SaveGlobalParam();	
804BDD A51280DC7C        ECALL   SaveGlobalParam
  295: 			WaitForWork( 100, NULL );	
804BE2 E4                CLR     A
804BE3 7F64              MOV     R7,#064H
804BE5 FE                MOV     R6,A
804BE6 A512808330        ECALL   ?L?COM000D
  296: 			//检测定入flash中的数据
  297: 			memset( &TempSystemParameter, 0, sizeof( TempSystemParameter ) );		
804BEB 7E00              MOV     R6,#00H
804BED 7F4E              MOV     R7,#04EH
804BEF 7D00              MOV     R5,#00H
804BF1 7B00              MOV     R3,#?C?XDATASEG
804BF3 7A16              MOV     R2,#HIGH TempSystemParameter
804BF5 79E1              MOV     R1,#LOW TempSystemParameter
804BF7 A5128008A6        ECALL   ?C?MEMSET
  298: 			//本机系统参数
  299: 			MovFlashToSram( ADDRF_SYSTEMPARAM , ( unsigned char xdata * )&TempSystemParameter , sizeof(struct SYSTEMPARAME
>> TER) );	
804BFC 7F80              MOV     R7,#080H
804BFE 7E01              MOV     R6,#01H
804C00 7D08              MOV     R5,#08H
804C02 7C00              MOV     R4,#00H
804C04 753816            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TempSystemParameter
804C07 7539E1            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TempSystemParameter
804C0A 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
804C0D 753B4E            MOV     ?_MovFlashToSram?BYTE+07H,#04EH
804C10 A51280D88E        ECALL   _MovFlashToSram
  300: 					
  301: 			if( ( SystemParameter.RefundPermission != TempSystemParameter.RefundPermission ) || \
804C15 9016E1            MOV     DPTR,#TempSystemParameter
804C18 E0                MOVX    A,@DPTR
804C19 FF                MOV     R7,A
804C1A 900420            MOV     DPTR,#SystemParameter
804C1D E0                MOVX    A,@DPTR
804C1E 6F                XRL     A,R7
804C1F 6003              JZ      $ + 5H
804C21 024CC3            LJMP    ?C0061?MAINTMENU
804C24 9016E2            MOV     DPTR,#TempSystemParameter+01H
804C27 E0                MOVX    A,@DPTR
804C28 FE                MOV     R6,A
804C29 A3                INC     DPTR
804C2A E0                MOVX    A,@DPTR
804C2B FF                MOV     R7,A
804C2C 900421            MOV     DPTR,#SystemParameter+01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 134


804C2F E0                MOVX    A,@DPTR
804C30 6E                XRL     A,R6
804C31 7003              JNZ     ?C0075?MAINTMENU
804C33 A3                INC     DPTR
804C34 E0                MOVX    A,@DPTR
804C35 6F                XRL     A,R7
804C36         ?C0075?MAINTMENU:
804C36 6003              JZ      $ + 5H
804C38 024CC3            LJMP    ?C0061?MAINTMENU
804C3B 9016E4            MOV     DPTR,#TempSystemParameter+03H
804C3E E0                MOVX    A,@DPTR
804C3F FE                MOV     R6,A
804C40 A3                INC     DPTR
804C41 E0                MOVX    A,@DPTR
804C42 FF                MOV     R7,A
804C43 900423            MOV     DPTR,#SystemParameter+03H
804C46 E0                MOVX    A,@DPTR
804C47 6E                XRL     A,R6
804C48 7003              JNZ     ?C0076?MAINTMENU
804C4A A3                INC     DPTR
804C4B E0                MOVX    A,@DPTR
804C4C 6F                XRL     A,R7
804C4D         ?C0076?MAINTMENU:
804C4D 7074              JNZ     ?C0061?MAINTMENU
804C4F 9016E6            MOV     DPTR,#TempSystemParameter+05H
804C52 E0                MOVX    A,@DPTR
804C53 FE                MOV     R6,A
804C54 A3                INC     DPTR
804C55 E0                MOVX    A,@DPTR
804C56 FF                MOV     R7,A
804C57 900425            MOV     DPTR,#SystemParameter+05H
804C5A E0                MOVX    A,@DPTR
804C5B 6E                XRL     A,R6
804C5C 7003              JNZ     ?C0077?MAINTMENU
804C5E A3                INC     DPTR
804C5F E0                MOVX    A,@DPTR
804C60 6F                XRL     A,R7
804C61         ?C0077?MAINTMENU:
804C61 7060              JNZ     ?C0061?MAINTMENU
804C63 9016E8            MOV     DPTR,#TempSystemParameter+07H
804C66 E0                MOVX    A,@DPTR
804C67 FF                MOV     R7,A
804C68 900427            MOV     DPTR,#SystemParameter+07H
804C6B E0                MOVX    A,@DPTR
804C6C 6F                XRL     A,R7
804C6D 7054              JNZ     ?C0061?MAINTMENU
804C6F 9016E9            MOV     DPTR,#TempSystemParameter+08H
804C72 E0                MOVX    A,@DPTR
804C73 FF                MOV     R7,A
804C74 900428            MOV     DPTR,#SystemParameter+08H
804C77 E0                MOVX    A,@DPTR
804C78 6F                XRL     A,R7
804C79 7048              JNZ     ?C0061?MAINTMENU
804C7B 9016EA            MOV     DPTR,#TempSystemParameter+09H
804C7E E0                MOVX    A,@DPTR
804C7F FE                MOV     R6,A
804C80 A3                INC     DPTR
804C81 E0                MOVX    A,@DPTR
804C82 FF                MOV     R7,A
804C83 900429            MOV     DPTR,#SystemParameter+09H
804C86 E0                MOVX    A,@DPTR
804C87 B50639            CJNE    A,AR6,?C0061?MAINTMENU
804C8A A3                INC     DPTR
804C8B E0                MOVX    A,@DPTR
804C8C B50734            CJNE    A,AR7,?C0061?MAINTMENU
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 135


804C8F 9016EC            MOV     DPTR,#TempSystemParameter+0BH
804C92 E0                MOVX    A,@DPTR
804C93 FE                MOV     R6,A
804C94 A3                INC     DPTR
804C95 E0                MOVX    A,@DPTR
804C96 FF                MOV     R7,A
804C97 90042B            MOV     DPTR,#SystemParameter+0BH
804C9A E0                MOVX    A,@DPTR
804C9B B50625            CJNE    A,AR6,?C0061?MAINTMENU
804C9E A3                INC     DPTR
804C9F E0                MOVX    A,@DPTR
804CA0 B50720            CJNE    A,AR7,?C0061?MAINTMENU
804CA3 9016F0            MOV     DPTR,#TempSystemParameter+0FH
804CA6 E0                MOVX    A,@DPTR
804CA7 FE                MOV     R6,A
804CA8 A3                INC     DPTR
804CA9 E0                MOVX    A,@DPTR
804CAA FF                MOV     R7,A
804CAB 90042F            MOV     DPTR,#SystemParameter+0FH
804CAE E0                MOVX    A,@DPTR
804CAF B50611            CJNE    A,AR6,?C0061?MAINTMENU
804CB2 A3                INC     DPTR
804CB3 E0                MOVX    A,@DPTR
804CB4 B5070C            CJNE    A,AR7,?C0061?MAINTMENU
804CB7 90172E            MOV     DPTR,#TempSystemParameter+04DH
804CBA E0                MOVX    A,@DPTR
804CBB FF                MOV     R7,A
804CBC 90046D            MOV     DPTR,#SystemParameter+04DH
804CBF E0                MOVX    A,@DPTR
804CC0 6F                XRL     A,R7
804CC1 6006              JZ      ?C0060?MAINTMENU
804CC3         ?C0061?MAINTMENU:
  302: 				( SystemParameter.HopperCoinPrice1 != TempSystemParameter.HopperCoinPrice1 ) || \
  303: 				( SystemParameter.HopperCoinPrice2 != TempSystemParameter.HopperCoinPrice2 ) || \
  304: 				( SystemParameter.HopperCoinPrice3 != TempSystemParameter.HopperCoinPrice3 ) || \
  305: 				( SystemParameter.BillNo != TempSystemParameter.BillNo ) || \
  306: 				( SystemParameter.IsMuliVerd != TempSystemParameter.IsMuliVerd ) || \
  307: 				( SystemParameter.Min != TempSystemParameter.Min ) || \
  308: 				( SystemParameter.BanknoteMax != TempSystemParameter.BanknoteMax ) || \
  309: 				( SystemParameter.NotOutMax != TempSystemParameter.NotOutMax ) || \
  310: 				( SystemParameter.Checkbyte != TempSystemParameter.Checkbyte ) )
  311: 			{
  312: 				Trace("\n SystemParameter error" );
  313: 				ErrFlag = 1;
804CC3 90159F            MOV     DPTR,#ErrFlag
804CC6 7401              MOV     A,#01H
804CC8 F0                MOVX    @DPTR,A
  314: 			}
804CC9         ?C0060?MAINTMENU:
  315: 			SystemSave = 0;
804CC9 C22E              CLR     SystemSave
  316: 		}
804CCB         ?C0059?MAINTMENU:
  317: 		if( ErrFlag )
804CCB 90159F            MOV     DPTR,#ErrFlag
804CCE E0                MOVX    A,@DPTR
804CCF 7003              JNZ     $ + 5H
804CD1 024D67            LJMP    ?C0062?MAINTMENU
  318: 		{
  319: 			ClearKey();	
804CD4 A512808FA5        ECALL   ClearKey
  320: 		 #ifdef _CHINA_
  321: 			DisplayStr( 0, 0, 1, "保存失败，重新设置?", 19 );	
  322: 		 #else
  323: 		 	DisplayStr( 0, 0, 1, "Save failed,reenter?", 20 );	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 136


804CD9 D21A              SETB    ?_DisplayStr?BIT
804CDB 7B80              MOV     R3,#BYTE2 0801687H
804CDD 7A16              MOV     R2,#HIGH 0801687H
804CDF 7987              MOV     R1,#LOW 0801687H
804CE1 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804CE4 A5128007B6        ECALL   ?C?PSTXDATA
804CE9 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804CEC 7414              MOV     A,#014H
804CEE A51280885B        ECALL   ?L?COM0007
  324: 		 #endif			
  325: 			DisplayStr( 0, 1, 1, "  ENTER   CANCEL", 16 );
804CF3 D21A              SETB    ?_DisplayStr?BIT
804CF5 7B80              MOV     R3,#BYTE2 080169CH
804CF7 7A16              MOV     R2,#HIGH 080169CH
804CF9 799C              MOV     R1,#LOW 080169CH
804CFB 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804CFE A5128007B6        ECALL   ?C?PSTXDATA
804D03 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804D06 7410              MOV     A,#010H
804D08 F0                MOVX    @DPTR,A
804D09 7D01              MOV     R5,#01H
804D0B E4                CLR     A
804D0C FF                MOV     R7,A
804D0D A51280885F        ECALL   _DisplayStr
  326: 			LzjSecTimer= 15;
804D12 751D0F            MOV     LzjSecTimer,#0FH
  327: 			i = 0;
804D15 E4                CLR     A
804D16 90159E            MOV     DPTR,#i
804D19 F0                MOVX    @DPTR,A
804D1A         ?C0063?MAINTMENU:
  328: 			while( LzjSecTimer )
804D1A E51D              MOV     A,LzjSecTimer
804D1C 603B              JZ      ?C0064?MAINTMENU
  329: 			{
  330: 				SchedulerProcess();
804D1E A5128090B6        ECALL   SchedulerProcess
  331: 				key = GetKey();
804D23 A5128096D1        ECALL   GetKey
804D28 9015A0            MOV     DPTR,#key
804D2B EF                MOV     A,R7
804D2C F0                MOVX    @DPTR,A
  332: 				if ( key == KEY_NULL ) 
804D2D F4                CPL     A
804D2E 60EA              JZ      ?C0063?MAINTMENU
  333: 					continue;
804D30         ?C0065?MAINTMENU:
  334: 				switch ( key )
804D30 9015A0            MOV     DPTR,#key
804D33 E0                MOVX    A,@DPTR
804D34 24E5              ADD     A,#0E5H
804D36 6010              JZ      ?C0068?MAINTMENU
804D38 240E              ADD     A,#0EH
804D3A 70DE              JNZ     ?C0063?MAINTMENU
  335: 			 	{			
  336: 					case KEY_SUBMIT:			
804D3C         ?C0067?MAINTMENU:
  337: 						ErrFlag = 0;
804D3C E4                CLR     A
804D3D 90159F            MOV     DPTR,#ErrFlag
804D40 F0                MOVX    @DPTR,A
  338: 						i = 1;
804D41 90159E            MOV     DPTR,#i
804D44 04                INC     A
804D45 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 137


  339: 						break;
804D46 800A              SJMP    ?C0066?MAINTMENU
  340: 					case KEY_CANCEL:				
804D48         ?C0068?MAINTMENU:
  341: 						ErrFlag = 1 ;					
804D48 90159F            MOV     DPTR,#ErrFlag
804D4B 7401              MOV     A,#01H
804D4D F0                MOVX    @DPTR,A
  342: 						i = 1;
804D4E 90159E            MOV     DPTR,#i
804D51 F0                MOVX    @DPTR,A
  343: 						break;
  344: 					default:
  345: 						continue;
  346: 				}	
804D52         ?C0066?MAINTMENU:
  347: 				if( i == 1 )
804D52 90159E            MOV     DPTR,#i
804D55 E0                MOVX    A,@DPTR
804D56 B401C1            CJNE    A,#01H,?C0063?MAINTMENU
  348: 					break;
  349: 			}
804D59         ?C0064?MAINTMENU:
  350: 			if( LzjSecTimer == 0 )
804D59 E51D              MOV     A,LzjSecTimer
804D5B 6003              JZ      $ + 5H
804D5D 0245A6            LJMP    ?C0001?MAINTMENU
  351: 				ErrFlag = 0;
804D60         
804D60 90159F            MOV     DPTR,#ErrFlag
804D63 F0                MOVX    @DPTR,A
  352: 		}
804D64 0245A6            LJMP    ?C0001?MAINTMENU
804D67         ?C0062?MAINTMENU:
  353: 		else
  354: 			ErrFlag = 1;
804D67 90159F            MOV     DPTR,#ErrFlag
804D6A 7401              MOV     A,#01H
804D6C F0                MOVX    @DPTR,A
  355: 	}
804D6D 0245A6            LJMP    ?C0001?MAINTMENU
804D70         ?C0002?MAINTMENU:
  356: 	ClearKey();		
804D70 A502808FA5        EJMP    ClearKey
----- FUNCTION mainmenu (END) -------


----- FUNCTION _DispDeviceStatus (BEGIN) -----
 FILE: 'devicecheck.c'
  627: u_char DispDeviceStatus( u_char Index, u_char y, bit PrintFlag )
  628: {
804D75 90174A            MOV     DPTR,#y
804D78 ED                MOV     A,R5
804D79 F0                MOVX    @DPTR,A
804D7A 901749            MOV     DPTR,#Index
804D7D EF                MOV     A,R7
804D7E F0                MOVX    @DPTR,A
  629: 	u_char xdata yStateus = 0;
  630: 	u_char xdata uline[20];
804D7F E4                CLR     A
804D80 90174B            MOV     DPTR,#yStateus
804D83 F0                MOVX    @DPTR,A
  631: 	
  632: 	switch( Index )
804D84 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 138


804D85 14                DEC     A
804D86 6020              JZ      ?C0123?DEVICECHECK
804D88 14                DEC     A
804D89 602F              JZ      ?C0128?DEVICECHECK
804D8B 14                DEC     A
804D8C 6044              JZ      ?C0135?DEVICECHECK
804D8E 14                DEC     A
804D8F 6059              JZ      ?C0142?DEVICECHECK
804D91 2404              ADD     A,#04H
804D93 6003              JZ      $ + 5H
804D95 024E17            LJMP    ?C0117?DEVICECHECK
  633: 	{
  634: 		case 0://纸币器状态，Bit 7 -- 无此模块；Bit 6~1 保留；Bit 0 -- 故障
804D98         ?C0118?DEVICECHECK:
  635: 			if( DeviceStatus.BillAccepter & 128 )//Bit 7
804D98 900B1B            MOV     DPTR,#DeviceStatus
804D9B E0                MOVX    A,@DPTR
804D9C FF                MOV     R7,A
804D9D 30E702            JNB     ACC.7,?C0119?DEVICECHECK
  636: 				yStateus = 2;//无此模块
804DA0 8050              SJMP    ?C0306?DEVICECHECK
804DA2         ?C0119?DEVICECHECK:
  637: 			else if( DeviceStatus.BillAccepter & 1 )//Bit 7
804DA2 EF                MOV     A,R7
804DA3 30E06C            JNB     ACC.0,?C0309?DEVICECHECK
  638:  		    	yStateus = 1;//故障
804DA6 8062              SJMP    ?C0308?DEVICECHECK
  639: 			else
  640: 				yStateus = 0;//正常
  641: 		break;
  642: 		case 1://收硬币器状态，Bit 7 -- 无此模块；Bit 6~1 保留；Bit 0 -- 故障；
804DA8         ?C0123?DEVICECHECK:
  643: 			if( DeviceStatus.CoinAccepter & 128 )//Bit 7
804DA8 900B1C            MOV     DPTR,#DeviceStatus+01H
804DAB E0                MOVX    A,@DPTR
804DAC FF                MOV     R7,A
804DAD 30E702            JNB     ACC.7,?C0124?DEVICECHECK
  644: 				yStateus = 2;//无此模块
804DB0         
804DB0 8040              SJMP    ?C0306?DEVICECHECK
804DB2         ?C0124?DEVICECHECK:
  645: 			else if( DeviceStatus.CoinAccepter & 1 )//Bit 7
804DB2 EF                MOV     A,R7
804DB3 30E002            JNB     ACC.0,?C0126?DEVICECHECK
  646:  		    	yStateus = 1;//故障
804DB6         
804DB6 8052              SJMP    ?C0308?DEVICECHECK
804DB8         ?C0126?DEVICECHECK:
  647: 			else
  648: 				yStateus = 0;//正常
804DB8         
  649: 		break;
804DB8 8058              SJMP    ?C0309?DEVICECHECK
  650: 		case 2: // //#1退币器，Bit 7 -- 无此模块；Bit 6~2 保留；Bit 1 -- 缺币；Bit 0 -- 故障；
804DBA         ?C0128?DEVICECHECK:
  651: 			if( DeviceStatus.ChangeUnit1 & 128 )//Bit 7
804DBA 900B1D            MOV     DPTR,#DeviceStatus+02H
804DBD E0                MOVX    A,@DPTR
804DBE FF                MOV     R7,A
804DBF 30E702            JNB     ACC.7,?C0129?DEVICECHECK
  652: 				yStateus = 2;//无此模块
804DC2         
804DC2 802E              SJMP    ?C0306?DEVICECHECK
804DC4         ?C0129?DEVICECHECK:
  653: 			else if( DeviceStatus.ChangeUnit1 & 2 )//Bit 7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 139


804DC4 EF                MOV     A,R7
804DC5 30E102            JNB     ACC.1,?C0131?DEVICECHECK
  654:  		    	yStateus = 3;//缺币
804DC8 8034              SJMP    ?C0307?DEVICECHECK
804DCA         ?C0131?DEVICECHECK:
  655: 			else if( DeviceStatus.ChangeUnit1 & 1 )//Bit 7
804DCA EF                MOV     A,R7
804DCB 30E002            JNB     ACC.0,?C0133?DEVICECHECK
  656:  		    	yStateus = 1;//故障
804DCE         
804DCE 803A              SJMP    ?C0308?DEVICECHECK
804DD0         ?C0133?DEVICECHECK:
  657: 			else
  658: 				yStateus = 0;//正常
804DD0         
  659: 		break;		
804DD0 8040              SJMP    ?C0309?DEVICECHECK
  660: 		case 3: // //#1退币器，Bit 7 -- 无此模块；Bit 6~2 保留；Bit 1 -- 缺币；Bit 0 -- 故障；
804DD2         ?C0135?DEVICECHECK:
  661: 			if( DeviceStatus.ChangeUnit2 & 128 )//Bit 7
804DD2 900B1E            MOV     DPTR,#DeviceStatus+03H
804DD5 E0                MOVX    A,@DPTR
804DD6 FF                MOV     R7,A
804DD7 30E702            JNB     ACC.7,?C0136?DEVICECHECK
  662: 				yStateus = 2;//无此模块
804DDA         
804DDA 8016              SJMP    ?C0306?DEVICECHECK
804DDC         ?C0136?DEVICECHECK:
  663: 			else if( DeviceStatus.ChangeUnit2 & 2 )//Bit 7
804DDC EF                MOV     A,R7
804DDD 30E102            JNB     ACC.1,?C0138?DEVICECHECK
  664:  		    	yStateus = 3;//缺币
804DE0         
804DE0 801C              SJMP    ?C0307?DEVICECHECK
804DE2         ?C0138?DEVICECHECK:
  665: 			else if( DeviceStatus.ChangeUnit2 & 1 )//Bit 7
804DE2 EF                MOV     A,R7
804DE3 30E002            JNB     ACC.0,?C0140?DEVICECHECK
  666:  		    	yStateus = 1;//故障
804DE6         
804DE6 8022              SJMP    ?C0308?DEVICECHECK
804DE8         ?C0140?DEVICECHECK:
  667: 			else
  668: 				yStateus = 0;//正常
804DE8         
  669: 		break;
804DE8 8028              SJMP    ?C0309?DEVICECHECK
  670: 		case 4://#1退币器，Bit 7 -- 无此模块；Bit 6~2 保留；Bit 1 -- 缺币；Bit 0 -- 故障；
804DEA         ?C0142?DEVICECHECK:
  671: 			if( DeviceStatus.ChangeUnit3 & 128 )//Bit 7
804DEA 900B1F            MOV     DPTR,#DeviceStatus+04H
804DED E0                MOVX    A,@DPTR
804DEE FF                MOV     R7,A
804DEF 30E708            JNB     ACC.7,?C0143?DEVICECHECK
  672: 				yStateus = 2;//无此模块
804DF2         
804DF2 90174B            MOV     DPTR,#yStateus
804DF5 7402              MOV     A,#02H
804DF7 F0                MOVX    @DPTR,A
804DF8 801D              SJMP    ?C0117?DEVICECHECK
804DFA         ?C0143?DEVICECHECK:
  673: 			else if( DeviceStatus.ChangeUnit3 & 2 )//Bit 7
804DFA EF                MOV     A,R7
804DFB 30E108            JNB     ACC.1,?C0145?DEVICECHECK
  674:  		    	yStateus = 3;//缺币
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 140


804DFE         
804DFE 90174B            MOV     DPTR,#yStateus
804E01 7403              MOV     A,#03H
804E03 F0                MOVX    @DPTR,A
804E04 8011              SJMP    ?C0117?DEVICECHECK
804E06         ?C0145?DEVICECHECK:
  675: 			else if( DeviceStatus.ChangeUnit3 & 1 )//Bit 7
804E06 EF                MOV     A,R7
804E07 30E008            JNB     ACC.0,?C0147?DEVICECHECK
  676:  		    	yStateus = 1;//故障
804E0A         
804E0A 90174B            MOV     DPTR,#yStateus
804E0D 7401              MOV     A,#01H
804E0F F0                MOVX    @DPTR,A
804E10 8005              SJMP    ?C0117?DEVICECHECK
804E12         ?C0147?DEVICECHECK:
  677: 			else
  678: 				yStateus = 0;//正常
804E12         
804E12 E4                CLR     A
804E13 90174B            MOV     DPTR,#yStateus
804E16 F0                MOVX    @DPTR,A
  679: 		break;
  680: 		case 5://手机模块，Bit 7 -- 无此模块；Bit 6~2 保留；Bit 0 -- 故障；
  681: 		/*	if( DeviceStatus.MobileStates & 128 )//Bit 7
  682: 				yStateus = 2;//无此模块			
  683: 			else if( DeviceStatus.MobileStates & 1 )//Bit 7
  684:  		    	yStateus = 1;//故障
  685: 			else
  686: 				yStateus = 0;//正常
  687: 		 */
  688: 		break;
  689:  	}
804E17         ?C0117?DEVICECHECK:
  690: 	if( PrintFlag == 0 )
804E17 301903            JNB     PrintFlag,$ + 6H
804E1A 024EFD            LJMP    ?C0150?DEVICECHECK
  691: 	{
  692: 		memcpy( uline, WMenuStr[Index].str, WMenuStr[Index].len );	
804E1D 901749            MOV     DPTR,#Index
804E20 E0                MOVX    A,@DPTR
804E21 FF                MOV     R7,A
804E22 25E0              ADD     A,ACC
804E24 25E0              ADD     A,ACC
804E26 24E0              ADD     A,#LOW WMenuStr+03H
804E28 F582              MOV     DPL,A
804E2A E4                CLR     A
804E2B 340E              ADDC    A,#HIGH WMenuStr+03H
804E2D F583              MOV     DPH,A
804E2F E4                CLR     A
804E30 93                MOVC    A,@A+DPTR
804E31 FD                MOV     R5,A
804E32 7C00              MOV     R4,#00H
804E34 C004              PUSH    AR4
804E36 C005              PUSH    AR5
804E38 EF                MOV     A,R7
804E39 25E0              ADD     A,ACC
804E3B 25E0              ADD     A,ACC
804E3D 24DD              ADD     A,#LOW WMenuStr
804E3F F582              MOV     DPL,A
804E41 E4                CLR     A
804E42 340E              ADDC    A,#HIGH WMenuStr
804E44 F583              MOV     DPH,A
804E46 A5128007C0        ECALL   ?C?PLDCODE
804E4B 784C              MOV     R0,#LOW uline
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 141


804E4D 7C17              MOV     R4,#HIGH uline
804E4F 7D00              MOV     R5,#?C?XDATASEG
804E51 D007              POP     AR7
804E53 D006              POP     AR6
804E55 A51280052D        ECALL   ?C?COPY
  693: 		memcpy( uline + WMenuStr[Index].len, DeviceStatusStr[yStateus].str, DeviceStatusStr[yStateus].len );
804E5A 90174B            MOV     DPTR,#yStateus
804E5D E0                MOVX    A,@DPTR
804E5E FF                MOV     R7,A
804E5F 25E0              ADD     A,ACC
804E61 25E0              ADD     A,ACC
804E63 2404              ADD     A,#LOW DeviceStatusStr+03H
804E65 F582              MOV     DPL,A
804E67 E4                CLR     A
804E68 340F              ADDC    A,#HIGH DeviceStatusStr+03H
804E6A F583              MOV     DPH,A
804E6C E4                CLR     A
804E6D 93                MOVC    A,@A+DPTR
804E6E FD                MOV     R5,A
804E6F 7C00              MOV     R4,#00H
804E71 C004              PUSH    AR4
804E73 C005              PUSH    AR5
804E75 EF                MOV     A,R7
804E76 25E0              ADD     A,ACC
804E78 25E0              ADD     A,ACC
804E7A 2401              ADD     A,#LOW DeviceStatusStr
804E7C F582              MOV     DPL,A
804E7E E4                CLR     A
804E7F 340F              ADDC    A,#HIGH DeviceStatusStr
804E81 F583              MOV     DPH,A
804E83 A5128007C0        ECALL   ?C?PLDCODE
804E88 C001              PUSH    AR1
804E8A 901749            MOV     DPTR,#Index
804E8D E0                MOVX    A,@DPTR
804E8E 25E0              ADD     A,ACC
804E90 25E0              ADD     A,ACC
804E92 24E0              ADD     A,#LOW WMenuStr+03H
804E94 F582              MOV     DPL,A
804E96 E4                CLR     A
804E97 340E              ADDC    A,#HIGH WMenuStr+03H
804E99 F583              MOV     DPH,A
804E9B E4                CLR     A
804E9C 93                MOVC    A,@A+DPTR
804E9D 244C              ADD     A,#LOW uline
804E9F F9                MOV     R1,A
804EA0 E4                CLR     A
804EA1 3417              ADDC    A,#HIGH uline
804EA3 A801              MOV     R0,AR1
804EA5 FC                MOV     R4,A
804EA6 7D00              MOV     R5,#?C?XDATASEG
804EA8 D001              POP     AR1
804EAA D007              POP     AR7
804EAC D006              POP     AR6
804EAE A51280052D        ECALL   ?C?COPY
  694: 		DisplayStr( 0, y, 1, uline, WMenuStr[Index].len + DeviceStatusStr[yStateus].len );			
804EB3 90174A            MOV     DPTR,#y
804EB6 E0                MOVX    A,@DPTR
804EB7 FD                MOV     R5,A
804EB8 D21A              SETB    ?_DisplayStr?BIT
804EBA 7B00              MOV     R3,#?C?XDATASEG
804EBC 7A17              MOV     R2,#HIGH uline
804EBE 794C              MOV     R1,#LOW uline
804EC0 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804EC3 A5128007B6        ECALL   ?C?PSTXDATA
804EC8 90174B            MOV     DPTR,#yStateus
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 142


804ECB E0                MOVX    A,@DPTR
804ECC 25E0              ADD     A,ACC
804ECE 25E0              ADD     A,ACC
804ED0 2404              ADD     A,#LOW DeviceStatusStr+03H
804ED2 F582              MOV     DPL,A
804ED4 E4                CLR     A
804ED5 340F              ADDC    A,#HIGH DeviceStatusStr+03H
804ED7 F583              MOV     DPH,A
804ED9 E4                CLR     A
804EDA 93                MOVC    A,@A+DPTR
804EDB FF                MOV     R7,A
804EDC 901749            MOV     DPTR,#Index
804EDF E0                MOVX    A,@DPTR
804EE0 25E0              ADD     A,ACC
804EE2 25E0              ADD     A,ACC
804EE4 24E0              ADD     A,#LOW WMenuStr+03H
804EE6 F582              MOV     DPL,A
804EE8 E4                CLR     A
804EE9 340E              ADDC    A,#HIGH WMenuStr+03H
804EEB F583              MOV     DPH,A
804EED E4                CLR     A
804EEE 93                MOVC    A,@A+DPTR
804EEF 2F                ADD     A,R7
804EF0 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804EF3 F0                MOVX    @DPTR,A
804EF4 E4                CLR     A
804EF5 FF                MOV     R7,A
804EF6 A51280885F        ECALL   _DisplayStr
  695: 	}
804EFB 8005              SJMP    ?C0152?DEVICECHECK
804EFD         ?C0150?DEVICECHECK:
  696: 	else
  697: 		return yStateus;
804EFD 90174B            MOV     DPTR,#yStateus
804F00 E0                MOVX    A,@DPTR
804F01 FF                MOV     R7,A
  698: }
804F02         ?C0152?DEVICECHECK:
804F02 A522              ERET    
----- FUNCTION _DispDeviceStatus (END) -------


----- FUNCTION ?L?COM0036 (BEGIN) -----
804F04 90172F            MOV     DPTR,#firstNum
804F07 E0                MOVX    A,@DPTR
804F08 FF                MOV     R7,A
804F09 7D01              MOV     R5,#01H
----- FUNCTION _DispDeviceMenu (BEGIN) -----
 FILE: 'devicecheck.c'
  700: void DispDeviceMenu( u_char Index, u_char y)
  701: {	
804F0B 901748            MOV     DPTR,#y
804F0E ED                MOV     A,R5
804F0F F0                MOVX    @DPTR,A
804F10 901747            MOV     DPTR,#Index
804F13 EF                MOV     A,R7
804F14 F0                MOVX    @DPTR,A
  702: //#ifdef _HAVE_CASHER	
  703: 	if( ( Index != 5 ) && ( Index != 7 ) && ( Index != 8 ) && ( Index != 6 ) )											
804F15 6405              XRL     A,#05H
804F17 601C              JZ      ?C0153?DEVICECHECK
804F19 E0                MOVX    A,@DPTR
804F1A FF                MOV     R7,A
804F1B 6407              XRL     A,#07H
804F1D 6016              JZ      ?C0153?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 143


804F1F EF                MOV     A,R7
804F20 6408              XRL     A,#08H
804F22 6011              JZ      ?C0153?DEVICECHECK
804F24 EF                MOV     A,R7
804F25 6406              XRL     A,#06H
804F27 600C              JZ      ?C0153?DEVICECHECK
  704: 		DispDeviceStatus( Index, y, 0 );						
804F29 A3                INC     DPTR
804F2A E0                MOVX    A,@DPTR
804F2B FD                MOV     R5,A
804F2C C219              CLR     ?_DispDeviceStatus?BIT
804F2E A512804D75        ECALL   _DispDeviceStatus
804F33 8041              SJMP    ?C0155?DEVICECHECK
804F35         ?C0153?DEVICECHECK:
  705: 	else
  706: 		DisplayStr( 0, y, 1, WMenuStr[Index].str, WMenuStr[Index].len );						
804F35 901748            MOV     DPTR,#y
804F38 E0                MOVX    A,@DPTR
804F39 FD                MOV     R5,A
804F3A D21A              SETB    ?_DisplayStr?BIT
804F3C 901747            MOV     DPTR,#Index
804F3F E0                MOVX    A,@DPTR
804F40 FF                MOV     R7,A
804F41 25E0              ADD     A,ACC
804F43 25E0              ADD     A,ACC
804F45 24DD              ADD     A,#LOW WMenuStr
804F47 F582              MOV     DPL,A
804F49 E4                CLR     A
804F4A 340E              ADDC    A,#HIGH WMenuStr
804F4C F583              MOV     DPH,A
804F4E A5128007C0        ECALL   ?C?PLDCODE
804F53 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
804F56 A5128007B6        ECALL   ?C?PSTXDATA
804F5B EF                MOV     A,R7
804F5C 25E0              ADD     A,ACC
804F5E 25E0              ADD     A,ACC
804F60 24E0              ADD     A,#LOW WMenuStr+03H
804F62 F582              MOV     DPL,A
804F64 E4                CLR     A
804F65 340E              ADDC    A,#HIGH WMenuStr+03H
804F67 F583              MOV     DPH,A
804F69 E4                CLR     A
804F6A 93                MOVC    A,@A+DPTR
804F6B 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
804F6E F0                MOVX    @DPTR,A
804F6F E4                CLR     A
804F70 FF                MOV     R7,A
804F71 A51280885F        ECALL   _DisplayStr
  707: /*#else
  708: 	if( ( Index != 4 ) && ( Index != 5 ) )											
  709: 		DispDeviceStatus( Index, y, 0 );						
  710: 	else
  711: 		DisplayStr( 0, y, 1, WMenuStr[Index].str, WMenuStr[Index].len );
  712: #endif*/
  713: }
804F76         ?C0155?DEVICECHECK:
804F76 A522              ERET    
----- FUNCTION _DispDeviceMenu (END) -------


----- FUNCTION DispGoodsWaysStates (BEGIN) -----
 FILE: 'devicecheck.c'
  716: void DispGoodsWaysStates()
  717: {
  718: 	u_char xdata line1[21];
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 144


  719: 	u_char xdata line2[21];
  720: 	u_char xdata i = 0;
804F78 E4                CLR     A
804F79 901771            MOV     DPTR,#i
804F7C F0                MOVX    @DPTR,A
  721: 	u_char xdata j = 0;
804F7D A3                INC     DPTR
804F7E F0                MOVX    @DPTR,A
  722: 	u_char xdata z = 0;
804F7F A3                INC     DPTR
804F80 F0                MOVX    @DPTR,A
  723: #ifdef _CHINA_
  724: 	u_char xdata Start = 0;
  725: 	u_char xdata End = 10;
  726: #else
  727: 	u_char xdata Start = 0;
804F81 A3                INC     DPTR
804F82 F0                MOVX    @DPTR,A
  728: 	u_char xdata End = 8;
804F83 A3                INC     DPTR
804F84 7408              MOV     A,#08H
804F86 F0                MOVX    @DPTR,A
  729: #endif					
  730: 	u_char  xdata LineNum = 2;  //选中行在屏幕中的行号		
804F87 A3                INC     DPTR
804F88 7402              MOV     A,#02H
804F8A F0                MOVX    @DPTR,A
  731: 	u_char  xdata key;
  732: 	u_char xdata  DispFlag = 1;
804F8B 901778            MOV     DPTR,#DispFlag
804F8E 14                DEC     A
804F8F F0                MOVX    @DPTR,A
  733: 	u_char xdata SumColunm = 0;
804F90 E4                CLR     A
804F91 A3                INC     DPTR
804F92 F0                MOVX    @DPTR,A
  734: 
  735: 	key = KEY_NULL;		
804F93 901777            MOV     DPTR,#key
804F96 74FF              MOV     A,#0FFH
804F98 F0                MOVX    @DPTR,A
  736: 	ClearKey();
804F99 A512808FA5        ECALL   ClearKey
  737: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态
804F9E A51280896E        ECALL   ?L?COM000F
  738: 	LineNum = 2;
804FA3 901776            MOV     DPTR,#LineNum
804FA6 7402              MOV     A,#02H
804FA8 F0                MOVX    @DPTR,A
  739: 	for( i = 0; i < GOODSWAYNUM; i ++ )
804FA9 E4                CLR     A
804FAA 901771            MOV     DPTR,#i
804FAD F0                MOVX    @DPTR,A
804FAE         ?C0156?DEVICECHECK:
804FAE 901771            MOV     DPTR,#i
804FB1 E0                MOVX    A,@DPTR
804FB2 FF                MOV     R7,A
804FB3 C3                CLR     C
804FB4 9440              SUBB    A,#040H
804FB6 501D              JNC     ?C0161?DEVICECHECK
  740: 	{
  741: 		if( GoodsWaySetVal[i].WayNo != 0 )
804FB8 75F005            MOV     B,#05H
804FBB EF                MOV     A,R7
804FBC 900004            MOV     DPTR,#GoodsWaySetVal
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 145


804FBF A51280079F        ECALL   ?C?OFFXADD
804FC4 E0                MOVX    A,@DPTR
804FC5 600E              JZ      ?C0161?DEVICECHECK
  742: 			SumColunm++;
804FC7 901779            MOV     DPTR,#SumColunm
804FCA E0                MOVX    A,@DPTR
804FCB 04                INC     A
804FCC F0                MOVX    @DPTR,A
  743: 		else
  744: 			break;
  745: 	}
804FCD         ?C0158?DEVICECHECK:
804FCD 901771            MOV     DPTR,#i
804FD0 E0                MOVX    A,@DPTR
804FD1 04                INC     A
804FD2 F0                MOVX    @DPTR,A
804FD3 80D9              SJMP    ?C0156?DEVICECHECK
804FD5         ?C0161?DEVICECHECK:
  746: 
  747: 	while( 1 )    //超时或客户退出
  748: 	{
  749: 		if( DispFlag )
804FD5 901778            MOV     DPTR,#DispFlag
804FD8 E0                MOVX    A,@DPTR
804FD9 7003              JNZ     $ + 5H
804FDB 025315            LJMP    ?C0163?DEVICECHECK
  750: 		{
  751: 			memset( line1, 0, sizeof( line1 ) );	
804FDE 7E00              MOV     R6,#00H
804FE0 7F15              MOV     R7,#015H
804FE2 7D00              MOV     R5,#00H
804FE4 7B00              MOV     R3,#?C?XDATASEG
804FE6 7A17              MOV     R2,#HIGH line1
804FE8 7947              MOV     R1,#LOW line1
804FEA A5128008A6        ECALL   ?C?MEMSET
  752: 			memset( line2, 0, sizeof( line2 ) );	
804FEF 7E00              MOV     R6,#00H
804FF1 7F15              MOV     R7,#015H
804FF3 7D00              MOV     R5,#00H
804FF5 7B00              MOV     R3,#?C?XDATASEG
804FF7 7A17              MOV     R2,#HIGH line2
804FF9 795C              MOV     R1,#LOW line2
804FFB A5128008A6        ECALL   ?C?MEMSET
  753: 			j = 0;
805000 E4                CLR     A
805001 901772            MOV     DPTR,#j
805004 F0                MOVX    @DPTR,A
  754: 			i = 0;			
805005 901771            MOV     DPTR,#i
805008 F0                MOVX    @DPTR,A
  755: 			for( i = Start; i < End; i++ )
805009 901774            MOV     DPTR,#Start
80500C E0                MOVX    A,@DPTR
80500D 901771            MOV     DPTR,#i
805010 F0                MOVX    @DPTR,A
805011         ?C0164?DEVICECHECK:
805011 901775            MOV     DPTR,#End
805014 E0                MOVX    A,@DPTR
805015 FF                MOV     R7,A
805016 901771            MOV     DPTR,#i
805019 E0                MOVX    A,@DPTR
80501A FE                MOV     R6,A
80501B C3                CLR     C
80501C 9F                SUBB    A,R7
80501D 4003              JC      $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 146


80501F 025297            LJMP    ?C0165?DEVICECHECK
  756: 			{	
  757: 			#ifdef _CHINA_
  758: 				if( i < ( Start + 5 ) )
  759: 			#else
  760: 				if( i < ( Start + 4 ) )
805022 901774            MOV     DPTR,#Start
805025 E0                MOVX    A,@DPTR
805026 2404              ADD     A,#04H
805028 FD                MOV     R5,A
805029 E4                CLR     A
80502A 33                RLC     A
80502B FC                MOV     R4,A
80502C EE                MOV     A,R6
80502D C3                CLR     C
80502E 9D                SUBB    A,R5
80502F EC                MOV     A,R4
805030 6480              XRL     A,#080H
805032 F8                MOV     R0,A
805033 7480              MOV     A,#080H
805035 98                SUBB    A,R0
805036 4003              JC      $ + 5H
805038 025153            LJMP    ?C0167?DEVICECHECK
  761: 			#endif				
  762: 				{
  763: 					if( GoodsWaySetVal[i].WayNo == 0 )
80503B 901771            MOV     DPTR,#i
80503E E0                MOVX    A,@DPTR
80503F 75F005            MOV     B,#05H
805042 900004            MOV     DPTR,#GoodsWaySetVal
805045 A51280079F        ECALL   ?C?OFFXADD
80504A E0                MOVX    A,@DPTR
80504B 7003              JNZ     $ + 5H
80504D 02528E            LJMP    ?C0166?DEVICECHECK
  764: 						continue;
805050         ?C0168?DEVICECHECK:
  765: 				#ifdef _CHINA_
  766: 					sprintf( line1 + 4*j, "%02bu ", GoodsWaySetVal[i].WayNo );
  767: 				#else
  768: 					sprintf( line1 + 5*j, "%02bu ", GoodsWaySetVal[i].WayNo );
805050 901772            MOV     DPTR,#j
805053 E0                MOVX    A,@DPTR
805054 75F005            MOV     B,#05H
805057 A4                MUL     AB
805058 2447              ADD     A,#LOW line1
80505A F9                MOV     R1,A
80505B 7417              MOV     A,#HIGH line1
80505D 35F0              ADDC    A,B
80505F FA                MOV     R2,A
805060 7B00              MOV     R3,#?C?XDATASEG
805062 C003              PUSH    AR3
805064 C002              PUSH    AR2
805066 C001              PUSH    AR1
805068 7B80              MOV     R3,#BYTE2 0800E2DH
80506A 7A0E              MOV     R2,#HIGH 0800E2DH
80506C 792D              MOV     R1,#LOW 0800E2DH
80506E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805071 A5128007B6        ECALL   ?C?PSTXDATA
805076 901771            MOV     DPTR,#i
805079 E0                MOVX    A,@DPTR
80507A 75F005            MOV     B,#05H
80507D 900004            MOV     DPTR,#GoodsWaySetVal
805080 A51280079F        ECALL   ?C?OFFXADD
805085 E0                MOVX    A,@DPTR
805086 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 147


805089 F0                MOVX    @DPTR,A
80508A D001              POP     AR1
80508C D002              POP     AR2
80508E D003              POP     AR3
805090 A512800949        ECALL   _sprintf
  769: 			    #endif
  770: 					z = 0;
805095 E4                CLR     A
805096 901773            MOV     DPTR,#z
805099 F0                MOVX    @DPTR,A
  771: 					if( GoodsWaySetVal[i].GoodsCurrentSum == 0 )
80509A 901771            MOV     DPTR,#i
80509D E0                MOVX    A,@DPTR
80509E FF                MOV     R7,A
80509F 75F005            MOV     B,#05H
8050A2 900008            MOV     DPTR,#GoodsWaySetVal+04H
8050A5 A51280079F        ECALL   ?C?OFFXADD
8050AA E0                MOVX    A,@DPTR
8050AB 7006              JNZ     ?C0169?DEVICECHECK
  772: 						z = 3;
8050AD 901773            MOV     DPTR,#z
8050B0 7403              MOV     A,#03H
8050B2 F0                MOVX    @DPTR,A
8050B3         ?C0169?DEVICECHECK:
  773: 					z = ( GoodsWaySetVal[i].WayState & 0x0f );
8050B3 75F005            MOV     B,#05H
8050B6 EF                MOV     A,R7
8050B7 900005            MOV     DPTR,#GoodsWaySetVal+01H
8050BA A51280079F        ECALL   ?C?OFFXADD
8050BF E0                MOVX    A,@DPTR
8050C0 FF                MOV     R7,A
8050C1 540F              ANL     A,#0FH
8050C3 901773            MOV     DPTR,#z
8050C6 F0                MOVX    @DPTR,A
  774: 					if( ( z & 0x01 ) != 0x01 )						
8050C7 20E004            JB      ACC.0,?C0170?DEVICECHECK
  775: 						z = 0;					
8050CA E4                CLR     A
8050CB F0                MOVX    @DPTR,A
8050CC 8045              SJMP    ?C0171?DEVICECHECK
8050CE         ?C0170?DEVICECHECK:
  776: 					else if( ( z & 0x01 ) == 0x01 )
8050CE 901773            MOV     DPTR,#z
8050D1 E0                MOVX    A,@DPTR
8050D2 FE                MOV     R6,A
8050D3 30E005            JNB     ACC.0,?C0172?DEVICECHECK
  777: 						z = 1;
8050D6 7401              MOV     A,#01H
8050D8 F0                MOVX    @DPTR,A
8050D9 8038              SJMP    ?C0171?DEVICECHECK
8050DB         ?C0172?DEVICECHECK:
  778: 					else if( ( z & 0x02 ) == 0x02 )
8050DB EE                MOV     A,R6
8050DC 30E108            JNB     ACC.1,?C0174?DEVICECHECK
  779: 						z = 2;
8050DF 901773            MOV     DPTR,#z
8050E2 7402              MOV     A,#02H
8050E4 F0                MOVX    @DPTR,A
8050E5 802C              SJMP    ?C0171?DEVICECHECK
8050E7         ?C0174?DEVICECHECK:
  780: 					else if( ( z & 0x04 ) == 0x04 )
8050E7 EE                MOV     A,R6
8050E8 30E208            JNB     ACC.2,?C0176?DEVICECHECK
  781: 						z = 3;	
8050EB 901773            MOV     DPTR,#z
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 148


8050EE 7403              MOV     A,#03H
8050F0 F0                MOVX    @DPTR,A
8050F1 8020              SJMP    ?C0171?DEVICECHECK
8050F3         ?C0176?DEVICECHECK:
  782: 					else if( ( z & 0x08 ) == 0x08 )
8050F3 EE                MOV     A,R6
8050F4 30E31C            JNB     ACC.3,?C0171?DEVICECHECK
  783: 					{
  784: 						if( ( z & 0x08) == 0x08 )
8050F7 30E313            JNB     ACC.3,?C0179?DEVICECHECK
  785: 							GoodsWaySetVal[i].WayState &= 0xf0;
8050FA 901771            MOV     DPTR,#i
8050FD E0                MOVX    A,@DPTR
8050FE 75F005            MOV     B,#05H
805101 900005            MOV     DPTR,#GoodsWaySetVal+01H
805104 A51280079F        ECALL   ?C?OFFXADD
805109 EF                MOV     A,R7
80510A 54F0              ANL     A,#0F0H
80510C F0                MOVX    @DPTR,A
80510D         ?C0179?DEVICECHECK:
  786: 						z = 4;
80510D 901773            MOV     DPTR,#z
805110 7404              MOV     A,#04H
805112 F0                MOVX    @DPTR,A
  787: 					}
805113         ?C0171?DEVICECHECK:
  788: 				#ifdef _CHINA_
  789: 					memcpy( line1 + 4*j + 2, GoodsWaysStatusStr[ z ].str, GoodsWaysStatusStr[ z ].len );
  790: 				#else
  791: 					memcpy( line1 + 5*j + 3, GoodsWaysStatusStr[ z ].str, GoodsWaysStatusStr[ z ].len );
805113 901773            MOV     DPTR,#z
805116 E0                MOVX    A,@DPTR
805117 FF                MOV     R7,A
805118 25E0              ADD     A,ACC
80511A 25E0              ADD     A,ACC
80511C 2414              ADD     A,#LOW GoodsWaysStatusStr+03H
80511E F582              MOV     DPL,A
805120 E4                CLR     A
805121 340F              ADDC    A,#HIGH GoodsWaysStatusStr+03H
805123 F583              MOV     DPH,A
805125 E4                CLR     A
805126 93                MOVC    A,@A+DPTR
805127 FD                MOV     R5,A
805128 7C00              MOV     R4,#00H
80512A C004              PUSH    AR4
80512C C005              PUSH    AR5
80512E EF                MOV     A,R7
80512F 25E0              ADD     A,ACC
805131 25E0              ADD     A,ACC
805133 2411              ADD     A,#LOW GoodsWaysStatusStr
805135 F582              MOV     DPL,A
805137 E4                CLR     A
805138 340F              ADDC    A,#HIGH GoodsWaysStatusStr
80513A F583              MOV     DPH,A
80513C A5128007C0        ECALL   ?C?PLDCODE
805141 C001              PUSH    AR1
805143 901772            MOV     DPTR,#j
805146 E0                MOVX    A,@DPTR
805147 75F005            MOV     B,#05H
80514A A4                MUL     AB
80514B 244A              ADD     A,#LOW line1+03H
80514D F9                MOV     R1,A
80514E 7417              MOV     A,#HIGH line1+03H
  792: 				#endif					
  793: 				//	Trace("\n GoodsWaySetVal[i].WayNo = %02bu", GoodsWaySetVal[i].WayNo );		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 149


  794: 				//	Trace("\n GoodsWaySetVal[i].WayState = %bu", GoodsWaySetVal[i].WayState );		
  795: 				//	Trace("\n line1 = %s", line1 );		
  796: 					j++;
  797: 				}
805150 025276            LJMP    ?C0310?DEVICECHECK
805153         ?C0167?DEVICECHECK:
  798: 				else
  799: 				{					
  800: 					if( i < SumColunm )
805153 901779            MOV     DPTR,#SumColunm
805156 E0                MOVX    A,@DPTR
805157 FF                MOV     R7,A
805158 901771            MOV     DPTR,#i
80515B E0                MOVX    A,@DPTR
80515C FE                MOV     R6,A
80515D C3                CLR     C
80515E 9F                SUBB    A,R7
80515F 4003              JC      $ + 5H
805161 025297            LJMP    ?C0165?DEVICECHECK
  801: 					{					
  802: 						if( GoodsWaySetVal[i].WayNo == 0 )
805164 75F005            MOV     B,#05H
805167 EE                MOV     A,R6
805168 900004            MOV     DPTR,#GoodsWaySetVal
80516B A51280079F        ECALL   ?C?OFFXADD
805170 E0                MOVX    A,@DPTR
805171 7003              JNZ     $ + 5H
805173 02528E            LJMP    ?C0166?DEVICECHECK
  803: 							continue;
805176         ?C0182?DEVICECHECK:
  804: 					#ifdef _CHINA_
  805: 						sprintf( line2 + 4*(j - 5 ), "%02bu ", GoodsWaySetVal[i].WayNo );
  806: 					#else
  807: 						sprintf( line2 + 5*(j - 4 ), "%02bu ", GoodsWaySetVal[i].WayNo );
805176 901772            MOV     DPTR,#j
805179 E0                MOVX    A,@DPTR
80517A 75F005            MOV     B,#05H
80517D A4                MUL     AB
80517E 2448              ADD     A,#LOW line2-014H
805180 F9                MOV     R1,A
805181 7417              MOV     A,#HIGH line2-014H
805183 35F0              ADDC    A,B
805185 FA                MOV     R2,A
805186 7B00              MOV     R3,#?C?XDATASEG
805188 C003              PUSH    AR3
80518A C002              PUSH    AR2
80518C C001              PUSH    AR1
80518E 7B80              MOV     R3,#BYTE2 0800E2DH
805190 7A0E              MOV     R2,#HIGH 0800E2DH
805192 792D              MOV     R1,#LOW 0800E2DH
805194 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805197 A5128007B6        ECALL   ?C?PSTXDATA
80519C 901771            MOV     DPTR,#i
80519F E0                MOVX    A,@DPTR
8051A0 75F005            MOV     B,#05H
8051A3 900004            MOV     DPTR,#GoodsWaySetVal
8051A6 A51280079F        ECALL   ?C?OFFXADD
8051AB E0                MOVX    A,@DPTR
8051AC 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8051AF F0                MOVX    @DPTR,A
8051B0 D001              POP     AR1
8051B2 D002              POP     AR2
8051B4 D003              POP     AR3
8051B6 A512800949        ECALL   _sprintf
  808: 			    	#endif						
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 150


  809: 						z = 0;
8051BB E4                CLR     A
8051BC 901773            MOV     DPTR,#z
8051BF F0                MOVX    @DPTR,A
  810: 						if( GoodsWaySetVal[i].GoodsCurrentSum == 0 )
8051C0 901771            MOV     DPTR,#i
8051C3 E0                MOVX    A,@DPTR
8051C4 FF                MOV     R7,A
8051C5 75F005            MOV     B,#05H
8051C8 900008            MOV     DPTR,#GoodsWaySetVal+04H
8051CB A51280079F        ECALL   ?C?OFFXADD
8051D0 E0                MOVX    A,@DPTR
8051D1 7006              JNZ     ?C0183?DEVICECHECK
  811: 							z = 3;
8051D3 901773            MOV     DPTR,#z
8051D6 7403              MOV     A,#03H
8051D8 F0                MOVX    @DPTR,A
8051D9         ?C0183?DEVICECHECK:
  812: 						z = ( GoodsWaySetVal[i].WayState & 0x0f );
8051D9 75F005            MOV     B,#05H
8051DC EF                MOV     A,R7
8051DD 900005            MOV     DPTR,#GoodsWaySetVal+01H
8051E0 A51280079F        ECALL   ?C?OFFXADD
8051E5 E0                MOVX    A,@DPTR
8051E6 FF                MOV     R7,A
8051E7 540F              ANL     A,#0FH
8051E9 901773            MOV     DPTR,#z
8051EC F0                MOVX    @DPTR,A
  813: 						if( ( z & 0x01 ) != 0x01 )
8051ED 20E004            JB      ACC.0,?C0184?DEVICECHECK
  814: 							z = 0;						
8051F0 E4                CLR     A
8051F1 F0                MOVX    @DPTR,A
8051F2 8045              SJMP    ?C0185?DEVICECHECK
8051F4         ?C0184?DEVICECHECK:
  815: 						else if( ( z & 0x01 ) == 0x01 )
8051F4 901773            MOV     DPTR,#z
8051F7 E0                MOVX    A,@DPTR
8051F8 FE                MOV     R6,A
8051F9 30E005            JNB     ACC.0,?C0186?DEVICECHECK
  816: 							z = 1;
8051FC 7401              MOV     A,#01H
8051FE F0                MOVX    @DPTR,A
8051FF 8038              SJMP    ?C0185?DEVICECHECK
805201         ?C0186?DEVICECHECK:
  817: 						else if( ( z & 0x02 ) == 0x02 )
805201 EE                MOV     A,R6
805202 30E108            JNB     ACC.1,?C0188?DEVICECHECK
  818: 							z = 2;
805205 901773            MOV     DPTR,#z
805208 7402              MOV     A,#02H
80520A F0                MOVX    @DPTR,A
80520B 802C              SJMP    ?C0185?DEVICECHECK
80520D         ?C0188?DEVICECHECK:
  819: 						else if( ( z & 0x04 ) == 0x04 )
80520D EE                MOV     A,R6
80520E 30E208            JNB     ACC.2,?C0190?DEVICECHECK
  820: 							z = 3;
805211 901773            MOV     DPTR,#z
805214 7403              MOV     A,#03H
805216 F0                MOVX    @DPTR,A
805217 8020              SJMP    ?C0185?DEVICECHECK
805219         ?C0190?DEVICECHECK:
  821: 						else if( ( z & 0x08) == 0x08 )
805219 EE                MOV     A,R6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 151


80521A 30E31C            JNB     ACC.3,?C0185?DEVICECHECK
  822: 						{
  823: 							z = 4;
80521D 901773            MOV     DPTR,#z
805220 7404              MOV     A,#04H
805222 F0                MOVX    @DPTR,A
  824: 							if( ( z & 0x08) == 0x08 )
805223 30E313            JNB     ACC.3,?C0185?DEVICECHECK
  825: 								GoodsWaySetVal[i].WayState &= 0xf0;
805226 901771            MOV     DPTR,#i
805229 E0                MOVX    A,@DPTR
80522A 75F005            MOV     B,#05H
80522D 900005            MOV     DPTR,#GoodsWaySetVal+01H
805230 A51280079F        ECALL   ?C?OFFXADD
805235 EF                MOV     A,R7
805236 54F0              ANL     A,#0F0H
805238 F0                MOVX    @DPTR,A
  826: 						}
805239         ?C0185?DEVICECHECK:
  827: 					#ifdef _CHINA_
  828: 						memcpy( line2 + 4*(j - 5 ) + 2, GoodsWaysStatusStr[ z ].str, GoodsWaysStatusStr[ z ].len );
  829: 					#else
  830: 						memcpy( line2 + 5*(j - 4 ) + 3, GoodsWaysStatusStr[ z ].str, GoodsWaysStatusStr[ z ].len );
805239 901773            MOV     DPTR,#z
80523C E0                MOVX    A,@DPTR
80523D FF                MOV     R7,A
80523E 25E0              ADD     A,ACC
805240 25E0              ADD     A,ACC
805242 2414              ADD     A,#LOW GoodsWaysStatusStr+03H
805244 F582              MOV     DPL,A
805246 E4                CLR     A
805247 340F              ADDC    A,#HIGH GoodsWaysStatusStr+03H
805249 F583              MOV     DPH,A
80524B E4                CLR     A
80524C 93                MOVC    A,@A+DPTR
80524D FD                MOV     R5,A
80524E 7C00              MOV     R4,#00H
805250 C004              PUSH    AR4
805252 C005              PUSH    AR5
805254 EF                MOV     A,R7
805255 25E0              ADD     A,ACC
805257 25E0              ADD     A,ACC
805259 2411              ADD     A,#LOW GoodsWaysStatusStr
80525B F582              MOV     DPL,A
80525D E4                CLR     A
80525E 340F              ADDC    A,#HIGH GoodsWaysStatusStr
805260 F583              MOV     DPH,A
805262 A5128007C0        ECALL   ?C?PLDCODE
805267 C001              PUSH    AR1
805269 901772            MOV     DPTR,#j
80526C E0                MOVX    A,@DPTR
80526D 75F005            MOV     B,#05H
805270 A4                MUL     AB
805271 244B              ADD     A,#LOW line2-011H
805273 F9                MOV     R1,A
805274 7417              MOV     A,#HIGH line2-011H
805276         
805276 35F0              ADDC    A,B
805278 A801              MOV     R0,AR1
80527A FC                MOV     R4,A
80527B 7D00              MOV     R5,#?C?XDATASEG
80527D D001              POP     AR1
80527F D007              POP     AR7
805281 D006              POP     AR6
805283 A51280052D        ECALL   ?C?COPY
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 152


  831: 					#endif
  832: 						j += 1;
805288 901772            MOV     DPTR,#j
80528B E0                MOVX    A,@DPTR
80528C 04                INC     A
80528D F0                MOVX    @DPTR,A
  833: 					}
  834: 					else
  835: 						break;
  836: 				}				
  837: 			}	
80528E         ?C0166?DEVICECHECK:
80528E 901771            MOV     DPTR,#i
805291 E0                MOVX    A,@DPTR
805292 04                INC     A
805293 F0                MOVX    @DPTR,A
805294 025011            LJMP    ?C0164?DEVICECHECK
805297         ?C0165?DEVICECHECK:
  838: 			if( ( strlen( line1 ) == 0 ) && ( strlen(line2) == 0 ) )
805297 7B00              MOV     R3,#?C?XDATASEG
805299 7A17              MOV     R2,#HIGH line1
80529B 7947              MOV     R1,#LOW line1
80529D A512800010        ECALL   _strlen
8052A2 EF                MOV     A,R7
8052A3 4E                ORL     A,R6
8052A4 7012              JNZ     ?C0195?DEVICECHECK
8052A6 7B00              MOV     R3,#?C?XDATASEG
8052A8 7A17              MOV     R2,#HIGH line2
8052AA 795C              MOV     R1,#LOW line2
8052AC A512800010        ECALL   _strlen
8052B1 EF                MOV     A,R7
8052B2 4E                ORL     A,R6
8052B3 7003              JNZ     $ + 5H
8052B5 0253B7            LJMP    ?C0196?DEVICECHECK
8052B8         ?C0195?DEVICECHECK:
  839: 				return;		
  840: 		#ifdef _CHINA_
  841: 			DisplayStr( 0, 0, 1, line1, 20 );
  842: 			DisplayStr( 0, 1, 1, line2,( j - 5 )*4 );		
  843: 		#else
  844: 			DisplayStr( 0, 0, 1, line1, 20 );
8052B8 D21A              SETB    ?_DisplayStr?BIT
8052BA 7B00              MOV     R3,#?C?XDATASEG
8052BC 7A17              MOV     R2,#HIGH line1
8052BE 7947              MOV     R1,#LOW line1
8052C0 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8052C3 A5128007B6        ECALL   ?C?PSTXDATA
8052C8 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8052CB 7414              MOV     A,#014H
8052CD A51280885B        ECALL   ?L?COM0007
  845: 			DisplayStr( 0, 1, 1, line2,( j - 4 )*5 );		
8052D2 D21A              SETB    ?_DisplayStr?BIT
8052D4 7B00              MOV     R3,#?C?XDATASEG
8052D6 7A17              MOV     R2,#HIGH line2
8052D8 795C              MOV     R1,#LOW line2
8052DA 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8052DD A5128007B6        ECALL   ?C?PSTXDATA
8052E2 901772            MOV     DPTR,#j
8052E5 E0                MOVX    A,@DPTR
8052E6 24FC              ADD     A,#0FCH
8052E8 75F005            MOV     B,#05H
8052EB A4                MUL     AB
8052EC 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8052EF F0                MOVX    @DPTR,A
8052F0 7D01              MOV     R5,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 153


8052F2 E4                CLR     A
8052F3 FF                MOV     R7,A
8052F4 A51280885F        ECALL   _DisplayStr
  846: 		#endif			
  847: 			DisplayCursorState( 0, LineNum-1, 1, 2, 1 );
8052F9 901776            MOV     DPTR,#LineNum
8052FC E0                MOVX    A,@DPTR
8052FD 14                DEC     A
8052FE FD                MOV     R5,A
8052FF D21A              SETB    ?_DisplayCursorState?BIT
805301 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
805304 7402              MOV     A,#02H
805306 F0                MOVX    @DPTR,A
805307 D21B              SETB    ?_DisplayCursorState?BIT+01H
805309 E4                CLR     A
80530A FF                MOV     R7,A
80530B A51280897C        ECALL   _DisplayCursorState
  848: 			DispFlag = 0;
805310 E4                CLR     A
805311 901778            MOV     DPTR,#DispFlag
805314 F0                MOVX    @DPTR,A
  849: 		}
805315         ?C0163?DEVICECHECK:
  850: 		key = GetKey();
805315 A5128096D1        ECALL   GetKey
80531A 901777            MOV     DPTR,#key
80531D EF                MOV     A,R7
80531E F0                MOVX    @DPTR,A
  851: 		switch( key )		
80531F 24E5              ADD     A,#0E5H
805321 7003              JNZ     $ + 5H
805323 0253B7            LJMP    ?C0196?DEVICECHECK
805326 24CB              ADD     A,#0CBH
805328 6046              JZ      ?C0203?DEVICECHECK
80532A 2408              ADD     A,#08H
80532C 707A              JNZ     ?C0197?DEVICECHECK
  852: 		{
  853: 			case KEY_UP://上移  	
80532E         ?C0198?DEVICECHECK:
  854: 			     if( LineNum == 2 )//选中标记上移
80532E 901776            MOV     DPTR,#LineNum
805331 E0                MOVX    A,@DPTR
805332 B4021A            CJNE    A,#02H,?C0199?DEVICECHECK
  855: 			     {			     
  856: 			     	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
805335 D21A              SETB    ?_DisplayCursorState?BIT
805337 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80533A 7402              MOV     A,#02H
80533C F0                MOVX    @DPTR,A
80533D D21B              SETB    ?_DisplayCursorState?BIT+01H
80533F E4                CLR     A
805340 FD                MOV     R5,A
805341 FF                MOV     R7,A
805342 A51280897C        ECALL   _DisplayCursorState
  857: 			     	LineNum = 1;					
805347 901776            MOV     DPTR,#LineNum
80534A 7401              MOV     A,#01H
80534C F0                MOVX    @DPTR,A
  858: 			     }
80534D 8059              SJMP    ?C0197?DEVICECHECK
80534F         ?C0199?DEVICECHECK:
  859: 			     else//菜单上翻
  860: 			     {		
  861: 		 		 	if( Start <= 0 )
80534F 901774            MOV     DPTR,#Start
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 154


805352 E0                MOVX    A,@DPTR
805353 D3                SETB    C
805354 9400              SUBB    A,#00H
805356 4050              JC      ?C0197?DEVICECHECK
  862: 						break;				 	
805358         ?C0201?DEVICECHECK:
  863: 					else
  864: 					{
  865: 					#ifdef _CHINA_
  866: 						Start = Start -5;					
  867: 						End = End - 5;	
  868: 					#else
  869: 						Start = Start -4;					
805358 901774            MOV     DPTR,#Start
80535B E0                MOVX    A,@DPTR
80535C 24FC              ADD     A,#0FCH
80535E F0                MOVX    @DPTR,A
  870: 						End = End - 4;	
80535F A3                INC     DPTR
805360 E0                MOVX    A,@DPTR
805361 24FC              ADD     A,#0FCH
805363 F0                MOVX    @DPTR,A
  871: 					#endif					
  872: 						DispFlag = 1;						
805364 901778            MOV     DPTR,#DispFlag
805367 7401              MOV     A,#01H
805369 F0                MOVX    @DPTR,A
  873: 						LineNum = 1;						
80536A 901776            MOV     DPTR,#LineNum
80536D F0                MOVX    @DPTR,A
  874: 					}
  875: 			     }
  876: 				 break;
80536E 8038              SJMP    ?C0197?DEVICECHECK
  877: 			case KEY_DOWN://下移				
805370         ?C0203?DEVICECHECK:
  878: 				if( LineNum == 1 )//选中标记下移
805370 901776            MOV     DPTR,#LineNum
805373 E0                MOVX    A,@DPTR
805374 B4010D            CJNE    A,#01H,?C0204?DEVICECHECK
  879: 				{				 
  880: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标					
805377 A51280896E        ECALL   ?L?COM000F
  881: 				     LineNum = 2;				     
80537C 901776            MOV     DPTR,#LineNum
80537F 7402              MOV     A,#02H
805381 F0                MOVX    @DPTR,A
  882: 				 }
805382 8024              SJMP    ?C0197?DEVICECHECK
805384         ?C0204?DEVICECHECK:
  883: 				 else//菜单下翻
  884: 				 {	
  885: 			     	if( End >= SumColunm )
805384 901779            MOV     DPTR,#SumColunm
805387 E0                MOVX    A,@DPTR
805388 FF                MOV     R7,A
805389 901775            MOV     DPTR,#End
80538C E0                MOVX    A,@DPTR
80538D C3                CLR     C
80538E 9F                SUBB    A,R7
80538F 5017              JNC     ?C0197?DEVICECHECK
  886: 						break;
805391         ?C0206?DEVICECHECK:
  887: 					else
  888: 					{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 155


  889: 					#ifdef _CHINA_
  890: 						Start = Start + 5;					
  891: 						End = End + 5;	
  892: 					#else
  893: 						Start = Start + 4;					
805391 901774            MOV     DPTR,#Start
805394 E0                MOVX    A,@DPTR
805395 2404              ADD     A,#04H
805397 F0                MOVX    @DPTR,A
  894: 						End = End + 4;	
805398 A3                INC     DPTR
805399 E0                MOVX    A,@DPTR
80539A 2404              ADD     A,#04H
80539C F0                MOVX    @DPTR,A
  895: 					#endif					
  896: 						DispFlag = 1;				
80539D 901778            MOV     DPTR,#DispFlag
8053A0 7401              MOV     A,#01H
8053A2 F0                MOVX    @DPTR,A
  897: 						LineNum = 2;					
8053A3 901776            MOV     DPTR,#LineNum
8053A6 04                INC     A
8053A7 F0                MOVX    @DPTR,A
  898: 					}
  899: 				}
  900: 				break;
  901: 			case KEY_CANCEL:
  902: 				return;
  903: 				break;					
  904: 		}
8053A8         ?C0197?DEVICECHECK:
  905: 		CoreProcessCycle();//让出时间片
8053A8 A5128082D7        ECALL   CoreProcessCycle
  906: 		DelayMs( 10 );
8053AD 7F0A              MOV     R7,#0AH
8053AF A512807EAB        ECALL   _DelayMs
  907: 	}		
8053B4 024FD5            LJMP    ?C0161?DEVICECHECK
  908: 	/////////////////////
  909: }
8053B7         ?C0196?DEVICECHECK:
8053B7 A522              ERET    
----- FUNCTION DispGoodsWaysStates (END) -------


----- FUNCTION _TestAndDispMobileStates (BEGIN) -----
 FILE: 'devicecheck.c'
  912: void TestAndDispMobileStates( u_char type, u_char DispLine )
  913: {	
8053B9 901747            MOV     DPTR,#type
8053BC EF                MOV     A,R7
8053BD F0                MOVX    @DPTR,A
8053BE A3                INC     DPTR
8053BF ED                MOV     A,R5
8053C0 F0                MOVX    @DPTR,A
  914: 	u_char xdata line2[21];
  915: 	u_char xdata i = 0;	
8053C1 E4                CLR     A
8053C2 90175E            MOV     DPTR,#i
8053C5 F0                MOVX    @DPTR,A
  916: 	u_char xdata len = 0;
8053C6 A3                INC     DPTR
8053C7 F0                MOVX    @DPTR,A
  917: 	struct SHORTMSG Msg;
  918: 	u_int	xdata CmdErrorCode = 0;	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 156


8053C8 901812            MOV     DPTR,#CmdErrorCode
8053CB F0                MOVX    @DPTR,A
8053CC A3                INC     DPTR
8053CD F0                MOVX    @DPTR,A
  919: 
  920: 	memset( line2, 0, sizeof( line2 ) );
8053CE FE                MOV     R6,A
8053CF 7F15              MOV     R7,#015H
8053D1 FD                MOV     R5,A
8053D2 7B00              MOV     R3,#?C?XDATASEG
8053D4 7A17              MOV     R2,#HIGH line2
8053D6 7949              MOV     R1,#LOW line2
8053D8 A5128008A6        ECALL   ?C?MEMSET
  921: 	if( SystemParameter.MobileON != 1 )
8053DD 900446            MOV     DPTR,#SystemParameter+026H
8053E0 E0                MOVX    A,@DPTR
8053E1 6401              XRL     A,#01H
8053E3 6056              JZ      ?C0209?DEVICECHECK
  922: 	{
  923: 	#ifdef _CHINA_
  924: 		len = sprintf( line2,  "    模块没有开启" );
  925: 	#else
  926: 		len = sprintf( line2,  "   Device is OFF" );
8053E5 7B80              MOV     R3,#BYTE2 0800E34H
8053E7 7A0E              MOV     R2,#HIGH 0800E34H
8053E9 7934              MOV     R1,#LOW 0800E34H
8053EB 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8053EE A5128007B6        ECALL   ?C?PSTXDATA
8053F3 7B00              MOV     R3,#?C?XDATASEG
8053F5 7A17              MOV     R2,#HIGH line2
8053F7 7949              MOV     R1,#LOW line2
8053F9 A512800949        ECALL   _sprintf
8053FE 90175F            MOV     DPTR,#len
805401 EF                MOV     A,R7
805402 F0                MOVX    @DPTR,A
  927: 	#endif
  928: 		DisplayStr( 0, DispLine - 1, 1, line2, len );
805403 901748            MOV     DPTR,#DispLine
805406 E0                MOVX    A,@DPTR
805407 14                DEC     A
805408 FD                MOV     R5,A
805409 D21A              SETB    ?_DisplayStr?BIT
80540B 7B00              MOV     R3,#?C?XDATASEG
80540D 7A17              MOV     R2,#HIGH line2
80540F 7949              MOV     R1,#LOW line2
805411 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805414 A5128007B6        ECALL   ?C?PSTXDATA
805419 90175F            MOV     DPTR,#len
80541C E0                MOVX    A,@DPTR
80541D 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
805420 F0                MOVX    @DPTR,A
805421 E4                CLR     A
805422 FF                MOV     R7,A
805423 A51280885F        ECALL   _DisplayStr
  929: 		WaitForWork( 1500, NULL );
805428 E4                CLR     A
805429 7FDC              MOV     R7,#0DCH
80542B 7E05              MOV     R6,#05H
80542D A512808330        ECALL   ?L?COM000D
  930: 		DeviceStatus.MobileStates = 0x80;
805432 900B23            MOV     DPTR,#DeviceStatus+08H
805435 7480              MOV     A,#080H
805437 F0                MOVX    @DPTR,A
805438 025759            LJMP    ?C0210?DEVICECHECK
  931: 		return;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 157


  932: 	}
80543B         ?C0209?DEVICECHECK:
  933: 	if( type == 1 )
80543B 901747            MOV     DPTR,#type
80543E E0                MOVX    A,@DPTR
80543F 6401              XRL     A,#01H
805441 6003              JZ      $ + 5H
805443 025517            LJMP    ?C0211?DEVICECHECK
  934: 	{		
  935: 		//测试AT指令
  936: 	#ifdef _CHINA_
  937: 		len = sprintf( line2,  "    请稍等..." );
  938: 	#else
  939: 		len = sprintf( line2,  "please wait..." );
805446 7B80              MOV     R3,#BYTE2 0800E45H
805448 7A0E              MOV     R2,#HIGH 0800E45H
80544A 7945              MOV     R1,#LOW 0800E45H
80544C 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80544F A5128007B6        ECALL   ?C?PSTXDATA
805454 7B00              MOV     R3,#?C?XDATASEG
805456 7A17              MOV     R2,#HIGH line2
805458 7949              MOV     R1,#LOW line2
80545A A512800949        ECALL   _sprintf
80545F 90175F            MOV     DPTR,#len
805462 EF                MOV     A,R7
805463 F0                MOVX    @DPTR,A
  940: 	#endif
  941: 		DisplayStr( 0, DispLine - 1, 1, line2, len );
805464 901748            MOV     DPTR,#DispLine
805467 E0                MOVX    A,@DPTR
805468 14                DEC     A
805469 FD                MOV     R5,A
80546A D21A              SETB    ?_DisplayStr?BIT
80546C 7B00              MOV     R3,#?C?XDATASEG
80546E 7A17              MOV     R2,#HIGH line2
805470 7949              MOV     R1,#LOW line2
805472 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805475 A5128007B6        ECALL   ?C?PSTXDATA
80547A 90175F            MOV     DPTR,#len
80547D E0                MOVX    A,@DPTR
80547E 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
805481 F0                MOVX    @DPTR,A
805482 E4                CLR     A
805483 FF                MOV     R7,A
805484 A51280885F        ECALL   _DisplayStr
  942: 		WaitForWork( 500, NULL );
805489 E4                CLR     A
80548A 7FF4              MOV     R7,#0F4H
80548C 7E01              MOV     R6,#01H
80548E A512808330        ECALL   ?L?COM000D
  943: 		i = TestATcommand();
805493 A5128131C2        ECALL   TestATcommand
805498 90175E            MOV     DPTR,#i
80549B EF                MOV     A,R7
80549C F0                MOVX    @DPTR,A
  944: 		if( i == 3 )
80549D BF0308            CJNE    R7,#03H,?C0212?DEVICECHECK
  945: 		{
  946: 			//手机模块忙
  947: 		#ifdef _CHINA_
  948: 			len = sprintf( line2,  "模块\xd5\xfd忙，稍后再试" );
  949: 		#else
  950: 			len = sprintf( line2,  "Device is busy" );
8054A0 7B80              MOV     R3,#BYTE2 0800E54H
8054A2 7A0E              MOV     R2,#HIGH 0800E54H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 158


8054A4 7954              MOV     R1,#LOW 0800E54H
  951: 		#endif
  952: 		}
8054A6 800A              SJMP    ?C0311?DEVICECHECK
8054A8         ?C0212?DEVICECHECK:
  953: 		else if( i == 1 )		
8054A8 90175E            MOV     DPTR,#i
8054AB E0                MOVX    A,@DPTR
  954: 		{
  955: 		#ifdef _CHINA_
  956: 			len = sprintf( line2,  "模块测试失败" );
  957: 		#else
  958: 			len = sprintf( line2,  "Device test fail" );
  959: 		#endif		
  960: 		}
  961: 		else		
  962: 		{
  963: 		#ifdef _CHINA_
  964: 			len = sprintf( line2,  "模块\xd5\xfd常" );
  965: 		#else
  966: 			len = sprintf( line2,  "Device test fail" );
8054AC 7B80              MOV     R3,#BYTE2 0800E63H
8054AE 7A0E              MOV     R2,#HIGH 0800E63H
8054B0 7963              MOV     R1,#LOW 0800E63H
8054B2         
8054B2 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8054B5 A5128007B6        ECALL   ?C?PSTXDATA
8054BA 7B00              MOV     R3,#?C?XDATASEG
8054BC 7A17              MOV     R2,#HIGH line2
8054BE 7949              MOV     R1,#LOW line2
8054C0 A512800949        ECALL   _sprintf
8054C5 90175F            MOV     DPTR,#len
8054C8 EF                MOV     A,R7
8054C9 F0                MOVX    @DPTR,A
  967: 		#endif
  968: 		}
8054CA         ?C0213?DEVICECHECK:
  969: 		DisplayStr( 0, DispLine - 1, 1, line2, len );
8054CA 901748            MOV     DPTR,#DispLine
8054CD E0                MOVX    A,@DPTR
8054CE 14                DEC     A
8054CF FD                MOV     R5,A
8054D0 D21A              SETB    ?_DisplayStr?BIT
8054D2 7B00              MOV     R3,#?C?XDATASEG
8054D4 7A17              MOV     R2,#HIGH line2
8054D6 7949              MOV     R1,#LOW line2
8054D8 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8054DB A5128007B6        ECALL   ?C?PSTXDATA
8054E0 90175F            MOV     DPTR,#len
8054E3 E0                MOVX    A,@DPTR
8054E4 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8054E7 F0                MOVX    @DPTR,A
8054E8 E4                CLR     A
8054E9 FF                MOV     R7,A
8054EA A51280885F        ECALL   _DisplayStr
  970: 		WaitForWork( 1500, NULL );	
8054EF E4                CLR     A
8054F0 7FDC              MOV     R7,#0DCH
8054F2 7E05              MOV     R6,#05H
8054F4 A512808330        ECALL   ?L?COM000D
  971: 		DisplayStr( 0, DispLine - 1, 1, WMenuStr[5].str, WMenuStr[5].len );			
8054F9 901748            MOV     DPTR,#DispLine
8054FC E0                MOVX    A,@DPTR
8054FD 14                DEC     A
8054FE FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 159


8054FF D21A              SETB    ?_DisplayStr?BIT
805501 900EF1            MOV     DPTR,#WMenuStr+014H
805504 A5128007C0        ECALL   ?C?PLDCODE
805509 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80550C A5128007B6        ECALL   ?C?PSTXDATA
805511 900EF4            MOV     DPTR,#WMenuStr+017H
  972: 	}
805514 02574C            LJMP    ?C0312?DEVICECHECK
805517         ?C0211?DEVICECHECK:
  973: 	else
  974: 	{
  975: 		//发送短信测试
  976: 		if( SMSCommStatus() )
805517 A51280AF7B        ECALL   SMSCommStatus
80551C 4003              JC      $ + 5H
80551E 0256DF            LJMP    ?C0217?DEVICECHECK
  977: 		{
  978: 		#ifdef _CHINA_
  979: 			len = sprintf( line2,  "    请稍等..." );
  980: 		#else
  981: 			len = sprintf( line2,  "please wait..." );
805521 7B80              MOV     R3,#BYTE2 0800E45H
805523 7A0E              MOV     R2,#HIGH 0800E45H
805525 7945              MOV     R1,#LOW 0800E45H
805527 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80552A A5128007B6        ECALL   ?C?PSTXDATA
80552F 7B00              MOV     R3,#?C?XDATASEG
805531 7A17              MOV     R2,#HIGH line2
805533 7949              MOV     R1,#LOW line2
805535 A512800949        ECALL   _sprintf
80553A 90175F            MOV     DPTR,#len
80553D EF                MOV     A,R7
80553E F0                MOVX    @DPTR,A
  982: 		#endif
  983: 			DisplayStr( 0, DispLine - 1, 1, line2, len );
80553F 901748            MOV     DPTR,#DispLine
805542 E0                MOVX    A,@DPTR
805543 14                DEC     A
805544 FD                MOV     R5,A
805545 D21A              SETB    ?_DisplayStr?BIT
805547 7B00              MOV     R3,#?C?XDATASEG
805549 7A17              MOV     R2,#HIGH line2
80554B 7949              MOV     R1,#LOW line2
80554D 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805550 A5128007B6        ECALL   ?C?PSTXDATA
805555 90175F            MOV     DPTR,#len
805558 E0                MOVX    A,@DPTR
805559 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80555C F0                MOVX    @DPTR,A
80555D E4                CLR     A
80555E FF                MOV     R7,A
80555F A51280885F        ECALL   _DisplayStr
  984: 			WaitForWork( 500, NULL );
805564 E4                CLR     A
805565 7FF4              MOV     R7,#0F4H
805567 7E01              MOV     R6,#01H
805569 A512808330        ECALL   ?L?COM000D
  985: 			Trace("\n SendSMS" );				
  986: 		 	memset( Msg.msg, 0, sizeof( Msg.msg ) );
80556E 7E00              MOV     R6,#00H
805570 7FA0              MOV     R7,#0A0H
805572 7D00              MOV     R5,#00H
805574 7B00              MOV     R3,#?C?XDATASEG
805576 7A17              MOV     R2,#HIGH Msg+012H
805578 7972              MOV     R1,#LOW Msg+012H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 160


80557A A5128008A6        ECALL   ?C?MEMSET
  987: 			sprintf( Msg.msg, "VMMSG%bx%bx%bx%bx%bx", 
80557F 7B80              MOV     R3,#BYTE2 0800E74H
805581 7A0E              MOV     R2,#HIGH 0800E74H
805583 7974              MOV     R1,#LOW 0800E74H
805585 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805588 A5128007B6        ECALL   ?C?PSTXDATA
80558D 900431            MOV     DPTR,#SystemParameter+011H
805590 E0                MOVX    A,@DPTR
805591 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
805594 F0                MOVX    @DPTR,A
805595 900432            MOV     DPTR,#SystemParameter+012H
805598 E0                MOVX    A,@DPTR
805599 901B8D            MOV     DPTR,#?_sprintf?BYTE+07H
80559C F0                MOVX    @DPTR,A
80559D 900433            MOV     DPTR,#SystemParameter+013H
8055A0 E0                MOVX    A,@DPTR
8055A1 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8055A4 F0                MOVX    @DPTR,A
8055A5 900434            MOV     DPTR,#SystemParameter+014H
8055A8 E0                MOVX    A,@DPTR
8055A9 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
8055AC F0                MOVX    @DPTR,A
8055AD 900435            MOV     DPTR,#SystemParameter+015H
8055B0 E0                MOVX    A,@DPTR
8055B1 901B90            MOV     DPTR,#?_sprintf?BYTE+0AH
8055B4 F0                MOVX    @DPTR,A
8055B5 900436            MOV     DPTR,#SystemParameter+016H
8055B8 E0                MOVX    A,@DPTR
8055B9 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
8055BC F0                MOVX    @DPTR,A
8055BD 7B00              MOV     R3,#?C?XDATASEG
8055BF 7A17              MOV     R2,#HIGH Msg+012H
8055C1 7972              MOV     R1,#LOW Msg+012H
8055C3 A512800949        ECALL   _sprintf
  988: 			SystemParameter.VmID[0],SystemParameter.VmID[1],SystemParameter.VmID[2],
  989: 			SystemParameter.VmID[3],SystemParameter.VmID[4],SystemParameter.VmID[5]);
  990: 			Msg.len = 10;
8055C8 901770            MOV     DPTR,#Msg+010H
8055CB E4                CLR     A
8055CC F0                MOVX    @DPTR,A
8055CD A3                INC     DPTR
8055CE 740A              MOV     A,#0AH
8055D0 F0                MOVX    @DPTR,A
  991: 			memcpy( Msg.phone, SystemParameter.GSMNO, sizeof(Msg.phone) );
8055D1 7860              MOV     R0,#LOW Msg
8055D3 7C17              MOV     R4,#HIGH Msg
8055D5 7D00              MOV     R5,#?C?XDATASEG
8055D7 7B00              MOV     R3,#?C?XDATASEG
8055D9 7A04              MOV     R2,#HIGH SystemParameter+016H
8055DB 7936              MOV     R1,#LOW SystemParameter+016H
8055DD 7E00              MOV     R6,#00H
8055DF 7F10              MOV     R7,#010H
8055E1 A51280052D        ECALL   ?C?COPY
  992: 			if( TestSMSSend( &Msg) == 1 )
8055E6 7B00              MOV     R3,#?C?XDATASEG
8055E8 7A17              MOV     R2,#HIGH Msg
8055EA 7960              MOV     R1,#LOW Msg
8055EC A512814013        ECALL   _TestSMSSend
8055F1 EF                MOV     A,R7
8055F2 6401              XRL     A,#01H
8055F4 7009              JNZ     ?C0218?DEVICECHECK
  993: 			{
  994: 			#ifdef _CHINA_
  995: 				len = sprintf( line2,  "模块\xd5\xfd忙，稍后再试" );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 161


  996: 			#else
  997: 				len = sprintf( line2,  "Busying,try again!" );
8055F6 7B80              MOV     R3,#BYTE2 0800E89H
8055F8 7A0E              MOV     R2,#HIGH 0800E89H
8055FA 7989              MOV     R1,#LOW 0800E89H
  998: 			#endif			
  999: 				DeviceStatus.MobileStates = 0;
 1000: 				DisplayStr( 0, DispLine - 1, 1, line2, len );
 1001: 				WaitForWork( 1500, NULL );				
 1002: 			}
8055FC 0256E5            LJMP    ?C0313?DEVICECHECK
8055FF         ?C0218?DEVICECHECK:
 1003: 			else
 1004: 			{							
 1005: 				i = 0;
8055FF E4                CLR     A
805600 90175E            MOV     DPTR,#i
805603 F0                MOVX    @DPTR,A
 1006: 				Trace("\n Begin wait Result");				
 1007: 				WaitForWork( 500, NULL );
805604 7FF4              MOV     R7,#0F4H
805606 7E01              MOV     R6,#01H
805608 A512808330        ECALL   ?L?COM000D
80560D         ?C0220?DEVICECHECK:
 1008: 				while( ( i = GetTestSMSSendResult()) != 0  )
80560D A5128141CD        ECALL   GetTestSMSSendResult
805612 90175E            MOV     DPTR,#i
805615 EF                MOV     A,R7
805616 F0                MOVX    @DPTR,A
805617 6011              JZ      ?C0221?DEVICECHECK
 1009: 				{			
 1010: 					WaitForWork( 50, NULL );
805619 E4                CLR     A
80561A 7F32              MOV     R7,#032H
80561C FE                MOV     R6,A
80561D A512808330        ECALL   ?L?COM000D
 1011: 					if( i == 2 )
805622 90175E            MOV     DPTR,#i
805625 E0                MOVX    A,@DPTR
805626 6402              XRL     A,#02H
805628 60E3              JZ      ?C0220?DEVICECHECK
 1012: 						continue;
 1013: 					else				
 1014: 						break;				    
 1015: 				}
80562A         ?C0221?DEVICECHECK:
 1016: 				Trace( "\n Result i = %bu", i );	
 1017: 				if( i == 0 )
80562A 90175E            MOV     DPTR,#i
80562D E0                MOVX    A,@DPTR
80562E 7026              JNZ     ?C0224?DEVICECHECK
 1018: 				{
 1019: 				#ifdef _CHINA_
 1020: 					len = sprintf( line2,  "测试短信发送成功" );
 1021: 				#else
 1022: 					len = sprintf( line2,  "SMS Send OK!" );
805630 7B80              MOV     R3,#BYTE2 0800E9CH
805632 7A0E              MOV     R2,#HIGH 0800E9CH
805634 799C              MOV     R1,#LOW 0800E9CH
805636 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805639 A5128007B6        ECALL   ?C?PSTXDATA
80563E 7B00              MOV     R3,#?C?XDATASEG
805640 7A17              MOV     R2,#HIGH line2
805642 7949              MOV     R1,#LOW line2
805644 A512800949        ECALL   _sprintf
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 162


805649 90175F            MOV     DPTR,#len
80564C EF                MOV     A,R7
80564D F0                MOVX    @DPTR,A
 1023: 				#endif	
 1024: 					DeviceStatus.MobileStates = 0;			
80564E E4                CLR     A
80564F 900B23            MOV     DPTR,#DeviceStatus+08H
805652 F0                MOVX    @DPTR,A
 1025: 				}
805653 025702            LJMP    ?C0314?DEVICECHECK
805656         ?C0224?DEVICECHECK:
 1026: 				else
 1027: 				{
 1028: 					CmdErrorCode = GetATCMDResult();
805656 A5128141F0        ECALL   GetATCMDResult
80565B 901812            MOV     DPTR,#CmdErrorCode
80565E EE                MOV     A,R6
80565F F0                MOVX    @DPTR,A
805660 A3                INC     DPTR
805661 EF                MOV     A,R7
805662 F0                MOVX    @DPTR,A
 1029: 				#ifdef _CHINA_
 1030: 					len = sprintf( line2,  "测试短信发送失败" );
 1031: 				#else
 1032: 					len = sprintf( line2,  "SMS Send Fail!" );
805663 7B80              MOV     R3,#BYTE2 0800EA9H
805665 7A0E              MOV     R2,#HIGH 0800EA9H
805667 79A9              MOV     R1,#LOW 0800EA9H
805669 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80566C A5128007B6        ECALL   ?C?PSTXDATA
805671 7B00              MOV     R3,#?C?XDATASEG
805673 7A17              MOV     R2,#HIGH line2
805675 7949              MOV     R1,#LOW line2
805677 A512800949        ECALL   _sprintf
80567C 90175F            MOV     DPTR,#len
80567F EF                MOV     A,R7
805680 F0                MOVX    @DPTR,A
 1033: 				#endif			
 1034: 					DisplayStr( 0, DispLine - 1, 1, line2, len );
805681 901748            MOV     DPTR,#DispLine
805684 E0                MOVX    A,@DPTR
805685 14                DEC     A
805686 FD                MOV     R5,A
805687 D21A              SETB    ?_DisplayStr?BIT
805689 7B00              MOV     R3,#?C?XDATASEG
80568B 7A17              MOV     R2,#HIGH line2
80568D 7949              MOV     R1,#LOW line2
80568F 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805692 A5128007B6        ECALL   ?C?PSTXDATA
805697 90175F            MOV     DPTR,#len
80569A E0                MOVX    A,@DPTR
80569B 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80569E F0                MOVX    @DPTR,A
80569F E4                CLR     A
8056A0 FF                MOV     R7,A
8056A1 A51280885F        ECALL   _DisplayStr
 1035: 					WaitForWork( 1500, NULL );
8056A6 E4                CLR     A
8056A7 7FDC              MOV     R7,#0DCH
8056A9 7E05              MOV     R6,#05H
8056AB A512808330        ECALL   ?L?COM000D
 1036: 				#ifdef _CHINA_
 1037: 					len = sprintf( line2,  "故障代码 = %u",CmdErrorCode );
 1038: 				#else
 1039: 					len = sprintf( line2,  "ERROR code = %u", CmdErrorCode );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 163


8056B0 7B80              MOV     R3,#BYTE2 0800EB8H
8056B2 7A0E              MOV     R2,#HIGH 0800EB8H
8056B4 79B8              MOV     R1,#LOW 0800EB8H
8056B6 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8056B9 A5128007B6        ECALL   ?C?PSTXDATA
8056BE 901812            MOV     DPTR,#CmdErrorCode
8056C1 E0                MOVX    A,@DPTR
8056C2 FF                MOV     R7,A
8056C3 A3                INC     DPTR
8056C4 E0                MOVX    A,@DPTR
8056C5 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8056C8 CF                XCH     A,R7
8056C9 F0                MOVX    @DPTR,A
8056CA A3                INC     DPTR
8056CB EF                MOV     A,R7
8056CC F0                MOVX    @DPTR,A
8056CD 7B00              MOV     R3,#?C?XDATASEG
8056CF 7A17              MOV     R2,#HIGH line2
8056D1 7949              MOV     R1,#LOW line2
8056D3 A512800949        ECALL   _sprintf
8056D8 90175F            MOV     DPTR,#len
8056DB EF                MOV     A,R7
8056DC F0                MOVX    @DPTR,A
 1040: 				#endif						
 1041: 				}		
8056DD         ?C0225?DEVICECHECK:
 1042: 				DisplayStr( 0, DispLine - 1, 1, line2, len );
 1043: 				WaitForWork( 1500, NULL );		
 1044: 			}
 1045: 		}
8056DD 8023              SJMP    ?C0314?DEVICECHECK
8056DF         ?C0217?DEVICECHECK:
 1046: 		else
 1047: 		{
 1048: 		#ifdef _CHINA_
 1049: 			len = sprintf( line2,  "\xd5\xfd在初始化，稍后再试" );
 1050: 		#else
 1051: 			len = sprintf( line2,  "Device initializing!" );
8056DF 7B80              MOV     R3,#BYTE2 0800EC8H
8056E1 7A0E              MOV     R2,#HIGH 0800EC8H
8056E3 79C8              MOV     R1,#LOW 0800EC8H
8056E5         
8056E5 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8056E8 A5128007B6        ECALL   ?C?PSTXDATA
8056ED 7B00              MOV     R3,#?C?XDATASEG
8056EF 7A17              MOV     R2,#HIGH line2
8056F1 7949              MOV     R1,#LOW line2
8056F3 A512800949        ECALL   _sprintf
8056F8 90175F            MOV     DPTR,#len
8056FB EF                MOV     A,R7
8056FC F0                MOVX    @DPTR,A
 1052: 		#endif			
 1053: 			DeviceStatus.MobileStates = 0;
8056FD E4                CLR     A
8056FE 900B23            MOV     DPTR,#DeviceStatus+08H
805701 F0                MOVX    @DPTR,A
 1054: 			DisplayStr( 0, DispLine - 1, 1, line2, len );
805702         
805702 901748            MOV     DPTR,#DispLine
805705 E0                MOVX    A,@DPTR
805706 14                DEC     A
805707 FD                MOV     R5,A
805708 D21A              SETB    ?_DisplayStr?BIT
80570A 7B00              MOV     R3,#?C?XDATASEG
80570C 7A17              MOV     R2,#HIGH line2
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 164


80570E 7949              MOV     R1,#LOW line2
805710 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805713 A5128007B6        ECALL   ?C?PSTXDATA
805718 90175F            MOV     DPTR,#len
80571B E0                MOVX    A,@DPTR
80571C 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80571F F0                MOVX    @DPTR,A
805720 E4                CLR     A
805721 FF                MOV     R7,A
805722 A51280885F        ECALL   _DisplayStr
 1055: 			WaitForWork( 1500, NULL );			
805727 E4                CLR     A
805728 7FDC              MOV     R7,#0DCH
80572A 7E05              MOV     R6,#05H
80572C A512808330        ECALL   ?L?COM000D
 1056: 		}
805731         ?C0226?DEVICECHECK:
 1057: 		DisplayStr( 0, DispLine - 1, 1, WMenuStr[6].str, WMenuStr[6].len );	
805731 901748            MOV     DPTR,#DispLine
805734 E0                MOVX    A,@DPTR
805735 14                DEC     A
805736 FD                MOV     R5,A
805737 D21A              SETB    ?_DisplayStr?BIT
805739 900EF5            MOV     DPTR,#WMenuStr+018H
80573C A5128007C0        ECALL   ?C?PLDCODE
805741 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805744 A5128007B6        ECALL   ?C?PSTXDATA
805749 900EF8            MOV     DPTR,#WMenuStr+01BH
80574C         
80574C E4                CLR     A
80574D 93                MOVC    A,@A+DPTR
80574E 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
805751 F0                MOVX    @DPTR,A
805752 E4                CLR     A
805753 FF                MOV     R7,A
805754 A51280885F        ECALL   _DisplayStr
 1058: 	}	
 1059: }
805759         ?C0210?DEVICECHECK:
805759 A522              ERET    
----- FUNCTION _TestAndDispMobileStates (END) -------


----- FUNCTION ?L?COM0029 (BEGIN) -----
80575B 901738            MOV     DPTR,#MenuNum
80575E E0                MOVX    A,@DPTR
80575F FD                MOV     R5,A
805760 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
805762 7F01              MOV     R7,#01H
----- FUNCTION _DisplayGoodsMenuAndVal (BEGIN) -----
 FILE: 'GoodsWaySet.c'
  167: void  DisplayGoodsMenuAndVal( u_char line, u_char Num, bit flag )
  168: {
805764 90173C            MOV     DPTR,#line
805767 EF                MOV     A,R7
805768 F0                MOVX    @DPTR,A
805769 A3                INC     DPTR
80576A ED                MOV     A,R5
80576B F0                MOVX    @DPTR,A
  169: 	u_char  xdata y_displaystr[22];	
  170: 	u_char   xdata  len ;
  171: 
  172: 	len = 0;	
80576C E4                CLR     A
80576D 901754            MOV     DPTR,#len
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 165


805770 F0                MOVX    @DPTR,A
  173: 	memset( y_displaystr,0,sizeof( y_displaystr ) );
805771 FE                MOV     R6,A
805772 7F16              MOV     R7,#016H
805774 FD                MOV     R5,A
805775 7B00              MOV     R3,#?C?XDATASEG
805777 7A17              MOV     R2,#HIGH y_displaystr
805779 793E              MOV     R1,#LOW y_displaystr
80577B A5128008A6        ECALL   ?C?MEMSET
  174: 	if( Num != 3 )
805780 90173D            MOV     DPTR,#Num
805783 E0                MOVX    A,@DPTR
805784 6403              XRL     A,#03H
805786 607A              JZ      ?C0051?GOODSWAYSET
  175: 	{				
  176: 		{
  177: 		 	memcpy( y_displaystr, GoodsWaystr[Num].str, GoodsWaystr[Num].len );
805788 E0                MOVX    A,@DPTR
805789 FF                MOV     R7,A
80578A 25E0              ADD     A,ACC
80578C 25E0              ADD     A,ACC
80578E 24A6              ADD     A,#LOW GoodsWaystr+03H
805790 F582              MOV     DPL,A
805792 E4                CLR     A
805793 3417              ADDC    A,#HIGH GoodsWaystr+03H
805795 F583              MOV     DPH,A
805797 E4                CLR     A
805798 93                MOVC    A,@A+DPTR
805799 FD                MOV     R5,A
80579A 7C00              MOV     R4,#00H
80579C C004              PUSH    AR4
80579E C005              PUSH    AR5
8057A0 EF                MOV     A,R7
8057A1 25E0              ADD     A,ACC
8057A3 25E0              ADD     A,ACC
8057A5 24A3              ADD     A,#LOW GoodsWaystr
8057A7 F582              MOV     DPL,A
8057A9 E4                CLR     A
8057AA 3417              ADDC    A,#HIGH GoodsWaystr
8057AC F583              MOV     DPH,A
8057AE A5128007C0        ECALL   ?C?PLDCODE
8057B3 783E              MOV     R0,#LOW y_displaystr
8057B5 7C17              MOV     R4,#HIGH y_displaystr
8057B7 7D00              MOV     R5,#?C?XDATASEG
8057B9 D007              POP     AR7
8057BB D006              POP     AR6
8057BD A51280052D        ECALL   ?C?COPY
  178: 		}
  179: 		if( flag == 1 )
8057C2 301905            JNB     flag,?C0052?GOODSWAYSET
  180: 		{		
  181: 			ReadWriteGoodsParam( Num, y_displaystr + GoodsWaystr[Num].len  , 0, &len, 0 );//得到菜单对应的值						
8057C5 A51280DDC4        ECALL   ?L?COM0016
  182: 		}			
8057CA         ?C0052?GOODSWAYSET:
  183: 		DisplayStr( 0, line, 1, y_displaystr, GoodsWaystr[Num].len + len  );//显示菜单		
8057CA 90173C            MOV     DPTR,#line
8057CD E0                MOVX    A,@DPTR
8057CE FD                MOV     R5,A
8057CF D21A              SETB    ?_DisplayStr?BIT
8057D1 7B00              MOV     R3,#?C?XDATASEG
8057D3 7A17              MOV     R2,#HIGH y_displaystr
8057D5 793E              MOV     R1,#LOW y_displaystr
8057D7 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8057DA A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 166


8057DF 90173D            MOV     DPTR,#Num
8057E2 E0                MOVX    A,@DPTR
8057E3 25E0              ADD     A,ACC
8057E5 25E0              ADD     A,ACC
8057E7 24A6              ADD     A,#LOW GoodsWaystr+03H
8057E9 F582              MOV     DPL,A
8057EB E4                CLR     A
8057EC 3417              ADDC    A,#HIGH GoodsWaystr+03H
8057EE F583              MOV     DPH,A
8057F0 E4                CLR     A
8057F1 93                MOVC    A,@A+DPTR
8057F2 FF                MOV     R7,A
8057F3 901754            MOV     DPTR,#len
8057F6 E0                MOVX    A,@DPTR
8057F7 FE                MOV     R6,A
8057F8 EF                MOV     A,R7
8057F9 2E                ADD     A,R6
8057FA 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8057FD F0                MOVX    @DPTR,A
8057FE E4                CLR     A
  184: 	}
8057FF 0258B5            LJMP    ?C0105?GOODSWAYSET
805802         ?C0051?GOODSWAYSET:
  185: 	else
  186: 	{		
  187: 		//Trace( "\n GPRS MenuStr" );
  188: 		if( flag == 0 )//编辑此项菜单
805802 201939            JB      flag,?C0054?GOODSWAYSET
  189: 		{	
  190: 			DisplayStr( 0, 0, 1, GoodsWaystr[Num].str, GoodsWaystr[Num].len );//显示菜单			
805805 D21A              SETB    ?_DisplayStr?BIT
805807 90173D            MOV     DPTR,#Num
80580A E0                MOVX    A,@DPTR
80580B FF                MOV     R7,A
80580C 25E0              ADD     A,ACC
80580E 25E0              ADD     A,ACC
805810 24A3              ADD     A,#LOW GoodsWaystr
805812 F582              MOV     DPL,A
805814 E4                CLR     A
805815 3417              ADDC    A,#HIGH GoodsWaystr
805817 F583              MOV     DPH,A
805819 A5128007C0        ECALL   ?C?PLDCODE
80581E 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805821 A5128007B6        ECALL   ?C?PSTXDATA
805826 EF                MOV     A,R7
805827 25E0              ADD     A,ACC
805829 25E0              ADD     A,ACC
80582B 24A6              ADD     A,#LOW GoodsWaystr+03H
80582D F582              MOV     DPL,A
80582F E4                CLR     A
805830 3417              ADDC    A,#HIGH GoodsWaystr+03H
805832 F583              MOV     DPH,A
805834 E4                CLR     A
805835 93                MOVC    A,@A+DPTR
805836 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
805839 F0                MOVX    @DPTR,A
80583A E4                CLR     A
80583B FD                MOV     R5,A
  191: 		}
80583C 8077              SJMP    ?C0104?GOODSWAYSET
80583E         ?C0054?GOODSWAYSET:
  192: 		else//显示此项菜单
  193: 		{
  194: 			memcpy( y_displaystr, GoodsWaystr[Num].str, GoodsWaystr[Num].len );//菜单串转化为unicode串				
80583E 90173D            MOV     DPTR,#Num
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 167


805841 E0                MOVX    A,@DPTR
805842 FF                MOV     R7,A
805843 25E0              ADD     A,ACC
805845 25E0              ADD     A,ACC
805847 24A6              ADD     A,#LOW GoodsWaystr+03H
805849 F582              MOV     DPL,A
80584B E4                CLR     A
80584C 3417              ADDC    A,#HIGH GoodsWaystr+03H
80584E F583              MOV     DPH,A
805850 E4                CLR     A
805851 93                MOVC    A,@A+DPTR
805852 FD                MOV     R5,A
805853 7C00              MOV     R4,#00H
805855 C004              PUSH    AR4
805857 C005              PUSH    AR5
805859 EF                MOV     A,R7
80585A 25E0              ADD     A,ACC
80585C 25E0              ADD     A,ACC
80585E 24A3              ADD     A,#LOW GoodsWaystr
805860 F582              MOV     DPL,A
805862 E4                CLR     A
805863 3417              ADDC    A,#HIGH GoodsWaystr
805865 F583              MOV     DPH,A
805867 A5128007C0        ECALL   ?C?PLDCODE
80586C 783E              MOV     R0,#LOW y_displaystr
80586E 7C17              MOV     R4,#HIGH y_displaystr
805870 7D00              MOV     R5,#?C?XDATASEG
805872 D007              POP     AR7
805874 D006              POP     AR6
805876 A51280052D        ECALL   ?C?COPY
  195: 			ReadWriteGoodsParam( Num, y_displaystr + GoodsWaystr[Num].len, 0, &len, 0 );//得到菜单对应的值				
80587B A51280DDC4        ECALL   ?L?COM0016
  196: 			DisplayStr( 0, line, 1,  y_displaystr, GoodsWaystr[Num].len + len );//显示菜单						
805880 90173C            MOV     DPTR,#line
805883 E0                MOVX    A,@DPTR
805884 FD                MOV     R5,A
805885 D21A              SETB    ?_DisplayStr?BIT
805887 7B00              MOV     R3,#?C?XDATASEG
805889 7A17              MOV     R2,#HIGH y_displaystr
80588B 793E              MOV     R1,#LOW y_displaystr
80588D 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805890 A5128007B6        ECALL   ?C?PSTXDATA
805895 90173D            MOV     DPTR,#Num
805898 E0                MOVX    A,@DPTR
805899 25E0              ADD     A,ACC
80589B 25E0              ADD     A,ACC
80589D 24A6              ADD     A,#LOW GoodsWaystr+03H
80589F F582              MOV     DPL,A
8058A1 E4                CLR     A
8058A2 3417              ADDC    A,#HIGH GoodsWaystr+03H
8058A4 F583              MOV     DPH,A
8058A6 E4                CLR     A
8058A7 93                MOVC    A,@A+DPTR
8058A8 FF                MOV     R7,A
8058A9 901754            MOV     DPTR,#len
8058AC E0                MOVX    A,@DPTR
8058AD FE                MOV     R6,A
8058AE EF                MOV     A,R7
8058AF 2E                ADD     A,R6
8058B0 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8058B3 F0                MOVX    @DPTR,A
8058B4 E4                CLR     A
8058B5         
8058B5         
8058B5 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 168


8058B6 A51280885F        ECALL   _DisplayStr
  197: 		}
  198: 	}
  199: //	Trace( "\n edit SysParamMenu Num= %bd", Num );
  200: 	//Trace( "display one SysParanMenu and val end\n" );
  201: }	
8058BB         ?C0056?GOODSWAYSET:
8058BB A522              ERET    
----- FUNCTION _DisplayGoodsMenuAndVal (END) -------


----- FUNCTION _EditGoodsParam (BEGIN) -----
 FILE: 'GoodsWaySet.c'
  205: bit  EditGoodsParam( u_char Num, u_char line )
  206: {
8058BD 901733            MOV     DPTR,#Num
8058C0 EF                MOV     A,R7
8058C1 F0                MOVX    @DPTR,A
8058C2 A3                INC     DPTR
8058C3 ED                MOV     A,R5
8058C4 F0                MOVX    @DPTR,A
  207: 	u_char  xdata Inputstr[10];
  208: 	u_char  xdata  key;
  209: 	u_char  xdata  Inputlen;
  210: 	
  211: 	key = 0;	
8058C5 E4                CLR     A
8058C6 90173F            MOV     DPTR,#key
8058C9 F0                MOVX    @DPTR,A
  212: 	Inputlen = 5;
8058CA A3                INC     DPTR
8058CB 7405              MOV     A,#05H
8058CD F0                MOVX    @DPTR,A
  213: 	memset( Inputstr, 0, sizeof( Inputstr ) );
8058CE 7E00              MOV     R6,#00H
8058D0 7F0A              MOV     R7,#0AH
8058D2 7D00              MOV     R5,#00H
8058D4 7B00              MOV     R3,#?C?XDATASEG
8058D6 7A17              MOV     R2,#HIGH Inputstr
8058D8 7935              MOV     R1,#LOW Inputstr
8058DA A5128008A6        ECALL   ?C?MEMSET
  214: 	if( Num == 1 )
8058DF 901733            MOV     DPTR,#Num
8058E2 E0                MOVX    A,@DPTR
8058E3 FF                MOV     R7,A
8058E4 6401              XRL     A,#01H
8058E6 7057              JNZ     ?C0057?GOODSWAYSET
  215: 		key = GetLineMoney( GoodsWaystr[Num].str, GoodsWaystr[Num].len, line, Inputstr, &Inputlen );
8058E8 EF                MOV     A,R7
8058E9 25E0              ADD     A,ACC
8058EB 25E0              ADD     A,ACC
8058ED 24A3              ADD     A,#LOW GoodsWaystr
8058EF F582              MOV     DPL,A
8058F1 E4                CLR     A
8058F2 3417              ADDC    A,#HIGH GoodsWaystr
8058F4 F583              MOV     DPH,A
8058F6 A5128007C0        ECALL   ?C?PLDCODE
8058FB C003              PUSH    AR3
8058FD C002              PUSH    AR2
8058FF C001              PUSH    AR1
805901 EF                MOV     A,R7
805902 25E0              ADD     A,ACC
805904 25E0              ADD     A,ACC
805906 24A6              ADD     A,#LOW GoodsWaystr+03H
805908 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 169


80590A E4                CLR     A
80590B 3417              ADDC    A,#HIGH GoodsWaystr+03H
80590D F583              MOV     DPH,A
80590F E4                CLR     A
805910 93                MOVC    A,@A+DPTR
805911 FD                MOV     R5,A
805912 901734            MOV     DPTR,#line
805915 E0                MOVX    A,@DPTR
805916 901759            MOV     DPTR,#?_GetLineMoney?BYTE+04H
805919 F0                MOVX    @DPTR,A
80591A 7B00              MOV     R3,#?C?XDATASEG
80591C 7A17              MOV     R2,#HIGH Inputstr
80591E 7935              MOV     R1,#LOW Inputstr
805920 A3                INC     DPTR
805921 A5128007B6        ECALL   ?C?PSTXDATA
805926 7A17              MOV     R2,#HIGH Inputlen
805928 7940              MOV     R1,#LOW Inputlen
80592A 90175D            MOV     DPTR,#?_GetLineMoney?BYTE+08H
80592D A5128007B6        ECALL   ?C?PSTXDATA
805932 D001              POP     AR1
805934 D002              POP     AR2
805936 D003              POP     AR3
805938 A51280CC5C        ECALL   _GetLineMoney
80593D 8059              SJMP    ?C0106?GOODSWAYSET
80593F         ?C0057?GOODSWAYSET:
  216: 	else
  217: 		key = GetLine( GoodsWaystr[Num].str, GoodsWaystr[Num].len, line, Inputstr, &Inputlen );			
80593F 901733            MOV     DPTR,#Num
805942 E0                MOVX    A,@DPTR
805943 FF                MOV     R7,A
805944 25E0              ADD     A,ACC
805946 25E0              ADD     A,ACC
805948 24A3              ADD     A,#LOW GoodsWaystr
80594A F582              MOV     DPL,A
80594C E4                CLR     A
80594D 3417              ADDC    A,#HIGH GoodsWaystr
80594F F583              MOV     DPH,A
805951 A5128007C0        ECALL   ?C?PLDCODE
805956 C003              PUSH    AR3
805958 C002              PUSH    AR2
80595A C001              PUSH    AR1
80595C EF                MOV     A,R7
80595D 25E0              ADD     A,ACC
80595F 25E0              ADD     A,ACC
805961 24A6              ADD     A,#LOW GoodsWaystr+03H
805963 F582              MOV     DPL,A
805965 E4                CLR     A
805966 3417              ADDC    A,#HIGH GoodsWaystr+03H
805968 F583              MOV     DPH,A
80596A E4                CLR     A
80596B 93                MOVC    A,@A+DPTR
80596C FD                MOV     R5,A
80596D 901734            MOV     DPTR,#line
805970 E0                MOVX    A,@DPTR
805971 901772            MOV     DPTR,#?_GetLine?BYTE+04H
805974 F0                MOVX    @DPTR,A
805975 7B00              MOV     R3,#?C?XDATASEG
805977 7A17              MOV     R2,#HIGH Inputstr
805979 7935              MOV     R1,#LOW Inputstr
80597B A3                INC     DPTR
80597C A5128007B6        ECALL   ?C?PSTXDATA
805981 7A17              MOV     R2,#HIGH Inputlen
805983 7940              MOV     R1,#LOW Inputlen
805985 901776            MOV     DPTR,#?_GetLine?BYTE+08H
805988 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 170


80598D D001              POP     AR1
80598F D002              POP     AR2
805991 D003              POP     AR3
805993 A51280CFB7        ECALL   _GetLine
805998         
805998 90173F            MOV     DPTR,#key
80599B EF                MOV     A,R7
80599C F0                MOVX    @DPTR,A
80599D         ?C0058?GOODSWAYSET:
  218: 	ClearKey();		
80599D A512808FA5        ECALL   ClearKey
  219: 	if( key == 1 )//Enter	
8059A2 90173F            MOV     DPTR,#key
8059A5 E0                MOVX    A,@DPTR
8059A6 6401              XRL     A,#01H
8059A8 7031              JNZ     ?C0059?GOODSWAYSET
  220: 	{		
  221: 		DisplayCursorState( 0, 0, 0, 0, 1 );		
8059AA C21A              CLR     ?_DisplayCursorState?BIT
8059AC 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8059AF F0                MOVX    @DPTR,A
8059B0 D21B              SETB    ?_DisplayCursorState?BIT+01H
8059B2 FD                MOV     R5,A
8059B3 FF                MOV     R7,A
8059B4 A51280897C        ECALL   _DisplayCursorState
  222: 		//Trace( "selected Enter \n" );			
  223: 		ReadWriteGoodsParam( Num, 0, Inputstr ,&Inputlen, 1 );		
8059B9 901733            MOV     DPTR,#Num
8059BC E0                MOVX    A,@DPTR
8059BD FF                MOV     R7,A
8059BE 7A17              MOV     R2,#HIGH Inputstr
8059C0 7B35              MOV     R3,#LOW Inputstr
8059C2 90175A            MOV     DPTR,#?_ReadWriteGoodsParam?BYTE+05H
8059C5 7417              MOV     A,#HIGH Inputlen
8059C7 F0                MOVX    @DPTR,A
8059C8 A3                INC     DPTR
8059C9 7440              MOV     A,#LOW Inputlen
8059CB F0                MOVX    @DPTR,A
8059CC D21A              SETB    ?_ReadWriteGoodsParam?BIT
8059CE E4                CLR     A
8059CF FD                MOV     R5,A
8059D0 FC                MOV     R4,A
8059D1 A51280DDF1        ECALL   _ReadWriteGoodsParam
  224: 		ClearKey();		
8059D6 A512808FA5        ECALL   ClearKey
  225: 	}		
8059DB         ?C0059?GOODSWAYSET:
  226: 	//Trace( "edit one SysParanMenu end\n" );
  227: 	return 0;
8059DB C3                CLR     C
  228: }
8059DC         ?C0060?GOODSWAYSET:
8059DC A522              ERET    
----- FUNCTION _EditGoodsParam (END) -------


----- FUNCTION ?L?COM0021 (BEGIN) -----
8059DE 901739            MOV     DPTR,#MenuNum
8059E1         ?L?COM0022:
8059E1 E0                MOVX    A,@DPTR
8059E2 FD                MOV     R5,A
8059E3 D219              SETB    ?_DisplayMenuAndVal?BIT
8059E5 E4                CLR     A
8059E6 FF                MOV     R7,A
----- FUNCTION _DisplayMenuAndVal (BEGIN) -----
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 171


 FILE: 'SysParamSet.c'
 1018: u_char  DisplayMenuAndVal( u_char y, u_char Num, bit flag )
 1019: {	
8059E7 90173E            MOV     DPTR,#y
8059EA EF                MOV     A,R7
8059EB F0                MOVX    @DPTR,A
8059EC A3                INC     DPTR
8059ED ED                MOV     A,R5
8059EE F0                MOVX    @DPTR,A
 1020: 	u_char   xdata  len ;
 1021: 
 1022: 	len = 0;	
8059EF E4                CLR     A
8059F0 A3                INC     DPTR
8059F1 F0                MOVX    @DPTR,A
 1023: 	memset( y_displaystr,0,sizeof( y_displaystr ) );				
8059F2 FE                MOV     R6,A
8059F3 7F2C              MOV     R7,#02CH
8059F5 FD                MOV     R5,A
8059F6 7B00              MOV     R3,#?C?XDATASEG
8059F8 7A2D              MOV     R2,#HIGH y_displaystr
8059FA 79A3              MOV     R1,#LOW y_displaystr
8059FC A5128008A6        ECALL   ?C?MEMSET
 1024: 	if( flag == 0 )//编辑此项菜单
805A01 201937            JB      flag,?C0352?SYSPARAMSET
 1025: 	{	
 1026: 		DisplayStr( 0, 0, 1, SysMenustr[Num].str, SysMenustr[Num].len );//显示菜单			
805A04 D21A              SETB    ?_DisplayStr?BIT
805A06 90173F            MOV     DPTR,#Num
805A09 E0                MOVX    A,@DPTR
805A0A FF                MOV     R7,A
805A0B 25E0              ADD     A,ACC
805A0D 25E0              ADD     A,ACC
805A0F 24B8              ADD     A,#LOW SysMenustr
805A11 F582              MOV     DPL,A
805A13 E4                CLR     A
805A14 3410              ADDC    A,#HIGH SysMenustr
805A16 F583              MOV     DPH,A
805A18 A5128007C0        ECALL   ?C?PLDCODE
805A1D 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805A20 A5128007B6        ECALL   ?C?PSTXDATA
805A25 EF                MOV     A,R7
805A26 25E0              ADD     A,ACC
805A28 25E0              ADD     A,ACC
805A2A 24BB              ADD     A,#LOW SysMenustr+03H
805A2C F582              MOV     DPL,A
805A2E E4                CLR     A
805A2F 3410              ADDC    A,#HIGH SysMenustr+03H
805A31 A512808854        ECALL   ?L?COM0004
 1027: 		return 0;
805A36 7F00              MOV     R7,#00H
805A38 025B3B            LJMP    ?C0353?SYSPARAMSET
 1028: 	}
805A3B         ?C0352?SYSPARAMSET:
 1029: 	else//显示此项菜单
 1030: 	{
 1031: 		memcpy( y_displaystr, SysMenustr[Num].str, SysMenustr[Num].len );//菜单串转化为unicode串				
805A3B 90173F            MOV     DPTR,#Num
805A3E E0                MOVX    A,@DPTR
805A3F FF                MOV     R7,A
805A40 25E0              ADD     A,ACC
805A42 25E0              ADD     A,ACC
805A44 24BB              ADD     A,#LOW SysMenustr+03H
805A46 F582              MOV     DPL,A
805A48 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 172


805A49 3410              ADDC    A,#HIGH SysMenustr+03H
805A4B F583              MOV     DPH,A
805A4D E4                CLR     A
805A4E 93                MOVC    A,@A+DPTR
805A4F FD                MOV     R5,A
805A50 7C00              MOV     R4,#00H
805A52 C004              PUSH    AR4
805A54 C005              PUSH    AR5
805A56 EF                MOV     A,R7
805A57 25E0              ADD     A,ACC
805A59 25E0              ADD     A,ACC
805A5B 24B8              ADD     A,#LOW SysMenustr
805A5D F582              MOV     DPL,A
805A5F E4                CLR     A
805A60 3410              ADDC    A,#HIGH SysMenustr
805A62 F583              MOV     DPH,A
805A64 A5128007C0        ECALL   ?C?PLDCODE
805A69 78A3              MOV     R0,#LOW y_displaystr
805A6B 7C2D              MOV     R4,#HIGH y_displaystr
805A6D 7D00              MOV     R5,#?C?XDATASEG
805A6F D007              POP     AR7
805A71 D006              POP     AR6
805A73 A51280052D        ECALL   ?C?COPY
 1032: 		ReadWriteSysParam( Num, y_displaystr + SysMenustr[Num].len, 0, &len, 0 );//得到菜单对应的值				
805A78 90173F            MOV     DPTR,#Num
805A7B E0                MOVX    A,@DPTR
805A7C FF                MOV     R7,A
805A7D 25E0              ADD     A,ACC
805A7F 25E0              ADD     A,ACC
805A81 24BB              ADD     A,#LOW SysMenustr+03H
805A83 F582              MOV     DPL,A
805A85 E4                CLR     A
805A86 3410              ADDC    A,#HIGH SysMenustr+03H
805A88 F583              MOV     DPH,A
805A8A E4                CLR     A
805A8B 93                MOVC    A,@A+DPTR
805A8C 24A3              ADD     A,#LOW y_displaystr
805A8E F582              MOV     DPL,A
805A90 E4                CLR     A
805A91 342D              ADDC    A,#HIGH y_displaystr
805A93 AD82              MOV     R5,DPL
805A95 FC                MOV     R4,A
805A96 90175A            MOV     DPTR,#?_ReadWriteSysParam?BYTE+05H
805A99 7417              MOV     A,#HIGH len
805A9B F0                MOVX    @DPTR,A
805A9C A3                INC     DPTR
805A9D 7440              MOV     A,#LOW len
805A9F F0                MOVX    @DPTR,A
805AA0 C21A              CLR     ?_ReadWriteSysParam?BIT
805AA2 E4                CLR     A
805AA3 FB                MOV     R3,A
805AA4 FA                MOV     R2,A
805AA5 A512810000        ECALL   _ReadWriteSysParam
 1033: 		DisplayStr( 0, y, 1,  y_displaystr, SysMenustr[Num].len + len );//显示菜单
805AAA 90173E            MOV     DPTR,#y
805AAD E0                MOVX    A,@DPTR
805AAE FD                MOV     R5,A
805AAF D21A              SETB    ?_DisplayStr?BIT
805AB1 7B00              MOV     R3,#?C?XDATASEG
805AB3 7A2D              MOV     R2,#HIGH y_displaystr
805AB5 79A3              MOV     R1,#LOW y_displaystr
805AB7 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805ABA A5128007B6        ECALL   ?C?PSTXDATA
805ABF 90173F            MOV     DPTR,#Num
805AC2 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 173


805AC3 25E0              ADD     A,ACC
805AC5 25E0              ADD     A,ACC
805AC7 24BB              ADD     A,#LOW SysMenustr+03H
805AC9 F582              MOV     DPL,A
805ACB E4                CLR     A
805ACC 3410              ADDC    A,#HIGH SysMenustr+03H
805ACE F583              MOV     DPH,A
805AD0 E4                CLR     A
805AD1 93                MOVC    A,@A+DPTR
805AD2 FF                MOV     R7,A
805AD3 901740            MOV     DPTR,#len
805AD6 E0                MOVX    A,@DPTR
805AD7 FE                MOV     R6,A
805AD8 EF                MOV     A,R7
805AD9 2E                ADD     A,R6
805ADA 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
805ADD F0                MOVX    @DPTR,A
805ADE E4                CLR     A
805ADF FF                MOV     R7,A
805AE0 A51280885F        ECALL   _DisplayStr
 1034: 		y_displaystr[SysMenustr[Num].len + len ] = '\0';
805AE5 90173F            MOV     DPTR,#Num
805AE8 E0                MOVX    A,@DPTR
805AE9 FF                MOV     R7,A
805AEA 25E0              ADD     A,ACC
805AEC 25E0              ADD     A,ACC
805AEE 24BB              ADD     A,#LOW SysMenustr+03H
805AF0 F582              MOV     DPL,A
805AF2 E4                CLR     A
805AF3 3410              ADDC    A,#HIGH SysMenustr+03H
805AF5 F583              MOV     DPH,A
805AF7 E4                CLR     A
805AF8 93                MOVC    A,@A+DPTR
805AF9 FE                MOV     R6,A
805AFA 901740            MOV     DPTR,#len
805AFD E0                MOVX    A,@DPTR
805AFE FD                MOV     R5,A
805AFF EE                MOV     A,R6
805B00 2D                ADD     A,R5
805B01 24A3              ADD     A,#LOW y_displaystr
805B03 F582              MOV     DPL,A
805B05 E4                CLR     A
805B06 342D              ADDC    A,#HIGH y_displaystr
805B08 F583              MOV     DPH,A
805B0A E4                CLR     A
805B0B F0                MOVX    @DPTR,A
 1035: 		if( SysMenustr[Num].len + len > 20 )
805B0C EF                MOV     A,R7
805B0D 25E0              ADD     A,ACC
805B0F 25E0              ADD     A,ACC
805B11 24BB              ADD     A,#LOW SysMenustr+03H
805B13 F582              MOV     DPL,A
805B15 E4                CLR     A
805B16 3410              ADDC    A,#HIGH SysMenustr+03H
805B18 F583              MOV     DPH,A
805B1A E4                CLR     A
805B1B 93                MOVC    A,@A+DPTR
805B1C FF                MOV     R7,A
805B1D 2D                ADD     A,R5
805B1E FD                MOV     R5,A
805B1F E4                CLR     A
805B20 33                RLC     A
805B21 FC                MOV     R4,A
805B22 D3                SETB    C
805B23 ED                MOV     A,R5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 174


805B24 9414              SUBB    A,#014H
805B26 EC                MOV     A,R4
805B27 6480              XRL     A,#080H
805B29 9480              SUBB    A,#080H
805B2B 400C              JC      ?C0355?SYSPARAMSET
 1036: 			return ( SysMenustr[Num].len + len - 20) ;		
805B2D 901740            MOV     DPTR,#len
805B30 E0                MOVX    A,@DPTR
805B31 FE                MOV     R6,A
805B32 EF                MOV     A,R7
805B33 2E                ADD     A,R6
805B34 24EC              ADD     A,#0ECH
805B36 FF                MOV     R7,A
805B37 8002              SJMP    ?C0353?SYSPARAMSET
805B39         ?C0355?SYSPARAMSET:
 1037: 		else
 1038: 			return 0;
805B39 7F00              MOV     R7,#00H
 1039: 	}
 1040: }	
805B3B         ?C0353?SYSPARAMSET:
805B3B A522              ERET    
----- FUNCTION _DisplayMenuAndVal (END) -------


----- FUNCTION _EditParam (BEGIN) -----
 FILE: 'SysParamSet.c'
 1045: bit  EditParam( u_char Num, u_char y )
 1046: {
805B3D 901733            MOV     DPTR,#Num
805B40 EF                MOV     A,R7
805B41 F0                MOVX    @DPTR,A
805B42 A3                INC     DPTR
805B43 ED                MOV     A,R5
805B44 F0                MOVX    @DPTR,A
 1047: 	u_char  xdata Inputstr[30];
 1048: 	u_char  xdata  key;
 1049: 	u_char  xdata  Inputlen;	
 1050: 	bit	data  ret;
 1051: 	
 1052: 	key = 0;
805B45 E4                CLR     A
805B46 901753            MOV     DPTR,#key
805B49 F0                MOVX    @DPTR,A
 1053: 	Inputlen = 0;
805B4A A3                INC     DPTR
805B4B F0                MOVX    @DPTR,A
 1054: 	ret = 0;
805B4C C218              CLR     ret
 1055: 	//Trace( "edit one SysParanMenu begin\n" );
 1056: 	
 1057: 	Inputlen = SysInputLen[Num];
805B4E 901733            MOV     DPTR,#Num
805B51 E0                MOVX    A,@DPTR
805B52 FF                MOV     R7,A
805B53 25E0              ADD     A,ACC
805B55 242C              ADD     A,#LOW SysInputLen
805B57 F582              MOV     DPL,A
805B59 E4                CLR     A
805B5A 3411              ADDC    A,#HIGH SysInputLen
805B5C F583              MOV     DPH,A
805B5E 7401              MOV     A,#01H
805B60 93                MOVC    A,@A+DPTR
805B61 901754            MOV     DPTR,#Inputlen
805B64 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 175


 1058: 	if( ( Num == 0 ) ||( Num == 1 ) ||( Num == 2 ) || ( Num == 7 )|| ( Num == 8 )|| ( Num == 9 ) )
805B65 EF                MOV     A,R7
805B66 6018              JZ      ?C0358?SYSPARAMSET
805B68 6401              XRL     A,#01H
805B6A 6014              JZ      ?C0358?SYSPARAMSET
805B6C EF                MOV     A,R7
805B6D 6402              XRL     A,#02H
805B6F 600F              JZ      ?C0358?SYSPARAMSET
805B71 EF                MOV     A,R7
805B72 6407              XRL     A,#07H
805B74 600A              JZ      ?C0358?SYSPARAMSET
805B76 EF                MOV     A,R7
805B77 6408              XRL     A,#08H
805B79 6005              JZ      ?C0358?SYSPARAMSET
805B7B EF                MOV     A,R7
805B7C 6409              XRL     A,#09H
805B7E 705B              JNZ     ?C0357?SYSPARAMSET
805B80         ?C0358?SYSPARAMSET:
 1059: 		key = GetLineMoney( SysMenustr[Num].str, SysMenustr[Num].len, y, Inputstr, &Inputlen );		
805B80 901733            MOV     DPTR,#Num
805B83 E0                MOVX    A,@DPTR
805B84 FF                MOV     R7,A
805B85 25E0              ADD     A,ACC
805B87 25E0              ADD     A,ACC
805B89 24B8              ADD     A,#LOW SysMenustr
805B8B F582              MOV     DPL,A
805B8D E4                CLR     A
805B8E 3410              ADDC    A,#HIGH SysMenustr
805B90 F583              MOV     DPH,A
805B92 A5128007C0        ECALL   ?C?PLDCODE
805B97 C003              PUSH    AR3
805B99 C002              PUSH    AR2
805B9B C001              PUSH    AR1
805B9D EF                MOV     A,R7
805B9E 25E0              ADD     A,ACC
805BA0 25E0              ADD     A,ACC
805BA2 24BB              ADD     A,#LOW SysMenustr+03H
805BA4 F582              MOV     DPL,A
805BA6 E4                CLR     A
805BA7 3410              ADDC    A,#HIGH SysMenustr+03H
805BA9 F583              MOV     DPH,A
805BAB E4                CLR     A
805BAC 93                MOVC    A,@A+DPTR
805BAD FD                MOV     R5,A
805BAE 901734            MOV     DPTR,#y
805BB1 E0                MOVX    A,@DPTR
805BB2 901759            MOV     DPTR,#?_GetLineMoney?BYTE+04H
805BB5 F0                MOVX    @DPTR,A
805BB6 7B00              MOV     R3,#?C?XDATASEG
805BB8 7A17              MOV     R2,#HIGH Inputstr
805BBA 7935              MOV     R1,#LOW Inputstr
805BBC A3                INC     DPTR
805BBD A5128007B6        ECALL   ?C?PSTXDATA
805BC2 7A17              MOV     R2,#HIGH Inputlen
805BC4 7954              MOV     R1,#LOW Inputlen
805BC6 90175D            MOV     DPTR,#?_GetLineMoney?BYTE+08H
805BC9 A5128007B6        ECALL   ?C?PSTXDATA
805BCE D001              POP     AR1
805BD0 D002              POP     AR2
805BD2 D003              POP     AR3
805BD4 A51280CC5C        ECALL   _GetLineMoney
805BD9 8059              SJMP    ?C0484?SYSPARAMSET
805BDB         ?C0357?SYSPARAMSET:
 1060: 	else
 1061: 		key = GetLine( SysMenustr[Num].str, SysMenustr[Num].len, y, Inputstr, &Inputlen );	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 176


805BDB 901733            MOV     DPTR,#Num
805BDE E0                MOVX    A,@DPTR
805BDF FF                MOV     R7,A
805BE0 25E0              ADD     A,ACC
805BE2 25E0              ADD     A,ACC
805BE4 24B8              ADD     A,#LOW SysMenustr
805BE6 F582              MOV     DPL,A
805BE8 E4                CLR     A
805BE9 3410              ADDC    A,#HIGH SysMenustr
805BEB F583              MOV     DPH,A
805BED A5128007C0        ECALL   ?C?PLDCODE
805BF2 C003              PUSH    AR3
805BF4 C002              PUSH    AR2
805BF6 C001              PUSH    AR1
805BF8 EF                MOV     A,R7
805BF9 25E0              ADD     A,ACC
805BFB 25E0              ADD     A,ACC
805BFD 24BB              ADD     A,#LOW SysMenustr+03H
805BFF F582              MOV     DPL,A
805C01 E4                CLR     A
805C02 3410              ADDC    A,#HIGH SysMenustr+03H
805C04 F583              MOV     DPH,A
805C06 E4                CLR     A
805C07 93                MOVC    A,@A+DPTR
805C08 FD                MOV     R5,A
805C09 901734            MOV     DPTR,#y
805C0C E0                MOVX    A,@DPTR
805C0D 901772            MOV     DPTR,#?_GetLine?BYTE+04H
805C10 F0                MOVX    @DPTR,A
805C11 7B00              MOV     R3,#?C?XDATASEG
805C13 7A17              MOV     R2,#HIGH Inputstr
805C15 7935              MOV     R1,#LOW Inputstr
805C17 A3                INC     DPTR
805C18 A5128007B6        ECALL   ?C?PSTXDATA
805C1D 7A17              MOV     R2,#HIGH Inputlen
805C1F 7954              MOV     R1,#LOW Inputlen
805C21 901776            MOV     DPTR,#?_GetLine?BYTE+08H
805C24 A5128007B6        ECALL   ?C?PSTXDATA
805C29 D001              POP     AR1
805C2B D002              POP     AR2
805C2D D003              POP     AR3
805C2F A51280CFB7        ECALL   _GetLine
805C34         
805C34 901753            MOV     DPTR,#key
805C37 EF                MOV     A,R7
805C38 F0                MOVX    @DPTR,A
805C39         ?C0359?SYSPARAMSET:
 1062: 	ClearKey();	
805C39 A512808FA5        ECALL   ClearKey
 1063: 	//Trace( "input END RET (0x) = %bx\n", key );		
 1064: 	if( key == 1 )//Enter	
805C3E 901753            MOV     DPTR,#key
805C41 E0                MOVX    A,@DPTR
805C42 6401              XRL     A,#01H
805C44 7031              JNZ     ?C0360?SYSPARAMSET
 1065: 	{
 1066: 		//Trace( "display select \n" );
 1067: 		DisplayCursorState( 0, 0, 0, 0, 1 );			
805C46 C21A              CLR     ?_DisplayCursorState?BIT
805C48 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
805C4B F0                MOVX    @DPTR,A
805C4C D21B              SETB    ?_DisplayCursorState?BIT+01H
805C4E FD                MOV     R5,A
805C4F FF                MOV     R7,A
805C50 A51280897C        ECALL   _DisplayCursorState
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 177


 1068: 		ReadWriteSysParam( Num, 0, Inputstr ,&Inputlen, 1 );
805C55 901733            MOV     DPTR,#Num
805C58 E0                MOVX    A,@DPTR
805C59 FF                MOV     R7,A
805C5A 7A17              MOV     R2,#HIGH Inputstr
805C5C 7B35              MOV     R3,#LOW Inputstr
805C5E 90175A            MOV     DPTR,#?_ReadWriteSysParam?BYTE+05H
805C61 7417              MOV     A,#HIGH Inputlen
805C63 F0                MOVX    @DPTR,A
805C64 A3                INC     DPTR
805C65 7454              MOV     A,#LOW Inputlen
805C67 F0                MOVX    @DPTR,A
805C68 D21A              SETB    ?_ReadWriteSysParam?BIT
805C6A E4                CLR     A
805C6B FD                MOV     R5,A
805C6C FC                MOV     R4,A
805C6D A512810000        ECALL   _ReadWriteSysParam
 1069: 		ClearKey();		
805C72 A512808FA5        ECALL   ClearKey
 1070: 	}		
805C77         ?C0360?SYSPARAMSET:
 1071: 	//Trace( "edit one SysParanMenu end\n" );
 1072: 	return ret;
805C77 A218              MOV     C,ret
 1073: }
805C79         ?C0361?SYSPARAMSET:
805C79 A522              ERET    
----- FUNCTION _EditParam (END) -------


----- FUNCTION InitAllCounter (BEGIN) -----
 FILE: 'countermaint.c'
  118: void InitAllCounter()
  119: {	
  120: 	u_char xdata key;
  121: //	struct time xdata Temptime;
  122: 
  123: 	DisplayStr( 0, 0, 1, InfoStr[0].str, InfoStr[0].len );
805C7B D21A              SETB    ?_DisplayStr?BIT
805C7D 901340            MOV     DPTR,#InfoStr
805C80 A5128007C0        ECALL   ?C?PLDCODE
805C85 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805C88 A5128007B6        ECALL   ?C?PSTXDATA
805C8D 901343            MOV     DPTR,#InfoStr+03H
805C90 A512808856        ECALL   ?L?COM0005
  124: 	DisplayStr( 0, 1, 1, InfoStr[1].str, InfoStr[1].len);
805C95 D21A              SETB    ?_DisplayStr?BIT
805C97 901344            MOV     DPTR,#InfoStr+04H
805C9A A5128007C0        ECALL   ?C?PLDCODE
805C9F 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805CA2 A5128007B6        ECALL   ?C?PSTXDATA
805CA7 901347            MOV     DPTR,#InfoStr+07H
805CAA E4                CLR     A
805CAB 93                MOVC    A,@A+DPTR
805CAC 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
805CAF F0                MOVX    @DPTR,A
805CB0 7D01              MOV     R5,#01H
805CB2 E4                CLR     A
805CB3 FF                MOV     R7,A
805CB4 A51280885F        ECALL   _DisplayStr
  125: 	SgwSecTimer= 6;		
805CB9 751E06            MOV     SgwSecTimer,#06H
805CBC         ?C0001?COUNTERMAINT:
  126: 	while( SgwSecTimer )
805CBC E51E              MOV     A,SgwSecTimer
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 178


805CBE 7003              JNZ     $ + 5H
805CC0 025D51            LJMP    ?C0008?COUNTERMAINT
  127: 	{
  128: 		key = GetKey();
805CC3 A5128096D1        ECALL   GetKey
;---- Variable 'key' assigned to Register 'R7' ----
  129: 		if( key == KEY_CANCEL )
805CC8 EF                MOV     A,R7
805CC9 641B              XRL     A,#01BH
805CCB 7003              JNZ     $ + 5H
805CCD 025D51            LJMP    ?C0008?COUNTERMAINT
  130: 			break;
805CD0         ?C0003?COUNTERMAINT:
  131: 		if (key == KEY_SUBMIT)
805CD0 EF                MOV     A,R7
805CD1 640D              XRL     A,#0DH
805CD3 705F              JNZ     ?C0004?COUNTERMAINT
  132: 		{
  133: 			memset( &TradeCounter, 0, sizeof( struct TRADECOUNTER ) );			    
805CD5 FE                MOV     R6,A
805CD6 7F2A              MOV     R7,#02AH
805CD8 FD                MOV     R5,A
805CD9 7B00              MOV     R3,#?C?XDATASEG
805CDB 7A0A              MOV     R2,#HIGH TradeCounter
805CDD 79F1              MOV     R1,#LOW TradeCounter
805CDF A5128008A6        ECALL   ?C?MEMSET
  134: 		//	memset( DoubtTradeLog, 0, sizeof( DoubtTradeLog ) );
  135: 			memset( TradeLog, 0, sizeof( TradeLog ) );	
805CE4 7E02              MOV     R6,#02H
805CE6 7F40              MOV     R7,#040H
805CE8 7D00              MOV     R5,#00H
805CEA 7B00              MOV     R3,#?C?XDATASEG
805CEC 7A01              MOV     R2,#HIGH TradeLog
805CEE 79C7              MOV     R1,#LOW TradeLog
805CF0 A5128008A6        ECALL   ?C?MEMSET
  136: 			for( key = 0; key < GOODSWAYNUM; key++ )					
805CF5 E4                CLR     A
805CF6 FF                MOV     R7,A
805CF7         ?C0005?COUNTERMAINT:
  137: 				TradeLog[key].WayNo = InputGoodsWayList[key].GoodsWayNo;
805CF7 EF                MOV     A,R7
805CF8 25E0              ADD     A,ACC
805CFA 25E0              ADD     A,ACC
805CFC 24DC              ADD     A,#LOW InputGoodsWayList
805CFE F582              MOV     DPL,A
805D00 E4                CLR     A
805D01 342B              ADDC    A,#HIGH InputGoodsWayList
805D03 F583              MOV     DPH,A
805D05 E0                MOVX    A,@DPTR
805D06 FE                MOV     R6,A
805D07 75F009            MOV     B,#09H
805D0A EF                MOV     A,R7
805D0B 9001C7            MOV     DPTR,#TradeLog
805D0E A51280079F        ECALL   ?C?OFFXADD
805D13 EE                MOV     A,R6
805D14 F0                MOVX    @DPTR,A
805D15 0F                INC     R7
805D16 EF                MOV     A,R7
805D17 B440DD            CJNE    A,#040H,?C0005?COUNTERMAINT
805D1A         ?C0006?COUNTERMAINT:
  138: 		
  139: 		/*	memset( &Temptime, 0, sizeof( struct time ) );
  140: 			GetCurrentTime( &Temptime );
  141: 			TradeCounter.Date[0] = ( Temptime.year & 0xff00 ) >> 8;
  142: 			TradeCounter.Date[1] = ( Temptime.year & 0x00ff );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 179


  143: 			TradeCounter.Date[2] = Temptime.mon;
  144: 			TradeCounter.Date[3] = Temptime.date;			
  145: 			SgwSecTimer = 0;*/
  146: 			SaveTradeParam();
805D1A A51280DB42        ECALL   SaveTradeParam
  147: 			SaveTradeCounter();
805D1F A51280DA8B        ECALL   SaveTradeCounter
  148: 			SchedulerProcess();//让出时间片
805D24 A5128090B6        ECALL   SchedulerProcess
  149: 			WaitForWork( 100, NULL );	
805D29 E4                CLR     A
805D2A 7F64              MOV     R7,#064H
805D2C FE                MOV     R6,A
805D2D A512808330        ECALL   ?L?COM000D
805D32 801D              SJMP    ?C0008?COUNTERMAINT
  150: 			return;
  151: 		}
805D34         ?C0004?COUNTERMAINT:
  152: 		SchedulerProcess();//让出时间片
805D34 A5128090B6        ECALL   SchedulerProcess
  153: 		WaitForWork( 100, &Lcd );	
805D39 E4                CLR     A
805D3A 7F64              MOV     R7,#064H
805D3C FE                MOV     R6,A
805D3D FD                MOV     R5,A
805D3E FC                MOV     R4,A
805D3F 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
805D42 7423              MOV     A,#HIGH Lcd
805D44 F0                MOVX    @DPTR,A
805D45 A3                INC     DPTR
805D46 7469              MOV     A,#LOW Lcd
805D48 F0                MOVX    @DPTR,A
805D49 A512808338        ECALL   _WaitForWork
  154: 	}
805D4E 025CBC            LJMP    ?C0001?COUNTERMAINT
  155: }
805D51         ?C0008?COUNTERMAINT:
805D51 A522              ERET    
----- FUNCTION InitAllCounter (END) -------


----- FUNCTION ?L?COM002A (BEGIN) -----
805D53 901732            MOV     DPTR,#firstNum
805D56 E0                MOVX    A,@DPTR
805D57 FD                MOV     R5,A
805D58 7F01              MOV     R7,#01H
----- FUNCTION _DisplayTraceSum (BEGIN) -----
 FILE: 'countermaint.c'
  158: void  DisplayTraceSum( u_char yPos, u_char Index )
  159: {
805D5A 901736            MOV     DPTR,#yPos
805D5D EF                MOV     A,R7
805D5E F0                MOVX    @DPTR,A
805D5F A3                INC     DPTR
805D60 ED                MOV     A,R5
805D61 F0                MOVX    @DPTR,A
  160: 	u_char xdata len = 0;
  161: 	u_char xdata line[20];
805D62 E4                CLR     A
805D63 A3                INC     DPTR
805D64 F0                MOVX    @DPTR,A
  162: 	u_char xdata i = 0;
805D65 90174D            MOV     DPTR,#i
805D68 F0                MOVX    @DPTR,A
  163: 	u_int  xdata TempSum = 0;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 180


805D69 A3                INC     DPTR
805D6A F0                MOVX    @DPTR,A
805D6B A3                INC     DPTR
805D6C F0                MOVX    @DPTR,A
  164: 
  165: 	memset( line, 0, sizeof( line ) );
805D6D FE                MOV     R6,A
805D6E 7F14              MOV     R7,#014H
805D70 FD                MOV     R5,A
805D71 7B00              MOV     R3,#?C?XDATASEG
805D73 7A17              MOV     R2,#HIGH line
805D75 7939              MOV     R1,#LOW line
805D77 A5128008A6        ECALL   ?C?MEMSET
  166: 	memcpy( line, GoodsMianMenuStr[Index].str, GoodsMianMenuStr[Index].len );
805D7C 901737            MOV     DPTR,#Index
805D7F E0                MOVX    A,@DPTR
805D80 FF                MOV     R7,A
805D81 25E0              ADD     A,ACC
805D83 25E0              ADD     A,ACC
805D85 242B              ADD     A,#LOW GoodsMianMenuStr+03H
805D87 F582              MOV     DPL,A
805D89 E4                CLR     A
805D8A 3413              ADDC    A,#HIGH GoodsMianMenuStr+03H
805D8C F583              MOV     DPH,A
805D8E E4                CLR     A
805D8F 93                MOVC    A,@A+DPTR
805D90 FD                MOV     R5,A
805D91 7C00              MOV     R4,#00H
805D93 C004              PUSH    AR4
805D95 C005              PUSH    AR5
805D97 EF                MOV     A,R7
805D98 25E0              ADD     A,ACC
805D9A 25E0              ADD     A,ACC
805D9C 2428              ADD     A,#LOW GoodsMianMenuStr
805D9E F582              MOV     DPL,A
805DA0 E4                CLR     A
805DA1 3413              ADDC    A,#HIGH GoodsMianMenuStr
805DA3 F583              MOV     DPH,A
805DA5 A5128007C0        ECALL   ?C?PLDCODE
805DAA 7839              MOV     R0,#LOW line
805DAC 7C17              MOV     R4,#HIGH line
805DAE 7D00              MOV     R5,#?C?XDATASEG
805DB0 D007              POP     AR7
805DB2 D006              POP     AR6
805DB4 A51280052D        ECALL   ?C?COPY
  167: 	switch( Index )
805DB9 901737            MOV     DPTR,#Index
805DBC E0                MOVX    A,@DPTR
805DBD 14                DEC     A
805DBE 602A              JZ      ?C0011?COUNTERMAINT
805DC0 04                INC     A
805DC1 7068              JNZ     ?C0009?COUNTERMAINT
  168: 	{
  169: 		case 0://正常交易次数	
805DC3         ?C0010?COUNTERMAINT:
  170: 			len = sprintf( line + GoodsMianMenuStr[0].len, "%u", TradeCounter.GoodTraceSum );			
805DC3 90132B            MOV     DPTR,#GoodsMianMenuStr+03H
805DC6 E4                CLR     A
805DC7 93                MOVC    A,@A+DPTR
805DC8 2439              ADD     A,#LOW line
805DCA F9                MOV     R1,A
805DCB E4                CLR     A
805DCC 3417              ADDC    A,#HIGH line
805DCE FA                MOV     R2,A
805DCF 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 181


805DD1 C003              PUSH    AR3
805DD3 C002              PUSH    AR2
805DD5 C001              PUSH    AR1
805DD7 7B80              MOV     R3,#BYTE2 08012B1H
805DD9 7A12              MOV     R2,#HIGH 08012B1H
805DDB 79B1              MOV     R1,#LOW 08012B1H
805DDD 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805DE0 A5128007B6        ECALL   ?C?PSTXDATA
805DE5 900B01            MOV     DPTR,#TradeCounter+010H
  171: 		//	len = LenOfNum( TradeCounter.GoodTraceSum );			
  172: 		break;
805DE8 8025              SJMP    ?C0168?COUNTERMAINT
  173: 		case 1://有疑问出货交易次数
805DEA         ?C0011?COUNTERMAINT:
  174: 			len = sprintf( line + GoodsMianMenuStr[1].len, "%u", TradeCounter.GoodDoubtTraceSum );			
805DEA 90132F            MOV     DPTR,#GoodsMianMenuStr+07H
805DED E4                CLR     A
805DEE 93                MOVC    A,@A+DPTR
805DEF 2439              ADD     A,#LOW line
805DF1 F9                MOV     R1,A
805DF2 E4                CLR     A
805DF3 3417              ADDC    A,#HIGH line
805DF5 FA                MOV     R2,A
805DF6 7B00              MOV     R3,#?C?XDATASEG
805DF8 C003              PUSH    AR3
805DFA C002              PUSH    AR2
805DFC C001              PUSH    AR1
805DFE 7B80              MOV     R3,#BYTE2 08012B1H
805E00 7A12              MOV     R2,#HIGH 08012B1H
805E02 79B1              MOV     R1,#LOW 08012B1H
805E04 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805E07 A5128007B6        ECALL   ?C?PSTXDATA
805E0C 900B03            MOV     DPTR,#TradeCounter+012H
805E0F         
805E0F E0                MOVX    A,@DPTR
805E10 FF                MOV     R7,A
805E11 A3                INC     DPTR
805E12 E0                MOVX    A,@DPTR
805E13 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
805E16 CF                XCH     A,R7
805E17 F0                MOVX    @DPTR,A
805E18 A3                INC     DPTR
805E19 EF                MOV     A,R7
805E1A F0                MOVX    @DPTR,A
805E1B D001              POP     AR1
805E1D D002              POP     AR2
805E1F D003              POP     AR3
805E21 A512800949        ECALL   _sprintf
805E26 901738            MOV     DPTR,#len
805E29 EF                MOV     A,R7
805E2A F0                MOVX    @DPTR,A
  175: 		break;
  176: 	/*	case 2://总余货量
  177: 			TempSum = 0;
  178: 			for( i = 0; i < GOODSWAYNUM; i ++ )							
  179: 				TempSum += GoodsWaySetVal[ i ].GoodsCurrentSum;			
  180: 			sprintf( line + GoodsMianMenuStr[2].len, "%d", TempSum );
  181: 			if( TempSum >= 100 )					
  182: 				len = LenOfNum( TempSum ) + 1;
  183: 			else 
  184: 				len = LenOfNum( TempSum ) + 2;		
  185: 		break;*/
  186: 		case 2://单货道交易统计
  187: 		break;
  188: 	}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 182


805E2B         ?C0009?COUNTERMAINT:
  189: 	DisplayStr( 0, yPos, 1, line, GoodsMianMenuStr[Index].len + len );	
805E2B 901736            MOV     DPTR,#yPos
805E2E E0                MOVX    A,@DPTR
805E2F FD                MOV     R5,A
805E30 D21A              SETB    ?_DisplayStr?BIT
805E32 7B00              MOV     R3,#?C?XDATASEG
805E34 7A17              MOV     R2,#HIGH line
805E36 7939              MOV     R1,#LOW line
805E38 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
805E3B A5128007B6        ECALL   ?C?PSTXDATA
805E40 901737            MOV     DPTR,#Index
805E43 E0                MOVX    A,@DPTR
805E44 25E0              ADD     A,ACC
805E46 25E0              ADD     A,ACC
805E48 242B              ADD     A,#LOW GoodsMianMenuStr+03H
805E4A F582              MOV     DPL,A
805E4C E4                CLR     A
805E4D 3413              ADDC    A,#HIGH GoodsMianMenuStr+03H
805E4F F583              MOV     DPH,A
805E51 E4                CLR     A
805E52 93                MOVC    A,@A+DPTR
805E53 FF                MOV     R7,A
805E54 901738            MOV     DPTR,#len
805E57 E0                MOVX    A,@DPTR
805E58 FE                MOV     R6,A
805E59 EF                MOV     A,R7
805E5A 2E                ADD     A,R6
805E5B 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
805E5E F0                MOVX    @DPTR,A
805E5F E4                CLR     A
805E60 FF                MOV     R7,A
805E61 A50280885F        EJMP    _DisplayStr
----- FUNCTION _DisplayTraceSum (END) -------


----- FUNCTION ?L?COM002E (BEGIN) -----
805E66 901736            MOV     DPTR,#firstNum
805E69 E0                MOVX    A,@DPTR
805E6A FF                MOV     R7,A
805E6B 90173C            MOV     DPTR,#m_GoodsNo
805E6E E0                MOVX    A,@DPTR
805E6F FB                MOV     R3,A
805E70 7D01              MOV     R5,#01H
----- FUNCTION _DispGoodsWayList (BEGIN) -----
 FILE: 'countermaint.c'
  193: void DispGoodsWayList(  u_char iIndex, u_char y, u_char iArrayIndex )
  194: {
805E72 90173D            MOV     DPTR,#iIndex
805E75 EF                MOV     A,R7
805E76 F0                MOVX    @DPTR,A
805E77 A3                INC     DPTR
805E78 ED                MOV     A,R5
805E79 F0                MOVX    @DPTR,A
805E7A A3                INC     DPTR
805E7B EB                MOV     A,R3
805E7C F0                MOVX    @DPTR,A
  195: 	u_char xdata len = 0;  //GetData的返回值
  196: 	u_char xdata line[20]; //存放提示字符串
805E7D E4                CLR     A
805E7E A3                INC     DPTR
805E7F F0                MOVX    @DPTR,A
  197: 	
  198: 	memset( line, 0, sizeof( line) );	
805E80 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 183


805E81 7F14              MOV     R7,#014H
805E83 FD                MOV     R5,A
805E84 7B00              MOV     R3,#?C?XDATASEG
805E86 7A17              MOV     R2,#HIGH line
805E88 7941              MOV     R1,#LOW line
805E8A A5128008A6        ECALL   ?C?MEMSET
  199: 	memcpy( line, GoodsWayListStr[iIndex].str, GoodsWayListStr[iIndex].len );
805E8F 90173D            MOV     DPTR,#iIndex
805E92 E0                MOVX    A,@DPTR
805E93 FF                MOV     R7,A
805E94 25E0              ADD     A,ACC
805E96 25E0              ADD     A,ACC
805E98 2437              ADD     A,#LOW GoodsWayListStr+03H
805E9A F582              MOV     DPL,A
805E9C E4                CLR     A
805E9D 3413              ADDC    A,#HIGH GoodsWayListStr+03H
805E9F F583              MOV     DPH,A
805EA1 E4                CLR     A
805EA2 93                MOVC    A,@A+DPTR
805EA3 FD                MOV     R5,A
805EA4 7C00              MOV     R4,#00H
805EA6 C004              PUSH    AR4
805EA8 C005              PUSH    AR5
805EAA EF                MOV     A,R7
805EAB 25E0              ADD     A,ACC
805EAD 25E0              ADD     A,ACC
805EAF 2434              ADD     A,#LOW GoodsWayListStr
805EB1 F582              MOV     DPL,A
805EB3 E4                CLR     A
805EB4 3413              ADDC    A,#HIGH GoodsWayListStr
805EB6 F583              MOV     DPH,A
805EB8 A5128007C0        ECALL   ?C?PLDCODE
805EBD 7841              MOV     R0,#LOW line
805EBF 7C17              MOV     R4,#HIGH line
805EC1 7D00              MOV     R5,#?C?XDATASEG
805EC3 D007              POP     AR7
805EC5 D006              POP     AR6
805EC7 A51280052D        ECALL   ?C?COPY
  200: 	switch( iIndex )
805ECC 90173D            MOV     DPTR,#iIndex
805ECF E0                MOVX    A,@DPTR
805ED0 FF                MOV     R7,A
805ED1 14                DEC     A
805ED2 6062              JZ      ?C0016?COUNTERMAINT
805ED4 14                DEC     A
805ED5 7003              JNZ     $ + 5H
805ED7 025F98            LJMP    ?C0017?COUNTERMAINT
805EDA 2402              ADD     A,#02H
805EDC 6003              JZ      $ + 5H
805EDE 02600F            LJMP    ?C0014?COUNTERMAINT
  201: 	{
  202: 		case 0://货道编号
805EE1         ?C0015?COUNTERMAINT:
  203: 			Trace("\n TradeLog[%bu].WayNo = %bu", iArrayIndex,TradeLog[iArrayIndex].WayNo );
  204: 			sprintf( line + GoodsWayListStr[iIndex].len, "%bu", TradeLog[iArrayIndex].WayNo );			
805EE1 EF                MOV     A,R7
805EE2 25E0              ADD     A,ACC
805EE4 25E0              ADD     A,ACC
805EE6 2437              ADD     A,#LOW GoodsWayListStr+03H
805EE8 F582              MOV     DPL,A
805EEA E4                CLR     A
805EEB 3413              ADDC    A,#HIGH GoodsWayListStr+03H
805EED F583              MOV     DPH,A
805EEF E4                CLR     A
805EF0 93                MOVC    A,@A+DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 184


805EF1 2441              ADD     A,#LOW line
805EF3 F9                MOV     R1,A
805EF4 E4                CLR     A
805EF5 3417              ADDC    A,#HIGH line
805EF7 FA                MOV     R2,A
805EF8 7B00              MOV     R3,#?C?XDATASEG
805EFA C003              PUSH    AR3
805EFC C002              PUSH    AR2
805EFE C001              PUSH    AR1
805F00 7B80              MOV     R3,#BYTE2 08012B4H
805F02 7A12              MOV     R2,#HIGH 08012B4H
805F04 79B4              MOV     R1,#LOW 08012B4H
805F06 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805F09 A5128007B6        ECALL   ?C?PSTXDATA
805F0E 90173F            MOV     DPTR,#iArrayIndex
805F11 E0                MOVX    A,@DPTR
805F12 75F009            MOV     B,#09H
805F15 9001C7            MOV     DPTR,#TradeLog
805F18 A51280079F        ECALL   ?C?OFFXADD
805F1D E0                MOVX    A,@DPTR
805F1E 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
805F21 F0                MOVX    @DPTR,A
805F22 D001              POP     AR1
805F24 D002              POP     AR2
805F26 D003              POP     AR3
805F28 A512800949        ECALL   _sprintf
  205: 			len = 2;
805F2D 901740            MOV     DPTR,#len
805F30 7402              MOV     A,#02H
805F32 F0                MOVX    @DPTR,A
  206: 		break; 
805F33 02600F            LJMP    ?C0014?COUNTERMAINT
  207: 		case 1://交易次数
805F36         ?C0016?COUNTERMAINT:
  208: 			sprintf( line + GoodsWayListStr[iIndex].len, "%u", TradeLog[iArrayIndex].TraceSum );  //bu-u, Changed by Andy 
>> on 2010.8.19							
805F36 90173D            MOV     DPTR,#iIndex
805F39 E0                MOVX    A,@DPTR
805F3A 25E0              ADD     A,ACC
805F3C 25E0              ADD     A,ACC
805F3E 2437              ADD     A,#LOW GoodsWayListStr+03H
805F40 F582              MOV     DPL,A
805F42 E4                CLR     A
805F43 3413              ADDC    A,#HIGH GoodsWayListStr+03H
805F45 F583              MOV     DPH,A
805F47 E4                CLR     A
805F48 93                MOVC    A,@A+DPTR
805F49 2441              ADD     A,#LOW line
805F4B F9                MOV     R1,A
805F4C E4                CLR     A
805F4D 3417              ADDC    A,#HIGH line
805F4F FA                MOV     R2,A
805F50 7B00              MOV     R3,#?C?XDATASEG
805F52 C003              PUSH    AR3
805F54 C002              PUSH    AR2
805F56 C001              PUSH    AR1
805F58 7B80              MOV     R3,#BYTE2 08012B1H
805F5A 7A12              MOV     R2,#HIGH 08012B1H
805F5C 79B1              MOV     R1,#LOW 08012B1H
805F5E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805F61 A5128007B6        ECALL   ?C?PSTXDATA
805F66 90173F            MOV     DPTR,#iArrayIndex
805F69 E0                MOVX    A,@DPTR
805F6A 75F009            MOV     B,#09H
805F6D 9001C8            MOV     DPTR,#TradeLog+01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 185


805F70 A51280079F        ECALL   ?C?OFFXADD
805F75 E0                MOVX    A,@DPTR
805F76 FF                MOV     R7,A
805F77 A3                INC     DPTR
805F78 E0                MOVX    A,@DPTR
805F79 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
805F7C CF                XCH     A,R7
805F7D F0                MOVX    @DPTR,A
805F7E A3                INC     DPTR
805F7F EF                MOV     A,R7
805F80 F0                MOVX    @DPTR,A
805F81 D001              POP     AR1
805F83 D002              POP     AR2
805F85 D003              POP     AR3
805F87 A512800949        ECALL   _sprintf
  209: 			len = LenOfNum( TradeLog[iArrayIndex].TraceSum );			
805F8C 90173F            MOV     DPTR,#iArrayIndex
805F8F E0                MOVX    A,@DPTR
805F90 75F009            MOV     B,#09H
805F93 9001C8            MOV     DPTR,#TradeLog+01H
  210: 		break;
805F96 8060              SJMP    ?C0169?COUNTERMAINT
  211: /*		case 2://现存货量,
  212: 			sprintf( line + GoodsWayListStr[iIndex].len, "%bu", GoodsWaySetVal[ iArrayIndex ].GoodsCurrentSum );			
  213: 			len = LenOfNum( GoodsWaySetVal[ iArrayIndex ].GoodsCurrentSum ) + 2;	
  214: 		break;*/
  215:   		case 2://疑问出货数量
805F98         ?C0017?COUNTERMAINT:
  216: 			sprintf( line + GoodsWayListStr[iIndex].len, "%u", TradeLog[iArrayIndex].DoubtTraceSum );	//bu-u, Changed by A
>> ndy on 2010.8.19		
805F98 90173D            MOV     DPTR,#iIndex
805F9B E0                MOVX    A,@DPTR
805F9C 25E0              ADD     A,ACC
805F9E 25E0              ADD     A,ACC
805FA0 2437              ADD     A,#LOW GoodsWayListStr+03H
805FA2 F582              MOV     DPL,A
805FA4 E4                CLR     A
805FA5 3413              ADDC    A,#HIGH GoodsWayListStr+03H
805FA7 F583              MOV     DPH,A
805FA9 E4                CLR     A
805FAA 93                MOVC    A,@A+DPTR
805FAB 2441              ADD     A,#LOW line
805FAD F9                MOV     R1,A
805FAE E4                CLR     A
805FAF 3417              ADDC    A,#HIGH line
805FB1 FA                MOV     R2,A
805FB2 7B00              MOV     R3,#?C?XDATASEG
805FB4 C003              PUSH    AR3
805FB6 C002              PUSH    AR2
805FB8 C001              PUSH    AR1
805FBA 7B80              MOV     R3,#BYTE2 08012B1H
805FBC 7A12              MOV     R2,#HIGH 08012B1H
805FBE 79B1              MOV     R1,#LOW 08012B1H
805FC0 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
805FC3 A5128007B6        ECALL   ?C?PSTXDATA
805FC8 90173F            MOV     DPTR,#iArrayIndex
805FCB E0                MOVX    A,@DPTR
805FCC 75F009            MOV     B,#09H
805FCF 9001CA            MOV     DPTR,#TradeLog+03H
805FD2 A51280079F        ECALL   ?C?OFFXADD
805FD7 E0                MOVX    A,@DPTR
805FD8 FF                MOV     R7,A
805FD9 A3                INC     DPTR
805FDA E0                MOVX    A,@DPTR
805FDB 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 186


805FDE CF                XCH     A,R7
805FDF F0                MOVX    @DPTR,A
805FE0 A3                INC     DPTR
805FE1 EF                MOV     A,R7
805FE2 F0                MOVX    @DPTR,A
805FE3 D001              POP     AR1
805FE5 D002              POP     AR2
805FE7 D003              POP     AR3
805FE9 A512800949        ECALL   _sprintf
  217: 			len = LenOfNum( TradeLog[iArrayIndex].DoubtTraceSum  );			
805FEE 90173F            MOV     DPTR,#iArrayIndex
805FF1 E0                MOVX    A,@DPTR
805FF2 75F009            MOV     B,#09H
805FF5 9001CA            MOV     DPTR,#TradeLog+03H
805FF8         
805FF8 A51280079F        ECALL   ?C?OFFXADD
805FFD E0                MOVX    A,@DPTR
805FFE FE                MOV     R6,A
805FFF A3                INC     DPTR
806000 E0                MOVX    A,@DPTR
806001 FF                MOV     R7,A
806002 E4                CLR     A
806003 FC                MOV     R4,A
806004 FD                MOV     R5,A
806005 A51280D4CA        ECALL   _LenOfNum
80600A 901740            MOV     DPTR,#len
80600D EF                MOV     A,R7
80600E F0                MOVX    @DPTR,A
  218: 		break;
  219: 	}	
80600F         ?C0014?COUNTERMAINT:
  220:     DisplayStr( 0, y, 1, line,  GoodsWayListStr[iIndex].len + len );	
80600F 90173E            MOV     DPTR,#y
806012 E0                MOVX    A,@DPTR
806013 FD                MOV     R5,A
806014 D21A              SETB    ?_DisplayStr?BIT
806016 7B00              MOV     R3,#?C?XDATASEG
806018 7A17              MOV     R2,#HIGH line
80601A 7941              MOV     R1,#LOW line
80601C 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80601F A5128007B6        ECALL   ?C?PSTXDATA
806024 90173D            MOV     DPTR,#iIndex
806027 E0                MOVX    A,@DPTR
806028 25E0              ADD     A,ACC
80602A 25E0              ADD     A,ACC
80602C 2437              ADD     A,#LOW GoodsWayListStr+03H
80602E F582              MOV     DPL,A
806030 E4                CLR     A
806031 3413              ADDC    A,#HIGH GoodsWayListStr+03H
806033 F583              MOV     DPH,A
806035 E4                CLR     A
806036 93                MOVC    A,@A+DPTR
806037 FF                MOV     R7,A
806038 901740            MOV     DPTR,#len
80603B E0                MOVX    A,@DPTR
80603C FE                MOV     R6,A
80603D EF                MOV     A,R7
80603E 2E                ADD     A,R6
80603F 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
806042 F0                MOVX    @DPTR,A
806043 E4                CLR     A
806044 FF                MOV     R7,A
806045 A50280885F        EJMP    _DisplayStr
----- FUNCTION _DispGoodsWayList (END) -------

LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 187



----- FUNCTION ?L?COM0030 (BEGIN) -----
80604A 901733            MOV     DPTR,#firstNum
80604D E0                MOVX    A,@DPTR
80604E FD                MOV     R5,A
80604F 7F01              MOV     R7,#01H
----- FUNCTION _DispCurrencyList (BEGIN) -----
 FILE: 'countermaint.c'
  431: void DispCurrencyList( u_char yPos, u_char iIndex )
  432: {
806051 901736            MOV     DPTR,#yPos
806054 EF                MOV     A,R7
806055 F0                MOVX    @DPTR,A
806056 A3                INC     DPTR
806057 ED                MOV     A,R5
806058 F0                MOVX    @DPTR,A
  433: 	u_char xdata len = 0; 
  434: 	u_char xdata line[26];	
806059 E4                CLR     A
80605A A3                INC     DPTR
80605B F0                MOVX    @DPTR,A
  435: 	
  436: 	memset( line, 0, sizeof( line ) );		
80605C FE                MOV     R6,A
80605D 7F1A              MOV     R7,#01AH
80605F FD                MOV     R5,A
806060 7B00              MOV     R3,#?C?XDATASEG
806062 7A17              MOV     R2,#HIGH line
806064 7939              MOV     R1,#LOW line
806066 A5128008A6        ECALL   ?C?MEMSET
  437: 	memcpy( line, CurrencyMenuStr[iIndex].str, CurrencyMenuStr[iIndex].len );
80606B 901737            MOV     DPTR,#iIndex
80606E E0                MOVX    A,@DPTR
80606F FF                MOV     R7,A
806070 25E0              ADD     A,ACC
806072 25E0              ADD     A,ACC
806074 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806076 F582              MOV     DPL,A
806078 E4                CLR     A
806079 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80607B F583              MOV     DPH,A
80607D E4                CLR     A
80607E 93                MOVC    A,@A+DPTR
80607F FD                MOV     R5,A
806080 7C00              MOV     R4,#00H
806082 C004              PUSH    AR4
806084 C005              PUSH    AR5
806086 EF                MOV     A,R7
806087 25E0              ADD     A,ACC
806089 25E0              ADD     A,ACC
80608B 24FC              ADD     A,#LOW CurrencyMenuStr
80608D F582              MOV     DPL,A
80608F E4                CLR     A
806090 3412              ADDC    A,#HIGH CurrencyMenuStr
806092 F583              MOV     DPH,A
806094 A5128007C0        ECALL   ?C?PLDCODE
806099 7839              MOV     R0,#LOW line
80609B 7C17              MOV     R4,#HIGH line
80609D 7D00              MOV     R5,#?C?XDATASEG
80609F D007              POP     AR7
8060A1 D006              POP     AR6
8060A3 A51280052D        ECALL   ?C?COPY
  438: 	len = CurrencyMenuStr[iIndex].len;
8060A8 901737            MOV     DPTR,#iIndex
8060AB E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 188


8060AC FF                MOV     R7,A
8060AD 25E0              ADD     A,ACC
8060AF 25E0              ADD     A,ACC
8060B1 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8060B3 F582              MOV     DPL,A
8060B5 E4                CLR     A
8060B6 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8060B8 F583              MOV     DPH,A
8060BA E4                CLR     A
8060BB 93                MOVC    A,@A+DPTR
8060BC 901738            MOV     DPTR,#len
8060BF F0                MOVX    @DPTR,A
  439: 	switch( iIndex )
8060C0 EF                MOV     A,R7
8060C1 A5128007CD        ECALL   ?C?CCASEX
8060C6 60EB              DW      ?C0075?COUNTERMAINT
8060C8 00                DB      00H
8060C9 61D0              DW      ?C0080?COUNTERMAINT
8060CB 01                DB      01H
8060CC 62F5              DW      ?C0085?COUNTERMAINT
8060CE 02                DB      02H
8060CF 641A              DW      ?C0090?COUNTERMAINT
8060D1 03                DB      03H
8060D2 653F              DW      ?C0095?COUNTERMAINT
8060D4 04                DB      04H
8060D5 6664              DW      ?C0100?COUNTERMAINT
8060D7 05                DB      05H
8060D8 6789              DW      ?C0105?COUNTERMAINT
8060DA 06                DB      06H
8060DB 68AE              DW      ?C0110?COUNTERMAINT
8060DD 07                DB      07H
8060DE 6A09              DW      ?C0115?COUNTERMAINT
8060E0 08                DB      08H
8060E1 6A4B              DW      ?C0116?COUNTERMAINT
8060E3 09                DB      09H
8060E4 6A8C              DW      ?C0117?COUNTERMAINT
8060E6 0A                DB      0AH
8060E7 0000              DW      00H
8060E9 6ADC              DW      ?C0074?COUNTERMAINT
  440: 	{
  441: 		case 0://收入总金额	
8060EB         ?C0075?COUNTERMAINT:
  442: 			switch( SystemParameter.curUnit )		
8060EB 900468            MOV     DPTR,#SystemParameter+048H
8060EE E0                MOVX    A,@DPTR
8060EF FE                MOV     R6,A
8060F0 A3                INC     DPTR
8060F1 E0                MOVX    A,@DPTR
8060F2 FF                MOV     R7,A
8060F3 EE                MOV     A,R6
8060F4 6003              JZ      $ + 5H
8060F6 026ADC            LJMP    ?C0074?COUNTERMAINT
8060F9 EF                MOV     A,R7
8060FA 24F6              ADD     A,#0F6H
8060FC 6041              JZ      ?C0078?COUNTERMAINT
8060FE 24A6              ADD     A,#0A6H
806100 6067              JZ      ?C0079?COUNTERMAINT
806102 2463              ADD     A,#063H
806104 6003              JZ      $ + 5H
806106 026ADC            LJMP    ?C0074?COUNTERMAINT
  443: 			{
  444: 				case 1:
806109         ?C0077?COUNTERMAINT:
  445: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.TrueCurrencySum );
806109 901737            MOV     DPTR,#iIndex
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 189


80610C E0                MOVX    A,@DPTR
80610D 25E0              ADD     A,ACC
80610F 25E0              ADD     A,ACC
806111 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806113 F582              MOV     DPL,A
806115 E4                CLR     A
806116 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806118 F583              MOV     DPH,A
80611A E4                CLR     A
80611B 93                MOVC    A,@A+DPTR
80611C 2439              ADD     A,#LOW line
80611E F9                MOV     R1,A
80611F E4                CLR     A
806120 3417              ADDC    A,#HIGH line
806122 FA                MOV     R2,A
806123 7B00              MOV     R3,#?C?XDATASEG
806125 C003              PUSH    AR3
806127 C002              PUSH    AR2
806129 C001              PUSH    AR1
80612B 7B80              MOV     R3,#BYTE2 08012DAH
80612D 7A12              MOV     R2,#HIGH 08012DAH
80612F 79DA              MOV     R1,#LOW 08012DAH
806131 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806134 A5128007B6        ECALL   ?C?PSTXDATA
806139 900AF1            MOV     DPTR,#TradeCounter
  446: 				break;
80613C 026902            LJMP    ?C0195?COUNTERMAINT
  447: 				case 10:
80613F         ?C0078?COUNTERMAINT:
  448: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.TrueCurrencySum/SystemParameter.
>> curUnit, TradeCounter.TrueCurrencySum%SystemParameter.curUnit );
80613F 901737            MOV     DPTR,#iIndex
806142 E0                MOVX    A,@DPTR
806143 25E0              ADD     A,ACC
806145 25E0              ADD     A,ACC
806147 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806149 F582              MOV     DPL,A
80614B E4                CLR     A
80614C 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80614E F583              MOV     DPH,A
806150 E4                CLR     A
806151 93                MOVC    A,@A+DPTR
806152 2439              ADD     A,#LOW line
806154 F9                MOV     R1,A
806155 E4                CLR     A
806156 3417              ADDC    A,#HIGH line
806158 FA                MOV     R2,A
806159 7B00              MOV     R3,#?C?XDATASEG
80615B C003              PUSH    AR3
80615D C002              PUSH    AR2
80615F C001              PUSH    AR1
806161 7B80              MOV     R3,#BYTE2 08012DEH
806163 7A12              MOV     R2,#HIGH 08012DEH
806165 79DE              MOV     R1,#LOW 08012DEH
  449: 				break;
806167 8028              SJMP    ?C0178?COUNTERMAINT
  450: 				case 100:
806169         ?C0079?COUNTERMAINT:
  451: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.TrueCurrencySum/SystemParamete
>> r.curUnit, TradeCounter.TrueCurrencySum%SystemParameter.curUnit );
806169 901737            MOV     DPTR,#iIndex
80616C E0                MOVX    A,@DPTR
80616D 25E0              ADD     A,ACC
80616F 25E0              ADD     A,ACC
806171 24FF              ADD     A,#LOW CurrencyMenuStr+03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 190


806173 F582              MOV     DPL,A
806175 E4                CLR     A
806176 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806178 F583              MOV     DPH,A
80617A E4                CLR     A
80617B 93                MOVC    A,@A+DPTR
80617C 2439              ADD     A,#LOW line
80617E F9                MOV     R1,A
80617F E4                CLR     A
806180 3417              ADDC    A,#HIGH line
806182 FA                MOV     R2,A
806183 7B00              MOV     R3,#?C?XDATASEG
806185 C003              PUSH    AR3
806187 C002              PUSH    AR2
806189 C001              PUSH    AR1
80618B 7B80              MOV     R3,#BYTE2 08012E6H
80618D 7A12              MOV     R2,#HIGH 08012E6H
80618F 79E6              MOV     R1,#LOW 08012E6H
806191         
806191 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806194 A5128007B6        ECALL   ?C?PSTXDATA
806199 900468            MOV     DPTR,#SystemParameter+048H
80619C E0                MOVX    A,@DPTR
80619D FE                MOV     R6,A
80619E A3                INC     DPTR
80619F E0                MOVX    A,@DPTR
8061A0 FF                MOV     R7,A
8061A1 FB                MOV     R3,A
8061A2 AA06              MOV     R2,AR6
8061A4 E4                CLR     A
8061A5 F9                MOV     R1,A
8061A6 F8                MOV     R0,A
8061A7 900AF1            MOV     DPTR,#TradeCounter
8061AA A512800720        ECALL   ?C?LLDXDATA
8061AF A512800679        ECALL   ?C?ULDIV
8061B4 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8061B7 A512800792        ECALL   ?C?LSTXDATA
8061BC 900468            MOV     DPTR,#SystemParameter+048H
8061BF E0                MOVX    A,@DPTR
8061C0 FE                MOV     R6,A
8061C1 A3                INC     DPTR
8061C2 E0                MOVX    A,@DPTR
8061C3 FF                MOV     R7,A
8061C4 FB                MOV     R3,A
8061C5 AA06              MOV     R2,AR6
8061C7 E4                CLR     A
8061C8 F9                MOV     R1,A
8061C9 F8                MOV     R0,A
8061CA 900AF1            MOV     DPTR,#TradeCounter
  452: 				break;
8061CD 026971            LJMP    ?C0197?COUNTERMAINT
  453: 			}			
  454: 		break;
  455: 		case 1://收入纸币总金额			
8061D0         ?C0080?COUNTERMAINT:
  456: 			switch( SystemParameter.curUnit )		
8061D0 900468            MOV     DPTR,#SystemParameter+048H
8061D3 E0                MOVX    A,@DPTR
8061D4 FE                MOV     R6,A
8061D5 A3                INC     DPTR
8061D6 E0                MOVX    A,@DPTR
8061D7 FF                MOV     R7,A
8061D8 EE                MOV     A,R6
8061D9 6003              JZ      $ + 5H
8061DB 026ADC            LJMP    ?C0074?COUNTERMAINT
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 191


8061DE EF                MOV     A,R7
8061DF 24F6              ADD     A,#0F6H
8061E1 6044              JZ      ?C0083?COUNTERMAINT
8061E3 24A6              ADD     A,#0A6H
8061E5 7003              JNZ     $ + 5H
8061E7 02628E            LJMP    ?C0084?COUNTERMAINT
8061EA 2463              ADD     A,#063H
8061EC 6003              JZ      $ + 5H
8061EE 026ADC            LJMP    ?C0074?COUNTERMAINT
  457: 			{
  458: 				case 1:
8061F1         ?C0082?COUNTERMAINT:
  459: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.CashSum );
8061F1 901737            MOV     DPTR,#iIndex
8061F4 E0                MOVX    A,@DPTR
8061F5 25E0              ADD     A,ACC
8061F7 25E0              ADD     A,ACC
8061F9 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8061FB F582              MOV     DPL,A
8061FD E4                CLR     A
8061FE 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806200 F583              MOV     DPH,A
806202 E4                CLR     A
806203 93                MOVC    A,@A+DPTR
806204 2439              ADD     A,#LOW line
806206 F9                MOV     R1,A
806207 E4                CLR     A
806208 3417              ADDC    A,#HIGH line
80620A FA                MOV     R2,A
80620B 7B00              MOV     R3,#?C?XDATASEG
80620D C003              PUSH    AR3
80620F C002              PUSH    AR2
806211 C001              PUSH    AR1
806213 7B80              MOV     R3,#BYTE2 08012DAH
806215 7A12              MOV     R2,#HIGH 08012DAH
806217 79DA              MOV     R1,#LOW 08012DAH
806219 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80621C A5128007B6        ECALL   ?C?PSTXDATA
806221 900AF5            MOV     DPTR,#TradeCounter+04H
806224         
  460: 				break;
806224 026902            LJMP    ?C0195?COUNTERMAINT
  461: 				case 10:
806227         ?C0083?COUNTERMAINT:
  462: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.CashSum/SystemParameter.curUnit,
>>  TradeCounter.CashSum%SystemParameter.curUnit );
806227 901737            MOV     DPTR,#iIndex
80622A E0                MOVX    A,@DPTR
80622B 25E0              ADD     A,ACC
80622D 25E0              ADD     A,ACC
80622F 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806231 F582              MOV     DPL,A
806233 E4                CLR     A
806234 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806236 F583              MOV     DPH,A
806238 E4                CLR     A
806239 93                MOVC    A,@A+DPTR
80623A 2439              ADD     A,#LOW line
80623C F9                MOV     R1,A
80623D E4                CLR     A
80623E 3417              ADDC    A,#HIGH line
806240 FA                MOV     R2,A
806241 7B00              MOV     R3,#?C?XDATASEG
806243 C003              PUSH    AR3
806245 C002              PUSH    AR2
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 192


806247 C001              PUSH    AR1
806249 7B80              MOV     R3,#BYTE2 08012DEH
80624B 7A12              MOV     R2,#HIGH 08012DEH
80624D 79DE              MOV     R1,#LOW 08012DEH
80624F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806252 A5128007B6        ECALL   ?C?PSTXDATA
806257 900468            MOV     DPTR,#SystemParameter+048H
80625A E0                MOVX    A,@DPTR
80625B FE                MOV     R6,A
80625C A3                INC     DPTR
80625D E0                MOVX    A,@DPTR
80625E FF                MOV     R7,A
80625F FB                MOV     R3,A
806260 AA06              MOV     R2,AR6
806262 E4                CLR     A
806263 F9                MOV     R1,A
806264 F8                MOV     R0,A
806265 900AF5            MOV     DPTR,#TradeCounter+04H
806268 A512800720        ECALL   ?C?LLDXDATA
80626D A512800679        ECALL   ?C?ULDIV
806272 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806275 A512800792        ECALL   ?C?LSTXDATA
80627A 900468            MOV     DPTR,#SystemParameter+048H
80627D E0                MOVX    A,@DPTR
80627E FE                MOV     R6,A
80627F A3                INC     DPTR
806280 E0                MOVX    A,@DPTR
806281 FF                MOV     R7,A
806282 FB                MOV     R3,A
806283 AA06              MOV     R2,AR6
806285 E4                CLR     A
806286 F9                MOV     R1,A
806287 F8                MOV     R0,A
806288 900AF5            MOV     DPTR,#TradeCounter+04H
80628B         
  463: 				break;
80628B 026971            LJMP    ?C0197?COUNTERMAINT
  464: 				case 100:
80628E         ?C0084?COUNTERMAINT:
  465: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.CashSum/SystemParameter.curUni
>> t, TradeCounter.CashSum%SystemParameter.curUnit );
80628E 901737            MOV     DPTR,#iIndex
806291 E0                MOVX    A,@DPTR
806292 25E0              ADD     A,ACC
806294 25E0              ADD     A,ACC
806296 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806298 F582              MOV     DPL,A
80629A E4                CLR     A
80629B 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80629D F583              MOV     DPH,A
80629F E4                CLR     A
8062A0 93                MOVC    A,@A+DPTR
8062A1 2439              ADD     A,#LOW line
8062A3 F9                MOV     R1,A
8062A4 E4                CLR     A
8062A5 3417              ADDC    A,#HIGH line
8062A7 FA                MOV     R2,A
8062A8 7B00              MOV     R3,#?C?XDATASEG
8062AA C003              PUSH    AR3
8062AC C002              PUSH    AR2
8062AE C001              PUSH    AR1
8062B0 7B80              MOV     R3,#BYTE2 08012E6H
8062B2 7A12              MOV     R2,#HIGH 08012E6H
8062B4 79E6              MOV     R1,#LOW 08012E6H
8062B6 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 193


8062B9 A5128007B6        ECALL   ?C?PSTXDATA
8062BE 900468            MOV     DPTR,#SystemParameter+048H
8062C1 E0                MOVX    A,@DPTR
8062C2 FE                MOV     R6,A
8062C3 A3                INC     DPTR
8062C4 E0                MOVX    A,@DPTR
8062C5 FF                MOV     R7,A
8062C6 FB                MOV     R3,A
8062C7 AA06              MOV     R2,AR6
8062C9 E4                CLR     A
8062CA F9                MOV     R1,A
8062CB F8                MOV     R0,A
8062CC 900AF5            MOV     DPTR,#TradeCounter+04H
8062CF A512800720        ECALL   ?C?LLDXDATA
8062D4 A512800679        ECALL   ?C?ULDIV
8062D9 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8062DC A512800792        ECALL   ?C?LSTXDATA
8062E1 900468            MOV     DPTR,#SystemParameter+048H
8062E4 E0                MOVX    A,@DPTR
8062E5 FE                MOV     R6,A
8062E6 A3                INC     DPTR
8062E7 E0                MOVX    A,@DPTR
8062E8 FF                MOV     R7,A
8062E9 FB                MOV     R3,A
8062EA AA06              MOV     R2,AR6
8062EC E4                CLR     A
8062ED F9                MOV     R1,A
8062EE F8                MOV     R0,A
8062EF 900AF5            MOV     DPTR,#TradeCounter+04H
8062F2         
  466: 				break;
8062F2 026971            LJMP    ?C0197?COUNTERMAINT
  467: 			}		
  468: 		break;
  469: 		case 2://收入硬总金额
8062F5         ?C0085?COUNTERMAINT:
  470: 			switch( SystemParameter.curUnit )		
8062F5 900468            MOV     DPTR,#SystemParameter+048H
8062F8 E0                MOVX    A,@DPTR
8062F9 FE                MOV     R6,A
8062FA A3                INC     DPTR
8062FB E0                MOVX    A,@DPTR
8062FC FF                MOV     R7,A
8062FD EE                MOV     A,R6
8062FE 6003              JZ      $ + 5H
806300 026ADC            LJMP    ?C0074?COUNTERMAINT
806303 EF                MOV     A,R7
806304 24F6              ADD     A,#0F6H
806306 6044              JZ      ?C0088?COUNTERMAINT
806308 24A6              ADD     A,#0A6H
80630A 7003              JNZ     $ + 5H
80630C 0263B3            LJMP    ?C0089?COUNTERMAINT
80630F 2463              ADD     A,#063H
806311 6003              JZ      $ + 5H
806313 026ADC            LJMP    ?C0074?COUNTERMAINT
  471: 			{
  472: 				case 1:
806316         ?C0087?COUNTERMAINT:
  473: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.CoinSum );
806316 901737            MOV     DPTR,#iIndex
806319 E0                MOVX    A,@DPTR
80631A 25E0              ADD     A,ACC
80631C 25E0              ADD     A,ACC
80631E 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806320 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 194


806322 E4                CLR     A
806323 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806325 F583              MOV     DPH,A
806327 E4                CLR     A
806328 93                MOVC    A,@A+DPTR
806329 2439              ADD     A,#LOW line
80632B F9                MOV     R1,A
80632C E4                CLR     A
80632D 3417              ADDC    A,#HIGH line
80632F FA                MOV     R2,A
806330 7B00              MOV     R3,#?C?XDATASEG
806332 C003              PUSH    AR3
806334 C002              PUSH    AR2
806336 C001              PUSH    AR1
806338 7B80              MOV     R3,#BYTE2 08012DAH
80633A 7A12              MOV     R2,#HIGH 08012DAH
80633C 79DA              MOV     R1,#LOW 08012DAH
80633E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806341 A5128007B6        ECALL   ?C?PSTXDATA
806346 900AF9            MOV     DPTR,#TradeCounter+08H
806349         
  474: 				break;
806349 026902            LJMP    ?C0195?COUNTERMAINT
  475: 				case 10:
80634C         ?C0088?COUNTERMAINT:
  476: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.CoinSum/SystemParameter.curUnit,
>>  TradeCounter.CoinSum%SystemParameter.curUnit );
80634C 901737            MOV     DPTR,#iIndex
80634F E0                MOVX    A,@DPTR
806350 25E0              ADD     A,ACC
806352 25E0              ADD     A,ACC
806354 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806356 F582              MOV     DPL,A
806358 E4                CLR     A
806359 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80635B F583              MOV     DPH,A
80635D E4                CLR     A
80635E 93                MOVC    A,@A+DPTR
80635F 2439              ADD     A,#LOW line
806361 F9                MOV     R1,A
806362 E4                CLR     A
806363 3417              ADDC    A,#HIGH line
806365 FA                MOV     R2,A
806366 7B00              MOV     R3,#?C?XDATASEG
806368 C003              PUSH    AR3
80636A C002              PUSH    AR2
80636C C001              PUSH    AR1
80636E 7B80              MOV     R3,#BYTE2 08012DEH
806370 7A12              MOV     R2,#HIGH 08012DEH
806372 79DE              MOV     R1,#LOW 08012DEH
806374 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806377 A5128007B6        ECALL   ?C?PSTXDATA
80637C 900468            MOV     DPTR,#SystemParameter+048H
80637F E0                MOVX    A,@DPTR
806380 FE                MOV     R6,A
806381 A3                INC     DPTR
806382 E0                MOVX    A,@DPTR
806383 FF                MOV     R7,A
806384 FB                MOV     R3,A
806385 AA06              MOV     R2,AR6
806387 E4                CLR     A
806388 F9                MOV     R1,A
806389 F8                MOV     R0,A
80638A 900AF9            MOV     DPTR,#TradeCounter+08H
80638D A512800720        ECALL   ?C?LLDXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 195


806392 A512800679        ECALL   ?C?ULDIV
806397 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80639A A512800792        ECALL   ?C?LSTXDATA
80639F 900468            MOV     DPTR,#SystemParameter+048H
8063A2 E0                MOVX    A,@DPTR
8063A3 FE                MOV     R6,A
8063A4 A3                INC     DPTR
8063A5 E0                MOVX    A,@DPTR
8063A6 FF                MOV     R7,A
8063A7 FB                MOV     R3,A
8063A8 AA06              MOV     R2,AR6
8063AA E4                CLR     A
8063AB F9                MOV     R1,A
8063AC F8                MOV     R0,A
8063AD 900AF9            MOV     DPTR,#TradeCounter+08H
8063B0         
  477: 				break;
8063B0 026971            LJMP    ?C0197?COUNTERMAINT
  478: 				case 100:
8063B3         ?C0089?COUNTERMAINT:
  479: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.CoinSum/SystemParameter.curUni
>> t, TradeCounter.CoinSum%SystemParameter.curUnit );
8063B3 901737            MOV     DPTR,#iIndex
8063B6 E0                MOVX    A,@DPTR
8063B7 25E0              ADD     A,ACC
8063B9 25E0              ADD     A,ACC
8063BB 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8063BD F582              MOV     DPL,A
8063BF E4                CLR     A
8063C0 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8063C2 F583              MOV     DPH,A
8063C4 E4                CLR     A
8063C5 93                MOVC    A,@A+DPTR
8063C6 2439              ADD     A,#LOW line
8063C8 F9                MOV     R1,A
8063C9 E4                CLR     A
8063CA 3417              ADDC    A,#HIGH line
8063CC FA                MOV     R2,A
8063CD 7B00              MOV     R3,#?C?XDATASEG
8063CF C003              PUSH    AR3
8063D1 C002              PUSH    AR2
8063D3 C001              PUSH    AR1
8063D5 7B80              MOV     R3,#BYTE2 08012E6H
8063D7 7A12              MOV     R2,#HIGH 08012E6H
8063D9 79E6              MOV     R1,#LOW 08012E6H
8063DB 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8063DE A5128007B6        ECALL   ?C?PSTXDATA
8063E3 900468            MOV     DPTR,#SystemParameter+048H
8063E6 E0                MOVX    A,@DPTR
8063E7 FE                MOV     R6,A
8063E8 A3                INC     DPTR
8063E9 E0                MOVX    A,@DPTR
8063EA FF                MOV     R7,A
8063EB FB                MOV     R3,A
8063EC AA06              MOV     R2,AR6
8063EE E4                CLR     A
8063EF F9                MOV     R1,A
8063F0 F8                MOV     R0,A
8063F1 900AF9            MOV     DPTR,#TradeCounter+08H
8063F4 A512800720        ECALL   ?C?LLDXDATA
8063F9 A512800679        ECALL   ?C?ULDIV
8063FE 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806401 A512800792        ECALL   ?C?LSTXDATA
806406 900468            MOV     DPTR,#SystemParameter+048H
806409 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 196


80640A FE                MOV     R6,A
80640B A3                INC     DPTR
80640C E0                MOVX    A,@DPTR
80640D FF                MOV     R7,A
80640E FB                MOV     R3,A
80640F AA06              MOV     R2,AR6
806411 E4                CLR     A
806412 F9                MOV     R1,A
806413 F8                MOV     R0,A
806414 900AF9            MOV     DPTR,#TradeCounter+08H
806417         
  480: 				break;
806417 026971            LJMP    ?C0197?COUNTERMAINT
  481: 			}
  482: 		break;
  483: 		case 3://交易总金额			
80641A         ?C0090?COUNTERMAINT:
  484: 			switch( SystemParameter.curUnit )		
80641A 900468            MOV     DPTR,#SystemParameter+048H
80641D E0                MOVX    A,@DPTR
80641E FE                MOV     R6,A
80641F A3                INC     DPTR
806420 E0                MOVX    A,@DPTR
806421 FF                MOV     R7,A
806422 EE                MOV     A,R6
806423 6003              JZ      $ + 5H
806425 026ADC            LJMP    ?C0074?COUNTERMAINT
806428 EF                MOV     A,R7
806429 24F6              ADD     A,#0F6H
80642B 6044              JZ      ?C0093?COUNTERMAINT
80642D 24A6              ADD     A,#0A6H
80642F 7003              JNZ     $ + 5H
806431 0264D8            LJMP    ?C0094?COUNTERMAINT
806434 2463              ADD     A,#063H
806436 6003              JZ      $ + 5H
806438 026ADC            LJMP    ?C0074?COUNTERMAINT
  485: 			{
  486: 				case 1:
80643B         ?C0092?COUNTERMAINT:
  487: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.TradeCurrencySum );
80643B 901737            MOV     DPTR,#iIndex
80643E E0                MOVX    A,@DPTR
80643F 25E0              ADD     A,ACC
806441 25E0              ADD     A,ACC
806443 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806445 F582              MOV     DPL,A
806447 E4                CLR     A
806448 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80644A F583              MOV     DPH,A
80644C E4                CLR     A
80644D 93                MOVC    A,@A+DPTR
80644E 2439              ADD     A,#LOW line
806450 F9                MOV     R1,A
806451 E4                CLR     A
806452 3417              ADDC    A,#HIGH line
806454 FA                MOV     R2,A
806455 7B00              MOV     R3,#?C?XDATASEG
806457 C003              PUSH    AR3
806459 C002              PUSH    AR2
80645B C001              PUSH    AR1
80645D 7B80              MOV     R3,#BYTE2 08012DAH
80645F 7A12              MOV     R2,#HIGH 08012DAH
806461 79DA              MOV     R1,#LOW 08012DAH
806463 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806466 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 197


80646B 900AFD            MOV     DPTR,#TradeCounter+0CH
80646E         
  488: 				break;
80646E 026902            LJMP    ?C0195?COUNTERMAINT
  489: 				case 10:
806471         ?C0093?COUNTERMAINT:
  490: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.TradeCurrencySum/SystemParameter
>> .curUnit, TradeCounter.TradeCurrencySum%SystemParameter.curUnit );
806471 901737            MOV     DPTR,#iIndex
806474 E0                MOVX    A,@DPTR
806475 25E0              ADD     A,ACC
806477 25E0              ADD     A,ACC
806479 24FF              ADD     A,#LOW CurrencyMenuStr+03H
80647B F582              MOV     DPL,A
80647D E4                CLR     A
80647E 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806480 F583              MOV     DPH,A
806482 E4                CLR     A
806483 93                MOVC    A,@A+DPTR
806484 2439              ADD     A,#LOW line
806486 F9                MOV     R1,A
806487 E4                CLR     A
806488 3417              ADDC    A,#HIGH line
80648A FA                MOV     R2,A
80648B 7B00              MOV     R3,#?C?XDATASEG
80648D C003              PUSH    AR3
80648F C002              PUSH    AR2
806491 C001              PUSH    AR1
806493 7B80              MOV     R3,#BYTE2 08012DEH
806495 7A12              MOV     R2,#HIGH 08012DEH
806497 79DE              MOV     R1,#LOW 08012DEH
806499 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80649C A5128007B6        ECALL   ?C?PSTXDATA
8064A1 900468            MOV     DPTR,#SystemParameter+048H
8064A4 E0                MOVX    A,@DPTR
8064A5 FE                MOV     R6,A
8064A6 A3                INC     DPTR
8064A7 E0                MOVX    A,@DPTR
8064A8 FF                MOV     R7,A
8064A9 FB                MOV     R3,A
8064AA AA06              MOV     R2,AR6
8064AC E4                CLR     A
8064AD F9                MOV     R1,A
8064AE F8                MOV     R0,A
8064AF 900AFD            MOV     DPTR,#TradeCounter+0CH
8064B2 A512800720        ECALL   ?C?LLDXDATA
8064B7 A512800679        ECALL   ?C?ULDIV
8064BC 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8064BF A512800792        ECALL   ?C?LSTXDATA
8064C4 900468            MOV     DPTR,#SystemParameter+048H
8064C7 E0                MOVX    A,@DPTR
8064C8 FE                MOV     R6,A
8064C9 A3                INC     DPTR
8064CA E0                MOVX    A,@DPTR
8064CB FF                MOV     R7,A
8064CC FB                MOV     R3,A
8064CD AA06              MOV     R2,AR6
8064CF E4                CLR     A
8064D0 F9                MOV     R1,A
8064D1 F8                MOV     R0,A
8064D2 900AFD            MOV     DPTR,#TradeCounter+0CH
8064D5         
  491: 				break;
8064D5 026971            LJMP    ?C0197?COUNTERMAINT
  492: 				case 100:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 198


8064D8         ?C0094?COUNTERMAINT:
  493: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.TradeCurrencySum/SystemParamet
>> er.curUnit, TradeCounter.TradeCurrencySum%SystemParameter.curUnit );
8064D8 901737            MOV     DPTR,#iIndex
8064DB E0                MOVX    A,@DPTR
8064DC 25E0              ADD     A,ACC
8064DE 25E0              ADD     A,ACC
8064E0 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8064E2 F582              MOV     DPL,A
8064E4 E4                CLR     A
8064E5 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8064E7 F583              MOV     DPH,A
8064E9 E4                CLR     A
8064EA 93                MOVC    A,@A+DPTR
8064EB 2439              ADD     A,#LOW line
8064ED F9                MOV     R1,A
8064EE E4                CLR     A
8064EF 3417              ADDC    A,#HIGH line
8064F1 FA                MOV     R2,A
8064F2 7B00              MOV     R3,#?C?XDATASEG
8064F4 C003              PUSH    AR3
8064F6 C002              PUSH    AR2
8064F8 C001              PUSH    AR1
8064FA 7B80              MOV     R3,#BYTE2 08012E6H
8064FC 7A12              MOV     R2,#HIGH 08012E6H
8064FE 79E6              MOV     R1,#LOW 08012E6H
806500 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806503 A5128007B6        ECALL   ?C?PSTXDATA
806508 900468            MOV     DPTR,#SystemParameter+048H
80650B E0                MOVX    A,@DPTR
80650C FE                MOV     R6,A
80650D A3                INC     DPTR
80650E E0                MOVX    A,@DPTR
80650F FF                MOV     R7,A
806510 FB                MOV     R3,A
806511 AA06              MOV     R2,AR6
806513 E4                CLR     A
806514 F9                MOV     R1,A
806515 F8                MOV     R0,A
806516 900AFD            MOV     DPTR,#TradeCounter+0CH
806519 A512800720        ECALL   ?C?LLDXDATA
80651E A512800679        ECALL   ?C?ULDIV
806523 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806526 A512800792        ECALL   ?C?LSTXDATA
80652B 900468            MOV     DPTR,#SystemParameter+048H
80652E E0                MOVX    A,@DPTR
80652F FE                MOV     R6,A
806530 A3                INC     DPTR
806531 E0                MOVX    A,@DPTR
806532 FF                MOV     R7,A
806533 FB                MOV     R3,A
806534 AA06              MOV     R2,AR6
806536 E4                CLR     A
806537 F9                MOV     R1,A
806538 F8                MOV     R0,A
806539 900AFD            MOV     DPTR,#TradeCounter+0CH
80653C         
  494: 				break;
80653C 026971            LJMP    ?C0197?COUNTERMAINT
  495: 			}
  496: 		break;
  497: 		case 4://找出总金额			
80653F         ?C0095?COUNTERMAINT:
  498: 			switch( SystemParameter.curUnit )		
80653F 900468            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 199


806542 E0                MOVX    A,@DPTR
806543 FE                MOV     R6,A
806544 A3                INC     DPTR
806545 E0                MOVX    A,@DPTR
806546 FF                MOV     R7,A
806547 EE                MOV     A,R6
806548 6003              JZ      $ + 5H
80654A 026ADC            LJMP    ?C0074?COUNTERMAINT
80654D EF                MOV     A,R7
80654E 24F6              ADD     A,#0F6H
806550 6044              JZ      ?C0098?COUNTERMAINT
806552 24A6              ADD     A,#0A6H
806554 7003              JNZ     $ + 5H
806556 0265FD            LJMP    ?C0099?COUNTERMAINT
806559 2463              ADD     A,#063H
80655B 6003              JZ      $ + 5H
80655D 026ADC            LJMP    ?C0074?COUNTERMAINT
  499: 			{
  500: 				case 1:
806560         ?C0097?COUNTERMAINT:
  501: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.ChangeSum );
806560 901737            MOV     DPTR,#iIndex
806563 E0                MOVX    A,@DPTR
806564 25E0              ADD     A,ACC
806566 25E0              ADD     A,ACC
806568 24FF              ADD     A,#LOW CurrencyMenuStr+03H
80656A F582              MOV     DPL,A
80656C E4                CLR     A
80656D 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80656F F583              MOV     DPH,A
806571 E4                CLR     A
806572 93                MOVC    A,@A+DPTR
806573 2439              ADD     A,#LOW line
806575 F9                MOV     R1,A
806576 E4                CLR     A
806577 3417              ADDC    A,#HIGH line
806579 FA                MOV     R2,A
80657A 7B00              MOV     R3,#?C?XDATASEG
80657C C003              PUSH    AR3
80657E C002              PUSH    AR2
806580 C001              PUSH    AR1
806582 7B80              MOV     R3,#BYTE2 08012DAH
806584 7A12              MOV     R2,#HIGH 08012DAH
806586 79DA              MOV     R1,#LOW 08012DAH
806588 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80658B A5128007B6        ECALL   ?C?PSTXDATA
806590 900B05            MOV     DPTR,#TradeCounter+014H
806593         
  502: 				break;
806593 026902            LJMP    ?C0195?COUNTERMAINT
  503: 				case 10:
806596         ?C0098?COUNTERMAINT:
  504: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.ChangeSum/SystemParameter.curUni
>> t, TradeCounter.ChangeSum%SystemParameter.curUnit );
806596 901737            MOV     DPTR,#iIndex
806599 E0                MOVX    A,@DPTR
80659A 25E0              ADD     A,ACC
80659C 25E0              ADD     A,ACC
80659E 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8065A0 F582              MOV     DPL,A
8065A2 E4                CLR     A
8065A3 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8065A5 F583              MOV     DPH,A
8065A7 E4                CLR     A
8065A8 93                MOVC    A,@A+DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 200


8065A9 2439              ADD     A,#LOW line
8065AB F9                MOV     R1,A
8065AC E4                CLR     A
8065AD 3417              ADDC    A,#HIGH line
8065AF FA                MOV     R2,A
8065B0 7B00              MOV     R3,#?C?XDATASEG
8065B2 C003              PUSH    AR3
8065B4 C002              PUSH    AR2
8065B6 C001              PUSH    AR1
8065B8 7B80              MOV     R3,#BYTE2 08012DEH
8065BA 7A12              MOV     R2,#HIGH 08012DEH
8065BC 79DE              MOV     R1,#LOW 08012DEH
8065BE 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8065C1 A5128007B6        ECALL   ?C?PSTXDATA
8065C6 900468            MOV     DPTR,#SystemParameter+048H
8065C9 E0                MOVX    A,@DPTR
8065CA FE                MOV     R6,A
8065CB A3                INC     DPTR
8065CC E0                MOVX    A,@DPTR
8065CD FF                MOV     R7,A
8065CE FB                MOV     R3,A
8065CF AA06              MOV     R2,AR6
8065D1 E4                CLR     A
8065D2 F9                MOV     R1,A
8065D3 F8                MOV     R0,A
8065D4 900B05            MOV     DPTR,#TradeCounter+014H
8065D7 A512800720        ECALL   ?C?LLDXDATA
8065DC A512800679        ECALL   ?C?ULDIV
8065E1 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8065E4 A512800792        ECALL   ?C?LSTXDATA
8065E9 900468            MOV     DPTR,#SystemParameter+048H
8065EC E0                MOVX    A,@DPTR
8065ED FE                MOV     R6,A
8065EE A3                INC     DPTR
8065EF E0                MOVX    A,@DPTR
8065F0 FF                MOV     R7,A
8065F1 FB                MOV     R3,A
8065F2 AA06              MOV     R2,AR6
8065F4 E4                CLR     A
8065F5 F9                MOV     R1,A
8065F6 F8                MOV     R0,A
8065F7 900B05            MOV     DPTR,#TradeCounter+014H
8065FA         
  505: 				break;
8065FA 026971            LJMP    ?C0197?COUNTERMAINT
  506: 				case 100:
8065FD         ?C0099?COUNTERMAINT:
  507: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.ChangeSum/SystemParameter.curU
>> nit, TradeCounter.ChangeSum%SystemParameter.curUnit );
8065FD 901737            MOV     DPTR,#iIndex
806600 E0                MOVX    A,@DPTR
806601 25E0              ADD     A,ACC
806603 25E0              ADD     A,ACC
806605 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806607 F582              MOV     DPL,A
806609 E4                CLR     A
80660A 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80660C F583              MOV     DPH,A
80660E E4                CLR     A
80660F 93                MOVC    A,@A+DPTR
806610 2439              ADD     A,#LOW line
806612 F9                MOV     R1,A
806613 E4                CLR     A
806614 3417              ADDC    A,#HIGH line
806616 FA                MOV     R2,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 201


806617 7B00              MOV     R3,#?C?XDATASEG
806619 C003              PUSH    AR3
80661B C002              PUSH    AR2
80661D C001              PUSH    AR1
80661F 7B80              MOV     R3,#BYTE2 08012E6H
806621 7A12              MOV     R2,#HIGH 08012E6H
806623 79E6              MOV     R1,#LOW 08012E6H
806625 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806628 A5128007B6        ECALL   ?C?PSTXDATA
80662D 900468            MOV     DPTR,#SystemParameter+048H
806630 E0                MOVX    A,@DPTR
806631 FE                MOV     R6,A
806632 A3                INC     DPTR
806633 E0                MOVX    A,@DPTR
806634 FF                MOV     R7,A
806635 FB                MOV     R3,A
806636 AA06              MOV     R2,AR6
806638 E4                CLR     A
806639 F9                MOV     R1,A
80663A F8                MOV     R0,A
80663B 900B05            MOV     DPTR,#TradeCounter+014H
80663E A512800720        ECALL   ?C?LLDXDATA
806643 A512800679        ECALL   ?C?ULDIV
806648 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80664B A512800792        ECALL   ?C?LSTXDATA
806650 900468            MOV     DPTR,#SystemParameter+048H
806653 E0                MOVX    A,@DPTR
806654 FE                MOV     R6,A
806655 A3                INC     DPTR
806656 E0                MOVX    A,@DPTR
806657 FF                MOV     R7,A
806658 FB                MOV     R3,A
806659 AA06              MOV     R2,AR6
80665B E4                CLR     A
80665C F9                MOV     R1,A
80665D F8                MOV     R0,A
80665E 900B05            MOV     DPTR,#TradeCounter+014H
806661         
  508: 				break;
806661 026971            LJMP    ?C0197?COUNTERMAINT
  509: 			}
  510: 		break;
  511: 		case 5://#1HOPPER出币总金额			
806664         ?C0100?COUNTERMAINT:
  512: 			switch( SystemParameter.curUnit )		
806664 900468            MOV     DPTR,#SystemParameter+048H
806667 E0                MOVX    A,@DPTR
806668 FE                MOV     R6,A
806669 A3                INC     DPTR
80666A E0                MOVX    A,@DPTR
80666B FF                MOV     R7,A
80666C EE                MOV     A,R6
80666D 6003              JZ      $ + 5H
80666F 026ADC            LJMP    ?C0074?COUNTERMAINT
806672 EF                MOV     A,R7
806673 24F6              ADD     A,#0F6H
806675 6044              JZ      ?C0103?COUNTERMAINT
806677 24A6              ADD     A,#0A6H
806679 7003              JNZ     $ + 5H
80667B 026722            LJMP    ?C0104?COUNTERMAINT
80667E 2463              ADD     A,#063H
806680 6003              JZ      $ + 5H
806682 026ADC            LJMP    ?C0074?COUNTERMAINT
  513: 			{
  514: 				case 1:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 202


806685         ?C0102?COUNTERMAINT:
  515: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.Hopper1Sum );
806685 901737            MOV     DPTR,#iIndex
806688 E0                MOVX    A,@DPTR
806689 25E0              ADD     A,ACC
80668B 25E0              ADD     A,ACC
80668D 24FF              ADD     A,#LOW CurrencyMenuStr+03H
80668F F582              MOV     DPL,A
806691 E4                CLR     A
806692 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806694 F583              MOV     DPH,A
806696 E4                CLR     A
806697 93                MOVC    A,@A+DPTR
806698 2439              ADD     A,#LOW line
80669A F9                MOV     R1,A
80669B E4                CLR     A
80669C 3417              ADDC    A,#HIGH line
80669E FA                MOV     R2,A
80669F 7B00              MOV     R3,#?C?XDATASEG
8066A1 C003              PUSH    AR3
8066A3 C002              PUSH    AR2
8066A5 C001              PUSH    AR1
8066A7 7B80              MOV     R3,#BYTE2 08012DAH
8066A9 7A12              MOV     R2,#HIGH 08012DAH
8066AB 79DA              MOV     R1,#LOW 08012DAH
8066AD 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8066B0 A5128007B6        ECALL   ?C?PSTXDATA
8066B5 900B09            MOV     DPTR,#TradeCounter+018H
8066B8         
  516: 				break;
8066B8 026902            LJMP    ?C0195?COUNTERMAINT
  517: 				case 10:
8066BB         ?C0103?COUNTERMAINT:
  518: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.Hopper1Sum/SystemParameter.curUn
>> it, TradeCounter.Hopper1Sum%SystemParameter.curUnit );
8066BB 901737            MOV     DPTR,#iIndex
8066BE E0                MOVX    A,@DPTR
8066BF 25E0              ADD     A,ACC
8066C1 25E0              ADD     A,ACC
8066C3 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8066C5 F582              MOV     DPL,A
8066C7 E4                CLR     A
8066C8 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8066CA F583              MOV     DPH,A
8066CC E4                CLR     A
8066CD 93                MOVC    A,@A+DPTR
8066CE 2439              ADD     A,#LOW line
8066D0 F9                MOV     R1,A
8066D1 E4                CLR     A
8066D2 3417              ADDC    A,#HIGH line
8066D4 FA                MOV     R2,A
8066D5 7B00              MOV     R3,#?C?XDATASEG
8066D7 C003              PUSH    AR3
8066D9 C002              PUSH    AR2
8066DB C001              PUSH    AR1
8066DD 7B80              MOV     R3,#BYTE2 08012DEH
8066DF 7A12              MOV     R2,#HIGH 08012DEH
8066E1 79DE              MOV     R1,#LOW 08012DEH
8066E3 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8066E6 A5128007B6        ECALL   ?C?PSTXDATA
8066EB 900468            MOV     DPTR,#SystemParameter+048H
8066EE E0                MOVX    A,@DPTR
8066EF FE                MOV     R6,A
8066F0 A3                INC     DPTR
8066F1 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 203


8066F2 FF                MOV     R7,A
8066F3 FB                MOV     R3,A
8066F4 AA06              MOV     R2,AR6
8066F6 E4                CLR     A
8066F7 F9                MOV     R1,A
8066F8 F8                MOV     R0,A
8066F9 900B09            MOV     DPTR,#TradeCounter+018H
8066FC A512800720        ECALL   ?C?LLDXDATA
806701 A512800679        ECALL   ?C?ULDIV
806706 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806709 A512800792        ECALL   ?C?LSTXDATA
80670E 900468            MOV     DPTR,#SystemParameter+048H
806711 E0                MOVX    A,@DPTR
806712 FE                MOV     R6,A
806713 A3                INC     DPTR
806714 E0                MOVX    A,@DPTR
806715 FF                MOV     R7,A
806716 FB                MOV     R3,A
806717 AA06              MOV     R2,AR6
806719 E4                CLR     A
80671A F9                MOV     R1,A
80671B F8                MOV     R0,A
80671C 900B09            MOV     DPTR,#TradeCounter+018H
80671F         
  519: 				break;
80671F 026971            LJMP    ?C0197?COUNTERMAINT
  520: 				case 100:
806722         ?C0104?COUNTERMAINT:
  521: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.Hopper1Sum/SystemParameter.cur
>> Unit, TradeCounter.Hopper1Sum%SystemParameter.curUnit );
806722 901737            MOV     DPTR,#iIndex
806725 E0                MOVX    A,@DPTR
806726 25E0              ADD     A,ACC
806728 25E0              ADD     A,ACC
80672A 24FF              ADD     A,#LOW CurrencyMenuStr+03H
80672C F582              MOV     DPL,A
80672E E4                CLR     A
80672F 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806731 F583              MOV     DPH,A
806733 E4                CLR     A
806734 93                MOVC    A,@A+DPTR
806735 2439              ADD     A,#LOW line
806737 F9                MOV     R1,A
806738 E4                CLR     A
806739 3417              ADDC    A,#HIGH line
80673B FA                MOV     R2,A
80673C 7B00              MOV     R3,#?C?XDATASEG
80673E C003              PUSH    AR3
806740 C002              PUSH    AR2
806742 C001              PUSH    AR1
806744 7B80              MOV     R3,#BYTE2 08012E6H
806746 7A12              MOV     R2,#HIGH 08012E6H
806748 79E6              MOV     R1,#LOW 08012E6H
80674A 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80674D A5128007B6        ECALL   ?C?PSTXDATA
806752 900468            MOV     DPTR,#SystemParameter+048H
806755 E0                MOVX    A,@DPTR
806756 FE                MOV     R6,A
806757 A3                INC     DPTR
806758 E0                MOVX    A,@DPTR
806759 FF                MOV     R7,A
80675A FB                MOV     R3,A
80675B AA06              MOV     R2,AR6
80675D E4                CLR     A
80675E F9                MOV     R1,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 204


80675F F8                MOV     R0,A
806760 900B09            MOV     DPTR,#TradeCounter+018H
806763 A512800720        ECALL   ?C?LLDXDATA
806768 A512800679        ECALL   ?C?ULDIV
80676D 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806770 A512800792        ECALL   ?C?LSTXDATA
806775 900468            MOV     DPTR,#SystemParameter+048H
806778 E0                MOVX    A,@DPTR
806779 FE                MOV     R6,A
80677A A3                INC     DPTR
80677B E0                MOVX    A,@DPTR
80677C FF                MOV     R7,A
80677D FB                MOV     R3,A
80677E AA06              MOV     R2,AR6
806780 E4                CLR     A
806781 F9                MOV     R1,A
806782 F8                MOV     R0,A
806783 900B09            MOV     DPTR,#TradeCounter+018H
806786         
  522: 				break;
806786 026971            LJMP    ?C0197?COUNTERMAINT
  523: 			}
  524: 		break;
  525: 		case 6://#2HOPPER出币总金额	
806789         ?C0105?COUNTERMAINT:
  526: 			switch( SystemParameter.curUnit )		
806789 900468            MOV     DPTR,#SystemParameter+048H
80678C E0                MOVX    A,@DPTR
80678D FE                MOV     R6,A
80678E A3                INC     DPTR
80678F E0                MOVX    A,@DPTR
806790 FF                MOV     R7,A
806791 EE                MOV     A,R6
806792 6003              JZ      $ + 5H
806794 026ADC            LJMP    ?C0074?COUNTERMAINT
806797 EF                MOV     A,R7
806798 24F6              ADD     A,#0F6H
80679A 6044              JZ      ?C0108?COUNTERMAINT
80679C 24A6              ADD     A,#0A6H
80679E 7003              JNZ     $ + 5H
8067A0 026847            LJMP    ?C0109?COUNTERMAINT
8067A3 2463              ADD     A,#063H
8067A5 6003              JZ      $ + 5H
8067A7 026ADC            LJMP    ?C0074?COUNTERMAINT
  527: 			{
  528: 				case 1:
8067AA         ?C0107?COUNTERMAINT:
  529: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.Hopper2Sum );
8067AA 901737            MOV     DPTR,#iIndex
8067AD E0                MOVX    A,@DPTR
8067AE 25E0              ADD     A,ACC
8067B0 25E0              ADD     A,ACC
8067B2 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8067B4 F582              MOV     DPL,A
8067B6 E4                CLR     A
8067B7 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8067B9 F583              MOV     DPH,A
8067BB E4                CLR     A
8067BC 93                MOVC    A,@A+DPTR
8067BD 2439              ADD     A,#LOW line
8067BF F9                MOV     R1,A
8067C0 E4                CLR     A
8067C1 3417              ADDC    A,#HIGH line
8067C3 FA                MOV     R2,A
8067C4 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 205


8067C6 C003              PUSH    AR3
8067C8 C002              PUSH    AR2
8067CA C001              PUSH    AR1
8067CC 7B80              MOV     R3,#BYTE2 08012DAH
8067CE 7A12              MOV     R2,#HIGH 08012DAH
8067D0 79DA              MOV     R1,#LOW 08012DAH
8067D2 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8067D5 A5128007B6        ECALL   ?C?PSTXDATA
8067DA 900B0D            MOV     DPTR,#TradeCounter+01CH
8067DD         
  530: 				break;
8067DD 026902            LJMP    ?C0195?COUNTERMAINT
  531: 				case 10:
8067E0         ?C0108?COUNTERMAINT:
  532: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.Hopper2Sum/SystemParameter.curUn
>> it, TradeCounter.Hopper2Sum%SystemParameter.curUnit );
8067E0 901737            MOV     DPTR,#iIndex
8067E3 E0                MOVX    A,@DPTR
8067E4 25E0              ADD     A,ACC
8067E6 25E0              ADD     A,ACC
8067E8 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8067EA F582              MOV     DPL,A
8067EC E4                CLR     A
8067ED 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8067EF F583              MOV     DPH,A
8067F1 E4                CLR     A
8067F2 93                MOVC    A,@A+DPTR
8067F3 2439              ADD     A,#LOW line
8067F5 F9                MOV     R1,A
8067F6 E4                CLR     A
8067F7 3417              ADDC    A,#HIGH line
8067F9 FA                MOV     R2,A
8067FA 7B00              MOV     R3,#?C?XDATASEG
8067FC C003              PUSH    AR3
8067FE C002              PUSH    AR2
806800 C001              PUSH    AR1
806802 7B80              MOV     R3,#BYTE2 08012DEH
806804 7A12              MOV     R2,#HIGH 08012DEH
806806 79DE              MOV     R1,#LOW 08012DEH
806808 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80680B A5128007B6        ECALL   ?C?PSTXDATA
806810 900468            MOV     DPTR,#SystemParameter+048H
806813 E0                MOVX    A,@DPTR
806814 FE                MOV     R6,A
806815 A3                INC     DPTR
806816 E0                MOVX    A,@DPTR
806817 FF                MOV     R7,A
806818 FB                MOV     R3,A
806819 AA06              MOV     R2,AR6
80681B E4                CLR     A
80681C F9                MOV     R1,A
80681D F8                MOV     R0,A
80681E 900B0D            MOV     DPTR,#TradeCounter+01CH
806821 A512800720        ECALL   ?C?LLDXDATA
806826 A512800679        ECALL   ?C?ULDIV
80682B 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80682E A512800792        ECALL   ?C?LSTXDATA
806833 900468            MOV     DPTR,#SystemParameter+048H
806836 E0                MOVX    A,@DPTR
806837 FE                MOV     R6,A
806838 A3                INC     DPTR
806839 E0                MOVX    A,@DPTR
80683A FF                MOV     R7,A
80683B FB                MOV     R3,A
80683C AA06              MOV     R2,AR6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 206


80683E E4                CLR     A
80683F F9                MOV     R1,A
806840 F8                MOV     R0,A
806841 900B0D            MOV     DPTR,#TradeCounter+01CH
806844         
  533: 				break;
806844 026971            LJMP    ?C0197?COUNTERMAINT
  534: 				case 100:
806847         ?C0109?COUNTERMAINT:
  535: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.Hopper2Sum/SystemParameter.cur
>> Unit, TradeCounter.Hopper2Sum%SystemParameter.curUnit );
806847 901737            MOV     DPTR,#iIndex
80684A E0                MOVX    A,@DPTR
80684B 25E0              ADD     A,ACC
80684D 25E0              ADD     A,ACC
80684F 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806851 F582              MOV     DPL,A
806853 E4                CLR     A
806854 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806856 F583              MOV     DPH,A
806858 E4                CLR     A
806859 93                MOVC    A,@A+DPTR
80685A 2439              ADD     A,#LOW line
80685C F9                MOV     R1,A
80685D E4                CLR     A
80685E 3417              ADDC    A,#HIGH line
806860 FA                MOV     R2,A
806861 7B00              MOV     R3,#?C?XDATASEG
806863 C003              PUSH    AR3
806865 C002              PUSH    AR2
806867 C001              PUSH    AR1
806869 7B80              MOV     R3,#BYTE2 08012E6H
80686B 7A12              MOV     R2,#HIGH 08012E6H
80686D 79E6              MOV     R1,#LOW 08012E6H
80686F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806872 A5128007B6        ECALL   ?C?PSTXDATA
806877 900468            MOV     DPTR,#SystemParameter+048H
80687A E0                MOVX    A,@DPTR
80687B FE                MOV     R6,A
80687C A3                INC     DPTR
80687D E0                MOVX    A,@DPTR
80687E FF                MOV     R7,A
80687F FB                MOV     R3,A
806880 AA06              MOV     R2,AR6
806882 E4                CLR     A
806883 F9                MOV     R1,A
806884 F8                MOV     R0,A
806885 900B0D            MOV     DPTR,#TradeCounter+01CH
806888 A512800720        ECALL   ?C?LLDXDATA
80688D A512800679        ECALL   ?C?ULDIV
806892 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806895 A512800792        ECALL   ?C?LSTXDATA
80689A 900468            MOV     DPTR,#SystemParameter+048H
80689D E0                MOVX    A,@DPTR
80689E FE                MOV     R6,A
80689F A3                INC     DPTR
8068A0 E0                MOVX    A,@DPTR
8068A1 FF                MOV     R7,A
8068A2 FB                MOV     R3,A
8068A3 AA06              MOV     R2,AR6
8068A5 E4                CLR     A
8068A6 F9                MOV     R1,A
8068A7 F8                MOV     R0,A
8068A8 900B0D            MOV     DPTR,#TradeCounter+01CH
8068AB         
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 207


  536: 				break;
8068AB 026971            LJMP    ?C0197?COUNTERMAINT
  537: 			}			
  538: 		break;
  539: 		case 7://#3HOPPER出币总金额		
8068AE         ?C0110?COUNTERMAINT:
  540: 			switch( SystemParameter.curUnit )		
8068AE 900468            MOV     DPTR,#SystemParameter+048H
8068B1 E0                MOVX    A,@DPTR
8068B2 FE                MOV     R6,A
8068B3 A3                INC     DPTR
8068B4 E0                MOVX    A,@DPTR
8068B5 FF                MOV     R7,A
8068B6 EE                MOV     A,R6
8068B7 6003              JZ      $ + 5H
8068B9 026ADC            LJMP    ?C0074?COUNTERMAINT
8068BC EF                MOV     A,R7
8068BD 24F6              ADD     A,#0F6H
8068BF 604C              JZ      ?C0113?COUNTERMAINT
8068C1 24A6              ADD     A,#0A6H
8068C3 7003              JNZ     $ + 5H
8068C5 026988            LJMP    ?C0114?COUNTERMAINT
8068C8 2463              ADD     A,#063H
8068CA 6003              JZ      $ + 5H
8068CC 026ADC            LJMP    ?C0074?COUNTERMAINT
  541: 			{
  542: 				case 1:
8068CF         ?C0112?COUNTERMAINT:
  543: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.Hopper3Sum );
8068CF 901737            MOV     DPTR,#iIndex
8068D2 E0                MOVX    A,@DPTR
8068D3 25E0              ADD     A,ACC
8068D5 25E0              ADD     A,ACC
8068D7 24FF              ADD     A,#LOW CurrencyMenuStr+03H
8068D9 F582              MOV     DPL,A
8068DB E4                CLR     A
8068DC 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8068DE F583              MOV     DPH,A
8068E0 E4                CLR     A
8068E1 93                MOVC    A,@A+DPTR
8068E2 2439              ADD     A,#LOW line
8068E4 F9                MOV     R1,A
8068E5 E4                CLR     A
8068E6 3417              ADDC    A,#HIGH line
8068E8 FA                MOV     R2,A
8068E9 7B00              MOV     R3,#?C?XDATASEG
8068EB C003              PUSH    AR3
8068ED C002              PUSH    AR2
8068EF C001              PUSH    AR1
8068F1 7B80              MOV     R3,#BYTE2 08012DAH
8068F3 7A12              MOV     R2,#HIGH 08012DAH
8068F5 79DA              MOV     R1,#LOW 08012DAH
8068F7 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8068FA A5128007B6        ECALL   ?C?PSTXDATA
8068FF 900B11            MOV     DPTR,#TradeCounter+020H
806902         
806902 A512800720        ECALL   ?C?LLDXDATA
806907 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
  544: 				break;
80690A 026A01            LJMP    ?C0199?COUNTERMAINT
  545: 				case 10:
80690D         ?C0113?COUNTERMAINT:
  546: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.Hopper3Sum/SystemParameter.curUn
>> it, TradeCounter.Hopper3Sum%SystemParameter.curUnit );
80690D 901737            MOV     DPTR,#iIndex
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 208


806910 E0                MOVX    A,@DPTR
806911 25E0              ADD     A,ACC
806913 25E0              ADD     A,ACC
806915 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806917 F582              MOV     DPL,A
806919 E4                CLR     A
80691A 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80691C F583              MOV     DPH,A
80691E E4                CLR     A
80691F 93                MOVC    A,@A+DPTR
806920 2439              ADD     A,#LOW line
806922 F9                MOV     R1,A
806923 E4                CLR     A
806924 3417              ADDC    A,#HIGH line
806926 FA                MOV     R2,A
806927 7B00              MOV     R3,#?C?XDATASEG
806929 C003              PUSH    AR3
80692B C002              PUSH    AR2
80692D C001              PUSH    AR1
80692F 7B80              MOV     R3,#BYTE2 08012DEH
806931 7A12              MOV     R2,#HIGH 08012DEH
806933 79DE              MOV     R1,#LOW 08012DEH
806935 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806938 A5128007B6        ECALL   ?C?PSTXDATA
80693D 900468            MOV     DPTR,#SystemParameter+048H
806940 E0                MOVX    A,@DPTR
806941 FE                MOV     R6,A
806942 A3                INC     DPTR
806943 E0                MOVX    A,@DPTR
806944 FF                MOV     R7,A
806945 FB                MOV     R3,A
806946 AA06              MOV     R2,AR6
806948 E4                CLR     A
806949 F9                MOV     R1,A
80694A F8                MOV     R0,A
80694B 900B11            MOV     DPTR,#TradeCounter+020H
80694E A512800720        ECALL   ?C?LLDXDATA
806953 A512800679        ECALL   ?C?ULDIV
806958 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80695B A512800792        ECALL   ?C?LSTXDATA
806960 900468            MOV     DPTR,#SystemParameter+048H
806963 E0                MOVX    A,@DPTR
806964 FE                MOV     R6,A
806965 A3                INC     DPTR
806966 E0                MOVX    A,@DPTR
806967 FF                MOV     R7,A
806968 FB                MOV     R3,A
806969 AA06              MOV     R2,AR6
80696B E4                CLR     A
80696C F9                MOV     R1,A
80696D F8                MOV     R0,A
80696E 900B11            MOV     DPTR,#TradeCounter+020H
806971         
806971 A512800720        ECALL   ?C?LLDXDATA
806976 A512800679        ECALL   ?C?ULDIV
80697B AC00              MOV     R4,AR0
80697D AD01              MOV     R5,AR1
80697F AE02              MOV     R6,AR2
806981 AF03              MOV     R7,AR3
806983 901B90            MOV     DPTR,#?_sprintf?BYTE+0AH
806986         
  547: 				break;
806986 8079              SJMP    ?C0199?COUNTERMAINT
  548: 				case 100:
806988         ?C0114?COUNTERMAINT:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 209


  549: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.Hopper3Sum/SystemParameter.cur
>> Unit, TradeCounter.Hopper3Sum%SystemParameter.curUnit );
806988 901737            MOV     DPTR,#iIndex
80698B E0                MOVX    A,@DPTR
80698C 25E0              ADD     A,ACC
80698E 25E0              ADD     A,ACC
806990 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806992 F582              MOV     DPL,A
806994 E4                CLR     A
806995 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806997 F583              MOV     DPH,A
806999 E4                CLR     A
80699A 93                MOVC    A,@A+DPTR
80699B 2439              ADD     A,#LOW line
80699D F9                MOV     R1,A
80699E E4                CLR     A
80699F 3417              ADDC    A,#HIGH line
8069A1 FA                MOV     R2,A
8069A2 7B00              MOV     R3,#?C?XDATASEG
8069A4 C003              PUSH    AR3
8069A6 C002              PUSH    AR2
8069A8 C001              PUSH    AR1
8069AA 7B80              MOV     R3,#BYTE2 08012E6H
8069AC 7A12              MOV     R2,#HIGH 08012E6H
8069AE 79E6              MOV     R1,#LOW 08012E6H
8069B0 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8069B3 A5128007B6        ECALL   ?C?PSTXDATA
8069B8 900468            MOV     DPTR,#SystemParameter+048H
8069BB E0                MOVX    A,@DPTR
8069BC FE                MOV     R6,A
8069BD A3                INC     DPTR
8069BE E0                MOVX    A,@DPTR
8069BF FF                MOV     R7,A
8069C0 FB                MOV     R3,A
8069C1 AA06              MOV     R2,AR6
8069C3 E4                CLR     A
8069C4 F9                MOV     R1,A
8069C5 F8                MOV     R0,A
8069C6 900B11            MOV     DPTR,#TradeCounter+020H
8069C9 A512800720        ECALL   ?C?LLDXDATA
8069CE A512800679        ECALL   ?C?ULDIV
8069D3 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8069D6 A512800792        ECALL   ?C?LSTXDATA
8069DB 900468            MOV     DPTR,#SystemParameter+048H
8069DE E0                MOVX    A,@DPTR
8069DF FE                MOV     R6,A
8069E0 A3                INC     DPTR
8069E1 E0                MOVX    A,@DPTR
8069E2 FF                MOV     R7,A
8069E3 FB                MOV     R3,A
8069E4 AA06              MOV     R2,AR6
8069E6 E4                CLR     A
8069E7 F9                MOV     R1,A
8069E8 F8                MOV     R0,A
8069E9 900B11            MOV     DPTR,#TradeCounter+020H
8069EC A512800720        ECALL   ?C?LLDXDATA
8069F1 A512800679        ECALL   ?C?ULDIV
8069F6 AC00              MOV     R4,AR0
8069F8 AD01              MOV     R5,AR1
8069FA AE02              MOV     R6,AR2
8069FC AF03              MOV     R7,AR3
8069FE 901B90            MOV     DPTR,#?_sprintf?BYTE+0AH
806A01         
806A01 A512800792        ECALL   ?C?LSTXDATA
  550: 				break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 210


806A06 026ACB            LJMP    ?C0202?COUNTERMAINT
  551: 			}			
  552: 		break;
  553: 		case 8://#1HOPPER出币枚数
806A09         ?C0115?COUNTERMAINT:
  554: 			len += sprintf( line + CurrencyMenuStr[iIndex].len, "%u", TradeCounter.Hopper1Num );								
806A09 901737            MOV     DPTR,#iIndex
806A0C E0                MOVX    A,@DPTR
806A0D 25E0              ADD     A,ACC
806A0F 25E0              ADD     A,ACC
806A11 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806A13 F582              MOV     DPL,A
806A15 E4                CLR     A
806A16 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806A18 F583              MOV     DPH,A
806A1A E4                CLR     A
806A1B 93                MOVC    A,@A+DPTR
806A1C 2439              ADD     A,#LOW line
806A1E F9                MOV     R1,A
806A1F E4                CLR     A
806A20 3417              ADDC    A,#HIGH line
806A22 FA                MOV     R2,A
806A23 7B00              MOV     R3,#?C?XDATASEG
806A25 C003              PUSH    AR3
806A27 C002              PUSH    AR2
806A29 C001              PUSH    AR1
806A2B 7B80              MOV     R3,#BYTE2 08012B1H
806A2D 7A12              MOV     R2,#HIGH 08012B1H
806A2F 79B1              MOV     R1,#LOW 08012B1H
806A31 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806A34 A5128007B6        ECALL   ?C?PSTXDATA
806A39 900B15            MOV     DPTR,#TradeCounter+024H
806A3C E0                MOVX    A,@DPTR
806A3D FF                MOV     R7,A
806A3E A3                INC     DPTR
806A3F E0                MOVX    A,@DPTR
806A40 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806A43 CF                XCH     A,R7
806A44 F0                MOVX    @DPTR,A
806A45 A3                INC     DPTR
806A46 EF                MOV     A,R7
806A47 F0                MOVX    @DPTR,A
806A48         
  555: 		//	len += LenOfNum( TradeCounter.Hopper1Sum );			
  556: 		break;
806A48 026ACB            LJMP    ?C0202?COUNTERMAINT
  557: 		case 9://#2HOPPER出币枚数
806A4B         ?C0116?COUNTERMAINT:
  558: 			len += sprintf( line + CurrencyMenuStr[iIndex].len, "%u", TradeCounter.Hopper2Num );
806A4B 901737            MOV     DPTR,#iIndex
806A4E E0                MOVX    A,@DPTR
806A4F 25E0              ADD     A,ACC
806A51 25E0              ADD     A,ACC
806A53 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806A55 F582              MOV     DPL,A
806A57 E4                CLR     A
806A58 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806A5A F583              MOV     DPH,A
806A5C E4                CLR     A
806A5D 93                MOVC    A,@A+DPTR
806A5E 2439              ADD     A,#LOW line
806A60 F9                MOV     R1,A
806A61 E4                CLR     A
806A62 3417              ADDC    A,#HIGH line
806A64 FA                MOV     R2,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 211


806A65 7B00              MOV     R3,#?C?XDATASEG
806A67 C003              PUSH    AR3
806A69 C002              PUSH    AR2
806A6B C001              PUSH    AR1
806A6D 7B80              MOV     R3,#BYTE2 08012B1H
806A6F 7A12              MOV     R2,#HIGH 08012B1H
806A71 79B1              MOV     R1,#LOW 08012B1H
806A73 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806A76 A5128007B6        ECALL   ?C?PSTXDATA
806A7B 900B17            MOV     DPTR,#TradeCounter+026H
806A7E E0                MOVX    A,@DPTR
806A7F FF                MOV     R7,A
806A80 A3                INC     DPTR
806A81 E0                MOVX    A,@DPTR
806A82 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806A85 CF                XCH     A,R7
806A86 F0                MOVX    @DPTR,A
806A87 A3                INC     DPTR
806A88 EF                MOV     A,R7
806A89 F0                MOVX    @DPTR,A
806A8A         
  559: 		break;
806A8A 803F              SJMP    ?C0202?COUNTERMAINT
  560: 		case 10://#3HOPPER出币枚数
806A8C         ?C0117?COUNTERMAINT:
  561: 			len += sprintf( line + CurrencyMenuStr[iIndex].len, "%u", TradeCounter.Hopper3Num );
806A8C 901737            MOV     DPTR,#iIndex
806A8F E0                MOVX    A,@DPTR
806A90 25E0              ADD     A,ACC
806A92 25E0              ADD     A,ACC
806A94 24FF              ADD     A,#LOW CurrencyMenuStr+03H
806A96 F582              MOV     DPL,A
806A98 E4                CLR     A
806A99 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806A9B F583              MOV     DPH,A
806A9D E4                CLR     A
806A9E 93                MOVC    A,@A+DPTR
806A9F 2439              ADD     A,#LOW line
806AA1 F9                MOV     R1,A
806AA2 E4                CLR     A
806AA3 3417              ADDC    A,#HIGH line
806AA5 FA                MOV     R2,A
806AA6 7B00              MOV     R3,#?C?XDATASEG
806AA8 C003              PUSH    AR3
806AAA C002              PUSH    AR2
806AAC C001              PUSH    AR1
806AAE 7B80              MOV     R3,#BYTE2 08012B1H
806AB0 7A12              MOV     R2,#HIGH 08012B1H
806AB2 79B1              MOV     R1,#LOW 08012B1H
806AB4 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
806AB7 A5128007B6        ECALL   ?C?PSTXDATA
806ABC 900B19            MOV     DPTR,#TradeCounter+028H
806ABF E0                MOVX    A,@DPTR
806AC0 FF                MOV     R7,A
806AC1 A3                INC     DPTR
806AC2 E0                MOVX    A,@DPTR
806AC3 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
806AC6 CF                XCH     A,R7
806AC7 F0                MOVX    @DPTR,A
806AC8 A3                INC     DPTR
806AC9 EF                MOV     A,R7
806ACA F0                MOVX    @DPTR,A
806ACB         
806ACB D001              POP     AR1
806ACD D002              POP     AR2
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 212


806ACF D003              POP     AR3
806AD1 A512800949        ECALL   _sprintf
806AD6 901738            MOV     DPTR,#len
806AD9 E0                MOVX    A,@DPTR
806ADA 2F                ADD     A,R7
806ADB F0                MOVX    @DPTR,A
  562: 		break;
  563: //		case 8://最近一次有疑问的纸币收币金额
  564: //			len += sprintf( line + CurrencyMenuStr[iIndex].len, "%u.%02u", TradeCounter.DoubtCash/100, TradeCounter.Doub
>> tCash%100 );								
  565: //		break;
  566: 
  567: 	}
806ADC         ?C0074?COUNTERMAINT:
  568: 	Trace("\n %s ",line );
  569: 	Trace("\n len = %bu",len );
  570: 	DisplayStr( 0, yPos, 1, line, len );
806ADC 901736            MOV     DPTR,#yPos
806ADF E0                MOVX    A,@DPTR
806AE0 FD                MOV     R5,A
806AE1 D21A              SETB    ?_DisplayStr?BIT
806AE3 7B00              MOV     R3,#?C?XDATASEG
806AE5 7A17              MOV     R2,#HIGH line
806AE7 7939              MOV     R1,#LOW line
806AE9 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806AEC A5128007B6        ECALL   ?C?PSTXDATA
806AF1 901738            MOV     DPTR,#len
806AF4 E0                MOVX    A,@DPTR
806AF5 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
806AF8 F0                MOVX    @DPTR,A
806AF9 E4                CLR     A
806AFA FF                MOV     R7,A
806AFB A50280885F        EJMP    _DisplayStr
----- FUNCTION _DispCurrencyList (END) -------


----- FUNCTION CounterMainMenu (BEGIN) -----
 FILE: 'countermaint.c'
  647: void CounterMainMenu()
  648: {
  649: 	/*菜单参数初始化*/		
  650: 	u_char  xdata firstNum ;//一级菜单编号
  651: 	u_char  xdata LineNum ;//选中屏幕的行号	
  652: 	bit	data Notout = 1;	
806B00 D218              SETB    Notout
  653: 	u_char xdata key = 0;
806B02 E4                CLR     A
806B03 901731            MOV     DPTR,#key
806B06 F0                MOVX    @DPTR,A
  654: 		
  655: 	ClearKey();	
806B07 A512808FA5        ECALL   ClearKey
  656: 	/*显示两行菜单及其值*/
  657: 	DisplayStr( 0, 0, 1, countMianMenuStr[0].str, countMianMenuStr[0].len );//显示菜单	
806B0C D21A              SETB    ?_DisplayStr?BIT
806B0E 9012F0            MOV     DPTR,#countMianMenuStr
806B11 A5128007C0        ECALL   ?C?PLDCODE
806B16 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806B19 A5128007B6        ECALL   ?C?PSTXDATA
806B1E 9012F3            MOV     DPTR,#countMianMenuStr+03H
806B21 A512808856        ECALL   ?L?COM0005
  658: 	DisplayStr( 0, 1, 1, countMianMenuStr[1].str, countMianMenuStr[1].len );//显示菜单				
806B26 D21A              SETB    ?_DisplayStr?BIT
806B28 9012F4            MOV     DPTR,#countMianMenuStr+04H
806B2B A5128007C0        ECALL   ?C?PLDCODE
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 213


806B30 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806B33 A5128007B6        ECALL   ?C?PSTXDATA
806B38 9012F7            MOV     DPTR,#countMianMenuStr+07H
806B3B A51280895F        ECALL   ?L?COM000E
  659: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
  660: 	firstNum = 1;
806B40 90172F            MOV     DPTR,#firstNum
806B43 7401              MOV     A,#01H
806B45 F0                MOVX    @DPTR,A
  661: 	LineNum = 2;	
806B46 A3                INC     DPTR
806B47 04                INC     A
806B48 F0                MOVX    @DPTR,A
806B49         ?C0138?COUNTERMAINT:
  662: 	while( Notout )    //超时或客户退出
806B49 201803            JB      Notout,$ + 6H
806B4C 026E66            LJMP    ?C0167?COUNTERMAINT
  663: 	{				
  664: 		key = GetKey();
806B4F A5128096D1        ECALL   GetKey
806B54 901731            MOV     DPTR,#key
806B57 EF                MOV     A,R7
806B58 F0                MOVX    @DPTR,A
  665: 		switch( key )		
806B59 24F3              ADD     A,#0F3H
806B5B 7003              JNZ     $ + 5H
806B5D 026CE4            LJMP    ?C0156?COUNTERMAINT
806B60 24F2              ADD     A,#0F2H
806B62 7003              JNZ     $ + 5H
806B64 026CDF            LJMP    ?C0155?COUNTERMAINT
806B67 24CB              ADD     A,#0CBH
806B69 7003              JNZ     $ + 5H
806B6B 026C31            LJMP    ?C0148?COUNTERMAINT
806B6E 2408              ADD     A,#08H
806B70 6003              JZ      $ + 5H
806B72 026E49            LJMP    ?C0140?COUNTERMAINT
  666: 		{
  667: 			case KEY_UP://上移  	
806B75         ?C0141?COUNTERMAINT:
  668: 				if( LineNum == 2 )//选中标记上移
806B75 901730            MOV     DPTR,#LineNum
806B78 E0                MOVX    A,@DPTR
806B79 6402              XRL     A,#02H
806B7B 702A              JNZ     ?C0142?COUNTERMAINT
  669: 			    {			     
  670: 			    	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
806B7D D21A              SETB    ?_DisplayCursorState?BIT
806B7F 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
806B82 7402              MOV     A,#02H
806B84 F0                MOVX    @DPTR,A
806B85 D21B              SETB    ?_DisplayCursorState?BIT+01H
806B87 E4                CLR     A
806B88 FD                MOV     R5,A
806B89 FF                MOV     R7,A
806B8A A51280897C        ECALL   _DisplayCursorState
  671: 			     	LineNum = 1;			   
806B8F 901730            MOV     DPTR,#LineNum
806B92 7401              MOV     A,#01H
806B94 F0                MOVX    @DPTR,A
  672: 					if( firstNum == 0 )
806B95 90172F            MOV     DPTR,#firstNum
806B98 E0                MOVX    A,@DPTR
806B99 7003              JNZ     ?C0143?COUNTERMAINT
  673: 						firstNum = MENU_COUNT(countMianMenuStr)-1;					
806B9B 026CD9            LJMP    ?C0207?COUNTERMAINT
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 214


806B9E         ?C0143?COUNTERMAINT:
  674: 					else
  675: 						firstNum--;
806B9E 90172F            MOV     DPTR,#firstNum
806BA1 E0                MOVX    A,@DPTR
806BA2 14                DEC     A
806BA3 F0                MOVX    @DPTR,A
  676: 				}
806BA4 026E49            LJMP    ?C0140?COUNTERMAINT
806BA7         ?C0142?COUNTERMAINT:
  677: 				else//菜单上翻
  678: 				{
  679: 				  	/*当firstNum<=1不能上翻了*/			      		
  680: 					//	DispDeviceMenu( firstNum, 1);									    
  681: 					DisplayStr( 0, 1, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
806BA7 D21A              SETB    ?_DisplayStr?BIT
806BA9 90172F            MOV     DPTR,#firstNum
806BAC E0                MOVX    A,@DPTR
806BAD FF                MOV     R7,A
806BAE 25E0              ADD     A,ACC
806BB0 25E0              ADD     A,ACC
806BB2 24F0              ADD     A,#LOW countMianMenuStr
806BB4 F582              MOV     DPL,A
806BB6 E4                CLR     A
806BB7 3412              ADDC    A,#HIGH countMianMenuStr
806BB9 F583              MOV     DPH,A
806BBB A5128007C0        ECALL   ?C?PLDCODE
806BC0 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806BC3 A5128007B6        ECALL   ?C?PSTXDATA
806BC8 EF                MOV     A,R7
806BC9 25E0              ADD     A,ACC
806BCB 25E0              ADD     A,ACC
806BCD 24F3              ADD     A,#LOW countMianMenuStr+03H
806BCF F582              MOV     DPL,A
806BD1 E4                CLR     A
806BD2 3412              ADDC    A,#HIGH countMianMenuStr+03H
806BD4 F583              MOV     DPH,A
806BD6 E4                CLR     A
806BD7 93                MOVC    A,@A+DPTR
806BD8 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
806BDB F0                MOVX    @DPTR,A
806BDC 7D01              MOV     R5,#01H
806BDE E4                CLR     A
806BDF FF                MOV     R7,A
806BE0 A51280885F        ECALL   _DisplayStr
  682: 					if( firstNum == 0 )
806BE5 90172F            MOV     DPTR,#firstNum
806BE8 E0                MOVX    A,@DPTR
806BE9 7005              JNZ     ?C0146?COUNTERMAINT
  683: 						firstNum = MENU_COUNT( countMianMenuStr )-1;					
806BEB 7402              MOV     A,#02H
806BED F0                MOVX    @DPTR,A
806BEE 8006              SJMP    ?C0147?COUNTERMAINT
806BF0         ?C0146?COUNTERMAINT:
  684: 					else
  685: 						firstNum--;
806BF0 90172F            MOV     DPTR,#firstNum
806BF3 E0                MOVX    A,@DPTR
806BF4 14                DEC     A
806BF5 F0                MOVX    @DPTR,A
806BF6         ?C0147?COUNTERMAINT:
  686: 					//	DispDeviceMenu( firstNum, 0);						
  687: 					DisplayStr( 0, 0, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
806BF6 D21A              SETB    ?_DisplayStr?BIT
806BF8 90172F            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 215


806BFB E0                MOVX    A,@DPTR
806BFC FF                MOV     R7,A
806BFD 25E0              ADD     A,ACC
806BFF 25E0              ADD     A,ACC
806C01 24F0              ADD     A,#LOW countMianMenuStr
806C03 F582              MOV     DPL,A
806C05 E4                CLR     A
806C06 3412              ADDC    A,#HIGH countMianMenuStr
806C08 F583              MOV     DPH,A
806C0A A5128007C0        ECALL   ?C?PLDCODE
806C0F 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806C12 A5128007B6        ECALL   ?C?PSTXDATA
806C17 EF                MOV     A,R7
806C18 25E0              ADD     A,ACC
806C1A 25E0              ADD     A,ACC
806C1C 24F3              ADD     A,#LOW countMianMenuStr+03H
806C1E F582              MOV     DPL,A
806C20 E4                CLR     A
806C21 3412              ADDC    A,#HIGH countMianMenuStr+03H
806C23 A512808854        ECALL   ?L?COM0004
  688: 					LineNum = 1;					
806C28 901730            MOV     DPTR,#LineNum
806C2B 7401              MOV     A,#01H
806C2D F0                MOVX    @DPTR,A
  689: 				}
  690: 				break;
806C2E 026E49            LJMP    ?C0140?COUNTERMAINT
  691: 			case KEY_DOWN://下移				
806C31         ?C0148?COUNTERMAINT:
  692: 				if( LineNum == 1 )//选中标记下移
806C31 901730            MOV     DPTR,#LineNum
806C34 E0                MOVX    A,@DPTR
806C35 6401              XRL     A,#01H
806C37 701C              JNZ     ?C0149?COUNTERMAINT
  693: 				{				 
  694: 				    DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标				   
806C39 A51280896E        ECALL   ?L?COM000F
  695: 					if( firstNum == MENU_COUNT(countMianMenuStr)-1 )
806C3E 90172F            MOV     DPTR,#firstNum
806C41 E0                MOVX    A,@DPTR
806C42 B40204            CJNE    A,#02H,?C0150?COUNTERMAINT
  696: 						firstNum = 0;					
806C45 E4                CLR     A
806C46 F0                MOVX    @DPTR,A
806C47 8006              SJMP    ?C0151?COUNTERMAINT
806C49         ?C0150?COUNTERMAINT:
  697: 					else
  698: 						firstNum++;
806C49 90172F            MOV     DPTR,#firstNum
806C4C E0                MOVX    A,@DPTR
806C4D 04                INC     A
806C4E F0                MOVX    @DPTR,A
806C4F         ?C0151?COUNTERMAINT:
  699: 					LineNum = 2;				     
806C4F 901730            MOV     DPTR,#LineNum
806C52         
  700: 				}
806C52 026CD9            LJMP    ?C0207?COUNTERMAINT
806C55         ?C0149?COUNTERMAINT:
  701: 				else//菜单下翻
  702: 				{
  703: 				    /*当firstNum<=2不能上翻了*/				    				
  704: 					DisplayStr( 0, 0, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
806C55 D21A              SETB    ?_DisplayStr?BIT
806C57 90172F            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 216


806C5A E0                MOVX    A,@DPTR
806C5B FF                MOV     R7,A
806C5C 25E0              ADD     A,ACC
806C5E 25E0              ADD     A,ACC
806C60 24F0              ADD     A,#LOW countMianMenuStr
806C62 F582              MOV     DPL,A
806C64 E4                CLR     A
806C65 3412              ADDC    A,#HIGH countMianMenuStr
806C67 F583              MOV     DPH,A
806C69 A5128007C0        ECALL   ?C?PLDCODE
806C6E 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806C71 A5128007B6        ECALL   ?C?PSTXDATA
806C76 EF                MOV     A,R7
806C77 25E0              ADD     A,ACC
806C79 25E0              ADD     A,ACC
806C7B 24F3              ADD     A,#LOW countMianMenuStr+03H
806C7D F582              MOV     DPL,A
806C7F E4                CLR     A
806C80 3412              ADDC    A,#HIGH countMianMenuStr+03H
806C82 A512808854        ECALL   ?L?COM0004
  705: 				   	if( firstNum == MENU_COUNT(countMianMenuStr)-1 )
806C87 90172F            MOV     DPTR,#firstNum
806C8A E0                MOVX    A,@DPTR
806C8B B40204            CJNE    A,#02H,?C0153?COUNTERMAINT
  706: 						firstNum = 0;					
806C8E E4                CLR     A
806C8F F0                MOVX    @DPTR,A
806C90 8006              SJMP    ?C0154?COUNTERMAINT
806C92         ?C0153?COUNTERMAINT:
  707: 					else
  708: 						firstNum++;
806C92 90172F            MOV     DPTR,#firstNum
806C95 E0                MOVX    A,@DPTR
806C96 04                INC     A
806C97 F0                MOVX    @DPTR,A
806C98         ?C0154?COUNTERMAINT:
  709: 					DisplayStr( 0, 1, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
806C98 D21A              SETB    ?_DisplayStr?BIT
806C9A 90172F            MOV     DPTR,#firstNum
806C9D E0                MOVX    A,@DPTR
806C9E FF                MOV     R7,A
806C9F 25E0              ADD     A,ACC
806CA1 25E0              ADD     A,ACC
806CA3 24F0              ADD     A,#LOW countMianMenuStr
806CA5 F582              MOV     DPL,A
806CA7 E4                CLR     A
806CA8 3412              ADDC    A,#HIGH countMianMenuStr
806CAA F583              MOV     DPH,A
806CAC A5128007C0        ECALL   ?C?PLDCODE
806CB1 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806CB4 A5128007B6        ECALL   ?C?PSTXDATA
806CB9 EF                MOV     A,R7
806CBA 25E0              ADD     A,ACC
806CBC 25E0              ADD     A,ACC
806CBE 24F3              ADD     A,#LOW countMianMenuStr+03H
806CC0 F582              MOV     DPL,A
806CC2 E4                CLR     A
806CC3 3412              ADDC    A,#HIGH countMianMenuStr+03H
806CC5 F583              MOV     DPH,A
806CC7 E4                CLR     A
806CC8 93                MOVC    A,@A+DPTR
806CC9 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
806CCC F0                MOVX    @DPTR,A
806CCD 7D01              MOV     R5,#01H
806CCF E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 217


806CD0 FF                MOV     R7,A
806CD1 A51280885F        ECALL   _DisplayStr
  710: 					LineNum = 2;					
806CD6 901730            MOV     DPTR,#LineNum
806CD9         
806CD9 7402              MOV     A,#02H
806CDB F0                MOVX    @DPTR,A
  711: 				}
  712: 				break;
806CDC 026E49            LJMP    ?C0140?COUNTERMAINT
  713: 			case KEY_CANCEL:
806CDF         ?C0155?COUNTERMAINT:
  714: 				Notout = 0;
806CDF C218              CLR     Notout
  715: 				break;
806CE1 026E49            LJMP    ?C0140?COUNTERMAINT
  716: 			case KEY_SUBMIT://Enter,选中了某项菜单	
806CE4         ?C0156?COUNTERMAINT:
  717: 				DisplayCursorState( 0, 0, 0, 0, 1 );//第二行整光标
806CE4 C21A              CLR     ?_DisplayCursorState?BIT
806CE6 E4                CLR     A
806CE7 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
806CEA F0                MOVX    @DPTR,A
806CEB D21B              SETB    ?_DisplayCursorState?BIT+01H
806CED FD                MOV     R5,A
806CEE A512808F9F        ECALL   ?L?COM0012
  718: 				ClearKey();				
  719: 				switch(firstNum)
806CF3 90172F            MOV     DPTR,#firstNum
806CF6 E0                MOVX    A,@DPTR
806CF7 14                DEC     A
806CF8 600E              JZ      ?C0159?COUNTERMAINT
806CFA 14                DEC     A
806CFB 6012              JZ      ?C0160?COUNTERMAINT
806CFD 2402              ADD     A,#02H
806CFF 7013              JNZ     ?C0157?COUNTERMAINT
  720: 				{					
  721: 					case 0://货币
806D01         ?C0158?COUNTERMAINT:
  722: 						CurrencyCountMenu();						
806D01 A51280E6A9        ECALL   CurrencyCountMenu
  723: 						break;
806D06 800C              SJMP    ?C0157?COUNTERMAINT
  724: 					case 1://商品	
806D08         ?C0159?COUNTERMAINT:
  725: 						GoodsMainMenu();
806D08 A5128089E3        ECALL   GoodsMainMenu
  726: 						break;
806D0D 8005              SJMP    ?C0157?COUNTERMAINT
  727: 					case 2://清空
806D0F         ?C0160?COUNTERMAINT:
  728: 						InitAllCounter();
806D0F A512805C7B        ECALL   InitAllCounter
  729: 						break;																						
  730: 				}
806D14         ?C0157?COUNTERMAINT:
  731: 				if(LineNum ==2)
806D14 901730            MOV     DPTR,#LineNum
806D17 E0                MOVX    A,@DPTR
806D18 6402              XRL     A,#02H
806D1A 6003              JZ      $ + 5H
806D1C 026DAB            LJMP    ?C0161?COUNTERMAINT
  732: 				{	
  733: 					if( firstNum == 0 )											
806D1F 90172F            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 218


806D22 E0                MOVX    A,@DPTR
806D23 7017              JNZ     ?C0162?COUNTERMAINT
  734: 						DisplayStr( 0, 0, 1, countMianMenuStr[MENU_COUNT(countMianMenuStr)-1].str, countMianMenuStr[MENU_COUNT(coun
>> tMianMenuStr)-1].len );
806D25 D21A              SETB    ?_DisplayStr?BIT
806D27 9012F8            MOV     DPTR,#countMianMenuStr+08H
806D2A A5128007C0        ECALL   ?C?PLDCODE
806D2F 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806D32 A5128007B6        ECALL   ?C?PSTXDATA
806D37 9012FB            MOV     DPTR,#countMianMenuStr+0BH
806D3A 802F              SJMP    ?C0204?COUNTERMAINT
806D3C         ?C0162?COUNTERMAINT:
  735: 					else						
  736: 						DisplayStr( 0, 0, 1, countMianMenuStr[firstNum - 1].str, countMianMenuStr[firstNum - 1].len );
806D3C D21A              SETB    ?_DisplayStr?BIT
806D3E 90172F            MOV     DPTR,#firstNum
806D41 E0                MOVX    A,@DPTR
806D42 FF                MOV     R7,A
806D43 25E0              ADD     A,ACC
806D45 25E0              ADD     A,ACC
806D47 24EC              ADD     A,#LOW countMianMenuStr-04H
806D49 F582              MOV     DPL,A
806D4B E4                CLR     A
806D4C 3412              ADDC    A,#HIGH countMianMenuStr-04H
806D4E F583              MOV     DPH,A
806D50 A5128007C0        ECALL   ?C?PLDCODE
806D55 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806D58 A5128007B6        ECALL   ?C?PSTXDATA
806D5D EF                MOV     A,R7
806D5E 25E0              ADD     A,ACC
806D60 25E0              ADD     A,ACC
806D62 24EF              ADD     A,#LOW countMianMenuStr-01H
806D64 F582              MOV     DPL,A
806D66 E4                CLR     A
806D67 3412              ADDC    A,#HIGH countMianMenuStr-01H
806D69 F583              MOV     DPH,A
806D6B         
806D6B A512808856        ECALL   ?L?COM0005
806D70         ?C0163?COUNTERMAINT:
  737: 					DisplayStr( 0, 1, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
806D70 D21A              SETB    ?_DisplayStr?BIT
806D72 90172F            MOV     DPTR,#firstNum
806D75 E0                MOVX    A,@DPTR
806D76 FF                MOV     R7,A
806D77 25E0              ADD     A,ACC
806D79 25E0              ADD     A,ACC
806D7B 24F0              ADD     A,#LOW countMianMenuStr
806D7D F582              MOV     DPL,A
806D7F E4                CLR     A
806D80 3412              ADDC    A,#HIGH countMianMenuStr
806D82 F583              MOV     DPH,A
806D84 A5128007C0        ECALL   ?C?PLDCODE
806D89 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806D8C A5128007B6        ECALL   ?C?PSTXDATA
806D91 EF                MOV     A,R7
806D92 25E0              ADD     A,ACC
806D94 25E0              ADD     A,ACC
806D96 24F3              ADD     A,#LOW countMianMenuStr+03H
806D98 F582              MOV     DPL,A
806D9A E4                CLR     A
806D9B 3412              ADDC    A,#HIGH countMianMenuStr+03H
806D9D F583              MOV     DPH,A
806D9F E4                CLR     A
806DA0 93                MOVC    A,@A+DPTR
806DA1 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 219


806DA4 F0                MOVX    @DPTR,A
806DA5 7D01              MOV     R5,#01H
806DA7 E4                CLR     A
  738: 				}
806DA8 026E3E            LJMP    ?C0208?COUNTERMAINT
806DAB         ?C0161?COUNTERMAINT:
  739: 				else
  740: 				{												
  741: 					if( firstNum == ( MENU_COUNT(countMianMenuStr)-1 ) )				
806DAB 90172F            MOV     DPTR,#firstNum
806DAE E0                MOVX    A,@DPTR
806DAF B40217            CJNE    A,#02H,?C0165?COUNTERMAINT
  742: 						DisplayStr( 0, 1, 1, countMianMenuStr[0].str, countMianMenuStr[0].len );
806DB2 D21A              SETB    ?_DisplayStr?BIT
806DB4 9012F0            MOV     DPTR,#countMianMenuStr
806DB7 A5128007C0        ECALL   ?C?PLDCODE
806DBC 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806DBF A5128007B6        ECALL   ?C?PSTXDATA
806DC4 9012F3            MOV     DPTR,#countMianMenuStr+03H
806DC7 802F              SJMP    ?C0205?COUNTERMAINT
806DC9         ?C0165?COUNTERMAINT:
  743: 					else						
  744: 						DisplayStr( 0, 1, 1, countMianMenuStr[firstNum + 1].str, countMianMenuStr[firstNum + 1].len );
806DC9 D21A              SETB    ?_DisplayStr?BIT
806DCB 90172F            MOV     DPTR,#firstNum
806DCE E0                MOVX    A,@DPTR
806DCF FF                MOV     R7,A
806DD0 25E0              ADD     A,ACC
806DD2 25E0              ADD     A,ACC
806DD4 24F4              ADD     A,#LOW countMianMenuStr+04H
806DD6 F582              MOV     DPL,A
806DD8 E4                CLR     A
806DD9 3412              ADDC    A,#HIGH countMianMenuStr+04H
806DDB F583              MOV     DPH,A
806DDD A5128007C0        ECALL   ?C?PLDCODE
806DE2 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806DE5 A5128007B6        ECALL   ?C?PSTXDATA
806DEA EF                MOV     A,R7
806DEB 25E0              ADD     A,ACC
806DED 25E0              ADD     A,ACC
806DEF 24F7              ADD     A,#LOW countMianMenuStr+07H
806DF1 F582              MOV     DPL,A
806DF3 E4                CLR     A
806DF4 3412              ADDC    A,#HIGH countMianMenuStr+07H
806DF6 F583              MOV     DPH,A
806DF8         
806DF8 E4                CLR     A
806DF9 93                MOVC    A,@A+DPTR
806DFA 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
806DFD F0                MOVX    @DPTR,A
806DFE 7D01              MOV     R5,#01H
806E00 E4                CLR     A
806E01 FF                MOV     R7,A
806E02 A51280885F        ECALL   _DisplayStr
806E07         ?C0166?COUNTERMAINT:
  745: 					DisplayStr( 0, 0, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
806E07 D21A              SETB    ?_DisplayStr?BIT
806E09 90172F            MOV     DPTR,#firstNum
806E0C E0                MOVX    A,@DPTR
806E0D FF                MOV     R7,A
806E0E 25E0              ADD     A,ACC
806E10 25E0              ADD     A,ACC
806E12 24F0              ADD     A,#LOW countMianMenuStr
806E14 F582              MOV     DPL,A
806E16 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 220


806E17 3412              ADDC    A,#HIGH countMianMenuStr
806E19 F583              MOV     DPH,A
806E1B A5128007C0        ECALL   ?C?PLDCODE
806E20 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806E23 A5128007B6        ECALL   ?C?PSTXDATA
806E28 EF                MOV     A,R7
806E29 25E0              ADD     A,ACC
806E2B 25E0              ADD     A,ACC
806E2D 24F3              ADD     A,#LOW countMianMenuStr+03H
806E2F F582              MOV     DPL,A
806E31 E4                CLR     A
806E32 3412              ADDC    A,#HIGH countMianMenuStr+03H
806E34 F583              MOV     DPH,A
806E36 E4                CLR     A
806E37 93                MOVC    A,@A+DPTR
806E38 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
806E3B F0                MOVX    @DPTR,A
806E3C E4                CLR     A
806E3D FD                MOV     R5,A
806E3E         
806E3E FF                MOV     R7,A
806E3F A51280885F        ECALL   _DisplayStr
  746: 				}				
806E44         ?C0164?COUNTERMAINT:
  747: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//第二行整光标
806E44 A512808F8E        ECALL   ?L?COM0010
  748: 				ClearKey();	
  749: 				break;
  750: 			}
806E49         ?C0140?COUNTERMAINT:
  751: 			SchedulerProcess();//让出时间片
806E49 A5128090B6        ECALL   SchedulerProcess
  752: 			WaitForWork( 100, &Lcd );			
806E4E E4                CLR     A
806E4F 7F64              MOV     R7,#064H
806E51 FE                MOV     R6,A
806E52 FD                MOV     R5,A
806E53 FC                MOV     R4,A
806E54 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
806E57 7423              MOV     A,#HIGH Lcd
806E59 F0                MOVX    @DPTR,A
806E5A A3                INC     DPTR
806E5B 7469              MOV     A,#LOW Lcd
806E5D F0                MOVX    @DPTR,A
806E5E A512808338        ECALL   _WaitForWork
  753: 		}
806E63 026B49            LJMP    ?C0138?COUNTERMAINT
  754: }
806E66         ?C0167?COUNTERMAINT:
806E66 A522              ERET    
----- FUNCTION CounterMainMenu (END) -------


----- FUNCTION ?L?COM0028 (BEGIN) -----
806E68 901757            MOV     DPTR,#MenuNum
806E6B E0                MOVX    A,@DPTR
806E6C FD                MOV     R5,A
806E6D D219              SETB    ?_DisplayRackMenuAndVal?BIT
806E6F 7F01              MOV     R7,#01H
----- FUNCTION _DisplayRackMenuAndVal (BEGIN) -----
 FILE: 'RackSet.c'
  274: void  DisplayRackMenuAndVal( u_char line, u_char Num, bit flag )
  275: {
806E71 90175B            MOV     DPTR,#line
806E74 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 221


806E75 F0                MOVX    @DPTR,A
806E76 A3                INC     DPTR
806E77 ED                MOV     A,R5
806E78 F0                MOVX    @DPTR,A
  276: 	u_char  xdata y_displaystr[22];	
  277: 	u_char   xdata  len ;
  278: 
  279:     if( flag == 0 ) flag = 0;
806E79 201902            JB      flag,?C0095?RACKSET
806E7C C219              CLR     flag
806E7E         ?C0095?RACKSET:
  280: 
  281: 	len = 0;	
806E7E E4                CLR     A
806E7F 901773            MOV     DPTR,#len
806E82 F0                MOVX    @DPTR,A
  282: 	memset( y_displaystr,0,sizeof( y_displaystr ) );	
806E83 FE                MOV     R6,A
806E84 7F16              MOV     R7,#016H
806E86 FD                MOV     R5,A
806E87 7B00              MOV     R3,#?C?XDATASEG
806E89 7A17              MOV     R2,#HIGH y_displaystr
806E8B 795D              MOV     R1,#LOW y_displaystr
806E8D A5128008A6        ECALL   ?C?MEMSET
  283:  	memcpy( y_displaystr, RackParastr[Num].str, RackParastr[Num].len );					
806E92 90175C            MOV     DPTR,#Num
806E95 E0                MOVX    A,@DPTR
806E96 FF                MOV     R7,A
806E97 25E0              ADD     A,ACC
806E99 25E0              ADD     A,ACC
806E9B 2439              ADD     A,#LOW RackParastr+03H
806E9D F582              MOV     DPL,A
806E9F E4                CLR     A
806EA0 3414              ADDC    A,#HIGH RackParastr+03H
806EA2 F583              MOV     DPH,A
806EA4 E4                CLR     A
806EA5 93                MOVC    A,@A+DPTR
806EA6 FD                MOV     R5,A
806EA7 7C00              MOV     R4,#00H
806EA9 C004              PUSH    AR4
806EAB C005              PUSH    AR5
806EAD EF                MOV     A,R7
806EAE 25E0              ADD     A,ACC
806EB0 25E0              ADD     A,ACC
806EB2 2436              ADD     A,#LOW RackParastr
806EB4 F582              MOV     DPL,A
806EB6 E4                CLR     A
806EB7 3414              ADDC    A,#HIGH RackParastr
806EB9 F583              MOV     DPH,A
806EBB A5128007C0        ECALL   ?C?PLDCODE
806EC0 785D              MOV     R0,#LOW y_displaystr
806EC2 7C17              MOV     R4,#HIGH y_displaystr
806EC4 7D00              MOV     R5,#?C?XDATASEG
806EC6 D007              POP     AR7
806EC8 D006              POP     AR6
806ECA A51280052D        ECALL   ?C?COPY
  284: 	ReadWriteRactParam( Num, y_displaystr + RackParastr[Num].len  , 0, &len, 0 );//得到菜单对应的值			
806ECF 90175C            MOV     DPTR,#Num
806ED2 E0                MOVX    A,@DPTR
806ED3 FF                MOV     R7,A
806ED4 25E0              ADD     A,ACC
806ED6 25E0              ADD     A,ACC
806ED8 2439              ADD     A,#LOW RackParastr+03H
806EDA F582              MOV     DPL,A
806EDC E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 222


806EDD 3414              ADDC    A,#HIGH RackParastr+03H
806EDF F583              MOV     DPH,A
806EE1 E4                CLR     A
806EE2 93                MOVC    A,@A+DPTR
806EE3 245D              ADD     A,#LOW y_displaystr
806EE5 F582              MOV     DPL,A
806EE7 E4                CLR     A
806EE8 3417              ADDC    A,#HIGH y_displaystr
806EEA AD82              MOV     R5,DPL
806EEC FC                MOV     R4,A
806EED 901779            MOV     DPTR,#?_ReadWriteRactParam?BYTE+05H
806EF0 7417              MOV     A,#HIGH len
806EF2 F0                MOVX    @DPTR,A
806EF3 A3                INC     DPTR
806EF4 7473              MOV     A,#LOW len
806EF6 F0                MOVX    @DPTR,A
806EF7 C21A              CLR     ?_ReadWriteRactParam?BIT
806EF9 E4                CLR     A
806EFA FB                MOV     R3,A
806EFB FA                MOV     R2,A
806EFC A51280E7E7        ECALL   _ReadWriteRactParam
  285: 	DisplayStr( 0, line, 1, y_displaystr, RackParastr[Num].len + len  );//显示菜单			
806F01 90175B            MOV     DPTR,#line
806F04 E0                MOVX    A,@DPTR
806F05 FD                MOV     R5,A
806F06 D21A              SETB    ?_DisplayStr?BIT
806F08 7B00              MOV     R3,#?C?XDATASEG
806F0A 7A17              MOV     R2,#HIGH y_displaystr
806F0C 795D              MOV     R1,#LOW y_displaystr
806F0E 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
806F11 A5128007B6        ECALL   ?C?PSTXDATA
806F16 90175C            MOV     DPTR,#Num
806F19 E0                MOVX    A,@DPTR
806F1A 25E0              ADD     A,ACC
806F1C 25E0              ADD     A,ACC
806F1E 2439              ADD     A,#LOW RackParastr+03H
806F20 F582              MOV     DPL,A
806F22 E4                CLR     A
806F23 3414              ADDC    A,#HIGH RackParastr+03H
806F25 F583              MOV     DPH,A
806F27 E4                CLR     A
806F28 93                MOVC    A,@A+DPTR
806F29 FF                MOV     R7,A
806F2A 901773            MOV     DPTR,#len
806F2D E0                MOVX    A,@DPTR
806F2E FE                MOV     R6,A
806F2F EF                MOV     A,R7
806F30 2E                ADD     A,R6
806F31 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
806F34 F0                MOVX    @DPTR,A
806F35 E4                CLR     A
806F36 FF                MOV     R7,A
806F37 A50280885F        EJMP    _DisplayStr
----- FUNCTION _DisplayRackMenuAndVal (END) -------


----- FUNCTION _EditRackParam (BEGIN) -----
 FILE: 'RackSet.c'
  290: bit  EditRackParam( u_char Num, u_char line )
  291: {
806F3C 901752            MOV     DPTR,#Num
806F3F EF                MOV     A,R7
806F40 F0                MOVX    @DPTR,A
806F41 A3                INC     DPTR
806F42 ED                MOV     A,R5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 223


806F43 F0                MOVX    @DPTR,A
  292: 	u_char  xdata Inputstr[10];
  293: 	u_char  xdata  key;
  294: 	u_char  xdata  Inputlen;
  295: 	
  296: 	key = 0;	
806F44 E4                CLR     A
806F45 90175E            MOV     DPTR,#key
806F48 F0                MOVX    @DPTR,A
  297: 	Inputlen = RackInputLen[Num];
806F49 901752            MOV     DPTR,#Num
806F4C E0                MOVX    A,@DPTR
806F4D 25E0              ADD     A,ACC
806F4F 246A              ADD     A,#LOW RackInputLen
806F51 F582              MOV     DPL,A
806F53 E4                CLR     A
806F54 3414              ADDC    A,#HIGH RackInputLen
806F56 F583              MOV     DPH,A
806F58 7401              MOV     A,#01H
806F5A 93                MOVC    A,@A+DPTR
806F5B 90175F            MOV     DPTR,#Inputlen
806F5E F0                MOVX    @DPTR,A
  298: 	memset( Inputstr, 0, sizeof( Inputstr ) );	
806F5F 7E00              MOV     R6,#00H
806F61 7F0A              MOV     R7,#0AH
806F63 7D00              MOV     R5,#00H
806F65 7B00              MOV     R3,#?C?XDATASEG
806F67 7A17              MOV     R2,#HIGH Inputstr
806F69 7954              MOV     R1,#LOW Inputstr
806F6B A5128008A6        ECALL   ?C?MEMSET
  299: 	key = GetLine( RackParastr[Num].str, RackParastr[Num].len, line, Inputstr, &Inputlen );			
806F70 901752            MOV     DPTR,#Num
806F73 E0                MOVX    A,@DPTR
806F74 FF                MOV     R7,A
806F75 25E0              ADD     A,ACC
806F77 25E0              ADD     A,ACC
806F79 2436              ADD     A,#LOW RackParastr
806F7B F582              MOV     DPL,A
806F7D E4                CLR     A
806F7E 3414              ADDC    A,#HIGH RackParastr
806F80 F583              MOV     DPH,A
806F82 A5128007C0        ECALL   ?C?PLDCODE
806F87 C003              PUSH    AR3
806F89 C002              PUSH    AR2
806F8B C001              PUSH    AR1
806F8D EF                MOV     A,R7
806F8E 25E0              ADD     A,ACC
806F90 25E0              ADD     A,ACC
806F92 2439              ADD     A,#LOW RackParastr+03H
806F94 F582              MOV     DPL,A
806F96 E4                CLR     A
806F97 3414              ADDC    A,#HIGH RackParastr+03H
806F99 F583              MOV     DPH,A
806F9B E4                CLR     A
806F9C 93                MOVC    A,@A+DPTR
806F9D FD                MOV     R5,A
806F9E 901753            MOV     DPTR,#line
806FA1 E0                MOVX    A,@DPTR
806FA2 901772            MOV     DPTR,#?_GetLine?BYTE+04H
806FA5 F0                MOVX    @DPTR,A
806FA6 7B00              MOV     R3,#?C?XDATASEG
806FA8 7A17              MOV     R2,#HIGH Inputstr
806FAA 7954              MOV     R1,#LOW Inputstr
806FAC A3                INC     DPTR
806FAD A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 224


806FB2 7A17              MOV     R2,#HIGH Inputlen
806FB4 795F              MOV     R1,#LOW Inputlen
806FB6 901776            MOV     DPTR,#?_GetLine?BYTE+08H
806FB9 A5128007B6        ECALL   ?C?PSTXDATA
806FBE D001              POP     AR1
806FC0 D002              POP     AR2
806FC2 D003              POP     AR3
806FC4 A51280CFB7        ECALL   _GetLine
806FC9 90175E            MOV     DPTR,#key
806FCC EF                MOV     A,R7
806FCD F0                MOVX    @DPTR,A
  300: 	ClearKey();		
806FCE A512808FA5        ECALL   ClearKey
  301: 	if( key == 1 )//Enter	
806FD3 90175E            MOV     DPTR,#key
806FD6 E0                MOVX    A,@DPTR
806FD7 6401              XRL     A,#01H
806FD9 7037              JNZ     ?C0097?RACKSET
  302: 	{		
  303: 		DisplayCursorState( 0, 0, 0, 0, 1 );		
806FDB C21A              CLR     ?_DisplayCursorState?BIT
806FDD 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
806FE0 F0                MOVX    @DPTR,A
806FE1 D21B              SETB    ?_DisplayCursorState?BIT+01H
806FE3 FD                MOV     R5,A
806FE4 FF                MOV     R7,A
806FE5 A51280897C        ECALL   _DisplayCursorState
  304: 		//Trace( "selected Enter \n" );			
  305: 		ReadWriteRactParam( Num, 0, Inputstr ,&Inputlen, 1 );	
806FEA 901752            MOV     DPTR,#Num
806FED E0                MOVX    A,@DPTR
806FEE FF                MOV     R7,A
806FEF 7A17              MOV     R2,#HIGH Inputstr
806FF1 7B54              MOV     R3,#LOW Inputstr
806FF3 901779            MOV     DPTR,#?_ReadWriteRactParam?BYTE+05H
806FF6 7417              MOV     A,#HIGH Inputlen
806FF8 F0                MOVX    @DPTR,A
806FF9 A3                INC     DPTR
806FFA 745F              MOV     A,#LOW Inputlen
806FFC F0                MOVX    @DPTR,A
806FFD D21A              SETB    ?_ReadWriteRactParam?BIT
806FFF E4                CLR     A
807000 FD                MOV     R5,A
807001 FC                MOV     R4,A
807002 A51280E7E7        ECALL   _ReadWriteRactParam
  306: 		IsModify = 1;	
807007 902DF9            MOV     DPTR,#IsModify
80700A 7401              MOV     A,#01H
80700C F0                MOVX    @DPTR,A
  307: 		ClearKey();		
80700D A512808FA5        ECALL   ClearKey
  308: 	}		
807012         ?C0097?RACKSET:
  309: 	//Trace( "edit one SysParanMenu end\n" );
  310: 	return 0;
807012 C3                CLR     C
  311: }
807013         ?C0098?RACKSET:
807013 A522              ERET    
----- FUNCTION _EditRackParam (END) -------


----- FUNCTION RackParamManage (BEGIN) -----
 FILE: 'RackSet.c'
  392: bit RackParamManage()		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 225


  393: {
  394: 	u_char  xdata fristNum ;//一级菜单编号
  395: 	u_char  xdata LineNum ;//选中屏幕的行号	
  396: 	u_char  xdata key = 0;
807015 E4                CLR     A
807016 901731            MOV     DPTR,#key
807019 F0                MOVX    @DPTR,A
  397: 	u_char xdata  i = 0;
80701A A3                INC     DPTR
80701B F0                MOVX    @DPTR,A
  398: 	u_char xdata Tempstr[8];
  399: 	u_char xdata len = 0;	
80701C 90173B            MOV     DPTR,#len
80701F F0                MOVX    @DPTR,A
  400: 	struct PassWordLog xdata TempPassWd;
  401: 	u_char  xdata password[9];
  402:     u_char xdata ErrFlag = 0;
807020 901751            MOV     DPTR,#ErrFlag
807023 F0                MOVX    @DPTR,A
  403: 
  404: 	ClearKey();		
807024 A512808FA5        ECALL   ClearKey
  405: 	//输入货道编号
  406: 	RackNo = 0;
807029 E4                CLR     A
80702A 902DFA            MOV     DPTR,#RackNo
80702D F0                MOVX    @DPTR,A
  407: 	IsModify = 0;
80702E 902DF9            MOV     DPTR,#IsModify
807031 F0                MOVX    @DPTR,A
  408: 
  409:     //------------------------------------------------------------------------------------
  410: 	//Check the password firstly
  411: 	memset( &TempPassWd, 0, sizeof(struct PassWordLog) );
807032 FE                MOV     R6,A
807033 7F0C              MOV     R7,#0CH
807035 FD                MOV     R5,A
807036 7B00              MOV     R3,#?C?XDATASEG
807038 7A17              MOV     R2,#HIGH TempPassWd
80703A 793C              MOV     R1,#LOW TempPassWd
80703C A5128008A6        ECALL   ?C?MEMSET
  412: 	{
  413:     	TempPassWd.passwdlen = 8;
807041 90173C            MOV     DPTR,#TempPassWd
807044 7408              MOV     A,#08H
807046 F0                MOVX    @DPTR,A
  414: 		TempPassWd.checkbyte = 0;
807047 E4                CLR     A
807048 A3                INC     DPTR
807049 F0                MOVX    @DPTR,A
  415: 		TempPassWd.PassWordByte[0] = 8;
80704A A3                INC     DPTR
80704B 7408              MOV     A,#08H
80704D F0                MOVX    @DPTR,A
  416:         TempPassWd.PassWordByte[1] = 3;
80704E A3                INC     DPTR
80704F 7403              MOV     A,#03H
807051 F0                MOVX    @DPTR,A
  417: 		TempPassWd.PassWordByte[2] = 7;
807052 A3                INC     DPTR
807053 7407              MOV     A,#07H
807055 F0                MOVX    @DPTR,A
  418: 		TempPassWd.PassWordByte[3] = 1;
807056 A3                INC     DPTR
807057 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 226


807059 F0                MOVX    @DPTR,A
  419:         TempPassWd.PassWordByte[4] = 8;
80705A A3                INC     DPTR
80705B 7408              MOV     A,#08H
80705D F0                MOVX    @DPTR,A
  420:         TempPassWd.PassWordByte[5] = 5;
80705E A3                INC     DPTR
80705F 7405              MOV     A,#05H
807061 F0                MOVX    @DPTR,A
  421: 		TempPassWd.PassWordByte[6] = 5;
807062 A3                INC     DPTR
807063 F0                MOVX    @DPTR,A
  422: 		TempPassWd.PassWordByte[7] = 7;
807064 A3                INC     DPTR
807065 7407              MOV     A,#07H
807067 F0                MOVX    @DPTR,A
  423: 		for( i=0; i<8; i++ )
807068 E4                CLR     A
807069 901732            MOV     DPTR,#i
80706C F0                MOVX    @DPTR,A
80706D         ?C0119?RACKSET:
80706D 901732            MOV     DPTR,#i
807070 E0                MOVX    A,@DPTR
807071 FF                MOV     R7,A
807072 C3                CLR     C
807073 9408              SUBB    A,#08H
807075 501A              JNC     ?C0120?RACKSET
  424: 		{
  425: 			TempPassWd.checkbyte += TempPassWd.PassWordByte[i];
807077 743E              MOV     A,#LOW TempPassWd+02H
807079 2F                ADD     A,R7
80707A F582              MOV     DPL,A
80707C E4                CLR     A
80707D 3417              ADDC    A,#HIGH TempPassWd+02H
80707F F583              MOV     DPH,A
807081 E0                MOVX    A,@DPTR
807082 FF                MOV     R7,A
807083 90173D            MOV     DPTR,#TempPassWd+01H
807086 E0                MOVX    A,@DPTR
807087 2F                ADD     A,R7
807088 F0                MOVX    @DPTR,A
  426:  	    }
807089 901732            MOV     DPTR,#i
80708C E0                MOVX    A,@DPTR
80708D 04                INC     A
80708E F0                MOVX    @DPTR,A
80708F 80DC              SJMP    ?C0119?RACKSET
807091         ?C0120?RACKSET:
  427:     }
  428: 	DisplayStr( 0, 0, 1, "   ", 3 );
807091 D21A              SETB    ?_DisplayStr?BIT
807093 7B80              MOV     R3,#BYTE2 08013F8H
807095 7A13              MOV     R2,#HIGH 08013F8H
807097 79F8              MOV     R1,#LOW 08013F8H
807099 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80709C A5128007B6        ECALL   ?C?PSTXDATA
8070A1 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8070A4 7403              MOV     A,#03H
8070A6 A51280885B        ECALL   ?L?COM0007
  429: 	DisplayStr( 0, 1, 1, " ", 1 );
8070AB D21A              SETB    ?_DisplayStr?BIT
8070AD 7B80              MOV     R3,#BYTE2 08013FCH
8070AF 7A13              MOV     R2,#HIGH 08013FCH
8070B1 79FC              MOV     R1,#LOW 08013FCH
8070B3 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 227


8070B6 A5128007B6        ECALL   ?C?PSTXDATA
8070BB 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8070BE 7401              MOV     A,#01H
8070C0 F0                MOVX    @DPTR,A
8070C1 FD                MOV     R5,A
8070C2 E4                CLR     A
8070C3 FF                MOV     R7,A
8070C4 A51280885F        ECALL   _DisplayStr
8070C9         ?C0122?RACKSET:
  430: 	while( 1 )
  431: 	{		
  432: 		WaitForWork( 100, NULL );
8070C9 E4                CLR     A
8070CA 7F64              MOV     R7,#064H
8070CC FE                MOV     R6,A
8070CD A512808330        ECALL   ?L?COM000D
  433: 		memset(password , 0 , sizeof(password));
8070D2 7E00              MOV     R6,#00H
8070D4 7F09              MOV     R7,#09H
8070D6 7D00              MOV     R5,#00H
8070D8 7B00              MOV     R3,#?C?XDATASEG
8070DA 7A17              MOV     R2,#HIGH password
8070DC 7948              MOV     R1,#LOW password
8070DE A5128008A6        ECALL   ?C?MEMSET
  434: 		key = 8;
8070E3 901731            MOV     DPTR,#key
8070E6 7408              MOV     A,#08H
8070E8 F0                MOVX    @DPTR,A
  435: 		ErrFlag = GetLine_1(CSTR_Rack[ 0 ].str , CSTR_Rack[ 0 ].len, 0, password , &key, 1 );		
8070E9 901465            MOV     DPTR,#CSTR_Rack+03H
8070EC E4                CLR     A
8070ED 93                MOVC    A,@A+DPTR
8070EE FD                MOV     R5,A
8070EF E4                CLR     A
8070F0 901756            MOV     DPTR,#?_GetLine_1?BYTE+04H
8070F3 F0                MOVX    @DPTR,A
8070F4 7B00              MOV     R3,#?C?XDATASEG
8070F6 7A17              MOV     R2,#HIGH password
8070F8 7948              MOV     R1,#LOW password
8070FA A3                INC     DPTR
8070FB A5128007B6        ECALL   ?C?PSTXDATA
807100 7A17              MOV     R2,#HIGH key
807102 7931              MOV     R1,#LOW key
807104 90175A            MOV     DPTR,#?_GetLine_1?BYTE+08H
807107 A5128007B6        ECALL   ?C?PSTXDATA
80710C D218              SETB    ?_GetLine_1?BIT
80710E 901462            MOV     DPTR,#CSTR_Rack
807111 A5128007C0        ECALL   ?C?PLDCODE
807116 A51280C970        ECALL   _GetLine_1
80711B 901751            MOV     DPTR,#ErrFlag
80711E EF                MOV     A,R7
80711F F0                MOVX    @DPTR,A
  436: 		ClearKey();	
807120 A512808FA5        ECALL   ClearKey
  437: 		if(ErrFlag == 0)       //超时或cancel
807125 901751            MOV     DPTR,#ErrFlag
807128 E0                MOVX    A,@DPTR
807129 7013              JNZ     ?C0124?RACKSET
  438: 		{
  439: 			DisplayCursorState( 0, 0, 0, 0, 1 );//无光标				
80712B C21A              CLR     ?_DisplayCursorState?BIT
80712D 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
807130 F0                MOVX    @DPTR,A
807131 D21B              SETB    ?_DisplayCursorState?BIT+01H
807133 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 228


807134 FF                MOV     R7,A
807135 A51280897C        ECALL   _DisplayCursorState
  440: 			return 0;	
80713A C3                CLR     C
80713B 02759D            LJMP    ?C0125?RACKSET
  441: 		}
80713E         ?C0124?RACKSET:
  442: 		ErrFlag = 0;	
80713E E4                CLR     A
80713F 901751            MOV     DPTR,#ErrFlag
807142 F0                MOVX    @DPTR,A
  443: 		if( key == TempPassWd.passwdlen )		
807143 90173C            MOV     DPTR,#TempPassWd
807146 E0                MOVX    A,@DPTR
807147 FF                MOV     R7,A
807148 901731            MOV     DPTR,#key
80714B E0                MOVX    A,@DPTR
80714C B5071A            CJNE    A,AR7,?C0126?RACKSET
  444: 			ErrFlag = memcmp( TempPassWd.PassWordByte, password, TempPassWd.passwdlen );
80714F 7E00              MOV     R6,#00H
807151 783E              MOV     R0,#LOW TempPassWd+02H
807153 7C17              MOV     R4,#HIGH TempPassWd+02H
807155 7D00              MOV     R5,#?C?XDATASEG
807157 7B00              MOV     R3,#?C?XDATASEG
807159 7A17              MOV     R2,#HIGH password
80715B 7948              MOV     R1,#LOW password
80715D A51280086D        ECALL   ?C?MEMCMP
807162 901751            MOV     DPTR,#ErrFlag
807165 EF                MOV     A,R7
807166 F0                MOVX    @DPTR,A
807167 8006              SJMP    ?C0127?RACKSET
807169         ?C0126?RACKSET:
  445: 		else
  446: 			ErrFlag = 1;
807169 901751            MOV     DPTR,#ErrFlag
80716C 7401              MOV     A,#01H
80716E F0                MOVX    @DPTR,A
80716F         ?C0127?RACKSET:
  447: 		
  448: 		//密码错误,退出
  449: 		if( ErrFlag != 0 )      
80716F 901751            MOV     DPTR,#ErrFlag
807172 E0                MOVX    A,@DPTR
807173 6047              JZ      ?C0130?RACKSET
  450: 		{				
  451: 			DisplayCursorState( 0, 0, 0, 0, 1 );     //无光标		
807175 C21A              CLR     ?_DisplayCursorState?BIT
807177 E4                CLR     A
807178 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80717B F0                MOVX    @DPTR,A
80717C D21B              SETB    ?_DisplayCursorState?BIT+01H
80717E FD                MOV     R5,A
80717F FF                MOV     R7,A
807180 A51280897C        ECALL   _DisplayCursorState
  452: 			DisplayStr( 0, 0, 1, CSTR_Rack[ 1 ].str, CSTR_Rack[ 1 ].len );
807185 D21A              SETB    ?_DisplayStr?BIT
807187 901466            MOV     DPTR,#CSTR_Rack+04H
80718A A5128007C0        ECALL   ?C?PLDCODE
80718F 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
807192 A5128007B6        ECALL   ?C?PSTXDATA
807197 901469            MOV     DPTR,#CSTR_Rack+07H
80719A A512808856        ECALL   ?L?COM0005
  453: 			DisplayStr( 0, 1, 1, "    ", 4 );				
80719F D21A              SETB    ?_DisplayStr?BIT
8071A1 7B80              MOV     R3,#BYTE2 08013FEH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 229


8071A3 7A13              MOV     R2,#HIGH 08013FEH
8071A5 79FE              MOV     R1,#LOW 08013FEH
8071A7 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8071AA A5128007B6        ECALL   ?C?PSTXDATA
8071AF 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8071B2 7404              MOV     A,#04H
8071B4 A512808321        ECALL   ?L?COM000B
  454: 			WaitForWork( 2000, NULL );				
  455: 		}
8071B9 0270C9            LJMP    ?C0122?RACKSET
  456: 		else
  457: 			break;
  458: 	}
8071BC         ?C0130?RACKSET:
  459: 	//=====================================================================================
  460: 
  461: 	while( 1 )
  462: 	{		
  463: 		ClearKey();	
8071BC A512808FA5        ECALL   ClearKey
  464: 		//输入货道编号
  465: 		RackNo = 0;
8071C1 E4                CLR     A
8071C2 902DFA            MOV     DPTR,#RackNo
8071C5 F0                MOVX    @DPTR,A
8071C6         ?C0132?RACKSET:
  466: 		//////////////////////////		
  467: 		while( 1 )
  468: 		{		
  469: 			ClearDisplayLine( 1 );
8071C6 A512808FAF        ECALL   ?L?COM0014
  470: 			ClearDisplayLine( 2 );		
  471: 			len = 1;
8071CB 90173B            MOV     DPTR,#len
8071CE 7401              MOV     A,#01H
8071D0 F0                MOVX    @DPTR,A
  472: 			memset( Tempstr,0, sizeof( Tempstr ) );	
8071D1 7E00              MOV     R6,#00H
8071D3 7F08              MOV     R7,#08H
8071D5 7D00              MOV     R5,#00H
8071D7 7B00              MOV     R3,#?C?XDATASEG
8071D9 7A17              MOV     R2,#HIGH Tempstr
8071DB 7933              MOV     R1,#LOW Tempstr
8071DD A5128008A6        ECALL   ?C?MEMSET
  473: 		 #ifdef _CHINA_
  474: 		 	key = GetLine( "输入层架编号:", 13 , 0, Tempstr, &len );
  475: 		 #else
  476: 			key = GetLine( "Input Tray code:", 16 , 0, Tempstr, &len );
8071E2 E4                CLR     A
8071E3 901772            MOV     DPTR,#?_GetLine?BYTE+04H
8071E6 F0                MOVX    @DPTR,A
8071E7 7B00              MOV     R3,#?C?XDATASEG
8071E9 7A17              MOV     R2,#HIGH Tempstr
8071EB 7933              MOV     R1,#LOW Tempstr
8071ED A3                INC     DPTR
8071EE A5128007B6        ECALL   ?C?PSTXDATA
8071F3 7A17              MOV     R2,#HIGH len
8071F5 793B              MOV     R1,#LOW len
8071F7 901776            MOV     DPTR,#?_GetLine?BYTE+08H
8071FA A5128007B6        ECALL   ?C?PSTXDATA
8071FF 7B80              MOV     R3,#BYTE2 0801403H
807201 7A14              MOV     R2,#HIGH 0801403H
807203 7903              MOV     R1,#LOW 0801403H
807205 7D10              MOV     R5,#010H
807207 A51280CFB7        ECALL   _GetLine
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 230


80720C 901731            MOV     DPTR,#key
80720F EF                MOV     A,R7
807210 F0                MOVX    @DPTR,A
  477: 		 #endif
  478: 			WaitForWork( 500, NULL );	
807211 E4                CLR     A
807212 7FF4              MOV     R7,#0F4H
807214 7E01              MOV     R6,#01H
807216 A512808330        ECALL   ?L?COM000D
  479: 			ClearKey();				
80721B A512808FA5        ECALL   ClearKey
  480: 			if( key == 1 )//Enter	
807220 901731            MOV     DPTR,#key
807223 E0                MOVX    A,@DPTR
807224 6401              XRL     A,#01H
807226 6003              JZ      $ + 5H
807228 0272C2            LJMP    ?C0134?RACKSET
  481: 			{			
  482: 				DisplayCursorState( 0, 0, 0, 0, 1 );			
80722B C21A              CLR     ?_DisplayCursorState?BIT
80722D 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
807230 F0                MOVX    @DPTR,A
807231 D21B              SETB    ?_DisplayCursorState?BIT+01H
807233 FD                MOV     R5,A
807234 FF                MOV     R7,A
807235 A51280897C        ECALL   _DisplayCursorState
  483: 				for( i = 0; i < len; i ++ )
80723A E4                CLR     A
80723B 901732            MOV     DPTR,#i
80723E F0                MOVX    @DPTR,A
80723F         ?C0135?RACKSET:
80723F 90173B            MOV     DPTR,#len
807242 E0                MOVX    A,@DPTR
807243 FF                MOV     R7,A
807244 901732            MOV     DPTR,#i
807247 E0                MOVX    A,@DPTR
807248 FE                MOV     R6,A
807249 C3                CLR     C
80724A 9F                SUBB    A,R7
80724B 5026              JNC     ?C0136?RACKSET
  484: 				{
  485: 					if( ( Tempstr[i] >= 0 ) && ( Tempstr[i] <= 9 ) )
80724D 7433              MOV     A,#LOW Tempstr
80724F 2E                ADD     A,R6
807250 F582              MOV     DPL,A
807252 E4                CLR     A
807253 3417              ADDC    A,#HIGH Tempstr
807255 F583              MOV     DPH,A
807257 E0                MOVX    A,@DPTR
807258 FF                MOV     R7,A
807259 C3                CLR     C
80725A 9400              SUBB    A,#00H
80725C 400D              JC      ?C0137?RACKSET
80725E EF                MOV     A,R7
80725F D3                SETB    C
807260 9409              SUBB    A,#09H
807262 5007              JNC     ?C0137?RACKSET
  486: 					{
  487: 						RackNo = Tempstr[i];				
807264 902DFA            MOV     DPTR,#RackNo
807267 EF                MOV     A,R7
807268 F0                MOVX    @DPTR,A
  488: 						break;
807269 8008              SJMP    ?C0136?RACKSET
  489: 					}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 231


  490: 				}				
80726B         ?C0137?RACKSET:
80726B 901732            MOV     DPTR,#i
80726E E0                MOVX    A,@DPTR
80726F 04                INC     A
807270 F0                MOVX    @DPTR,A
807271 80CC              SJMP    ?C0135?RACKSET
807273         ?C0136?RACKSET:
  491: 				ClearKey();	
807273 A512808FA5        ECALL   ClearKey
  492: 					
  493: 				if( ( RackNo <= 0 ) || ( RackNo > RACKNUM ))
807278 902DFA            MOV     DPTR,#RackNo
80727B E0                MOVX    A,@DPTR
80727C FF                MOV     R7,A
80727D D3                SETB    C
80727E 9400              SUBB    A,#00H
807280 4009              JC      ?C0140?RACKSET
807282 EF                MOV     A,R7
807283 D3                SETB    C
807284 9408              SUBB    A,#08H
807286 5003              JNC     $ + 5H
807288 0274AE            LJMP    ?C0133?RACKSET
80728B         ?C0140?RACKSET:
  494: 		 	    {
  495: 					#ifdef _CHINA_
  496: 						DisplayStr( 0, 0, 1, "编号输入错误", 12 );
  497: 						DisplayStr( 0, 1, 1, "请输入其它编号", 14 );
  498: 					#else
  499: 						DisplayStr( 0, 0, 1, "Input code error", 16 );
80728B D21A              SETB    ?_DisplayStr?BIT
80728D 7B80              MOV     R3,#BYTE2 0801414H
80728F 7A14              MOV     R2,#HIGH 0801414H
807291 7914              MOV     R1,#LOW 0801414H
807293 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
807296 A5128007B6        ECALL   ?C?PSTXDATA
80729B 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80729E 7410              MOV     A,#010H
8072A0 A51280885B        ECALL   ?L?COM0007
  500: 						DisplayStr( 0, 1, 1, "Input other code", 16 );				
8072A5 D21A              SETB    ?_DisplayStr?BIT
8072A7 7B80              MOV     R3,#BYTE2 0801425H
8072A9 7A14              MOV     R2,#HIGH 0801425H
8072AB 7925              MOV     R1,#LOW 0801425H
8072AD 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8072B0 A5128007B6        ECALL   ?C?PSTXDATA
8072B5 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8072B8 7410              MOV     A,#010H
8072BA A512808321        ECALL   ?L?COM000B
  501: 					#endif									
  502: 					WaitForWork( 2000, NULL );
  503: 					continue;
8072BF 0271C6            LJMP    ?C0132?RACKSET
  504: 				}
  505: 				else
  506: 					break;
  507: 			}
8072C2         ?C0134?RACKSET:
  508: 			else
  509: 			{
  510: 				Trace( "\n IsModify = %bu", IsModify );
  511: 				if( IsModify == 0 )
8072C2 902DF9            MOV     DPTR,#IsModify
8072C5 E0                MOVX    A,@DPTR
8072C6 7004              JNZ     ?C0143?RACKSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 232


  512: 					return 0;
8072C8 C3                CLR     C
8072C9 02759D            LJMP    ?C0125?RACKSET
8072CC         ?C0143?RACKSET:
  513: 				////层架配置完成，设置号道参数
  514: 				LineNum = 0;//总的开启货道数
8072CC E4                CLR     A
8072CD 901730            MOV     DPTR,#LineNum
8072D0 F0                MOVX    @DPTR,A
  515: 				RackNo = 0;//开启层数
8072D1 902DFA            MOV     DPTR,#RackNo
8072D4 F0                MOVX    @DPTR,A
  516: 				memset( InputGoodsWayList, 0, sizeof( InputGoodsWayList )*GOODSWAYNUM );
8072D5 7E40              MOV     R6,#040H
8072D7 FF                MOV     R7,A
8072D8 FD                MOV     R5,A
8072D9 7B00              MOV     R3,#?C?XDATASEG
8072DB 7A2B              MOV     R2,#HIGH InputGoodsWayList
8072DD 79DC              MOV     R1,#LOW InputGoodsWayList
8072DF A5128008A6        ECALL   ?C?MEMSET
  517: 				for( i = 0; i < RACKNUM; i++ )//货架层数
8072E4 E4                CLR     A
8072E5 901732            MOV     DPTR,#i
8072E8 F0                MOVX    @DPTR,A
8072E9         ?C0144?RACKSET:
8072E9 901732            MOV     DPTR,#i
8072EC E0                MOVX    A,@DPTR
8072ED FF                MOV     R7,A
8072EE C3                CLR     C
8072EF 9408              SUBB    A,#08H
8072F1 4003              JC      $ + 5H
8072F3 027421            LJMP    ?C0145?RACKSET
  518: 				{
  519: 					if( iRackSet[ i ].UseState == 1 )//如果此层开启了
8072F6 EF                MOV     A,R7
8072F7 75F003            MOV     B,#03H
8072FA A4                MUL     AB
8072FB 2408              ADD     A,#LOW iRackSet+01H
8072FD F582              MOV     DPL,A
8072FF E4                CLR     A
807300 3404              ADDC    A,#HIGH iRackSet+01H
807302 F583              MOV     DPH,A
807304 E0                MOVX    A,@DPTR
807305 6401              XRL     A,#01H
807307 6003              JZ      $ + 5H
807309 0273E2            LJMP    ?C0147?RACKSET
  520: 					{
  521: 						key = iRackSet[ i ].GoodsMax;//此层中各货道最大存货量
80730C 901732            MOV     DPTR,#i
80730F E0                MOVX    A,@DPTR
807310 75F003            MOV     B,#03H
807313 A4                MUL     AB
807314 2409              ADD     A,#LOW iRackSet+02H
807316 F582              MOV     DPL,A
807318 E4                CLR     A
807319 3404              ADDC    A,#HIGH iRackSet+02H
80731B F583              MOV     DPH,A
80731D E0                MOVX    A,@DPTR
80731E 901731            MOV     DPTR,#key
807321 F0                MOVX    @DPTR,A
  522: 						fristNum = 1;//辑逻货道编号的个位	
807322 90172F            MOV     DPTR,#fristNum
807325 7401              MOV     A,#01H
807327 F0                MOVX    @DPTR,A
  523: 						for( len = 0; len < RACKCOLUMNNUM; len ++ )//检索每层中开启的货道数
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 233


807328 E4                CLR     A
807329 90173B            MOV     DPTR,#len
80732C F0                MOVX    @DPTR,A
80732D         ?C0148?RACKSET:
80732D 90173B            MOV     DPTR,#len
807330 E0                MOVX    A,@DPTR
807331 FF                MOV     R7,A
807332 C3                CLR     C
807333 9408              SUBB    A,#08H
807335 4003              JC      $ + 5H
807337 0273DA            LJMP    ?C0149?RACKSET
  524: 						{
  525: 							Trace("\n iRackColumnSet[ %bu ][ %bu ].UseState = %bu", i, len, iRackColumnSet[i][len].UseState  );
  526: 							if( iRackColumnSet[i][len].UseState == 1)
80733A 901732            MOV     DPTR,#i
80733D E0                MOVX    A,@DPTR
80733E FE                MOV     R6,A
80733F C4                SWAP    A
807340 54F0              ANL     A,#0F0H
807342 2447              ADD     A,#LOW iRackColumnSet+01H
807344 F582              MOV     DPL,A
807346 E4                CLR     A
807347 3401              ADDC    A,#HIGH iRackColumnSet+01H
807349 F583              MOV     DPH,A
80734B 75F002            MOV     B,#02H
80734E EF                MOV     A,R7
80734F A51280079F        ECALL   ?C?OFFXADD
807354 E0                MOVX    A,@DPTR
807355 6401              XRL     A,#01H
807357 7078              JNZ     ?C0150?RACKSET
  527: 							{
  528: 								InputGoodsWayList[ LineNum ].GoodsWayNo = ( RackNo + 1 ) * 10 + fristNum;//逻辑货道  
807359 902DFA            MOV     DPTR,#RackNo
80735C E0                MOVX    A,@DPTR
80735D 04                INC     A
80735E 75F00A            MOV     B,#0AH
807361 A4                MUL     AB
807362 FF                MOV     R7,A
807363 90172F            MOV     DPTR,#fristNum
807366 E0                MOVX    A,@DPTR
807367 2F                ADD     A,R7
807368 FF                MOV     R7,A
807369 A3                INC     DPTR
80736A E0                MOVX    A,@DPTR
80736B FD                MOV     R5,A
80736C 25E0              ADD     A,ACC
80736E 25E0              ADD     A,ACC
807370 24DC              ADD     A,#LOW InputGoodsWayList
807372 F582              MOV     DPL,A
807374 E4                CLR     A
807375 342B              ADDC    A,#HIGH InputGoodsWayList
807377 F583              MOV     DPH,A
807379 EF                MOV     A,R7
80737A F0                MOVX    @DPTR,A
  529: 								Trace("\n InputGoodsWayList[ %bu ].GoodsWayNo = %bu", LineNum, InputGoodsWayList[ LineNum ].GoodsWayNo);
  530: 							//	InputGoodsWayList[ LineNum ].SetArrayNo = i*RACKCOLUMNNUM + len + 1 ;//物理货道
  531: 								InputGoodsWayList[ LineNum ].SetArrayNo = 64 - i*RACKCOLUMNNUM - 8 + len + 1;//物理货道
80737B EE                MOV     A,R6
80737C 75F008            MOV     B,#08H
80737F A4                MUL     AB
807380 F4                CPL     A
807381 04                INC     A
807382 FF                MOV     R7,A
807383 90173B            MOV     DPTR,#len
807386 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 234


807387 2F                ADD     A,R7
807388 2439              ADD     A,#039H
80738A FF                MOV     R7,A
80738B ED                MOV     A,R5
80738C 25E0              ADD     A,ACC
80738E 25E0              ADD     A,ACC
807390 24DD              ADD     A,#LOW InputGoodsWayList+01H
807392 F582              MOV     DPL,A
807394 E4                CLR     A
807395 342B              ADDC    A,#HIGH InputGoodsWayList+01H
807397 F583              MOV     DPH,A
807399 EF                MOV     A,R7
80739A F0                MOVX    @DPTR,A
  532: 								Trace("\n InputGoodsWayList[ %bu ].SetArrayNo = %bu", LineNum, InputGoodsWayList[ LineNum ].SetArrayNo);
  533: 								InputGoodsWayList[ LineNum ].UseState = 1;//开启状态
80739B 901730            MOV     DPTR,#LineNum
80739E E0                MOVX    A,@DPTR
80739F FF                MOV     R7,A
8073A0 25E0              ADD     A,ACC
8073A2 25E0              ADD     A,ACC
8073A4 24DE              ADD     A,#LOW InputGoodsWayList+02H
8073A6 F582              MOV     DPL,A
8073A8 E4                CLR     A
8073A9 342B              ADDC    A,#HIGH InputGoodsWayList+02H
8073AB F583              MOV     DPH,A
8073AD 7401              MOV     A,#01H
8073AF F0                MOVX    @DPTR,A
  534: 								Trace("\n InputGoodsWayList[ %bu ].UseState = %bu", LineNum, InputGoodsWayList[ LineNum ].UseState);
  535: 								InputGoodsWayList[ LineNum ].GoodsMax = key;//最大存货量
8073B0 901731            MOV     DPTR,#key
8073B3 E0                MOVX    A,@DPTR
8073B4 FE                MOV     R6,A
8073B5 EF                MOV     A,R7
8073B6 25E0              ADD     A,ACC
8073B8 25E0              ADD     A,ACC
8073BA 24DF              ADD     A,#LOW InputGoodsWayList+03H
8073BC F582              MOV     DPL,A
8073BE E4                CLR     A
8073BF 342B              ADDC    A,#HIGH InputGoodsWayList+03H
8073C1 F583              MOV     DPH,A
8073C3 EE                MOV     A,R6
8073C4 F0                MOVX    @DPTR,A
  536: 								Trace("\n InputGoodsWayList[ %bu ].GoodsMax = %bu", LineNum, InputGoodsWayList[ LineNum ].GoodsMax);
  537: 								LineNum += 1;								
8073C5 901730            MOV     DPTR,#LineNum
8073C8 E0                MOVX    A,@DPTR
8073C9 04                INC     A
8073CA F0                MOVX    @DPTR,A
  538: 								fristNum += 1;
8073CB 90172F            MOV     DPTR,#fristNum
8073CE E0                MOVX    A,@DPTR
8073CF 04                INC     A
8073D0 F0                MOVX    @DPTR,A
  539: 							}							
  540: 						}
8073D1         ?C0150?RACKSET:
8073D1 90173B            MOV     DPTR,#len
8073D4 E0                MOVX    A,@DPTR
8073D5 04                INC     A
8073D6 F0                MOVX    @DPTR,A
8073D7 02732D            LJMP    ?C0148?RACKSET
8073DA         ?C0149?RACKSET:
  541: 						RackNo += 1;
8073DA 902DFA            MOV     DPTR,#RackNo
8073DD E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 235


8073DE 04                INC     A
8073DF F0                MOVX    @DPTR,A
  542: 					}
8073E0 8036              SJMP    ?C0146?RACKSET
8073E2         ?C0147?RACKSET:
  543: 					else
  544: 					{
  545: 						iRackSet[i].GoodsMax = 0;
8073E2 901732            MOV     DPTR,#i
8073E5 E0                MOVX    A,@DPTR
8073E6 FF                MOV     R7,A
8073E7 75F003            MOV     B,#03H
8073EA A4                MUL     AB
8073EB 2409              ADD     A,#LOW iRackSet+02H
8073ED F582              MOV     DPL,A
8073EF E4                CLR     A
8073F0 3404              ADDC    A,#HIGH iRackSet+02H
8073F2 F583              MOV     DPH,A
8073F4 E4                CLR     A
8073F5 F0                MOVX    @DPTR,A
  546: 						memset( iRackColumnSet[i], 0, 16 );
8073F6 F583              MOV     DPH,A
8073F8 758210            MOV     DPL,#010H
8073FB C083              PUSH    DPH
8073FD C082              PUSH    DPL
8073FF FD                MOV     R5,A
807400 EF                MOV     A,R7
807401 75F010            MOV     B,#010H
807404 A4                MUL     AB
807405 2446              ADD     A,#LOW iRackColumnSet
807407 F9                MOV     R1,A
807408 7401              MOV     A,#HIGH iRackColumnSet
80740A 35F0              ADDC    A,B
80740C FA                MOV     R2,A
80740D 7B00              MOV     R3,#?C?XDATASEG
80740F D007              POP     AR7
807411 D006              POP     AR6
807413 A5128008A6        ECALL   ?C?MEMSET
  547: 					}
  548: 				}
807418         ?C0146?RACKSET:
807418 901732            MOV     DPTR,#i
80741B E0                MOVX    A,@DPTR
80741C 04                INC     A
80741D F0                MOVX    @DPTR,A
80741E 0272E9            LJMP    ?C0144?RACKSET
807421         ?C0145?RACKSET:
  549: 				memset( GoodsWaySetVal, 0, sizeof( struct WaySet ) * GOODSWAYNUM );
807421 7E01              MOV     R6,#01H
807423 7F40              MOV     R7,#040H
807425 7D00              MOV     R5,#00H
807427 7B00              MOV     R3,#?C?XDATASEG
807429 7A00              MOV     R2,#HIGH GoodsWaySetVal
80742B 7904              MOV     R1,#LOW GoodsWaySetVal
80742D A5128008A6        ECALL   ?C?MEMSET
  550: 				Trace("\n EnableNum = %bu", LineNum);
  551: 				for( i = 0; i < LineNum; i ++ )
807432 E4                CLR     A
807433 901732            MOV     DPTR,#i
807436 F0                MOVX    @DPTR,A
807437         ?C0153?RACKSET:
807437 901730            MOV     DPTR,#LineNum
80743A E0                MOVX    A,@DPTR
80743B FF                MOV     R7,A
80743C 901732            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 236


80743F E0                MOVX    A,@DPTR
807440 FE                MOV     R6,A
807441 C3                CLR     C
807442 9F                SUBB    A,R7
807443 5056              JNC     ?C0154?RACKSET
  552: 			    {
  553: 					GoodsWaySetVal[i].WayNo = InputGoodsWayList[ i ].GoodsWayNo;
807445 EE                MOV     A,R6
807446 25E0              ADD     A,ACC
807448 25E0              ADD     A,ACC
80744A 24DC              ADD     A,#LOW InputGoodsWayList
80744C F582              MOV     DPL,A
80744E E4                CLR     A
80744F 342B              ADDC    A,#HIGH InputGoodsWayList
807451 F583              MOV     DPH,A
807453 E0                MOVX    A,@DPTR
807454 FF                MOV     R7,A
807455 75F005            MOV     B,#05H
807458 EE                MOV     A,R6
807459 900004            MOV     DPTR,#GoodsWaySetVal
80745C A51280079F        ECALL   ?C?OFFXADD
807461 EF                MOV     A,R7
807462 F0                MOVX    @DPTR,A
  554: 					Trace("\n GoodsWaySetVal[ %bu ].WayNo = %bu", i, GoodsWaySetVal[ i ].WayNo);
  555: 					GoodsWaySetVal[i].WayState = 0;					
807463 901732            MOV     DPTR,#i
807466 E0                MOVX    A,@DPTR
807467 FF                MOV     R7,A
807468 75F005            MOV     B,#05H
80746B 900005            MOV     DPTR,#GoodsWaySetVal+01H
80746E A51280079F        ECALL   ?C?OFFXADD
807473 E4                CLR     A
807474 F0                MOVX    @DPTR,A
  556: 					GoodsWaySetVal[i].Price = 0;
807475 75F005            MOV     B,#05H
807478 EF                MOV     A,R7
807479 900006            MOV     DPTR,#GoodsWaySetVal+02H
80747C A51280079F        ECALL   ?C?OFFXADD
807481 E4                CLR     A
807482 F0                MOVX    @DPTR,A
807483 A3                INC     DPTR
807484 F0                MOVX    @DPTR,A
  557: 					GoodsWaySetVal[i].GoodsCurrentSum = 0;
807485 75F005            MOV     B,#05H
807488 EF                MOV     A,R7
807489 900008            MOV     DPTR,#GoodsWaySetVal+04H
80748C A51280079F        ECALL   ?C?OFFXADD
807491 E4                CLR     A
807492 F0                MOVX    @DPTR,A
  558: 				}
807493 901732            MOV     DPTR,#i
807496 E0                MOVX    A,@DPTR
807497 04                INC     A
807498 F0                MOVX    @DPTR,A
807499 809C              SJMP    ?C0153?RACKSET
80749B         ?C0154?RACKSET:
  559: 				//保存货架设置和货道开启设置
  560: 				SaveGoodsSet();
80749B A51280DA64        ECALL   SaveGoodsSet
  561: 				SaveRackSet();
8074A0 A51280DB5B        ECALL   SaveRackSet
  562: 				SaveRackColumnSet();
8074A5 A51280DB74        ECALL   SaveRackColumnSet
  563: 				return 0;
8074AA C3                CLR     C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 237


8074AB 02759D            LJMP    ?C0125?RACKSET
  564: 			}
  565: 		}
8074AE         ?C0133?RACKSET:
  566: 		//////////////////////////		
  567: 		DisplayRackMenuAndVal( 0, 0, 1 );	
8074AE D219              SETB    ?_DisplayRackMenuAndVal?BIT
8074B0 E4                CLR     A
8074B1 FD                MOV     R5,A
8074B2 FF                MOV     R7,A
8074B3 A512806E71        ECALL   _DisplayRackMenuAndVal
  568: 		DisplayRackMenuAndVal( 1, 1, 1 );		
8074B8 D219              SETB    ?_DisplayRackMenuAndVal?BIT
8074BA 7D01              MOV     R5,#01H
8074BC 7F01              MOV     R7,#01H
8074BE A512806E71        ECALL   _DisplayRackMenuAndVal
  569: 		DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
8074C3 A51280896E        ECALL   ?L?COM000F
  570: 		fristNum = 1;
8074C8 90172F            MOV     DPTR,#fristNum
8074CB 7401              MOV     A,#01H
8074CD F0                MOVX    @DPTR,A
  571: 		LineNum = 2;
8074CE A3                INC     DPTR
8074CF 04                INC     A
8074D0 F0                MOVX    @DPTR,A
  572: 		WaitForWork( 300, NULL );
8074D1 E4                CLR     A
8074D2 7F2C              MOV     R7,#02CH
8074D4 7E01              MOV     R6,#01H
8074D6 A512808330        ECALL   ?L?COM000D
8074DB         ?C0156?RACKSET:
  573: 		while( 1 )
  574: 		{		
  575: 			/*判断按下何键*/			
  576: 			Rack_MenuSelected( &fristNum, &LineNum, MENU_COUNT( RackParastr ) - 1 );			
8074DB 7E17              MOV     R6,#HIGH fristNum
8074DD 7F2F              MOV     R7,#LOW fristNum
8074DF 7C17              MOV     R4,#HIGH LineNum
8074E1 7D30              MOV     R5,#LOW LineNum
8074E3 7B0A              MOV     R3,#0AH
8074E5 A51280EF91        ECALL   _Rack_MenuSelected
  577: 			//选中了某项菜单				
  578: 			if( fristNum == 100 )//选中退出									
8074EA 90172F            MOV     DPTR,#fristNum
8074ED E0                MOVX    A,@DPTR
8074EE FF                MOV     R7,A
8074EF 6464              XRL     A,#064H
8074F1 7003              JNZ     $ + 5H
8074F3 0271BC            LJMP    ?C0130?RACKSET
  579: 				break;		
8074F6         ?C0158?RACKSET:
  580: 			else if( fristNum == 0 )//没有选中退出
8074F6 EF                MOV     A,R7
8074F7 60E2              JZ      ?C0156?RACKSET
  581: 				continue;
8074F9         ?C0160?RACKSET:
  582: 			else
  583: 			{				
  584: 				ClearKey();	
8074F9 A512808FA5        ECALL   ClearKey
  585: 				if( iRackSet[RackNo - 1].UseState == 1 )
8074FE 902DFA            MOV     DPTR,#RackNo
807501 E0                MOVX    A,@DPTR
807502 75F003            MOV     B,#03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 238


807505 A4                MUL     AB
807506 2405              ADD     A,#LOW iRackSet-02H
807508 F582              MOV     DPL,A
80750A E4                CLR     A
80750B 3404              ADDC    A,#HIGH iRackSet-02H
80750D F583              MOV     DPH,A
80750F E0                MOVX    A,@DPTR
807510 B40107            CJNE    A,#01H,?C0162?RACKSET
  586: 					EditRackParam( fristNum, LineNum - 1 );	
807513 90172F            MOV     DPTR,#fristNum
807516 E0                MOVX    A,@DPTR
807517 FF                MOV     R7,A
807518 8008              SJMP    ?C0183?RACKSET
80751A         ?C0162?RACKSET:
  587: 				else if( fristNum == 1 ) 
80751A 90172F            MOV     DPTR,#fristNum
80751D E0                MOVX    A,@DPTR
80751E FF                MOV     R7,A
80751F B40109            CJNE    A,#01H,?C0163?RACKSET
  588: 					EditRackParam( fristNum, LineNum - 1 );			
807522         
807522 A3                INC     DPTR
807523 E0                MOVX    A,@DPTR
807524 14                DEC     A
807525 FD                MOV     R5,A
807526 A512806F3C        ECALL   _EditRackParam
80752B         ?C0163?RACKSET:
  589: 				//重新显示此项参数的值			
  590: 				if( LineNum == 2 )
80752B 901730            MOV     DPTR,#LineNum
80752E E0                MOVX    A,@DPTR
80752F 6402              XRL     A,#02H
807531 7026              JNZ     ?C0165?RACKSET
  591: 				{			
  592: 					if( fristNum == 0 )
807533 90172F            MOV     DPTR,#fristNum
807536 E0                MOVX    A,@DPTR
807537 7006              JNZ     ?C0166?RACKSET
  593: 						DisplayRackMenuAndVal( 0, MENU_COUNT( RackParastr ) - 1, 1 );
807539 D219              SETB    ?_DisplayRackMenuAndVal?BIT
80753B 7D0A              MOV     R5,#0AH
80753D 8009              SJMP    ?C0181?RACKSET
80753F         ?C0166?RACKSET:
  594: 					else						
  595: 						DisplayRackMenuAndVal( 0, fristNum-1, 1 );						
80753F 90172F            MOV     DPTR,#fristNum
807542 E0                MOVX    A,@DPTR
807543 14                DEC     A
807544 FD                MOV     R5,A
807545 D219              SETB    ?_DisplayRackMenuAndVal?BIT
807547 E4                CLR     A
807548         
807548 FF                MOV     R7,A
807549 A512806E71        ECALL   _DisplayRackMenuAndVal
80754E         ?C0167?RACKSET:
  596: 					DisplayRackMenuAndVal( 1, fristNum, 1 );	
80754E 90172F            MOV     DPTR,#fristNum
807551 E0                MOVX    A,@DPTR
807552 FD                MOV     R5,A
807553 D219              SETB    ?_DisplayRackMenuAndVal?BIT
807555 7F01              MOV     R7,#01H
  597: 				}
807557 8025              SJMP    ?C0184?RACKSET
807559         ?C0165?RACKSET:
  598: 				else
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 239


  599: 				{									
  600: 					if( fristNum == ( MENU_COUNT( RackParastr ) - 1 ) )
807559 90172F            MOV     DPTR,#fristNum
80755C E0                MOVX    A,@DPTR
80755D B40A06            CJNE    A,#0AH,?C0169?RACKSET
  601: 						DisplayRackMenuAndVal( 1, 0, 1 );	
807560 D219              SETB    ?_DisplayRackMenuAndVal?BIT
807562 E4                CLR     A
807563 FD                MOV     R5,A
807564 8008              SJMP    ?C0182?RACKSET
807566         ?C0169?RACKSET:
  602: 					else						
  603: 						DisplayRackMenuAndVal( 1, fristNum + 1, 1 );	
807566 90172F            MOV     DPTR,#fristNum
807569 E0                MOVX    A,@DPTR
80756A 04                INC     A
80756B FD                MOV     R5,A
80756C D219              SETB    ?_DisplayRackMenuAndVal?BIT
80756E         
80756E 7F01              MOV     R7,#01H
807570 A512806E71        ECALL   _DisplayRackMenuAndVal
807575         ?C0170?RACKSET:
  604: 					DisplayRackMenuAndVal( 0, fristNum, 1 );
807575 90172F            MOV     DPTR,#fristNum
807578 E0                MOVX    A,@DPTR
807579 FD                MOV     R5,A
80757A D219              SETB    ?_DisplayRackMenuAndVal?BIT
80757C E4                CLR     A
80757D FF                MOV     R7,A
80757E         
80757E A512806E71        ECALL   _DisplayRackMenuAndVal
  605: 				}			
807583         ?C0168?RACKSET:
  606: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//设置光标为整行状态			
807583 901730            MOV     DPTR,#LineNum
807586 E0                MOVX    A,@DPTR
807587 14                DEC     A
807588 FD                MOV     R5,A
807589 D21A              SETB    ?_DisplayCursorState?BIT
80758B 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80758E 7402              MOV     A,#02H
807590 F0                MOVX    @DPTR,A
807591 D21B              SETB    ?_DisplayCursorState?BIT+01H
807593 E4                CLR     A
807594 FF                MOV     R7,A
807595 A51280897C        ECALL   _DisplayCursorState
  607: 			}					
  608: 		}
80759A 0274DB            LJMP    ?C0156?RACKSET
  609: 	}
  610: 	return 0;
  611: }
80759D         ?C0125?RACKSET:
80759D A522              ERET    
----- FUNCTION RackParamManage (END) -------


----- FUNCTION ZhkNullTask (BEGIN) -----
 FILE: 'scheduler.c'
  367: bit ZhkNullTask( void )
  368: {
  369: 	uchar  data i;
  370: 	uchar  data clocktemp;
  371: 	uchar  data PriorityTemp;
  372: 	uchar  data TaskIdTemp;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 240


  373: 	//Trace( "ZhkNullTask\n" );
  374: 	// 更新定时查询任务队列中各个任务的等待就绪时间计数
  375: 	clocktemp = ZhkGetSchedulerClock();
80759F A51280FFAD        ECALL   ZhkGetSchedulerClock
8075A4 8F2B              MOV     clocktemp,R7
  376: 	for( i = 0 ; i < sizeof( ZhkAutoTaskList ) / sizeof( struct AUTOTASK ) ; i ++ )
8075A6 E4                CLR     A
8075A7 F52A              MOV     i,A
8075A9         ?C0050?SCHEDULER:
  377: 	{
  378: 		if ( ZhkAutoTaskTimer[ i ] > clocktemp ) 
8075A9 74A9              MOV     A,#LOW ZhkAutoTaskTimer
8075AB 252A              ADD     A,i
8075AD F582              MOV     DPL,A
8075AF E4                CLR     A
8075B0 3428              ADDC    A,#HIGH ZhkAutoTaskTimer
8075B2 F583              MOV     DPH,A
8075B4 E0                MOVX    A,@DPTR
8075B5 FF                MOV     R7,A
8075B6 D3                SETB    C
8075B7 952B              SUBB    A,clocktemp
8075B9 4012              JC      ?C0053?SCHEDULER
  379: 			ZhkAutoTaskTimer[ i ] -= clocktemp;
8075BB 74A9              MOV     A,#LOW ZhkAutoTaskTimer
8075BD 252A              ADD     A,i
8075BF F582              MOV     DPL,A
8075C1 E4                CLR     A
8075C2 3428              ADDC    A,#HIGH ZhkAutoTaskTimer
8075C4 F583              MOV     DPH,A
8075C6 C3                CLR     C
8075C7 EF                MOV     A,R7
8075C8 952B              SUBB    A,clocktemp
8075CA F0                MOVX    @DPTR,A
8075CB 805C              SJMP    ?C0052?SCHEDULER
8075CD         ?C0053?SCHEDULER:
  380: 		else
  381: 		{
  382: 			ZhkAutoTaskTimer[ i ]  = 0;
8075CD 74A9              MOV     A,#LOW ZhkAutoTaskTimer
8075CF 252A              ADD     A,i
8075D1 F582              MOV     DPL,A
8075D3 E4                CLR     A
8075D4 3428              ADDC    A,#HIGH ZhkAutoTaskTimer
8075D6 F583              MOV     DPH,A
8075D8 E4                CLR     A
8075D9 F0                MOVX    @DPTR,A
  383: 			if ( ZhkAutoTaskPermission[ i ] == 1 ) 
8075DA 7466              MOV     A,#LOW ZhkAutoTaskPermission
8075DC 252A              ADD     A,i
8075DE F582              MOV     DPL,A
8075E0 E4                CLR     A
8075E1 3423              ADDC    A,#HIGH ZhkAutoTaskPermission
8075E3 F583              MOV     DPH,A
8075E5 E0                MOVX    A,@DPTR
8075E6 6401              XRL     A,#01H
8075E8 703F              JNZ     ?C0052?SCHEDULER
  384: 			{
  385: 		//		Trace( "\n AutoTaskNum=%bu", i );
  386: 				ZhkAutoTaskTimer[ i ] = ZhkAutoTaskList[ i ].Cycle;
8075EA E52A              MOV     A,i
8075EC 75F003            MOV     B,#03H
8075EF A4                MUL     AB
8075F0 2470              ADD     A,#LOW ZhkAutoTaskList+02H
8075F2 F582              MOV     DPL,A
8075F4 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 241


8075F5 3418              ADDC    A,#HIGH ZhkAutoTaskList+02H
8075F7 F583              MOV     DPH,A
8075F9 E4                CLR     A
8075FA 93                MOVC    A,@A+DPTR
8075FB FF                MOV     R7,A
8075FC 74A9              MOV     A,#LOW ZhkAutoTaskTimer
8075FE 252A              ADD     A,i
807600 F582              MOV     DPL,A
807602 E4                CLR     A
807603 3428              ADDC    A,#HIGH ZhkAutoTaskTimer
807605 F583              MOV     DPH,A
807607 EF                MOV     A,R7
807608 F0                MOVX    @DPTR,A
  387: 				switch( ZhkAutoTaskList[ i ].Id )
807609 E52A              MOV     A,i
80760B 75F003            MOV     B,#03H
80760E A4                MUL     AB
80760F 246E              ADD     A,#LOW ZhkAutoTaskList
807611 F582              MOV     DPL,A
807613 E4                CLR     A
807614 3418              ADDC    A,#HIGH ZhkAutoTaskList
807616 F583              MOV     DPH,A
807618 E4                CLR     A
807619 93                MOVC    A,@A+DPTR
80761A 24F3              ADD     A,#0F3H
80761C 700B              JNZ     ?C0052?SCHEDULER
  388: 				{
  389: 				//	case ID_COINER1:	
  390: 				//		if( CoinerStatus == COINER_STATUS_NULL )
  391: 				//			CoinerQuery();
  392: 				//		break;			
  393: 					case ID_CASHER:	
80761E         ?C0057?SCHEDULER:
  394: 						if( ZhkCasherStatus == CASHER_STATUS_NULL )
80761E 902368            MOV     DPTR,#ZhkCasherStatus
807621 E0                MOVX    A,@DPTR
807622 7005              JNZ     ?C0052?SCHEDULER
  395: 							ZhkCasherQuery();					
807624 A512813007        ECALL   ZhkCasherQuery
  396: 						break;
  397: 				}
  398: 			}
  399: 		}
  400: 	}
807629         ?C0052?SCHEDULER:
807629 052A              INC     i
80762B E52A              MOV     A,i
80762D C3                CLR     C
80762E 9402              SUBB    A,#02H
807630 5003              JNC     $ + 5H
807632 0275A9            LJMP    ?C0050?SCHEDULER
807635         ?C0051?SCHEDULER:
  401: 	//Trace( "PriorityTemp = 0xFF\n" );
  402: 	// 选择任务队列中已经满足就绪条件中的优先级最高的任务
  403: 	PriorityTemp = 0xFF;
807635 752CFF            MOV     PriorityTemp,#0FFH
  404: 	for( i = 0 ; i < sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) ; i ++ )
807638 E4                CLR     A
807639 F52A              MOV     i,A
80763B         ?C0059?SCHEDULER:
  405: 	{
  406: 		if ( ZhkSchedulerIsTaskNull( i ) ) 
80763B AF2A              MOV     R7,i
80763D A51280FF8F        ECALL   _ZhkSchedulerIsTaskNull
807642 401A              JC      ?C0061?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 242


  407: 			continue;
807644         ?C0062?SCHEDULER:
  408: 		if ( PriorityTemp > ZhkReadyTaskList[ i ].Priority )
807644 75F026            MOV     B,#026H
807647 E52A              MOV     A,i
807649 9023E9            MOV     DPTR,#ZhkReadyTaskList
80764C A51280079F        ECALL   ?C?OFFXADD
807651 E0                MOVX    A,@DPTR
807652 FF                MOV     R7,A
807653 E52C              MOV     A,PriorityTemp
807655 D3                SETB    C
807656 9F                SUBB    A,R7
807657 4005              JC      ?C0061?SCHEDULER
  409: 		{
  410: 			PriorityTemp = ZhkReadyTaskList[ i ].Priority;
807659 8F2C              MOV     PriorityTemp,R7
  411: 			TaskIdTemp   = i;
80765B 852A2D            MOV     TaskIdTemp,i
  412: 		}
  413: 	}			
80765E         ?C0061?SCHEDULER:
80765E 052A              INC     i
807660 E52A              MOV     A,i
807662 C3                CLR     C
807663 9420              SUBB    A,#020H
807665 40D4              JC      ?C0059?SCHEDULER
807667         ?C0060?SCHEDULER:
  414: 	// 没有就绪任务，返回0
  415: 	if ( PriorityTemp == 0xFF ) 
807667 E52C              MOV     A,PriorityTemp
807669 B4FF03            CJNE    A,#0FFH,?C0064?SCHEDULER
  416: 		return 0;
80766C C3                CLR     C
80766D 8070              SJMP    ?C0065?SCHEDULER
80766F         ?C0064?SCHEDULER:
  417: 	
  418: 	memcpy( &CurrentTask , &ZhkReadyTaskList[ TaskIdTemp ] , sizeof( struct COMMTASK ) );
80766F E52D              MOV     A,TaskIdTemp
807671 75F026            MOV     B,#026H
807674 A4                MUL     AB
807675 24E9              ADD     A,#LOW ZhkReadyTaskList
807677 F9                MOV     R1,A
807678 7423              MOV     A,#HIGH ZhkReadyTaskList
80767A 35F0              ADDC    A,B
80767C FA                MOV     R2,A
80767D 7B00              MOV     R3,#?C?XDATASEG
80767F 78AE              MOV     R0,#LOW CurrentTask
807681 7C28              MOV     R4,#HIGH CurrentTask
807683 7D00              MOV     R5,#?C?XDATASEG
807685 7E00              MOV     R6,#00H
807687 7F26              MOV     R7,#026H
807689 A51280052D        ECALL   ?C?COPY
  419: 	ZhkSchedulerState = TASK_REDAY;	
80768E 9023D3            MOV     DPTR,#ZhkSchedulerState
807691 7401              MOV     A,#01H
807693 F0                MOVX    @DPTR,A
  420: 
  421: 	for( i = TaskIdTemp ; i < ( sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) - 1 ) ; i ++ )	
807694 852D2A            MOV     i,TaskIdTemp
807697         ?C0066?SCHEDULER:
807697 E52A              MOV     A,i
807699 C3                CLR     C
80769A 941F              SUBB    A,#01FH
80769C 502F              JNC     ?C0067?SCHEDULER
  422: 		memcpy( &ZhkReadyTaskList[ i ] , &ZhkReadyTaskList[ i + 1 ] , sizeof( struct COMMTASK ) );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 243


80769E E52A              MOV     A,i
8076A0 75F026            MOV     B,#026H
8076A3 A4                MUL     AB
8076A4 FF                MOV     R7,A
8076A5 AEF0              MOV     R6,B
8076A7 240F              ADD     A,#LOW ZhkReadyTaskList+026H
8076A9 F9                MOV     R1,A
8076AA 7424              MOV     A,#HIGH ZhkReadyTaskList+026H
8076AC 3E                ADDC    A,R6
8076AD FA                MOV     R2,A
8076AE 7B00              MOV     R3,#?C?XDATASEG
8076B0 C001              PUSH    AR1
8076B2 74E9              MOV     A,#LOW ZhkReadyTaskList
8076B4 2F                ADD     A,R7
8076B5 F9                MOV     R1,A
8076B6 7423              MOV     A,#HIGH ZhkReadyTaskList
8076B8 3E                ADDC    A,R6
8076B9 A801              MOV     R0,AR1
8076BB FC                MOV     R4,A
8076BC 7D00              MOV     R5,#?C?XDATASEG
8076BE D001              POP     AR1
8076C0 7E00              MOV     R6,#00H
8076C2 7F26              MOV     R7,#026H
8076C4 A51280052D        ECALL   ?C?COPY
8076C9 052A              INC     i
8076CB 80CA              SJMP    ?C0066?SCHEDULER
8076CD         ?C0067?SCHEDULER:
  423: 	
  424: 	memset( &ZhkReadyTaskList[ sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) - 1 ] , 0xFF , sizeof( struct 
>> COMMTASK ) );
8076CD 7E00              MOV     R6,#00H
8076CF 7F26              MOV     R7,#026H
8076D1 7DFF              MOV     R5,#0FFH
8076D3 7B00              MOV     R3,#?C?XDATASEG
8076D5 7A28              MOV     R2,#HIGH ZhkReadyTaskList+049AH
8076D7 7983              MOV     R1,#LOW ZhkReadyTaskList+049AH
8076D9 A5128008A6        ECALL   ?C?MEMSET
  425: 	return 1;
8076DE D3                SETB    C
  426: }
8076DF         ?C0065?SCHEDULER:
8076DF A522              ERET    
----- FUNCTION ZhkNullTask (END) -------


----- FUNCTION ScanfKeyFun (BEGIN) -----
 FILE: 'key.c'
   70: uchar ScanfKeyFun( void ) 	using	1
8076E1 C0D0              PUSH    PSW
8076E3 75D008            MOV     PSW,#08H
   71: {
   72: 	uchar data key = KEY_NULL;
8076E6 7547FF            MOV     key,#0FFH
   73: 	uchar data KeyIOTemp;
   74: 
   75: 	ZhkHardKeyBoardLine1Select();
8076E9 75900E            MOV     P1,#0EH
   76: 	P0 = 0xFF;
8076EC 7580FF            MOV     P0,#0FFH
   77: 	_nop_();
8076EF 00                NOP     
   78: 	_nop_();
8076F0 00                NOP     
   79: 	_nop_();
8076F1 00                NOP     
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 244


   80: 	KeyIOTemp = P0;
8076F2 858048            MOV     KeyIOTemp,P0
   81: 	ZhkHardSramSelect();
8076F5 759008            MOV     P1,#08H
   82: 	key = Key1[ KeyIOTemp / 0x10 ];if ( key != KEY_NULL ) return( key );
8076F8 E548              MOV     A,KeyIOTemp
8076FA C4                SWAP    A
8076FB 540F              ANL     A,#0FH
8076FD 901874            MOV     DPTR,#Key1
807700 93                MOVC    A,@A+DPTR
807701 F547              MOV     key,A
807703 F4                CPL     A
807704 6004              JZ      ?C0011?KEY
807706 AF47              MOV     R7,key
807708 803F              SJMP    ?C0012?KEY
80770A         ?C0011?KEY:
   83: 	key = Key2[ KeyIOTemp % 0x10 ];if ( key != KEY_NULL ) return( key );
80770A E548              MOV     A,KeyIOTemp
80770C 540F              ANL     A,#0FH
80770E 901884            MOV     DPTR,#Key2
807711 93                MOVC    A,@A+DPTR
807712 F547              MOV     key,A
807714 F4                CPL     A
807715 6004              JZ      ?C0013?KEY
807717 AF47              MOV     R7,key
807719 802E              SJMP    ?C0012?KEY
80771B         ?C0013?KEY:
   84: 
   85: 	ZhkHardKeyBoardLine2Select();
80771B 75900F            MOV     P1,#0FH
   86: 	P0 = 0xFF;
80771E 7580FF            MOV     P0,#0FFH
   87: 	_nop_();
807721 00                NOP     
   88: 	_nop_();
807722 00                NOP     
   89: 	_nop_();
807723 00                NOP     
   90: 	KeyIOTemp = P0;
807724 858048            MOV     KeyIOTemp,P0
   91: 	ZhkHardSramSelect();
807727 759008            MOV     P1,#08H
   92: 	key = Key3[ KeyIOTemp / 0x10 ];if ( key != KEY_NULL ) return( key );
80772A E548              MOV     A,KeyIOTemp
80772C C4                SWAP    A
80772D 540F              ANL     A,#0FH
80772F 901894            MOV     DPTR,#Key3
807732 93                MOVC    A,@A+DPTR
807733 F547              MOV     key,A
807735 F4                CPL     A
807736 6004              JZ      ?C0014?KEY
807738 AF47              MOV     R7,key
80773A 800D              SJMP    ?C0012?KEY
80773C         ?C0014?KEY:
   93: 	key = Key4[ KeyIOTemp % 0x10 ];if ( key != KEY_NULL ) return( key );
80773C E548              MOV     A,KeyIOTemp
80773E 540F              ANL     A,#0FH
807740 9018A4            MOV     DPTR,#Key4
807743 93                MOVC    A,@A+DPTR
807744 F547              MOV     key,A
807746 F4                CPL     A
807747         ?C0015?KEY:
   94: 	return( key );
807747 AF47              MOV     R7,key
   95: }
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 245


807749         ?C0012?KEY:
807749 D0D0              POP     PSW
80774B A522              ERET    
----- FUNCTION ScanfKeyFun (END) -------


----- FUNCTION ZhkCasherSerialInit (BEGIN) -----
 FILE: 'casher.c'
   83: void ZhkCasherSerialInit( void )
   84: {	
   85: 	unsigned char data i;
   86: 
   87: 	for( i = 0 ; i < sizeof( SERAIL1PARAM ) ; i ++ )
80774D E4                CLR     A
80774E F52B              MOV     i,A
807750         ?C0008?CASHER:
   88: 		ZhkSerial1Param[ i ] = ZhkVtiSerialParam[ i ];
807750 E52B              MOV     A,i
807752 9018D8            MOV     DPTR,#ZhkVtiSerialParam
807755 93                MOVC    A,@A+DPTR
807756 FF                MOV     R7,A
807757 745C              MOV     A,#LOW ZhkSerial1Param
807759 252B              ADD     A,i
80775B F582              MOV     DPL,A
80775D E4                CLR     A
80775E 342D              ADDC    A,#HIGH ZhkSerial1Param
807760 F583              MOV     DPH,A
807762 EF                MOV     A,R7
807763 F0                MOVX    @DPTR,A
807764 052B              INC     i
807766 E52B              MOV     A,i
807768 B406E5            CJNE    A,#06H,?C0008?CASHER
80776B         ?C0009?CASHER:
   89: 	ZhkSerial1Init();
80776B A512813822        ECALL   ZhkSerial1Init
   90:     
   91:     /*
   92: 	CBit0 = CashAcceptEnableTable[0];
   93: 	CBit1 = CashAcceptEnableTable[1];
   94: 	CBit2 = CashAcceptEnableTable[2];
   95: 	CBit3 = CashAcceptEnableTable[3];
   96: 	CBit4 = CashAcceptEnableTable[4];
   97: 	CBit5 = CashAcceptEnableTable[5];
   98: 	CBit6 = CashAcceptEnableTable[6];
   99: 	CBit7 = CashAcceptEnableTable[7];
  100: 	*/
  101:     
  102:     if( SystemParameter.billValue[0] != 0   )
807770 900449            MOV     DPTR,#SystemParameter+029H
807773 E0                MOVX    A,@DPTR
807774 7002              JNZ     ?C0024?CASHER
807776 A3                INC     DPTR
807777 E0                MOVX    A,@DPTR
807778         ?C0024?CASHER:
807778 6002              JZ      ?C0011?CASHER
  103: 	{
  104: 		CBit0 = 1;
80777A D200              SETB    CBit0
  105: 	}
80777C         ?C0011?CASHER:
  106: 	if( SystemParameter.billValue[1] != 0   )
80777C 90044B            MOV     DPTR,#SystemParameter+02BH
80777F E0                MOVX    A,@DPTR
807780 7002              JNZ     ?C0025?CASHER
807782 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 246


807783 E0                MOVX    A,@DPTR
807784         ?C0025?CASHER:
807784 6002              JZ      ?C0012?CASHER
  107: 	{
  108: 		CBit1 = 1;
807786 D201              SETB    CBit1
  109: 	}
807788         ?C0012?CASHER:
  110: 	if( SystemParameter.billValue[2] != 0   )
807788 90044D            MOV     DPTR,#SystemParameter+02DH
80778B E0                MOVX    A,@DPTR
80778C 7002              JNZ     ?C0026?CASHER
80778E A3                INC     DPTR
80778F E0                MOVX    A,@DPTR
807790         ?C0026?CASHER:
807790 6002              JZ      ?C0013?CASHER
  111: 	{
  112: 		CBit2 = 1;
807792 D202              SETB    CBit2
  113: 	}
807794         ?C0013?CASHER:
  114: 	if( SystemParameter.billValue[3] != 0   )
807794 90044F            MOV     DPTR,#SystemParameter+02FH
807797 E0                MOVX    A,@DPTR
807798 7002              JNZ     ?C0027?CASHER
80779A A3                INC     DPTR
80779B E0                MOVX    A,@DPTR
80779C         ?C0027?CASHER:
80779C 6002              JZ      ?C0014?CASHER
  115: 	{
  116: 		CBit3 = 1;
80779E D203              SETB    CBit3
  117: 	}
8077A0         ?C0014?CASHER:
  118: 	if( SystemParameter.billValue[4] != 0   )
8077A0 900451            MOV     DPTR,#SystemParameter+031H
8077A3 E0                MOVX    A,@DPTR
8077A4 7002              JNZ     ?C0028?CASHER
8077A6 A3                INC     DPTR
8077A7 E0                MOVX    A,@DPTR
8077A8         ?C0028?CASHER:
8077A8 6002              JZ      ?C0015?CASHER
  119: 	{
  120: 		CBit4 = 1;
8077AA D204              SETB    CBit4
  121: 	}
8077AC         ?C0015?CASHER:
  122: 	if( SystemParameter.billValue[5] != 0   )
8077AC 900453            MOV     DPTR,#SystemParameter+033H
8077AF E0                MOVX    A,@DPTR
8077B0 7002              JNZ     ?C0029?CASHER
8077B2 A3                INC     DPTR
8077B3 E0                MOVX    A,@DPTR
8077B4         ?C0029?CASHER:
8077B4 6002              JZ      ?C0016?CASHER
  123: 	{
  124: 		CBit5 = 1;
8077B6 D205              SETB    CBit5
  125: 	}
8077B8         ?C0016?CASHER:
  126: 	if( SystemParameter.billValue[6] != 0   )
8077B8 900455            MOV     DPTR,#SystemParameter+035H
8077BB E0                MOVX    A,@DPTR
8077BC 7002              JNZ     ?C0030?CASHER
8077BE A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 247


8077BF E0                MOVX    A,@DPTR
8077C0         ?C0030?CASHER:
8077C0 6002              JZ      ?C0017?CASHER
  127: 	{
  128: 		CBit6 = 1;
8077C2 D206              SETB    CBit6
  129: 	}
8077C4         ?C0017?CASHER:
  130: 	if( SystemParameter.billValue[7] != 0   )
8077C4 900457            MOV     DPTR,#SystemParameter+037H
8077C7 E0                MOVX    A,@DPTR
8077C8 7002              JNZ     ?C0031?CASHER
8077CA A3                INC     DPTR
8077CB E0                MOVX    A,@DPTR
8077CC         ?C0031?CASHER:
8077CC 6002              JZ      ?C0019?CASHER
  131: 	{
  132: 		CBit7 = 1;
8077CE D207              SETB    CBit7
  133: 	}
  134: 
  135: }
8077D0         ?C0019?CASHER:
8077D0 A522              ERET    
----- FUNCTION ZhkCasherSerialInit (END) -------


----- FUNCTION ZhkSerialInit (BEGIN) -----
 FILE: 'serial.c'
   46: uchar ZhkSerialInit( void )
   47: {
   48: 	uint  data dat;
   49: 	uchar data ch;
   50: 
   51: 	T2CON   = 0x34;
8077D2 75C834            MOV     T2CON,#034H
   52: 	SCON    = 0xD0;
8077D5 7598D0            MOV     SCON,#0D0H
   53:   	
   54: 	ch = ZhkDataBit + ZhkStopBit;
8077D8 900005            MOV     DPTR,#ZhkSerialParam+02H
8077DB E4                CLR     A
8077DC 93                MOVC    A,@A+DPTR
8077DD FF                MOV     R7,A
8077DE 900003            MOV     DPTR,#ZhkSerialParam
8077E1 E4                CLR     A
8077E2 93                MOVC    A,@A+DPTR
8077E3 FE                MOV     R6,A
8077E4 2F                ADD     A,R7
8077E5 F52E              MOV     ch,A
   55: 	if ( ZhkVerifyBit != VERIFY_NULL ) ch ++;
8077E7 A3                INC     DPTR
8077E8 E4                CLR     A
8077E9 93                MOVC    A,@A+DPTR
8077EA FD                MOV     R5,A
8077EB 6002              JZ      ?C0001?SERIAL
8077ED 052E              INC     ch
8077EF         ?C0001?SERIAL:
   56: 	if ( ch != 9 && ch != 10 ) return 0;
8077EF E52E              MOV     A,ch
8077F1 6409              XRL     A,#09H
8077F3 600B              JZ      ?C0002?SERIAL
8077F5 E52E              MOV     A,ch
8077F7 640A              XRL     A,#0AH
8077F9 6005              JZ      ?C0002?SERIAL
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 248


8077FB 7F00              MOV     R7,#00H
8077FD 0278B3            LJMP    ?C0003?SERIAL
807800         ?C0002?SERIAL:
   57: 	if ( ZhkVerifyBit == VERIFY_NULL || ZhkDataBit < 8 )
807800 ED                MOV     A,R5
807801 6006              JZ      ?C0005?SERIAL
807803 EE                MOV     A,R6
807804 C3                CLR     C
807805 9408              SUBB    A,#08H
807807 5002              JNC     ?C0004?SERIAL
807809         ?C0005?SERIAL:
   58: 	{
   59: 		SM0 = 0;
807809 C29F              CLR     SM0_0
   60: 	}
80780B         ?C0004?SERIAL:
   61: 	
   62: 	/* ZhkBaudRate 是波特率/100 用BCD码表示 */
   63: 	dat      = ZhkBaudRate;
80780B 900006            MOV     DPTR,#ZhkSerialParam+03H
80780E E4                CLR     A
80780F 93                MOVC    A,@A+DPTR
807810 FE                MOV     R6,A
807811 A3                INC     DPTR
807812 E4                CLR     A
807813 93                MOVC    A,@A+DPTR
807814 7C00              MOV     R4,#00H
807816 2400              ADD     A,#00H
807818 F52D              MOV     dat+01H,A
80781A EC                MOV     A,R4
80781B 3E                ADDC    A,R6
80781C F52C              MOV     dat,A
   64: 	dat     -= dat / 4096 * 6 * 256;
80781E C4                SWAP    A
80781F 540F              ANL     A,#0FH
807821 FF                MOV     R7,A
807822 7E00              MOV     R6,#00H
807824 7C06              MOV     R4,#06H
807826 7D00              MOV     R5,#00H
807828 A512800559        ECALL   ?C?IMUL
80782D C3                CLR     C
80782E E52D              MOV     A,dat+01H
807830 9F                SUBB    A,R7
807831 F52D              MOV     dat+01H,A
807833 E52C              MOV     A,dat
807835 9E                SUBB    A,R6
807836 F52C              MOV     dat,A
   65: 	dat     -= dat /  256 * 6 *  16;
807838 FF                MOV     R7,A
807839 7E00              MOV     R6,#00H
80783B 7C00              MOV     R4,#00H
80783D 7D60              MOV     R5,#060H
80783F A512800559        ECALL   ?C?IMUL
807844 C3                CLR     C
807845 E52D              MOV     A,dat+01H
807847 9F                SUBB    A,R7
807848 F52D              MOV     dat+01H,A
80784A E52C              MOV     A,dat
80784C 9E                SUBB    A,R6
80784D F52C              MOV     dat,A
   66: 	dat     -= dat /   16 * 6;
80784F C4                SWAP    A
807850 F8                MOV     R0,A
807851 54F0              ANL     A,#0F0H
807853 C8                XCH     A,R0
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 249


807854 68                XRL     A,R0
807855 FE                MOV     R6,A
807856 E52D              MOV     A,dat+01H
807858 C4                SWAP    A
807859 540F              ANL     A,#0FH
80785B 48                ORL     A,R0
80785C FF                MOV     R7,A
80785D 7D06              MOV     R5,#06H
80785F A512800559        ECALL   ?C?IMUL
807864 C3                CLR     C
807865 E52D              MOV     A,dat+01H
807867 9F                SUBB    A,R7
807868 F52D              MOV     dat+01H,A
80786A E52C              MOV     A,dat
80786C 9E                SUBB    A,R6
80786D F52C              MOV     dat,A
   67: 	dat      = ( OSCRATE / 32 / 100  * 12 / MACHINECYCLE ) / dat;
80786F AF2D              MOV     R7,dat+01H
807871 AB07              MOV     R3,AR7
807873 FA                MOV     R2,A
807874 E4                CLR     A
807875 F9                MOV     R1,A
807876 F8                MOV     R0,A
807877 FF                MOV     R7,A
807878 7E1B              MOV     R6,#01BH
80787A FD                MOV     R5,A
80787B A512801814        ECALL   ?C?SLDIV
807880 8E2C              MOV     dat,R6
807882 8F2D              MOV     dat+01H,R7
   68: 	dat      = - dat;
807884 C3                CLR     C
807885 E4                CLR     A
807886 952D              SUBB    A,dat+01H
807888 F52D              MOV     dat+01H,A
80788A E4                CLR     A
80788B 952C              SUBB    A,dat
80788D F52C              MOV     dat,A
   69: 	RCAP2H   = dat / 256;
80788F F5CB              MOV     RCAP2H,A
   70: 	RCAP2L   = dat % 256;
807891 852DCA            MOV     RCAP2L,dat+01H
   71: 
   72: //	S0STAT   = 0x20;
   73: 	ES       = 1;
807894 D2AC              SETB    ES0
   74: 	#ifdef _DEBUG_TRACE
   75: 	ES = 0;
   76: 	#endif
   77: 	TI       = 1;
807896 D299              SETB    TI_0
   78: 
   79: 	ZhkSerialTxdEmpty = 1;
807898 D231              SETB    ZhkSerialTxdEmpty
   80: 	ZhkSerialTxBufWr  = 0;
80789A E4                CLR     A
80789B 902A5A            MOV     DPTR,#ZhkSerialTxBufWr
80789E F0                MOVX    @DPTR,A
80789F A3                INC     DPTR
8078A0 F0                MOVX    @DPTR,A
   81: 	ZhkSerialTxBufRd  = 0;
8078A1 902A56            MOV     DPTR,#ZhkSerialTxBufRd
8078A4 F0                MOVX    @DPTR,A
8078A5 A3                INC     DPTR
8078A6 F0                MOVX    @DPTR,A
   82: 	ZhkSerialRxBufWr  = 0;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 250


8078A7 A3                INC     DPTR
8078A8 F0                MOVX    @DPTR,A
8078A9 A3                INC     DPTR
8078AA F0                MOVX    @DPTR,A
   83: 	ZhkSerialRxBufRd  = 0;
8078AB 902A54            MOV     DPTR,#ZhkSerialRxBufRd
8078AE F0                MOVX    @DPTR,A
8078AF A3                INC     DPTR
8078B0 F0                MOVX    @DPTR,A
   84: 	return 1;
8078B1 7F01              MOV     R7,#01H
   85: 	
   86: }
8078B3         ?C0003?SERIAL:
8078B3 A522              ERET    
----- FUNCTION ZhkSerialInit (END) -------


----- FUNCTION _ZhkSerialPutCh (BEGIN) -----
 FILE: 'serial.c'
   88: uchar ZhkSerialPutCh( uchar ch )
   89: {
;---- Variable 'ch' assigned to Register 'R7' ----
   90: 
   91: 	uint data i;
   92: 	bit data veri;
   93: 	for( i = 0 ; i < 2000 ; i ++ )	if( ZhkSerialTxdEmpty )
8078B5 E4                CLR     A
8078B6 F530              MOV     i,A
8078B8 F531              MOV     i+01H,A
8078BA         ?C0006?SERIAL:
8078BA 303121            JNB     ZhkSerialTxdEmpty,?C0008?SERIAL
   94: 	{ 
   95: 		ZhkSerialTxdEmpty = 0;
8078BD C231              CLR     ZhkSerialTxdEmpty
   96: 		ACC   = ch;
8078BF EF                MOV     A,R7
   97: 		veri  = P;
8078C0 A2D0              MOV     C,P
8078C2 921C              MOV     veri,C
   98: 		if ( ZhkVerifyBit == VERIFY_ODD  ) veri = ! veri;
8078C4 900004            MOV     DPTR,#ZhkSerialParam+01H
8078C7 E4                CLR     A
8078C8 93                MOVC    A,@A+DPTR
8078C9 FE                MOV     R6,A
8078CA B40102            CJNE    A,#01H,?C0010?SERIAL
8078CD B21C              CPL     veri
8078CF         ?C0010?SERIAL:
   99: 		if ( ZhkVerifyBit == VERIFY_NULL ) veri = 1;
8078CF EE                MOV     A,R6
8078D0 7002              JNZ     ?C0011?SERIAL
8078D2 D21C              SETB    veri
8078D4         ?C0011?SERIAL:
  100: 		TB8 = veri;
8078D4 A21C              MOV     C,veri
8078D6 929B              MOV     TB8_0,C
  101: 	 	SBUF = ch;
8078D8 8F99              MOV     SBUF,R7
  102: 		return 0;
8078DA 7F00              MOV     R7,#00H
8078DC 8012              SJMP    ?C0012?SERIAL
  103: 	}
8078DE         ?C0008?SERIAL:
8078DE 0531              INC     i+01H
8078E0 E531              MOV     A,i+01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 251


8078E2 7002              JNZ     ?C0031?SERIAL
8078E4 0530              INC     i
8078E6         ?C0031?SERIAL:
8078E6 B4D0D1            CJNE    A,#0D0H,?C0006?SERIAL
8078E9 E530              MOV     A,i
8078EB B407CC            CJNE    A,#07H,?C0006?SERIAL
8078EE         ?C0007?SERIAL:
  104: 	return 1 ;
8078EE 7F01              MOV     R7,#01H
  105: 
  106: }
8078F0         ?C0012?SERIAL:
8078F0 A522              ERET    
----- FUNCTION _ZhkSerialPutCh (END) -------


----- FUNCTION ZhkSerial_Isr (BEGIN) -----
 FILE: 'serial.c'
  150: void ZhkSerial_Isr( void ) interrupt 4 using 1 
8078F2 C0E0              PUSH    ACC
8078F4 C0F0              PUSH    B
8078F6 C083              PUSH    DPH
8078F8 C082              PUSH    DPL
8078FA C0D0              PUSH    PSW
8078FC 75D008            MOV     PSW,#08H
  151: {
  152: 	bit data veri;
  153: 	ZhkSaveChipSelect();
8078FF C090              PUSH    P1
  154: 	ZhkHardSramSelect();
807901 759008            MOV     P1,#08H
  155: 	if ( TI )
807904 30993D            JNB     TI_0,?C0023?SERIAL
  156: 	{
  157: 		TI = 0;
807907 C299              CLR     TI_0
  158: 		if ( /*! ZhkHardIsCTS() || */ZhkSerialIsTxBufNull() )
807909 A5128136AB        ECALL   ZhkSerialIsTxBufNull
80790E EF                MOV     A,R7
80790F 6004              JZ      ?C0024?SERIAL
  159: 		{
  160: 			ZhkSerialTxdEmpty = 1;
807911 D231              SETB    ZhkSerialTxdEmpty
  161: 		}
807913 802F              SJMP    ?C0023?SERIAL
807915         ?C0024?SERIAL:
  162: 		else
  163: 		{
  164: 			SBUF = ZhkSerialTxBuf[ ZhkSerialTxBufRd ++ ];
807915 902A56            MOV     DPTR,#ZhkSerialTxBufRd
807918 E4                CLR     A
807919 75F001            MOV     B,#01H
80791C A512800617        ECALL   ?C?ILDIX
807921 FE                MOV     R6,A
807922 74D4              MOV     A,#LOW ZhkSerialTxBuf
807924 25F0              ADD     A,B
807926 F582              MOV     DPL,A
807928 7428              MOV     A,#HIGH ZhkSerialTxBuf
80792A 3E                ADDC    A,R6
80792B F583              MOV     DPH,A
80792D E0                MOVX    A,@DPTR
80792E F599              MOV     SBUF,A
  165: 			if ( ZhkVerifyBit == VERIFY_ODD  ) veri = ! veri;
807930 900004            MOV     DPTR,#ZhkSerialParam+01H
807933 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 252


807934 93                MOVC    A,@A+DPTR
807935 FF                MOV     R7,A
807936 B40102            CJNE    A,#01H,?C0026?SERIAL
807939 B225              CPL     veri
80793B         ?C0026?SERIAL:
  166: 			if ( ZhkVerifyBit == VERIFY_NULL ) veri = 1;
80793B EF                MOV     A,R7
80793C 7002              JNZ     ?C0027?SERIAL
80793E D225              SETB    veri
807940         ?C0027?SERIAL:
  167: 			TB8  = veri;	
807940 A225              MOV     C,veri
807942 929B              MOV     TB8_0,C
  168: 		}
  169: 	}
807944         ?C0023?SERIAL:
  170: 	if ( RI )
807944 309834            JNB     RI_0,?C0028?SERIAL
  171: 	{
  172: 		RI = 0;
807947 C298              CLR     RI_0
  173: 		ZhkSerialRxBuf[ ZhkSerialRxBufWr ] = SBUF;
807949 902A58            MOV     DPTR,#ZhkSerialRxBufWr
80794C E0                MOVX    A,@DPTR
80794D FE                MOV     R6,A
80794E A3                INC     DPTR
80794F E0                MOVX    A,@DPTR
807950 245C              ADD     A,#LOW ZhkSerialRxBuf
807952 F582              MOV     DPL,A
807954 742A              MOV     A,#HIGH ZhkSerialRxBuf
807956 3E                ADDC    A,R6
807957 F583              MOV     DPH,A
807959 E599              MOV     A,SBUF
80795B F0                MOVX    @DPTR,A
  174: 		
  175: 		ZhkSerialRxBufWr ++;
80795C 902A58            MOV     DPTR,#ZhkSerialRxBufWr
80795F E4                CLR     A
807960 75F001            MOV     B,#01H
807963 A512800600        ECALL   ?C?IILDX
  176: 		if ( ZhkSerialRxBufWr >= ZHKSERIALRXBUFLEN )
807968 C3                CLR     C
807969 902A59            MOV     DPTR,#ZhkSerialRxBufWr+01H
80796C E0                MOVX    A,@DPTR
80796D 9480              SUBB    A,#080H
80796F 902A58            MOV     DPTR,#ZhkSerialRxBufWr
807972 E0                MOVX    A,@DPTR
807973 9401              SUBB    A,#01H
807975 4004              JC      ?C0028?SERIAL
  177: 			ZhkSerialRxBufWr = 0;
807977 E4                CLR     A
807978 F0                MOVX    @DPTR,A
807979 A3                INC     DPTR
80797A F0                MOVX    @DPTR,A
  178: 	}
80797B         ?C0028?SERIAL:
  179: 	ZhkLoadChipSelect();
80797B D090              POP     P1
  180: }
80797D D0D0              POP     PSW
80797F D082              POP     DPL
807981 D083              POP     DPH
807983 D0F0              POP     B
807985 D0E0              POP     ACC
807987 32                RETI    
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 253


----- FUNCTION ZhkSerial_Isr (END) -------


----- FUNCTION ZhkBusSerialInit (BEGIN) -----
 FILE: 'procotol.c'
   24: void ZhkBusSerialInit( void )
   25: {
   26: 	unsigned char data i;
   27: 	for( i = 0 ; i < sizeof( SERAIL1PARAM ) ; i ++ )
807988 E4                CLR     A
807989 F52B              MOV     i,A
80798B         ?C0001?PROCOTOL:
   28: 		ZhkSerial1Param[ i ] = ZhkBusSerialParam[ i ];
80798B E52B              MOV     A,i
80798D 9018F6            MOV     DPTR,#ZhkBusSerialParam
807990 93                MOVC    A,@A+DPTR
807991 FF                MOV     R7,A
807992 745C              MOV     A,#LOW ZhkSerial1Param
807994 252B              ADD     A,i
807996 F582              MOV     DPL,A
807998 E4                CLR     A
807999 342D              ADDC    A,#HIGH ZhkSerial1Param
80799B F583              MOV     DPH,A
80799D EF                MOV     A,R7
80799E F0                MOVX    @DPTR,A
80799F 052B              INC     i
8079A1 E52B              MOV     A,i
8079A3 B406E5            CJNE    A,#06H,?C0001?PROCOTOL
8079A6         ?C0002?PROCOTOL:
   29: 	ZhkSerial1Init();
8079A6 A512813822        ECALL   ZhkSerial1Init
   30: 	memset( DownMsgBuf, 0, sizeof( DownMsgBuf ) );
8079AB 7E00              MOV     R6,#00H
8079AD 7F40              MOV     R7,#040H
8079AF 7D00              MOV     R5,#00H
8079B1 7B00              MOV     R3,#?C?XDATASEG
8079B3 7A2D              MOV     R2,#HIGH DownMsgBuf
8079B5 7962              MOV     R1,#LOW DownMsgBuf
8079B7 A5028008A6        EJMP    ?C?MEMSET
----- FUNCTION ZhkBusSerialInit (END) -------


----- FUNCTION _ZhkMobileSmsPack (BEGIN) -----
 FILE: 'mobile.c'
 1247: 	uint ZhkMobileSmsPack( struct SHORTMSG xdata* Msg, uchar xdata* DataBuf )
 1248: 	{
8079BC 901946            MOV     DPTR,#Msg
8079BF EE                MOV     A,R6
8079C0 F0                MOVX    @DPTR,A
8079C1 A3                INC     DPTR
8079C2 EF                MOV     A,R7
8079C3 F0                MOVX    @DPTR,A
8079C4 A3                INC     DPTR
8079C5 EC                MOV     A,R4
8079C6 F0                MOVX    @DPTR,A
8079C7 A3                INC     DPTR
8079C8 ED                MOV     A,R5
8079C9 F0                MOVX    @DPTR,A
 1249: 		uchar code HexStr[] = "0123456789ABCDEF";
 1250: 		uint data len;
 1251: 		uint data i;
 1252: 		uchar xdata TempBuf[ 384 ];
 1253: 		len = 0;
8079CA E4                CLR     A
8079CB F52E              MOV     len,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 254


8079CD F52F              MOV     len+01H,A
 1254: 			
 1255: 		memset( TempBuf, 0, sizeof( TempBuf ) );
8079CF 7E01              MOV     R6,#01H
8079D1 7F80              MOV     R7,#080H
8079D3 FD                MOV     R5,A
8079D4 7B00              MOV     R3,#?C?XDATASEG
8079D6 7A19              MOV     R2,#HIGH TempBuf
8079D8 794A              MOV     R1,#LOW TempBuf
8079DA A5128008A6        ECALL   ?C?MEMSET
 1256: 	
 1257: 		// 使用缺省短信中心号码
 1258: 		TempBuf[ len ++ ] = 00;
8079DF 052F              INC     len+01H
8079E1 E52F              MOV     A,len+01H
8079E3 AE2E              MOV     R6,len
8079E5 7002              JNZ     ?C0314?MOBILE
8079E7 052E              INC     len
8079E9         ?C0314?MOBILE:
8079E9 14                DEC     A
8079EA 244A              ADD     A,#LOW TempBuf
8079EC F582              MOV     DPL,A
8079EE 7419              MOV     A,#HIGH TempBuf
8079F0 3E                ADDC    A,R6
8079F1 F583              MOV     DPH,A
8079F3 E4                CLR     A
8079F4 F0                MOVX    @DPTR,A
 1259: 		
 1260: 		// PDU类型,
 1261: 		TempBuf[ len ++ ] = 0x11;
8079F5 052F              INC     len+01H
8079F7 E52F              MOV     A,len+01H
8079F9 AE2E              MOV     R6,len
8079FB 7002              JNZ     ?C0315?MOBILE
8079FD 052E              INC     len
8079FF         ?C0315?MOBILE:
8079FF 14                DEC     A
807A00 244A              ADD     A,#LOW TempBuf
807A02 F582              MOV     DPL,A
807A04 7419              MOV     A,#HIGH TempBuf
807A06 3E                ADDC    A,R6
807A07 F583              MOV     DPH,A
807A09 7411              MOV     A,#011H
807A0B F0                MOVX    @DPTR,A
 1262: 		
 1263: 		// MR
 1264: 		TempBuf[ len ++ ] = 0x00;
807A0C 052F              INC     len+01H
807A0E E52F              MOV     A,len+01H
807A10 AE2E              MOV     R6,len
807A12 7002              JNZ     ?C0316?MOBILE
807A14 052E              INC     len
807A16         ?C0316?MOBILE:
807A16 14                DEC     A
807A17 244A              ADD     A,#LOW TempBuf
807A19 F582              MOV     DPL,A
807A1B 7419              MOV     A,#HIGH TempBuf
807A1D 3E                ADDC    A,R6
807A1E F583              MOV     DPH,A
807A20 E4                CLR     A
807A21 F0                MOVX    @DPTR,A
 1265: 		
 1266: 		
 1267: 		// 对方手机号码	
 1268: 		//取对方手机号码长度		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 255


 1269: 		for( i = 0 ; i < sizeof( Msg->phone ) ; i ++ )	
807A22 F530              MOV     i,A
807A24 F531              MOV     i+01H,A
807A26         ?C0258?MOBILE:
 1270: 		{
 1271: 			if ( Msg->phone[ i ] == 0xff )
807A26 901946            MOV     DPTR,#Msg
807A29 E0                MOVX    A,@DPTR
807A2A FC                MOV     R4,A
807A2B A3                INC     DPTR
807A2C E0                MOVX    A,@DPTR
807A2D FD                MOV     R5,A
807A2E 2531              ADD     A,i+01H
807A30 F582              MOV     DPL,A
807A32 EC                MOV     A,R4
807A33 3530              ADDC    A,i
807A35 F583              MOV     DPH,A
807A37 E0                MOVX    A,@DPTR
807A38 F4                CPL     A
807A39 7048              JNZ     ?C0260?MOBILE
 1272: 			{
 1273: 				if ( ( Msg->phone[ i - 1 ] & 0x0F ) == 0x0F ) 				
807A3B E531              MOV     A,i+01H
807A3D 24FF              ADD     A,#0FFH
807A3F FF                MOV     R7,A
807A40 E530              MOV     A,i
807A42 34FF              ADDC    A,#0FFH
807A44 FE                MOV     R6,A
807A45 ED                MOV     A,R5
807A46 2F                ADD     A,R7
807A47 F582              MOV     DPL,A
807A49 EC                MOV     A,R4
807A4A 3E                ADDC    A,R6
807A4B F583              MOV     DPH,A
807A4D E0                MOVX    A,@DPTR
807A4E 540F              ANL     A,#0FH
807A50 FF                MOV     R7,A
807A51 BF0F12            CJNE    R7,#0FH,?C0262?MOBILE
 1274: 				{
 1275: 					TempBuf[ len++ ] = i*2 - 1;					
807A54 E531              MOV     A,i+01H
807A56 25E0              ADD     A,ACC
807A58 14                DEC     A
807A59 FF                MOV     R7,A
807A5A 052F              INC     len+01H
807A5C E52F              MOV     A,len+01H
807A5E AC2E              MOV     R4,len
807A60 7002              JNZ     ?C0317?MOBILE
807A62 052E              INC     len
807A64         ?C0317?MOBILE:
 1276: 					break;
807A64 800F              SJMP    ?C0368?MOBILE
 1277: 				}
807A66         ?C0262?MOBILE:
 1278: 				else
 1279: 				{
 1280: 					TempBuf[ len++ ] = i*2;
807A66 E531              MOV     A,i+01H
807A68 25E0              ADD     A,ACC
807A6A FF                MOV     R7,A
807A6B 052F              INC     len+01H
807A6D E52F              MOV     A,len+01H
807A6F AC2E              MOV     R4,len
807A71 7002              JNZ     ?C0318?MOBILE
807A73 052E              INC     len
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 256


807A75         ?C0318?MOBILE:
807A75         
807A75 14                DEC     A
807A76 244A              ADD     A,#LOW TempBuf
807A78 F582              MOV     DPL,A
807A7A 7419              MOV     A,#HIGH TempBuf
807A7C 3C                ADDC    A,R4
807A7D F583              MOV     DPH,A
807A7F EF                MOV     A,R7
807A80 F0                MOVX    @DPTR,A
 1281: 					break;
807A81 800E              SJMP    ?C0259?MOBILE
 1282: 				}
 1283: 			}
 1284: 		}	
807A83         ?C0260?MOBILE:
807A83 0531              INC     i+01H
807A85 E531              MOV     A,i+01H
807A87 7002              JNZ     ?C0319?MOBILE
807A89 0530              INC     i
807A8B         ?C0319?MOBILE:
807A8B 6410              XRL     A,#010H
807A8D 4530              ORL     A,i
807A8F 7095              JNZ     ?C0258?MOBILE
807A91         ?C0259?MOBILE:
 1285: 	
 1286: 		TempBuf[ len ++ ] = 0x91;	// 0x81本地手机,0x91国标的
807A91 052F              INC     len+01H
807A93 E52F              MOV     A,len+01H
807A95 AE2E              MOV     R6,len
807A97 7002              JNZ     ?C0320?MOBILE
807A99 052E              INC     len
807A9B         ?C0320?MOBILE:
807A9B 14                DEC     A
807A9C 244A              ADD     A,#LOW TempBuf
807A9E F582              MOV     DPL,A
807AA0 7419              MOV     A,#HIGH TempBuf
807AA2 3E                ADDC    A,R6
807AA3 F583              MOV     DPH,A
807AA5 7491              MOV     A,#091H
807AA7 F0                MOVX    @DPTR,A
 1287: 	//	TempBuf[ len ++ ] = 0x68;	// 本地手机
 1288: 		for( i = 0 ; i < sizeof(Msg->phone ) ; i ++ )
807AA8 E4                CLR     A
807AA9 F530              MOV     i,A
807AAB F531              MOV     i+01H,A
807AAD         ?C0264?MOBILE:
 1289: 		{
 1290: 			if ( Msg->phone[ i ] == 0xFF ) 
807AAD 901946            MOV     DPTR,#Msg
807AB0 E0                MOVX    A,@DPTR
807AB1 FC                MOV     R4,A
807AB2 A3                INC     DPTR
807AB3 E0                MOVX    A,@DPTR
807AB4 FD                MOV     R5,A
807AB5 2531              ADD     A,i+01H
807AB7 F582              MOV     DPL,A
807AB9 EC                MOV     A,R4
807ABA 3530              ADDC    A,i
807ABC F583              MOV     DPH,A
807ABE E0                MOVX    A,@DPTR
807ABF F4                CPL     A
807AC0 603A              JZ      ?C0265?MOBILE
 1291: 				break;
807AC2         ?C0267?MOBILE:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 257


 1292: 			TempBuf[ len ++ ] = Msg->phone[ i ] / 16 + Msg->phone[ i ] * 16;
807AC2 ED                MOV     A,R5
807AC3 2531              ADD     A,i+01H
807AC5 F582              MOV     DPL,A
807AC7 EC                MOV     A,R4
807AC8 3530              ADDC    A,i
807ACA F583              MOV     DPH,A
807ACC E0                MOVX    A,@DPTR
807ACD FF                MOV     R7,A
807ACE C4                SWAP    A
807ACF 540F              ANL     A,#0FH
807AD1 FE                MOV     R6,A
807AD2 EF                MOV     A,R7
807AD3 C4                SWAP    A
807AD4 54F0              ANL     A,#0F0H
807AD6 2E                ADD     A,R6
807AD7 FF                MOV     R7,A
807AD8 052F              INC     len+01H
807ADA E52F              MOV     A,len+01H
807ADC AC2E              MOV     R4,len
807ADE 7002              JNZ     ?C0321?MOBILE
807AE0 052E              INC     len
807AE2         ?C0321?MOBILE:
807AE2 14                DEC     A
807AE3 244A              ADD     A,#LOW TempBuf
807AE5 F582              MOV     DPL,A
807AE7 7419              MOV     A,#HIGH TempBuf
807AE9 3C                ADDC    A,R4
807AEA F583              MOV     DPH,A
807AEC EF                MOV     A,R7
807AED F0                MOVX    @DPTR,A
 1293: 		}
807AEE 0531              INC     i+01H
807AF0 E531              MOV     A,i+01H
807AF2 7002              JNZ     ?C0322?MOBILE
807AF4 0530              INC     i
807AF6         ?C0322?MOBILE:
807AF6 6410              XRL     A,#010H
807AF8 4530              ORL     A,i
807AFA 70B1              JNZ     ?C0264?MOBILE
807AFC         ?C0265?MOBILE:
 1294: 		
 1295: 		// PID
 1296: 		TempBuf[ len ++ ] = 0x00;
807AFC 052F              INC     len+01H
807AFE E52F              MOV     A,len+01H
807B00 AE2E              MOV     R6,len
807B02 7002              JNZ     ?C0323?MOBILE
807B04 052E              INC     len
807B06         ?C0323?MOBILE:
807B06 14                DEC     A
807B07 244A              ADD     A,#LOW TempBuf
807B09 F582              MOV     DPL,A
807B0B 7419              MOV     A,#HIGH TempBuf
807B0D 3E                ADDC    A,R6
807B0E F583              MOV     DPH,A
807B10 E4                CLR     A
807B11 F0                MOVX    @DPTR,A
 1297: 		
 1298: 		// DCS 编码类型为7位GSM编码(0x00),0x04为8位编号,0x18为USC2编码（即16位编码）
 1299: 	#ifdef SMSENCODE_7_BIT
 1300: 		TempBuf[ len ++ ] = 0x00;
807B12 052F              INC     len+01H
807B14 E52F              MOV     A,len+01H
807B16 AE2E              MOV     R6,len
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 258


807B18 7002              JNZ     ?C0324?MOBILE
807B1A 052E              INC     len
807B1C         ?C0324?MOBILE:
807B1C 14                DEC     A
807B1D 244A              ADD     A,#LOW TempBuf
807B1F F582              MOV     DPL,A
807B21 7419              MOV     A,#HIGH TempBuf
807B23 3E                ADDC    A,R6
807B24 F583              MOV     DPH,A
807B26 E4                CLR     A
807B27 F0                MOVX    @DPTR,A
 1301: 	#else
 1302: 		TempBuf[ len ++ ] = 0x08;
 1303: 	#endif
 1304: 		
 1305: 		// VP = 63weeks,有效期为5分钟
 1306: 		TempBuf[ len ++ ] = 0x00;
807B28 052F              INC     len+01H
807B2A E52F              MOV     A,len+01H
807B2C AE2E              MOV     R6,len
807B2E 7002              JNZ     ?C0325?MOBILE
807B30 052E              INC     len
807B32         ?C0325?MOBILE:
807B32 14                DEC     A
807B33 244A              ADD     A,#LOW TempBuf
807B35 F582              MOV     DPL,A
807B37 7419              MOV     A,#HIGH TempBuf
807B39 3E                ADDC    A,R6
807B3A F583              MOV     DPH,A
807B3C E4                CLR     A
807B3D F0                MOVX    @DPTR,A
 1307: 
 1308: 	#ifdef SMSENCODE_7_BIT
 1309: 		//7位编码方式
 1310: 		TempBuf[ len ++ ] = Msg->len;
807B3E 901946            MOV     DPTR,#Msg
807B41 E0                MOVX    A,@DPTR
807B42 FC                MOV     R4,A
807B43 A3                INC     DPTR
807B44 E0                MOVX    A,@DPTR
807B45 FD                MOV     R5,A
807B46 2410              ADD     A,#010H
807B48 F582              MOV     DPL,A
807B4A E4                CLR     A
807B4B 3C                ADDC    A,R4
807B4C F583              MOV     DPH,A
807B4E A3                INC     DPTR
807B4F E0                MOVX    A,@DPTR
807B50 FF                MOV     R7,A
807B51 052F              INC     len+01H
807B53 E52F              MOV     A,len+01H
807B55 AA2E              MOV     R2,len
807B57 7002              JNZ     ?C0326?MOBILE
807B59 052E              INC     len
807B5B         ?C0326?MOBILE:
807B5B 14                DEC     A
807B5C 244A              ADD     A,#LOW TempBuf
807B5E F582              MOV     DPL,A
807B60 7419              MOV     A,#HIGH TempBuf
807B62 3A                ADDC    A,R2
807B63 F583              MOV     DPH,A
807B65 EF                MOV     A,R7
807B66 F0                MOVX    @DPTR,A
 1311: 		len += ZhkMessageToGSM( TempBuf + len, Msg->msg, Msg->len );
807B67 744A              MOV     A,#LOW TempBuf
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 259


807B69 252F              ADD     A,len+01H
807B6B F582              MOV     DPL,A
807B6D 7419              MOV     A,#HIGH TempBuf
807B6F 352E              ADDC    A,len
807B71 AF82              MOV     R7,DPL
807B73 FE                MOV     R6,A
807B74 ED                MOV     A,R5
807B75 2412              ADD     A,#012H
807B77 FD                MOV     R5,A
807B78 E4                CLR     A
807B79 3C                ADDC    A,R4
807B7A FC                MOV     R4,A
807B7B 901946            MOV     DPTR,#Msg
807B7E E0                MOVX    A,@DPTR
807B7F FA                MOV     R2,A
807B80 A3                INC     DPTR
807B81 E0                MOVX    A,@DPTR
807B82 2410              ADD     A,#010H
807B84 F582              MOV     DPL,A
807B86 E4                CLR     A
807B87 3A                ADDC    A,R2
807B88 F583              MOV     DPH,A
807B8A E0                MOVX    A,@DPTR
807B8B FA                MOV     R2,A
807B8C A3                INC     DPTR
807B8D E0                MOVX    A,@DPTR
807B8E FB                MOV     R3,A
807B8F A512814BC3        ECALL   _ZhkMessageToGSM
807B94 EF                MOV     A,R7
807B95 252F              ADD     A,len+01H
807B97 F52F              MOV     len+01H,A
807B99 EE                MOV     A,R6
807B9A 352E              ADDC    A,len
807B9C F52E              MOV     len,A
 1312: 	#else
 1313: 		//USC2编码方式 
 1314: 		TempBuf[ len ++ ] = Msg->len * 2;
 1315: 		for( i = 0; i < Msg->len; i ++ )
 1316: 		{
 1317: 			TempBuf[ len + i ] = 0x00;
 1318: 			len++;
 1319: 			TempBuf[ len + i ] = Msg->msg[i];
 1320: 		}	
 1321: 		len += Msg->len;
 1322: 	#endif		
 1323: 		for( i = 0 ; i < len ; i ++ )
807B9E E4                CLR     A
807B9F F530              MOV     i,A
807BA1 F531              MOV     i+01H,A
807BA3         ?C0268?MOBILE:
807BA3 C3                CLR     C
807BA4 E531              MOV     A,i+01H
807BA6 952F              SUBB    A,len+01H
807BA8 E530              MOV     A,i
807BAA 952E              SUBB    A,len
807BAC 5067              JNC     ?C0269?MOBILE
 1324: 		{			
 1325: 			DataBuf[ 2 * i + 0 ] = HexStr[ TempBuf[ i ] / 16 ];
807BAE 744A              MOV     A,#LOW TempBuf
807BB0 2531              ADD     A,i+01H
807BB2 F582              MOV     DPL,A
807BB4 7419              MOV     A,#HIGH TempBuf
807BB6 3530              ADDC    A,i
807BB8 F583              MOV     DPH,A
807BBA E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 260


807BBB C4                SWAP    A
807BBC 540F              ANL     A,#0FH
807BBE 901739            MOV     DPTR,#HexStr
807BC1 93                MOVC    A,@A+DPTR
807BC2 FD                MOV     R5,A
807BC3 E531              MOV     A,i+01H
807BC5 25E0              ADD     A,ACC
807BC7 FF                MOV     R7,A
807BC8 E530              MOV     A,i
807BCA 33                RLC     A
807BCB FE                MOV     R6,A
807BCC 901948            MOV     DPTR,#DataBuf
807BCF E0                MOVX    A,@DPTR
807BD0 FA                MOV     R2,A
807BD1 A3                INC     DPTR
807BD2 E0                MOVX    A,@DPTR
807BD3 FB                MOV     R3,A
807BD4 2F                ADD     A,R7
807BD5 F582              MOV     DPL,A
807BD7 EA                MOV     A,R2
807BD8 3E                ADDC    A,R6
807BD9 F583              MOV     DPH,A
807BDB ED                MOV     A,R5
807BDC F0                MOVX    @DPTR,A
 1326: 			DataBuf[ 2 * i + 1 ] = HexStr[ TempBuf[ i ] % 16 ];				
807BDD 744A              MOV     A,#LOW TempBuf
807BDF 2531              ADD     A,i+01H
807BE1 F582              MOV     DPL,A
807BE3 7419              MOV     A,#HIGH TempBuf
807BE5 3530              ADDC    A,i
807BE7 F583              MOV     DPH,A
807BE9 E0                MOVX    A,@DPTR
807BEA 540F              ANL     A,#0FH
807BEC 901739            MOV     DPTR,#HexStr
807BEF 93                MOVC    A,@A+DPTR
807BF0 FD                MOV     R5,A
807BF1 E531              MOV     A,i+01H
807BF3 25E0              ADD     A,ACC
807BF5 FF                MOV     R7,A
807BF6 E530              MOV     A,i
807BF8 33                RLC     A
807BF9 FE                MOV     R6,A
807BFA EF                MOV     A,R7
807BFB 2401              ADD     A,#01H
807BFD FF                MOV     R7,A
807BFE E4                CLR     A
807BFF 3E                ADDC    A,R6
807C00 FE                MOV     R6,A
807C01 EB                MOV     A,R3
807C02 2F                ADD     A,R7
807C03 F582              MOV     DPL,A
807C05 EA                MOV     A,R2
807C06 3E                ADDC    A,R6
807C07 F583              MOV     DPH,A
807C09 ED                MOV     A,R5
807C0A F0                MOVX    @DPTR,A
 1327: 		}	
807C0B 0531              INC     i+01H
807C0D E531              MOV     A,i+01H
807C0F 7002              JNZ     ?C0327?MOBILE
807C11 0530              INC     i
807C13         ?C0327?MOBILE:
807C13 808E              SJMP    ?C0268?MOBILE
807C15         ?C0269?MOBILE:
 1328: 		i *= 2;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 261


807C15 E531              MOV     A,i+01H
807C17 25E0              ADD     A,ACC
807C19 F531              MOV     i+01H,A
807C1B E530              MOV     A,i
807C1D 33                RLC     A
807C1E F530              MOV     i,A
 1329: 		DataBuf[ i ++ ] = 0x1A;
807C20 901948            MOV     DPTR,#DataBuf
807C23 E0                MOVX    A,@DPTR
807C24 FE                MOV     R6,A
807C25 A3                INC     DPTR
807C26 E0                MOVX    A,@DPTR
807C27 FF                MOV     R7,A
807C28 F582              MOV     DPL,A
807C2A 8E83              MOV     DPH,R6
807C2C 0531              INC     i+01H
807C2E E531              MOV     A,i+01H
807C30 AC30              MOV     R4,i
807C32 7002              JNZ     ?C0328?MOBILE
807C34 0530              INC     i
807C36         ?C0328?MOBILE:
807C36 14                DEC     A
807C37 FD                MOV     R5,A
807C38 E582              MOV     A,DPL
807C3A 2D                ADD     A,R5
807C3B F582              MOV     DPL,A
807C3D E583              MOV     A,DPH
807C3F 3C                ADDC    A,R4
807C40 F583              MOV     DPH,A
807C42 741A              MOV     A,#01AH
807C44 F0                MOVX    @DPTR,A
 1330: 		DataBuf[ i ++ ] = '\0';
807C45 8F82              MOV     DPL,R7
807C47 8E83              MOV     DPH,R6
807C49 0531              INC     i+01H
807C4B E531              MOV     A,i+01H
807C4D AE30              MOV     R6,i
807C4F 7002              JNZ     ?C0329?MOBILE
807C51 0530              INC     i
807C53         ?C0329?MOBILE:
807C53 14                DEC     A
807C54 FF                MOV     R7,A
807C55 E582              MOV     A,DPL
807C57 2F                ADD     A,R7
807C58 F582              MOV     DPL,A
807C5A E583              MOV     A,DPH
807C5C 3E                ADDC    A,R6
807C5D F583              MOV     DPH,A
807C5F E4                CLR     A
807C60 F0                MOVX    @DPTR,A
 1331: 		return len - 1;
807C61 E52F              MOV     A,len+01H
807C63 24FF              ADD     A,#0FFH
807C65 FF                MOV     R7,A
807C66 E52E              MOV     A,len
807C68 34FF              ADDC    A,#0FFH
807C6A FE                MOV     R6,A
 1332: 	}
807C6B         ?C0271?MOBILE:
807C6B A522              ERET    
----- FUNCTION _ZhkMobileSmsPack (END) -------


----- FUNCTION _CheckHardWare (BEGIN) -----
 FILE: 'mainflow.c'
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 262


  129: u_char CheckHardWare( u_char i)
  130: {
807C6D 9015A1            MOV     DPTR,#i
807C70 EF                MOV     A,R7
807C71 F0                MOVX    @DPTR,A
  131: 	u_char xdata j = 0;
  132: //#ifndef _DEBUG_TRACE
807C72 E4                CLR     A
807C73 A3                INC     DPTR
807C74 F0                MOVX    @DPTR,A
  133: //#ifdef _HAVE_CASHER	
  134: //	Trace( "\n CheckHardWare i= %bu", i );
  135: 	if( SystemParameter.BillNo == 1 )
807C75 900427            MOV     DPTR,#SystemParameter+07H
807C78 E0                MOVX    A,@DPTR
807C79 6401              XRL     A,#01H
807C7B 6003              JZ      $ + 5H
807C7D 027D0B            LJMP    ?C0001?MAINFLOW
  136: 	{
  137: 		if( i == 3 )
807C80 9015A1            MOV     DPTR,#i
807C83 E0                MOVX    A,@DPTR
807C84 6403              XRL     A,#03H
807C86 7025              JNZ     ?C0002?MAINFLOW
  138: 		{	
  139: 			if( HardWareErr & 0x0001)			
807C88 900485            MOV     DPTR,#HardWareErr+01H
807C8B E0                MOVX    A,@DPTR
807C8C 30E004            JNB     ACC.0,?C0003?MAINFLOW
  140: 				GetDeviceStatus( 0  );//取纸币器状态		
807C8F E4                CLR     A
807C90 FF                MOV     R7,A
807C91 8039              SJMP    ?C1035?MAINFLOW
807C93         ?C0003?MAINFLOW:
  141: 			else if( HardWareErr & 0x0004 )
807C93 900485            MOV     DPTR,#HardWareErr+01H
807C96 E0                MOVX    A,@DPTR
807C97 30E237            JNB     ACC.2,?C0006?MAINFLOW
  142: 			{
  143: 				GetDeviceStatus( 2  );//#1退币器测试				
807C9A A51280845B        ECALL   ?L?COM0026
  144: 				GetDeviceStatus( 3  );//#2退币器测试		
  145: 				GetDeviceStatus( 4  );//#3退币器测试
807C9F 7F04              MOV     R7,#04H
807CA1 A512808464        ECALL   _GetDeviceStatus
  146: 				i = 0;
807CA6 E4                CLR     A
807CA7 9015A1            MOV     DPTR,#i
807CAA F0                MOVX    @DPTR,A
  147: 			}	
  148: 		}
807CAB 8024              SJMP    ?C0006?MAINFLOW
807CAD         ?C0002?MAINFLOW:
  149: 		else
  150: 		{
  151: 			if( i == 0 )
807CAD 9015A1            MOV     DPTR,#i
807CB0 E0                MOVX    A,@DPTR
807CB1 7002              JNZ     ?C0007?MAINFLOW
  152: 				GetDeviceStatus( 0  );//取纸币器状态
807CB3 8004              SJMP    ?C1036?MAINFLOW
807CB5         ?C0007?MAINFLOW:
  153: 			else if( IsCanInCashFlag == 1 /*HopperSetList[0].HopperState == 1*/ )
807CB5 302607            JNB     IsCanInCashFlag,?C0008?MAINFLOW
  154: 				GetDeviceStatus( 0  );//取纸币器状态
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 263


807CB8 E4                CLR     A
807CB9         
807CB9 FF                MOV     R7,A
807CBA A512808464        ECALL   _GetDeviceStatus
807CBF         ?C0008?MAINFLOW:
  155: 			if ( i == 0 )
807CBF 9015A1            MOV     DPTR,#i
807CC2 E0                MOVX    A,@DPTR
807CC3 700C              JNZ     ?C0006?MAINFLOW
  156: 			{
  157: 				GetDeviceStatus( 2  );//#1退币器测试
807CC5 A51280845B        ECALL   ?L?COM0026
  158: 				GetDeviceStatus( 3  );//#2退币器测试
  159: 				GetDeviceStatus( 4  );//#3退币器测试
807CCA 7F04              MOV     R7,#04H
807CCC         
807CCC A512808464        ECALL   _GetDeviceStatus
  160: 			}
  161: 		}
807CD1         ?C0006?MAINFLOW:
  162: 		if( ( DeviceStatus.BillAccepter != 0 ) && ( DeviceStatus.CoinAccepter != 0 ) )
807CD1 900B1B            MOV     DPTR,#DeviceStatus
807CD4 E0                MOVX    A,@DPTR
807CD5 FD                MOV     R5,A
807CD6 600D              JZ      ?C0011?MAINFLOW
807CD8 A3                INC     DPTR
807CD9 E0                MOVX    A,@DPTR
807CDA 6009              JZ      ?C0011?MAINFLOW
  163: 		//	HardWareErr = ERR_BILL_COIN;				
  164: 			HardWareErr |= 0x0001;
807CDC 900485            MOV     DPTR,#HardWareErr+01H
807CDF E0                MOVX    A,@DPTR
807CE0 4401              ORL     A,#01H
807CE2 F0                MOVX    @DPTR,A
807CE3 8061              SJMP    ?C0018?MAINFLOW
807CE5         ?C0011?MAINFLOW:
  165: 		else if( ( ( DeviceStatus.BillAccepter != 0 ) || ( IsCanInCashFlag == 0 ) ) && ( DeviceStatus.CoinAccepter != 0
>>  ) )
807CE5 ED                MOV     A,R5
807CE6 7003              JNZ     ?C0014?MAINFLOW
807CE8 202608            JB      IsCanInCashFlag,?C0013?MAINFLOW
807CEB         ?C0014?MAINFLOW:
807CEB 900B1C            MOV     DPTR,#DeviceStatus+01H
807CEE E0                MOVX    A,@DPTR
807CEF 6002              JZ      ?C0013?MAINFLOW
  166: 		{
  167: 			//HardWareErr = ERR_COIN;				
  168: 			HardWareErr |= 0x0002;
  169: 		}
807CF1 8040              SJMP    ?C1037?MAINFLOW
807CF3         ?C0013?MAINFLOW:
  170: 		else if( ( DeviceStatus.CoinAccepter == 0 ) || ( ( DeviceStatus.BillAccepter == 0 ) && ( IsCanInCashFlag == 1 )
>>  ) )
807CF3 900B1C            MOV     DPTR,#DeviceStatus+01H
807CF6 E0                MOVX    A,@DPTR
807CF7 6009              JZ      ?C0017?MAINFLOW
807CF9 900B1B            MOV     DPTR,#DeviceStatus
807CFC E0                MOVX    A,@DPTR
807CFD 7047              JNZ     ?C0018?MAINFLOW
807CFF 302644            JNB     IsCanInCashFlag,?C0018?MAINFLOW
807D02         ?C0017?MAINFLOW:
  171: 			HardWareErr = 0;	
807D02 E4                CLR     A
807D03 900484            MOV     DPTR,#HardWareErr
807D06 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 264


807D07 A3                INC     DPTR
807D08 F0                MOVX    @DPTR,A
  172: 	}
807D09 803B              SJMP    ?C0018?MAINFLOW
807D0B         ?C0001?MAINFLOW:
  173: 	else
  174: 	{
  175: 		if( i == 3 )
807D0B 9015A1            MOV     DPTR,#i
807D0E E0                MOVX    A,@DPTR
807D0F B40309            CJNE    A,#03H,?C0019?MAINFLOW
  176: 		{				
  177: //			if( HardWareErr & 0x0002 )
  178: //				GetDeviceStatus( 1  );//取硬币器状态
  179: 			//else if( HardWareErr == ERR_HOPPER )
  180: 			if( HardWareErr & 0x0004 )
807D12 900485            MOV     DPTR,#HardWareErr+01H
807D15 E0                MOVX    A,@DPTR
807D16 30E214            JNB     ACC.2,?C0021?MAINFLOW
  181: 			{
  182: 				GetDeviceStatus( 2  );//#1退币器测试				
  183: 				GetDeviceStatus( 3  );//#2退币器测试		
  184: 				GetDeviceStatus( 4  );//#3退币器测试
  185: 			}	
  186: 		}
807D19 8006              SJMP    ?C1038?MAINFLOW
807D1B         ?C0019?MAINFLOW:
  187: 		else
  188: 		{		
  189: //			GetDeviceStatus( 1  );//取硬币器状态
  190: 			if ( i == 0 )
807D1B 9015A1            MOV     DPTR,#i
807D1E E0                MOVX    A,@DPTR
807D1F 700C              JNZ     ?C0021?MAINFLOW
  191: 			{
  192: 				GetDeviceStatus( 2  );//#1退币器测试
807D21         
807D21 A51280845B        ECALL   ?L?COM0026
  193: 				GetDeviceStatus( 3  );//#2退币器测试
  194: 				GetDeviceStatus( 4  );//#3退币器测试
807D26 7F04              MOV     R7,#04H
807D28 A512808464        ECALL   _GetDeviceStatus
  195: 			}
  196: 		}				
807D2D         ?C0021?MAINFLOW:
  197: 	
  198: 		if( DeviceStatus.CoinAccepter != 0 )
807D2D 900B1C            MOV     DPTR,#DeviceStatus+01H
807D30 E0                MOVX    A,@DPTR
807D31 6009              JZ      ?C0023?MAINFLOW
  199: 		//	HardWareErr = ERR_COIN;	
  200: 			HardWareErr |= 0x0002;
807D33         
807D33 900485            MOV     DPTR,#HardWareErr+01H
807D36 E0                MOVX    A,@DPTR
807D37 4402              ORL     A,#02H
807D39 F0                MOVX    @DPTR,A
807D3A 800A              SJMP    ?C0018?MAINFLOW
807D3C         ?C0023?MAINFLOW:
  201: 		 else
  202: 		 {		 	
  203: 			//	HardWareErr = 0;	
  204: 			if( HardWareErr & 0x0002 )			
807D3C 900485            MOV     DPTR,#HardWareErr+01H
807D3F E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 265


807D40 30E103            JNB     ACC.1,?C0018?MAINFLOW
  205: 				HardWareErr &= ( 0xffff - 0x00002 );		
807D43 54FD              ANL     A,#0FDH
807D45 F0                MOVX    @DPTR,A
  206: 		 }
  207: //		 Trace( "\n CheckHardWare HardWareErr2= %bu", HardWareErr );
  208: 	}
807D46         ?C0018?MAINFLOW:
  209: 	if ( i == 0 )
807D46 9015A1            MOV     DPTR,#i
807D49 E0                MOVX    A,@DPTR
807D4A 6003              JZ      $ + 5H
807D4C 027E27            LJMP    ?C0026?MAINFLOW
  210: 	{			
  211: 		for( i = 0; i < 3; i ++ )
807D4F F0                MOVX    @DPTR,A
807D50         ?C0027?MAINFLOW:
807D50 9015A1            MOV     DPTR,#i
807D53 E0                MOVX    A,@DPTR
807D54 FF                MOV     R7,A
807D55 C3                CLR     C
807D56 9403              SUBB    A,#03H
807D58 4003              JC      $ + 5H
807D5A 027DDC            LJMP    ?C0028?MAINFLOW
  212: 		{
  213: 			switch( HopperSetList[i].HopperIndex )
807D5D EF                MOV     A,R7
807D5E 25E0              ADD     A,ACC
807D60 25E0              ADD     A,ACC
807D62 24E6              ADD     A,#LOW HopperSetList+02H
807D64 F582              MOV     DPL,A
807D66 E4                CLR     A
807D67 340A              ADDC    A,#HIGH HopperSetList+02H
807D69 F583              MOV     DPH,A
807D6B E0                MOVX    A,@DPTR
807D6C 24FE              ADD     A,#0FEH
807D6E 601B              JZ      ?C0035?MAINFLOW
807D70 14                DEC     A
807D71 602C              JZ      ?C0039?MAINFLOW
807D73 2402              ADD     A,#02H
807D75 705C              JNZ     ?C0029?MAINFLOW
  214: 			{
  215: 				case 1:
807D77         ?C0031?MAINFLOW:
  216: 					if( DeviceStatus.ChangeUnit1 == 2 )
807D77 900B1D            MOV     DPTR,#DeviceStatus+02H
807D7A E0                MOVX    A,@DPTR
807D7B FF                MOV     R7,A
807D7C 6402              XRL     A,#02H
807D7E 6053              JZ      ?C0029?MAINFLOW
  217: 						continue;	//break;
807D80         ?C0032?MAINFLOW:
  218: 					if( DeviceStatus.ChangeUnit1 == 1 )
807D80 EF                MOV     A,R7
807D81 9015A1            MOV     DPTR,#i
807D84 B40102            CJNE    A,#01H,?C0033?MAINFLOW
  219: 						HopperSetList[i].HopperState = 2;
807D87 8026              SJMP    ?C1041?MAINFLOW
807D89         ?C0033?MAINFLOW:
  220: 					else
  221: 						HopperSetList[i].HopperState = 1;
  222: 				break;
807D89 8037              SJMP    ?C1042?MAINFLOW
  223: 				case 2:
807D8B         ?C0035?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 266


  224: 					if( DeviceStatus.ChangeUnit2 == 2 )
807D8B 900B1E            MOV     DPTR,#DeviceStatus+03H
807D8E E0                MOVX    A,@DPTR
807D8F FF                MOV     R7,A
807D90 6402              XRL     A,#02H
807D92 603F              JZ      ?C0029?MAINFLOW
  225: 						continue;	//break;
807D94         ?C0036?MAINFLOW:
  226: 					if( DeviceStatus.ChangeUnit2 == 1 )
807D94 EF                MOV     A,R7
807D95 9015A1            MOV     DPTR,#i
807D98 B40102            CJNE    A,#01H,?C0037?MAINFLOW
  227: 						HopperSetList[i].HopperState = 2;
807D9B         
807D9B 8012              SJMP    ?C1041?MAINFLOW
807D9D         ?C0037?MAINFLOW:
  228: 					else
  229: 						HopperSetList[i].HopperState = 1;
807D9D         
  230: 				break;
807D9D 8023              SJMP    ?C1042?MAINFLOW
  231: 				case 3:
807D9F         ?C0039?MAINFLOW:
  232: 					if( DeviceStatus.ChangeUnit3 == 2 )
807D9F 900B1F            MOV     DPTR,#DeviceStatus+04H
807DA2 E0                MOVX    A,@DPTR
807DA3 FF                MOV     R7,A
807DA4 6402              XRL     A,#02H
807DA6 602B              JZ      ?C0029?MAINFLOW
  233: 						continue;	//break;
807DA8         ?C0040?MAINFLOW:
  234: 					if( DeviceStatus.ChangeUnit3 == 1 )
807DA8 EF                MOV     A,R7
807DA9 9015A1            MOV     DPTR,#i
807DAC B40113            CJNE    A,#01H,?C0041?MAINFLOW
  235: 						HopperSetList[i].HopperState = 2;
807DAF         
807DAF E0                MOVX    A,@DPTR
807DB0 25E0              ADD     A,ACC
807DB2 25E0              ADD     A,ACC
807DB4 24E7              ADD     A,#LOW HopperSetList+03H
807DB6 F582              MOV     DPL,A
807DB8 E4                CLR     A
807DB9 340A              ADDC    A,#HIGH HopperSetList+03H
807DBB F583              MOV     DPH,A
807DBD 7402              MOV     A,#02H
807DBF F0                MOVX    @DPTR,A
807DC0 8011              SJMP    ?C0029?MAINFLOW
807DC2         ?C0041?MAINFLOW:
  236: 					else
  237: 						HopperSetList[i].HopperState = 1;
807DC2         
807DC2 E0                MOVX    A,@DPTR
807DC3 25E0              ADD     A,ACC
807DC5 25E0              ADD     A,ACC
807DC7 24E7              ADD     A,#LOW HopperSetList+03H
807DC9 F582              MOV     DPL,A
807DCB E4                CLR     A
807DCC 340A              ADDC    A,#HIGH HopperSetList+03H
807DCE F583              MOV     DPH,A
807DD0 7401              MOV     A,#01H
807DD2 F0                MOVX    @DPTR,A
  238: 				break;
  239: 				default:
  240: 					continue;	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 267


  241: 			}
  242: 		}
807DD3         ?C0029?MAINFLOW:
807DD3 9015A1            MOV     DPTR,#i
807DD6 E0                MOVX    A,@DPTR
807DD7 04                INC     A
807DD8 F0                MOVX    @DPTR,A
807DD9 027D50            LJMP    ?C0027?MAINFLOW
807DDC         ?C0028?MAINFLOW:
  243: 		for( j = 0; j < 3; j ++ )
807DDC E4                CLR     A
807DDD 9015A2            MOV     DPTR,#j
807DE0 F0                MOVX    @DPTR,A
807DE1         ?C0044?MAINFLOW:
807DE1 9015A2            MOV     DPTR,#j
807DE4 E0                MOVX    A,@DPTR
807DE5 FF                MOV     R7,A
807DE6 C3                CLR     C
807DE7 9403              SUBB    A,#03H
807DE9 501D              JNC     ?C0045?MAINFLOW
  244: 		{
  245: 			if( HopperSetList[j].price == 0 )
807DEB EF                MOV     A,R7
807DEC 25E0              ADD     A,ACC
807DEE 25E0              ADD     A,ACC
807DF0 24E4              ADD     A,#LOW HopperSetList
807DF2 F582              MOV     DPL,A
807DF4 E4                CLR     A
807DF5 340A              ADDC    A,#HIGH HopperSetList
807DF7 F583              MOV     DPH,A
807DF9 E0                MOVX    A,@DPTR
807DFA FE                MOV     R6,A
807DFB A3                INC     DPTR
807DFC E0                MOVX    A,@DPTR
807DFD 4E                ORL     A,R6
807DFE 6008              JZ      ?C0045?MAINFLOW
  246: 				break;
  247: 		}
807E00         ?C0046?MAINFLOW:
807E00 9015A2            MOV     DPTR,#j
807E03 E0                MOVX    A,@DPTR
807E04 04                INC     A
807E05 F0                MOVX    @DPTR,A
807E06 80D9              SJMP    ?C0044?MAINFLOW
807E08         ?C0045?MAINFLOW:
  248: 		if( ( j > 0 ) && ( HopperSetList[j - 1].HopperState != 1 ) )		
807E08 9015A2            MOV     DPTR,#j
807E0B E0                MOVX    A,@DPTR
807E0C FF                MOV     R7,A
807E0D D3                SETB    C
807E0E 9400              SUBB    A,#00H
807E10 4015              JC      ?C0026?MAINFLOW
807E12 EF                MOV     A,R7
807E13 25E0              ADD     A,ACC
807E15 25E0              ADD     A,ACC
807E17 24E3              ADD     A,#LOW HopperSetList-01H
807E19 F582              MOV     DPL,A
807E1B E4                CLR     A
807E1C 340A              ADDC    A,#HIGH HopperSetList-01H
807E1E F583              MOV     DPH,A
807E20 E0                MOVX    A,@DPTR
807E21 6401              XRL     A,#01H
807E23 6002              JZ      ?C0026?MAINFLOW
  249: 			IsCanInCashFlag = 0;
807E25 C226              CLR     IsCanInCashFlag
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 268


  250: 	}
807E27         ?C0026?MAINFLOW:
  251: //	Trace( "\n CheckHardWare HardWareErr = %bu", HardWareErr );	
  252: //#endif
  253: 	return( 0 );
807E27 7F00              MOV     R7,#00H
  254: }
807E29         ?C0049?MAINFLOW:
807E29 A522              ERET    
----- FUNCTION _CheckHardWare (END) -------


----- FUNCTION _ZhkChannelSwitch (BEGIN) -----
 FILE: 'scheduler.c'
 1884: void ZhkChannelSwitch( uchar type )
 1885: {
;---- Variable 'type' assigned to Register 'R7' ----
 1886: 	//Trace( "ZhkChannelSwitch(%bd)\n" , type );
 1887: 	ES1R = 0;
807E2B C2E8              CLR     ES1R
 1888: 	switch( type )
807E2D EF                MOV     A,R7
807E2E 24FE              ADD     A,#0FEH
807E30 602F              JZ      ?C0316?SCHEDULER
807E32 14                DEC     A
807E33 603C              JZ      ?C0317?SCHEDULER
807E35 24FB              ADD     A,#0FBH
807E37 6018              JZ      ?C0315?SCHEDULER
807E39 24FB              ADD     A,#0FBH
807E3B 6044              JZ      ?C0320?SCHEDULER
807E3D 2406              ADD     A,#06H
807E3F 705A              JNZ     ?C0313?SCHEDULER
 1889: 	{
 1890: 	case EQUIP_LCD:	
807E41         ?C0314?SCHEDULER:
 1891: 	//	ZhkHardSerialSwitch( 3 );
 1892: 		ZhkBusSerialInit();
807E41 A512807988        ECALL   ZhkBusSerialInit
 1893: 		DelayMs( 2 );
807E46 7F02              MOV     R7,#02H
807E48 A512807EAB        ECALL   _DelayMs
 1894: 		ZhkHardSerialSwitch( 2 );
807E4D 7F02              MOV     R7,#02H
 1895: 		DelayMs( 2 );
 1896: 		break;
807E4F 803E              SJMP    ?C0355?SCHEDULER
 1897: 	case EQUIP_HOPPER:
807E51         ?C0315?SCHEDULER:
 1898: //	case EQUIP_HUB:	
 1899: //		ZhkHardSerialSwitch( 3 );
 1900: 		ZhkBusSerialInit();
807E51 A512807988        ECALL   ZhkBusSerialInit
 1901: 		DelayMs( 2 );
807E56 7F02              MOV     R7,#02H
807E58 A512807EAB        ECALL   _DelayMs
 1902: 		ZhkHardSerialSwitch( 4 );
807E5D 7F04              MOV     R7,#04H
807E5F         
 1903: 		DelayMs( 2 );
 1904: 		break;
807E5F 802E              SJMP    ?C0355?SCHEDULER
 1905: 	case EQUIP_CASHER:	
807E61         ?C0316?SCHEDULER:
 1906: 	//	ZhkHardSerialSwitch( 3 );
 1907: 		ZhkCasherSerialInit();
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 269


807E61 A51280774D        ECALL   ZhkCasherSerialInit
 1908: 		DelayMs( 2 );
807E66 7F02              MOV     R7,#02H
807E68 A512807EAB        ECALL   _DelayMs
 1909: 		ZhkHardSerialSwitch( 0 );
807E6D E4                CLR     A
807E6E FF                MOV     R7,A
807E6F         
 1910: 		DelayMs( 2 );
 1911: 		break;
807E6F 801E              SJMP    ?C0355?SCHEDULER
 1912: 	case EQUIP_COINER:
807E71         ?C0317?SCHEDULER:
 1913: 		ZhkBusSerialInit();
807E71 A512807988        ECALL   ZhkBusSerialInit
 1914: 		DelayMs( 2 );
807E76 7F02              MOV     R7,#02H
807E78 A512807EAB        ECALL   _DelayMs
 1915: //		ZhkHardSerialSwitch( 6 );//HUB板上J8口
 1916: 		ZhkHardSerialSwitch( 1 );
807E7D 7F01              MOV     R7,#01H
807E7F         
 1917: 		DelayMs( 2 );		
 1918: 		break;	
807E7F 800E              SJMP    ?C0355?SCHEDULER
 1919: 	case EQUIP_POWER:
 1920: 	case EQUIP_MODE:
 1921: 		break;
 1922: 	case EQUIP_CHANNEL:	//主板扩展口
807E81         ?C0320?SCHEDULER:
 1923: //		ZhkHardSerialSwitch( 0 );
 1924: 		ZhkBusSerialInit();
807E81 A512807988        ECALL   ZhkBusSerialInit
 1925: 		DelayMs( 2 );
807E86 7F02              MOV     R7,#02H
807E88 A512807EAB        ECALL   _DelayMs
 1926: 		ZhkHardSerialSwitch( 3 );
807E8D 7F03              MOV     R7,#03H
807E8F         
807E8F A51281378B        ECALL   _ZhkHardSerialSwitch
 1927: 		DelayMs( 2 );
807E94 7F02              MOV     R7,#02H
807E96 A512807EAB        ECALL   _DelayMs
 1928: 		break;		
 1929: 	}
807E9B         ?C0313?SCHEDULER:
 1930: 	ES1R = 1;
807E9B D2E8              SETB    ES1R
 1931: }
807E9D A522              ERET    
----- FUNCTION _ZhkChannelSwitch (END) -------


----- FUNCTION ?L?COM0018 (BEGIN) -----
807E9F 759008            MOV     P1,#08H
807EA2         ?L?COM0019:
807EA2 7FFA              MOV     R7,#0FAH
807EA4 A512807EAB        ECALL   _DelayMs
807EA9 7FFA              MOV     R7,#0FAH
----- FUNCTION _DelayMs (BEGIN) -----
 FILE: 'common.c'
   13: void DelayMs( uchar MicroSecond )
   14: {
;---- Variable 'iCycle' assigned to Register 'R6' ----
;---- Variable 'MicroSecond' assigned to Register 'R7' ----
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 270


   15: 	uchar xdata iCycle;
   16: 
   17: 	MicroSecond ++;
807EAB 0F                INC     R7
807EAC         ?C0004?COMMON:
   18: 	while( -- MicroSecond )
807EAC 1F                DEC     R7
807EAD EF                MOV     A,R7
807EAE 600C              JZ      ?C0010?COMMON
   19: 	{
   20: 		iCycle = 224;
807EB0 7EE0              MOV     R6,#0E0H
807EB2         ?C0006?COMMON:
   21: 		while( iCycle ) 
   22: 			iCycle --;
807EB2 DEFE              DJNZ    R6,?C0006?COMMON
807EB4         ?C0007?COMMON:
   23: 
   24: 		iCycle = 224;
807EB4 7EE0              MOV     R6,#0E0H
807EB6         ?C0008?COMMON:
   25: 		while( iCycle ) 
807EB6 EE                MOV     A,R6
807EB7 60F3              JZ      ?C0004?COMMON
   26: 			iCycle --;		 
807EB9 1E                DEC     R6
807EBA 80FA              SJMP    ?C0008?COMMON
   27: 	}
   28: }
807EBC         ?C0010?COMMON:
807EBC A522              ERET    
----- FUNCTION _DelayMs (END) -------


----- FUNCTION ZhkIOInit (BEGIN) -----
 FILE: 'IOInput.c'
  268: 	void ZhkIOInit( void )
  269: 	{	
  270: 		ZhkHardPowerOff();
  271: 		ZhkHardBuzzerOff();
807EBE A51281380A        ECALL   ZhkHardPowerOff
  272: 		ZhkHardStatusOn();
807EC3 A51280FD88        ECALL   ZhkHardBuzzerOff
  273: 		ZhkHardCoinerEnable();
807EC8 A5128137DA        ECALL   ZhkHardStatusOn
  274: 		ZhkHardSramSelect();
807ECD A5128137C2        ECALL   ZhkHardCoinerEnable
  275: 	
807ED2 A512807E9F        ECALL   ?L?COM0018
  276: 		DelayMs( 250 );
  277: 		DelayMs( 250 );
  278: 	//	DelayMs( 250 );
  279: 	//	DelayMs( 250 );
  280: 		ZhkHardPowerOn();
807ED7 A5128137F2        ECALL   ZhkHardPowerOn
  281: 		ZhkHardSramSelect();
807EDC A512807E9F        ECALL   ?L?COM0018
  282: 		DelayMs( 250 );
  283: 		DelayMs( 250 );
  284: 		DelayMs( 250 );
807EE1 A512807EA2        ECALL   ?L?COM0019
  285: 		DelayMs( 250 );
  286: 	//	ZhkCoiner.State = 0;
  287: 		ZhkCoiner.Count = 0;
807EE6 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 271


807EE7 902DD9            MOV     DPTR,#ZhkCoiner+01H
807EEA F0                MOVX    @DPTR,A
  288: 		ZhkCoiner.CountChn1 = 0;
807EEB A3                INC     DPTR
807EEC F0                MOVX    @DPTR,A
  289: 		ZhkCoiner.CountChn2 = 0;
807EED A3                INC     DPTR
807EEE F0                MOVX    @DPTR,A
  290: 		ZhkCoiner.CountChn3 = 0;
807EEF A3                INC     DPTR
807EF0 F0                MOVX    @DPTR,A
  291: 		ZhkCoiner.CountChn4 = 0;
807EF1 A3                INC     DPTR
807EF2 F0                MOVX    @DPTR,A
  292: 		ZhkCoiner.CountChn5 = 0;
807EF3 A3                INC     DPTR
807EF4 F0                MOVX    @DPTR,A
  293: 		ZhkCoiner.CountChn6 = 0;
807EF5 A3                INC     DPTR
807EF6 F0                MOVX    @DPTR,A
  294: 		///硬币器通道面值
  295: 		memset( &CoinSet, 0, sizeof(struct COINAPCCEPTOR));
807EF7 FE                MOV     R6,A
807EF8 7F0E              MOV     R7,#0EH
807EFA FD                MOV     R5,A
807EFB 7B00              MOV     R3,#?C?XDATASEG
807EFD 7A2D              MOV     R2,#HIGH CoinSet
807EFF 79E0              MOV     R1,#LOW CoinSet
807F01 A5128008A6        ECALL   ?C?MEMSET
  296: 		ZhkModeState    = 0;
807F06 E4                CLR     A
807F07 902DEE            MOV     DPTR,#ZhkModeState
807F0A F0                MOVX    @DPTR,A
  297: 		ZhkPowerState   = 0;
807F0B A3                INC     DPTR
807F0C F0                MOVX    @DPTR,A
  298: 		ZhkBuzzerTimer  = 0;
807F0D F518              MOV     ZhkBuzzerTimer,A
  299: 	}
807F0F A522              ERET    
----- FUNCTION ZhkIOInit (END) -------


----- FUNCTION ZhkInit (BEGIN) -----
 FILE: 'initialization.c'
   14: uchar ZhkInit( void )
   15: {
   16: 	ZhkHardSramSelect();
   17: 	ZhkIOInit();
807F11 759008            MOV     P1,#08H
   18: 	ZhkTimerInit();
807F14 A512807EBE        ECALL   ZhkIOInit
   19: //	SstFlashSelfCheck();
807F19 A51280F934        ECALL   ZhkTimerInit
   20: 	ClockInit();
807F1E A512807F53        ECALL   ClockInit
   21: 	ZhkSerialInit();
807F23 A5128077D2        ECALL   ZhkSerialInit
   22: 	ZhkSerial1Init();
807F28 A512813822        ECALL   ZhkSerial1Init
   23: 	EA = 1;
807F2D D2AF              SETB    EA
   24: 	SchedulerInit();	
807F2F A51280FE8E        ECALL   SchedulerInit
   25: 	KeyboardInit();
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 272


807F34 A512807F64        ECALL   KeyboardInit
   26: 	KeyUnLock();
807F39 A512807F45        ECALL   KeyUnLock
   27: 	ZhkHardSramSelect();
807F3E 759008            MOV     P1,#08H
   28: 	return 0;
807F41 7F00              MOV     R7,#00H
   29: }
807F43         ?C0001?INITIALIZATION:
807F43 A522              ERET    
----- FUNCTION ZhkInit (END) -------


----- FUNCTION KeyUnLock (BEGIN) -----
 FILE: 'key.c'
   49: bit KeyUnLock( void )
   50: {
   51: 	ZhkKeyPermission = 1;
   52: 	KeyboardInit();
807F45 902DF4            MOV     DPTR,#ZhkKeyPermission
807F48 7401              MOV     A,#01H
807F4A F0                MOVX    @DPTR,A
   53: 	return 1;
807F4B A512807F64        ECALL   KeyboardInit
   54: }
807F50 D3                SETB    C
   55: uchar GetKey( void )
807F51         ?C0003?KEY:
807F51 A522              ERET    
----- FUNCTION KeyUnLock (END) -------


----- FUNCTION ClockInit (BEGIN) -----
 FILE: 'clock.c'
    6: bit ClockInit( void )			small
    7: {
    8: 	bit c;
    9: 	ZhkHardDs12887Select();	
807F53 75900B            MOV     P1,#0BH
   10: 	c = Ds12887Init();
807F56 A512813757        ECALL   Ds12887Init
807F5B 9217              MOV     c,C
   11: 	ZhkHardSramSelect();
807F5D 759008            MOV     P1,#08H
   12: 	return c;
807F60 A217              MOV     C,c
   13: }
807F62         ?C0001?CLOCK:
807F62 A522              ERET    
----- FUNCTION ClockInit (END) -------


----- FUNCTION KeyboardInit (BEGIN) -----
 FILE: 'key.c'
   37: void KeyboardInit( void )
   38: {
   39: 	//uchar data i;
   40: 	memset( ZhkKeyBuf , KEY_NULL , sizeof( ZhkKeyBuf ));
807F64 7E00              MOV     R6,#00H
807F66 7F01              MOV     R7,#01H
807F68 7DFF              MOV     R5,#0FFH
807F6A 7B00              MOV     R3,#?C?XDATASEG
807F6C 7A2D              MOV     R2,#HIGH ZhkKeyBuf
807F6E 79F6              MOV     R1,#LOW ZhkKeyBuf
807F70 A5128008A6        ECALL   ?C?MEMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 273


   41: 	ZhkKeyPermission = 1;
807F75 902DF4            MOV     DPTR,#ZhkKeyPermission
807F78 7401              MOV     A,#01H
807F7A F0                MOVX    @DPTR,A
   42: 	ZhkKeyBufPtr = 0;
807F7B E4                CLR     A
807F7C A3                INC     DPTR
807F7D F0                MOVX    @DPTR,A
   43: }
807F7E A522              ERET    
----- FUNCTION KeyboardInit (END) -------


----- FUNCTION SellCodeOver (BEGIN) -----
 FILE: 'mainflow.c'
 3531: u_char SellCodeOver()
 3532: {	
 3533: 	KeyLock( );		
 3534: 	SaveTradeParam();
807F80 A512807FAD        ECALL   KeyLock
 3535: 	CasherGetMachineState( 0 );//空闲状态
807F85 A51280DB42        ECALL   SaveTradeParam
 3536: 	CasherResetOuttime();
807F8A E4                CLR     A
807F8B FF                MOV     R7,A
807F8C A512807FA6        ECALL   _CasherGetMachineState
 3537: 	CheckHardWare( 1 );		
807F91 A5128130BD        ECALL   CasherResetOuttime
 3538: 	KeyUnLock( );
807F96 7F01              MOV     R7,#01H
807F98 A512807C6D        ECALL   _CheckHardWare
 3539: //	ChangeOver(); 
807F9D A512807F45        ECALL   KeyUnLock
 3540: /////////////////////////
 3541: //	LoadGlobalParam();
 3542: ///////////////////////////
 3543: 	return( 1 );
807FA2 7F01              MOV     R7,#01H
 3544: }
807FA4         ?C0764?MAINFLOW:
807FA4 A522              ERET    
----- FUNCTION SellCodeOver (END) -------


----- FUNCTION _CasherGetMachineState (BEGIN) -----
 FILE: 'scheduler.c'
 1396: void CasherGetMachineState( uchar state )
 1397: {
;---- Variable 'state' assigned to Register 'R7' ----
 1398: 	Casher.ExtState[ 15 ] = state;
 1399: }
807FA6 9023E7            MOV     DPTR,#Casher+013H
807FA9 EF                MOV     A,R7
807FAA F0                MOVX    @DPTR,A
 1400: 
807FAB A522              ERET    
----- FUNCTION _CasherGetMachineState (END) -------


----- FUNCTION KeyLock (BEGIN) -----
 FILE: 'key.c'
   44: bit KeyLock( void )
   45: {
   46: 	ZhkKeyPermission = 0;
   47: 	return 1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 274


807FAD E4                CLR     A
807FAE 902DF4            MOV     DPTR,#ZhkKeyPermission
807FB1 F0                MOVX    @DPTR,A
   48: }
807FB2 D3                SETB    C
   49: bit KeyUnLock( void )
807FB3         ?C0002?KEY:
807FB3 A522              ERET    
----- FUNCTION KeyLock (END) -------


----- FUNCTION SetOffFlag (BEGIN) -----
 FILE: 'mainflow.c'
  319: u_char SetOffFlag()
  320: {
  321: ///	Trace( "\n SetOffFlag");
  322: 	SystemStatus = 2; /* 标志设为OUT_OF_SERVICES状态 */
807FB5 9001C6            MOV     DPTR,#SystemStatus
807FB8 7402              MOV     A,#02H
807FBA F0                MOVX    @DPTR,A
  323: 	DisableBillDev();	
807FBB A5128095A4        ECALL   DisableBillDev
  324: 	KeyLock();
807FC0 A512807FAD        ECALL   KeyLock
  325: 	return 1;
807FC5 7F01              MOV     R7,#01H
  326: }
807FC7         ?C0067?MAINFLOW:
807FC7 A522              ERET    
----- FUNCTION SetOffFlag (END) -------


----- FUNCTION DisplayOutServer (BEGIN) -----
 FILE: 'mainflow.c'
 1563: u_char DisplayOutServer()
 1564: {	
 1565: 	SetOffFlag();
 1566:     //DispWelOrOutServ();	
807FC9 A512807FB5        ECALL   SetOffFlag
 1567: 	KeyLock(); //锁定键盘，不让客户按键
807FCE A512807FAD        ECALL   KeyLock
 1568: 	KeyLockFlag = 1;
807FD3 D229              SETB    KeyLockFlag
 1569: 	return 0;
807FD5 7F00              MOV     R7,#00H
 1570: }
807FD7         ?C0353?MAINFLOW:
807FD7 A522              ERET    
----- FUNCTION DisplayOutServer (END) -------


----- FUNCTION main (BEGIN) -----
 FILE: 'mainflow.c'
 3893: void main()
 3894: {
 3895: //	SCON  = 0x50;		        /* SCON: mode 1, 8-bit UART, enable rcvr      */
 3896: //    TMOD |= 0x20;               /* TMOD: timer 1, mode 2, 8-bit reload        */
 3897: //    TH1   = 221;                /* TH1:  reload value for 1200 baud @ 16MHz   */
 3898: //    TR1   = 1;                  /* TR1:  timer 1 run                          */
 3899: //    TI    = 1; 	
 3900: 
 3901: //	TestSysInitParam();
 3902: //	SystemParameter.MobileON = 1;
 3903: //	ScanDeviceStatus();
 3904: //	TradePack();
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 275


 3905: 
 3906: 	ZhkInit();
807FD9 A512807F11        ECALL   ZhkInit
 3907: 
 3908: #ifdef _DEBUG_TRACE
 3909: 	TraceInit();
 3910: #endif	
 3911: 	RunFlow();
807FDE A502807FE3        EJMP    RunFlow
----- FUNCTION main (END) -------


----- FUNCTION RunFlow (BEGIN) -----
 FILE: 'mainflow.c'
 3775: BEGIN_FLOW( RunFlow )
 3776: 	NODE(5)		SystemInit()
807FE3 E4                CLR     A
807FE4 F527              MOV     ret,A
 3777: 	//硬件全检,其它设备逻辑检测
807FE6         NODE_5:
807FE6         ?C0824?MAINFLOW:
807FE6 A5128082D7        ECALL   CoreProcessCycle
807FEB A512801FA4        ECALL   SystemInit
807FF0 8F27              MOV     ret,R7
 3778: 	//初始化参数、设备工作状态(如允许查询状态等等)	
 3779: 	NODE(15)	DeviceDefaultSetting()		
807FF2         NODE_15:
807FF2         ?C0827?MAINFLOW:
807FF2 A5128082D7        ECALL   CoreProcessCycle
807FF7 A51280B746        ECALL   DeviceDefaultSetting
807FFC 8F27              MOV     ret,R7
 3780: 	//显示退出服务
 3781: 	NODE(16)	DisplayOutServer()
807FFE         NODE_16:
807FFE         ?C0830?MAINFLOW:
807FFE A5128082D7        ECALL   CoreProcessCycle
808003 A512807FC9        ECALL   DisplayOutServer
808008 8F27              MOV     ret,R7
 3782: 	NODE(17)    CheckOperStatus()		R1(200)   //Added by Andy 2010.11.04 
80800A         NODE_17:
80800A         ?C0833?MAINFLOW:
80800A A51280BA8B        ECALL   ?L?COM0040
80800F 8F27              MOV     ret,R7
808011 E527              MOV     A,ret
808013 6401              XRL     A,#01H
808015 7003              JNZ     $ + 5H
808017 028289            LJMP    ?C0977?MAINFLOW
 3783: 	//初始化系统参数
 3784: 	NODE(21)	SysInitParam()
80801A         NODE_21:
80801A         ?C0838?MAINFLOW:
80801A A5128082D7        ECALL   CoreProcessCycle
80801F A512809E2B        ECALL   SysInitParam
808024 8F27              MOV     ret,R7
 3785: 	
 3786: 	//查询是否有货，全无货则为无货，无货返回1并退出服务
 3787: 	NODE(22)	CheckGoodsSumAndLoad()			R1(400)	
808026         NODE_22:
808026         ?C0841?MAINFLOW:
808026 A51280BD6C        ECALL   ?L?COM002F
80802B 8F27              MOV     ret,R7
80802D E527              MOV     A,ret
80802F 6401              XRL     A,#01H
808031 7003              JNZ     $ + 5H
808033 0282B9            LJMP    ?C0986?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 276


 3788: 
 3789: 	///IDLE
 3790: 	//return1=维护状态，　0=运行状态,运行相互变量清理工作也放在这里
 3791: 	NODE(25)	CheckOperStatus()		R1(200)		
808036         NODE_25:
808036         ?C0845?MAINFLOW:
808036         ?C0846?MAINFLOW:
808036 A51280BA8B        ECALL   ?L?COM0040
80803B 8F27              MOV     ret,R7
80803D E527              MOV     A,ret
80803F 6401              XRL     A,#01H
808041 7003              JNZ     $ + 5H
808043 028289            LJMP    ?C0977?MAINFLOW
 3792: 		//检查是否有查询命令
 3793: 	NODE(26) 	CheckQureyCmd()
808046         NODE_26:
808046         ?C0850?MAINFLOW:
808046 A5128082D7        ECALL   CoreProcessCycle
80804B A51280BB08        ECALL   CheckQureyCmd
808050 8F27              MOV     ret,R7
 3794: 	//判断是否有短信需要发送
 3795: 	NODE(27) 	CycleSendSMS()	
808052         NODE_27:
808052         ?C0853?MAINFLOW:
808052 A5128082D7        ECALL   CoreProcessCycle
808057 A51280BCFD        ECALL   CycleSendSMS
80805C 8F27              MOV     ret,R7
 3796: 	//查检是否有按键,有数字键输入，返回1,否则返回2
 3797: 	NODE(28)	CheckKeyPress()		R1(42)  R2(30)	
80805E         NODE_28:
80805E         ?C0856?MAINFLOW:
80805E A51280BE70        ECALL   ?L?COM003F
808063 8F27              MOV     ret,R7
808065 E527              MOV     A,ret
808067 6401              XRL     A,#01H
808069 6041              JZ      ?C0879?MAINFLOW
80806B         ?C0857?MAINFLOW:
 3798: 	//查询硬件状态值,硬件包括键盘、液晶屏，无故障返回0,有故障返回1并退出服务
 3799: 	NODE(30)	CheckHardwareState()			R1(400)	
80806B         NODE_30:
80806B         ?C0862?MAINFLOW:
80806B A5128082D7        ECALL   CoreProcessCycle
808070 A51280BABD        ECALL   CheckHardwareState
808075 8F27              MOV     ret,R7
808077 E527              MOV     A,ret
808079 6401              XRL     A,#01H
80807B 7003              JNZ     $ + 5H
80807D 0282B9            LJMP    ?C0986?MAINFLOW
 3800: 	//确定找零器中的硬币是否足
 3801: //	NODE(36) 	CheckCoinRemain()		R1(400)
 3802: 	//查询是否有货，全无货则为无货，无货返回1并退出服务
 3803: //	NODE(40)	CheckGoodsSumAndLoad()			R1(400)	
 3804: 
 3805: 	//使能收币器
 3806: 	NODE(35)	EnableBillDev()	
808080         NODE_35:
808080         ?C0866?MAINFLOW:
808080 A5128082D7        ECALL   CoreProcessCycle
808085 A51280962E        ECALL   EnableBillDev
80808A 8F27              MOV     ret,R7
 3807: 	//查检是否有币插入,有返回1,无返回0
 3808: 	NODE(36)	IsInsertBill()			R1(47)			
80808C         NODE_36:
80808C         ?C0869?MAINFLOW:
80808C A512809192        ECALL   ?L?COM003E
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 277


808091 8F27              MOV     ret,R7
808093 E527              MOV     A,ret
808095 6401              XRL     A,#01H
808097 6058              JZ      ?C0894?MAINFLOW
 3809: 
 3810: 	//查检是否有按键,有数字键输入，返回1,否则返回2
 3811: 	NODE(41)	CheckKeyPress()		R1(42)  R2(45)	
808099         NODE_41:
808099         ?C0874?MAINFLOW:
808099 A51280BE70        ECALL   ?L?COM003F
80809E 8F27              MOV     ret,R7
8080A0 E527              MOV     A,ret
8080A2 6401              XRL     A,#01H
8080A4 6006              JZ      ?C0879?MAINFLOW
8080A6         ?C0875?MAINFLOW:
8080A6 E527              MOV     A,ret
8080A8 6402              XRL     A,#02H
8080AA 601E              JZ      ?C0885?MAINFLOW
 3812: 
 3813: 	//显示输入的货道，并判断输入是否正确，是否存在此货道,输入正确返回0,输入失败返回1
 3814: 	NODE(42)	QueryDisplayInputCode()	R1(45)
8080AC         NODE_42:
8080AC         ?C0879?MAINFLOW:
8080AC A5128082D7        ECALL   CoreProcessCycle
8080B1 A51280200C        ECALL   QueryDisplayInputCode
8080B6 8F27              MOV     ret,R7
8080B8 E527              MOV     A,ret
8080BA 6401              XRL     A,#01H
8080BC 600C              JZ      ?C0885?MAINFLOW
 3815: 
 3816: 	//判断货道是否正常并显示
 3817: 	NODE(43) 	QueryIsGoodsWay()
8080BE         NODE_43:
8080BE         ?C0883?MAINFLOW:
8080BE A5128082D7        ECALL   CoreProcessCycle
8080C3 A51280BEFA        ECALL   QueryIsGoodsWay
8080C8 8F27              MOV     ret,R7
 3818: 			
 3819: 	//显示服务情况，如是进入服务则判断是否有按键，有返回0，无返回1,
 3820: 	NODE(45)	DispWelOrOutServ()		R1(25)		R2(47)
8080CA         NODE_45:
8080CA         ?C0885?MAINFLOW:
8080CA A5128082D7        ECALL   CoreProcessCycle
8080CF A512802163        ECALL   DispWelOrOutServ
8080D4 8F27              MOV     ret,R7
8080D6 E527              MOV     A,ret
8080D8 6401              XRL     A,#01H
8080DA 7003              JNZ     $ + 5H
8080DC 028036            LJMP    ?C0846?MAINFLOW
8080DF         ?C0886?MAINFLOW:
8080DF E527              MOV     A,ret
8080E1 6402              XRL     A,#02H
8080E3 600C              JZ      ?C0894?MAINFLOW
 3821: 	
 3822: 
 3823: 	///服务　
 3824: 	//查检是否有币插入,有返回1,无返回0
 3825: 	NODE(46)	IsInsertBill()			R1(47)//85
8080E5         NODE_46:
8080E5         ?C0890?MAINFLOW:
8080E5 A512809192        ECALL   ?L?COM003E
8080EA 8F27              MOV     ret,R7
8080EC E527              MOV     A,ret
8080EE B4011B            CJNE    A,#01H,?C0899?MAINFLOW
 3826: 			GOTONODE( 48 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 278


 3827: 	//收取纸币并比较和显示，
 3828: 	//当金额大于限额时返回1直接去选货，
 3829: 	//否则返回0继续等待按键或插钱
 3830: 	//第一次收钱失败时返回2
 3831: 	NODE(47)	GetBill()		R1(50)		R2(25)//90
8080F1         NODE_47:
8080F1         ?C0894?MAINFLOW:
8080F1 A5128082D7        ECALL   CoreProcessCycle
8080F6 A512801CFE        ECALL   GetBill
8080FB 8F27              MOV     ret,R7
8080FD E527              MOV     A,ret
8080FF 6401              XRL     A,#01H
808101 6024              JZ      ?C0903?MAINFLOW
808103         ?C0895?MAINFLOW:
808103 E527              MOV     A,ret
808105 6402              XRL     A,#02H
808107 7003              JNZ     $ + 5H
808109 028036            LJMP    ?C0846?MAINFLOW
 3832: 	//查检是否有数字按键,有返回0,没有但余额大于零返回1，否则返回2
 3833: 	NODE(48)	IsInputGoodsNo()		R1(46)	R2(25)//105
80810C         NODE_48:
80810C         ?C0899?MAINFLOW:
80810C A5128082D7        ECALL   CoreProcessCycle
808111 A51280C1BD        ECALL   IsInputGoodsNo
808116 8F27              MOV     ret,R7
808118 E527              MOV     A,ret
80811A 6401              XRL     A,#01H
80811C 60C7              JZ      ?C0890?MAINFLOW
80811E         ?C0900?MAINFLOW:
80811E E527              MOV     A,ret
808120 6402              XRL     A,#02H
808122 7003              JNZ     $ + 5H
808124 028036            LJMP    ?C0846?MAINFLOW
 3834: 
 3835: 	//显示输入货道编号,包括输入正确与否判断和输入超时判断，输入正确返回0，输入错误返回1
 3836: 	//输入CANNEL或输入超时返回2并退出服务
 3837: 	NODE(50)	DisplayInputCode()	R1( 50 )	R2(25 )
808127         NODE_50:
808127         ?C0902?MAINFLOW:
808127         ?C0903?MAINFLOW:
808127 A5128082D7        ECALL   CoreProcessCycle
80812C A512802363        ECALL   DisplayInputCode
808131 8F27              MOV     ret,R7
808133 E527              MOV     A,ret
808135 6401              XRL     A,#01H
808137 60EE              JZ      ?C0903?MAINFLOW
808139         ?C0904?MAINFLOW:
808139 E527              MOV     A,ret
80813B 6402              XRL     A,#02H
80813D 7003              JNZ     $ + 5H
80813F 028036            LJMP    ?C0846?MAINFLOW
 3838: 	//判断货道是否正常，正常返回0显示货物信息,不正常返回1,货道已无货返回2
 3839: 	NODE(55)	IsGoodsWay()	R1(60)		R2(50)
808142         NODE_55:
808142         ?C0908?MAINFLOW:
808142 A5128082D7        ECALL   CoreProcessCycle
808147 A512802690        ECALL   IsGoodsWay
80814C 8F27              MOV     ret,R7
80814E E527              MOV     A,ret
808150 6401              XRL     A,#01H
808152 601D              JZ      ?C0919?MAINFLOW
808154         ?C0909?MAINFLOW:
808154 E527              MOV     A,ret
808156 6402              XRL     A,#02H
808158 60CD              JZ      ?C0903?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 279


 3840: 	//判断插入金额是否够买货，够返回0,不够返回1
 3841: 	NODE(58)	IsMoneyEnough()		R1( 65 )//125
80815A         NODE_58:
80815A         ?C0914?MAINFLOW:
80815A A5128082D7        ECALL   CoreProcessCycle
80815F A51280C206        ECALL   IsMoneyEnough
808164 8F27              MOV     ret,R7
808166 E527              MOV     A,ret
808168 6401              XRL     A,#01H
80816A 6003              JZ      $ + 5H
80816C 028201            LJMP    ?C0949?MAINFLOW
80816F 8013              SJMP    ?C0923?MAINFLOW
 3842: 	//转到出货
 3843: 			GOTONODE( 125 )			
 3844: 	//显示货道故障，询问是否选其它货，选其它货返回0,不选其它货返回1，找零
 3845: 	NODE(60)	GoodsWayErr()	R1(115)
808171         ?C0919?MAINFLOW:
808171 A5128082D7        ECALL   CoreProcessCycle
808176 A51280271E        ECALL   GoodsWayErr
80817B 8F27              MOV     ret,R7
80817D E527              MOV     A,ret
80817F B401A5            CJNE    A,#01H,?C0902?MAINFLOW
808182 805D              SJMP    ?C0941?MAINFLOW
 3846: 	//户客选其它货
 3847: 			GOTONODE(50)
 3848: 	
 3849: 	 //显示金额不足,要求再插币，返回1
 3850: 	 //提示是否继续插币，确定返回1,取消或超时则返回0
 3851: 	NODE(65)	DispInputMoney()		R1( 46 )		//640	
808184         ?C0923?MAINFLOW:
808184 A5128082D7        ECALL   CoreProcessCycle
808189 A512801AA9        ECALL   DispInputMoney
80818E 8F27              MOV     ret,R7
808190 E527              MOV     A,ret
808192 6401              XRL     A,#01H
808194 7003              JNZ     $ + 5H
808196 0280E5            LJMP    ?C0890?MAINFLOW
 3852: 
 3853: 	//查找同类型更便宜的卡,找到返回0,没有找到返回1
 3854: 	NODE(100)	ExistAnyChoose()		R1(110)		R2(135)	//650
808199         NODE_100:
808199         ?C0927?MAINFLOW:
808199 A5128082D7        ECALL   CoreProcessCycle
80819E A51280C25D        ECALL   ExistAnyChoose
8081A3 8F27              MOV     ret,R7
8081A5 E527              MOV     A,ret
8081A7 6401              XRL     A,#01H
8081A9 601E              JZ      ?C0937?MAINFLOW
8081AB         ?C0928?MAINFLOW:
8081AB E527              MOV     A,ret
8081AD 6402              XRL     A,#02H
8081AF 7003              JNZ     $ + 5H
8081B1 028246            LJMP    ?C0962?MAINFLOW
 3855: 	//提示客户是否选择买其它的货，确定返回1并到50节点让用户重新输入，取消或超时返回0
 3856: 	NODE(105)	CheaperOnePlz()			R1(50)		//660
8081B4         NODE_105:
8081B4         ?C0934?MAINFLOW:
8081B4 A5128082D7        ECALL   CoreProcessCycle
8081B9 A512801A5B        ECALL   CheaperOnePlz
8081BE 8F27              MOV     ret,R7
8081C0 E527              MOV     A,ret
8081C2 6401              XRL     A,#01H
8081C4 7003              JNZ     $ + 5H
8081C6 028127            LJMP    ?C0903?MAINFLOW
 3857: 	//看系统是否允许退币，允许退币且需要退币则退并返0，不允许则返回1反复提示,不需要退币返回2	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 280


 3858: 	NODE(110)	CheckChangePermit()		R1(65)		R2( 135 )		//700	
8081C9         NODE_110:
8081C9         ?C0937?MAINFLOW:
8081C9 A5128082D7        ECALL   CoreProcessCycle
8081CE A512803F5C        ECALL   CheckChangePermit
8081D3 8F27              MOV     ret,R7
8081D5 E527              MOV     A,ret
8081D7 6401              XRL     A,#01H
8081D9 60A9              JZ      ?C0923?MAINFLOW
8081DB         ?C0938?MAINFLOW:
8081DB E527              MOV     A,ret
8081DD 6402              XRL     A,#02H
8081DF 6065              JZ      ?C0962?MAINFLOW
 3859: 	//找零，配币失败返回1,出币错误返回2,出币正确返回0	
 3860: 	NODE(115)	DispenseCoin()			R1(150)		R2(120)		//770
8081E1         NODE_115:
8081E1         ?C0941?MAINFLOW:
8081E1 A5128082D7        ECALL   CoreProcessCycle
8081E6 A512803728        ECALL   DispenseCoin
8081EB 8F27              MOV     ret,R7
8081ED E527              MOV     A,ret
8081EF 6401              XRL     A,#01H
8081F1 605F              JZ      ?C0965?MAINFLOW
8081F3         ?C0942?MAINFLOW:
 3861: 	NODE(120)	DispGetCoin()		//780
8081F3         NODE_120:
8081F3         ?C0947?MAINFLOW:
8081F3 A5128082D7        ECALL   CoreProcessCycle
8081F8 A51280C299        ECALL   DispGetCoin
8081FD 8F27              MOV     ret,R7
 3862: 			GOTONODE(150)			
8081FF 8051              SJMP    ?C0965?MAINFLOW
 3863: 	//出货,正常出货返回0,出货失败但不能找零且还有其它货道可服务则设置货道故障并返回1,出货超时返回2
 3864: 	NODE(125)	OutGoods()	R1(46)		R2(355)		//140
808201         ?C0949?MAINFLOW:
808201 A5128082D7        ECALL   CoreProcessCycle
808206 A5128028F5        ECALL   OutGoods
80820B 8F27              MOV     ret,R7
80820D E527              MOV     A,ret
80820F 6401              XRL     A,#01H
808211 7003              JNZ     $ + 5H
808213 0280E5            LJMP    ?C0890?MAINFLOW
808216         ?C0950?MAINFLOW:
808216 E527              MOV     A,ret
808218 6402              XRL     A,#02H
80821A 7003              JNZ     $ + 5H
80821C 0282A7            LJMP    ?C0983?MAINFLOW
 3865: 	//确定是否断续购买商品,返回0,不继续购买，进行找零；返回1则继续购买
 3866: 	NODE(127)   ReBuy()		R1(46)
80821F         NODE_127:
80821F         ?C0955?MAINFLOW:
80821F A5128082D7        ECALL   CoreProcessCycle
808224 A512802F74        ECALL   ReBuy
808229 8F27              MOV     ret,R7
80822B E527              MOV     A,ret
80822D 6401              XRL     A,#01H
80822F 7003              JNZ     $ + 5H
808231 0280E5            LJMP    ?C0890?MAINFLOW
 3867: 	//找零		
 3868: 	NODE(130)	ReturnChange()			R1(150)		//810	
808234         NODE_130:
808234         ?C0959?MAINFLOW:
808234 A5128082D7        ECALL   CoreProcessCycle
808239 A51280C29D        ECALL   ReturnChange
80823E 8F27              MOV     ret,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 281


808240 E527              MOV     A,ret
808242 6401              XRL     A,#01H
808244 600C              JZ      ?C0965?MAINFLOW
 3869: 	//提示用户取货和找零
 3870: 	NODE(135)	DispThx()			R1(150)		//820
808246         NODE_135:
808246         ?C0962?MAINFLOW:
808246 A5128082D7        ECALL   CoreProcessCycle
80824B A5128040A9        ECALL   DispThx
808250 8F27              MOV     ret,R7
 3871: 	//点亮出货灯,并返回1
 3872: //	NODE(140)	LightBlink()			R1(150)		//830		
 3873: 	//结束售货流程并返回1	
 3874: 	NODE(150)	SellCodeOver()					//990	
808252         NODE_150:
808252         ?C0965?MAINFLOW:
808252 A5128082D7        ECALL   CoreProcessCycle
808257 A512807F80        ECALL   SellCodeOver
80825C 8F27              MOV     ret,R7
 3875: 	//故障检查，都用标志位
 3876: 	//查询硬件状态值,如有故障,再查硬件故障看是否有清除，无返回
 3877: 	NODE(165)	TestHardWare()		R1(25)	
80825E         NODE_165:
80825E         ?C0968?MAINFLOW:
80825E A5128082D7        ECALL   CoreProcessCycle
808263 A51280C236        ECALL   TestHardWare
808268 8F27              MOV     ret,R7
80826A E527              MOV     A,ret
80826C 6401              XRL     A,#01H
80826E 7003              JNZ     $ + 5H
808270 028036            LJMP    ?C0846?MAINFLOW
 3878: 	//判断货道库存和货道状态
 3879: 	NODE(170)	CheckGoodsSumAndLoad()	
808273         NODE_170:
808273         ?C0972?MAINFLOW:
808273 A51280BD6C        ECALL   ?L?COM002F
808278 8F27              MOV     ret,R7
 3880: 	NODE(172)	ScanIsSendAlarm()
80827A         NODE_172:
80827A         ?C0975?MAINFLOW:
80827A A5128082D7        ECALL   CoreProcessCycle
80827F A51280A082        ECALL   ScanIsSendAlarm
808284 8F27              MOV     ret,R7
 3881: 			GOTONODE(25)	
808286 028036            LJMP    ?C0846?MAINFLOW
 3882: 	//维护流程
 3883: 	NODE(200)	MaintFunction()
808289         ?C0977?MAINFLOW:
808289 A5128082D7        ECALL   CoreProcessCycle
80828E A5128040E7        ECALL   MaintFunction
808293 8F27              MOV     ret,R7
 3884: 	//判断货道库存和货道状态
 3885: 	NODE(205)	CheckGoodsSumAndLoad()  R1(400)	
808295         NODE_205:
808295         ?C0980?MAINFLOW:
808295 A51280BD6C        ECALL   ?L?COM002F
80829A 8F27              MOV     ret,R7
80829C E527              MOV     A,ret
80829E 6401              XRL     A,#01H
8082A0 6003              JZ      $ + 5H
8082A2 028036            LJMP    ?C0845?MAINFLOW
8082A5 8012              SJMP    ?C0986?MAINFLOW
 3886: 			GOTONODE(25)
 3887: 	//货道故障，联系营运商，退出服务
 3888: 	NODE(355)	AllGoodsWayError()		R1(172)		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 282


8082A7         ?C0983?MAINFLOW:
8082A7 A5128082D7        ECALL   CoreProcessCycle
8082AC A5128040C8        ECALL   AllGoodsWayError
8082B1 8F27              MOV     ret,R7
8082B3 E527              MOV     A,ret
8082B5 6401              XRL     A,#01H
8082B7 60C1              JZ      ?C0975?MAINFLOW
 3889: 
 3890: 	NODE(400)	OutofService()		R1(25)				
8082B9         NODE_400:
8082B9         ?C0986?MAINFLOW:
8082B9 A5128082D7        ECALL   CoreProcessCycle
8082BE A51280425D        ECALL   OutofService
8082C3 8F27              MOV     ret,R7
8082C5 E527              MOV     A,ret
8082C7 6401              XRL     A,#01H
8082C9 7003              JNZ     $ + 5H
8082CB 028036            LJMP    ?C0846?MAINFLOW
 3891: END_FLOW()
8082CE         NODE_END:
8082CE AF27              MOV     R7,ret
8082D0         ?C0989?MAINFLOW:
8082D0 A522              ERET    
----- FUNCTION RunFlow (END) -------


----- FUNCTION ?L?COM003C (BEGIN) -----
8082D2 A5128087E9        ECALL   Mission
----- FUNCTION CoreProcessCycle (BEGIN) -----
 FILE: 'CommonFunction.c'
   24: void CoreProcessCycle()
   25: {
   26: 	SchedulerProcess();
   27: #ifndef _DEBUG_NO_MOBILE
8082D7 A5128090B6        ECALL   SchedulerProcess
   28: 	if( SystemParameter.MobileON == 1 )
8082DC 900446            MOV     DPTR,#SystemParameter+026H
8082DF E0                MOVX    A,@DPTR
8082E0 B40105            CJNE    A,#01H,?C0002?COMMONFUNCTION
   29: 		DoCommunication();
8082E3 A512813F0D        ECALL   DoCommunication
   30: #endif
   31: }
8082E8         ?C0002?COMMONFUNCTION:
8082E8 A522              ERET    
----- FUNCTION CoreProcessCycle (END) -------


----- FUNCTION ?L?COM0008 (BEGIN) -----
8082EA 900B27            MOV     DPTR,#DisplayLine
8082ED 7418              MOV     A,#018H
8082EF         ?L?COM0009:
8082EF F0                MOVX    @DPTR,A
8082F0 D21A              SETB    ?_DisplayStr?BIT
8082F2 E0                MOVX    A,@DPTR
8082F3 FF                MOV     R7,A
8082F4 25E0              ADD     A,ACC
8082F6 25E0              ADD     A,ACC
8082F8 2471              ADD     A,#LOW DispInformationTable
8082FA F582              MOV     DPL,A
8082FC E4                CLR     A
8082FD 3404              ADDC    A,#HIGH DispInformationTable
8082FF F583              MOV     DPH,A
808301 A5128007C0        ECALL   ?C?PLDCODE
808306 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 283


808309 A5128007B6        ECALL   ?C?PSTXDATA
80830E EF                MOV     A,R7
80830F 25E0              ADD     A,ACC
808311 25E0              ADD     A,ACC
808313 2474              ADD     A,#LOW DispInformationTable+03H
808315 F582              MOV     DPL,A
808317 E4                CLR     A
808318 3404              ADDC    A,#HIGH DispInformationTable+03H
80831A F583              MOV     DPH,A
80831C E4                CLR     A
80831D 93                MOVC    A,@A+DPTR
80831E         ?L?COM000A:
80831E 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
808321         ?L?COM000B:
808321 F0                MOVX    @DPTR,A
808322 7D01              MOV     R5,#01H
808324 E4                CLR     A
808325 FF                MOV     R7,A
808326 A51280885F        ECALL   _DisplayStr
80832B         ?L?COM000C:
80832B E4                CLR     A
80832C 7FD0              MOV     R7,#0D0H
80832E 7E07              MOV     R6,#07H
808330         ?L?COM000D:
808330 FD                MOV     R5,A
808331 FC                MOV     R4,A
808332 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
808335 F0                MOVX    @DPTR,A
808336 A3                INC     DPTR
808337 F0                MOVX    @DPTR,A
----- FUNCTION _WaitForWork (BEGIN) -----
 FILE: 'CommonFunction.c'
   50: u_char WaitForWork( unsigned long msec, struct DEVICE xdata* DeviceID )
   51: {
808338 901846            MOV     DPTR,#msec
80833B A512800792        ECALL   ?C?LSTXDATA
   52: 	unsigned long loopSec = msec / 1000;
   53: 	unsigned short loopMSec = msec % 1000;
808340 E4                CLR     A
808341 7BE8              MOV     R3,#0E8H
808343 7A03              MOV     R2,#03H
808345 F9                MOV     R1,A
808346 F8                MOV     R0,A
808347 901846            MOV     DPTR,#msec
80834A A512800720        ECALL   ?C?LLDXDATA
80834F A512800679        ECALL   ?C?ULDIV
808354 90184C            MOV     DPTR,#loopSec
808357 A512800792        ECALL   ?C?LSTXDATA
   54: 		
80835C E4                CLR     A
80835D 7BE8              MOV     R3,#0E8H
80835F 7A03              MOV     R2,#03H
808361 F9                MOV     R1,A
808362 F8                MOV     R0,A
808363 901846            MOV     DPTR,#msec
808366 A512800720        ECALL   ?C?LLDXDATA
80836B A512800679        ECALL   ?C?ULDIV
808370 AF03              MOV     R7,AR3
808372 901850            MOV     DPTR,#loopMSec
808375 EA                MOV     A,R2
808376 F0                MOVX    @DPTR,A
808377 A3                INC     DPTR
808378 EF                MOV     A,R7
808379 F0                MOVX    @DPTR,A
   55: 	TestDeviceCommOK( DeviceID );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 284


80837A A51280907D        ECALL   ?L?COM001C
   56: 	// 毫秒级定时
   57: 	LzjMSecTimer = loopMSec & 0x7F;
80837F 901850            MOV     DPTR,#loopMSec
808382 E0                MOVX    A,@DPTR
808383 FE                MOV     R6,A
808384 A3                INC     DPTR
808385 E0                MOVX    A,@DPTR
808386 FF                MOV     R7,A
808387 547F              ANL     A,#07FH
808389 F516              MOV     LzjMSecTimer,A
   58: 	loopMSec /= 128;
80838B EF                MOV     A,R7
80838C 7807              MOV     R0,#07H
80838E         ?C0248?COMMONFUNCTION:
80838E CE                XCH     A,R6
80838F C3                CLR     C
808390 13                RRC     A
808391 CE                XCH     A,R6
808392 13                RRC     A
808393 D8F9              DJNZ    R0,?C0248?COMMONFUNCTION
808395 FF                MOV     R7,A
808396 901850            MOV     DPTR,#loopMSec
808399 EE                MOV     A,R6
80839A F0                MOVX    @DPTR,A
80839B A3                INC     DPTR
80839C EF                MOV     A,R7
80839D F0                MOVX    @DPTR,A
   59: 	do
   60: 	{
80839E         ?C0007?COMMONFUNCTION:
   61: 		while(LzjMSecTimer)
80839E E516              MOV     A,LzjMSecTimer
8083A0 602B              JZ      ?C0008?COMMONFUNCTION
   62: 		{			
   63: 			if( DeviceID != NULL )
8083A2 90184A            MOV     DPTR,#DeviceID
8083A5 E0                MOVX    A,@DPTR
8083A6 7002              JNZ     ?C0249?COMMONFUNCTION
8083A8 A3                INC     DPTR
8083A9 E0                MOVX    A,@DPTR
8083AA         ?C0249?COMMONFUNCTION:
8083AA 600C              JZ      ?C0009?COMMONFUNCTION
   64: 			{
   65: 				SchedulerProcess();
8083AC A512809078        ECALL   ?L?COM001B
8083B1 EF                MOV     A,R7
8083B2 70EA              JNZ     ?C0007?COMMONFUNCTION
   66: 				if( TestDeviceCommOK(  DeviceID ) == 0 )
   67: 					return 0;
8083B4 FF                MOV     R7,A
8083B5 028459            LJMP    ?C0011?COMMONFUNCTION
   68: 			}
8083B8         ?C0009?COMMONFUNCTION:
   69: 			else
   70: 			{		
   71: 				if( SystemParameter.MobileON == 1 )
8083B8 900446            MOV     DPTR,#SystemParameter+026H
8083BB E0                MOVX    A,@DPTR
8083BC B40107            CJNE    A,#01H,?C0013?COMMONFUNCTION
   72: 				{
   73: 					Mission();
8083BF A5128082D2        ECALL   ?L?COM003C
   74: 					CoreProcessCycle();			
   75: 				}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 285


8083C4 80D8              SJMP    ?C0007?COMMONFUNCTION
8083C6         ?C0013?COMMONFUNCTION:
   76: 				else
   77: 					SchedulerProcess();	
8083C6 A5128090B6        ECALL   SchedulerProcess
   78: 			}
   79: 		}
8083CB 80D1              SJMP    ?C0007?COMMONFUNCTION
8083CD         ?C0008?COMMONFUNCTION:
   80: 		LzjMSecTimer = 128;
8083CD 751680            MOV     LzjMSecTimer,#080H
   81: 	}while(loopMSec--);
8083D0 901850            MOV     DPTR,#loopMSec
8083D3 74FF              MOV     A,#0FFH
8083D5 F5F0              MOV     B,A
8083D7 A512800617        ECALL   ?C?ILDIX
8083DC 45F0              ORL     A,B
8083DE 70BE              JNZ     ?C0007?COMMONFUNCTION
   82: 
   83: 	// 秒级定时
   84: 	SgpSecTimer = loopSec & 0x7F;
8083E0 90184C            MOV     DPTR,#loopSec
8083E3 A512800720        ECALL   ?C?LLDXDATA
8083E8 EF                MOV     A,R7
8083E9 547F              ANL     A,#07FH
8083EB FF                MOV     R7,A
8083EC E4                CLR     A
8083ED 8F1B              MOV     SgpSecTimer,R7
   85: 	loopSec /= 128;
8083EF 90184C            MOV     DPTR,#loopSec
8083F2 A512800720        ECALL   ?C?LLDXDATA
8083F7 E4                CLR     A
8083F8 7B80              MOV     R3,#080H
8083FA FA                MOV     R2,A
8083FB F9                MOV     R1,A
8083FC F8                MOV     R0,A
8083FD A512800679        ECALL   ?C?ULDIV
808402 90184C            MOV     DPTR,#loopSec
808405 A512800792        ECALL   ?C?LSTXDATA
   86: 	do
   87: 	{
80840A         ?C0018?COMMONFUNCTION:
   88: 		while(SgpSecTimer)
80840A E51B              MOV     A,SgpSecTimer
80840C 602A              JZ      ?C0019?COMMONFUNCTION
   89: 		{
   90: 			if( DeviceID != NULL )
80840E 90184A            MOV     DPTR,#DeviceID
808411 E0                MOVX    A,@DPTR
808412 7002              JNZ     ?C0250?COMMONFUNCTION
808414 A3                INC     DPTR
808415 E0                MOVX    A,@DPTR
808416         ?C0250?COMMONFUNCTION:
808416 600B              JZ      ?C0020?COMMONFUNCTION
   91: 			{
   92: 				SchedulerProcess();
808418 A512809078        ECALL   ?L?COM001B
80841D EF                MOV     A,R7
80841E 70EA              JNZ     ?C0018?COMMONFUNCTION
   93: 				if( TestDeviceCommOK(  DeviceID ) == 0 )
   94: 					return 0;
808420 FF                MOV     R7,A
808421 8036              SJMP    ?C0011?COMMONFUNCTION
   95: 			}
808423         ?C0020?COMMONFUNCTION:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 286


   96: 			else
   97: 			{
   98: 				if( SystemParameter.MobileON == 1 )
808423 900446            MOV     DPTR,#SystemParameter+026H
808426 E0                MOVX    A,@DPTR
808427 B40107            CJNE    A,#01H,?C0023?COMMONFUNCTION
   99: 				{
  100: 					Mission();
80842A A5128082D2        ECALL   ?L?COM003C
  101: 					CoreProcessCycle();			
  102: 				}
80842F 80D9              SJMP    ?C0018?COMMONFUNCTION
808431         ?C0023?COMMONFUNCTION:
  103: 				else
  104: 					SchedulerProcess();	
808431 A5128090B6        ECALL   SchedulerProcess
  105: 			}
  106: 		}
808436 80D2              SJMP    ?C0018?COMMONFUNCTION
808438         ?C0019?COMMONFUNCTION:
  107: 		SgpSecTimer = 128;
808438 751B80            MOV     SgpSecTimer,#080H
  108: 	}while(loopSec--);
80843B 90184C            MOV     DPTR,#loopSec
80843E 74FF              MOV     A,#0FFH
808440 A51280075E        ECALL   ?C?LLDIXDATA8
808445 EC                MOV     A,R4
808446 4D                ORL     A,R5
808447 4E                ORL     A,R6
808448 4F                ORL     A,R7
808449 70BF              JNZ     ?C0018?COMMONFUNCTION
  109: 
  110: 	if( DeviceID != NULL )	
80844B 90184A            MOV     DPTR,#DeviceID
80844E E0                MOVX    A,@DPTR
80844F 7002              JNZ     ?C0251?COMMONFUNCTION
808451 A3                INC     DPTR
808452 E0                MOVX    A,@DPTR
808453         ?C0251?COMMONFUNCTION:
808453 7F00              MOV     R7,#00H
808455 6002              JZ      ?C0025?COMMONFUNCTION
  111: 		return 1;
808457 7F01              MOV     R7,#01H
808459         ?C0025?COMMONFUNCTION:
  112: 	else
  113: 		return 0;
  114: 			
  115: }
808459         ?C0011?COMMONFUNCTION:
808459 A522              ERET    
----- FUNCTION _WaitForWork (END) -------


----- FUNCTION ?L?COM0026 (BEGIN) -----
80845B 7F02              MOV     R7,#02H
80845D A512808464        ECALL   _GetDeviceStatus
808462 7F03              MOV     R7,#03H
----- FUNCTION _GetDeviceStatus (BEGIN) -----
 FILE: 'devicecheck.c'
  452: void GetDeviceStatus(unsigned char iDeviceID )
  453: {
;---- Variable 'iDeviceID' assigned to Register 'R7' ----
  454: 	u_char   xdata flag ;
  455: //	unsigned char xdata i;	
  456: 
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 287


  457: 	flag = 0;
808464 E4                CLR     A
808465 901747            MOV     DPTR,#flag
808468 F0                MOVX    @DPTR,A
  458: 	switch(iDeviceID)
808469 EF                MOV     A,R7
80846A 14                DEC     A
80846B 605D              JZ      ?C0062?DEVICECHECK
80846D 14                DEC     A
80846E 6062              JZ      ?C0063?DEVICECHECK
808470 14                DEC     A
808471 7003              JNZ     $ + 5H
808473 028570            LJMP    ?C0081?DEVICECHECK
808476 14                DEC     A
808477 7003              JNZ     $ + 5H
808479 028610            LJMP    ?C0099?DEVICECHECK
80847C 2404              ADD     A,#04H
80847E 6003              JZ      $ + 5H
808480 0286A8            LJMP    ?C0058?DEVICECHECK
  459: 	{	
  460: 		case 0:       //1纸币器状态	
808483         ?C0054?DEVICECHECK:
  461: 			if( SystemParameter.BillNo == 1 )				
808483 900427            MOV     DPTR,#SystemParameter+07H
808486 E0                MOVX    A,@DPTR
808487 6401              XRL     A,#01H
808489 7036              JNZ     ?C0055?DEVICECHECK
  462: 			{
  463: 				flag = GetHardWareDeviceState( 4, &Casher );
80848B 7C23              MOV     R4,#HIGH Casher
80848D 7DD4              MOV     R5,#LOW Casher
80848F 7F04              MOV     R7,#04H
808491 A5128086B0        ECALL   _GetHardWareDeviceState
808496 901747            MOV     DPTR,#flag
808499 EF                MOV     A,R7
80849A F0                MOVX    @DPTR,A
  464: 				if( flag == 0 )
80849B 701B              JNZ     ?C0056?DEVICECHECK
  465: 				{
  466: 					flag = 0;
80849D F0                MOVX    @DPTR,A
  467: 					flag = TestDeviceException( &Casher );			
80849E 7E23              MOV     R6,#HIGH Casher
8084A0 7FD4              MOV     R7,#LOW Casher
8084A2 A512812C25        ECALL   _TestDeviceException
8084A7 901747            MOV     DPTR,#flag
8084AA EF                MOV     A,R7
8084AB F0                MOVX    @DPTR,A
  468: 					if ( flag )
8084AC 6002              JZ      ?C0057?DEVICECHECK
  469: 					{					
  470: 						DeviceStatus.BillAccepter = 1;
8084AE 8008              SJMP    ?C0274?DEVICECHECK
  471: 						return ;
  472: 					}
8084B0         ?C0057?DEVICECHECK:
  473: 					else				
  474: 						DeviceStatus.BillAccepter = 0;				
8084B0 E4                CLR     A
8084B1 900B1B            MOV     DPTR,#DeviceStatus
8084B4 F0                MOVX    @DPTR,A
  475: 				}	
8084B5 0286A8            LJMP    ?C0058?DEVICECHECK
8084B8         ?C0056?DEVICECHECK:
  476: 				else
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 288


  477: 					DeviceStatus.BillAccepter = 1;		
8084B8         
8084B8 900B1B            MOV     DPTR,#DeviceStatus
8084BB 7401              MOV     A,#01H
8084BD F0                MOVX    @DPTR,A
  478: 			}
8084BE 0286A8            LJMP    ?C0058?DEVICECHECK
8084C1         ?C0055?DEVICECHECK:
  479: 			else
  480: 				DeviceStatus.BillAccepter = 128;
8084C1 900B1B            MOV     DPTR,#DeviceStatus
8084C4 7480              MOV     A,#080H
8084C6 F0                MOVX    @DPTR,A
  481: 			Trace( "\n DeviceStatus.BillAccepter = %bu", DeviceStatus.BillAccepter );
  482: 			break;				
8084C7 0286A8            LJMP    ?C0058?DEVICECHECK
  483: 		case 1:       //2硬币器状态
8084CA         ?C0062?DEVICECHECK:
  484: 			CoinerTest();
8084CA A51280937B        ECALL   CoinerTest
  485: 			WaitForWork( 100, NULL );		
  486: 			break;			
8084CF 02869F            LJMP    ?C0289?DEVICECHECK
  487: 		case 2:       //3 #1退币器测试	
8084D2         ?C0063?DEVICECHECK:
  488: 			if( SystemParameter.HopperCoinPrice1 == 0 )
8084D2 900421            MOV     DPTR,#SystemParameter+01H
8084D5 E0                MOVX    A,@DPTR
8084D6 7002              JNZ     ?C0264?DEVICECHECK
8084D8 A3                INC     DPTR
8084D9 E0                MOVX    A,@DPTR
8084DA         ?C0264?DEVICECHECK:
8084DA 7008              JNZ     ?C0064?DEVICECHECK
  489: 			{
  490: 				DeviceStatus.ChangeUnit1 = 1;
8084DC 900B1D            MOV     DPTR,#DeviceStatus+02H
8084DF 04                INC     A
8084E0 F0                MOVX    @DPTR,A
  491: 				break;
8084E1 0286A8            LJMP    ?C0058?DEVICECHECK
  492: 			}		
8084E4         ?C0064?DEVICECHECK:
  493: 			if( m_iCheckDevice )
8084E4 902DFB            MOV     DPTR,#m_iCheckDevice
8084E7 E0                MOVX    A,@DPTR
8084E8 604A              JZ      ?C0065?DEVICECHECK
  494: 			{			
  495: 				flag = HopperOutCoin( 5, 1, &Hopper1 );//出币5枚
8084EA 7A23              MOV     R2,#HIGH Hopper1
8084EC 7B7E              MOV     R3,#LOW Hopper1
8084EE 7D01              MOV     R5,#01H
8084F0 A51280878C        ECALL   ?L?COM0038
8084F5 901747            MOV     DPTR,#flag
8084F8 EF                MOV     A,R7
8084F9 F0                MOVX    @DPTR,A
  496: 				WaitForWork( 1500 , NULL );
8084FA E4                CLR     A
8084FB 7FDC              MOV     R7,#0DCH
8084FD 7E05              MOV     R6,#05H
8084FF A512808330        ECALL   ?L?COM000D
  497: 				if( flag == 0 )//出币命令发送成功
808504 901747            MOV     DPTR,#flag
808507 E0                MOVX    A,@DPTR
808508 7028              JNZ     ?C0066?DEVICECHECK
  498: 				{				
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 289


  499: 					flag = GetHardWareDeviceState( 1, &Hopper1 );
80850A 7C23              MOV     R4,#HIGH Hopper1
80850C 7D7E              MOV     R5,#LOW Hopper1
80850E 7F01              MOV     R7,#01H
808510 A5128086B0        ECALL   _GetHardWareDeviceState
808515 901747            MOV     DPTR,#flag
808518 EF                MOV     A,R7
808519 F0                MOVX    @DPTR,A
  500: 					if( flag != 1 )
80851A 6401              XRL     A,#01H
80851C 6012              JZ      ?C0067?DEVICECHECK
  501: 					{
  502: 						if( Hopper1.State & 0x50 ) //系统故障																									
80851E 902381            MOV     DPTR,#Hopper1+03H
808521 E0                MOVX    A,@DPTR
808522 FF                MOV     R7,A
808523 5450              ANL     A,#050H
808525 6002              JZ      ?C0068?DEVICECHECK
  503: 							DeviceStatus.ChangeUnit1 = 1;
808527 803E              SJMP    ?C0281?DEVICECHECK
808529         ?C0068?DEVICECHECK:
  504: 						else if( Hopper1.State & 0x28 )//光测无币或实际无币							
808529 EF                MOV     A,R7
80852A 5428              ANL     A,#028H
80852C 6032              JZ      ?C0278?DEVICECHECK
  505: 							DeviceStatus.ChangeUnit1 = 2; 						
80852E 8028              SJMP    ?C0277?DEVICECHECK
808530         ?C0067?DEVICECHECK:
  506: 						else						
  507: 							DeviceStatus.ChangeUnit1 = 0;						
  508: 					}	
  509: 					else
  510: 						DeviceStatus.ChangeUnit1 = 1;
808530         
  511: 				}
808530 8035              SJMP    ?C0281?DEVICECHECK
808532         ?C0066?DEVICECHECK:
  512: 				else//出币命令发送不成功				
  513: 					DeviceStatus.ChangeUnit1 = 1;				
808532         
  514: 			}
808532 8033              SJMP    ?C0281?DEVICECHECK
808534         ?C0065?DEVICECHECK:
  515: 			else
  516: 			{
  517: 				flag = GetHardWareDeviceState( 1, &Hopper1 );			
808534 7C23              MOV     R4,#HIGH Hopper1
808536 7D7E              MOV     R5,#LOW Hopper1
808538 7F01              MOV     R7,#01H
80853A A5128086B0        ECALL   _GetHardWareDeviceState
80853F 901747            MOV     DPTR,#flag
808542 EF                MOV     A,R7
808543 F0                MOVX    @DPTR,A
  518: 				if( flag != 1 )
808544 6401              XRL     A,#01H
808546 601F              JZ      ?C0075?DEVICECHECK
  519: 				{					
  520: 					if( Hopper1.State & 0x50 ) //系统故障																									
808548 902381            MOV     DPTR,#Hopper1+03H
80854B E0                MOVX    A,@DPTR
80854C FF                MOV     R7,A
80854D 5450              ANL     A,#050H
80854F 6002              JZ      ?C0076?DEVICECHECK
  521: 						DeviceStatus.ChangeUnit1 = 1;
808551         
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 290


808551 8014              SJMP    ?C0281?DEVICECHECK
808553         ?C0076?DEVICECHECK:
  522: 					else if( Hopper1.State & 0x28 )//光测无币或实际无币							
808553 EF                MOV     A,R7
808554 5428              ANL     A,#028H
808556 6008              JZ      ?C0078?DEVICECHECK
  523: 						DeviceStatus.ChangeUnit1 = 2; 						
808558         
808558 900B1D            MOV     DPTR,#DeviceStatus+02H
80855B 7402              MOV     A,#02H
80855D F0                MOVX    @DPTR,A
80855E 800D              SJMP    ?C0074?DEVICECHECK
808560         ?C0078?DEVICECHECK:
  524: 					else						
  525: 						DeviceStatus.ChangeUnit1 = 0;					
808560         
808560 E4                CLR     A
808561 900B1D            MOV     DPTR,#DeviceStatus+02H
808564 F0                MOVX    @DPTR,A
  526: 				}	
808565 8006              SJMP    ?C0074?DEVICECHECK
808567         ?C0075?DEVICECHECK:
  527: 				else
  528: 					DeviceStatus.ChangeUnit1 = 1;
808567         
808567 900B1D            MOV     DPTR,#DeviceStatus+02H
80856A 7401              MOV     A,#01H
80856C F0                MOVX    @DPTR,A
  529: 			}
80856D         ?C0074?DEVICECHECK:
  530: 			WaitForWork( 100, NULL );
80856D         
  531: 			break;								
80856D 02869F            LJMP    ?C0289?DEVICECHECK
  532: 		case 3:       //3 #2退币器测试	
808570         ?C0081?DEVICECHECK:
  533: 			if( SystemParameter.HopperCoinPrice2 == 0 )
808570 900423            MOV     DPTR,#SystemParameter+03H
808573 E0                MOVX    A,@DPTR
808574 7002              JNZ     ?C0265?DEVICECHECK
808576 A3                INC     DPTR
808577 E0                MOVX    A,@DPTR
808578         ?C0265?DEVICECHECK:
808578 7008              JNZ     ?C0082?DEVICECHECK
  534: 			{
  535: 				DeviceStatus.ChangeUnit2 = 1;
80857A 900B1E            MOV     DPTR,#DeviceStatus+03H
80857D 04                INC     A
80857E F0                MOVX    @DPTR,A
  536: 				break;
80857F 0286A8            LJMP    ?C0058?DEVICECHECK
  537: 			}		
808582         ?C0082?DEVICECHECK:
  538: 			if( m_iCheckDevice )
808582 902DFB            MOV     DPTR,#m_iCheckDevice
808585 E0                MOVX    A,@DPTR
808586 604C              JZ      ?C0083?DEVICECHECK
  539: 			{				
  540: 				flag = HopperOutCoin( 5, 2, &Hopper2 );//出币5枚
808588 7A23              MOV     R2,#HIGH Hopper2
80858A 7B93              MOV     R3,#LOW Hopper2
80858C 7D02              MOV     R5,#02H
80858E 7F05              MOV     R7,#05H
808590 A51280878E        ECALL   _HopperOutCoin
808595 901747            MOV     DPTR,#flag
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 291


808598 EF                MOV     A,R7
808599 F0                MOVX    @DPTR,A
  541: 				WaitForWork( 1500 , NULL );
80859A E4                CLR     A
80859B 7FDC              MOV     R7,#0DCH
80859D 7E05              MOV     R6,#05H
80859F A512808330        ECALL   ?L?COM000D
  542: 				if( flag == 0 )//出币命令发送成功
8085A4 901747            MOV     DPTR,#flag
8085A7 E0                MOVX    A,@DPTR
8085A8 7028              JNZ     ?C0084?DEVICECHECK
  543: 				{					
  544: 					flag = GetHardWareDeviceState( 2, &Hopper2 );			
8085AA 7C23              MOV     R4,#HIGH Hopper2
8085AC 7D93              MOV     R5,#LOW Hopper2
8085AE 7F02              MOV     R7,#02H
8085B0 A5128086B0        ECALL   _GetHardWareDeviceState
8085B5 901747            MOV     DPTR,#flag
8085B8 EF                MOV     A,R7
8085B9 F0                MOVX    @DPTR,A
  545: 					if( flag != 1 )
8085BA 6401              XRL     A,#01H
8085BC 6012              JZ      ?C0085?DEVICECHECK
  546: 					{
  547: 						if( Hopper2.State & 0x50 ) //系统故障																									
8085BE 902396            MOV     DPTR,#Hopper2+03H
8085C1 E0                MOVX    A,@DPTR
8085C2 FF                MOV     R7,A
8085C3 5450              ANL     A,#050H
8085C5 6002              JZ      ?C0086?DEVICECHECK
  548: 							DeviceStatus.ChangeUnit2 = 1;
8085C7 803E              SJMP    ?C0288?DEVICECHECK
8085C9         ?C0086?DEVICECHECK:
  549: 						else if( Hopper2.State & 0x28 )//光测无币或实际无币							
8085C9 EF                MOV     A,R7
8085CA 5428              ANL     A,#028H
8085CC 6032              JZ      ?C0285?DEVICECHECK
  550: 							DeviceStatus.ChangeUnit2 = 2; 						
8085CE 8028              SJMP    ?C0284?DEVICECHECK
8085D0         ?C0085?DEVICECHECK:
  551: 						else						
  552: 							DeviceStatus.ChangeUnit2 = 0;							
  553: 					}	
  554: 					else
  555: 						DeviceStatus.ChangeUnit2 = 1;
8085D0         
  556: 				}
8085D0 8035              SJMP    ?C0288?DEVICECHECK
8085D2         ?C0084?DEVICECHECK:
  557: 				else//出币命令发送不成功				
  558: 					DeviceStatus.ChangeUnit2 = 1;				
8085D2         
  559: 			}
8085D2 8033              SJMP    ?C0288?DEVICECHECK
8085D4         ?C0083?DEVICECHECK:
  560: 			else
  561: 			{
  562: 				flag = GetHardWareDeviceState( 2, &Hopper2 );
8085D4 7C23              MOV     R4,#HIGH Hopper2
8085D6 7D93              MOV     R5,#LOW Hopper2
8085D8 7F02              MOV     R7,#02H
8085DA A5128086B0        ECALL   _GetHardWareDeviceState
8085DF 901747            MOV     DPTR,#flag
8085E2 EF                MOV     A,R7
8085E3 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 292


  563: 				Trace("\n Hopper2 flag = %bu", flag );			
  564: 				if( flag != 1 )
8085E4 6401              XRL     A,#01H
8085E6 601F              JZ      ?C0093?DEVICECHECK
  565: 				{
  566: 					if( Hopper2.State & 0x50 ) //系统故障																									
8085E8 902396            MOV     DPTR,#Hopper2+03H
8085EB E0                MOVX    A,@DPTR
8085EC FF                MOV     R7,A
8085ED 5450              ANL     A,#050H
8085EF 6002              JZ      ?C0094?DEVICECHECK
  567: 						DeviceStatus.ChangeUnit2 = 1;
8085F1         
8085F1 8014              SJMP    ?C0288?DEVICECHECK
8085F3         ?C0094?DEVICECHECK:
  568: 					else if( Hopper2.State & 0x28 )//光测无币或实际无币							
8085F3 EF                MOV     A,R7
8085F4 5428              ANL     A,#028H
8085F6 6008              JZ      ?C0096?DEVICECHECK
  569: 						DeviceStatus.ChangeUnit2 = 2; 						
8085F8         
8085F8 900B1E            MOV     DPTR,#DeviceStatus+03H
8085FB 7402              MOV     A,#02H
8085FD F0                MOVX    @DPTR,A
8085FE 800D              SJMP    ?C0092?DEVICECHECK
808600         ?C0096?DEVICECHECK:
  570: 					else						
  571: 						DeviceStatus.ChangeUnit2 = 0;						
808600         
808600 E4                CLR     A
808601 900B1E            MOV     DPTR,#DeviceStatus+03H
808604 F0                MOVX    @DPTR,A
  572: 				}	
808605 8006              SJMP    ?C0092?DEVICECHECK
808607         ?C0093?DEVICECHECK:
  573: 				else
  574: 					DeviceStatus.ChangeUnit2 = 1;
808607         
808607 900B1E            MOV     DPTR,#DeviceStatus+03H
80860A 7401              MOV     A,#01H
80860C F0                MOVX    @DPTR,A
  575: 			}
80860D         ?C0092?DEVICECHECK:
  576: 			WaitForWork( 100, NULL );
80860D         
  577: 			break;
80860D 02869F            LJMP    ?C0289?DEVICECHECK
  578: 	   case 4:       //3 #1退币器测试	
808610         ?C0099?DEVICECHECK:
  579: 			if( SystemParameter.HopperCoinPrice3 == 0 )
808610 900425            MOV     DPTR,#SystemParameter+05H
808613 E0                MOVX    A,@DPTR
808614 7002              JNZ     ?C0266?DEVICECHECK
808616 A3                INC     DPTR
808617 E0                MOVX    A,@DPTR
808618         ?C0266?DEVICECHECK:
808618 7008              JNZ     ?C0100?DEVICECHECK
  580: 			{
  581: 				DeviceStatus.ChangeUnit3 = 1;
80861A 900B1F            MOV     DPTR,#DeviceStatus+04H
80861D 04                INC     A
80861E F0                MOVX    @DPTR,A
  582: 				break;
80861F 0286A8            LJMP    ?C0058?DEVICECHECK
  583: 			}		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 293


808622         ?C0100?DEVICECHECK:
  584: 			if( m_iCheckDevice )
808622 902DFB            MOV     DPTR,#m_iCheckDevice
808625 E0                MOVX    A,@DPTR
808626 6044              JZ      ?C0101?DEVICECHECK
  585: 			{				
  586: 				flag = HopperOutCoin( 5, 3, &Hopper3 );//出币5枚
808628 7A23              MOV     R2,#HIGH Hopper3
80862A 7BA8              MOV     R3,#LOW Hopper3
80862C 7D03              MOV     R5,#03H
80862E A51280878C        ECALL   ?L?COM0038
808633 901747            MOV     DPTR,#flag
808636 EF                MOV     A,R7
808637 F0                MOVX    @DPTR,A
  587: 				WaitForWork( 1500 , NULL );
808638 E4                CLR     A
808639 7FDC              MOV     R7,#0DCH
80863B 7E05              MOV     R6,#05H
80863D A512808330        ECALL   ?L?COM000D
  588: 				if( flag == 0 )//出币命令发送成功
808642 901747            MOV     DPTR,#flag
808645 E0                MOVX    A,@DPTR
808646 7022              JNZ     ?C0102?DEVICECHECK
  589: 				{					
  590: 					flag = GetHardWareDeviceState( 3, &Hopper3 );			
808648 A5128086AA        ECALL   ?L?COM002C
80864D 901747            MOV     DPTR,#flag
808650 EF                MOV     A,R7
808651 F0                MOVX    @DPTR,A
  591: 					if( flag != 1 )
808652 6401              XRL     A,#01H
808654 6012              JZ      ?C0103?DEVICECHECK
  592: 					{
  593: 						if( Hopper3.State & 0x50 ) //系统故障																									
808656 9023AB            MOV     DPTR,#Hopper3+03H
808659 E0                MOVX    A,@DPTR
80865A FF                MOV     R7,A
80865B 5450              ANL     A,#050H
80865D 6002              JZ      ?C0104?DEVICECHECK
  594: 							DeviceStatus.ChangeUnit3 = 1;
80865F 8038              SJMP    ?C0295?DEVICECHECK
808661         ?C0104?DEVICECHECK:
  595: 						else if( Hopper3.State & 0x28 )//光测无币或实际无币							
808661 EF                MOV     A,R7
808662 5428              ANL     A,#028H
808664 602C              JZ      ?C0292?DEVICECHECK
  596: 							DeviceStatus.ChangeUnit3 = 2; 						
808666 8022              SJMP    ?C0291?DEVICECHECK
808668         ?C0103?DEVICECHECK:
  597: 						else						
  598: 							DeviceStatus.ChangeUnit3 = 0;							
  599: 					}	
  600: 					else
  601: 						DeviceStatus.ChangeUnit3 = 1;
808668         
  602: 				}
808668 802F              SJMP    ?C0295?DEVICECHECK
80866A         ?C0102?DEVICECHECK:
  603: 				else//出币命令发送不成功				
  604: 					DeviceStatus.ChangeUnit3 = 1;				
80866A         
  605: 			}
80866A 802D              SJMP    ?C0295?DEVICECHECK
80866C         ?C0101?DEVICECHECK:
  606: 			else
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 294


  607: 			{
  608: 				flag = GetHardWareDeviceState( 3, &Hopper3 );			
80866C A5128086AA        ECALL   ?L?COM002C
808671 901747            MOV     DPTR,#flag
808674 EF                MOV     A,R7
808675 F0                MOVX    @DPTR,A
  609: 				if( flag != 1 )
808676 6401              XRL     A,#01H
808678 601F              JZ      ?C0111?DEVICECHECK
  610: 				{
  611: 					if( Hopper3.State & 0x50 ) //系统故障																									
80867A 9023AB            MOV     DPTR,#Hopper3+03H
80867D E0                MOVX    A,@DPTR
80867E FF                MOV     R7,A
80867F 5450              ANL     A,#050H
808681 6002              JZ      ?C0112?DEVICECHECK
  612: 						DeviceStatus.ChangeUnit3 = 1;
808683         
808683 8014              SJMP    ?C0295?DEVICECHECK
808685         ?C0112?DEVICECHECK:
  613: 					else if( Hopper3.State & 0x28 )//光测无币或实际无币							
808685 EF                MOV     A,R7
808686 5428              ANL     A,#028H
808688 6008              JZ      ?C0114?DEVICECHECK
  614: 						DeviceStatus.ChangeUnit3 = 2; 						
80868A         
80868A 900B1F            MOV     DPTR,#DeviceStatus+04H
80868D 7402              MOV     A,#02H
80868F F0                MOVX    @DPTR,A
808690 800D              SJMP    ?C0110?DEVICECHECK
808692         ?C0114?DEVICECHECK:
  615: 					else						
  616: 						DeviceStatus.ChangeUnit3 = 0;					
808692         
808692 E4                CLR     A
808693 900B1F            MOV     DPTR,#DeviceStatus+04H
808696 F0                MOVX    @DPTR,A
  617: 				}	
808697 8006              SJMP    ?C0110?DEVICECHECK
808699         ?C0111?DEVICECHECK:
  618: 				else
  619: 					DeviceStatus.ChangeUnit3 = 1;
808699         
808699 900B1F            MOV     DPTR,#DeviceStatus+04H
80869C 7401              MOV     A,#01H
80869E F0                MOVX    @DPTR,A
  620: 			}
80869F         ?C0110?DEVICECHECK:
  621: 			WaitForWork( 100, NULL );			
80869F         
80869F E4                CLR     A
8086A0 7F64              MOV     R7,#064H
8086A2 FE                MOV     R6,A
8086A3 A512808330        ECALL   ?L?COM000D
  622: 			break;
  623: 	}
  624: }
8086A8         ?C0058?DEVICECHECK:
8086A8 A522              ERET    
----- FUNCTION _GetDeviceStatus (END) -------


----- FUNCTION ?L?COM002C (BEGIN) -----
8086AA 7C23              MOV     R4,#HIGH Hopper3
8086AC 7DA8              MOV     R5,#LOW Hopper3
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 295


8086AE 7F03              MOV     R7,#03H
----- FUNCTION _GetHardWareDeviceState (BEGIN) -----
 FILE: 'CommonFunction.c'
  891: u_char GetHardWareDeviceState( u_char iHopperNo, struct DEVICE xdata* iDevice )
  892: {
8086B0 901749            MOV     DPTR,#iDevice
8086B3 EC                MOV     A,R4
8086B4 F0                MOVX    @DPTR,A
8086B5 A3                INC     DPTR
8086B6 ED                MOV     A,R5
8086B7 F0                MOVX    @DPTR,A
8086B8 901748            MOV     DPTR,#iHopperNo
8086BB EF                MOV     A,R7
8086BC F0                MOVX    @DPTR,A
  893: 	u_char xdata i = 0;
  894: 	u_char xdata j = 0;
8086BD E4                CLR     A
8086BE 90174B            MOV     DPTR,#i
8086C1 F0                MOVX    @DPTR,A
  895: 	u_char xdata timeBuf = 0;
8086C2 A3                INC     DPTR
8086C3 F0                MOVX    @DPTR,A
  896: 
;---- Variable 'timeBuf' assigned to Register 'R6' ----
  897:     //----------------------------------------------------------------------------------
  898:     //Changed by Andy on 2010.11.2
  899:     if( ( iHopperNo == 1 ) || ( iHopperNo == 2 ) || ( iHopperNo == 3 ) )
8086C4 EF                MOV     A,R7
8086C5 6401              XRL     A,#01H
8086C7 600D              JZ      ?C0219?COMMONFUNCTION
8086C9 901748            MOV     DPTR,#iHopperNo
8086CC E0                MOVX    A,@DPTR
8086CD FF                MOV     R7,A
8086CE 6402              XRL     A,#02H
8086D0 6004              JZ      ?C0219?COMMONFUNCTION
8086D2 EF                MOV     A,R7
8086D3 B40304            CJNE    A,#03H,?C0218?COMMONFUNCTION
8086D6         ?C0219?COMMONFUNCTION:
  900:     {
  901:     	timeBuf = 255;
8086D6 7EFF              MOV     R6,#0FFH
  902:     }
8086D8 8002              SJMP    ?C0220?COMMONFUNCTION
8086DA         ?C0218?COMMONFUNCTION:
  903:     else
  904:     {
  905:     	timeBuf = 10;
8086DA 7E0A              MOV     R6,#0AH
  906:     }        
8086DC         ?C0220?COMMONFUNCTION:
  907:     //==================================================================================
  908:     
  909: 	for( YgpSecTimer = timeBuf; YgpSecTimer ; )
8086DC AF06              MOV     R7,AR6
8086DE 8F1C              MOV     YgpSecTimer,R7
8086E0         ?C0221?COMMONFUNCTION:
8086E0 E51C              MOV     A,YgpSecTimer
8086E2 7003              JNZ     $ + 5H
8086E4 028768            LJMP    ?C0222?COMMONFUNCTION
  910: 	{			
  911: 		if( ( iHopperNo == 1 ) || ( iHopperNo == 2 ) || ( iHopperNo == 3 ) )//出币器状态
8086E7 901748            MOV     DPTR,#iHopperNo
8086EA E0                MOVX    A,@DPTR
8086EB FF                MOV     R7,A
8086EC 6401              XRL     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 296


8086EE 6009              JZ      ?C0224?COMMONFUNCTION
8086F0 EF                MOV     A,R7
8086F1 6402              XRL     A,#02H
8086F3 6004              JZ      ?C0224?COMMONFUNCTION
8086F5 EF                MOV     A,R7
8086F6 B40307            CJNE    A,#03H,?C0223?COMMONFUNCTION
8086F9         ?C0224?COMMONFUNCTION:
  912: 			HopperQuery( iHopperNo );
8086F9 A512812897        ECALL   _HopperQuery
8086FE 801B              SJMP    ?C0227?COMMONFUNCTION
808700         ?C0223?COMMONFUNCTION:
  913: 		else if( iHopperNo == 4 ) //纸币器状态
808700 901748            MOV     DPTR,#iHopperNo
808703 E0                MOVX    A,@DPTR
808704 B40414            CJNE    A,#04H,?C0227?COMMONFUNCTION
  914: 		{
  915: 			i = CasherQuery( );	
808707 A512813038        ECALL   CasherQuery
80870C E4                CLR     A
80870D 33                RLC     A
80870E 90174B            MOV     DPTR,#i
808711 F0                MOVX    @DPTR,A
  916: 			WaitForWork( 100, NULL );
808712 E4                CLR     A
808713 7F64              MOV     R7,#064H
808715 FE                MOV     R6,A
808716 A512808330        ECALL   ?L?COM000D
  917: 		}
80871B         ?C0227?COMMONFUNCTION:
  918: 
  919: 		while( 1 )
  920: 		{
  921: 			i = TestDeviceCommOK( iDevice );
80871B 901749            MOV     DPTR,#iDevice
80871E A512809080        ECALL   ?L?COM001D
808723 90174B            MOV     DPTR,#i
808726 EF                MOV     A,R7
808727 F0                MOVX    @DPTR,A
  922: 			j = TestDeviceTimeOut( iDevice );
808728 901749            MOV     DPTR,#iDevice
80872B A5128087F8        ECALL   ?L?COM003A
808730 90174C            MOV     DPTR,#j
808733 EF                MOV     A,R7
808734 F0                MOVX    @DPTR,A
  923: 			if( !( j || i ) )					
808735 7015              JNZ     ?C0228?COMMONFUNCTION
808737 90174B            MOV     DPTR,#i
80873A E0                MOVX    A,@DPTR
80873B 700F              JNZ     ?C0228?COMMONFUNCTION
  924: 			{
  925: 				WaitForWork( 100, NULL );
80873D 7F64              MOV     R7,#064H
80873F FE                MOV     R6,A
808740 A512808330        ECALL   ?L?COM000D
  926: 				i = 0;
808745 E4                CLR     A
808746 90174B            MOV     DPTR,#i
808749 F0                MOVX    @DPTR,A
  927: 			}
80874A 80CF              SJMP    ?C0227?COMMONFUNCTION
  928: 			else
  929: 				break;	
  930: 		}
80874C         ?C0228?COMMONFUNCTION:
  931: 		if( iHopperNo == 4 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 297


80874C 901748            MOV     DPTR,#iHopperNo
80874F E0                MOVX    A,@DPTR
808750 6404              XRL     A,#04H
808752 6014              JZ      ?C0222?COMMONFUNCTION
  932: 			break;
808754         ?C0231?COMMONFUNCTION:
  933: 		if( i == 4 )
808754 90174B            MOV     DPTR,#i
808757 E0                MOVX    A,@DPTR
808758 6404              XRL     A,#04H
80875A 600C              JZ      ?C0222?COMMONFUNCTION
  934: 			break;		
80875C         ?C0232?COMMONFUNCTION:
  935: 		WaitForWork( 100, NULL );
80875C E4                CLR     A
80875D 7F64              MOV     R7,#064H
80875F FE                MOV     R6,A
808760 A512808330        ECALL   ?L?COM000D
  936: 	}
808765 0286E0            LJMP    ?C0221?COMMONFUNCTION
808768         ?C0222?COMMONFUNCTION:
  937: 
  938: 	if( ( YgpSecTimer == 0 ) || ( j ) )
808768 E51C              MOV     A,YgpSecTimer
80876A 6006              JZ      ?C0234?COMMONFUNCTION
80876C 90174C            MOV     DPTR,#j
80876F E0                MOVX    A,@DPTR
808770 6004              JZ      ?C0233?COMMONFUNCTION
808772         ?C0234?COMMONFUNCTION:
  939: 	{		
  940: 		Trace("\n Time Out" );
  941: 		return 1;//超时
808772 7F01              MOV     R7,#01H
808774 8014              SJMP    ?C0235?COMMONFUNCTION
  942: 	}	
808776         ?C0233?COMMONFUNCTION:
  943: 	if ( TestDeviceException( iDevice ) )
808776 901749            MOV     DPTR,#iDevice
808779 E0                MOVX    A,@DPTR
80877A FE                MOV     R6,A
80877B A3                INC     DPTR
80877C E0                MOVX    A,@DPTR
80877D FF                MOV     R7,A
80877E A512812C25        ECALL   _TestDeviceException
808783 EF                MOV     A,R7
808784 7F00              MOV     R7,#00H
808786 6002              JZ      ?C0236?COMMONFUNCTION
  944: 	{
  945: //		Trace("\n Exception" );
  946: 		return 2;//故障
808788 7F02              MOV     R7,#02H
  947: 	}
80878A         ?C0236?COMMONFUNCTION:
  948: 	return 0; //正常返回	
  949: }
80878A         ?C0235?COMMONFUNCTION:
80878A A522              ERET    
----- FUNCTION _GetHardWareDeviceState (END) -------


----- FUNCTION ?L?COM0038 (BEGIN) -----
80878C 7F05              MOV     R7,#05H
----- FUNCTION _HopperOutCoin (BEGIN) -----
 FILE: 'CommonFunction.c'
  582: u_char HopperOutCoin( u_char iCoinNum, u_char iHopperNo, struct DEVICE xdata* iDevice )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 298


  583: {	
80878E 901748            MOV     DPTR,#iDevice
808791 EA                MOV     A,R2
808792 F0                MOVX    @DPTR,A
808793 A3                INC     DPTR
808794 EB                MOV     A,R3
808795 F0                MOVX    @DPTR,A
;---- Variable 'iHopperNo' assigned to Register 'R5' ----
;---- Variable 'iCoinNum' assigned to Register 'R6' ----
808796 AE07              MOV     R6,AR7
  584: 	u_char xdata i = 0;
  585: 	u_char xdata j = 0;
808798 E4                CLR     A
808799 A3                INC     DPTR
80879A F0                MOVX    @DPTR,A
  586: 
;---- Variable 'j' assigned to Register 'R7' ----
  587: 	HopperOutput( iHopperNo , iCoinNum );
80879B AF05              MOV     R7,AR5
80879D EE                MOV     A,R6
80879E FD                MOV     R5,A
80879F 7C00              MOV     R4,#00H
8087A1 A512812C68        ECALL   _HopperOutput
  588: 	WaitForWork( 100, NULL );
8087A6 E4                CLR     A
8087A7 7F64              MOV     R7,#064H
8087A9 FE                MOV     R6,A
8087AA A512808330        ECALL   ?L?COM000D
  589: 	i = 0;
8087AF E4                CLR     A
8087B0 90174A            MOV     DPTR,#i
8087B3 F0                MOVX    @DPTR,A
  590: 	j = 0;
8087B4 FF                MOV     R7,A
8087B5         ?C0159?COMMONFUNCTION:
  591: 	while( ! ( i || j ) )
8087B5 90174A            MOV     DPTR,#i
8087B8 E0                MOVX    A,@DPTR
8087B9 7022              JNZ     ?C0160?COMMONFUNCTION
8087BB EF                MOV     A,R7
8087BC 701F              JNZ     ?C0160?COMMONFUNCTION
  592: 	{
  593: 		WaitForWork( 100, NULL );
8087BE 7F64              MOV     R7,#064H
8087C0 FE                MOV     R6,A
8087C1 A512808330        ECALL   ?L?COM000D
  594: 		i = TestDeviceTimeOut( iDevice );
8087C6 901748            MOV     DPTR,#iDevice
8087C9 A5128087F8        ECALL   ?L?COM003A
8087CE 90174A            MOV     DPTR,#i
8087D1 EF                MOV     A,R7
8087D2 F0                MOVX    @DPTR,A
  595: 		j = TestDeviceCommOK( iDevice );		
8087D3 901748            MOV     DPTR,#iDevice
8087D6 A512809080        ECALL   ?L?COM001D
  596: 	}		
8087DB 80D8              SJMP    ?C0159?COMMONFUNCTION
8087DD         ?C0160?COMMONFUNCTION:
  597: 	if ( i )	
8087DD 90174A            MOV     DPTR,#i
8087E0 E0                MOVX    A,@DPTR
8087E1 7F00              MOV     R7,#00H
8087E3 6002              JZ      ?C0161?COMMONFUNCTION
  598: 	{
  599: 		return 1;//超时
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 299


8087E5 7F01              MOV     R7,#01H
  600: 	}
8087E7         ?C0161?COMMONFUNCTION:
  601: //	if ( TestDeviceException( iDevice ) )
  602: //	{
  603: //		return 2;//故障
  604: //	}
  605: 	Trace("\n HopperOutCoin OK" );
  606: 	return 0; // 正常返回
  607: }
8087E7         ?C0162?COMMONFUNCTION:
8087E7 A522              ERET    
----- FUNCTION _HopperOutCoin (END) -------


----- FUNCTION Mission (BEGIN) -----
 FILE: 'mainflow.c'
 3654: void Mission()
 3655: {		
 3656: 	if ( IsShortMsgIn())
 3657: 	{	
8087E9 A51281420B        ECALL   IsShortMsgIn
8087EE 5006              JNC     ?C0784?MAINFLOW
 3658:  		IsShortMessageIn = 1;
 3659: 		Trace("Have SMS come in ");
8087F0 900AF0            MOV     DPTR,#IsShortMessageIn
8087F3 7401              MOV     A,#01H
8087F5 F0                MOVX    @DPTR,A
 3660: 	}
 3661: }
8087F6         ?C0784?MAINFLOW:
8087F6 A522              ERET    
----- FUNCTION Mission (END) -------


----- FUNCTION ?L?COM003A (BEGIN) -----
8087F8 E0                MOVX    A,@DPTR
8087F9 FE                MOV     R6,A
8087FA A3                INC     DPTR
8087FB E0                MOVX    A,@DPTR
8087FC FF                MOV     R7,A
----- FUNCTION _TestDeviceTimeOut (BEGIN) -----
 FILE: 'scheduler.c'
  798: uchar TestDeviceTimeOut( struct DEVICE xdata* Device )
  799: {
;---- Variable 'Device' assigned to Register 'R6/R7' ----
  800: 	uchar data ch;
  801: 
  802: 	ch = Device->CommState;
8087FD 8F82              MOV     DPL,R7
8087FF 8E83              MOV     DPH,R6
808801 A3                INC     DPTR
808802 A3                INC     DPTR
808803 E0                MOVX    A,@DPTR
808804 F528              MOV     ch,A
  803: 	Device->CommState &= ~ COMM_TIMEOUT;
808806 8F82              MOV     DPL,R7
808808 8E83              MOV     DPH,R6
80880A A3                INC     DPTR
80880B A3                INC     DPTR
80880C 54FD              ANL     A,#0FDH
80880E F0                MOVX    @DPTR,A
  804: 
  805: 	return( ch & COMM_TIMEOUT );
80880F E528              MOV     A,ch
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 300


808811 5402              ANL     A,#02H
808813 FF                MOV     R7,A
  806: }
808814         ?C0161?SCHEDULER:
808814 A522              ERET    
----- FUNCTION _TestDeviceTimeOut (END) -------


----- FUNCTION ?L?COM0001 (BEGIN) -----
808816 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808819 F0                MOVX    @DPTR,A
80881A D21B              SETB    ?_DisplayCursorState?BIT+01H
80881C 7D01              MOV     R5,#01H
80881E FF                MOV     R7,A
80881F A51280897C        ECALL   _DisplayCursorState
808824         ?L?COM0002:
808824 900B27            MOV     DPTR,#DisplayLine
808827 7408              MOV     A,#08H
808829         ?L?COM0003:
808829 F0                MOVX    @DPTR,A
80882A D21A              SETB    ?_DisplayStr?BIT
80882C E0                MOVX    A,@DPTR
80882D FF                MOV     R7,A
80882E 25E0              ADD     A,ACC
808830 25E0              ADD     A,ACC
808832 2471              ADD     A,#LOW DispInformationTable
808834 F582              MOV     DPL,A
808836 E4                CLR     A
808837 3404              ADDC    A,#HIGH DispInformationTable
808839 F583              MOV     DPH,A
80883B A5128007C0        ECALL   ?C?PLDCODE
808840 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
808843 A5128007B6        ECALL   ?C?PSTXDATA
808848 EF                MOV     A,R7
808849 25E0              ADD     A,ACC
80884B 25E0              ADD     A,ACC
80884D 2474              ADD     A,#LOW DispInformationTable+03H
80884F F582              MOV     DPL,A
808851 E4                CLR     A
808852 3404              ADDC    A,#HIGH DispInformationTable+03H
808854         ?L?COM0004:
808854 F583              MOV     DPH,A
808856         ?L?COM0005:
808856 E4                CLR     A
808857 93                MOVC    A,@A+DPTR
808858         ?L?COM0006:
808858 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80885B         ?L?COM0007:
80885B F0                MOVX    @DPTR,A
80885C E4                CLR     A
80885D FD                MOV     R5,A
80885E FF                MOV     R7,A
----- FUNCTION _DisplayStr (BEGIN) -----
 FILE: 'CommonFunction.c'
  126: void  DisplayStr( u_char x, u_char y, bit flag, u_char *str, const u_char len )
  127: {	
80885F 901814            MOV     DPTR,#x
808862 EF                MOV     A,R7
808863 F0                MOVX    @DPTR,A
808864 A3                INC     DPTR
808865 ED                MOV     A,R5
808866 F0                MOVX    @DPTR,A
  128: 	u_char xdata timeflag = 1;
  129: 	u_char xdata clearstr[] = "                    ";
808867 90181A            MOV     DPTR,#timeflag
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 301


80886A 7401              MOV     A,#01H
80886C F0                MOVX    @DPTR,A
  130: 	u_char xdata tempstr[20];
80886D 781B              MOV     R0,#LOW clearstr
80886F 7C18              MOV     R4,#HIGH clearstr
808871 7D00              MOV     R5,#?C?XDATASEG
808873 7B80              MOV     R3,#BYTE2 _?ix1000
808875 7A17              MOV     R2,#HIGH _?ix1000
808877 79FF              MOV     R1,#LOW _?ix1000
808879 7E00              MOV     R6,#00H
80887B 7F15              MOV     R7,#015H
80887D A51280052D        ECALL   ?C?COPY
  131: 	u_char xdata i = 0;
808882 E4                CLR     A
808883 901844            MOV     DPTR,#i
808886 F0                MOVX    @DPTR,A
  132: 	u_char xdata j = 0;
808887 A3                INC     DPTR
808888 F0                MOVX    @DPTR,A
  133: 
  134: 	memset( tempstr, 0x20, sizeof( tempstr ) );
808889 FE                MOV     R6,A
80888A 7F14              MOV     R7,#014H
80888C 7D20              MOV     R5,#020H
80888E 7B00              MOV     R3,#?C?XDATASEG
808890 7A18              MOV     R2,#HIGH tempstr
808892 7930              MOV     R1,#LOW tempstr
808894 A5128008A6        ECALL   ?C?MEMSET
  135: 	if( flag == 0 )//在当前位置显示				
808899 201A14            JB      flag,?C0028?COMMONFUNCTION
  136: 		i = DisplayString( str, len );		
80889C 901816            MOV     DPTR,#str
80889F A5128007AC        ECALL   ?C?PLDXDATA
8088A4 901819            MOV     DPTR,#len
8088A7 E0                MOVX    A,@DPTR
8088A8 FD                MOV     R5,A
8088A9 A512812DCB        ECALL   _DisplayString
8088AE 806A              SJMP    ?C0258?COMMONFUNCTION
8088B0         ?C0028?COMMONFUNCTION:
  137: 	else
  138: 	{				
  139: 		if( ( x + len ) < 20 )			
8088B0 901819            MOV     DPTR,#len
8088B3 E0                MOVX    A,@DPTR
8088B4 FF                MOV     R7,A
8088B5 FD                MOV     R5,A
8088B6 901814            MOV     DPTR,#x
8088B9 E0                MOVX    A,@DPTR
8088BA 2D                ADD     A,R5
8088BB FD                MOV     R5,A
8088BC E4                CLR     A
8088BD 33                RLC     A
8088BE FC                MOV     R4,A
8088BF C3                CLR     C
8088C0 ED                MOV     A,R5
8088C1 9414              SUBB    A,#014H
8088C3 EC                MOV     A,R4
8088C4 6480              XRL     A,#080H
8088C6 9480              SUBB    A,#080H
8088C8 5018              JNC     ?C0030?COMMONFUNCTION
  140: 			memcpy( tempstr + x, str, len );		
8088CA 7E00              MOV     R6,#00H
8088CC E0                MOVX    A,@DPTR
8088CD 2430              ADD     A,#LOW tempstr
8088CF F9                MOV     R1,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 302


8088D0 E4                CLR     A
8088D1 3418              ADDC    A,#HIGH tempstr
8088D3 A801              MOV     R0,AR1
8088D5 FC                MOV     R4,A
8088D6 7D00              MOV     R5,#?C?XDATASEG
8088D8 901816            MOV     DPTR,#str
8088DB A5128007AC        ECALL   ?C?PLDXDATA
8088E0 801B              SJMP    ?C0259?COMMONFUNCTION
8088E2         ?C0030?COMMONFUNCTION:
  141: 		else
  142: 			memcpy( tempstr + x, str, 20 );
8088E2 901814            MOV     DPTR,#x
8088E5 E0                MOVX    A,@DPTR
8088E6 2430              ADD     A,#LOW tempstr
8088E8 F9                MOV     R1,A
8088E9 E4                CLR     A
8088EA 3418              ADDC    A,#HIGH tempstr
8088EC A801              MOV     R0,AR1
8088EE FC                MOV     R4,A
8088EF 7D00              MOV     R5,#?C?XDATASEG
8088F1 901816            MOV     DPTR,#str
8088F4 A5128007AC        ECALL   ?C?PLDXDATA
8088F9 7E00              MOV     R6,#00H
8088FB 7F14              MOV     R7,#014H
8088FD         
8088FD A51280052D        ECALL   ?C?COPY
808902         ?C0031?COMMONFUNCTION:
  143: //		len = 20;		
  144: 		i = DisplayPosString( 0, y, tempstr, 20 );//设置屏幕字串
808902 901815            MOV     DPTR,#y
808905 E0                MOVX    A,@DPTR
808906 FD                MOV     R5,A
808907 7B00              MOV     R3,#?C?XDATASEG
808909 7A18              MOV     R2,#HIGH tempstr
80890B 7930              MOV     R1,#LOW tempstr
80890D 90184B            MOV     DPTR,#?_DisplayPosString?BYTE+05H
808910 7414              MOV     A,#014H
808912 F0                MOVX    @DPTR,A
808913 E4                CLR     A
808914 FF                MOV     R7,A
808915 A51280CBE5        ECALL   _DisplayPosString
80891A         
80891A E4                CLR     A
80891B 33                RLC     A
80891C 901844            MOV     DPTR,#i
80891F F0                MOVX    @DPTR,A
  145: 	}	
808920         ?C0029?COMMONFUNCTION:
  146: 	if( i == 0 )
808920 901844            MOV     DPTR,#i
808923 E0                MOVX    A,@DPTR
808924 6037              JZ      ?C0033?COMMONFUNCTION
808926         ?C0032?COMMONFUNCTION:
  147: 		return ;
  148: 	i = 0;
808926 E4                CLR     A
808927 901844            MOV     DPTR,#i
80892A F0                MOVX    @DPTR,A
  149: 	j = 0;
80892B A3                INC     DPTR
80892C F0                MOVX    @DPTR,A
80892D         ?C0034?COMMONFUNCTION:
  150: 	while( ! ( i || j ) )
80892D 901844            MOV     DPTR,#i
808930 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 303


808931 702A              JNZ     ?C0033?COMMONFUNCTION
808933 A3                INC     DPTR
808934 E0                MOVX    A,@DPTR
808935 7026              JNZ     ?C0033?COMMONFUNCTION
  151: 	{
  152: 		WaitForWork( 50, NULL );
808937 7F32              MOV     R7,#032H
808939 FE                MOV     R6,A
80893A A512808330        ECALL   ?L?COM000D
  153: 		i = TestDeviceTimeOut( &Lcd );
80893F 7E23              MOV     R6,#HIGH Lcd
808941 7F69              MOV     R7,#LOW Lcd
808943 A5128087FD        ECALL   _TestDeviceTimeOut
808948 901844            MOV     DPTR,#i
80894B EF                MOV     A,R7
80894C F0                MOVX    @DPTR,A
  154: 		j = TestDeviceCommOK( &Lcd );		
80894D 7E23              MOV     R6,#HIGH Lcd
80894F 7F69              MOV     R7,#LOW Lcd
808951 A512809085        ECALL   _TestDeviceCommOK
808956 901845            MOV     DPTR,#j
808959 EF                MOV     A,R7
80895A F0                MOVX    @DPTR,A
  155: 	}
80895B 80D0              SJMP    ?C0034?COMMONFUNCTION
  156: //	WaitForWork( 3000, &Lcd );
  157: }
80895D         ?C0033?COMMONFUNCTION:
80895D A522              ERET    
----- FUNCTION _DisplayStr (END) -------


----- FUNCTION ?L?COM000E (BEGIN) -----
80895F E4                CLR     A
808960 93                MOVC    A,@A+DPTR
808961 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
808964 F0                MOVX    @DPTR,A
808965 7D01              MOV     R5,#01H
808967 E4                CLR     A
808968 FF                MOV     R7,A
808969 A51280885F        ECALL   _DisplayStr
80896E         ?L?COM000F:
80896E D21A              SETB    ?_DisplayCursorState?BIT
808970 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808973 7402              MOV     A,#02H
808975 F0                MOVX    @DPTR,A
808976 D21B              SETB    ?_DisplayCursorState?BIT+01H
808978 7D01              MOV     R5,#01H
80897A E4                CLR     A
80897B FF                MOV     R7,A
----- FUNCTION _DisplayCursorState (BEGIN) -----
 FILE: 'CommonFunction.c'
  490: void  DisplayCursorState( u_char x, u_char y, bit posflag, u_char state, bit stateflag   )
  491: {		
;---- Variable 'y' assigned to Register 'R5' ----
;---- Variable 'x' assigned to Register 'R7' ----
  492: 	u_char xdata i = 0;
  493: 	u_char xdata j = 0;
80897C E4                CLR     A
80897D 901794            MOV     DPTR,#i
808980 F0                MOVX    @DPTR,A
  494: 
808981 A3                INC     DPTR
808982 F0                MOVX    @DPTR,A
  495: 	if( posflag == 1 )	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 304


808983 301A0B            JNB     posflag,?C0124?COMMONFUNCTION
  496: 		i = DisplaySetCursorPos( x, y );	
808986 A51280CEC1        ECALL   _DisplaySetCursorPos
80898B E4                CLR     A
80898C 33                RLC     A
80898D 901794            MOV     DPTR,#i
808990 F0                MOVX    @DPTR,A
808991         ?C0124?COMMONFUNCTION:
  497: 	if( stateflag == 1 )			
808991 301B10            JNB     stateflag,?C0125?COMMONFUNCTION
  498: 		i = DisplaySetCursorStyle( state );
808994 901793            MOV     DPTR,#state
808997 E0                MOVX    A,@DPTR
808998 FF                MOV     R7,A
808999 A512812E2D        ECALL   _DisplaySetCursorStyle
80899E E4                CLR     A
80899F 33                RLC     A
8089A0 901794            MOV     DPTR,#i
8089A3 F0                MOVX    @DPTR,A
8089A4         ?C0125?COMMONFUNCTION:
  499: 
  500: 	if( i == 0 )
8089A4 901794            MOV     DPTR,#i
8089A7 E0                MOVX    A,@DPTR
8089A8 6037              JZ      ?C0127?COMMONFUNCTION
8089AA         ?C0126?COMMONFUNCTION:
  501: 		return ;
  502: 	i = 0;
8089AA E4                CLR     A
8089AB 901794            MOV     DPTR,#i
8089AE F0                MOVX    @DPTR,A
  503: 	j = 0;
8089AF A3                INC     DPTR
8089B0 F0                MOVX    @DPTR,A
8089B1         ?C0128?COMMONFUNCTION:
  504: 	while( ! ( i || j ) )
8089B1 901794            MOV     DPTR,#i
8089B4 E0                MOVX    A,@DPTR
8089B5 702A              JNZ     ?C0127?COMMONFUNCTION
8089B7 A3                INC     DPTR
8089B8 E0                MOVX    A,@DPTR
8089B9 7026              JNZ     ?C0127?COMMONFUNCTION
  505: 	{
  506: 		WaitForWork( 50, NULL );
8089BB 7F32              MOV     R7,#032H
8089BD FE                MOV     R6,A
8089BE A512808330        ECALL   ?L?COM000D
  507: 		i = TestDeviceTimeOut( &Lcd );
8089C3 7E23              MOV     R6,#HIGH Lcd
8089C5 7F69              MOV     R7,#LOW Lcd
8089C7 A5128087FD        ECALL   _TestDeviceTimeOut
8089CC 901794            MOV     DPTR,#i
8089CF EF                MOV     A,R7
8089D0 F0                MOVX    @DPTR,A
  508: 		j = TestDeviceCommOK( &Lcd );		
8089D1 7E23              MOV     R6,#HIGH Lcd
8089D3 7F69              MOV     R7,#LOW Lcd
8089D5 A512809085        ECALL   _TestDeviceCommOK
8089DA 901795            MOV     DPTR,#j
8089DD EF                MOV     A,R7
8089DE F0                MOVX    @DPTR,A
  509: 	}
8089DF 80D0              SJMP    ?C0128?COMMONFUNCTION
  510: //	WaitForWork( 3000, &Lcd );
  511: }
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 305


8089E1         ?C0127?COMMONFUNCTION:
8089E1 A522              ERET    
----- FUNCTION _DisplayCursorState (END) -------


----- FUNCTION GoodsMainMenu (BEGIN) -----
 FILE: 'countermaint.c'
  323: void GoodsMainMenu()
  324: {
  325:     /*菜单参数初始化*/
  326: 	u_char  xdata firstNum = 1;//一级菜单编号
8089E3 901732            MOV     DPTR,#firstNum
8089E6 7401              MOV     A,#01H
8089E8 F0                MOVX    @DPTR,A
  327: 	u_char  xdata LineNum = 2;//选中屏幕的行号		
8089E9 A3                INC     DPTR
8089EA 04                INC     A
8089EB F0                MOVX    @DPTR,A
  328: 	u_char  xdata key = 0;
8089EC E4                CLR     A
8089ED A3                INC     DPTR
8089EE F0                MOVX    @DPTR,A
  329: 	bit	data Notout = 1;
8089EF D219              SETB    Notout
  330: 	u_char xdata len = 0; //GetData的返回值
8089F1 A3                INC     DPTR
8089F2 F0                MOVX    @DPTR,A
  331: 
  332: 	ClearKey();
8089F3 A512808FA5        ECALL   ClearKey
  333: 	/*菜单初始化显示*/	
  334: 	DisplayTraceSum( 0, 0 );
8089F8 E4                CLR     A
8089F9 FD                MOV     R5,A
8089FA FF                MOV     R7,A
8089FB A512805D5A        ECALL   _DisplayTraceSum
  335: 	DisplayTraceSum( 1, 1 );
808A00 7D01              MOV     R5,#01H
808A02 7F01              MOV     R7,#01H
808A04 A512805D5A        ECALL   _DisplayTraceSum
  336: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态	
808A09 A51280896E        ECALL   ?L?COM000F
808A0E         ?C0044?COUNTERMAINT:
  337: 	while( Notout )
808A0E 201903            JB      Notout,$ + 6H
808A11 028B7E            LJMP    ?C0073?COUNTERMAINT
  338: 	{		
  339: 		/*判断按下何键*/	
  340: 		key = GetKey();
808A14 A5128096D1        ECALL   GetKey
808A19 901734            MOV     DPTR,#key
808A1C EF                MOV     A,R7
808A1D F0                MOVX    @DPTR,A
  341: 		switch( key )		
808A1E 24F3              ADD     A,#0F3H
808A20 7003              JNZ     $ + 5H
808A22 028AE5            LJMP    ?C0062?COUNTERMAINT
808A25 24F2              ADD     A,#0F2H
808A27 7003              JNZ     $ + 5H
808A29 028AE1            LJMP    ?C0061?COUNTERMAINT
808A2C 24CB              ADD     A,#0CBH
808A2E 6063              JZ      ?C0054?COUNTERMAINT
808A30 2408              ADD     A,#08H
808A32 6003              JZ      $ + 5H
808A34 028B61            LJMP    ?C0046?COUNTERMAINT
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 306


  342: 		{
  343: 			case KEY_UP://上移  	
808A37         ?C0047?COUNTERMAINT:
  344: 			    if( LineNum == 2 )//选中标记上移
808A37 901733            MOV     DPTR,#LineNum
808A3A E0                MOVX    A,@DPTR
808A3B 6402              XRL     A,#02H
808A3D 7029              JNZ     ?C0048?COUNTERMAINT
  345: 			    {			     
  346: 			    	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
808A3F D21A              SETB    ?_DisplayCursorState?BIT
808A41 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808A44 7402              MOV     A,#02H
808A46 F0                MOVX    @DPTR,A
808A47 D21B              SETB    ?_DisplayCursorState?BIT+01H
808A49 E4                CLR     A
808A4A FD                MOV     R5,A
808A4B FF                MOV     R7,A
808A4C A51280897C        ECALL   _DisplayCursorState
  347: 			    	LineNum = 1;
808A51 901733            MOV     DPTR,#LineNum
808A54 7401              MOV     A,#01H
808A56 F0                MOVX    @DPTR,A
  348: 					if( firstNum == 0 )
808A57 901732            MOV     DPTR,#firstNum
808A5A E0                MOVX    A,@DPTR
808A5B 7002              JNZ     ?C0049?COUNTERMAINT
  349: 						firstNum = MENU_COUNT( GoodsMianMenuStr ) - 1;					
808A5D 807C              SJMP    ?C0175?COUNTERMAINT
808A5F         ?C0049?COUNTERMAINT:
  350: 					else
  351: 						firstNum--;			    
808A5F 901732            MOV     DPTR,#firstNum
808A62 E0                MOVX    A,@DPTR
808A63 14                DEC     A
808A64 F0                MOVX    @DPTR,A
  352: 			     }
808A65 028B61            LJMP    ?C0046?COUNTERMAINT
808A68         ?C0048?COUNTERMAINT:
  353: 			     else//菜单上翻
  354: 			     {
  355: 				 	DisplayTraceSum( 1, firstNum );
808A68 A512805D53        ECALL   ?L?COM002A
  356: 			     //	DisplayStr( 0, 1, 1, GoodsMianMenuStr[firstNum].str, GoodsMianMenuStr[firstNum].len );	 					  
  357: 				  	if( firstNum == 0 )
808A6D 901732            MOV     DPTR,#firstNum
808A70 E0                MOVX    A,@DPTR
808A71 7005              JNZ     ?C0052?COUNTERMAINT
  358: 				  		firstNum = MENU_COUNT( GoodsMianMenuStr ) - 1;					
808A73 7402              MOV     A,#02H
808A75 F0                MOVX    @DPTR,A
808A76 8006              SJMP    ?C0053?COUNTERMAINT
808A78         ?C0052?COUNTERMAINT:
  359: 				  	else
  360: 						firstNum--;										
808A78 901732            MOV     DPTR,#firstNum
808A7B E0                MOVX    A,@DPTR
808A7C 14                DEC     A
808A7D F0                MOVX    @DPTR,A
808A7E         ?C0053?COUNTERMAINT:
  361: 					DisplayTraceSum( 0, firstNum );
808A7E 901732            MOV     DPTR,#firstNum
808A81 E0                MOVX    A,@DPTR
808A82 FD                MOV     R5,A
808A83 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 307


808A84 FF                MOV     R7,A
808A85 A512805D5A        ECALL   _DisplayTraceSum
  362: 				//	DisplayStr( 0, 0, 1, GoodsMianMenuStr[firstNum].str, GoodsMianMenuStr[firstNum].len );				   
  363: 				  	LineNum = 1;										
808A8A 901733            MOV     DPTR,#LineNum
808A8D 7401              MOV     A,#01H
808A8F F0                MOVX    @DPTR,A
  364: 			     }
  365: 				 break;
808A90 028B61            LJMP    ?C0046?COUNTERMAINT
  366: 			case KEY_DOWN://下移				
808A93         ?C0054?COUNTERMAINT:
  367: 				if( LineNum == 1 )//选中标记下移
808A93 901733            MOV     DPTR,#LineNum
808A96 E0                MOVX    A,@DPTR
808A97 6401              XRL     A,#01H
808A99 701B              JNZ     ?C0055?COUNTERMAINT
  368: 				{			
  369: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
808A9B A51280896E        ECALL   ?L?COM000F
  370: 					 if( firstNum == MENU_COUNT( GoodsMianMenuStr ) - 1 )
808AA0 901732            MOV     DPTR,#firstNum
808AA3 E0                MOVX    A,@DPTR
808AA4 B40204            CJNE    A,#02H,?C0056?COUNTERMAINT
  371: 						firstNum = 0;					
808AA7 E4                CLR     A
808AA8 F0                MOVX    @DPTR,A
808AA9 8006              SJMP    ?C0057?COUNTERMAINT
808AAB         ?C0056?COUNTERMAINT:
  372: 					 else						
  373: 				    	firstNum++;				     
808AAB 901732            MOV     DPTR,#firstNum
808AAE E0                MOVX    A,@DPTR
808AAF 04                INC     A
808AB0 F0                MOVX    @DPTR,A
808AB1         ?C0057?COUNTERMAINT:
  374: 				     LineNum = 2;				     
808AB1 901733            MOV     DPTR,#LineNum
808AB4         
  375: 				 }
808AB4 8025              SJMP    ?C0175?COUNTERMAINT
808AB6         ?C0055?COUNTERMAINT:
  376: 				 else//菜单下翻
  377: 				 {
  378: 				 //	DisplayStr( 0, 0, 1, GoodsMianMenuStr[firstNum].str, GoodsMianMenuStr[firstNum].len );
  379: 				 	DisplayTraceSum( 0, firstNum );
808AB6 901732            MOV     DPTR,#firstNum
808AB9 E0                MOVX    A,@DPTR
808ABA FD                MOV     R5,A
808ABB E4                CLR     A
808ABC FF                MOV     R7,A
808ABD A512805D5A        ECALL   _DisplayTraceSum
  380: 					if( firstNum == MENU_COUNT( GoodsMianMenuStr ) - 1 )
808AC2 901732            MOV     DPTR,#firstNum
808AC5 E0                MOVX    A,@DPTR
808AC6 B40204            CJNE    A,#02H,?C0059?COUNTERMAINT
  381: 						firstNum = 0;					
808AC9 E4                CLR     A
808ACA F0                MOVX    @DPTR,A
808ACB 8006              SJMP    ?C0060?COUNTERMAINT
808ACD         ?C0059?COUNTERMAINT:
  382: 					else				    	 
  383: 				    	firstNum++;					  	
808ACD 901732            MOV     DPTR,#firstNum
808AD0 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 308


808AD1 04                INC     A
808AD2 F0                MOVX    @DPTR,A
808AD3         ?C0060?COUNTERMAINT:
  384: 				//	DisplayStr( 0, 1, 1, GoodsMianMenuStr[firstNum].str, GoodsMianMenuStr[firstNum].len );				
  385: 					DisplayTraceSum( 1, firstNum );
808AD3 A512805D53        ECALL   ?L?COM002A
  386: 					LineNum = 2;					
808AD8 901733            MOV     DPTR,#LineNum
808ADB         
808ADB 7402              MOV     A,#02H
808ADD F0                MOVX    @DPTR,A
  387: 				}
  388: 				break;
808ADE 028B61            LJMP    ?C0046?COUNTERMAINT
  389: 			case KEY_CANCEL:
808AE1         ?C0061?COUNTERMAINT:
  390: 				Notout = 0;
808AE1 C219              CLR     Notout
  391: 				break;
808AE3 807C              SJMP    ?C0046?COUNTERMAINT
  392: 			case KEY_SUBMIT://Enter,选中了某项菜单
808AE5         ?C0062?COUNTERMAINT:
  393: 				ClearKey();				
808AE5 A512808FA5        ECALL   ClearKey
  394: 				switch( firstNum )
808AEA 901732            MOV     DPTR,#firstNum
808AED E0                MOVX    A,@DPTR
808AEE 24FE              ADD     A,#0FEH
808AF0 7005              JNZ     ?C0063?COUNTERMAINT
  395: 				{	                
  396: 					case 0://余币统计				
  397: 					case 1://正常交易统计					
  398: 						break;			
  399: 					case 2://货道售出明细
808AF2         ?C0066?COUNTERMAINT:
  400: 						GoodsWayTraceList( );
808AF2 A512808B80        ECALL   GoodsWayTraceList
  401: 						break;					
  402: 				}						
808AF7         ?C0063?COUNTERMAINT:
  403: 				if(LineNum ==2)
808AF7 901733            MOV     DPTR,#LineNum
808AFA E0                MOVX    A,@DPTR
808AFB 6402              XRL     A,#02H
808AFD 7025              JNZ     ?C0067?COUNTERMAINT
  404: 				{	
  405: 					DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态	
808AFF A51280896E        ECALL   ?L?COM000F
  406: 					if( firstNum == 0 )												
808B04 901732            MOV     DPTR,#firstNum
808B07 E0                MOVX    A,@DPTR
808B08 7004              JNZ     ?C0068?COUNTERMAINT
  407: 						DisplayTraceSum( 0, MENU_COUNT( GoodsMianMenuStr ) - 1 );
808B0A 7D02              MOV     R5,#02H
808B0C 8007              SJMP    ?C0172?COUNTERMAINT
808B0E         ?C0068?COUNTERMAINT:
  408: 					else						
  409: 						DisplayTraceSum( 0, firstNum - 1 );
808B0E 901732            MOV     DPTR,#firstNum
808B11 E0                MOVX    A,@DPTR
808B12 14                DEC     A
808B13 FD                MOV     R5,A
808B14 E4                CLR     A
808B15         
808B15 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 309


808B16 A512805D5A        ECALL   _DisplayTraceSum
808B1B         ?C0069?COUNTERMAINT:
  410: 					DisplayTraceSum( 1, firstNum );	
808B1B 901732            MOV     DPTR,#firstNum
808B1E E0                MOVX    A,@DPTR
808B1F FD                MOV     R5,A
808B20 7F01              MOV     R7,#01H
  411: 				}
808B22 8030              SJMP    ?C0176?COUNTERMAINT
808B24         ?C0067?COUNTERMAINT:
  412: 				else
  413: 				{	
  414: 					DisplayCursorState( 0, 0, 1, 2, 1 );//设置当在第二行上且为整行光标状态	
808B24 D21A              SETB    ?_DisplayCursorState?BIT
808B26 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808B29 7402              MOV     A,#02H
808B2B F0                MOVX    @DPTR,A
808B2C D21B              SETB    ?_DisplayCursorState?BIT+01H
808B2E E4                CLR     A
808B2F FD                MOV     R5,A
808B30 FF                MOV     R7,A
808B31 A51280897C        ECALL   _DisplayCursorState
  415: 					if( firstNum == ( MENU_COUNT( GoodsMianMenuStr ) - 1 ) )				
808B36 901732            MOV     DPTR,#firstNum
808B39 E0                MOVX    A,@DPTR
808B3A B40203            CJNE    A,#02H,?C0071?COUNTERMAINT
  416: 						DisplayTraceSum( 1, 0 );
808B3D E4                CLR     A
808B3E 8005              SJMP    ?C0173?COUNTERMAINT
808B40         ?C0071?COUNTERMAINT:
  417: 					else				    	
  418: 						DisplayTraceSum( 1, firstNum + 1 );
808B40 901732            MOV     DPTR,#firstNum
808B43 E0                MOVX    A,@DPTR
808B44 04                INC     A
808B45         
808B45 FD                MOV     R5,A
808B46 7F01              MOV     R7,#01H
808B48 A512805D5A        ECALL   _DisplayTraceSum
808B4D         ?C0072?COUNTERMAINT:
  419: 					DisplayTraceSum( 0, firstNum );
808B4D 901732            MOV     DPTR,#firstNum
808B50 E0                MOVX    A,@DPTR
808B51 FD                MOV     R5,A
808B52 E4                CLR     A
808B53 FF                MOV     R7,A
808B54         
808B54 A512805D5A        ECALL   _DisplayTraceSum
  420: 				}	
808B59         ?C0070?COUNTERMAINT:
  421: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态
808B59 901733            MOV     DPTR,#LineNum
808B5C A512808F91        ECALL   ?L?COM0011
  422: 				ClearKey();		
  423: 		    	break;		
  424: 		}
808B61         ?C0046?COUNTERMAINT:
  425: 		SchedulerProcess();//让出时间片
808B61 A5128090B6        ECALL   SchedulerProcess
  426: 		WaitForWork( 100, &Lcd );
808B66 E4                CLR     A
808B67 7F64              MOV     R7,#064H
808B69 FE                MOV     R6,A
808B6A FD                MOV     R5,A
808B6B FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 310


808B6C 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
808B6F 7423              MOV     A,#HIGH Lcd
808B71 F0                MOVX    @DPTR,A
808B72 A3                INC     DPTR
808B73 7469              MOV     A,#LOW Lcd
808B75 F0                MOVX    @DPTR,A
808B76 A512808338        ECALL   _WaitForWork
  427: 	}	
808B7B 028A0E            LJMP    ?C0044?COUNTERMAINT
  428: }
808B7E         ?C0073?COUNTERMAINT:
808B7E A522              ERET    
----- FUNCTION GoodsMainMenu (END) -------


----- FUNCTION GoodsWayTraceList (BEGIN) -----
 FILE: 'countermaint.c'
  224: void GoodsWayTraceList( )
  225: {
  226:     /*菜单参数初始化*/
  227: 	u_char  xdata firstNum = 1;//一级菜单编号
808B80 901736            MOV     DPTR,#firstNum
808B83 7401              MOV     A,#01H
808B85 F0                MOVX    @DPTR,A
  228: 	u_char  xdata LineNum = 2;//选中屏幕的行号		
808B86 A3                INC     DPTR
808B87 04                INC     A
808B88 F0                MOVX    @DPTR,A
  229: 	u_char  xdata key = 0;
808B89 E4                CLR     A
808B8A A3                INC     DPTR
808B8B F0                MOVX    @DPTR,A
  230: 	u_char	xdata Notout = 1;	
808B8C A3                INC     DPTR
808B8D 04                INC     A
808B8E F0                MOVX    @DPTR,A
  231: 	u_char xdata i = 0;
808B8F E4                CLR     A
808B90 A3                INC     DPTR
808B91 F0                MOVX    @DPTR,A
  232: 	u_char xdata m_InCode = 0;
808B92 A3                INC     DPTR
808B93 F0                MOVX    @DPTR,A
  233: 	u_char xdata m_GoodsNo = 0;
808B94 A3                INC     DPTR
808B95 F0                MOVX    @DPTR,A
808B96         ?C0019?COUNTERMAINT:
  234: 
  235: 	while( 1 )
  236: 	{
  237: 		ClearDisplayLine( 1 );
808B96 A512808FAF        ECALL   ?L?COM0014
  238: 		ClearDisplayLine( 2 );			
  239: 		m_GoodsNo = 100;
808B9B 90173C            MOV     DPTR,#m_GoodsNo
808B9E 7464              MOV     A,#064H
808BA0 F0                MOVX    @DPTR,A
  240: 		m_GoodsNo = InputGoodsWayNo( 0 );		
808BA1 E4                CLR     A
808BA2 FF                MOV     R7,A
808BA3 A51280D5CE        ECALL   _InputGoodsWayNo
808BA8 90173C            MOV     DPTR,#m_GoodsNo
808BAB EF                MOV     A,R7
808BAC F0                MOVX    @DPTR,A
  241: 		if( m_GoodsNo == 100 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 311


808BAD 6464              XRL     A,#064H
808BAF 7003              JNZ     $ + 5H
808BB1 028D21            LJMP    ?C0022?COUNTERMAINT
808BB4         ?C0021?COUNTERMAINT:
  242: 			return;
  243: 		else if ( m_GoodsNo == 99 )			
808BB4 90173C            MOV     DPTR,#m_GoodsNo
808BB7 E0                MOVX    A,@DPTR
808BB8 6463              XRL     A,#063H
808BBA 703C              JNZ     ?C0020?COUNTERMAINT
  244: 	 	{
  245: 		#ifdef _CHINA_
  246: 			DisplayStr( 0, 0, 1, "编号输入错误", 12 );
  247: 			DisplayStr( 0, 1, 1, "请输入其它编号", 14 );
  248: 		#else
  249: 			DisplayStr( 0, 0, 1, "Input code error", 16 );
808BBC D21A              SETB    ?_DisplayStr?BIT
808BBE 7B80              MOV     R3,#BYTE2 08012B8H
808BC0 7A12              MOV     R2,#HIGH 08012B8H
808BC2 79B8              MOV     R1,#LOW 08012B8H
808BC4 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
808BC7 A5128007B6        ECALL   ?C?PSTXDATA
808BCC 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
808BCF 7410              MOV     A,#010H
808BD1 A51280885B        ECALL   ?L?COM0007
  250: 			DisplayStr( 0, 1, 1, "Input other code", 16 );				
808BD6 D21A              SETB    ?_DisplayStr?BIT
808BD8 7B80              MOV     R3,#BYTE2 08012C9H
808BDA 7A12              MOV     R2,#HIGH 08012C9H
808BDC 79C9              MOV     R1,#LOW 08012C9H
808BDE 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
808BE1 A5128007B6        ECALL   ?C?PSTXDATA
808BE6 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
808BE9 7410              MOV     A,#010H
808BEB A512808321        ECALL   ?L?COM000B
  251: 		#endif
  252: 			WaitForWork( 2000, NULL );
  253: 			m_GoodsNo = 100;			
808BF0 90173C            MOV     DPTR,#m_GoodsNo
808BF3 7464              MOV     A,#064H
808BF5 F0                MOVX    @DPTR,A
  254: 		}				
808BF6 809E              SJMP    ?C0019?COUNTERMAINT
  255: 		else
  256: 			break;
  257: 	}
808BF8         ?C0020?COUNTERMAINT:
  258: 	DisplayCursorState( 0, 0, 0, 0, 1 );
808BF8 C21A              CLR     ?_DisplayCursorState?BIT
808BFA E4                CLR     A
808BFB 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808BFE F0                MOVX    @DPTR,A
808BFF D21B              SETB    ?_DisplayCursorState?BIT+01H
808C01 FD                MOV     R5,A
808C02 A512808F9F        ECALL   ?L?COM0012
  259: 	Trace("\n m_GoodsNo = %bu", m_GoodsNo ); 
  260: 	ClearKey();		
  261: 	DispGoodsWayList( 0, 0, m_GoodsNo );		
808C07 90173C            MOV     DPTR,#m_GoodsNo
808C0A E0                MOVX    A,@DPTR
808C0B FB                MOV     R3,A
808C0C E4                CLR     A
808C0D FD                MOV     R5,A
808C0E FF                MOV     R7,A
808C0F A512805E72        ECALL   _DispGoodsWayList
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 312


  262: 	DispGoodsWayList( 1, 1, m_GoodsNo );			
808C14 90173C            MOV     DPTR,#m_GoodsNo
808C17 E0                MOVX    A,@DPTR
808C18 FB                MOV     R3,A
808C19 7D01              MOV     R5,#01H
808C1B 7F01              MOV     R7,#01H
808C1D A512805E72        ECALL   _DispGoodsWayList
  263: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态	
808C22 A51280896E        ECALL   ?L?COM000F
808C27         ?C0026?COUNTERMAINT:
  264: 	while( Notout )
808C27 901739            MOV     DPTR,#Notout
808C2A E0                MOVX    A,@DPTR
808C2B 7003              JNZ     $ + 5H
808C2D 028D21            LJMP    ?C0022?COUNTERMAINT
  265: 	{		
  266: 		/*判断按下何键*/	
  267: 		key = GetKey();
808C30 A5128096D1        ECALL   GetKey
808C35 901738            MOV     DPTR,#key
808C38 EF                MOV     A,R7
808C39 F0                MOVX    @DPTR,A
  268: 		switch( key )		
808C3A 24E5              ADD     A,#0E5H
808C3C 7003              JNZ     $ + 5H
808C3E 028CFF            LJMP    ?C0043?COUNTERMAINT
808C41 24CB              ADD     A,#0CBH
808C43 6068              JZ      ?C0036?COUNTERMAINT
808C45 2408              ADD     A,#08H
808C47 6003              JZ      $ + 5H
808C49 028D04            LJMP    ?C0028?COUNTERMAINT
  269: 		{
  270: 			case KEY_UP://上移  	
808C4C         ?C0029?COUNTERMAINT:
  271: 			    if( LineNum == 2 )//选中标记上移
808C4C 901737            MOV     DPTR,#LineNum
808C4F E0                MOVX    A,@DPTR
808C50 6402              XRL     A,#02H
808C52 702A              JNZ     ?C0030?COUNTERMAINT
  272: 			    {			     
  273: 			    	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
808C54 D21A              SETB    ?_DisplayCursorState?BIT
808C56 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808C59 7402              MOV     A,#02H
808C5B F0                MOVX    @DPTR,A
808C5C D21B              SETB    ?_DisplayCursorState?BIT+01H
808C5E E4                CLR     A
808C5F FD                MOV     R5,A
808C60 FF                MOV     R7,A
808C61 A51280897C        ECALL   _DisplayCursorState
  274: 			    	LineNum = 1;
808C66 901737            MOV     DPTR,#LineNum
808C69 7401              MOV     A,#01H
808C6B F0                MOVX    @DPTR,A
  275: 					if( firstNum == 0 )					
808C6C 901736            MOV     DPTR,#firstNum
808C6F E0                MOVX    A,@DPTR
808C70 7003              JNZ     ?C0031?COUNTERMAINT
  276: 						//正常交易明细	
  277: 						firstNum = MENU_COUNT( GoodsWayListStr ) - 1;											
808C72 028CFA            LJMP    ?C0171?COUNTERMAINT
808C75         ?C0031?COUNTERMAINT:
  278: 					else
  279: 						firstNum--;			    
808C75 901736            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 313


808C78 E0                MOVX    A,@DPTR
808C79 14                DEC     A
808C7A F0                MOVX    @DPTR,A
  280: 			     }
808C7B 028D04            LJMP    ?C0028?COUNTERMAINT
808C7E         ?C0030?COUNTERMAINT:
  281: 			     else//菜单上翻
  282: 			     {		   		     	
  283: 			 		DispGoodsWayList( firstNum, 1, m_GoodsNo );	
808C7E A512805E66        ECALL   ?L?COM002E
  284: 					if( firstNum == 0 )													
808C83 901736            MOV     DPTR,#firstNum
808C86 E0                MOVX    A,@DPTR
808C87 7005              JNZ     ?C0034?COUNTERMAINT
  285: 			  			firstNum = MENU_COUNT( GoodsWayListStr ) - 1;
808C89 7402              MOV     A,#02H
808C8B F0                MOVX    @DPTR,A
808C8C 8006              SJMP    ?C0035?COUNTERMAINT
808C8E         ?C0034?COUNTERMAINT:
  286: 					else
  287: 						firstNum--;	
808C8E 901736            MOV     DPTR,#firstNum
808C91 E0                MOVX    A,@DPTR
808C92 14                DEC     A
808C93 F0                MOVX    @DPTR,A
808C94         ?C0035?COUNTERMAINT:
  288: 				   	DispGoodsWayList( firstNum, 0, m_GoodsNo );											
808C94 901736            MOV     DPTR,#firstNum
808C97 E0                MOVX    A,@DPTR
808C98 FF                MOV     R7,A
808C99 90173C            MOV     DPTR,#m_GoodsNo
808C9C E0                MOVX    A,@DPTR
808C9D FB                MOV     R3,A
808C9E E4                CLR     A
808C9F FD                MOV     R5,A
808CA0 A512805E72        ECALL   _DispGoodsWayList
  289: 				  	LineNum = 1;										
808CA5 901737            MOV     DPTR,#LineNum
808CA8 7401              MOV     A,#01H
808CAA F0                MOVX    @DPTR,A
  290: 			     }
  291: 				 break;
808CAB 8057              SJMP    ?C0028?COUNTERMAINT
  292: 			case KEY_DOWN://下移				
808CAD         ?C0036?COUNTERMAINT:
  293: 				if( LineNum == 1 )//选中标记下移
808CAD 901737            MOV     DPTR,#LineNum
808CB0 E0                MOVX    A,@DPTR
808CB1 6401              XRL     A,#01H
808CB3 701B              JNZ     ?C0037?COUNTERMAINT
  294: 				{			
  295: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标						 
808CB5 A51280896E        ECALL   ?L?COM000F
  296: 				 	if( firstNum == MENU_COUNT( GoodsWayListStr ) - 1 )
808CBA 901736            MOV     DPTR,#firstNum
808CBD E0                MOVX    A,@DPTR
808CBE B40204            CJNE    A,#02H,?C0038?COUNTERMAINT
  297: 						firstNum = 0;					
808CC1 E4                CLR     A
808CC2 F0                MOVX    @DPTR,A
808CC3 8006              SJMP    ?C0039?COUNTERMAINT
808CC5         ?C0038?COUNTERMAINT:
  298: 				 	else						
  299: 			    		firstNum++;										 
808CC5 901736            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 314


808CC8 E0                MOVX    A,@DPTR
808CC9 04                INC     A
808CCA F0                MOVX    @DPTR,A
808CCB         ?C0039?COUNTERMAINT:
  300: 				     LineNum = 2;				     
808CCB 901737            MOV     DPTR,#LineNum
808CCE         
  301: 				 }
808CCE 802A              SJMP    ?C0171?COUNTERMAINT
808CD0         ?C0037?COUNTERMAINT:
  302: 				 else//菜单下翻
  303: 				 {				 	
  304: 			 		DispGoodsWayList( firstNum, 0, m_GoodsNo );
808CD0 901736            MOV     DPTR,#firstNum
808CD3 E0                MOVX    A,@DPTR
808CD4 FF                MOV     R7,A
808CD5 90173C            MOV     DPTR,#m_GoodsNo
808CD8 E0                MOVX    A,@DPTR
808CD9 FB                MOV     R3,A
808CDA E4                CLR     A
808CDB FD                MOV     R5,A
808CDC A512805E72        ECALL   _DispGoodsWayList
  305: 					if( firstNum == MENU_COUNT( GoodsWayListStr ) - 1 )
808CE1 901736            MOV     DPTR,#firstNum
808CE4 E0                MOVX    A,@DPTR
808CE5 B40204            CJNE    A,#02H,?C0041?COUNTERMAINT
  306: 						firstNum = 0;					
808CE8 E4                CLR     A
808CE9 F0                MOVX    @DPTR,A
808CEA 8006              SJMP    ?C0042?COUNTERMAINT
808CEC         ?C0041?COUNTERMAINT:
  307: 				 	else						
  308: 			    		firstNum++;				     
808CEC 901736            MOV     DPTR,#firstNum
808CEF E0                MOVX    A,@DPTR
808CF0 04                INC     A
808CF1 F0                MOVX    @DPTR,A
808CF2         ?C0042?COUNTERMAINT:
  309: 					DispGoodsWayList( firstNum, 1, m_GoodsNo );															
808CF2 A512805E66        ECALL   ?L?COM002E
  310: 					LineNum = 2;					
808CF7 901737            MOV     DPTR,#LineNum
808CFA         
808CFA 7402              MOV     A,#02H
808CFC F0                MOVX    @DPTR,A
  311: 				}
  312: 				break;
808CFD 8005              SJMP    ?C0028?COUNTERMAINT
  313: 			case KEY_CANCEL:
808CFF         ?C0043?COUNTERMAINT:
  314: 				Notout = 0;
808CFF E4                CLR     A
808D00 901739            MOV     DPTR,#Notout
808D03 F0                MOVX    @DPTR,A
  315: 				break;													
  316: 		}
808D04         ?C0028?COUNTERMAINT:
  317: 		SchedulerProcess();//让出时间片
808D04 A5128090B6        ECALL   SchedulerProcess
  318: 		WaitForWork( 100, &Lcd );
808D09 E4                CLR     A
808D0A 7F64              MOV     R7,#064H
808D0C FE                MOV     R6,A
808D0D FD                MOV     R5,A
808D0E FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 315


808D0F 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
808D12 7423              MOV     A,#HIGH Lcd
808D14 F0                MOVX    @DPTR,A
808D15 A3                INC     DPTR
808D16 7469              MOV     A,#LOW Lcd
808D18 F0                MOVX    @DPTR,A
808D19 A512808338        ECALL   _WaitForWork
  319: 	}	
808D1E 028C27            LJMP    ?C0026?COUNTERMAINT
  320: }
808D21         ?C0022?COUNTERMAINT:
808D21 A522              ERET    
----- FUNCTION GoodsWayTraceList (END) -------


----- FUNCTION _SP_MenuSelected (BEGIN) -----
 FILE: 'SysParamSet.c'
 1080: void  SP_MenuSelected( u_char xdata *SelectedNum, u_char xdata *CursorLine, u_char MoveRange, u_char ChangeLinefl
>> ag )
 1081: {
808D23 901737            MOV     DPTR,#MoveRange
808D26 EB                MOV     A,R3
808D27 F0                MOVX    @DPTR,A
808D28 901733            MOV     DPTR,#SelectedNum
808D2B EE                MOV     A,R6
808D2C F0                MOVX    @DPTR,A
808D2D A3                INC     DPTR
808D2E EF                MOV     A,R7
808D2F F0                MOVX    @DPTR,A
808D30 A3                INC     DPTR
808D31 EC                MOV     A,R4
808D32 F0                MOVX    @DPTR,A
808D33 A3                INC     DPTR
808D34 ED                MOV     A,R5
808D35 F0                MOVX    @DPTR,A
 1082: 	u_char xdata  MenuNum = *SelectedNum;
 1083: 	//此项为1表示光标在第一行,为二表示光标在第二行
808D36 8F82              MOV     DPL,R7
808D38 8E83              MOV     DPH,R6
808D3A E0                MOVX    A,@DPTR
808D3B 901739            MOV     DPTR,#MenuNum
808D3E F0                MOVX    @DPTR,A
 1084: 	u_char xdata  Cursor = *CursorLine;
808D3F 8D82              MOV     DPL,R5
808D41 8C83              MOV     DPH,R4
808D43 E0                MOVX    A,@DPTR
808D44 90173A            MOV     DPTR,#Cursor
808D47 F0                MOVX    @DPTR,A
 1085: 	bit	   data   flag = 1;	
808D48 D218              SETB    flag
 1086: 	u_char xdata  ReDisplen = 0;
808D4A E4                CLR     A
808D4B A3                INC     DPTR
808D4C F0                MOVX    @DPTR,A
 1087: 	u_char xdata  key = 0xff;
808D4D A3                INC     DPTR
808D4E 74FF              MOV     A,#0FFH
808D50 F0                MOVX    @DPTR,A
 1088: 	u_char  xdata  len = 0;	
808D51 E4                CLR     A
808D52 A3                INC     DPTR
808D53 F0                MOVX    @DPTR,A
808D54         ?C0362?SYSPARAMSET:
 1089: 
 1090: 	while( flag )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 316


808D54 201803            JB      flag,$ + 6H
808D57 028F89            LJMP    ?C0363?SYSPARAMSET
 1091: 	{
 1092: 		key = GetKey();
808D5A A5128096D1        ECALL   GetKey
808D5F 90173C            MOV     DPTR,#key
808D62 EF                MOV     A,R7
808D63 F0                MOVX    @DPTR,A
 1093: 		switch( key )		
808D64 24F3              ADD     A,#0F3H
808D66 7003              JNZ     $ + 5H
808D68 028F54            LJMP    ?C0397?SYSPARAMSET
808D6B 24C5              ADD     A,#0C5H
808D6D 6021              JZ      ?C0366?SYSPARAMSET
808D6F 24F8              ADD     A,#0F8H
808D71 7003              JNZ     $ + 5H
808D73 028E8A            LJMP    ?C0381?SYSPARAMSET
808D76 2435              ADD     A,#035H
808D78 6003              JZ      $ + 5H
808D7A 028F7A            LJMP    ?C0364?SYSPARAMSET
 1094: 		{
 1095: 			case KEY_CANCEL:
808D7D         ?C0365?SYSPARAMSET:
 1096: 				flag = 0;
808D7D C218              CLR     flag
 1097: 				*SelectedNum = 100;				
808D7F 901733            MOV     DPTR,#SelectedNum
808D82 E0                MOVX    A,@DPTR
808D83 FE                MOV     R6,A
808D84 A3                INC     DPTR
808D85 E0                MOVX    A,@DPTR
808D86 F582              MOV     DPL,A
808D88 8E83              MOV     DPH,R6
808D8A 7464              MOV     A,#064H
808D8C F0                MOVX    @DPTR,A
 1098: 				break;
808D8D 028F7A            LJMP    ?C0364?SYSPARAMSET
 1099: 			case KEY_UP://上移  
808D90         ?C0366?SYSPARAMSET:
 1100: 	//			Trace("\n Cursor1 = %bu ", Cursor );				
 1101: 	//			Trace("\n MenuNum1 = %bu ", MenuNum );
 1102: 				if( Cursor == 2 )//选中标记上移
808D90 90173A            MOV     DPTR,#Cursor
808D93 E0                MOVX    A,@DPTR
808D94 6402              XRL     A,#02H
808D96 703D              JNZ     ?C0367?SYSPARAMSET
 1103: 				{			
 1104: 					DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标					
808D98 D21A              SETB    ?_DisplayCursorState?BIT
808D9A 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808D9D 7402              MOV     A,#02H
808D9F F0                MOVX    @DPTR,A
808DA0 D21B              SETB    ?_DisplayCursorState?BIT+01H
808DA2 E4                CLR     A
808DA3 FD                MOV     R5,A
808DA4 FF                MOV     R7,A
808DA5 A51280897C        ECALL   _DisplayCursorState
 1105: 					Cursor = 1;
808DAA 90173A            MOV     DPTR,#Cursor
808DAD 7401              MOV     A,#01H
808DAF F0                MOVX    @DPTR,A
 1106: 					if( ( ChangeLineflag & 0x01 ) == 0x01 )					
808DB0 901738            MOV     DPTR,#ChangeLineflag
808DB3 E0                MOVX    A,@DPTR
808DB4 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 317


808DB5 30E003            JNB     ACC.0,?C0368?SYSPARAMSET
 1107: 						ChangeLineflag |= 0x02;
808DB8 028F1E            LJMP    ?C0487?SYSPARAMSET
808DBB         ?C0368?SYSPARAMSET:
 1108: 					else
 1109: 					{
 1110: 						if( MenuNum == 0 )
808DBB 901739            MOV     DPTR,#MenuNum
808DBE E0                MOVX    A,@DPTR
808DBF 700B              JNZ     ?C0370?SYSPARAMSET
 1111: 							MenuNum = MoveRange;					
808DC1 901737            MOV     DPTR,#MoveRange
808DC4 E0                MOVX    A,@DPTR
808DC5 901739            MOV     DPTR,#MenuNum
808DC8 F0                MOVX    @DPTR,A
808DC9 028F7A            LJMP    ?C0364?SYSPARAMSET
808DCC         ?C0370?SYSPARAMSET:
 1112: 						else									    
 1113: 							MenuNum--;					
808DCC 901739            MOV     DPTR,#MenuNum
808DCF E0                MOVX    A,@DPTR
808DD0 14                DEC     A
808DD1 F0                MOVX    @DPTR,A
 1114: 					}						
 1115: 	//				Trace("\n Cursor2 = %bu ", Cursor );				
 1116: 	//				Trace("\n MenuNum2 = %bu ", MenuNum );
 1117: 				}
808DD2 028F7A            LJMP    ?C0364?SYSPARAMSET
808DD5         ?C0367?SYSPARAMSET:
 1118: 				else//菜单上翻
 1119: 				{	
 1120: 	//				Trace("\n Cursor3 = %bu ", Cursor );				
 1121: 	//				Trace("\n MenuNum3 = %bu ", MenuNum );					
 1122: 				//	DisplayMenuAndVal( 1, MenuNum, 1 );					
 1123: 					if( MenuNum == 0 )
808DD5 901739            MOV     DPTR,#MenuNum
808DD8 E0                MOVX    A,@DPTR
808DD9 700A              JNZ     ?C0373?SYSPARAMSET
 1124: 						MenuNum = MoveRange;					
808DDB 901737            MOV     DPTR,#MoveRange
808DDE E0                MOVX    A,@DPTR
808DDF 901739            MOV     DPTR,#MenuNum
808DE2 F0                MOVX    @DPTR,A
808DE3 8006              SJMP    ?C0374?SYSPARAMSET
808DE5         ?C0373?SYSPARAMSET:
 1125: 					else									    
 1126: 						MenuNum--;					
808DE5 901739            MOV     DPTR,#MenuNum
808DE8 E0                MOVX    A,@DPTR
808DE9 14                DEC     A
808DEA F0                MOVX    @DPTR,A
808DEB         ?C0374?SYSPARAMSET:
 1127: 					ReDisplen = DisplayMenuAndVal( 0, MenuNum , 1 );
808DEB A5128059DE        ECALL   ?L?COM0021
808DF0 90173B            MOV     DPTR,#ReDisplen
808DF3 EF                MOV     A,R7
808DF4 F0                MOVX    @DPTR,A
 1128: 					if( ReDisplen != 0 )
808DF5 604E              JZ      ?C0375?SYSPARAMSET
 1129: 					{
 1130: 						DisplayStr( 0, 1, 1,  y_displaystr + 20, ReDisplen );//显示菜单						
808DF7 D21A              SETB    ?_DisplayStr?BIT
808DF9 7B00              MOV     R3,#?C?XDATASEG
808DFB 7A2D              MOV     R2,#HIGH y_displaystr+014H
808DFD 79B7              MOV     R1,#LOW y_displaystr+014H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 318


808DFF 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
808E02 A5128007B6        ECALL   ?C?PSTXDATA
808E07 90173B            MOV     DPTR,#ReDisplen
808E0A E0                MOVX    A,@DPTR
808E0B 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
808E0E F0                MOVX    @DPTR,A
808E0F 7D01              MOV     R5,#01H
808E11 E4                CLR     A
808E12 FF                MOV     R7,A
808E13 A51280885F        ECALL   _DisplayStr
 1131: 						ReDisplen = 0;
808E18 E4                CLR     A
808E19 90173B            MOV     DPTR,#ReDisplen
808E1C F0                MOVX    @DPTR,A
 1132: 						DisplayCursorState( 0, Cursor - 1, 1, 2, 1 );//第一行整光标
808E1D 90173A            MOV     DPTR,#Cursor
808E20 E0                MOVX    A,@DPTR
808E21 14                DEC     A
808E22 FD                MOV     R5,A
808E23 D21A              SETB    ?_DisplayCursorState?BIT
808E25 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808E28 7402              MOV     A,#02H
808E2A F0                MOVX    @DPTR,A
808E2B D21B              SETB    ?_DisplayCursorState?BIT+01H
808E2D E4                CLR     A
808E2E FF                MOV     R7,A
808E2F A51280897C        ECALL   _DisplayCursorState
 1133: 						if( Cursor == 1 )
808E34 90173A            MOV     DPTR,#Cursor
808E37 E0                MOVX    A,@DPTR
808E38 901738            MOV     DPTR,#ChangeLineflag
808E3B B40104            CJNE    A,#01H,?C0376?SYSPARAMSET
 1134: 						{
 1135: 							//光标目前在第一行，则下移光标不改变菜单选项
 1136: 							ChangeLineflag |= 0x02;
808E3E E0                MOVX    A,@DPTR
808E3F         
 1137: 						}
808E3F 028F1E            LJMP    ?C0487?SYSPARAMSET
808E42         ?C0376?SYSPARAMSET:
 1138: 						else
 1139: 						{
 1140: 							//光标目前在第二行，则上移光标不改变菜单选项
 1141: 							ChangeLineflag |= 0x01;
 1142: 						}
 1143: 					}
808E42 028F23            LJMP    ?C0488?SYSPARAMSET
808E45         ?C0375?SYSPARAMSET:
 1144: 					else
 1145: 					{
 1146: 						if(	MenuNum == MoveRange )
808E45 901737            MOV     DPTR,#MoveRange
808E48 E0                MOVX    A,@DPTR
808E49 FF                MOV     R7,A
808E4A 901739            MOV     DPTR,#MenuNum
808E4D E0                MOVX    A,@DPTR
808E4E B50706            CJNE    A,AR7,?C0379?SYSPARAMSET
 1147: 							ReDisplen = DisplayMenuAndVal( 1, 0 , 1 );
808E51 D219              SETB    ?_DisplayMenuAndVal?BIT
808E53 E4                CLR     A
808E54 FD                MOV     R5,A
808E55 8008              SJMP    ?C0485?SYSPARAMSET
808E57         ?C0379?SYSPARAMSET:
 1148: 						else
 1149: 							ReDisplen = DisplayMenuAndVal( 1, MenuNum + 1 , 1 );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 319


808E57 901739            MOV     DPTR,#MenuNum
808E5A E0                MOVX    A,@DPTR
808E5B 04                INC     A
808E5C FD                MOV     R5,A
808E5D D219              SETB    ?_DisplayMenuAndVal?BIT
808E5F         
808E5F 7F01              MOV     R7,#01H
808E61 A5128059E7        ECALL   _DisplayMenuAndVal
808E66 90173B            MOV     DPTR,#ReDisplen
808E69 EF                MOV     A,R7
808E6A F0                MOVX    @DPTR,A
808E6B         ?C0380?SYSPARAMSET:
 1150: 						DisplayCursorState( 0, Cursor - 1, 1, 2, 1 );//第一行整光标
808E6B 90173A            MOV     DPTR,#Cursor
808E6E E0                MOVX    A,@DPTR
808E6F 14                DEC     A
808E70 FD                MOV     R5,A
808E71 D21A              SETB    ?_DisplayCursorState?BIT
808E73 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808E76 7402              MOV     A,#02H
808E78 F0                MOVX    @DPTR,A
808E79 D21B              SETB    ?_DisplayCursorState?BIT+01H
808E7B E4                CLR     A
808E7C FF                MOV     R7,A
808E7D A51280897C        ECALL   _DisplayCursorState
 1151: 						ChangeLineflag = 0;
808E82 E4                CLR     A
808E83 901738            MOV     DPTR,#ChangeLineflag
808E86 F0                MOVX    @DPTR,A
 1152: 					 //  Cursor = 1;
 1153: 					}	
 1154: 	//				Trace("\n Cursor4 = %bu ", Cursor );				
 1155: 	//				Trace("\n MenuNum4 = %bu ", MenuNum );										
 1156: 				}
 1157: 				break;
808E87 028F7A            LJMP    ?C0364?SYSPARAMSET
 1158: 			case KEY_DOWN://下移	
808E8A         ?C0381?SYSPARAMSET:
 1159: 	//			Trace("\n Cursor5 = %bu ", Cursor );				
 1160: 	//			Trace("\n MenuNum5 = %bu ", MenuNum );					
 1161: 				if( Cursor == 1 )//选中标记下移
808E8A 90173A            MOV     DPTR,#Cursor
808E8D E0                MOVX    A,@DPTR
808E8E 6401              XRL     A,#01H
808E90 7031              JNZ     ?C0382?SYSPARAMSET
 1162: 				{
 1163: 					DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
808E92 A51280896E        ECALL   ?L?COM000F
 1164: 					if( ( ChangeLineflag & 0x02 ) == 0x02 )					
808E97 901738            MOV     DPTR,#ChangeLineflag
808E9A E0                MOVX    A,@DPTR
808E9B FF                MOV     R7,A
808E9C 30E105            JNB     ACC.1,?C0383?SYSPARAMSET
 1165: 						ChangeLineflag |= 0x01;
808E9F 4401              ORL     A,#01H
808EA1 F0                MOVX    @DPTR,A
808EA2 8016              SJMP    ?C0384?SYSPARAMSET
808EA4         ?C0383?SYSPARAMSET:
 1166: 					else
 1167: 					{
 1168: 						if( MenuNum == MoveRange )
808EA4 901737            MOV     DPTR,#MoveRange
808EA7 E0                MOVX    A,@DPTR
808EA8 FF                MOV     R7,A
808EA9 901739            MOV     DPTR,#MenuNum
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 320


808EAC E0                MOVX    A,@DPTR
808EAD B50704            CJNE    A,AR7,?C0385?SYSPARAMSET
 1169: 							MenuNum = 0;					
808EB0 E4                CLR     A
808EB1 F0                MOVX    @DPTR,A
808EB2 8006              SJMP    ?C0384?SYSPARAMSET
808EB4         ?C0385?SYSPARAMSET:
 1170: 						else									    						
 1171: 							MenuNum++;				     
808EB4 901739            MOV     DPTR,#MenuNum
808EB7 E0                MOVX    A,@DPTR
808EB8 04                INC     A
808EB9 F0                MOVX    @DPTR,A
 1172: 					}
808EBA         ?C0384?SYSPARAMSET:
 1173: 					Cursor = 2;	
808EBA 90173A            MOV     DPTR,#Cursor
808EBD 7402              MOV     A,#02H
808EBF F0                MOVX    @DPTR,A
 1174: 	//				Trace("\n Cursor7 = %bu ", Cursor );				
 1175: 	//				Trace("\n MenuNum7 = %bu ", MenuNum );					
 1176: 				}
808EC0 028F7A            LJMP    ?C0364?SYSPARAMSET
808EC3         ?C0382?SYSPARAMSET:
 1177: 				else//菜单下翻
 1178: 				{	
 1179: 					if( ChangeLineflag != 0x00 )
808EC3 901738            MOV     DPTR,#ChangeLineflag
808EC6 E0                MOVX    A,@DPTR
808EC7 6018              JZ      ?C0388?SYSPARAMSET
 1180: 					{
 1181: 						ChangeLineflag = 0;
808EC9 E4                CLR     A
808ECA F0                MOVX    @DPTR,A
 1182: 						if( MenuNum == MoveRange )
808ECB 901737            MOV     DPTR,#MoveRange
808ECE E0                MOVX    A,@DPTR
808ECF FF                MOV     R7,A
808ED0 901739            MOV     DPTR,#MenuNum
808ED3 E0                MOVX    A,@DPTR
808ED4 B50704            CJNE    A,AR7,?C0389?SYSPARAMSET
 1183: 							MenuNum = 0;					
808ED7 E4                CLR     A
808ED8 F0                MOVX    @DPTR,A
808ED9 8006              SJMP    ?C0388?SYSPARAMSET
808EDB         ?C0389?SYSPARAMSET:
 1184: 						else			
 1185: 							MenuNum++;	
808EDB 901739            MOV     DPTR,#MenuNum
808EDE E0                MOVX    A,@DPTR
808EDF 04                INC     A
808EE0 F0                MOVX    @DPTR,A
 1186: 			//		   DisplayCursorState( 0, 0, 1, 2, 1 );//第二行整光标
 1187: 			//		   Cursor = 1;
 1188: 					}
808EE1         ?C0388?SYSPARAMSET:
 1189: 	//				Trace("\n Cursor8 = %bu ", Cursor );				
 1190: 	//				Trace("\n MenuNum8 = %bu ", MenuNum );	
 1191: 					ReDisplen = DisplayMenuAndVal( 0, MenuNum, 1 );															
808EE1 A5128059DE        ECALL   ?L?COM0021
808EE6 90173B            MOV     DPTR,#ReDisplen
808EE9 EF                MOV     A,R7
808EEA F0                MOVX    @DPTR,A
 1192: 					if( ReDisplen != 0 )
808EEB 603C              JZ      ?C0391?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 321


 1193: 					{
 1194: 						DisplayStr( 0, 1, 1,  y_displaystr + 20, ReDisplen );//显示菜单						
808EED D21A              SETB    ?_DisplayStr?BIT
808EEF 7B00              MOV     R3,#?C?XDATASEG
808EF1 7A2D              MOV     R2,#HIGH y_displaystr+014H
808EF3 79B7              MOV     R1,#LOW y_displaystr+014H
808EF5 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
808EF8 A5128007B6        ECALL   ?C?PSTXDATA
808EFD 90173B            MOV     DPTR,#ReDisplen
808F00 E0                MOVX    A,@DPTR
808F01 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
808F04 F0                MOVX    @DPTR,A
808F05 7D01              MOV     R5,#01H
808F07 E4                CLR     A
808F08 FF                MOV     R7,A
808F09 A51280885F        ECALL   _DisplayStr
 1195: 						ReDisplen = 0;
808F0E E4                CLR     A
808F0F 90173B            MOV     DPTR,#ReDisplen
808F12 F0                MOVX    @DPTR,A
 1196: 						if( Cursor == 1 )
808F13 90173A            MOV     DPTR,#Cursor
808F16 E0                MOVX    A,@DPTR
808F17 901738            MOV     DPTR,#ChangeLineflag
808F1A B40106            CJNE    A,#01H,?C0392?SYSPARAMSET
 1197: 						{
 1198: 							//光标目前在第一行，则下移光标不改变菜单选项
 1199: 							ChangeLineflag |= 0x02;
808F1D E0                MOVX    A,@DPTR
808F1E         
808F1E 4402              ORL     A,#02H
808F20 F0                MOVX    @DPTR,A
 1200: 						}
808F21 8057              SJMP    ?C0364?SYSPARAMSET
808F23         ?C0392?SYSPARAMSET:
 1201: 						else
 1202: 						{
 1203: 							//光标目前在第二行，则上移光标不改变菜单选项
 1204: 							ChangeLineflag |= 0x01;
808F23         
808F23 E0                MOVX    A,@DPTR
808F24 4401              ORL     A,#01H
808F26 F0                MOVX    @DPTR,A
 1205: 						}
 1206: 					}
808F27 8051              SJMP    ?C0364?SYSPARAMSET
808F29         ?C0391?SYSPARAMSET:
 1207: 					else
 1208: 					{						
 1209: 						if( MenuNum == MoveRange )
808F29 901737            MOV     DPTR,#MoveRange
808F2C E0                MOVX    A,@DPTR
808F2D FF                MOV     R7,A
808F2E 901739            MOV     DPTR,#MenuNum
808F31 E0                MOVX    A,@DPTR
808F32 B50704            CJNE    A,AR7,?C0395?SYSPARAMSET
 1210: 							MenuNum = 0;					
808F35 E4                CLR     A
808F36 F0                MOVX    @DPTR,A
808F37 8006              SJMP    ?C0396?SYSPARAMSET
808F39         ?C0395?SYSPARAMSET:
 1211: 						else									    
 1212: 							MenuNum++;	
808F39 901739            MOV     DPTR,#MenuNum
808F3C E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 322


808F3D 04                INC     A
808F3E F0                MOVX    @DPTR,A
808F3F         ?C0396?SYSPARAMSET:
 1213: 						ReDisplen = DisplayMenuAndVal( 1, MenuNum , 1 );																					
808F3F 901739            MOV     DPTR,#MenuNum
808F42 E0                MOVX    A,@DPTR
808F43 FD                MOV     R5,A
808F44 D219              SETB    ?_DisplayMenuAndVal?BIT
808F46 7F01              MOV     R7,#01H
808F48 A5128059E7        ECALL   _DisplayMenuAndVal
808F4D 90173B            MOV     DPTR,#ReDisplen
808F50 EF                MOV     A,R7
808F51 F0                MOVX    @DPTR,A
 1214: 					//	Cursor = 2;
 1215: 					}
 1216: 	//				Trace("\n Cursor9 = %bu ", Cursor );				
 1217: 	//				Trace("\n MenuNum9 = %bu ", MenuNum );
 1218: 				}
 1219: 				break;
808F52 8026              SJMP    ?C0364?SYSPARAMSET
 1220: 			case KEY_SUBMIT://Enter,选中了某项菜单
808F54         ?C0397?SYSPARAMSET:
 1221: 				{			
 1222: 					*SelectedNum = MenuNum;
808F54 901739            MOV     DPTR,#MenuNum
808F57 E0                MOVX    A,@DPTR
808F58 FF                MOV     R7,A
808F59 901733            MOV     DPTR,#SelectedNum
808F5C E0                MOVX    A,@DPTR
808F5D FC                MOV     R4,A
808F5E A3                INC     DPTR
808F5F E0                MOVX    A,@DPTR
808F60 F582              MOV     DPL,A
808F62 8C83              MOV     DPH,R4
808F64 EF                MOV     A,R7
808F65 F0                MOVX    @DPTR,A
 1223: 				//	if( ChangeLineflag != 0 )
 1224: 				//	{
 1225: 				//		*CursorLine = 1;
 1226: 				//		DisplayStr( 0, 1, 1,  " ", 20 );//显示菜单
 1227: 				//	}
 1228: 				//	else
 1229: 					*CursorLine = Cursor;					
808F66 90173A            MOV     DPTR,#Cursor
808F69 E0                MOVX    A,@DPTR
808F6A FF                MOV     R7,A
808F6B 901735            MOV     DPTR,#CursorLine
808F6E E0                MOVX    A,@DPTR
808F6F FC                MOV     R4,A
808F70 A3                INC     DPTR
808F71 E0                MOVX    A,@DPTR
808F72 F582              MOV     DPL,A
808F74 8C83              MOV     DPH,R4
808F76 EF                MOV     A,R7
808F77 F0                MOVX    @DPTR,A
 1230: 					flag = 0;	
808F78 C218              CLR     flag
 1231: 				}
 1232: 				break;			
 1233: 		}
808F7A         ?C0364?SYSPARAMSET:
 1234: 		CoreProcessCycle();//让出时间片
808F7A A5128082D7        ECALL   CoreProcessCycle
 1235: 		DelayMs( 5 );
808F7F 7F05              MOV     R7,#05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 323


808F81 A512807EAB        ECALL   _DelayMs
 1236: 	}
808F86 028D54            LJMP    ?C0362?SYSPARAMSET
808F89         ?C0363?SYSPARAMSET:
 1237: 	ClearKey();		
808F89 A502808FA5        EJMP    ClearKey
----- FUNCTION _SP_MenuSelected (END) -------


----- FUNCTION ?L?COM0010 (BEGIN) -----
808F8E 901730            MOV     DPTR,#LineNum
808F91         ?L?COM0011:
808F91 E0                MOVX    A,@DPTR
808F92 14                DEC     A
808F93 FD                MOV     R5,A
808F94 D21A              SETB    ?_DisplayCursorState?BIT
808F96 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808F99 7402              MOV     A,#02H
808F9B F0                MOVX    @DPTR,A
808F9C D21B              SETB    ?_DisplayCursorState?BIT+01H
808F9E E4                CLR     A
808F9F         ?L?COM0012:
808F9F FF                MOV     R7,A
808FA0         ?L?COM0013:
808FA0 A51280897C        ECALL   _DisplayCursorState
----- FUNCTION ClearKey (BEGIN) -----
 FILE: 'CommonFunction.c'
  118: void ClearKey()
  119: {
  120: 	KeyLock();
  121: 	KeyUnLock();
808FA5 A512807FAD        ECALL   KeyLock
  122: }
808FAA A502807F45        EJMP    KeyUnLock
----- FUNCTION ClearKey (END) -------


----- FUNCTION ?L?COM0014 (BEGIN) -----
808FAF 7F01              MOV     R7,#01H
808FB1 A512808FB8        ECALL   _ClearDisplayLine
808FB6 7F02              MOV     R7,#02H
----- FUNCTION _ClearDisplayLine (BEGIN) -----
 FILE: 'CommonFunction.c'
  480: void ClearDisplayLine( u_char Line )
  481: {
;---- Variable 'Line' assigned to Register 'R7' ----
  482: 	if( ( Line > 0 ) && ( Line < 3 ) )
  483: 	{
808FB8 EF                MOV     A,R7
808FB9 D3                SETB    C
808FBA 9400              SUBB    A,#00H
808FBC 402E              JC      ?C0123?COMMONFUNCTION
808FBE EF                MOV     A,R7
808FBF 9403              SUBB    A,#03H
808FC1 5029              JNC     ?C0123?COMMONFUNCTION
  484: 		DisplayStr( 0, Line - 1 , 1 , "                    " , 20 );
  485: 		WaitForWork( 20, NULL );	
808FC3 EF                MOV     A,R7
808FC4 14                DEC     A
808FC5 FD                MOV     R5,A
808FC6 D21A              SETB    ?_DisplayStr?BIT
808FC8 7B80              MOV     R3,#BYTE2 08017B5H
808FCA 7A17              MOV     R2,#HIGH 08017B5H
808FCC 79B5              MOV     R1,#LOW 08017B5H
808FCE 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 324


808FD1 A5128007B6        ECALL   ?C?PSTXDATA
808FD6 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
808FD9 7414              MOV     A,#014H
808FDB F0                MOVX    @DPTR,A
808FDC E4                CLR     A
808FDD FF                MOV     R7,A
808FDE A51280885F        ECALL   _DisplayStr
  486: 	}
808FE3 E4                CLR     A
808FE4 7F14              MOV     R7,#014H
808FE6 FE                MOV     R6,A
808FE7 A512808330        ECALL   ?L?COM000D
  487: }
  488: 
808FEC         ?C0123?COMMONFUNCTION:
808FEC A522              ERET    
----- FUNCTION _ClearDisplayLine (END) -------


----- FUNCTION RejectBill (BEGIN) -----
 FILE: 'mainflow.c'
  256: u_char RejectBill()
  257: {	
  258: 	u_char xdata i = 0;
  259: 	u_char xdata j = 0;
808FEE E4                CLR     A
808FEF 9015B7            MOV     DPTR,#i
808FF2 F0                MOVX    @DPTR,A
  260: 
808FF3 A3                INC     DPTR
808FF4 F0                MOVX    @DPTR,A
  261: 	i = CasherReject();
808FF5 A5128095C7        ECALL   CasherReject
808FFA E4                CLR     A
808FFB 33                RLC     A
808FFC 9015B7            MOV     DPTR,#i
808FFF F0                MOVX    @DPTR,A
809000         ?C0050?MAINFLOW:
  262: 
  263: 	while( j < 3 )
809000 9015B8            MOV     DPTR,#j
809003 E0                MOVX    A,@DPTR
809004 C3                CLR     C
809005 9403              SUBB    A,#03H
809007 5020              JNC     ?C0051?MAINFLOW
  264: 	{
  265: 		if( i == 0 )
809009 9015B7            MOV     DPTR,#i
80900C E0                MOVX    A,@DPTR
80900D 701A              JNZ     ?C0051?MAINFLOW
  266: 		{
  267: 			WaitForWork( 500, NULL );
80900F 7FF4              MOV     R7,#0F4H
809011 7E01              MOV     R6,#01H
809013 A512808330        ECALL   ?L?COM000D
  268: 			i = CasherReject();
809018 A5128095C7        ECALL   CasherReject
80901D E4                CLR     A
80901E 33                RLC     A
80901F 9015B7            MOV     DPTR,#i
809022 F0                MOVX    @DPTR,A
  269: 			j++;
809023 A3                INC     DPTR
809024 E0                MOVX    A,@DPTR
809025 04                INC     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 325


809026 F0                MOVX    @DPTR,A
  270: 		}
809027 80D7              SJMP    ?C0050?MAINFLOW
  271: 		else
  272: 			break;
  273: 	}
809029         ?C0051?MAINFLOW:
  274: 	if( ( j >= 3 ) && ( i == 0 ) )
809029 9015B8            MOV     DPTR,#j
80902C E0                MOVX    A,@DPTR
80902D C3                CLR     C
80902E 9403              SUBB    A,#03H
809030 400A              JC      ?C0056?MAINFLOW
809032 9015B7            MOV     DPTR,#i
809035 E0                MOVX    A,@DPTR
809036 7004              JNZ     ?C0056?MAINFLOW
  275: 		return 1;
809038 7F01              MOV     R7,#01H
80903A 803A              SJMP    ?C0055?MAINFLOW
80903C         ?C0056?MAINFLOW:
  276: 	while( ! ( i || j ) )
80903C 9015B7            MOV     DPTR,#i
80903F E0                MOVX    A,@DPTR
809040 702A              JNZ     ?C0057?MAINFLOW
809042 A3                INC     DPTR
809043 E0                MOVX    A,@DPTR
809044 7026              JNZ     ?C0057?MAINFLOW
  277: 	{
  278: 		WaitForWork( 100, NULL );
809046 7F64              MOV     R7,#064H
809048 FE                MOV     R6,A
809049 A512808330        ECALL   ?L?COM000D
  279: 		i = TestDeviceTimeOut( &Casher );
80904E 7E23              MOV     R6,#HIGH Casher
809050 7FD4              MOV     R7,#LOW Casher
809052 A5128087FD        ECALL   _TestDeviceTimeOut
809057 9015B7            MOV     DPTR,#i
80905A EF                MOV     A,R7
80905B F0                MOVX    @DPTR,A
  280: 		j = TestDeviceCommOK( &Casher );		
80905C 7E23              MOV     R6,#HIGH Casher
80905E 7FD4              MOV     R7,#LOW Casher
809060 A512809085        ECALL   _TestDeviceCommOK
809065 9015B8            MOV     DPTR,#j
809068 EF                MOV     A,R7
809069 F0                MOVX    @DPTR,A
  281: 	}
80906A 80D0              SJMP    ?C0056?MAINFLOW
80906C         ?C0057?MAINFLOW:
  282: 	if( i ) 
80906C 9015B7            MOV     DPTR,#i
80906F E0                MOVX    A,@DPTR
809070 7F00              MOV     R7,#00H
809072 6002              JZ      ?C0058?MAINFLOW
  283: 		return 1;//超时，故障	
809074 7F01              MOV     R7,#01H
809076         ?C0058?MAINFLOW:
  284: 	return 0;//正常	
  285: }
809076         ?C0055?MAINFLOW:
809076 A522              ERET    
----- FUNCTION RejectBill (END) -------


----- FUNCTION ?L?COM001B (BEGIN) -----
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 326


809078 A5128090B6        ECALL   SchedulerProcess
80907D         ?L?COM001C:
80907D 90184A            MOV     DPTR,#DeviceID
809080         ?L?COM001D:
809080 E0                MOVX    A,@DPTR
809081 FE                MOV     R6,A
809082 A3                INC     DPTR
809083 E0                MOVX    A,@DPTR
809084 FF                MOV     R7,A
----- FUNCTION _TestDeviceCommOK (BEGIN) -----
 FILE: 'scheduler.c'
  821: uchar TestDeviceCommOK( struct DEVICE xdata* Device )
  822: {
;---- Variable 'Device' assigned to Register 'R6/R7' ----
  823: 	uchar data ch;
  824: 	
  825: 	ch = Device->CommState;
809085 8F82              MOV     DPL,R7
809087 8E83              MOV     DPH,R6
809089 A3                INC     DPTR
80908A A3                INC     DPTR
80908B E0                MOVX    A,@DPTR
80908C F528              MOV     ch,A
  826: 	Device->CommState &= ~ COMM_COMMOK;
80908E 8F82              MOV     DPL,R7
809090 8E83              MOV     DPH,R6
809092 A3                INC     DPTR
809093 A3                INC     DPTR
809094 54FB              ANL     A,#0FBH
809096 F0                MOVX    @DPTR,A
  827: 	return( ch & COMM_COMMOK );
809097 E528              MOV     A,ch
809099 5404              ANL     A,#04H
80909B FF                MOV     R7,A
  828: }
80909C         ?C0169?SCHEDULER:
80909C A522              ERET    
----- FUNCTION _TestDeviceCommOK (END) -------


----- FUNCTION ?L?COM0020 (BEGIN) -----
80909E E0                MOVX    A,@DPTR
80909F FE                MOV     R6,A
8090A0 A3                INC     DPTR
8090A1 E0                MOVX    A,@DPTR
8090A2 FF                MOV     R7,A
8090A3 E4                CLR     A
8090A4 FC                MOV     R4,A
8090A5 FD                MOV     R5,A
8090A6 A51280062E        ECALL   ?C?LADD
8090AB 900AF9            MOV     DPTR,#TradeCounter+08H
8090AE A512800792        ECALL   ?C?LSTXDATA
8090B3 751690            MOV     LzjMSecTimer,#090H
----- FUNCTION SchedulerProcess (BEGIN) -----
 FILE: 'scheduler.c'
  198: uchar SchedulerProcess( void )
  199: {
  200: 	struct DEVICE xdata* data CurrentDevice;
  201: 
  202: #ifndef _DEBUG_NO_MOBILE
  203: 	if( IsPressMobile == 1 )
8090B6 9023BD            MOV     DPTR,#IsPressMobile
8090B9 E0                MOVX    A,@DPTR
8090BA B40105            CJNE    A,#01H,?C0005?SCHEDULER
  204: 		ZhkMobileProcess();
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 327


8090BD A512813B2C        ECALL   ZhkMobileProcess
8090C2         ?C0005?SCHEDULER:
  205: #endif	
  206: 	//Trace( "SchedulerRouteDevice\n" );
  207: 	// 分析当前任务关联的设备
  208: 	switch( ZhkChkAddr( CurrentTask.Id ) )
8090C2 9028AF            MOV     DPTR,#CurrentTask+01H
8090C5 E0                MOVX    A,@DPTR
8090C6 FF                MOV     R7,A
8090C7 A512813E9B        ECALL   _ZhkChkAddr
8090CC EF                MOV     A,R7
8090CD 24F9              ADD     A,#0F9H
8090CF 6013              JZ      ?C0008?SCHEDULER
8090D1 14                DEC     A
8090D2 6018              JZ      ?C0009?SCHEDULER
8090D4 24FB              ADD     A,#0FBH
8090D6 603A              JZ      ?C0015?SCHEDULER
8090D8 240B              ADD     A,#0BH
8090DA 703E              JNZ     ?C0016?SCHEDULER
  209: 	{
  210: 	case EQUIP_CASHER:
8090DC         ?C0007?SCHEDULER:
  211: 		CurrentDevice = &Casher;
8090DC 752823            MOV     CurrentDevice,#HIGH Casher
8090DF 7529D4            MOV     CurrentDevice+01H,#LOW Casher
  212: 		break;
8090E2 803B              SJMP    ?C0006?SCHEDULER
  213: //	case EQUIP_COINER:
  214: //		CurrentDevice = &Coiner;
  215: //		break;
  216: 	case EQUIP_LCD:
8090E4         ?C0008?SCHEDULER:
  217: 		CurrentDevice = &Lcd;
8090E4 752823            MOV     CurrentDevice,#HIGH Lcd
8090E7 752969            MOV     CurrentDevice+01H,#LOW Lcd
  218: 		break;
8090EA 8033              SJMP    ?C0006?SCHEDULER
  219: //	case EQUIP_HUB:
  220: //		CurrentDevice = &Hub;
  221: //		break;
  222: 	case EQUIP_HOPPER:		
8090EC         ?C0009?SCHEDULER:
  223: 		switch( CurrentTask.Id - ID_HOPPER1 )
8090EC 9028AF            MOV     DPTR,#CurrentTask+01H
8090EF E0                MOVX    A,@DPTR
8090F0 14                DEC     A
8090F1 600F              JZ      ?C0012?SCHEDULER
8090F3 14                DEC     A
8090F4 6014              JZ      ?C0013?SCHEDULER
8090F6 2402              ADD     A,#02H
8090F8 7020              JNZ     ?C0325?SCHEDULER
  224: 		{
  225: 		case 0:
8090FA         ?C0011?SCHEDULER:
  226: 			CurrentDevice = &Hopper1;
8090FA 752823            MOV     CurrentDevice,#HIGH Hopper1
8090FD 75297E            MOV     CurrentDevice+01H,#LOW Hopper1
  227: 			break;
809100 801D              SJMP    ?C0006?SCHEDULER
  228: 		case 1:
809102         ?C0012?SCHEDULER:
  229: 			CurrentDevice = &Hopper2;
809102 752823            MOV     CurrentDevice,#HIGH Hopper2
809105 752993            MOV     CurrentDevice+01H,#LOW Hopper2
  230: 			break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 328


809108 8015              SJMP    ?C0006?SCHEDULER
  231: 		case 2:
80910A         ?C0013?SCHEDULER:
  232: 			CurrentDevice = &Hopper3;
80910A 752823            MOV     CurrentDevice,#HIGH Hopper3
80910D 7529A8            MOV     CurrentDevice+01H,#LOW Hopper3
  233: 			break;
809110 800D              SJMP    ?C0006?SCHEDULER
  234: 		default:
  235: 			ZhkSchedulerState = TASK_NULL;
  236: 		}
  237: 		break;	
  238: 	case EQUIP_CHANNEL:
809112         ?C0015?SCHEDULER:
  239: 		CurrentDevice = &Channel;
809112 752823            MOV     CurrentDevice,#HIGH Channel
809115 7529BE            MOV     CurrentDevice+01H,#LOW Channel
  240: 		break;
809118 8005              SJMP    ?C0006?SCHEDULER
  241: 	default:
80911A         ?C0016?SCHEDULER:
  242: 		ZhkSchedulerState = TASK_NULL;
80911A         
80911A E4                CLR     A
80911B 9023D3            MOV     DPTR,#ZhkSchedulerState
80911E F0                MOVX    @DPTR,A
  243: 	}	
80911F         ?C0006?SCHEDULER:
  244: 	// 设备调度流程控制
  245: 	switch( ZhkSchedulerState )
80911F 9023D3            MOV     DPTR,#ZhkSchedulerState
809122 E0                MOVX    A,@DPTR
809123 14                DEC     A
809124 24FB              ADD     A,#0FBH
809126 500B              JNC     ?C0023?SCHEDULER
809128 2406              ADD     A,#06H
80912A 705A              JNZ     ?C0033?SCHEDULER
  246: 	{
  247: 	case TASK_NULL:
80912C         ?C0018?SCHEDULER:
  248: 		ZhkNullTask();
80912C A51280759F        ECALL   ZhkNullTask
  249: 		break;
809131 8058              SJMP    ?C0017?SCHEDULER
  250: 	case TASK_REDAY:
  251: 	case TASK_WAIT:
  252: 	case TASK_REWAIT:
  253: 	case TASK_ERROR:
  254: 	case TASK_FINISH:
809133         ?C0023?SCHEDULER:
  255: 		if ( CurrentDevice == -1 ) 
809133 AE28              MOV     R6,CurrentDevice
809135 AF29              MOV     R7,CurrentDevice+01H
809137 BEFF08            CJNE    R6,#0FFH,?C0024?SCHEDULER
80913A BFFF05            CJNE    R7,#0FFH,?C0024?SCHEDULER
  256: 			ZhkSchedulerState = TASK_NULL;
80913D E4                CLR     A
80913E 9023D3            MOV     DPTR,#ZhkSchedulerState
809141 F0                MOVX    @DPTR,A
809142         ?C0024?SCHEDULER:
  257: 		switch( CurrentTask.Id )
809142 9028AF            MOV     DPTR,#CurrentTask+01H
809145 E0                MOVX    A,@DPTR
809146 24FD              ADD     A,#0FDH
809148 500E              JNC     ?C0028?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 329


80914A 24FA              ADD     A,#0FAH
80914C 6015              JZ      ?C0029?SCHEDULER
80914E 24FC              ADD     A,#0FCH
809150 601C              JZ      ?C0030?SCHEDULER
809152 24F8              ADD     A,#0F8H
809154 6023              JZ      ?C0031?SCHEDULER
809156 802C              SJMP    ?C0032?SCHEDULER
  258: 		{
  259: 		case ID_HOPPER1:
  260: 		case ID_HOPPER2:
  261: 		case ID_HOPPER3:
809158         ?C0028?SCHEDULER:
  262: 			ZhkHopperTask( &CurrentTask );
809158 7E28              MOV     R6,#HIGH CurrentTask
80915A 7FAE              MOV     R7,#LOW CurrentTask
80915C A512812571        ECALL   _ZhkHopperTask
  263: 	//		Trace( "\n ZhkSchedulerState = %bu", ZhkSchedulerState );
  264: 			break;
809161 8028              SJMP    ?C0017?SCHEDULER
  265: 		case ID_LCD:
809163         ?C0029?SCHEDULER:
  266: 			ZhkLcdTask( &CurrentTask );
809163 7E28              MOV     R6,#HIGH CurrentTask
809165 7FAE              MOV     R7,#LOW CurrentTask
809167 A5128126C5        ECALL   _ZhkLcdTask
  267: 			break;		
80916C 801D              SJMP    ?C0017?SCHEDULER
  268: 		case ID_CASHER:
80916E         ?C0030?SCHEDULER:
  269: 			ZhkCasherTask( &CurrentTask );
80916E 7E28              MOV     R6,#HIGH CurrentTask
809170 7FAE              MOV     R7,#LOW CurrentTask
809172 A512812E7E        ECALL   _ZhkCasherTask
  270: 			break;	
809177 8012              SJMP    ?C0017?SCHEDULER
  271: //		case ID_HUB:
  272: //			ZhkHubTask( &CurrentTask );
  273: //			break;
  274: //		case ID_COINER1:
  275: //			CoinerTask( &CurrentTask );
  276: //			break;
  277: 		case ID_CHANNEL:
809179         ?C0031?SCHEDULER:
  278: 			ZhkChannelTask( &CurrentTask );
809179 7E28              MOV     R6,#HIGH CurrentTask
80917B 7FAE              MOV     R7,#LOW CurrentTask
80917D A51280F374        ECALL   _ZhkChannelTask
  279: 			break;		
809182 8007              SJMP    ?C0017?SCHEDULER
  280: 		default:
809184         ?C0032?SCHEDULER:
  281: 			ZhkSchedulerState = TASK_NULL; 
  282: 		}
  283: 		break;
809184 8000              SJMP    ?C0326?SCHEDULER
  284: 	default:
809186         ?C0033?SCHEDULER:
  285: 		ZhkSchedulerState = TASK_NULL; 
809186         
809186 E4                CLR     A
809187 9023D3            MOV     DPTR,#ZhkSchedulerState
80918A F0                MOVX    @DPTR,A
  286: 		break;
  287: 	}
80918B         ?C0017?SCHEDULER:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 330


  288: /*	if( ( AlarmTimer == 0 ) && ( MaintFlag == 0 ) )
  289: 	{
  290: 		if( ( IfShakeAlarm() == 1 ) && ( AlarmFlag == 0 ) )
  291: 		{
  292: 			Trace( "\n Have Alarm" );
  293: 			SetAlertOn();
  294: 			AlarmTimer = 30;//90秒钟
  295: 			AlarmFlag = 1;		
  296: 		}
  297: 		else if( ( AlarmFlag == 1 ) )
  298: 		{				
  299: 			SetAlertOff();
  300: 			AlarmFlag = 0;
  301: 		}
  302: 	}*/
  303: 	return ZhkSchedulerState;	
80918B 9023D3            MOV     DPTR,#ZhkSchedulerState
80918E E0                MOVX    A,@DPTR
80918F FF                MOV     R7,A
  304: }
809190         ?C0034?SCHEDULER:
809190 A522              ERET    
----- FUNCTION SchedulerProcess (END) -------


----- FUNCTION ?L?COM003E (BEGIN) -----
809192 A5128082D7        ECALL   CoreProcessCycle
----- FUNCTION IsInsertBill (BEGIN) -----
 FILE: 'mainflow.c'
 1833: u_char  IsInsertBill()
 1834: {	
 1835: 	u_int xdata CoinSum = 0;
 1836: 	u_char xdata flag = 0;
809197 E4                CLR     A
809198 90159C            MOV     DPTR,#CoinSum
80919B F0                MOVX    @DPTR,A
80919C A3                INC     DPTR
80919D F0                MOVX    @DPTR,A
 1837: 
80919E A3                INC     DPTR
80919F F0                MOVX    @DPTR,A
 1838: //	Trace( "\n IsInsertBill" );	
 1839: 	if( SystemParameter.BillNo == 1 )
8091A0 900427            MOV     DPTR,#SystemParameter+07H
8091A3 E0                MOVX    A,@DPTR
8091A4 B40117            CJNE    A,#01H,?C0409?MAINFLOW
 1840: 	{
 1841: 		if ( CasherIsCashIn())
8091A7 A51280958C        ECALL   CasherIsCashIn
8091AC EF                MOV     A,R7
8091AD 6006              JZ      ?C0410?MAINFLOW
 1842: 		{
 1843: 			Trace( "\n Casher" ); 
 1844: 			flag = 1;
8091AF 90159E            MOV     DPTR,#flag
8091B2 7401              MOV     A,#01H
8091B4 F0                MOVX    @DPTR,A
 1845: 		}
8091B5         ?C0410?MAINFLOW:
 1846: 		WaitForWork( 10, NULL );
8091B5 E4                CLR     A
8091B6 7F0A              MOV     R7,#0AH
8091B8 FE                MOV     R6,A
8091B9 A512808330        ECALL   ?L?COM000D
 1847: 	}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 331


8091BE         ?C0409?MAINFLOW:
 1848: 
 1849: 	CoinSum = GetCoin();
8091BE A51280926F        ECALL   GetCoin
8091C3 90159C            MOV     DPTR,#CoinSum
8091C6 EE                MOV     A,R6
8091C7 F0                MOVX    @DPTR,A
8091C8 A3                INC     DPTR
8091C9 EF                MOV     A,R7
8091CA F0                MOVX    @DPTR,A
8091CB         ?C0411?MAINFLOW:
 1850: 	while ( CoinSum ) 
8091CB 90159C            MOV     DPTR,#CoinSum
8091CE E0                MOVX    A,@DPTR
8091CF 7002              JNZ     ?C1024?MAINFLOW
8091D1 A3                INC     DPTR
8091D2 E0                MOVX    A,@DPTR
8091D3         ?C1024?MAINFLOW:
8091D3 7003              JNZ     $ + 5H
8091D5 02925B            LJMP    ?C0412?MAINFLOW
 1851: 	{	
 1852: 	#ifdef _COIN_INPUT_PARALLEL	
 1853: 		CurrentPayed += CoinSum ;
8091D8 90159C            MOV     DPTR,#CoinSum
8091DB E0                MOVX    A,@DPTR
8091DC FE                MOV     R6,A
8091DD A3                INC     DPTR
8091DE E0                MOVX    A,@DPTR
8091DF FF                MOV     R7,A
8091E0 900B25            MOV     DPTR,#CurrentPayed
8091E3 EE                MOV     A,R6
8091E4 8FF0              MOV     B,R7
8091E6 A512800600        ECALL   ?C?IILDX
 1854: 		TradeCounter.TrueCurrencySum += CoinSum;
8091EB 900AF1            MOV     DPTR,#TradeCounter
8091EE A51280073E        ECALL   ?C?LLDXDATA0
8091F3 E4                CLR     A
8091F4 FC                MOV     R4,A
8091F5 FD                MOV     R5,A
8091F6 A51280062E        ECALL   ?C?LADD
8091FB 900AF1            MOV     DPTR,#TradeCounter
8091FE A512800792        ECALL   ?C?LSTXDATA
 1855: 		TradeCounter.CoinSum += CoinSum;
809203 900AF9            MOV     DPTR,#TradeCounter+08H
809206 A51280073E        ECALL   ?C?LLDXDATA0
80920B 90159C            MOV     DPTR,#CoinSum
80920E E0                MOVX    A,@DPTR
80920F FE                MOV     R6,A
809210 A3                INC     DPTR
809211 E0                MOVX    A,@DPTR
809212 FF                MOV     R7,A
809213 E4                CLR     A
809214 FC                MOV     R4,A
809215 FD                MOV     R5,A
809216 A51280062E        ECALL   ?C?LADD
80921B 900AF9            MOV     DPTR,#TradeCounter+08H
80921E A512800792        ECALL   ?C?LSTXDATA
 1856: 	#else
 1857: 		CurrentPayed += CoinSum * COINMULTIPLE ;
 1858: 		TradeCounter.TrueCurrencySum += CoinSum * COINMULTIPLE;
 1859: 		TradeCounter.CoinSum += CoinSum * COINMULTIPLE;
 1860: 	#endif		
 1861: 		SchedulerProcess();
809223 A5128090B6        ECALL   SchedulerProcess
 1862: 		CoinSum = GetCoin();
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 332


809228 A51280926F        ECALL   GetCoin
80922D 90159C            MOV     DPTR,#CoinSum
809230 EE                MOV     A,R6
809231 F0                MOVX    @DPTR,A
809232 A3                INC     DPTR
809233 EF                MOV     A,R7
809234 F0                MOVX    @DPTR,A
 1863: 		if( QueryFlag == 1 )
809235 30271A            JNB     QueryFlag,?C0413?MAINFLOW
 1864: 		{
 1865: 			DisplayCursorState( 0, 1, 1, 0, 1 );
809238 D21A              SETB    ?_DisplayCursorState?BIT
80923A E4                CLR     A
80923B 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80923E F0                MOVX    @DPTR,A
80923F D21B              SETB    ?_DisplayCursorState?BIT+01H
809241 7D01              MOV     R5,#01H
809243 FF                MOV     R7,A
809244 A51280897C        ECALL   _DisplayCursorState
 1866: 			QueryFlag = 0;
809249 C227              CLR     QueryFlag
 1867: 			QueryTimer = 0;
80924B E4                CLR     A
80924C F514              MOV     QueryTimer,A
 1868: 			CurrentStockCode = 0;
80924E 900B28            MOV     DPTR,#CurrentStockCode
809251 F0                MOVX    @DPTR,A
 1869: 		}
809252         ?C0413?MAINFLOW:
 1870: 		flag = 1;
809252 90159E            MOV     DPTR,#flag
809255 7401              MOV     A,#01H
809257 F0                MOVX    @DPTR,A
 1871: 	}
809258 0291CB            LJMP    ?C0411?MAINFLOW
80925B         ?C0412?MAINFLOW:
 1872: 			
 1873: 	WaitForWork( 10, NULL );
80925B E4                CLR     A
80925C 7F0A              MOV     R7,#0AH
80925E FE                MOV     R6,A
80925F A512808330        ECALL   ?L?COM000D
 1874: 	if( flag == 0 )
809264 90159E            MOV     DPTR,#flag
809267 E0                MOVX    A,@DPTR
809268 7F01              MOV     R7,#01H
80926A 7001              JNZ     ?C0414?MAINFLOW
 1875: 	{	
 1876: //		Trace( "\n NOT Bill Insert" );
 1877: 		return 0;
80926C FF                MOV     R7,A
 1878: 	}
80926D         ?C0414?MAINFLOW:
 1879: 	else
 1880: 	{
 1881: //		Trace( "\n Have Bill Insert" );
 1882: 		return	1;
 1883: 	}
 1884: }
80926D         ?C0415?MAINFLOW:
80926D A522              ERET    
----- FUNCTION IsInsertBill (END) -------


----- FUNCTION GetCoin (BEGIN) -----
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 333


 FILE: 'IOInput.c'
  669: 	uint GetCoin( void )
  670: 	{
  671: 		uint data ch=0;	
  672: 		EA = 0;
80926F E4                CLR     A
809270 F528              MOV     ch,A
809272 F529              MOV     ch+01H,A
  673: 		if( ZhkCoiner.Count >= 1 )
809274 C2AF              CLR     EA
  674: 		{
809276 902DD9            MOV     DPTR,#ZhkCoiner+01H
809279 E0                MOVX    A,@DPTR
80927A FF                MOV     R7,A
80927B C3                CLR     C
80927C 9401              SUBB    A,#01H
80927E 401B              JC      ?C0120?IOINPUT
  675: 		    //ch = ZhkCoiner.Count * 25;
  676:             ch = ZhkCoiner.Count * SystemParameter.coinValue[0];
809280 7E00              MOV     R6,#00H
809282 900459            MOV     DPTR,#SystemParameter+039H
809285 E0                MOVX    A,@DPTR
809286 FC                MOV     R4,A
809287 A3                INC     DPTR
809288 E0                MOVX    A,@DPTR
809289 FD                MOV     R5,A
80928A A512800559        ECALL   ?C?IMUL
80928F 8E28              MOV     ch,R6
809291 8F29              MOV     ch+01H,R7
  677: 	    	ZhkCoiner.Count = 0;
809293 E4                CLR     A
809294 902DD9            MOV     DPTR,#ZhkCoiner+01H
809297 F0                MOVX    @DPTR,A
  678: 		}
809298 029373            LJMP    ?C0121?IOINPUT
80929B         ?C0120?IOINPUT:
  679: 		else if( ZhkCoiner.CountChn1 >= 1 )
80929B 902DDA            MOV     DPTR,#ZhkCoiner+02H
80929E E0                MOVX    A,@DPTR
80929F FF                MOV     R7,A
8092A0 C3                CLR     C
8092A1 9401              SUBB    A,#01H
8092A3 401B              JC      ?C0122?IOINPUT
  680: 		{
  681: 		    //ch = ZhkCoiner.CountChn1 * 1;
  682: 			//ch = ZhkCoiner.CountChn1 * CoinSet.Line1;
  683:             ch = ZhkCoiner.CountChn1 * SystemParameter.coinValue[0];
8092A5 7E00              MOV     R6,#00H
8092A7 900459            MOV     DPTR,#SystemParameter+039H
8092AA E0                MOVX    A,@DPTR
8092AB FC                MOV     R4,A
8092AC A3                INC     DPTR
8092AD E0                MOVX    A,@DPTR
8092AE FD                MOV     R5,A
8092AF A512800559        ECALL   ?C?IMUL
8092B4 8E28              MOV     ch,R6
8092B6 8F29              MOV     ch+01H,R7
  684: 			ZhkCoiner.CountChn1 = 0;
8092B8 E4                CLR     A
8092B9 902DDA            MOV     DPTR,#ZhkCoiner+02H
8092BC F0                MOVX    @DPTR,A
  685: 		}
8092BD 029373            LJMP    ?C0121?IOINPUT
8092C0         ?C0122?IOINPUT:
  686: 	    else if( ZhkCoiner.CountChn2 >= 1 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 334


8092C0 902DDB            MOV     DPTR,#ZhkCoiner+03H
8092C3 E0                MOVX    A,@DPTR
8092C4 FF                MOV     R7,A
8092C5 C3                CLR     C
8092C6 9401              SUBB    A,#01H
8092C8 401B              JC      ?C0124?IOINPUT
  687: 		{
  688: 		    //ch = ZhkCoiner.CountChn2 * 2;
  689: 			//ch = ZhkCoiner.CountChn2 * CoinSet.Line2;
  690:             ch = ZhkCoiner.CountChn2 * SystemParameter.coinValue[1];
8092CA 7E00              MOV     R6,#00H
8092CC 90045B            MOV     DPTR,#SystemParameter+03BH
8092CF E0                MOVX    A,@DPTR
8092D0 FC                MOV     R4,A
8092D1 A3                INC     DPTR
8092D2 E0                MOVX    A,@DPTR
8092D3 FD                MOV     R5,A
8092D4 A512800559        ECALL   ?C?IMUL
8092D9 8E28              MOV     ch,R6
8092DB 8F29              MOV     ch+01H,R7
  691: 			ZhkCoiner.CountChn2 = 0;
8092DD E4                CLR     A
8092DE 902DDB            MOV     DPTR,#ZhkCoiner+03H
8092E1 F0                MOVX    @DPTR,A
  692: 		}
8092E2 029373            LJMP    ?C0121?IOINPUT
8092E5         ?C0124?IOINPUT:
  693: 		else if( ZhkCoiner.CountChn3 >= 1 )
8092E5 902DDC            MOV     DPTR,#ZhkCoiner+04H
8092E8 E0                MOVX    A,@DPTR
8092E9 FF                MOV     R7,A
8092EA C3                CLR     C
8092EB 9401              SUBB    A,#01H
8092ED 401A              JC      ?C0126?IOINPUT
  694: 		{
  695: 		    //ch = ZhkCoiner.CountChn3 * 5;
  696: 			//ch = ZhkCoiner.CountChn3 * CoinSet.Line3;
  697:             ch = ZhkCoiner.CountChn3 * SystemParameter.coinValue[2];
8092EF 7E00              MOV     R6,#00H
8092F1 90045D            MOV     DPTR,#SystemParameter+03DH
8092F4 E0                MOVX    A,@DPTR
8092F5 FC                MOV     R4,A
8092F6 A3                INC     DPTR
8092F7 E0                MOVX    A,@DPTR
8092F8 FD                MOV     R5,A
8092F9 A512800559        ECALL   ?C?IMUL
8092FE 8E28              MOV     ch,R6
809300 8F29              MOV     ch+01H,R7
  698: 			ZhkCoiner.CountChn3 = 0;
809302 E4                CLR     A
809303 902DDC            MOV     DPTR,#ZhkCoiner+04H
809306 F0                MOVX    @DPTR,A
  699: 		}
809307 806A              SJMP    ?C0121?IOINPUT
809309         ?C0126?IOINPUT:
  700: 		else if( ZhkCoiner.CountChn4 >= 1 )
809309 902DDD            MOV     DPTR,#ZhkCoiner+05H
80930C E0                MOVX    A,@DPTR
80930D FF                MOV     R7,A
80930E C3                CLR     C
80930F 9401              SUBB    A,#01H
809311 401A              JC      ?C0128?IOINPUT
  701: 		{
  702: 		    //ch = ZhkCoiner.CountChn4 * SystemParameter.Exchange;    //30,
  703: 			//ch = ZhkCoiner.CountChn4 * CoinSet.Line4;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 335


  704:             ch = ZhkCoiner.CountChn4 * SystemParameter.coinValue[3];
809313 7E00              MOV     R6,#00H
809315 90045F            MOV     DPTR,#SystemParameter+03FH
809318 E0                MOVX    A,@DPTR
809319 FC                MOV     R4,A
80931A A3                INC     DPTR
80931B E0                MOVX    A,@DPTR
80931C FD                MOV     R5,A
80931D A512800559        ECALL   ?C?IMUL
809322 8E28              MOV     ch,R6
809324 8F29              MOV     ch+01H,R7
  705: 			ZhkCoiner.CountChn4 = 0;
809326 E4                CLR     A
809327 902DDD            MOV     DPTR,#ZhkCoiner+05H
80932A F0                MOVX    @DPTR,A
  706: 		}
80932B 8046              SJMP    ?C0121?IOINPUT
80932D         ?C0128?IOINPUT:
  707: 		else if( ZhkCoiner.CountChn5 >= 1 )
80932D 902DDE            MOV     DPTR,#ZhkCoiner+06H
809330 E0                MOVX    A,@DPTR
809331 FF                MOV     R7,A
809332 C3                CLR     C
809333 9401              SUBB    A,#01H
809335 401A              JC      ?C0130?IOINPUT
  708: 		{
  709: 		    //ch = ZhkCoiner.CountChn5 * SystemParameter.Exchange;    //60,
  710: 			//ch = ZhkCoiner.CountChn5 * CoinSet.Line5;
  711:             ch = ZhkCoiner.CountChn5 * SystemParameter.coinValue[4];
809337 7E00              MOV     R6,#00H
809339 900461            MOV     DPTR,#SystemParameter+041H
80933C E0                MOVX    A,@DPTR
80933D FC                MOV     R4,A
80933E A3                INC     DPTR
80933F E0                MOVX    A,@DPTR
809340 FD                MOV     R5,A
809341 A512800559        ECALL   ?C?IMUL
809346 8E28              MOV     ch,R6
809348 8F29              MOV     ch+01H,R7
  712: 			ZhkCoiner.CountChn5 = 0;
80934A E4                CLR     A
80934B 902DDE            MOV     DPTR,#ZhkCoiner+06H
80934E F0                MOVX    @DPTR,A
  713: 		}
80934F 8022              SJMP    ?C0121?IOINPUT
809351         ?C0130?IOINPUT:
  714: 		else if( ZhkCoiner.CountChn6 >= 1 )
809351 902DDF            MOV     DPTR,#ZhkCoiner+07H
809354 E0                MOVX    A,@DPTR
809355 FF                MOV     R7,A
809356 C3                CLR     C
809357 9401              SUBB    A,#01H
809359 4018              JC      ?C0121?IOINPUT
  715: 		{
  716: 		    //ch = ZhkCoiner.CountChn6 * SystemParameter.Exchange;
  717: 			//ch = ZhkCoiner.CountChn6 * CoinSet.Line6;
  718:             ch = ZhkCoiner.CountChn6 * SystemParameter.coinValue[5];
80935B 7E00              MOV     R6,#00H
80935D 900463            MOV     DPTR,#SystemParameter+043H
809360 E0                MOVX    A,@DPTR
809361 FC                MOV     R4,A
809362 A3                INC     DPTR
809363 E0                MOVX    A,@DPTR
809364 FD                MOV     R5,A
809365 A512800559        ECALL   ?C?IMUL
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 336


80936A 8E28              MOV     ch,R6
80936C 8F29              MOV     ch+01H,R7
  719: 			ZhkCoiner.CountChn6 = 0;
80936E E4                CLR     A
80936F 902DDF            MOV     DPTR,#ZhkCoiner+07H
809372 F0                MOVX    @DPTR,A
  720: 		}
809373         ?C0121?IOINPUT:
  721: 		EA = 1;
809373 D2AF              SETB    EA
  722: 		return ch;          
809375 AE28              MOV     R6,ch
809377 AF29              MOV     R7,ch+01H
  723: 	}
809379         ?C0133?IOINPUT:
809379 A522              ERET    
----- FUNCTION GetCoin (END) -------


----- FUNCTION CoinerTest (BEGIN) -----
 FILE: 'devicecheck.c'
  357: void CoinerTest()
  358: {	
  359: 	u_int xdata CoinSum = 0;
  360: 	u_int xdata CoinMnu = 0;
80937B E4                CLR     A
80937C 901748            MOV     DPTR,#CoinSum
80937F F0                MOVX    @DPTR,A
809380 A3                INC     DPTR
809381 F0                MOVX    @DPTR,A
  361: 	u_char xdata str[20];
809382 A3                INC     DPTR
809383 F0                MOVX    @DPTR,A
809384 A3                INC     DPTR
809385 F0                MOVX    @DPTR,A
  362: 	u_char xdata flag = 0;
809386 901760            MOV     DPTR,#flag
809389 F0                MOVX    @DPTR,A
  363: 	u_char xdata len = 0;
80938A A3                INC     DPTR
80938B F0                MOVX    @DPTR,A
  364: 	u_char xdata MyKey = 0;
80938C A3                INC     DPTR
80938D F0                MOVX    @DPTR,A
  365: 
  366: 	//照明灯测试
  367: 	Trace( "Coiner Test begin\n" );
  368: 	CoinerEnable();//使能硬币器
80938E A5128095F8        ECALL   CoinerEnable
  369: #ifdef _CHINA_
  370: 	DisplayStr( 0, 0, 1,"    硬币器测试", 14 );
  371: 	DisplayStr( 0, 1, 1, "请投币:", 7 );
  372: #else
  373: 	DisplayStr( 0, 0, 1,"Coin Acceptor test!", 19 );
809393 D21A              SETB    ?_DisplayStr?BIT
809395 7B80              MOV     R3,#BYTE2 0800DC1H
809397 7A0D              MOV     R2,#HIGH 0800DC1H
809399 79C1              MOV     R1,#LOW 0800DC1H
80939B 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80939E A5128007B6        ECALL   ?C?PSTXDATA
8093A3 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8093A6 7413              MOV     A,#013H
8093A8 A51280885B        ECALL   ?L?COM0007
  374: //	DisplayStr( 0, 1, 1, "Insert coin:\x24", 13 );
  375: 	DisplayStr( 0, 1, 1, "Insert coin:", 12 );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 337


8093AD D21A              SETB    ?_DisplayStr?BIT
8093AF 7B80              MOV     R3,#BYTE2 0800DD5H
8093B1 7A0D              MOV     R2,#HIGH 0800DD5H
8093B3 79D5              MOV     R1,#LOW 0800DD5H
8093B5 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
8093B8 A5128007B6        ECALL   ?C?PSTXDATA
8093BD 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
8093C0 740C              MOV     A,#0CH
8093C2 F0                MOVX    @DPTR,A
8093C3 7D01              MOV     R5,#01H
8093C5 E4                CLR     A
8093C6 FF                MOV     R7,A
8093C7 A51280885F        ECALL   _DisplayStr
  376: #endif
  377: 	SgwSecTimer= 30;		
8093CC 751E1E            MOV     SgwSecTimer,#01EH
  378: 	memset( str, 0, sizeof( str ) );
8093CF 7E00              MOV     R6,#00H
8093D1 7F14              MOV     R7,#014H
8093D3 7D00              MOV     R5,#00H
8093D5 7B00              MOV     R3,#?C?XDATASEG
8093D7 7A17              MOV     R2,#HIGH str
8093D9 794C              MOV     R1,#LOW str
8093DB A5128008A6        ECALL   ?C?MEMSET
8093E0         ?C0036?DEVICECHECK:
  379: 	while( SgwSecTimer )
8093E0 E51E              MOV     A,SgwSecTimer
8093E2 7003              JNZ     $ + 5H
8093E4 02956A            LJMP    ?C0037?DEVICECHECK
  380: 	{
  381: 		WaitForWork( 100, NULL );
8093E7 E4                CLR     A
8093E8 7F64              MOV     R7,#064H
8093EA FE                MOV     R6,A
8093EB A512808330        ECALL   ?L?COM000D
  382: 		CoinMnu = GetCoin();	
8093F0 A51280926F        ECALL   GetCoin
8093F5 90174A            MOV     DPTR,#CoinMnu
8093F8 EE                MOV     A,R6
8093F9 F0                MOVX    @DPTR,A
8093FA A3                INC     DPTR
8093FB EF                MOV     A,R7
8093FC F0                MOVX    @DPTR,A
  383: 		if( CoinMnu != 0 )
8093FD 4E                ORL     A,R6
8093FE 602B              JZ      ?C0038?DEVICECHECK
  384: 		{		
809400         ?C0039?DEVICECHECK:
  385: 			while ( CoinMnu ) 
809400 90174A            MOV     DPTR,#CoinMnu
809403 E0                MOVX    A,@DPTR
809404 FE                MOV     R6,A
809405 A3                INC     DPTR
809406 E0                MOVX    A,@DPTR
809407 FF                MOV     R7,A
809408 4E                ORL     A,R6
809409 601A              JZ      ?C0040?DEVICECHECK
  386: 			{		
  387: 		#ifdef _COIN_INPUT_PARALLEL			
  388: 				CoinSum += CoinMnu;
80940B 901748            MOV     DPTR,#CoinSum
80940E EE                MOV     A,R6
80940F 8FF0              MOV     B,R7
809411 A512800600        ECALL   ?C?IILDX
  389: 		#else
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 338


  390: 				CoinSum += CoinMnu*COINMULTIPLE;			
  391: 		#endif
  392: 				Trace("\n CoinSum = %u", CoinSum);
  393: 				CoinMnu = GetCoin();
809416 A51280926F        ECALL   GetCoin
80941B 90174A            MOV     DPTR,#CoinMnu
80941E EE                MOV     A,R6
80941F F0                MOVX    @DPTR,A
809420 A3                INC     DPTR
809421 EF                MOV     A,R7
809422 F0                MOVX    @DPTR,A
  394: 			}
809423 80DB              SJMP    ?C0039?DEVICECHECK
809425         ?C0040?DEVICECHECK:
  395: 			flag = 1;
809425 901760            MOV     DPTR,#flag
809428 7401              MOV     A,#01H
80942A F0                MOVX    @DPTR,A
  396: 			
  397: 		}
80942B         ?C0038?DEVICECHECK:
  398: 		if( flag == 1 )
80942B 901760            MOV     DPTR,#flag
80942E E0                MOVX    A,@DPTR
80942F 6401              XRL     A,#01H
809431 6003              JZ      $ + 5H
809433 029554            LJMP    ?C0041?DEVICECHECK
  399: 		{	
  400: 			switch( SystemParameter.curUnit )
809436 900468            MOV     DPTR,#SystemParameter+048H
809439 E0                MOVX    A,@DPTR
80943A FE                MOV     R6,A
80943B A3                INC     DPTR
80943C E0                MOVX    A,@DPTR
80943D FF                MOV     R7,A
80943E EE                MOV     A,R6
80943F 6003              JZ      $ + 5H
809441 029516            LJMP    ?C0046?DEVICECHECK
809444 EF                MOV     A,R7
809445 24F6              ADD     A,#0F6H
809447 602A              JZ      ?C0044?DEVICECHECK
809449 24A6              ADD     A,#0A6H
80944B 606F              JZ      ?C0045?DEVICECHECK
80944D 2463              ADD     A,#063H
80944F 6003              JZ      $ + 5H
809451 029516            LJMP    ?C0046?DEVICECHECK
  401: 			{
  402: 				case 1:
809454         ?C0043?DEVICECHECK:
  403: 			#ifdef _CHINA_
  404: 					len = sprintf( str, "已投入金额: %u", CoinSum );	
  405: 			#else
  406: 					len = sprintf( str, "Insert coin: %u", CoinSum );		
809454 7B80              MOV     R3,#BYTE2 0800DE2H
809456 7A0D              MOV     R2,#HIGH 0800DE2H
809458 79E2              MOV     R1,#LOW 0800DE2H
80945A 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80945D A5128007B6        ECALL   ?C?PSTXDATA
809462 901748            MOV     DPTR,#CoinSum
809465 E0                MOVX    A,@DPTR
809466 FF                MOV     R7,A
809467 A3                INC     DPTR
809468 E0                MOVX    A,@DPTR
809469 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80946C CF                XCH     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 339


80946D F0                MOVX    @DPTR,A
80946E A3                INC     DPTR
80946F EF                MOV     A,R7
  407: 			#endif	
  408: 				break;				
809470 029503            LJMP    ?C0273?DEVICECHECK
  409: 				case 10:
809473         ?C0044?DEVICECHECK:
  410: 			#ifdef _CHINA_
  411: 					len = sprintf( str, "已投入金额: %u.%u", CoinSum/SystemParameter.curUnit, CoinSum%SystemParameter.curUnit );
>> 	
  412: 			#else
  413: 					len = sprintf( str, "Insert coin: %u.%u", CoinSum/SystemParameter.curUnit, CoinSum%SystemParameter.curUnit )
>> ;		
809473 7B80              MOV     R3,#BYTE2 0800DF2H
809475 7A0D              MOV     R2,#HIGH 0800DF2H
809477 79F2              MOV     R1,#LOW 0800DF2H
809479 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80947C A5128007B6        ECALL   ?C?PSTXDATA
809481 900468            MOV     DPTR,#SystemParameter+048H
809484 E0                MOVX    A,@DPTR
809485 FA                MOV     R2,A
809486 A3                INC     DPTR
809487 E0                MOVX    A,@DPTR
809488 FB                MOV     R3,A
809489 901748            MOV     DPTR,#CoinSum
80948C E0                MOVX    A,@DPTR
80948D FE                MOV     R6,A
80948E A3                INC     DPTR
80948F E0                MOVX    A,@DPTR
809490 FF                MOV     R7,A
809491 AD03              MOV     R5,AR3
809493 AC02              MOV     R4,AR2
809495 A51280056C        ECALL   ?C?UIDIV
80949A 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80949D EE                MOV     A,R6
80949E F0                MOVX    @DPTR,A
80949F A3                INC     DPTR
8094A0 EF                MOV     A,R7
8094A1 F0                MOVX    @DPTR,A
8094A2 901748            MOV     DPTR,#CoinSum
8094A5 E0                MOVX    A,@DPTR
8094A6 FE                MOV     R6,A
8094A7 A3                INC     DPTR
8094A8 E0                MOVX    A,@DPTR
8094A9 FF                MOV     R7,A
8094AA AD03              MOV     R5,AR3
8094AC AC02              MOV     R4,AR2
8094AE A51280056C        ECALL   ?C?UIDIV
8094B3 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8094B6 EC                MOV     A,R4
8094B7 F0                MOVX    @DPTR,A
8094B8 A3                INC     DPTR
8094B9 ED                MOV     A,R5
8094BA         
  414: 			#endif	
  415: 				break;
8094BA 8047              SJMP    ?C0273?DEVICECHECK
  416: 				case 100:
8094BC         ?C0045?DEVICECHECK:
  417: 			#ifdef _CHINA_
  418: 					len = sprintf( str, "已投入金额: %u.%02u", CoinSum/SystemParameter.curUnit, CoinSum%SystemParameter.curUnit 
>> );	
  419: 			#else
  420: 					len = sprintf( str, "Insert coin: %u.%02u", CoinSum/SystemParameter.curUnit, CoinSum%SystemParameter.curUnit
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 340


>>  );		
8094BC 7B80              MOV     R3,#BYTE2 0800E05H
8094BE 7A0E              MOV     R2,#HIGH 0800E05H
8094C0 7905              MOV     R1,#LOW 0800E05H
8094C2 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8094C5 A5128007B6        ECALL   ?C?PSTXDATA
8094CA 900468            MOV     DPTR,#SystemParameter+048H
8094CD E0                MOVX    A,@DPTR
8094CE FA                MOV     R2,A
8094CF A3                INC     DPTR
8094D0 E0                MOVX    A,@DPTR
8094D1 FB                MOV     R3,A
8094D2 901748            MOV     DPTR,#CoinSum
8094D5 E0                MOVX    A,@DPTR
8094D6 FE                MOV     R6,A
8094D7 A3                INC     DPTR
8094D8 E0                MOVX    A,@DPTR
8094D9 FF                MOV     R7,A
8094DA AD03              MOV     R5,AR3
8094DC AC02              MOV     R4,AR2
8094DE A51280056C        ECALL   ?C?UIDIV
8094E3 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8094E6 EE                MOV     A,R6
8094E7 F0                MOVX    @DPTR,A
8094E8 A3                INC     DPTR
8094E9 EF                MOV     A,R7
8094EA F0                MOVX    @DPTR,A
8094EB 901748            MOV     DPTR,#CoinSum
8094EE E0                MOVX    A,@DPTR
8094EF FE                MOV     R6,A
8094F0 A3                INC     DPTR
8094F1 E0                MOVX    A,@DPTR
8094F2 FF                MOV     R7,A
8094F3 AD03              MOV     R5,AR3
8094F5 AC02              MOV     R4,AR2
8094F7 A51280056C        ECALL   ?C?UIDIV
8094FC 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8094FF EC                MOV     A,R4
809500 F0                MOVX    @DPTR,A
809501 A3                INC     DPTR
809502 ED                MOV     A,R5
809503         
809503 F0                MOVX    @DPTR,A
809504 7B00              MOV     R3,#?C?XDATASEG
809506 7A17              MOV     R2,#HIGH str
809508 794C              MOV     R1,#LOW str
80950A A512800949        ECALL   _sprintf
80950F 901761            MOV     DPTR,#len
809512 EF                MOV     A,R7
809513 F0                MOVX    @DPTR,A
  421: 			#endif	
  422: 				break;
809514 8014              SJMP    ?C0042?DEVICECHECK
  423: 				default:
809516         ?C0046?DEVICECHECK:
  424: 					len = 0;
809516 E4                CLR     A
809517 901761            MOV     DPTR,#len
80951A F0                MOVX    @DPTR,A
  425: 					memset( str, 0, sizeof( str ) );
80951B FE                MOV     R6,A
80951C 7F14              MOV     R7,#014H
80951E FD                MOV     R5,A
80951F 7B00              MOV     R3,#?C?XDATASEG
809521 7A17              MOV     R2,#HIGH str
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 341


809523 794C              MOV     R1,#LOW str
809525 A5128008A6        ECALL   ?C?MEMSET
  426: 				break;
  427: 			}
80952A         ?C0042?DEVICECHECK:
  428: 			if( len != 0 )
80952A 901761            MOV     DPTR,#len
80952D E0                MOVX    A,@DPTR
80952E FF                MOV     R7,A
80952F 6023              JZ      ?C0041?DEVICECHECK
  429: 			{
  430: 				DisplayStr( 0, 1, 1, str, len );
809531 D21A              SETB    ?_DisplayStr?BIT
809533 7B00              MOV     R3,#?C?XDATASEG
809535 7A17              MOV     R2,#HIGH str
809537 794C              MOV     R1,#LOW str
809539 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80953C A5128007B6        ECALL   ?C?PSTXDATA
809541 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
809544 EF                MOV     A,R7
809545 F0                MOVX    @DPTR,A
809546 7D01              MOV     R5,#01H
809548 E4                CLR     A
809549 FF                MOV     R7,A
80954A A51280885F        ECALL   _DisplayStr
  431: 				flag = 0;
80954F E4                CLR     A
809550 901760            MOV     DPTR,#flag
809553 F0                MOVX    @DPTR,A
  432: 			}
  433: 		}
809554         ?C0041?DEVICECHECK:
  434: 		MyKey = GetKey();		
809554 A5128096D1        ECALL   GetKey
809559 901762            MOV     DPTR,#MyKey
80955C EF                MOV     A,R7
80955D F0                MOVX    @DPTR,A
  435: 		if( ( MyKey  == KEY_SUBMIT ) || ( MyKey  == KEY_CANCEL ) )
80955E 640D              XRL     A,#0DH
809560 6008              JZ      ?C0037?DEVICECHECK
809562 E0                MOVX    A,@DPTR
809563 641B              XRL     A,#01BH
809565 6003              JZ      $ + 5H
809567 0293E0            LJMP    ?C0036?DEVICECHECK
  436: 			break;
  437: 	}		
80956A         ?C0037?DEVICECHECK:
  438: 	CoinerDisable();//禁能硬币器
80956A A512809595        ECALL   CoinerDisable
  439: #ifdef _CHINA_
  440: 	len = ChooseReturn( "  硬币器是否\xd5\xfd常?" );
  441: #else
  442: 	len = ChooseReturn( "Coin Acceptor OK ?" );	
80956F 7B80              MOV     R3,#BYTE2 0800E1AH
809571 7A0E              MOV     R2,#HIGH 0800E1AH
809573 791A              MOV     R1,#LOW 0800E1AH
809575 A51280965D        ECALL   _ChooseReturn
80957A 901761            MOV     DPTR,#len
80957D EF                MOV     A,R7
80957E F0                MOVX    @DPTR,A
  443: #endif	
  444: 	if( len == 0 )//正常		
80957F 900B1C            MOV     DPTR,#DeviceStatus+01H
809582 7003              JNZ     ?C0050?DEVICECHECK
  445: 		DeviceStatus.CoinAccepter = 0;		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 342


809584 F0                MOVX    @DPTR,A
809585 8003              SJMP    ?C0052?DEVICECHECK
809587         ?C0050?DEVICECHECK:
  446: 	else 		
  447: 		DeviceStatus.CoinAccepter = 1;	
809587 7401              MOV     A,#01H
809589 F0                MOVX    @DPTR,A
  448: }
80958A         ?C0052?DEVICECHECK:
80958A A522              ERET    
----- FUNCTION CoinerTest (END) -------


----- FUNCTION CasherIsCashIn (BEGIN) -----
 FILE: 'scheduler.c'
 1346: uchar CasherIsCashIn( void )
 1347: {
 1348: 	return Casher.State & 0x10;
 1349: }
80958C 9023D7            MOV     DPTR,#Casher+03H
80958F E0                MOVX    A,@DPTR
809590 5410              ANL     A,#010H
809592 FF                MOV     R7,A
 1350: 
809593         ?C0246?SCHEDULER:
809593 A522              ERET    
----- FUNCTION CasherIsCashIn (END) -------


----- FUNCTION CoinerDisable (BEGIN) -----
 FILE: 'IOInput.c'
  174: bit CoinerDisable( void )
  175: {
  176: 	ZhkCoiner.State |= 0x20;
  177: 	ZhkHardCoinerEnable();
809595 902DD8            MOV     DPTR,#ZhkCoiner
809598 E0                MOVX    A,@DPTR
809599 4420              ORL     A,#020H
80959B F0                MOVX    @DPTR,A
  178: //	ZhkCoiner.State &= ~ 0x20;
80959C A5128137C2        ECALL   ZhkHardCoinerEnable
  179: //	ZhkHardCoinerDisable();
  180: 	return 1;
8095A1 D3                SETB    C
  181: }
8095A2         ?C0016?IOINPUT:
8095A2 A522              ERET    
----- FUNCTION CoinerDisable (END) -------


----- FUNCTION DisableBillDev (BEGIN) -----
 FILE: 'mainflow.c'
  288: u_char DisableBillDev()
  289: {
  290: 	if( !DisableFlag )
  291: 	{
8095A4 202A1C            JB      DisableFlag,?C0059?MAINFLOW
  292: 		if( SystemParameter.BillNo == 1 )
  293: 			CasherQueryDisable();		
8095A7 900427            MOV     DPTR,#SystemParameter+07H
8095AA E0                MOVX    A,@DPTR
8095AB B40105            CJNE    A,#01H,?C0060?MAINFLOW
  294: 		CoinerDisable();	
8095AE A5128097E6        ECALL   CasherQueryDisable
8095B3         ?C0060?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 343


  295: 		WaitForWork( 20 , NULL );
8095B3 A512809595        ECALL   CoinerDisable
  296: 		DisableFlag = 1;
8095B8 E4                CLR     A
8095B9 7F14              MOV     R7,#014H
8095BB FE                MOV     R6,A
8095BC A512808330        ECALL   ?L?COM000D
  297: 	}
8095C1 D22A              SETB    DisableFlag
  298: 	return 0;
8095C3         ?C0059?MAINFLOW:
  299: }
8095C3 7F00              MOV     R7,#00H
  300: 
8095C5         ?C0061?MAINFLOW:
8095C5 A522              ERET    
----- FUNCTION DisableBillDev (END) -------


----- FUNCTION CasherReject (BEGIN) -----
 FILE: 'scheduler.c'
 1332: bit CasherReject( void )
 1333: {
 1334: 	struct COMMTASK xdata TaskTemp;
 1335: 	
 1336: 	Trace("\n CasherReject");
 1337: 	ZhkCasherStatus = CASHER_STATUS_REJECT;
8095C7 902368            MOV     DPTR,#ZhkCasherStatus
8095CA 7404              MOV     A,#04H
8095CC F0                MOVX    @DPTR,A
 1338: 	TaskTemp.Id 		= ID_CASHER;
8095CD 9015BA            MOV     DPTR,#TaskTemp+01H
8095D0 740D              MOV     A,#0DH
8095D2 F0                MOVX    @DPTR,A
 1339: 	TaskTemp.Cmd 		= CASHER_REJECT;
8095D3 A3                INC     DPTR
8095D4 7453              MOV     A,#053H
8095D6 F0                MOVX    @DPTR,A
 1340: 	TaskTemp.Sn		= Casher.Sn;
8095D7 9023D5            MOV     DPTR,#Casher+01H
8095DA E0                MOVX    A,@DPTR
8095DB 9015BC            MOV     DPTR,#TaskTemp+03H
8095DE F0                MOVX    @DPTR,A
 1341: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
8095DF 9015B9            MOV     DPTR,#TaskTemp
8095E2 7442              MOV     A,#042H
8095E4 F0                MOVX    @DPTR,A
 1342: 	TaskTemp.ParamLen	= 0;
8095E5 E4                CLR     A
8095E6 9015BE            MOV     DPTR,#TaskTemp+05H
8095E9 F0                MOVX    @DPTR,A
 1343: 	return ZhkSchedulerAddTask( &TaskTemp );
8095EA 7E15              MOV     R6,#HIGH TaskTemp
8095EC 7FB9              MOV     R7,#LOW TaskTemp
8095EE A51280976B        ECALL   _ZhkSchedulerAddTask
8095F3 EF                MOV     A,R7
8095F4 24FF              ADD     A,#0FFH
 1344: }
8095F6         ?C0245?SCHEDULER:
8095F6 A522              ERET    
----- FUNCTION CasherReject (END) -------


----- FUNCTION CoinerEnable (BEGIN) -----
 FILE: 'IOInput.c'
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 344


  160: bit CoinerEnable( void )
  161: {
  162: 	ZhkCoiner.State &= ~ 0x20;
  163: 	ZhkHardCoinerDisable();	
8095F8 902DD8            MOV     DPTR,#ZhkCoiner
8095FB E0                MOVX    A,@DPTR
8095FC 54DF              ANL     A,#0DFH
8095FE F0                MOVX    @DPTR,A
  164: #ifdef  _COIN_INPUT_PARALLEL
8095FF A5128137AA        ECALL   ZhkHardCoinerDisable
  165: 	CoinSet.Line1 = 50 ;
809604 902DE1            MOV     DPTR,#CoinSet+01H
809607 E4                CLR     A
809608 F0                MOVX    @DPTR,A
809609 A3                INC     DPTR
80960A 7432              MOV     A,#032H
80960C F0                MOVX    @DPTR,A
  166: 	CoinSet.Line2 = 50 ;
80960D A3                INC     DPTR
80960E E4                CLR     A
80960F F0                MOVX    @DPTR,A
809610 A3                INC     DPTR
809611 7432              MOV     A,#032H
809613 F0                MOVX    @DPTR,A
  167: 	CoinSet.Line3 = 100 ;
809614 A3                INC     DPTR
809615 E4                CLR     A
809616 F0                MOVX    @DPTR,A
809617 A3                INC     DPTR
809618 7464              MOV     A,#064H
80961A F0                MOVX    @DPTR,A
  168: 	CoinSet.Line4 = 100 ;	
80961B A3                INC     DPTR
80961C E4                CLR     A
80961D F0                MOVX    @DPTR,A
80961E A3                INC     DPTR
80961F 7464              MOV     A,#064H
809621 F0                MOVX    @DPTR,A
  169: 	CoinSet.Line5 = 0 ;
809622 E4                CLR     A
809623 A3                INC     DPTR
809624 F0                MOVX    @DPTR,A
809625 A3                INC     DPTR
809626 F0                MOVX    @DPTR,A
  170: 	CoinSet.Line6 = 0 ;		
809627 A3                INC     DPTR
809628 F0                MOVX    @DPTR,A
809629 A3                INC     DPTR
80962A F0                MOVX    @DPTR,A
  171: #endif
  172: 	return 1;
80962B D3                SETB    C
  173: }
80962C         ?C0015?IOINPUT:
80962C A522              ERET    
----- FUNCTION CoinerEnable (END) -------


----- FUNCTION EnableBillDev (BEGIN) -----
 FILE: 'mainflow.c'
  302: u_char EnableBillDev()
  303: {			
  304: 	if( DisableFlag )
  305: 	{		
80962E 302A28            JNB     DisableFlag,?C0062?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 345


  306: 		if( SystemParameter.BillNo == 1 )
  307: 		{			
809631 900427            MOV     DPTR,#SystemParameter+07H
809634 E0                MOVX    A,@DPTR
809635 B4010B            CJNE    A,#01H,?C0063?MAINFLOW
  308: 			if( DeviceStatus.BillAccepter == 0 )
  309: 				CasherQueryEnable();		
809638 900B1B            MOV     DPTR,#DeviceStatus
80963B E0                MOVX    A,@DPTR
80963C 7005              JNZ     ?C0063?MAINFLOW
  310: 		}
80963E A5128130A3        ECALL   CasherQueryEnable
  311: 		if( DeviceStatus.CoinAccepter == 0 )
809643         ?C0063?MAINFLOW:
  312: 			CoinerEnable();//使能硬币器	
809643 900B1C            MOV     DPTR,#DeviceStatus+01H
809646 E0                MOVX    A,@DPTR
809647 7005              JNZ     ?C0065?MAINFLOW
  313: 		WaitForWork( 20 , NULL );
809649 A5128095F8        ECALL   CoinerEnable
80964E         ?C0065?MAINFLOW:
  314: 		DisableFlag = 0;
80964E E4                CLR     A
80964F 7F14              MOV     R7,#014H
809651 FE                MOV     R6,A
809652 A512808330        ECALL   ?L?COM000D
  315: 	}
809657 C22A              CLR     DisableFlag
  316: 	return 0;
809659         ?C0062?MAINFLOW:
  317: }
809659 7F00              MOV     R7,#00H
  318: 
80965B         ?C0066?MAINFLOW:
80965B A522              ERET    
----- FUNCTION EnableBillDev (END) -------


----- FUNCTION _ChooseReturn (BEGIN) -----
 FILE: 'devicecheck.c'
   82: u_char ChooseReturn( u_char *str )
   83: {	
80965D 901763            MOV     DPTR,#str
809660 A5128007B6        ECALL   ?C?PSTXDATA
   84: 	u_char xdata MyKey = 0;
   85: 
809665 E4                CLR     A
809666 901766            MOV     DPTR,#MyKey
809669 F0                MOVX    @DPTR,A
   86: 	ClearKey();	
80966A A512808FA5        ECALL   ClearKey
   87: 	//显示字符	
   88: 	DisplayInfo( 0, 0 , str );
80966F 901763            MOV     DPTR,#str
809672 A5128007AC        ECALL   ?C?PLDXDATA
809677 E4                CLR     A
809678 FD                MOV     R5,A
809679 FF                MOV     R7,A
80967A A51280D750        ECALL   _DisplayInfo
   89: #ifdef _CHINA_
   90: 	DisplayStr( 0, 1, 1, "确定Enter 取消Cancel", 20 );
   91: #else
   92: 	DisplayStr( 0, 1, 1, "    Enter  Cancel", 17 );
80967F D21A              SETB    ?_DisplayStr?BIT
809681 7B80              MOV     R3,#BYTE2 0800CFEH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 346


809683 7A0C              MOV     R2,#HIGH 0800CFEH
809685 79FE              MOV     R1,#LOW 0800CFEH
809687 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80968A A5128007B6        ECALL   ?C?PSTXDATA
80968F 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
809692 7411              MOV     A,#011H
809694 F0                MOVX    @DPTR,A
809695 7D01              MOV     R5,#01H
809697 E4                CLR     A
809698 FF                MOV     R7,A
809699 A51280885F        ECALL   _DisplayStr
   93: #endif
   94:     
   95: 	//等待选择
   96: 	SgwSecTimer= 6;
80969E 751E06            MOV     SgwSecTimer,#06H
8096A1         ?C0001?DEVICECHECK:
   97: 	while( SgwSecTimer )
8096A1 E51E              MOV     A,SgwSecTimer
8096A3 6023              JZ      ?C0002?DEVICECHECK
   98: 	{
   99: 		WaitForWork( 50, NULL ); 
8096A5 E4                CLR     A
8096A6 7F32              MOV     R7,#032H
8096A8 FE                MOV     R6,A
8096A9 A512808330        ECALL   ?L?COM000D
  100: 		MyKey = GetKey();		
8096AE A5128096D1        ECALL   GetKey
8096B3 901766            MOV     DPTR,#MyKey
8096B6 EF                MOV     A,R7
8096B7 F0                MOVX    @DPTR,A
  101: 		switch ( MyKey )
8096B8 24E5              ADD     A,#0E5H
8096BA 6008              JZ      ?C0006?DEVICECHECK
8096BC 240E              ADD     A,#0EH
8096BE 70E1              JNZ     ?C0001?DEVICECHECK
  102: 	 	{
  103: 			case KEY_SUBMIT:				
8096C0         ?C0004?DEVICECHECK:
  104: 				return 0 ;			
8096C0 7F00              MOV     R7,#00H
8096C2 8006              SJMP    ?C0005?DEVICECHECK
  105: 			case KEY_CANCEL:				
8096C4         ?C0006?DEVICECHECK:
  106: 				return 1 ;					
8096C4 7F01              MOV     R7,#01H
8096C6 8002              SJMP    ?C0005?DEVICECHECK
  107: 			default:
  108: 				continue;
  109: 		}	
  110: 	}
8096C8         ?C0002?DEVICECHECK:
  111: 	return 2;
8096C8 7F02              MOV     R7,#02H
  112: }
8096CA         ?C0005?DEVICECHECK:
8096CA A522              ERET    
----- FUNCTION _ChooseReturn (END) -------


----- FUNCTION ?L?COM003D (BEGIN) -----
8096CC E4                CLR     A
8096CD 90175D            MOV     DPTR,#i
8096D0 F0                MOVX    @DPTR,A
----- FUNCTION GetKey (BEGIN) -----
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 347


 FILE: 'key.c'
   55: uchar GetKey( void )
   56: {
   57: 	uchar data i;
   58: 	uchar data ch;
   59: 	if ( ! ZhkKeyPermission ) return KEY_NULL;
8096D1 902DF4            MOV     DPTR,#ZhkKeyPermission
8096D4 E0                MOVX    A,@DPTR
8096D5 7004              JNZ     ?C0004?KEY
8096D7 7FFF              MOV     R7,#0FFH
8096D9 8054              SJMP    ?C0005?KEY
8096DB         ?C0004?KEY:
   60: 	ch = ZhkKeyBuf[ 0 ];
8096DB 902DF6            MOV     DPTR,#ZhkKeyBuf
8096DE E0                MOVX    A,@DPTR
8096DF F529              MOV     ch,A
   61: 	for( i = 0 ; i < sizeof( ZhkKeyBuf ) - 1 ; i ++ )
8096E1 E4                CLR     A
8096E2 F528              MOV     i,A
8096E4         ?C0006?KEY:
8096E4 E528              MOV     A,i
8096E6 C3                CLR     C
8096E7 9400              SUBB    A,#00H
8096E9 501E              JNC     ?C0007?KEY
   62: 		ZhkKeyBuf[ i ] = ZhkKeyBuf[ i + 1 ];
8096EB 74F7              MOV     A,#LOW ZhkKeyBuf+01H
8096ED 2528              ADD     A,i
8096EF F582              MOV     DPL,A
8096F1 E4                CLR     A
8096F2 342D              ADDC    A,#HIGH ZhkKeyBuf+01H
8096F4 F583              MOV     DPH,A
8096F6 E0                MOVX    A,@DPTR
8096F7 FF                MOV     R7,A
8096F8 74F6              MOV     A,#LOW ZhkKeyBuf
8096FA 2528              ADD     A,i
8096FC F582              MOV     DPL,A
8096FE E4                CLR     A
8096FF 342D              ADDC    A,#HIGH ZhkKeyBuf
809701 F583              MOV     DPH,A
809703 EF                MOV     A,R7
809704 F0                MOVX    @DPTR,A
809705 0528              INC     i
809707 80DB              SJMP    ?C0006?KEY
809709         ?C0007?KEY:
   63: 	ZhkKeyBuf[ i ] = KEY_NULL;
809709 74F6              MOV     A,#LOW ZhkKeyBuf
80970B 2528              ADD     A,i
80970D F582              MOV     DPL,A
80970F E4                CLR     A
809710 342D              ADDC    A,#HIGH ZhkKeyBuf
809712 F583              MOV     DPH,A
809714 74FF              MOV     A,#0FFH
809716 F0                MOVX    @DPTR,A
   64: 	if ( ZhkKeyBufPtr > 0 ) ZhkKeyBufPtr --;
809717 902DF5            MOV     DPTR,#ZhkKeyBufPtr
80971A E0                MOVX    A,@DPTR
80971B D3                SETB    C
80971C 9400              SUBB    A,#00H
80971E 4003              JC      ?C0009?KEY
809720 E0                MOVX    A,@DPTR
809721 14                DEC     A
809722 F0                MOVX    @DPTR,A
809723         ?C0009?KEY:
   65: 	if ( ch != KEY_NULL ) Beep();
809723 E529              MOV     A,ch
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 348


809725 F4                CPL     A
809726 6005              JZ      ?C0010?KEY
809728 A512809731        ECALL   Beep
80972D         ?C0010?KEY:
   66: 	return ch;
80972D AF29              MOV     R7,ch
   67: }
80972F         ?C0005?KEY:
80972F A522              ERET    
----- FUNCTION GetKey (END) -------


----- FUNCTION Beep (BEGIN) -----
 FILE: 'IOInput.c'
   66: void Beep( void )
   67: {
   68: 	ZhkBuzzerTimer = 20;
   69: 	ZhkHardBuzzerOn();
809731 751814            MOV     ZhkBuzzerTimer,#014H
   70: }
809734 A502809739        EJMP    ZhkHardBuzzerOn
----- FUNCTION Beep (END) -------


----- FUNCTION ZhkHardBuzzerOn (BEGIN) -----
 FILE: 'device.c'
   28: void ZhkHardBuzzerOn( void )
   29: {
   30: 	ZhkHardSramSelect();
   31: 	EA = 0;
809739 759008            MOV     P1,#08H
   32: 	ZhkHardIOOutputReg &= ~ BitBuzzer;
80973C C2AF              CLR     EA
   33: 	ZhkHardNullSelect();
80973E 534EF7            ANL     ZhkHardIOOutputReg,#0F7H
   34: 	P0 = ZhkHardIOOutputReg;
809741 759004            MOV     P1,#04H
   35: 	ZhkHardIOOutputSelect();
809744 854E80            MOV     P0,ZhkHardIOOutputReg
   36: 	ZhkHardOutputLock();
809747 759014            MOV     P1,#014H
   37: 	EA = 1;
80974A 759008            MOV     P1,#08H
   38: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
80974D D2AF              SETB    EA
   39: //	Trace( "P0State=%bxH\n" , P0State );
   40: 	
   41: }
80974F A522              ERET    
----- FUNCTION ZhkHardBuzzerOn (END) -------


----- FUNCTION ?L?COM0015 (BEGIN) -----
809751 E0                MOVX    A,@DPTR
809752 901750            MOV     DPTR,#TaskTemp+03H
809755 F0                MOVX    @DPTR,A
809756 90174D            MOV     DPTR,#TaskTemp
809759 7442              MOV     A,#042H
80975B F0                MOVX    @DPTR,A
80975C 901752            MOV     DPTR,#TaskTemp+05H
80975F 7402              MOV     A,#02H
809761 F0                MOVX    @DPTR,A
809762 E4                CLR     A
809763 A3                INC     DPTR
809764 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 349


809765 A3                INC     DPTR
809766 F0                MOVX    @DPTR,A
809767 7E17              MOV     R6,#HIGH TaskTemp
809769 7F4D              MOV     R7,#LOW TaskTemp
----- FUNCTION _ZhkSchedulerAddTask (BEGIN) -----
 FILE: 'scheduler.c'
  306: uchar ZhkSchedulerAddTask( struct COMMTASK xdata* NewTask )
  307: {
80976B 901878            MOV     DPTR,#NewTask
80976E EE                MOV     A,R6
80976F F0                MOVX    @DPTR,A
809770 A3                INC     DPTR
809771 EF                MOV     A,R7
809772 F0                MOVX    @DPTR,A
  308: 	uchar data i;
  309: //	Trace( "AddTask:Id=%bx,Cmd=%bx\n" , NewTask->Id,NewTask->Cmd );
  310: 	
  311: 	if( NewTask->Id == ID_CASHER )
809773 F582              MOV     DPL,A
809775 8E83              MOV     DPH,R6
809777 A3                INC     DPTR
809778 E0                MOVX    A,@DPTR
809779 640D              XRL     A,#0DH
80977B 702A              JNZ     ?C0035?SCHEDULER
  312: 	{
  313: 		if( Casher.CommState == COMM_TIMEOUT )
80977D 9023D6            MOV     DPTR,#Casher+02H
809780 E0                MOVX    A,@DPTR
809781 6402              XRL     A,#02H
809783 7022              JNZ     ?C0035?SCHEDULER
  314: 		{
  315: 			if( QueryCashTimer != 0 )
809785 E515              MOV     A,QueryCashTimer
809787 6002              JZ      ?C0037?SCHEDULER
  316: 			{
  317: //				Trace( "\n ZhkSchedulerAddTask ->Do not Add Query Commmand1" );
  318: 				ZhkCasherStatus = CASHER_STATUS_NULL;
  319: 				Casher.ExtState[13] = 1;
  320: 				return 1;
809789 800F              SJMP    ?C0327?SCHEDULER
  321: 			}
80978B         ?C0037?SCHEDULER:
  322: 			else
  323: 			{
  324: 				if( ( Casher.ExtState[ 15 ] == 1 ) && ( Casher.ExtState[ 14 ] != 1 ) )
80978B 9023E7            MOV     DPTR,#Casher+013H
80978E E0                MOVX    A,@DPTR
80978F B40115            CJNE    A,#01H,?C0035?SCHEDULER
809792 9023E6            MOV     DPTR,#Casher+012H
809795 E0                MOVX    A,@DPTR
809796 6401              XRL     A,#01H
809798 600D              JZ      ?C0035?SCHEDULER
  325: 				{
  326: 	//				Trace( "\n ZhkSchedulerAddTask ->Do not Add Query Commmand2" );
  327: 					ZhkCasherStatus = CASHER_STATUS_NULL;
80979A         
80979A E4                CLR     A
80979B 902368            MOV     DPTR,#ZhkCasherStatus
80979E F0                MOVX    @DPTR,A
  328: 					Casher.ExtState[13] = 1;
80979F 9023E5            MOV     DPTR,#Casher+011H
8097A2 04                INC     A
8097A3 F0                MOVX    @DPTR,A
  329: 					return 1;
8097A4 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 350


8097A5 803D              SJMP    ?C0038?SCHEDULER
  330: 				}
  331: 			}	
  332: 		}	 			
  333: //		Trace( "\n ZhkSchedulerAddTask ->Add Query Commmand" );
  334: 	}
8097A7         ?C0035?SCHEDULER:
  335: 
  336: 	for( i = 0 ; i < sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) ; i ++ )
8097A7 E4                CLR     A
8097A8 F52E              MOV     i,A
8097AA         ?C0041?SCHEDULER:
  337: 	{
  338: 		if ( ZhkSchedulerIsTaskNull( i ) )
8097AA AF2E              MOV     R7,i
8097AC A51280FF8F        ECALL   _ZhkSchedulerIsTaskNull
8097B1 5026              JNC     ?C0043?SCHEDULER
  339: 		{
  340: 			MovSramToSram( ( uchar xdata* )NewTask , 
  341: 				( uchar xdata* )&ZhkReadyTaskList[ i ] , 
8097B3 75F026            MOV     B,#026H
8097B6 E52E              MOV     A,i
8097B8 9023E9            MOV     DPTR,#ZhkReadyTaskList
8097BB A51280079F        ECALL   ?C?OFFXADD
8097C0 AD82              MOV     R5,DPL
8097C2 AC83              MOV     R4,DPH
8097C4 901878            MOV     DPTR,#NewTask
8097C7 E0                MOVX    A,@DPTR
8097C8 FE                MOV     R6,A
8097C9 A3                INC     DPTR
8097CA E0                MOVX    A,@DPTR
8097CB FF                MOV     R7,A
8097CC 7B26              MOV     R3,#026H
8097CE 7A00              MOV     R2,#00H
8097D0 A51280DBE5        ECALL   _MovSramToSram
  342: 				sizeof( struct COMMTASK ) );
  343: 			return 1;
8097D5 7F01              MOV     R7,#01H
8097D7 800B              SJMP    ?C0038?SCHEDULER
  344: 		}
  345: 	}
8097D9         ?C0043?SCHEDULER:
8097D9 052E              INC     i
8097DB E52E              MOV     A,i
8097DD C3                CLR     C
8097DE 9420              SUBB    A,#020H
8097E0 40C8              JC      ?C0041?SCHEDULER
8097E2         ?C0042?SCHEDULER:
  346: 	return 0;
8097E2 7F00              MOV     R7,#00H
  347: }
8097E4         ?C0038?SCHEDULER:
8097E4 A522              ERET    
----- FUNCTION _ZhkSchedulerAddTask (END) -------


----- FUNCTION CasherQueryDisable (BEGIN) -----
 FILE: 'scheduler.c'
 1407: bit CasherQueryDisable( void )
 1408: {
 1409: 	ZhkAutoTaskPermission[ 0 ] = 0;
 1410: 	return 1;
8097E6 E4                CLR     A
8097E7 902366            MOV     DPTR,#ZhkAutoTaskPermission
8097EA F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 351


 1411: }
8097EB D3                SETB    C
 1412: 
8097EC         ?C0256?SCHEDULER:
8097EC A522              ERET    
----- FUNCTION CasherQueryDisable (END) -------


----- FUNCTION LogicOpen (BEGIN) -----
 FILE: 'mainflow.c'
  328: u_char LogicOpen()
  329: {
  330: //	Trace( "\n LogicOpen");
  331: 	SystemStatus = 1;	
8097EE 9001C6            MOV     DPTR,#SystemStatus
8097F1 7401              MOV     A,#01H
8097F3 F0                MOVX    @DPTR,A
  332: 	if( KeyLockFlag == 1 )
8097F4 302907            JNB     KeyLockFlag,?C0068?MAINFLOW
  333: 	{
  334: 		KeyUnLock(); /* 打开键盘，允许客户进行交易,硬币和纸币在运行过程中再打开 */
8097F7 A512807F45        ECALL   KeyUnLock
  335: 		KeyLockFlag = 0;
8097FC C229              CLR     KeyLockFlag
  336: 	}
8097FE         ?C0068?MAINFLOW:
  337: 	return 1;
8097FE 7F01              MOV     R7,#01H
  338: }
809800         ?C0069?MAINFLOW:
809800 A522              ERET    
----- FUNCTION LogicOpen (END) -------


----- FUNCTION _Cal (BEGIN) -----
 FILE: 'mainflow.c'
  384: u_char Cal( u_int Money , u_char* m_Hopper1, u_char* m_Hopper2, u_char* m_Hopper3 )
  385: {
809802 9015AA            MOV     DPTR,#m_Hopper1
809805 A5128007B6        ECALL   ?C?PSTXDATA
80980A 9015A8            MOV     DPTR,#Money
80980D EE                MOV     A,R6
80980E F0                MOVX    @DPTR,A
80980F A3                INC     DPTR
809810 EF                MOV     A,R7
809811 F0                MOVX    @DPTR,A
  386: 	u_char xdata m_L = 0;
  387: 	u_char xdata m_H = 0;	
809812 E4                CLR     A
809813 9015B3            MOV     DPTR,#m_L
809816 F0                MOVX    @DPTR,A
  388: 
809817 A3                INC     DPTR
809818 F0                MOVX    @DPTR,A
  389: //	Trace( "\n in Cal");	
  390: //	Trace( "\n Money = %d", Money );	
  391: 
  392: 	if( Money < HopperSetList[2].price )//无法配币
809819 D3                SETB    C
80981A 900AED            MOV     DPTR,#HopperSetList+09H
80981D E0                MOVX    A,@DPTR
80981E 9F                SUBB    A,R7
80981F 900AEC            MOV     DPTR,#HopperSetList+08H
809822 E0                MOVX    A,@DPTR
809823 9E                SUBB    A,R6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 352


809824 4005              JC      ?C0078?MAINFLOW
  393: 		return 1;
809826 7F01              MOV     R7,#01H
809828 029A22            LJMP    ?C0079?MAINFLOW
80982B         ?C0078?MAINFLOW:
  394: 	
  395: 	m_L = Money / HopperSetList[0].price;			
80982B 900AE4            MOV     DPTR,#HopperSetList
80982E E0                MOVX    A,@DPTR
80982F FC                MOV     R4,A
809830 A3                INC     DPTR
809831 E0                MOVX    A,@DPTR
809832 FD                MOV     R5,A
809833 9015A8            MOV     DPTR,#Money
809836 E0                MOVX    A,@DPTR
809837 FE                MOV     R6,A
809838 A3                INC     DPTR
809839 E0                MOVX    A,@DPTR
80983A FF                MOV     R7,A
80983B A51280056C        ECALL   ?C?UIDIV
809840 9015B3            MOV     DPTR,#m_L
809843 EF                MOV     A,R7
809844 F0                MOVX    @DPTR,A
  396: 	m_H = m_L;
809845 A3                INC     DPTR
809846 F0                MOVX    @DPTR,A
  397: //	Trace("\n HopperSetList[0].HopperState = %bu", HopperSetList[0].HopperState );
  398: //	Trace("\n HopperSetList[0].HopperIndex = %bu", HopperSetList[0].HopperIndex );
  399: 	if( HopperSetList[0].HopperState == 1 )
809847 900AE7            MOV     DPTR,#HopperSetList+03H
80984A E0                MOVX    A,@DPTR
80984B 6401              XRL     A,#01H
80984D 7035              JNZ     ?C0080?MAINFLOW
  400: 	{
  401: 		switch( HopperSetList[0].HopperIndex )
80984F 900AE6            MOV     DPTR,#HopperSetList+02H
809852 E0                MOVX    A,@DPTR
809853 24FE              ADD     A,#0FEH
809855 6011              JZ      ?C0083?MAINFLOW
809857 14                DEC     A
809858 6018              JZ      ?C0084?MAINFLOW
80985A 2402              ADD     A,#02H
80985C 704E              JNZ     ?C0085?MAINFLOW
  402: 		{
  403: 			case 1:											
80985E         ?C0082?MAINFLOW:
  404: 				*m_Hopper1 = m_L;			
80985E 9015B3            MOV     DPTR,#m_L
809861 E0                MOVX    A,@DPTR
809862 FF                MOV     R7,A
809863 9015AA            MOV     DPTR,#m_Hopper1
  405: 			break;
809866 8012              SJMP    ?C1044?MAINFLOW
  406: 			case 2:			
809868         ?C0083?MAINFLOW:
  407: 				*m_Hopper2 = m_L;
809868 9015B3            MOV     DPTR,#m_L
80986B E0                MOVX    A,@DPTR
80986C FF                MOV     R7,A
80986D 9015AD            MOV     DPTR,#m_Hopper2
809870         
  408: 			break;
809870 8008              SJMP    ?C1044?MAINFLOW
  409: 			case 3:				
809872         ?C0084?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 353


  410: 				*m_Hopper3 = m_L;
809872 9015B3            MOV     DPTR,#m_L
809875 E0                MOVX    A,@DPTR
809876 FF                MOV     R7,A
809877 9015B0            MOV     DPTR,#m_Hopper3
80987A         
80987A A5128007AC        ECALL   ?C?PLDXDATA
80987F EF                MOV     A,R7
809880 A558              EMOV    @PR0,A
  411: 			break;
809882 8028              SJMP    ?C0085?MAINFLOW
  412: 		}
  413: 	}
809884         ?C0080?MAINFLOW:
  414: 	else
  415: 	{
  416: 		switch( HopperSetList[0].HopperIndex )
809884 900AE6            MOV     DPTR,#HopperSetList+02H
809887 E0                MOVX    A,@DPTR
809888 24FE              ADD     A,#0FEH
80988A 600C              JZ      ?C0088?MAINFLOW
80988C 14                DEC     A
80988D 600E              JZ      ?C0089?MAINFLOW
80988F 2402              ADD     A,#02H
809891 7019              JNZ     ?C0085?MAINFLOW
  417: 		{
  418: 			case 1:						
809893         ?C0087?MAINFLOW:
  419: 				*m_Hopper1 = 0;
809893 9015AA            MOV     DPTR,#m_Hopper1
  420: 				m_H = 0;		
  421: 			break;
809896 8008              SJMP    ?C1046?MAINFLOW
  422: 			case 2:
809898         ?C0088?MAINFLOW:
  423: 				*m_Hopper2 = 0;
809898 9015AD            MOV     DPTR,#m_Hopper2
80989B         
  424: 				m_H = 0;
  425: 			break;
80989B 8003              SJMP    ?C1046?MAINFLOW
  426: 			case 3:
80989D         ?C0089?MAINFLOW:
  427: 				*m_Hopper3 = 0;
80989D 9015B0            MOV     DPTR,#m_Hopper3
8098A0         
8098A0 A5128007AC        ECALL   ?C?PLDXDATA
8098A5 E4                CLR     A
8098A6 A558              EMOV    @PR0,A
  428: 				m_H = 0;
8098A8 9015B4            MOV     DPTR,#m_H
8098AB F0                MOVX    @DPTR,A
  429: 			break;
  430: 		}	
  431: 	}
8098AC         ?C0085?MAINFLOW:
  432: 
  433: 	Money = Money - m_H * HopperSetList[0].price;			
8098AC 9015B4            MOV     DPTR,#m_H
8098AF E0                MOVX    A,@DPTR
8098B0 FF                MOV     R7,A
8098B1 7E00              MOV     R6,#00H
8098B3 900AE4            MOV     DPTR,#HopperSetList
8098B6 E0                MOVX    A,@DPTR
8098B7 FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 354


8098B8 A3                INC     DPTR
8098B9 E0                MOVX    A,@DPTR
8098BA FD                MOV     R5,A
8098BB A512800559        ECALL   ?C?IMUL
8098C0 C3                CLR     C
8098C1 9015A9            MOV     DPTR,#Money+01H
8098C4 E0                MOVX    A,@DPTR
8098C5 9F                SUBB    A,R7
8098C6 FF                MOV     R7,A
8098C7 9015A8            MOV     DPTR,#Money
8098CA E0                MOVX    A,@DPTR
8098CB 9E                SUBB    A,R6
8098CC FE                MOV     R6,A
8098CD F0                MOVX    @DPTR,A
8098CE A3                INC     DPTR
8098CF EF                MOV     A,R7
8098D0 F0                MOVX    @DPTR,A
  434: 	m_H = 0;
8098D1 E4                CLR     A
8098D2 9015B4            MOV     DPTR,#m_H
8098D5 F0                MOVX    @DPTR,A
  435: 	m_L = 0;
8098D6 9015B3            MOV     DPTR,#m_L
8098D9 F0                MOVX    @DPTR,A
  436: 
  437: 	m_L = Money / HopperSetList[1].price;			
8098DA 900AE8            MOV     DPTR,#HopperSetList+04H
8098DD E0                MOVX    A,@DPTR
8098DE FC                MOV     R4,A
8098DF A3                INC     DPTR
8098E0 E0                MOVX    A,@DPTR
8098E1 FD                MOV     R5,A
8098E2 A51280056C        ECALL   ?C?UIDIV
8098E7 9015B3            MOV     DPTR,#m_L
8098EA EF                MOV     A,R7
8098EB F0                MOVX    @DPTR,A
  438: 	m_H = m_L;
8098EC A3                INC     DPTR
8098ED F0                MOVX    @DPTR,A
  439: //	Trace("\n HopperSetList[1].HopperState = %bu", HopperSetList[1].HopperState );
  440: //	Trace("\n HopperSetList[1].HopperIndex = %bu", HopperSetList[1].HopperIndex );
  441: 	if( HopperSetList[1].HopperState == 1 )
8098EE 900AEB            MOV     DPTR,#HopperSetList+07H
8098F1 E0                MOVX    A,@DPTR
8098F2 6401              XRL     A,#01H
8098F4 7035              JNZ     ?C0090?MAINFLOW
  442: 	{
  443: 		switch( HopperSetList[1].HopperIndex )
8098F6 900AEA            MOV     DPTR,#HopperSetList+06H
8098F9 E0                MOVX    A,@DPTR
8098FA 24FE              ADD     A,#0FEH
8098FC 6011              JZ      ?C0093?MAINFLOW
8098FE 14                DEC     A
8098FF 6018              JZ      ?C0094?MAINFLOW
809901 2402              ADD     A,#02H
809903 704E              JNZ     ?C0095?MAINFLOW
  444: 		{
  445: 			case 1:			
809905         ?C0092?MAINFLOW:
  446: 				*m_Hopper1 = m_L;
809905 9015B3            MOV     DPTR,#m_L
809908 E0                MOVX    A,@DPTR
809909 FF                MOV     R7,A
80990A 9015AA            MOV     DPTR,#m_Hopper1
  447: 			break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 355


80990D 8012              SJMP    ?C1048?MAINFLOW
  448: 			case 2:				
80990F         ?C0093?MAINFLOW:
  449: 				*m_Hopper2 = m_L;
80990F 9015B3            MOV     DPTR,#m_L
809912 E0                MOVX    A,@DPTR
809913 FF                MOV     R7,A
809914 9015AD            MOV     DPTR,#m_Hopper2
809917         
  450: 			break;
809917 8008              SJMP    ?C1048?MAINFLOW
  451: 			case 3:				
809919         ?C0094?MAINFLOW:
  452: 				*m_Hopper3 = m_L;
809919 9015B3            MOV     DPTR,#m_L
80991C E0                MOVX    A,@DPTR
80991D FF                MOV     R7,A
80991E 9015B0            MOV     DPTR,#m_Hopper3
809921         
809921 A5128007AC        ECALL   ?C?PLDXDATA
809926 EF                MOV     A,R7
809927 A558              EMOV    @PR0,A
  453: 			break;
809929 8028              SJMP    ?C0095?MAINFLOW
  454: 		}
  455: 	}
80992B         ?C0090?MAINFLOW:
  456: 	else
  457: 	{
  458: 		switch( HopperSetList[1].HopperIndex )
80992B 900AEA            MOV     DPTR,#HopperSetList+06H
80992E E0                MOVX    A,@DPTR
80992F 24FE              ADD     A,#0FEH
809931 600C              JZ      ?C0098?MAINFLOW
809933 14                DEC     A
809934 600E              JZ      ?C0099?MAINFLOW
809936 2402              ADD     A,#02H
809938 7019              JNZ     ?C0095?MAINFLOW
  459: 		{
  460: 			case 1:						
80993A         ?C0097?MAINFLOW:
  461: 				*m_Hopper1 = 0;
80993A 9015AA            MOV     DPTR,#m_Hopper1
  462: 				m_H = 0;		
  463: 			break;
80993D 8008              SJMP    ?C1050?MAINFLOW
  464: 			case 2:
80993F         ?C0098?MAINFLOW:
  465: 				*m_Hopper2 = 0;
80993F 9015AD            MOV     DPTR,#m_Hopper2
809942         
  466: 				m_H = 0;
  467: 			break;
809942 8003              SJMP    ?C1050?MAINFLOW
  468: 			case 3:
809944         ?C0099?MAINFLOW:
  469: 				*m_Hopper3 = 0;
809944 9015B0            MOV     DPTR,#m_Hopper3
809947         
809947 A5128007AC        ECALL   ?C?PLDXDATA
80994C E4                CLR     A
80994D A558              EMOV    @PR0,A
  470: 				m_H = 0;
80994F 9015B4            MOV     DPTR,#m_H
809952 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 356


  471: 			break;
  472: 		}	
  473: 	}
809953         ?C0095?MAINFLOW:
  474: 
  475: 	Money = Money - m_H * HopperSetList[1].price;			
809953 9015B4            MOV     DPTR,#m_H
809956 E0                MOVX    A,@DPTR
809957 FF                MOV     R7,A
809958 7E00              MOV     R6,#00H
80995A 900AE8            MOV     DPTR,#HopperSetList+04H
80995D E0                MOVX    A,@DPTR
80995E FC                MOV     R4,A
80995F A3                INC     DPTR
809960 E0                MOVX    A,@DPTR
809961 FD                MOV     R5,A
809962 A512800559        ECALL   ?C?IMUL
809967 C3                CLR     C
809968 9015A9            MOV     DPTR,#Money+01H
80996B E0                MOVX    A,@DPTR
80996C 9F                SUBB    A,R7
80996D FF                MOV     R7,A
80996E 9015A8            MOV     DPTR,#Money
809971 E0                MOVX    A,@DPTR
809972 9E                SUBB    A,R6
809973 FE                MOV     R6,A
809974 F0                MOVX    @DPTR,A
809975 A3                INC     DPTR
809976 EF                MOV     A,R7
809977 F0                MOVX    @DPTR,A
  476: 	m_H = 0;
809978 E4                CLR     A
809979 9015B4            MOV     DPTR,#m_H
80997C F0                MOVX    @DPTR,A
  477: 	m_L = 0;
80997D 9015B3            MOV     DPTR,#m_L
809980 F0                MOVX    @DPTR,A
  478: 	
  479: //	Trace("\n HopperSetList[2].HopperState = %bu", HopperSetList[2].HopperState );
  480: //	Trace("\n HopperSetList[2].HopperIndex = %bu", HopperSetList[2].HopperIndex );
  481: 	m_L = Money / HopperSetList[2].price;
809981 900AEC            MOV     DPTR,#HopperSetList+08H
809984 E0                MOVX    A,@DPTR
809985 FC                MOV     R4,A
809986 A3                INC     DPTR
809987 E0                MOVX    A,@DPTR
809988 FD                MOV     R5,A
809989 A51280056C        ECALL   ?C?UIDIV
80998E 9015B3            MOV     DPTR,#m_L
809991 EF                MOV     A,R7
809992 F0                MOVX    @DPTR,A
  482: 	if( HopperSetList[2].HopperState == 1 )
809993 900AEF            MOV     DPTR,#HopperSetList+0BH
809996 E0                MOVX    A,@DPTR
809997 6401              XRL     A,#01H
809999 7035              JNZ     ?C0100?MAINFLOW
  483: 	{			
  484: 		switch( HopperSetList[2].HopperIndex )
80999B 900AEE            MOV     DPTR,#HopperSetList+0AH
80999E E0                MOVX    A,@DPTR
80999F 24FE              ADD     A,#0FEH
8099A1 6011              JZ      ?C0103?MAINFLOW
8099A3 14                DEC     A
8099A4 6018              JZ      ?C0104?MAINFLOW
8099A6 2402              ADD     A,#02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 357


8099A8 704E              JNZ     ?C0105?MAINFLOW
  485: 		{
  486: 			case 1:						
8099AA         ?C0102?MAINFLOW:
  487: 				*m_Hopper1 = m_L;
8099AA 9015B3            MOV     DPTR,#m_L
8099AD E0                MOVX    A,@DPTR
8099AE FF                MOV     R7,A
8099AF 9015AA            MOV     DPTR,#m_Hopper1
  488: 			break;
8099B2 8012              SJMP    ?C1052?MAINFLOW
  489: 			case 2:							
8099B4         ?C0103?MAINFLOW:
  490: 				*m_Hopper2 = m_L;
8099B4 9015B3            MOV     DPTR,#m_L
8099B7 E0                MOVX    A,@DPTR
8099B8 FF                MOV     R7,A
8099B9 9015AD            MOV     DPTR,#m_Hopper2
8099BC         
  491: 			break;
8099BC 8008              SJMP    ?C1052?MAINFLOW
  492: 			case 3:						
8099BE         ?C0104?MAINFLOW:
  493: 				*m_Hopper3 = m_L;
8099BE 9015B3            MOV     DPTR,#m_L
8099C1 E0                MOVX    A,@DPTR
8099C2 FF                MOV     R7,A
8099C3 9015B0            MOV     DPTR,#m_Hopper3
8099C6         
8099C6 A5128007AC        ECALL   ?C?PLDXDATA
8099CB EF                MOV     A,R7
8099CC A558              EMOV    @PR0,A
  494: 			break;
8099CE 8028              SJMP    ?C0105?MAINFLOW
  495: 		}
  496: 	}
8099D0         ?C0100?MAINFLOW:
  497: 	else
  498: 	{
  499: 		switch( HopperSetList[2].HopperIndex )
8099D0 900AEE            MOV     DPTR,#HopperSetList+0AH
8099D3 E0                MOVX    A,@DPTR
8099D4 24FE              ADD     A,#0FEH
8099D6 600C              JZ      ?C0108?MAINFLOW
8099D8 14                DEC     A
8099D9 600E              JZ      ?C0109?MAINFLOW
8099DB 2402              ADD     A,#02H
8099DD 7019              JNZ     ?C0105?MAINFLOW
  500: 		{
  501: 			case 1:						
8099DF         ?C0107?MAINFLOW:
  502: 				*m_Hopper1 = 0;
8099DF 9015AA            MOV     DPTR,#m_Hopper1
  503: 				m_H = 0;		
  504: 			break;
8099E2 8008              SJMP    ?C1054?MAINFLOW
  505: 			case 2:
8099E4         ?C0108?MAINFLOW:
  506: 				*m_Hopper2 = 0;
8099E4 9015AD            MOV     DPTR,#m_Hopper2
8099E7         
  507: 				m_H = 0;
  508: 			break;
8099E7 8003              SJMP    ?C1054?MAINFLOW
  509: 			case 3:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 358


8099E9         ?C0109?MAINFLOW:
  510: 				*m_Hopper3 = 0;
8099E9 9015B0            MOV     DPTR,#m_Hopper3
8099EC         
8099EC A5128007AC        ECALL   ?C?PLDXDATA
8099F1 E4                CLR     A
8099F2 A558              EMOV    @PR0,A
  511: 				m_H = 0;
8099F4 9015B4            MOV     DPTR,#m_H
8099F7 F0                MOVX    @DPTR,A
  512: 			break;
  513: 		}	
  514: 	}
8099F8         ?C0105?MAINFLOW:
  515: 		
  516: 
  517: //	Trace( "\n *Hopper1 = %bu", *m_Hopper1 );
  518: //	Trace( "\n *Hopper2 = %bu", *m_Hopper2 );
  519: //	Trace( "\n *Hopper3 = %bu", *m_Hopper3 );	
  520: 	if (( *m_Hopper1 == 0) && ( *m_Hopper2 == 0 ) && ( *m_Hopper3 == 0) ) 
8099F8 9015AA            MOV     DPTR,#m_Hopper1
8099FB A5128007AC        ECALL   ?C?PLDXDATA
809A00 A548              EMOV    A,@PR0
809A02 701C              JNZ     ?C0110?MAINFLOW
809A04 9015AD            MOV     DPTR,#m_Hopper2
809A07 A5128007AC        ECALL   ?C?PLDXDATA
809A0C A548              EMOV    A,@PR0
809A0E 7010              JNZ     ?C0110?MAINFLOW
809A10 9015B0            MOV     DPTR,#m_Hopper3
809A13 A5128007AC        ECALL   ?C?PLDXDATA
809A18 A548              EMOV    A,@PR0
809A1A 7004              JNZ     ?C0110?MAINFLOW
  521: 	// 配币错误 
  522: 		return 1;	
809A1C 7F01              MOV     R7,#01H
809A1E 8002              SJMP    ?C0079?MAINFLOW
809A20         ?C0110?MAINFLOW:
  523: 	return 0 ;		
809A20 7F00              MOV     R7,#00H
  524: }
809A22         ?C0079?MAINFLOW:
809A22 A522              ERET    
----- FUNCTION _Cal (END) -------


----- FUNCTION ?L?COM0037 (BEGIN) -----
809A24 E4                CLR     A
809A25 FF                MOV     R7,A
809A26 A512807C6D        ECALL   _CheckHardWare
----- FUNCTION GetHopperList (BEGIN) -----
 FILE: 'mainflow.c'
  557: void GetHopperList()
  558: {		
  559: 	u_int xdata i = 0;
  560: 	u_int xdata j = 0;
;---- Variable 'i' assigned to Register 'R4/R5' ----
809A2B E4                CLR     A
  561: 	u_int xdata z = 0;	
809A2C 9015A1            MOV     DPTR,#j
809A2F F0                MOVX    @DPTR,A
809A30 A3                INC     DPTR
809A31 F0                MOVX    @DPTR,A
  562: 
809A32 A3                INC     DPTR
809A33 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 359


809A34 A3                INC     DPTR
809A35 F0                MOVX    @DPTR,A
  563: 	 i = SystemParameter.HopperCoinPrice1;
809A36 900421            MOV     DPTR,#SystemParameter+01H
809A39 E0                MOVX    A,@DPTR
809A3A FC                MOV     R4,A
809A3B A3                INC     DPTR
809A3C E0                MOVX    A,@DPTR
809A3D FD                MOV     R5,A
  564: 	 j = SystemParameter.HopperCoinPrice2;
809A3E A3                INC     DPTR
809A3F E0                MOVX    A,@DPTR
809A40 FF                MOV     R7,A
809A41 A3                INC     DPTR
809A42 E0                MOVX    A,@DPTR
809A43 9015A1            MOV     DPTR,#j
809A46 CF                XCH     A,R7
809A47 F0                MOVX    @DPTR,A
809A48 A3                INC     DPTR
809A49 EF                MOV     A,R7
809A4A F0                MOVX    @DPTR,A
  565: 	 z = SystemParameter.HopperCoinPrice3;
809A4B 900425            MOV     DPTR,#SystemParameter+05H
809A4E E0                MOVX    A,@DPTR
809A4F FF                MOV     R7,A
809A50 A3                INC     DPTR
809A51 E0                MOVX    A,@DPTR
809A52 9015A3            MOV     DPTR,#z
809A55 CF                XCH     A,R7
809A56 F0                MOVX    @DPTR,A
809A57 A3                INC     DPTR
809A58 EF                MOV     A,R7
809A59 F0                MOVX    @DPTR,A
  566: 	 
  567: 	//找出最大的斗		
  568: 	if( ( i >= j ) && ( i >= z ) )
809A5A D3                SETB    C
809A5B 9015A2            MOV     DPTR,#j+01H
809A5E E0                MOVX    A,@DPTR
809A5F 9D                SUBB    A,R5
809A60 9015A1            MOV     DPTR,#j
809A63 E0                MOVX    A,@DPTR
809A64 9C                SUBB    A,R4
809A65 505E              JNC     ?C0117?MAINFLOW
809A67 9015A4            MOV     DPTR,#z+01H
809A6A E0                MOVX    A,@DPTR
809A6B 9D                SUBB    A,R5
809A6C 9015A3            MOV     DPTR,#z
809A6F E0                MOVX    A,@DPTR
809A70 9C                SUBB    A,R4
809A71 5052              JNC     ?C0117?MAINFLOW
  569: 	{	
  570: 		HopperSetList[0].price = i;
809A73 900AE4            MOV     DPTR,#HopperSetList
809A76 EC                MOV     A,R4
809A77 F0                MOVX    @DPTR,A
809A78 A3                INC     DPTR
809A79 ED                MOV     A,R5
809A7A F0                MOVX    @DPTR,A
  571: 		HopperSetList[0].HopperIndex = 1;
809A7B A3                INC     DPTR
809A7C 7401              MOV     A,#01H
809A7E F0                MOVX    @DPTR,A
  572: 		if( j >= z )
809A7F 9015A3            MOV     DPTR,#z
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 360


809A82 E0                MOVX    A,@DPTR
809A83 FE                MOV     R6,A
809A84 A3                INC     DPTR
809A85 E0                MOVX    A,@DPTR
809A86 FF                MOV     R7,A
809A87 9015A1            MOV     DPTR,#j
809A8A E0                MOVX    A,@DPTR
809A8B FA                MOV     R2,A
809A8C A3                INC     DPTR
809A8D E0                MOVX    A,@DPTR
809A8E FB                MOV     R3,A
809A8F C3                CLR     C
809A90 9F                SUBB    A,R7
809A91 EA                MOV     A,R2
809A92 9E                SUBB    A,R6
809A93 4013              JC      ?C0118?MAINFLOW
  573: 		{
  574: 			HopperSetList[1].price = j;
809A95 900AE8            MOV     DPTR,#HopperSetList+04H
809A98 EA                MOV     A,R2
809A99 F0                MOVX    @DPTR,A
809A9A A3                INC     DPTR
809A9B EB                MOV     A,R3
809A9C F0                MOVX    @DPTR,A
  575: 			HopperSetList[1].HopperIndex = 2;		
809A9D A3                INC     DPTR
809A9E 7402              MOV     A,#02H
809AA0 F0                MOVX    @DPTR,A
  576: 			HopperSetList[2].price = z;
809AA1 900AEC            MOV     DPTR,#HopperSetList+08H
809AA4 EE                MOV     A,R6
  577: 			HopperSetList[2].HopperIndex = 3;
  578: 		}
809AA5 029B4D            LJMP    ?C1057?MAINFLOW
809AA8         ?C0118?MAINFLOW:
  579: 		else
  580: 		{		
  581: 			HopperSetList[1].price = z;
809AA8 9015A3            MOV     DPTR,#z
809AAB E0                MOVX    A,@DPTR
809AAC FF                MOV     R7,A
809AAD A3                INC     DPTR
809AAE E0                MOVX    A,@DPTR
809AAF 900AE8            MOV     DPTR,#HopperSetList+04H
809AB2 CF                XCH     A,R7
809AB3 F0                MOVX    @DPTR,A
809AB4 A3                INC     DPTR
809AB5 EF                MOV     A,R7
809AB6 F0                MOVX    @DPTR,A
  582: 			HopperSetList[1].HopperIndex = 3;		
809AB7 A3                INC     DPTR
809AB8 7403              MOV     A,#03H
809ABA F0                MOVX    @DPTR,A
  583: 			HopperSetList[2].price = j;
809ABB 900AEC            MOV     DPTR,#HopperSetList+08H
809ABE EA                MOV     A,R2
809ABF F0                MOVX    @DPTR,A
809AC0 A3                INC     DPTR
809AC1 EB                MOV     A,R3
  584: 			HopperSetList[2].HopperIndex = 2;
  585: 		}
  586: 	}
809AC2 029BEF            LJMP    ?C1059?MAINFLOW
809AC5         ?C0117?MAINFLOW:
  587: 	else if( ( i >= j ) && ( i <= z ) )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 361


809AC5 D3                SETB    C
809AC6 9015A2            MOV     DPTR,#j+01H
809AC9 E0                MOVX    A,@DPTR
809ACA 9D                SUBB    A,R5
809ACB 9015A1            MOV     DPTR,#j
809ACE E0                MOVX    A,@DPTR
809ACF 9C                SUBB    A,R4
809AD0 5037              JNC     ?C0121?MAINFLOW
809AD2 9015A3            MOV     DPTR,#z
809AD5 E0                MOVX    A,@DPTR
809AD6 FE                MOV     R6,A
809AD7 A3                INC     DPTR
809AD8 E0                MOVX    A,@DPTR
809AD9 FF                MOV     R7,A
809ADA C3                CLR     C
809ADB 9D                SUBB    A,R5
809ADC EE                MOV     A,R6
809ADD 9C                SUBB    A,R4
809ADE 4029              JC      ?C0121?MAINFLOW
  588: 	{
  589: 		HopperSetList[0].price = z;
809AE0 900AE4            MOV     DPTR,#HopperSetList
809AE3 EE                MOV     A,R6
809AE4 F0                MOVX    @DPTR,A
809AE5 A3                INC     DPTR
809AE6 EF                MOV     A,R7
809AE7 F0                MOVX    @DPTR,A
  590: 		HopperSetList[0].HopperIndex = 3;
809AE8 A3                INC     DPTR
809AE9 7403              MOV     A,#03H
809AEB F0                MOVX    @DPTR,A
  591: 		HopperSetList[1].price = i;
809AEC 900AE8            MOV     DPTR,#HopperSetList+04H
809AEF EC                MOV     A,R4
809AF0 F0                MOVX    @DPTR,A
809AF1 A3                INC     DPTR
809AF2 ED                MOV     A,R5
809AF3 F0                MOVX    @DPTR,A
  592: 		HopperSetList[1].HopperIndex = 1;	
809AF4 A3                INC     DPTR
809AF5 7401              MOV     A,#01H
809AF7 F0                MOVX    @DPTR,A
  593: 		HopperSetList[2].price = j;
809AF8 9015A1            MOV     DPTR,#j
809AFB E0                MOVX    A,@DPTR
809AFC FF                MOV     R7,A
809AFD A3                INC     DPTR
809AFE E0                MOVX    A,@DPTR
809AFF 900AEC            MOV     DPTR,#HopperSetList+08H
809B02 CF                XCH     A,R7
809B03 F0                MOVX    @DPTR,A
809B04 A3                INC     DPTR
809B05 EF                MOV     A,R7
809B06         
  594: 		HopperSetList[2].HopperIndex = 2;
  595: 	}
809B06 029BEF            LJMP    ?C1059?MAINFLOW
809B09         ?C0121?MAINFLOW:
  596: 	else if( ( j >= i ) && ( i >= z ) )
809B09 C3                CLR     C
809B0A 9015A2            MOV     DPTR,#j+01H
809B0D E0                MOVX    A,@DPTR
809B0E 9D                SUBB    A,R5
809B0F 9015A1            MOV     DPTR,#j
809B12 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 362


809B13 9C                SUBB    A,R4
809B14 4042              JC      ?C0123?MAINFLOW
809B16 D3                SETB    C
809B17 9015A4            MOV     DPTR,#z+01H
809B1A E0                MOVX    A,@DPTR
809B1B 9D                SUBB    A,R5
809B1C 9015A3            MOV     DPTR,#z
809B1F E0                MOVX    A,@DPTR
809B20 9C                SUBB    A,R4
809B21 5035              JNC     ?C0123?MAINFLOW
  597: 	{	
  598: 		HopperSetList[0].price = j;
809B23 9015A1            MOV     DPTR,#j
809B26 E0                MOVX    A,@DPTR
809B27 FF                MOV     R7,A
809B28 A3                INC     DPTR
809B29 E0                MOVX    A,@DPTR
809B2A 900AE4            MOV     DPTR,#HopperSetList
809B2D CF                XCH     A,R7
809B2E F0                MOVX    @DPTR,A
809B2F A3                INC     DPTR
809B30 EF                MOV     A,R7
809B31 F0                MOVX    @DPTR,A
  599: 		HopperSetList[0].HopperIndex = 2;	
809B32 A3                INC     DPTR
809B33 7402              MOV     A,#02H
809B35 F0                MOVX    @DPTR,A
  600: 		HopperSetList[1].price = i;
809B36 900AE8            MOV     DPTR,#HopperSetList+04H
809B39 EC                MOV     A,R4
809B3A F0                MOVX    @DPTR,A
809B3B A3                INC     DPTR
809B3C ED                MOV     A,R5
809B3D F0                MOVX    @DPTR,A
  601: 		HopperSetList[1].HopperIndex = 1;
809B3E A3                INC     DPTR
809B3F 7401              MOV     A,#01H
809B41 F0                MOVX    @DPTR,A
  602: 		HopperSetList[2].price = z;
809B42 9015A3            MOV     DPTR,#z
809B45 E0                MOVX    A,@DPTR
809B46 FF                MOV     R7,A
809B47 A3                INC     DPTR
809B48 E0                MOVX    A,@DPTR
809B49 900AEC            MOV     DPTR,#HopperSetList+08H
809B4C CF                XCH     A,R7
809B4D         
809B4D F0                MOVX    @DPTR,A
809B4E A3                INC     DPTR
809B4F EF                MOV     A,R7
809B50 F0                MOVX    @DPTR,A
  603: 		HopperSetList[2].HopperIndex = 3;
809B51 A3                INC     DPTR
809B52 7403              MOV     A,#03H
809B54 F0                MOVX    @DPTR,A
  604: 	}
809B55 029BF4            LJMP    ?C0120?MAINFLOW
809B58         ?C0123?MAINFLOW:
  605: 	else if( ( j >= i ) && ( i <= z ) )
809B58 C3                CLR     C
809B59 9015A2            MOV     DPTR,#j+01H
809B5C E0                MOVX    A,@DPTR
809B5D 9D                SUBB    A,R5
809B5E 9015A1            MOV     DPTR,#j
809B61 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 363


809B62 9C                SUBB    A,R4
809B63 5003              JNC     $ + 5H
809B65 029BF4            LJMP    ?C0120?MAINFLOW
809B68 9015A4            MOV     DPTR,#z+01H
809B6B E0                MOVX    A,@DPTR
809B6C 9D                SUBB    A,R5
809B6D 9015A3            MOV     DPTR,#z
809B70 E0                MOVX    A,@DPTR
809B71 9C                SUBB    A,R4
809B72 5003              JNC     $ + 5H
809B74 029BF4            LJMP    ?C0120?MAINFLOW
  606: 	{		
  607: 		HopperSetList[2].price = i;
809B77 900AEC            MOV     DPTR,#HopperSetList+08H
809B7A EC                MOV     A,R4
809B7B F0                MOVX    @DPTR,A
809B7C A3                INC     DPTR
809B7D ED                MOV     A,R5
809B7E F0                MOVX    @DPTR,A
  608: 		HopperSetList[2].HopperIndex = 1;
809B7F A3                INC     DPTR
809B80 7401              MOV     A,#01H
809B82 F0                MOVX    @DPTR,A
  609: 		if( j >= z )
809B83 9015A3            MOV     DPTR,#z
809B86 E0                MOVX    A,@DPTR
809B87 FE                MOV     R6,A
809B88 A3                INC     DPTR
809B89 E0                MOVX    A,@DPTR
809B8A FF                MOV     R7,A
809B8B 9015A1            MOV     DPTR,#j
809B8E E0                MOVX    A,@DPTR
809B8F FA                MOV     R2,A
809B90 A3                INC     DPTR
809B91 E0                MOVX    A,@DPTR
809B92 FB                MOV     R3,A
809B93 9F                SUBB    A,R7
809B94 EA                MOV     A,R2
809B95 9E                SUBB    A,R6
809B96 4036              JC      ?C0126?MAINFLOW
  610: 		{
  611: 			HopperSetList[0].price = j;
809B98 900AE4            MOV     DPTR,#HopperSetList
809B9B EA                MOV     A,R2
809B9C F0                MOVX    @DPTR,A
809B9D A3                INC     DPTR
809B9E EB                MOV     A,R3
809B9F F0                MOVX    @DPTR,A
  612: 			HopperSetList[0].HopperIndex = 2;
809BA0 A3                INC     DPTR
809BA1 7402              MOV     A,#02H
809BA3 F0                MOVX    @DPTR,A
  613: 			if( DeviceStatus.ChangeUnit2 == 1 )
809BA4 900B1E            MOV     DPTR,#DeviceStatus+03H
809BA7 E0                MOVX    A,@DPTR
809BA8 FF                MOV     R7,A
809BA9 B40106            CJNE    A,#01H,?C0127?MAINFLOW
  614: 				HopperSetList[0].HopperState = 2;
809BAC 900AE7            MOV     DPTR,#HopperSetList+03H
809BAF 7402              MOV     A,#02H
809BB1 F0                MOVX    @DPTR,A
809BB2         ?C0127?MAINFLOW:
  615: 			HopperSetList[1].price = z;
809BB2 9015A3            MOV     DPTR,#z
809BB5 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 364


809BB6 FB                MOV     R3,A
809BB7 A3                INC     DPTR
809BB8 E0                MOVX    A,@DPTR
809BB9 900AE8            MOV     DPTR,#HopperSetList+04H
809BBC CB                XCH     A,R3
809BBD F0                MOVX    @DPTR,A
809BBE A3                INC     DPTR
809BBF EB                MOV     A,R3
809BC0 F0                MOVX    @DPTR,A
  616: 			HopperSetList[1].HopperIndex = 3;
809BC1 A3                INC     DPTR
809BC2 7403              MOV     A,#03H
809BC4 F0                MOVX    @DPTR,A
  617: 			if( DeviceStatus.ChangeUnit2 == 1 )
809BC5 EF                MOV     A,R7
809BC6 B4012B            CJNE    A,#01H,?C0120?MAINFLOW
  618: 				HopperSetList[0].HopperState = 2;
809BC9 900AE7            MOV     DPTR,#HopperSetList+03H
  619: 		}
809BCC 8023              SJMP    ?C1060?MAINFLOW
809BCE         ?C0126?MAINFLOW:
  620: 		else
  621: 		{
  622: 			HopperSetList[0].price = z;
809BCE 9015A3            MOV     DPTR,#z
809BD1 E0                MOVX    A,@DPTR
809BD2 FF                MOV     R7,A
809BD3 A3                INC     DPTR
809BD4 E0                MOVX    A,@DPTR
809BD5 900AE4            MOV     DPTR,#HopperSetList
809BD8 CF                XCH     A,R7
809BD9 F0                MOVX    @DPTR,A
809BDA A3                INC     DPTR
809BDB EF                MOV     A,R7
809BDC F0                MOVX    @DPTR,A
  623: 			HopperSetList[0].HopperIndex = 3;			
809BDD A3                INC     DPTR
809BDE 7403              MOV     A,#03H
809BE0 F0                MOVX    @DPTR,A
  624: 			HopperSetList[1].price = j;
809BE1 9015A1            MOV     DPTR,#j
809BE4 E0                MOVX    A,@DPTR
809BE5 FF                MOV     R7,A
809BE6 A3                INC     DPTR
809BE7 E0                MOVX    A,@DPTR
809BE8 900AE8            MOV     DPTR,#HopperSetList+04H
809BEB CF                XCH     A,R7
809BEC F0                MOVX    @DPTR,A
809BED A3                INC     DPTR
809BEE EF                MOV     A,R7
809BEF         
809BEF F0                MOVX    @DPTR,A
  625: 			HopperSetList[1].HopperIndex = 2;
809BF0 A3                INC     DPTR
809BF1         
809BF1 7402              MOV     A,#02H
809BF3 F0                MOVX    @DPTR,A
  626: 		}
  627: 	}
809BF4         ?C0120?MAINFLOW:
  628: 
  629: 	for( i = 0; i < 3; i ++ )
809BF4 E4                CLR     A
809BF5 FC                MOV     R4,A
809BF6 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 365


809BF7         ?C0130?MAINFLOW:
  630: 	{
  631: 		if( HopperSetList[i].price == 0 )		
809BF7 ED                MOV     A,R5
809BF8 AE04              MOV     R6,AR4
809BFA 7802              MOV     R0,#02H
809BFC         ?C0994?MAINFLOW:
809BFC C3                CLR     C
809BFD 33                RLC     A
809BFE CE                XCH     A,R6
809BFF 33                RLC     A
809C00 CE                XCH     A,R6
809C01 D8F9              DJNZ    R0,?C0994?MAINFLOW
809C03 24E4              ADD     A,#LOW HopperSetList
809C05 F582              MOV     DPL,A
809C07 740A              MOV     A,#HIGH HopperSetList
809C09 3E                ADDC    A,R6
809C0A F583              MOV     DPH,A
809C0C E0                MOVX    A,@DPTR
809C0D FE                MOV     R6,A
809C0E A3                INC     DPTR
809C0F E0                MOVX    A,@DPTR
809C10 4E                ORL     A,R6
809C11 600B              JZ      ?C0131?MAINFLOW
  632: 			break;
  633: 	}
809C13         ?C0132?MAINFLOW:
809C13 0D                INC     R5
809C14 BD0001            CJNE    R5,#00H,?C0995?MAINFLOW
809C17 0C                INC     R4
809C18         ?C0995?MAINFLOW:
809C18 ED                MOV     A,R5
809C19 6403              XRL     A,#03H
809C1B 4C                ORL     A,R4
809C1C 70D9              JNZ     ?C0130?MAINFLOW
809C1E         ?C0131?MAINFLOW:
  634: 	if( i > 0 )
809C1E D3                SETB    C
809C1F ED                MOV     A,R5
809C20 9400              SUBB    A,#00H
809C22 EC                MOV     A,R4
809C23 9400              SUBB    A,#00H
809C25 4005              JC      ?C0134?MAINFLOW
  635: 		i--;
809C27 ED                MOV     A,R5
809C28 1D                DEC     R5
809C29 7001              JNZ     ?C0996?MAINFLOW
809C2B 1C                DEC     R4
809C2C         ?C0996?MAINFLOW:
809C2C         ?C0134?MAINFLOW:
  636: 	for( j = 0; j < 3; j ++ )
809C2C E4                CLR     A
809C2D 9015A1            MOV     DPTR,#j
809C30 F0                MOVX    @DPTR,A
809C31 A3                INC     DPTR
809C32 F0                MOVX    @DPTR,A
809C33         ?C0135?MAINFLOW:
809C33 9015A1            MOV     DPTR,#j
809C36 E0                MOVX    A,@DPTR
809C37 FE                MOV     R6,A
809C38 A3                INC     DPTR
809C39 E0                MOVX    A,@DPTR
809C3A FF                MOV     R7,A
809C3B C3                CLR     C
809C3C 9403              SUBB    A,#03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 366


809C3E EE                MOV     A,R6
809C3F 9400              SUBB    A,#00H
809C41 4003              JC      $ + 5H
809C43 029D94            LJMP    ?C0136?MAINFLOW
  637: 	{
  638: 		switch( HopperSetList[j].HopperIndex )
809C46 EF                MOV     A,R7
809C47 7802              MOV     R0,#02H
809C49         ?C0997?MAINFLOW:
809C49 C3                CLR     C
809C4A 33                RLC     A
809C4B CE                XCH     A,R6
809C4C 33                RLC     A
809C4D CE                XCH     A,R6
809C4E D8F9              DJNZ    R0,?C0997?MAINFLOW
809C50 FF                MOV     R7,A
809C51 24E6              ADD     A,#LOW HopperSetList+02H
809C53 F582              MOV     DPL,A
809C55 740A              MOV     A,#HIGH HopperSetList+02H
809C57 3E                ADDC    A,R6
809C58 F583              MOV     DPH,A
809C5A E0                MOVX    A,@DPTR
809C5B 24FE              ADD     A,#0FEH
809C5D 6067              JZ      ?C0144?MAINFLOW
809C5F 14                DEC     A
809C60 7003              JNZ     $ + 5H
809C62 029D28            LJMP    ?C0149?MAINFLOW
809C65 2402              ADD     A,#02H
809C67 6003              JZ      $ + 5H
809C69 029D85            LJMP    ?C0137?MAINFLOW
  639: 		{
  640: 			case 1:
809C6C         ?C0139?MAINFLOW:
  641: 				if( SystemParameter.HopperCoinPrice1 == 0 )
809C6C 900421            MOV     DPTR,#SystemParameter+01H
809C6F E0                MOVX    A,@DPTR
809C70 7002              JNZ     ?C0998?MAINFLOW
809C72 A3                INC     DPTR
809C73 E0                MOVX    A,@DPTR
809C74         ?C0998?MAINFLOW:
809C74 7003              JNZ     $ + 5H
809C76 029D85            LJMP    ?C0137?MAINFLOW
  642: 					break;			
809C79         ?C0140?MAINFLOW:
  643: 				if( DeviceStatus.ChangeUnit1 == 1 )
809C79 900B1D            MOV     DPTR,#DeviceStatus+02H
809C7C E0                MOVX    A,@DPTR
809C7D F9                MOV     R1,A
809C7E B4010F            CJNE    A,#01H,?C0141?MAINFLOW
  644: 					HopperSetList[j].HopperState = 2;
809C81 74E7              MOV     A,#LOW HopperSetList+03H
809C83 2F                ADD     A,R7
809C84 F582              MOV     DPL,A
809C86 740A              MOV     A,#HIGH HopperSetList+03H
809C88 3E                ADDC    A,R6
809C89 F583              MOV     DPH,A
809C8B 7402              MOV     A,#02H
809C8D F0                MOVX    @DPTR,A
809C8E 801C              SJMP    ?C0142?MAINFLOW
809C90         ?C0141?MAINFLOW:
  645: 				else
  646: 					HopperSetList[j].HopperState = 1;
809C90 9015A1            MOV     DPTR,#j
809C93 E0                MOVX    A,@DPTR
809C94 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 367


809C95 A3                INC     DPTR
809C96 E0                MOVX    A,@DPTR
809C97 7802              MOV     R0,#02H
809C99         ?C0999?MAINFLOW:
809C99 C3                CLR     C
809C9A 33                RLC     A
809C9B CE                XCH     A,R6
809C9C 33                RLC     A
809C9D CE                XCH     A,R6
809C9E D8F9              DJNZ    R0,?C0999?MAINFLOW
809CA0 24E7              ADD     A,#LOW HopperSetList+03H
809CA2 F582              MOV     DPL,A
809CA4 740A              MOV     A,#HIGH HopperSetList+03H
809CA6 3E                ADDC    A,R6
809CA7 F583              MOV     DPH,A
809CA9 7401              MOV     A,#01H
809CAB F0                MOVX    @DPTR,A
809CAC         ?C0142?MAINFLOW:
  647: 				if( ( j == i ) && ( DeviceStatus.ChangeUnit1 != 0 ) )
809CAC 9015A1            MOV     DPTR,#j
809CAF E0                MOVX    A,@DPTR
809CB0 6C                XRL     A,R4
809CB1 7003              JNZ     ?C1000?MAINFLOW
809CB3 A3                INC     DPTR
809CB4 E0                MOVX    A,@DPTR
809CB5 6D                XRL     A,R5
809CB6         ?C1000?MAINFLOW:
809CB6 6003              JZ      $ + 5H
809CB8 029D85            LJMP    ?C0137?MAINFLOW
809CBB E9                MOV     A,R1
809CBC 7003              JNZ     $ + 5H
809CBE 029D85            LJMP    ?C0137?MAINFLOW
  648: 					IsCanInCashFlag = 0;				
809CC1 C226              CLR     IsCanInCashFlag
  649: 			break;
809CC3 029D85            LJMP    ?C0137?MAINFLOW
  650: 			case 2:
809CC6         ?C0144?MAINFLOW:
  651: 				if( SystemParameter.HopperCoinPrice2 == 0 )
809CC6 900423            MOV     DPTR,#SystemParameter+03H
809CC9 E0                MOVX    A,@DPTR
809CCA 7002              JNZ     ?C1001?MAINFLOW
809CCC A3                INC     DPTR
809CCD E0                MOVX    A,@DPTR
809CCE         ?C1001?MAINFLOW:
809CCE 7003              JNZ     $ + 5H
809CD0 029D85            LJMP    ?C0137?MAINFLOW
  652: 					break;			
809CD3         ?C0145?MAINFLOW:
  653: 				if( DeviceStatus.ChangeUnit2 == 1 )
809CD3 900B1E            MOV     DPTR,#DeviceStatus+03H
809CD6 E0                MOVX    A,@DPTR
809CD7 F9                MOV     R1,A
809CD8 B4011E            CJNE    A,#01H,?C0146?MAINFLOW
  654: 					HopperSetList[j].HopperState = 2;
809CDB 9015A1            MOV     DPTR,#j
809CDE E0                MOVX    A,@DPTR
809CDF FE                MOV     R6,A
809CE0 A3                INC     DPTR
809CE1 E0                MOVX    A,@DPTR
809CE2 7802              MOV     R0,#02H
809CE4         ?C1002?MAINFLOW:
809CE4 C3                CLR     C
809CE5 33                RLC     A
809CE6 CE                XCH     A,R6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 368


809CE7 33                RLC     A
809CE8 CE                XCH     A,R6
809CE9 D8F9              DJNZ    R0,?C1002?MAINFLOW
809CEB 24E7              ADD     A,#LOW HopperSetList+03H
809CED F582              MOV     DPL,A
809CEF 740A              MOV     A,#HIGH HopperSetList+03H
809CF1 3E                ADDC    A,R6
809CF2 F583              MOV     DPH,A
809CF4 7402              MOV     A,#02H
809CF6 F0                MOVX    @DPTR,A
809CF7 801C              SJMP    ?C0147?MAINFLOW
809CF9         ?C0146?MAINFLOW:
  655: 				else
  656: 					HopperSetList[j].HopperState = 1;
809CF9 9015A1            MOV     DPTR,#j
809CFC E0                MOVX    A,@DPTR
809CFD FE                MOV     R6,A
809CFE A3                INC     DPTR
809CFF E0                MOVX    A,@DPTR
809D00 7802              MOV     R0,#02H
809D02         ?C1003?MAINFLOW:
809D02 C3                CLR     C
809D03 33                RLC     A
809D04 CE                XCH     A,R6
809D05 33                RLC     A
809D06 CE                XCH     A,R6
809D07 D8F9              DJNZ    R0,?C1003?MAINFLOW
809D09 24E7              ADD     A,#LOW HopperSetList+03H
809D0B F582              MOV     DPL,A
809D0D 740A              MOV     A,#HIGH HopperSetList+03H
809D0F 3E                ADDC    A,R6
809D10 F583              MOV     DPH,A
809D12 7401              MOV     A,#01H
809D14 F0                MOVX    @DPTR,A
809D15         ?C0147?MAINFLOW:
  657: 				if( ( j == i ) && ( DeviceStatus.ChangeUnit2 != 0 ) )
809D15 9015A1            MOV     DPTR,#j
809D18 E0                MOVX    A,@DPTR
809D19 6C                XRL     A,R4
809D1A 7003              JNZ     ?C1004?MAINFLOW
809D1C A3                INC     DPTR
809D1D E0                MOVX    A,@DPTR
809D1E 6D                XRL     A,R5
809D1F         ?C1004?MAINFLOW:
809D1F 7064              JNZ     ?C0137?MAINFLOW
809D21 E9                MOV     A,R1
809D22 6061              JZ      ?C0137?MAINFLOW
  658: 					IsCanInCashFlag = 0;
809D24 C226              CLR     IsCanInCashFlag
  659: 			break;
809D26 805D              SJMP    ?C0137?MAINFLOW
  660: 			case 3:
809D28         ?C0149?MAINFLOW:
  661: 				if( SystemParameter.HopperCoinPrice3 == 0 )
809D28 900425            MOV     DPTR,#SystemParameter+05H
809D2B E0                MOVX    A,@DPTR
809D2C 7002              JNZ     ?C1005?MAINFLOW
809D2E A3                INC     DPTR
809D2F E0                MOVX    A,@DPTR
809D30         ?C1005?MAINFLOW:
809D30 6053              JZ      ?C0137?MAINFLOW
  662: 					break;			
809D32         ?C0150?MAINFLOW:
  663: 				if( DeviceStatus.ChangeUnit3 == 1 )
809D32 900B1F            MOV     DPTR,#DeviceStatus+04H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 369


809D35 E0                MOVX    A,@DPTR
809D36 F9                MOV     R1,A
809D37 B4011E            CJNE    A,#01H,?C0151?MAINFLOW
  664: 					HopperSetList[j].HopperState = 2;
809D3A 9015A1            MOV     DPTR,#j
809D3D E0                MOVX    A,@DPTR
809D3E FE                MOV     R6,A
809D3F A3                INC     DPTR
809D40 E0                MOVX    A,@DPTR
809D41 7802              MOV     R0,#02H
809D43         ?C1006?MAINFLOW:
809D43 C3                CLR     C
809D44 33                RLC     A
809D45 CE                XCH     A,R6
809D46 33                RLC     A
809D47 CE                XCH     A,R6
809D48 D8F9              DJNZ    R0,?C1006?MAINFLOW
809D4A 24E7              ADD     A,#LOW HopperSetList+03H
809D4C F582              MOV     DPL,A
809D4E 740A              MOV     A,#HIGH HopperSetList+03H
809D50 3E                ADDC    A,R6
809D51 F583              MOV     DPH,A
809D53 7402              MOV     A,#02H
809D55 F0                MOVX    @DPTR,A
809D56 801C              SJMP    ?C0152?MAINFLOW
809D58         ?C0151?MAINFLOW:
  665: 				else
  666: 					HopperSetList[j].HopperState = 1;
809D58 9015A1            MOV     DPTR,#j
809D5B E0                MOVX    A,@DPTR
809D5C FE                MOV     R6,A
809D5D A3                INC     DPTR
809D5E E0                MOVX    A,@DPTR
809D5F 7802              MOV     R0,#02H
809D61         ?C1007?MAINFLOW:
809D61 C3                CLR     C
809D62 33                RLC     A
809D63 CE                XCH     A,R6
809D64 33                RLC     A
809D65 CE                XCH     A,R6
809D66 D8F9              DJNZ    R0,?C1007?MAINFLOW
809D68 24E7              ADD     A,#LOW HopperSetList+03H
809D6A F582              MOV     DPL,A
809D6C 740A              MOV     A,#HIGH HopperSetList+03H
809D6E 3E                ADDC    A,R6
809D6F F583              MOV     DPH,A
809D71 7401              MOV     A,#01H
809D73 F0                MOVX    @DPTR,A
809D74         ?C0152?MAINFLOW:
  667: 				if( ( j == i ) && ( DeviceStatus.ChangeUnit3 != 0 ) )
809D74 9015A1            MOV     DPTR,#j
809D77 E0                MOVX    A,@DPTR
809D78 B5040A            CJNE    A,AR4,?C0137?MAINFLOW
809D7B A3                INC     DPTR
809D7C E0                MOVX    A,@DPTR
809D7D B50505            CJNE    A,AR5,?C0137?MAINFLOW
809D80 E9                MOV     A,R1
809D81 6002              JZ      ?C0137?MAINFLOW
  668: 					IsCanInCashFlag = 0;
809D83 C226              CLR     IsCanInCashFlag
  669: 			break;
  670: 			default:
  671: 				continue;	
  672: 		}
  673: 	}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 370


809D85         ?C0137?MAINFLOW:
809D85 9015A1            MOV     DPTR,#j
809D88 E4                CLR     A
809D89 75F001            MOV     B,#01H
809D8C A512800600        ECALL   ?C?IILDX
809D91 029C33            LJMP    ?C0135?MAINFLOW
809D94         ?C0136?MAINFLOW:
  674: 	//如果HOPPER内的面值为0则此HOPPER不能参数配币
  675: 	for( i = 0; i < 3; i ++ )
809D94 E4                CLR     A
809D95 FC                MOV     R4,A
809D96 FD                MOV     R5,A
809D97         ?C0155?MAINFLOW:
  676: 	{
  677: 		if( HopperSetList[i].price == 0 )		
809D97 ED                MOV     A,R5
809D98 AE04              MOV     R6,AR4
809D9A 7802              MOV     R0,#02H
809D9C         ?C1009?MAINFLOW:
809D9C C3                CLR     C
809D9D 33                RLC     A
809D9E CE                XCH     A,R6
809D9F 33                RLC     A
809DA0 CE                XCH     A,R6
809DA1 D8F9              DJNZ    R0,?C1009?MAINFLOW
809DA3 FF                MOV     R7,A
809DA4 24E4              ADD     A,#LOW HopperSetList
809DA6 F582              MOV     DPL,A
809DA8 740A              MOV     A,#HIGH HopperSetList
809DAA 3E                ADDC    A,R6
809DAB F583              MOV     DPH,A
809DAD E0                MOVX    A,@DPTR
809DAE FA                MOV     R2,A
809DAF A3                INC     DPTR
809DB0 E0                MOVX    A,@DPTR
809DB1 4A                ORL     A,R2
809DB2 700D              JNZ     ?C0157?MAINFLOW
  678: 			HopperSetList[i].HopperState = 2;				
809DB4 74E7              MOV     A,#LOW HopperSetList+03H
809DB6 2F                ADD     A,R7
809DB7 F582              MOV     DPL,A
809DB9 740A              MOV     A,#HIGH HopperSetList+03H
809DBB 3E                ADDC    A,R6
809DBC F583              MOV     DPH,A
809DBE 7402              MOV     A,#02H
809DC0 F0                MOVX    @DPTR,A
  679: 	}
809DC1         ?C0157?MAINFLOW:
809DC1 0D                INC     R5
809DC2 BD0001            CJNE    R5,#00H,?C1010?MAINFLOW
809DC5 0C                INC     R4
809DC6         ?C1010?MAINFLOW:
809DC6 ED                MOV     A,R5
809DC7 6403              XRL     A,#03H
809DC9 4C                ORL     A,R4
809DCA 70CB              JNZ     ?C0155?MAINFLOW
809DCC         ?C0156?MAINFLOW:
  680: 	//如果HOPPER内的面值为0则此HOPPER不能参数配币
  681: 	for( i = 0; i < 3; i ++ )
809DCC E4                CLR     A
809DCD FC                MOV     R4,A
809DCE FD                MOV     R5,A
809DCF         ?C0159?MAINFLOW:
  682: 	{
  683: 		if( HopperSetList[i].price == 0 )		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 371


809DCF ED                MOV     A,R5
809DD0 AE04              MOV     R6,AR4
809DD2 7802              MOV     R0,#02H
809DD4         ?C1011?MAINFLOW:
809DD4 C3                CLR     C
809DD5 33                RLC     A
809DD6 CE                XCH     A,R6
809DD7 33                RLC     A
809DD8 CE                XCH     A,R6
809DD9 D8F9              DJNZ    R0,?C1011?MAINFLOW
809DDB 24E4              ADD     A,#LOW HopperSetList
809DDD F582              MOV     DPL,A
809DDF 740A              MOV     A,#HIGH HopperSetList
809DE1 3E                ADDC    A,R6
809DE2 F583              MOV     DPH,A
809DE4 E0                MOVX    A,@DPTR
809DE5 FE                MOV     R6,A
809DE6 A3                INC     DPTR
809DE7 E0                MOVX    A,@DPTR
809DE8 4E                ORL     A,R6
809DE9 600B              JZ      ?C0160?MAINFLOW
  684: 			break;
  685: 	}
809DEB         ?C0161?MAINFLOW:
809DEB 0D                INC     R5
809DEC BD0001            CJNE    R5,#00H,?C1012?MAINFLOW
809DEF 0C                INC     R4
809DF0         ?C1012?MAINFLOW:
809DF0 ED                MOV     A,R5
809DF1 6403              XRL     A,#03H
809DF3 4C                ORL     A,R4
809DF4 70D9              JNZ     ?C0159?MAINFLOW
809DF6         ?C0160?MAINFLOW:
  686: 	if( ( i > 0 )&& ( HopperSetList[i - 1].HopperState != 1 ) )
809DF6 D3                SETB    C
809DF7 ED                MOV     A,R5
809DF8 9400              SUBB    A,#00H
809DFA EC                MOV     A,R4
809DFB 9400              SUBB    A,#00H
809DFD 401C              JC      ?C0163?MAINFLOW
809DFF AE04              MOV     R6,AR4
809E01 ED                MOV     A,R5
809E02 7802              MOV     R0,#02H
809E04         ?C1013?MAINFLOW:
809E04 C3                CLR     C
809E05 33                RLC     A
809E06 CE                XCH     A,R6
809E07 33                RLC     A
809E08 CE                XCH     A,R6
809E09 D8F9              DJNZ    R0,?C1013?MAINFLOW
809E0B 24E3              ADD     A,#LOW HopperSetList-01H
809E0D F582              MOV     DPL,A
809E0F 740A              MOV     A,#HIGH HopperSetList-01H
809E11 3E                ADDC    A,R6
809E12 F583              MOV     DPH,A
809E14 E0                MOVX    A,@DPTR
809E15 6401              XRL     A,#01H
809E17 6002              JZ      ?C0163?MAINFLOW
  687: 		IsCanInCashFlag = 0;
809E19 C226              CLR     IsCanInCashFlag
809E1B         ?C0163?MAINFLOW:
  688: 
  689: 	if( HardWareErr & 0x0004 )
809E1B 900485            MOV     DPTR,#HardWareErr+01H
809E1E E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 372


809E1F 30E207            JNB     ACC.2,?C0165?MAINFLOW
  690: 		HardWareErr = 0;
809E22 E4                CLR     A
809E23 900484            MOV     DPTR,#HardWareErr
809E26 F0                MOVX    @DPTR,A
809E27 A3                INC     DPTR
809E28 F0                MOVX    @DPTR,A
  691: }
809E29         ?C0165?MAINFLOW:
809E29 A522              ERET    
----- FUNCTION GetHopperList (END) -------


----- FUNCTION SysInitParam (BEGIN) -----
 FILE: 'mainflow.c'
 1573: u_char SysInitParam()
 1574: {	
 1575: 	u_char xdata i = 0;
 1576: 	u_char xdata j = 0;
809E2B E4                CLR     A
809E2C 90159B            MOV     DPTR,#i
809E2F F0                MOVX    @DPTR,A
 1577: 	u_char xdata x = 0 ;
809E30 A3                INC     DPTR
809E31 F0                MOVX    @DPTR,A
 1578: 	u_char xdata y = 0;
809E32 A3                INC     DPTR
809E33 F0                MOVX    @DPTR,A
 1579: 	u_char xdata z = 0;
809E34 A3                INC     DPTR
809E35 F0                MOVX    @DPTR,A
 1580: 	u_char xdata iRack = 0;
809E36 A3                INC     DPTR
809E37 F0                MOVX    @DPTR,A
 1581: 	
809E38 A3                INC     DPTR
809E39 F0                MOVX    @DPTR,A
 1582:     
 1583: 	GetHopperList();
809E3A A512809A2B        ECALL   GetHopperList
 1584: 
 1585: 	CheckHardWare( 0 );
809E3F A512809A24        ECALL   ?L?COM0037
 1586: 
 1587: 	GetHopperList();//获取Hopper的排序列表.
 1588: 	if( ( ( DeviceStatus.BillAccepter != 0 ) || ( IsCanInCashFlag == 0 ) ) && ( DeviceStatus.CoinAccepter != 0 ) )
809E44 900B1B            MOV     DPTR,#DeviceStatus
809E47 E0                MOVX    A,@DPTR
809E48 7003              JNZ     ?C0355?MAINFLOW
809E4A 20260D            JB      IsCanInCashFlag,?C0354?MAINFLOW
809E4D         ?C0355?MAINFLOW:
809E4D 900B1C            MOV     DPTR,#DeviceStatus+01H
809E50 E0                MOVX    A,@DPTR
809E51 6007              JZ      ?C0354?MAINFLOW
 1589: 		HardWareErr |= 0x0002;
809E53 900485            MOV     DPTR,#HardWareErr+01H
809E56 E0                MOVX    A,@DPTR
809E57 4402              ORL     A,#02H
809E59 F0                MOVX    @DPTR,A
809E5A         ?C0354?MAINFLOW:
 1590: 
 1591: 	//清货道控制板的SN
 1592: 	if( ChannelTask( 0, CHANNEL_CLEAR ) == 2 )
809E5A 7D53              MOV     R5,#053H
809E5C E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 373


809E5D FF                MOV     R7,A
809E5E A512809E86        ECALL   _ChannelTask
809E63 BF0207            CJNE    R7,#02H,?C0357?MAINFLOW
 1593: 	{
 1594: 		//执行命令超时,应是主板与货道驱动板通讯故障
 1595: 		Trace("\n Channel are break");
 1596: 		/*
 1597: 		//Disabled by Andy on 2010.10.26
 1598: 		for( i = 0; i < GOODSWAYNUM; i ++ )	
 1599: 			GoodsWaySetVal[i].WayState = 0x09;
 1600: 		*/
 1601: 		HardWareErr |= 0x0040;	
809E66 900485            MOV     DPTR,#HardWareErr+01H
809E69 E0                MOVX    A,@DPTR
809E6A 4440              ORL     A,#040H
809E6C F0                MOVX    @DPTR,A
 1602: 	}
 1603:     else
 1604:     {
 1605:         //ChannelTask( 0, CHANNEL_QUERY );
 1606:     }
809E6D         ?C0357?MAINFLOW:
 1607: 	return 0;	
809E6D 7F00              MOV     R7,#00H
 1608: 
 1609: }
809E6F         ?C0358?MAINFLOW:
809E6F A522              ERET    
----- FUNCTION SysInitParam (END) -------


----- FUNCTION ?L?COM0025 (BEGIN) -----
809E71 900B28            MOV     DPTR,#CurrentStockCode
809E74 E0                MOVX    A,@DPTR
809E75 25E0              ADD     A,ACC
809E77 25E0              ADD     A,ACC
809E79 24DD              ADD     A,#LOW InputGoodsWayList+01H
809E7B F582              MOV     DPL,A
809E7D E4                CLR     A
809E7E 342B              ADDC    A,#HIGH InputGoodsWayList+01H
809E80 F583              MOV     DPH,A
809E82 E0                MOVX    A,@DPTR
809E83 FF                MOV     R7,A
809E84 7D50              MOV     R5,#050H
----- FUNCTION _ChannelTask (BEGIN) -----
 FILE: 'CommonFunction.c'
  693: u_char ChannelTask( u_char ChannelNum, u_char TaskId )
  694: {	
809E86 901760            MOV     DPTR,#ChannelNum
809E89 EF                MOV     A,R7
809E8A F0                MOVX    @DPTR,A
809E8B A3                INC     DPTR
809E8C ED                MOV     A,R5
809E8D F0                MOVX    @DPTR,A
  695: 	u_char xdata i = 0;
  696: 	u_char xdata j = 0;
809E8E E4                CLR     A
809E8F A3                INC     DPTR
809E90 F0                MOVX    @DPTR,A
  697: 	u_char xdata z = 0;
809E91 A3                INC     DPTR
809E92 F0                MOVX    @DPTR,A
  698: 
809E93 A3                INC     DPTR
809E94 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 374


809E95         ?C0180?COMMONFUNCTION:
  699: 	while( z < 2 )
809E95 901764            MOV     DPTR,#z
809E98 E0                MOVX    A,@DPTR
809E99 FD                MOV     R5,A
809E9A C3                CLR     C
809E9B 9402              SUBB    A,#02H
809E9D 4003              JC      $ + 5H
809E9F 029F4E            LJMP    ?C0181?COMMONFUNCTION
  700: 	{
  701: 		switch( TaskId )
809EA2 901761            MOV     DPTR,#TaskId
809EA5 E0                MOVX    A,@DPTR
809EA6 24AF              ADD     A,#0AFH
809EA8 6016              JZ      ?C0184?COMMONFUNCTION
809EAA 14                DEC     A
809EAB 601A              JZ      ?C0185?COMMONFUNCTION
809EAD 14                DEC     A
809EAE 6023              JZ      ?C0186?COMMONFUNCTION
809EB0 2403              ADD     A,#03H
809EB2 7026              JNZ     ?C0187?COMMONFUNCTION
  702: 		{
  703: 			case CHANNEL_EXEC://出货			
809EB4         ?C0183?COMMONFUNCTION:
  704: 				ZhkChannelExec( ChannelNum, z );			
809EB4 901760            MOV     DPTR,#ChannelNum
809EB7 E0                MOVX    A,@DPTR
809EB8 FF                MOV     R7,A
809EB9 A5128130FD        ECALL   _ZhkChannelExec
  705: 				break;
809EBE 801F              SJMP    ?C0182?COMMONFUNCTION
  706: 			case CHANNEL_QUERY://查询命令执行情况
809EC0         ?C0184?COMMONFUNCTION:
  707: 				ZhkChannelQuery();
809EC0 A5128130C8        ECALL   ZhkChannelQuery
  708: 				break;
809EC5 8018              SJMP    ?C0182?COMMONFUNCTION
  709: 			case CHANNEL_TEST://货道测试
809EC7         ?C0185?COMMONFUNCTION:
  710: 				ZhkChannelTest( ChannelNum );			
809EC7 901760            MOV     DPTR,#ChannelNum
809ECA E0                MOVX    A,@DPTR
809ECB FF                MOV     R7,A
809ECC A51281318D        ECALL   _ZhkChannelTest
  711: 				break;
809ED1 800C              SJMP    ?C0182?COMMONFUNCTION
  712: 			case CHANNEL_CLEAR://同步SN
809ED3         ?C0186?COMMONFUNCTION:
  713: 				ZhkChannelClear();
809ED3 A512813158        ECALL   ZhkChannelClear
  714: 				break;		
809ED8 8005              SJMP    ?C0182?COMMONFUNCTION
  715: 			default:
809EDA         ?C0187?COMMONFUNCTION:
  716: 				return 0;
809EDA 7F00              MOV     R7,#00H
809EDC 029FDE            LJMP    ?C0188?COMMONFUNCTION
  717: 		}
809EDF         ?C0182?COMMONFUNCTION:
  718: 		i = 0;
809EDF E4                CLR     A
809EE0 901762            MOV     DPTR,#i
809EE3 F0                MOVX    @DPTR,A
  719: 		j = 0;
809EE4 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 375


809EE5 F0                MOVX    @DPTR,A
809EE6         ?C0189?COMMONFUNCTION:
  720: 		while( ! ( i || j ) )
809EE6 901762            MOV     DPTR,#i
809EE9 E0                MOVX    A,@DPTR
809EEA 702A              JNZ     ?C0190?COMMONFUNCTION
809EEC A3                INC     DPTR
809EED E0                MOVX    A,@DPTR
809EEE 7026              JNZ     ?C0190?COMMONFUNCTION
  721: 		{
  722: 			WaitForWork( 50, NULL );
809EF0 7F32              MOV     R7,#032H
809EF2 FE                MOV     R6,A
809EF3 A512808330        ECALL   ?L?COM000D
  723: 			i = TestDeviceTimeOut( &Channel );
809EF8 7E23              MOV     R6,#HIGH Channel
809EFA 7FBE              MOV     R7,#LOW Channel
809EFC A5128087FD        ECALL   _TestDeviceTimeOut
809F01 901762            MOV     DPTR,#i
809F04 EF                MOV     A,R7
809F05 F0                MOVX    @DPTR,A
  724: 			j = TestDeviceCommOK( &Channel );		
809F06 7E23              MOV     R6,#HIGH Channel
809F08 7FBE              MOV     R7,#LOW Channel
809F0A A512809085        ECALL   _TestDeviceCommOK
809F0F 901763            MOV     DPTR,#j
809F12 EF                MOV     A,R7
809F13 F0                MOVX    @DPTR,A
  725: 		}
809F14 80D0              SJMP    ?C0189?COMMONFUNCTION
809F16         ?C0190?COMMONFUNCTION:
  726: 	//	Trace("\n i = %bu, j = %bu", i, j );
  727: 		if( i ) //超时，货道故障	
809F16 901762            MOV     DPTR,#i
809F19 E0                MOVX    A,@DPTR
809F1A 6032              JZ      ?C0181?COMMONFUNCTION
  728: 		{
  729: 			if( ( TaskId == CHANNEL_EXEC ) || ( TaskId == CHANNEL_TEST ) )
809F1C 901761            MOV     DPTR,#TaskId
809F1F E0                MOVX    A,@DPTR
809F20 FF                MOV     R7,A
809F21 6450              XRL     A,#050H
809F23 6004              JZ      ?C0193?COMMONFUNCTION
809F25 EF                MOV     A,R7
809F26 B45220            CJNE    A,#052H,?C0192?COMMONFUNCTION
809F29         ?C0193?COMMONFUNCTION:
  730: 			{
  731: 				if( Channel.ExtState[2] == 0 )	//没有收到命令ACK，重试一次
809F29 9023C4            MOV     DPTR,#Channel+06H
809F2C E0                MOVX    A,@DPTR
809F2D FF                MOV     R7,A
809F2E 7002              JNZ     ?C0194?COMMONFUNCTION
  732: 				{
  733: 					z++;
  734: 					continue;
809F30 800E              SJMP    ?C0273?COMMONFUNCTION
  735: 				}
809F32         ?C0194?COMMONFUNCTION:
  736: 				else if( Channel.ExtState[2] == 1 )//收到命令ACK，但没有收到消息ACK，则查询命令执行情况
809F32 EF                MOV     A,R7
809F33 6401              XRL     A,#01H
809F35 6003              JZ      $ + 5H
809F37 029E95            LJMP    ?C0180?COMMONFUNCTION
  737: 				{
  738: 					TaskId = CHANNEL_QUERY;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 376


809F3A 901761            MOV     DPTR,#TaskId
809F3D 7451              MOV     A,#051H
809F3F F0                MOVX    @DPTR,A
  739: 					z++;
809F40         
809F40 901764            MOV     DPTR,#z
809F43 E0                MOVX    A,@DPTR
809F44 04                INC     A
809F45 F0                MOVX    @DPTR,A
  740: 			//		Trace("\n CHANNEL_QUERY" );
  741: 					continue;
809F46 029E95            LJMP    ?C0180?COMMONFUNCTION
  742: 				}
  743: 			}
809F49         ?C0192?COMMONFUNCTION:
  744: 			else
  745: 			{
  746: 		//		Trace("\n TimeOut" );
  747: 				return 2;
809F49 7F02              MOV     R7,#02H
809F4B 029FDE            LJMP    ?C0188?COMMONFUNCTION
  748: 			}
  749: 		}
  750: 		else
  751: 			break;
  752: 	}
809F4E         ?C0181?COMMONFUNCTION:
  753: 	if( i )
809F4E 901762            MOV     DPTR,#i
809F51 E0                MOVX    A,@DPTR
809F52 6005              JZ      ?C0199?COMMONFUNCTION
  754: 		return 2;
809F54 7F02              MOV     R7,#02H
809F56 029FDE            LJMP    ?C0188?COMMONFUNCTION
809F59         ?C0199?COMMONFUNCTION:
  755: 	/*状态字节中各位的意义
  756: 	  Bit 6: 接收到的命令包有错误
  757: 	  Bit 5: 货物没有通过出货检测口
  758: 	  Bit 4: 在限定的时间内电机不能到位
  759: 	  Bit 3: 电机没有转动
  760: 	  Bit 2: 在转动前电机没有到位
  761: 	  Bit 1: 商品卖空，保留
  762: 	  Bit 0: 命令失败 */
  763: 	switch( TaskId )
809F59 901761            MOV     DPTR,#TaskId
809F5C E0                MOVX    A,@DPTR
809F5D 24B0              ADD     A,#0B0H
809F5F 24FD              ADD     A,#0FDH
809F61 5004              JNC     ?C0203?COMMONFUNCTION
809F63 605C              JZ      ?C0214?COMMONFUNCTION
809F65 8075              SJMP    ?C0200?COMMONFUNCTION
  764: 	{
  765: 	    
  766: 		case CHANNEL_EXEC:
  767: 		case CHANNEL_QUERY:	
  768: 		case CHANNEL_TEST:
809F67         ?C0203?COMMONFUNCTION:
  769: 			//----------------------------------------------------------------------
  770: 			//Added by Andy on 2010.10.21 for GOC device
  771:              if( SystemParameter.GOCOn == 1 )
809F67 90046B            MOV     DPTR,#SystemParameter+04BH
809F6A E0                MOVX    A,@DPTR
809F6B FE                MOV     R6,A
809F6C B40114            CJNE    A,#01H,?C0204?COMMONFUNCTION
  772:     		 {
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 377


  773: 					if( Channel.State & 0x80 )
809F6F 9023C1            MOV     DPTR,#Channel+03H
809F72 E0                MOVX    A,@DPTR
809F73 900B24            MOV     DPTR,#DeviceStatus+09H
809F76 30E706            JNB     ACC.7,?C0205?COMMONFUNCTION
  774: 					{
  775: 						DeviceStatus.GOCStatus |= 0x01;	
809F79 E0                MOVX    A,@DPTR
809F7A 4401              ORL     A,#01H
809F7C F0                MOVX    @DPTR,A
  776: 					}
809F7D 8004              SJMP    ?C0204?COMMONFUNCTION
809F7F         ?C0205?COMMONFUNCTION:
  777:                     else
  778:                     {
  779:                         DeviceStatus.GOCStatus &= 0xFE;
809F7F E0                MOVX    A,@DPTR
809F80 54FE              ANL     A,#0FEH
809F82 F0                MOVX    @DPTR,A
  780:                     }
  781: 			 }
809F83         ?C0204?COMMONFUNCTION:
  782: 			//======================================================================
  783: 			if( Channel.State & 0x01 ) 
809F83 9023C1            MOV     DPTR,#Channel+03H
809F86 E0                MOVX    A,@DPTR
809F87 30E052            JNB     ACC.0,?C0200?COMMONFUNCTION
  784: 			{	
  785: 				if( Channel.State & 0x04 )
809F8A 30E204            JNB     ACC.2,?C0208?COMMONFUNCTION
  786: 					return 3;//在转动前电机没有到位，没有出货，此货道已不能工作了
809F8D 7F03              MOV     R7,#03H
809F8F 804D              SJMP    ?C0188?COMMONFUNCTION
809F91         ?C0208?COMMONFUNCTION:
  787: 				if( Channel.State & 0x08 )
809F91 9023C1            MOV     DPTR,#Channel+03H
809F94 E0                MOVX    A,@DPTR
809F95 FD                MOV     R5,A
809F96 30E304            JNB     ACC.3,?C0209?COMMONFUNCTION
  788: 					return 4;//电机没有转动，没有出货，可以重试一次
809F99 7F04              MOV     R7,#04H
809F9B 8041              SJMP    ?C0188?COMMONFUNCTION
809F9D         ?C0209?COMMONFUNCTION:
  789: 				if( Channel.State & 0x10 )
809F9D ED                MOV     A,R5
809F9E 30E404            JNB     ACC.4,?C0210?COMMONFUNCTION
  790: 					return 5;//在限定的时间内电机不能到位（但货已出成功，货道有硬件故障）
809FA1 7F05              MOV     R7,#05H
809FA3 8039              SJMP    ?C0188?COMMONFUNCTION
809FA5         ?C0210?COMMONFUNCTION:
  791: 				if( Channel.State & 0x40 )
809FA5 9023C1            MOV     DPTR,#Channel+03H
809FA8 E0                MOVX    A,@DPTR
809FA9 FD                MOV     R5,A
809FAA 30E604            JNB     ACC.6,?C0211?COMMONFUNCTION
  792: 					return 7;//接收到的命令包有错误，但货没有出，可以重试一次
809FAD 7F07              MOV     R7,#07H
809FAF 802D              SJMP    ?C0188?COMMONFUNCTION
809FB1         ?C0211?COMMONFUNCTION:
  793: 				//----------------------------------------------------------------------
  794: 				//Added by Andy on 2010.10.21 for GOC device
  795:                 if( SystemParameter.GOCOn == 1 )
809FB1 EE                MOV     A,R6
809FB2 B40108            CJNE    A,#01H,?C0212?COMMONFUNCTION
  796:     			{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 378


  797: 					if( Channel.State & 0x20 )
809FB5 ED                MOV     A,R5
809FB6 30E504            JNB     ACC.5,?C0212?COMMONFUNCTION
  798: 					{
  799: 					    //if( ( DeviceStatus.GOCStatus == 0x00 ) )
  800:                         /*
  801: 						if( SystemParameter.SVC_GOCErr == 0x00 )
  802: 						{
  803: 							return 8;
  804: 						}
  805: 						else
  806: 						{
  807: 						    return 0;	
  808: 						}
  809:                         */
  810:                         return 8;
809FB9 7F08              MOV     R7,#08H
809FBB 8021              SJMP    ?C0188?COMMONFUNCTION
  811: 					}
  812: 				}
809FBD         ?C0212?COMMONFUNCTION:
  813: 				//======================================================================
  814: 				return 1;//命令失败
809FBD 7F01              MOV     R7,#01H
809FBF 801D              SJMP    ?C0188?COMMONFUNCTION
  815: 			}
  816: 			break;		
  817: 		case CHANNEL_CLEAR:
809FC1         ?C0214?COMMONFUNCTION:
  818:             {
  819:             	//----------------------------------------------------------------------
  820: 				//Added by Andy on 2010.10.21 for GOC device
  821: 	             if( SystemParameter.GOCOn == 1 )
809FC1 90046B            MOV     DPTR,#SystemParameter+04BH
809FC4 E0                MOVX    A,@DPTR
809FC5 B40114            CJNE    A,#01H,?C0200?COMMONFUNCTION
  822: 	    		 {
  823: 						if( Channel.State & 0x80 )
809FC8 9023C1            MOV     DPTR,#Channel+03H
809FCB E0                MOVX    A,@DPTR
809FCC 900B24            MOV     DPTR,#DeviceStatus+09H
809FCF 30E706            JNB     ACC.7,?C0216?COMMONFUNCTION
  824: 						{
  825: 							DeviceStatus.GOCStatus |= 0x01;	
809FD2 E0                MOVX    A,@DPTR
809FD3 4401              ORL     A,#01H
809FD5 F0                MOVX    @DPTR,A
  826: 						}
809FD6 8004              SJMP    ?C0200?COMMONFUNCTION
809FD8         ?C0216?COMMONFUNCTION:
  827: 	                    else
  828: 	                    {
  829: 	                        DeviceStatus.GOCStatus &= 0xFE;
809FD8 E0                MOVX    A,@DPTR
809FD9 54FE              ANL     A,#0FEH
809FDB F0                MOVX    @DPTR,A
  830: 	                    }
  831: 				 }
  832: 				//======================================================================
  833:             }
  834: 			break;
  835: 	}	
809FDC         ?C0200?COMMONFUNCTION:
  836: 	return 0;//出货成功
809FDC 7F00              MOV     R7,#00H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 379


  837: }
809FDE         ?C0188?COMMONFUNCTION:
809FDE A522              ERET    
----- FUNCTION _ChannelTask (END) -------


----- FUNCTION GetMinHopper (BEGIN) -----
 FILE: 'mainflow.c'
  695: u_char GetMinHopper()
  696: {
  697: 	if( HopperSetList[2].price != 0 )
  698: 		return 2;
809FE0 900AEC            MOV     DPTR,#HopperSetList+08H
809FE3 E0                MOVX    A,@DPTR
809FE4 7002              JNZ     ?C1014?MAINFLOW
809FE6 A3                INC     DPTR
809FE7 E0                MOVX    A,@DPTR
809FE8         ?C1014?MAINFLOW:
809FE8 6004              JZ      ?C0166?MAINFLOW
  699: 	else if( HopperSetList[1].price != 0 )
809FEA 7F02              MOV     R7,#02H
809FEC 800E              SJMP    ?C0167?MAINFLOW
809FEE         ?C0166?MAINFLOW:
  700: 		return 1;
809FEE 900AE8            MOV     DPTR,#HopperSetList+04H
809FF1 E0                MOVX    A,@DPTR
809FF2 7002              JNZ     ?C1015?MAINFLOW
809FF4 A3                INC     DPTR
809FF5 E0                MOVX    A,@DPTR
809FF6         ?C1015?MAINFLOW:
809FF6 7F00              MOV     R7,#00H
809FF8 6002              JZ      ?C0169?MAINFLOW
  701: 	else
809FFA 7F01              MOV     R7,#01H
809FFC         ?C0169?MAINFLOW:
  702: 		return 0;
  703: }
809FFC         ?C0167?MAINFLOW:
809FFC A522              ERET    
----- FUNCTION GetMinHopper (END) -------


----- FUNCTION ?L?COM0032 (BEGIN) -----
809FFE E4                CLR     A
809FFF 90159B            MOV     DPTR,#i
80A002 F0                MOVX    @DPTR,A
----- FUNCTION IsCanChange (BEGIN) -----
 FILE: 'mainflow.c'
  706: u_char IsCanChange()
  707: {
  708: 	u_char i = 0;
  709: 
;---- Variable 'i' assigned to Register 'R7' ----
80A003 E4                CLR     A
80A004 FF                MOV     R7,A
  710: 	for(i = 0; i < 3; i ++ )
80A005         ?C0171?MAINFLOW:
  711: 	{
  712: 		if( ( HopperSetList[i].HopperState == 1 ) && ( HopperSetList[i].price != 0 ) )
80A005 EF                MOV     A,R7
80A006 25E0              ADD     A,ACC
80A008 25E0              ADD     A,ACC
80A00A 24E7              ADD     A,#LOW HopperSetList+03H
80A00C F582              MOV     DPL,A
80A00E E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 380


80A00F 340A              ADDC    A,#HIGH HopperSetList+03H
80A011 F583              MOV     DPH,A
80A013 E0                MOVX    A,@DPTR
80A014 B40115            CJNE    A,#01H,?C0173?MAINFLOW
80A017 EF                MOV     A,R7
80A018 25E0              ADD     A,ACC
80A01A 25E0              ADD     A,ACC
80A01C 24E4              ADD     A,#LOW HopperSetList
80A01E F582              MOV     DPL,A
80A020 E4                CLR     A
80A021 340A              ADDC    A,#HIGH HopperSetList
80A023 F583              MOV     DPH,A
80A025 E0                MOVX    A,@DPTR
80A026 FC                MOV     R4,A
80A027 A3                INC     DPTR
80A028 E0                MOVX    A,@DPTR
80A029 4C                ORL     A,R4
80A02A 7005              JNZ     ?C0172?MAINFLOW
  713: 			break;
  714: 	}
80A02C         ?C0173?MAINFLOW:
80A02C 0F                INC     R7
80A02D EF                MOV     A,R7
80A02E B403D4            CJNE    A,#03H,?C0171?MAINFLOW
80A031         ?C0172?MAINFLOW:
  715: 	if( i == 3 )
80A031 EF                MOV     A,R7
80A032 7F01              MOV     R7,#01H
80A034 B40302            CJNE    A,#03H,?C0175?MAINFLOW
  716: 		return 0;
80A037 7F00              MOV     R7,#00H
80A039         ?C0175?MAINFLOW:
  717: 	else
  718: 		return 1;
  719: }
80A039         ?C0176?MAINFLOW:
80A039 A522              ERET    
----- FUNCTION IsCanChange (END) -------


----- FUNCTION ColnumIsCanServer (BEGIN) -----
 FILE: 'mainflow.c'
  722: u_char ColnumIsCanServer()
  723: {
  724: 	u_char i = 0;
  725: 
;---- Variable 'i' assigned to Register 'R7' ----
80A03B E4                CLR     A
80A03C FF                MOV     R7,A
  726: 	for( i = 0; i < GOODSWAYNUM; i ++ )
80A03D         ?C0178?MAINFLOW:
  727: 	{
  728: 		if( ( ( GoodsWaySetVal[i].WayState & 0x01 ) == 0x01 ) && ( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 ) && (
>>  GoodsWaySetVal[i].GoodsCurrentSum != 0 ) && \
80A03D 75F005            MOV     B,#05H
80A040 EF                MOV     A,R7
80A041 900005            MOV     DPTR,#GoodsWaySetVal+01H
80A044 A51280079F        ECALL   ?C?OFFXADD
80A049 E0                MOVX    A,@DPTR
80A04A 30E026            JNB     ACC.0,?C0180?MAINFLOW
80A04D 540A              ANL     A,#0AH
80A04F 7022              JNZ     ?C0180?MAINFLOW
80A051 75F005            MOV     B,#05H
80A054 EF                MOV     A,R7
80A055 900008            MOV     DPTR,#GoodsWaySetVal+04H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 381


80A058 A51280079F        ECALL   ?C?OFFXADD
80A05D E0                MOVX    A,@DPTR
80A05E 6013              JZ      ?C0180?MAINFLOW
80A060 75F005            MOV     B,#05H
80A063 EF                MOV     A,R7
80A064 900006            MOV     DPTR,#GoodsWaySetVal+02H
80A067 A51280079F        ECALL   ?C?OFFXADD
80A06C E0                MOVX    A,@DPTR
80A06D FC                MOV     R4,A
80A06E A3                INC     DPTR
80A06F E0                MOVX    A,@DPTR
80A070 4C                ORL     A,R4
80A071 7005              JNZ     ?C0179?MAINFLOW
  729: 				( GoodsWaySetVal[i].Price != 0 ) )
  730: 			break;
  731: 	}
80A073         ?C0180?MAINFLOW:
80A073 0F                INC     R7
80A074 EF                MOV     A,R7
80A075 B440C5            CJNE    A,#040H,?C0178?MAINFLOW
80A078         ?C0179?MAINFLOW:
  732: 	if( i == GOODSWAYNUM )
80A078 EF                MOV     A,R7
80A079 7F01              MOV     R7,#01H
80A07B B44002            CJNE    A,#040H,?C0182?MAINFLOW
  733: 		return 0;
80A07E 7F00              MOV     R7,#00H
80A080         ?C0182?MAINFLOW:
  734: 	else
  735: 		return 1;
  736: }
80A080         ?C0183?MAINFLOW:
80A080 A522              ERET    
----- FUNCTION ColnumIsCanServer (END) -------


----- FUNCTION ScanIsSendAlarm (BEGIN) -----
 FILE: 'mainflow.c'
  738: u_char	ScanIsSendAlarm()
  739: {
  740: 	u_char xdata str1[6];
  741: 	u_char xdata m_SMSMessage[MAX_SMS_LEN];
  742: 	u_int  xdata len = 0;
80A082 E4                CLR     A
80A083 901644            MOV     DPTR,#len
80A086 F0                MOVX    @DPTR,A
80A087 A3                INC     DPTR
80A088 F0                MOVX    @DPTR,A
  743: 	//bit0表示已添加了至少一个消息包;	
  744: 	u_char xdata flag = 0;
80A089 A3                INC     DPTR
80A08A F0                MOVX    @DPTR,A
  745: 	u_char xdata i = 0;
80A08B A3                INC     DPTR
80A08C F0                MOVX    @DPTR,A
  746: 	u_char xdata Index = 0;
80A08D A3                INC     DPTR
80A08E F0                MOVX    @DPTR,A
  747: 	u_char xdata IsMorePage = 0;
80A08F A3                INC     DPTR
80A090 F0                MOVX    @DPTR,A
  748: 
  749: 	if( SystemParameter.MobileON != 1 )
80A091 900446            MOV     DPTR,#SystemParameter+026H
80A094 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 382


80A095 6401              XRL     A,#01H
80A097 6005              JZ      ?C0185?MAINFLOW
  750: 		return 1;
80A099 7F01              MOV     R7,#01H
80A09B 02A9D0            LJMP    ?C0186?MAINFLOW
80A09E         ?C0185?MAINFLOW:
  751: 
  752: 	//是否可以向短信发送队列中添加短信
  753: 	if( !SMSCommStatus() )
80A09E A51280AF7B        ECALL   SMSCommStatus
80A0A3 4005              JC      ?C0187?MAINFLOW
  754: 	{
  755: 		//已不能向短信发送队列中添加短信了
  756: //		Trace("\n not add sms1");
  757: 		return 1;
80A0A5 7F01              MOV     R7,#01H
80A0A7 02A9D0            LJMP    ?C0186?MAINFLOW
  758: 	}
80A0AA         ?C0187?MAINFLOW:
  759: 
  760: 	//是否可以向短信发送队列中添加短信
  761: /*	for( i = 0; i < MAX_SMS_LIST; i++ )
  762: 	{
  763: 		if( ( SMSMessage[i].SendTime == 0 ) && ( SMSMessage[i].SMSLen == 0 ) )
  764: 		//短信队列里还有空闲位置
  765: 			break;
  766: 	}
  767: 	if( i == MAX_SMS_LIST )
  768: 	{
  769: 		//短信队列里没有空闲位置
  770: 		for( i = 0; i < ( MAX_SMS_LIST - 1 ); i ++ )
  771: 		{	
  772: 			memcpy( &SMSMessage[ i ], &SMSMessage[ i + 1 ],sizeof(struct SMSMessageList ) );			
  773: 		}
  774: 		memset( &SMSMessage[ MAX_SMS_LIST - 1 ], 0, sizeof(struct SMSMessageList ) );		
  775: 		Index = MAX_SMS_LIST - 1;
  776: 	}
  777:    	else
  778: 		Index = i;
  779: */
  780: 	memset( m_SMSMessage, 0, sizeof( m_SMSMessage ) );	
80A0AA 7E00              MOV     R6,#00H
80A0AC 7FA0              MOV     R7,#0A0H
80A0AE 7D00              MOV     R5,#00H
80A0B0 7B00              MOV     R3,#?C?XDATASEG
80A0B2 7A15              MOV     R2,#HIGH m_SMSMessage
80A0B4 79A4              MOV     R1,#LOW m_SMSMessage
80A0B6 A5128008A6        ECALL   ?C?MEMSET
  781: 	//添加短信头部
  782: 	memcpy( m_SMSMessage, "VMMSG", 5 );
80A0BB 78A4              MOV     R0,#LOW m_SMSMessage
80A0BD 7C15              MOV     R4,#HIGH m_SMSMessage
80A0BF 7D00              MOV     R5,#?C?XDATASEG
80A0C1 7B80              MOV     R3,#BYTE2 080031FH
80A0C3 7A03              MOV     R2,#HIGH 080031FH
80A0C5 791F              MOV     R1,#LOW 080031FH
80A0C7 7E00              MOV     R6,#00H
80A0C9 7F05              MOV     R7,#05H
80A0CB A51280052D        ECALL   ?C?COPY
  783: 	len += 5;
80A0D0 901644            MOV     DPTR,#len
80A0D3 E4                CLR     A
80A0D4 75F005            MOV     B,#05H
80A0D7 A512800600        ECALL   ?C?IILDX
  784: 	for( i = 0; i < 5; i ++ )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 383


80A0DC E4                CLR     A
80A0DD 901647            MOV     DPTR,#i
80A0E0 F0                MOVX    @DPTR,A
80A0E1         ?C0188?MAINFLOW:
  785: 		sprintf( m_SMSMessage + len + i, "%bu", SystemParameter.VmID[i] );
80A0E1 901644            MOV     DPTR,#len
80A0E4 E0                MOVX    A,@DPTR
80A0E5 FE                MOV     R6,A
80A0E6 A3                INC     DPTR
80A0E7 E0                MOVX    A,@DPTR
80A0E8 24A4              ADD     A,#LOW m_SMSMessage
80A0EA F9                MOV     R1,A
80A0EB 7415              MOV     A,#HIGH m_SMSMessage
80A0ED 3E                ADDC    A,R6
80A0EE FA                MOV     R2,A
80A0EF 7B00              MOV     R3,#?C?XDATASEG
80A0F1 901647            MOV     DPTR,#i
80A0F4 E0                MOVX    A,@DPTR
80A0F5 FF                MOV     R7,A
80A0F6 29                ADD     A,R1
80A0F7 F9                MOV     R1,A
80A0F8 E4                CLR     A
80A0F9 3A                ADDC    A,R2
80A0FA FA                MOV     R2,A
80A0FB C003              PUSH    AR3
80A0FD C002              PUSH    AR2
80A0FF C001              PUSH    AR1
80A101 7B80              MOV     R3,#BYTE2 0800325H
80A103 7A03              MOV     R2,#HIGH 0800325H
80A105 7925              MOV     R1,#LOW 0800325H
80A107 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80A10A A5128007B6        ECALL   ?C?PSTXDATA
80A10F 7431              MOV     A,#LOW SystemParameter+011H
80A111 2F                ADD     A,R7
80A112 F582              MOV     DPL,A
80A114 E4                CLR     A
80A115 3404              ADDC    A,#HIGH SystemParameter+011H
80A117 F583              MOV     DPH,A
80A119 E0                MOVX    A,@DPTR
80A11A 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80A11D F0                MOVX    @DPTR,A
80A11E D001              POP     AR1
80A120 D002              POP     AR2
80A122 D003              POP     AR3
80A124 A512800949        ECALL   _sprintf
80A129 901647            MOV     DPTR,#i
80A12C E0                MOVX    A,@DPTR
80A12D 04                INC     A
80A12E F0                MOVX    @DPTR,A
80A12F E0                MOVX    A,@DPTR
80A130 C3                CLR     C
80A131 9405              SUBB    A,#05H
80A133 40AC              JC      ?C0188?MAINFLOW
80A135         ?C0189?MAINFLOW:
  786: 	len += 5;	
80A135 901644            MOV     DPTR,#len
80A138 E4                CLR     A
80A139 75F005            MOV     B,#05H
80A13C A512800600        ECALL   ?C?IILDX
  787: 	m_SMSMessage[len++] = '\r';
80A141 901644            MOV     DPTR,#len
80A144 E4                CLR     A
80A145 75F001            MOV     B,#01H
80A148 A512800617        ECALL   ?C?ILDIX
80A14D FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 384


80A14E 74A4              MOV     A,#LOW m_SMSMessage
80A150 25F0              ADD     A,B
80A152 F582              MOV     DPL,A
80A154 7415              MOV     A,#HIGH m_SMSMessage
80A156 3E                ADDC    A,R6
80A157 F583              MOV     DPH,A
80A159 740D              MOV     A,#0DH
80A15B F0                MOVX    @DPTR,A
  788: 	//处理系统故障
  789: 	//暂停服务
  790: 	if( ( SystemStatus == 2 ) && ( ( SystemErrorAlarm & 0x01 ) != 0x01 ) )
80A15C 9001C6            MOV     DPTR,#SystemStatus
80A15F E0                MOVX    A,@DPTR
80A160 6402              XRL     A,#02H
80A162 705D              JNZ     ?C0191?MAINFLOW
80A164 900144            MOV     DPTR,#SystemErrorAlarm
80A167 E0                MOVX    A,@DPTR
80A168 20E056            JB      ACC.0,?C0191?MAINFLOW
  791: 	{
  792: 		memcpy( m_SMSMessage + len, "S0090", 5 );		
80A16B 901644            MOV     DPTR,#len
80A16E A3                INC     DPTR
80A16F E0                MOVX    A,@DPTR
80A170 24A4              ADD     A,#LOW m_SMSMessage
80A172 F9                MOV     R1,A
80A173 E4                CLR     A
80A174 3415              ADDC    A,#HIGH m_SMSMessage
80A176 A801              MOV     R0,AR1
80A178 FC                MOV     R4,A
80A179 7D00              MOV     R5,#?C?XDATASEG
80A17B 7B80              MOV     R3,#BYTE2 0800329H
80A17D 7A03              MOV     R2,#HIGH 0800329H
80A17F 7929              MOV     R1,#LOW 0800329H
80A181 7E00              MOV     R6,#00H
80A183 7F05              MOV     R7,#05H
80A185 A51280052D        ECALL   ?C?COPY
  793: 		len += 5;	
80A18A 901644            MOV     DPTR,#len
80A18D E4                CLR     A
80A18E 75F005            MOV     B,#05H
80A191 A512800600        ECALL   ?C?IILDX
  794: 		flag |= 0x03;
80A196 901646            MOV     DPTR,#flag
80A199 E0                MOVX    A,@DPTR
80A19A 4403              ORL     A,#03H
80A19C F0                MOVX    @DPTR,A
  795: 		m_SMSMessage[len++] = '\r';				
80A19D 901644            MOV     DPTR,#len
80A1A0 E4                CLR     A
80A1A1 75F001            MOV     B,#01H
80A1A4 A512800617        ECALL   ?C?ILDIX
80A1A9 FE                MOV     R6,A
80A1AA 74A4              MOV     A,#LOW m_SMSMessage
80A1AC 25F0              ADD     A,B
80A1AE F582              MOV     DPL,A
80A1B0 7415              MOV     A,#HIGH m_SMSMessage
80A1B2 3E                ADDC    A,R6
80A1B3 F583              MOV     DPH,A
80A1B5 740D              MOV     A,#0DH
80A1B7 F0                MOVX    @DPTR,A
  796: 		SystemErrorAlarm |= 0x01;		
80A1B8 900144            MOV     DPTR,#SystemErrorAlarm
80A1BB E0                MOVX    A,@DPTR
80A1BC 4401              ORL     A,#01H
80A1BE F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 385


  797: 	}
80A1BF 800E              SJMP    ?C0192?MAINFLOW
80A1C1         ?C0191?MAINFLOW:
  798: 	else if( SystemStatus == 1 )
80A1C1 9001C6            MOV     DPTR,#SystemStatus
80A1C4 E0                MOVX    A,@DPTR
80A1C5 B40107            CJNE    A,#01H,?C0192?MAINFLOW
  799: 		SystemErrorAlarm &= 0xfe;	
80A1C8 900144            MOV     DPTR,#SystemErrorAlarm
80A1CB E0                MOVX    A,@DPTR
80A1CC 54FE              ANL     A,#0FEH
80A1CE F0                MOVX    @DPTR,A
80A1CF         ?C0192?MAINFLOW:
  800: 	//参数校验错误
  801: 	if( ( ( HardWareErr & 0x0100 ) == 0x0100 ) && ( ( SystemErrorAlarm & 0x02 ) != 0x02 ) )
80A1CF 900484            MOV     DPTR,#HardWareErr
80A1D2 E0                MOVX    A,@DPTR
80A1D3 30E071            JNB     ACC.0,?C0194?MAINFLOW
80A1D6 900144            MOV     DPTR,#SystemErrorAlarm
80A1D9 E0                MOVX    A,@DPTR
80A1DA 20E16A            JB      ACC.1,?C0194?MAINFLOW
  802: 	{		
  803: 		if( ( flag & 0x02 ) == 0x02 )
80A1DD 901646            MOV     DPTR,#flag
80A1E0 E0                MOVX    A,@DPTR
80A1E1 30E117            JNB     ACC.1,?C0195?MAINFLOW
  804: 			memcpy( m_SMSMessage - 5, "S0010", 5 );
80A1E4 789F              MOV     R0,#LOW m_SMSMessage-05H
80A1E6 7C15              MOV     R4,#HIGH m_SMSMessage-05H
80A1E8 7D00              MOV     R5,#?C?XDATASEG
80A1EA 7B80              MOV     R3,#BYTE2 080032FH
80A1EC 7A03              MOV     R2,#HIGH 080032FH
80A1EE 792F              MOV     R1,#LOW 080032FH
80A1F0 7E00              MOV     R6,#00H
80A1F2 7F05              MOV     R7,#05H
80A1F4 A51280052D        ECALL   ?C?COPY
80A1F9 8028              SJMP    ?C0196?MAINFLOW
80A1FB         ?C0195?MAINFLOW:
  805: 		else
  806: 		{
  807: 			memcpy( m_SMSMessage, "S0010", 5 );
80A1FB 78A4              MOV     R0,#LOW m_SMSMessage
80A1FD 7C15              MOV     R4,#HIGH m_SMSMessage
80A1FF 7D00              MOV     R5,#?C?XDATASEG
80A201 7B80              MOV     R3,#BYTE2 080032FH
80A203 7A03              MOV     R2,#HIGH 080032FH
80A205 792F              MOV     R1,#LOW 080032FH
80A207 7E00              MOV     R6,#00H
80A209 7F05              MOV     R7,#05H
80A20B A51280052D        ECALL   ?C?COPY
  808: 			len += 5;	
80A210 901644            MOV     DPTR,#len
80A213 E4                CLR     A
80A214 75F005            MOV     B,#05H
80A217 A512800600        ECALL   ?C?IILDX
  809: 			flag |= 0x03;
80A21C 901646            MOV     DPTR,#flag
80A21F E0                MOVX    A,@DPTR
80A220 4403              ORL     A,#03H
80A222 F0                MOVX    @DPTR,A
  810: 		}
80A223         ?C0196?MAINFLOW:
  811: 		m_SMSMessage[len++] = '\r';			
80A223 901644            MOV     DPTR,#len
80A226 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 386


80A227 75F001            MOV     B,#01H
80A22A A512800617        ECALL   ?C?ILDIX
80A22F FE                MOV     R6,A
80A230 74A4              MOV     A,#LOW m_SMSMessage
80A232 25F0              ADD     A,B
80A234 F582              MOV     DPL,A
80A236 7415              MOV     A,#HIGH m_SMSMessage
80A238 3E                ADDC    A,R6
80A239 F583              MOV     DPH,A
80A23B 740D              MOV     A,#0DH
80A23D F0                MOVX    @DPTR,A
  812: 		SystemErrorAlarm |= 0x02;
80A23E 900144            MOV     DPTR,#SystemErrorAlarm
80A241 E0                MOVX    A,@DPTR
80A242 4402              ORL     A,#02H
80A244 F0                MOVX    @DPTR,A
  813: 	}
80A245 800E              SJMP    ?C0197?MAINFLOW
80A247         ?C0194?MAINFLOW:
  814: 	else if( ( HardWareErr & 0x0100 ) == 0 )
80A247 900484            MOV     DPTR,#HardWareErr
80A24A E0                MOVX    A,@DPTR
80A24B 20E007            JB      ACC.0,?C0197?MAINFLOW
  815: 		SystemErrorAlarm &= 0xfd;	
80A24E 900144            MOV     DPTR,#SystemErrorAlarm
80A251 E0                MOVX    A,@DPTR
80A252 54FD              ANL     A,#0FDH
80A254 F0                MOVX    @DPTR,A
80A255         ?C0197?MAINFLOW:
  816: 	//显示板通讯故障
  817: 	if( ( ( HardWareErr & 0x0200 ) == 0x0200 ) && ( ( SystemErrorAlarm & 0x04 ) != 0x04 ) )
80A255 900484            MOV     DPTR,#HardWareErr
80A258 E0                MOVX    A,@DPTR
80A259 30E15D            JNB     ACC.1,?C0199?MAINFLOW
80A25C 900144            MOV     DPTR,#SystemErrorAlarm
80A25F E0                MOVX    A,@DPTR
80A260 20E256            JB      ACC.2,?C0199?MAINFLOW
  818: 	{
  819: 		Trace( "\n ScanIsSendAlarm lcd error");		
  820: 		memcpy( m_SMSMessage + len, "H0120", 5 );
80A263 901644            MOV     DPTR,#len
80A266 A3                INC     DPTR
80A267 E0                MOVX    A,@DPTR
80A268 24A4              ADD     A,#LOW m_SMSMessage
80A26A F9                MOV     R1,A
80A26B E4                CLR     A
80A26C 3415              ADDC    A,#HIGH m_SMSMessage
80A26E A801              MOV     R0,AR1
80A270 FC                MOV     R4,A
80A271 7D00              MOV     R5,#?C?XDATASEG
80A273 7B80              MOV     R3,#BYTE2 0800335H
80A275 7A03              MOV     R2,#HIGH 0800335H
80A277 7935              MOV     R1,#LOW 0800335H
80A279 7E00              MOV     R6,#00H
80A27B 7F05              MOV     R7,#05H
80A27D A51280052D        ECALL   ?C?COPY
  821: 		len += 5;	
80A282 901644            MOV     DPTR,#len
80A285 E4                CLR     A
80A286 75F005            MOV     B,#05H
80A289 A512800600        ECALL   ?C?IILDX
  822: 		flag |= 0x01;
80A28E 901646            MOV     DPTR,#flag
80A291 E0                MOVX    A,@DPTR
80A292 4401              ORL     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 387


80A294 F0                MOVX    @DPTR,A
  823: 		m_SMSMessage[len++] = '\r';		
80A295 901644            MOV     DPTR,#len
80A298 E4                CLR     A
80A299 75F001            MOV     B,#01H
80A29C A512800617        ECALL   ?C?ILDIX
80A2A1 FE                MOV     R6,A
80A2A2 74A4              MOV     A,#LOW m_SMSMessage
80A2A4 25F0              ADD     A,B
80A2A6 F582              MOV     DPL,A
80A2A8 7415              MOV     A,#HIGH m_SMSMessage
80A2AA 3E                ADDC    A,R6
80A2AB F583              MOV     DPH,A
80A2AD 740D              MOV     A,#0DH
80A2AF F0                MOVX    @DPTR,A
  824: 		SystemErrorAlarm |= 0x04;
80A2B0 900144            MOV     DPTR,#SystemErrorAlarm
80A2B3 E0                MOVX    A,@DPTR
80A2B4 4404              ORL     A,#04H
80A2B6 F0                MOVX    @DPTR,A
  825: 	}
80A2B7 800E              SJMP    ?C0200?MAINFLOW
80A2B9         ?C0199?MAINFLOW:
  826: 	else if( ( HardWareErr & 0x0200 ) == 0 )
80A2B9 900484            MOV     DPTR,#HardWareErr
80A2BC E0                MOVX    A,@DPTR
80A2BD 20E107            JB      ACC.1,?C0200?MAINFLOW
  827: 		SystemErrorAlarm &= 0xfb;
80A2C0 900144            MOV     DPTR,#SystemErrorAlarm
80A2C3 E0                MOVX    A,@DPTR
80A2C4 54FB              ANL     A,#0FBH
80A2C6 F0                MOVX    @DPTR,A
80A2C7         ?C0200?MAINFLOW:
  828: 	////货道驱动板扫描		
  829: 	if( ( ( HardWareErr & 0x0040 ) == 0x0040 ) && ( ( SystemErrorAlarm & 0x40 ) != 0x40 ) )
80A2C7 900485            MOV     DPTR,#HardWareErr+01H
80A2CA E0                MOVX    A,@DPTR
80A2CB 30E65D            JNB     ACC.6,?C0202?MAINFLOW
80A2CE 900144            MOV     DPTR,#SystemErrorAlarm
80A2D1 E0                MOVX    A,@DPTR
80A2D2 20E656            JB      ACC.6,?C0202?MAINFLOW
  830: 	{
  831: 		Trace( "\n ScanIsSendAlarm link error");
  832: 		//都与主板通讯不上
  833: 		memcpy( m_SMSMessage+len, "S0320", 5 );
80A2D5 901644            MOV     DPTR,#len
80A2D8 A3                INC     DPTR
80A2D9 E0                MOVX    A,@DPTR
80A2DA 24A4              ADD     A,#LOW m_SMSMessage
80A2DC F9                MOV     R1,A
80A2DD E4                CLR     A
80A2DE 3415              ADDC    A,#HIGH m_SMSMessage
80A2E0 A801              MOV     R0,AR1
80A2E2 FC                MOV     R4,A
80A2E3 7D00              MOV     R5,#?C?XDATASEG
80A2E5 7B80              MOV     R3,#BYTE2 080033BH
80A2E7 7A03              MOV     R2,#HIGH 080033BH
80A2E9 793B              MOV     R1,#LOW 080033BH
80A2EB 7E00              MOV     R6,#00H
80A2ED 7F05              MOV     R7,#05H
80A2EF A51280052D        ECALL   ?C?COPY
  834: 		len  += 5;
80A2F4 901644            MOV     DPTR,#len
80A2F7 E4                CLR     A
80A2F8 75F005            MOV     B,#05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 388


80A2FB A512800600        ECALL   ?C?IILDX
  835: 		m_SMSMessage[len++] = '\r';	
80A300 901644            MOV     DPTR,#len
80A303 E4                CLR     A
80A304 75F001            MOV     B,#01H
80A307 A512800617        ECALL   ?C?ILDIX
80A30C FE                MOV     R6,A
80A30D 74A4              MOV     A,#LOW m_SMSMessage
80A30F 25F0              ADD     A,B
80A311 F582              MOV     DPL,A
80A313 7415              MOV     A,#HIGH m_SMSMessage
80A315 3E                ADDC    A,R6
80A316 F583              MOV     DPH,A
80A318 740D              MOV     A,#0DH
80A31A F0                MOVX    @DPTR,A
  836: 		flag |= 0x01;	
80A31B 901646            MOV     DPTR,#flag
80A31E E0                MOVX    A,@DPTR
80A31F 4401              ORL     A,#01H
80A321 F0                MOVX    @DPTR,A
  837: 		SystemErrorAlarm |= 0x40;		
80A322 900144            MOV     DPTR,#SystemErrorAlarm
80A325 E0                MOVX    A,@DPTR
80A326 4440              ORL     A,#040H
80A328 F0                MOVX    @DPTR,A
  838: 	}
80A329 800E              SJMP    ?C0203?MAINFLOW
80A32B         ?C0202?MAINFLOW:
  839: 	else if( ( HardWareErr & 0x0040 ) == 0x0040 )
80A32B 900485            MOV     DPTR,#HardWareErr+01H
80A32E E0                MOVX    A,@DPTR
80A32F 30E607            JNB     ACC.6,?C0203?MAINFLOW
  840: 		SystemErrorAlarm &= 0xbf;//复位已发送标志	
80A332 900144            MOV     DPTR,#SystemErrorAlarm
80A335 E0                MOVX    A,@DPTR
80A336 54BF              ANL     A,#0BFH
80A338 F0                MOVX    @DPTR,A
80A339         ?C0203?MAINFLOW:
  841: 
  842: 	//纸币器
  843: 	if( SystemParameter.BillNo == 1 )
80A339 900427            MOV     DPTR,#SystemParameter+07H
80A33C E0                MOVX    A,@DPTR
80A33D 6401              XRL     A,#01H
80A33F 706A              JNZ     ?C0205?MAINFLOW
  844: 	{
  845: 		//开启了纸币器
  846: 		if( DeviceStatus.BillAccepter == 0 )
80A341 900B1B            MOV     DPTR,#DeviceStatus
80A344 E0                MOVX    A,@DPTR
80A345 7009              JNZ     ?C0206?MAINFLOW
  847: 			MoneyDevAlarm &= 0x7f;
80A347 90041F            MOV     DPTR,#MoneyDevAlarm
80A34A E0                MOVX    A,@DPTR
80A34B 547F              ANL     A,#07FH
80A34D F0                MOVX    @DPTR,A
80A34E 805B              SJMP    ?C0205?MAINFLOW
80A350         ?C0206?MAINFLOW:
  848: 	   	else if( ( MoneyDevAlarm & 0x80 ) != 0x80 )
80A350 90041F            MOV     DPTR,#MoneyDevAlarm
80A353 E0                MOVX    A,@DPTR
80A354 20E754            JB      ACC.7,?C0205?MAINFLOW
  849: 		{
  850: 			Trace( "\n ScanIsSendAlarm bill error");
  851: 			//还没有发送报警,准备发送			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 389


  852: 			memcpy( m_SMSMessage+len, "A0210", 5 );
80A357 901644            MOV     DPTR,#len
80A35A A3                INC     DPTR
80A35B E0                MOVX    A,@DPTR
80A35C 24A4              ADD     A,#LOW m_SMSMessage
80A35E F9                MOV     R1,A
80A35F E4                CLR     A
80A360 3415              ADDC    A,#HIGH m_SMSMessage
80A362 A801              MOV     R0,AR1
80A364 FC                MOV     R4,A
80A365 7D00              MOV     R5,#?C?XDATASEG
80A367 7B80              MOV     R3,#BYTE2 0800341H
80A369 7A03              MOV     R2,#HIGH 0800341H
80A36B 7941              MOV     R1,#LOW 0800341H
80A36D 7E00              MOV     R6,#00H
80A36F 7F05              MOV     R7,#05H
80A371 A51280052D        ECALL   ?C?COPY
  853: 			len += 5;			
80A376 901644            MOV     DPTR,#len
80A379 E4                CLR     A
80A37A 75F005            MOV     B,#05H
80A37D A512800600        ECALL   ?C?IILDX
  854: 			m_SMSMessage[len++] = '\r';	
80A382 901644            MOV     DPTR,#len
80A385 E4                CLR     A
80A386 75F001            MOV     B,#01H
80A389 A512800617        ECALL   ?C?ILDIX
80A38E FE                MOV     R6,A
80A38F 74A4              MOV     A,#LOW m_SMSMessage
80A391 25F0              ADD     A,B
80A393 F582              MOV     DPL,A
80A395 7415              MOV     A,#HIGH m_SMSMessage
80A397 3E                ADDC    A,R6
80A398 F583              MOV     DPH,A
80A39A 740D              MOV     A,#0DH
80A39C F0                MOVX    @DPTR,A
  855: 			flag |= 0x01;		
80A39D 901646            MOV     DPTR,#flag
80A3A0 E0                MOVX    A,@DPTR
80A3A1 4401              ORL     A,#01H
80A3A3 F0                MOVX    @DPTR,A
  856: 			MoneyDevAlarm |= 0x80;		   
80A3A4 90041F            MOV     DPTR,#MoneyDevAlarm
80A3A7 E0                MOVX    A,@DPTR
80A3A8 4480              ORL     A,#080H
80A3AA F0                MOVX    @DPTR,A
  857: 		}
  858: 	}		
80A3AB         ?C0205?MAINFLOW:
  859: 	//硬币器
  860: 	if( DeviceStatus.CoinAccepter == 0 )
80A3AB 900B1C            MOV     DPTR,#DeviceStatus+01H
80A3AE E0                MOVX    A,@DPTR
80A3AF 7009              JNZ     ?C0209?MAINFLOW
  861: 		MoneyDevAlarm &= 0xbf;
80A3B1 90041F            MOV     DPTR,#MoneyDevAlarm
80A3B4 E0                MOVX    A,@DPTR
80A3B5 54BF              ANL     A,#0BFH
80A3B7 F0                MOVX    @DPTR,A
80A3B8 805B              SJMP    ?C0210?MAINFLOW
80A3BA         ?C0209?MAINFLOW:
  862: 	else if( ( MoneyDevAlarm & 0x40 ) != 0x40 )
80A3BA 90041F            MOV     DPTR,#MoneyDevAlarm
80A3BD E0                MOVX    A,@DPTR
80A3BE 20E654            JB      ACC.6,?C0210?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 390


  863: 	{
  864: 		Trace( "\n ScanIsSendAlarm coin error");
  865: 		//还没有发送报警,准备发送
  866: 		memcpy( m_SMSMessage + len, "A0110", 5 );
80A3C1 901644            MOV     DPTR,#len
80A3C4 A3                INC     DPTR
80A3C5 E0                MOVX    A,@DPTR
80A3C6 24A4              ADD     A,#LOW m_SMSMessage
80A3C8 F9                MOV     R1,A
80A3C9 E4                CLR     A
80A3CA 3415              ADDC    A,#HIGH m_SMSMessage
80A3CC A801              MOV     R0,AR1
80A3CE FC                MOV     R4,A
80A3CF 7D00              MOV     R5,#?C?XDATASEG
80A3D1 7B80              MOV     R3,#BYTE2 0800347H
80A3D3 7A03              MOV     R2,#HIGH 0800347H
80A3D5 7947              MOV     R1,#LOW 0800347H
80A3D7 7E00              MOV     R6,#00H
80A3D9 7F05              MOV     R7,#05H
80A3DB A51280052D        ECALL   ?C?COPY
  867: 		len += 5;
80A3E0 901644            MOV     DPTR,#len
80A3E3 E4                CLR     A
80A3E4 75F005            MOV     B,#05H
80A3E7 A512800600        ECALL   ?C?IILDX
  868: 		m_SMSMessage[len++] = '\r';	
80A3EC 901644            MOV     DPTR,#len
80A3EF E4                CLR     A
80A3F0 75F001            MOV     B,#01H
80A3F3 A512800617        ECALL   ?C?ILDIX
80A3F8 FE                MOV     R6,A
80A3F9 74A4              MOV     A,#LOW m_SMSMessage
80A3FB 25F0              ADD     A,B
80A3FD F582              MOV     DPL,A
80A3FF 7415              MOV     A,#HIGH m_SMSMessage
80A401 3E                ADDC    A,R6
80A402 F583              MOV     DPH,A
80A404 740D              MOV     A,#0DH
80A406 F0                MOVX    @DPTR,A
  869: 		flag |= 0x01;	
80A407 901646            MOV     DPTR,#flag
80A40A E0                MOVX    A,@DPTR
80A40B 4401              ORL     A,#01H
80A40D F0                MOVX    @DPTR,A
  870: 		MoneyDevAlarm |= 0x40;	
80A40E 90041F            MOV     DPTR,#MoneyDevAlarm
80A411 E0                MOVX    A,@DPTR
80A412 4440              ORL     A,#040H
80A414 F0                MOVX    @DPTR,A
  871: 	}	
80A415         ?C0210?MAINFLOW:
  872: 	//HOPPER1
  873: 	//flag的bit7表示已添加了一种HOPPER故障，扫描其它HOPPER则重置它	
  874: 	memset( str1, 0, sizeof( str1 ) );
80A415 7E00              MOV     R6,#00H
80A417 7F06              MOV     R7,#06H
80A419 7D00              MOV     R5,#00H
80A41B 7B00              MOV     R3,#?C?XDATASEG
80A41D 7A15              MOV     R2,#HIGH str1
80A41F 799E              MOV     R1,#LOW str1
80A421 A5128008A6        ECALL   ?C?MEMSET
  875: 	flag &= 0x7f;
80A426 901646            MOV     DPTR,#flag
80A429 E0                MOVX    A,@DPTR
80A42A 547F              ANL     A,#07FH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 391


80A42C F0                MOVX    @DPTR,A
  876: 	if( ( SystemParameter.HopperCoinPrice1 ) != 0 )
80A42D 900421            MOV     DPTR,#SystemParameter+01H
80A430 E0                MOVX    A,@DPTR
80A431 7002              JNZ     ?C1016?MAINFLOW
80A433 A3                INC     DPTR
80A434 E0                MOVX    A,@DPTR
80A435         ?C1016?MAINFLOW:
80A435 7003              JNZ     $ + 5H
80A437 02A506            LJMP    ?C0212?MAINFLOW
  877: 	{
  878: 		if( DeviceStatus.ChangeUnit1 == 0 )
80A43A 900B1D            MOV     DPTR,#DeviceStatus+02H
80A43D E0                MOVX    A,@DPTR
80A43E FD                MOV     R5,A
80A43F 7009              JNZ     ?C0213?MAINFLOW
  879: 			MoneyDevAlarm &= 0xfc;
80A441 90041F            MOV     DPTR,#MoneyDevAlarm
80A444 E0                MOVX    A,@DPTR
80A445 54FC              ANL     A,#0FCH
80A447 F0                MOVX    @DPTR,A
80A448 8068              SJMP    ?C0214?MAINFLOW
80A44A         ?C0213?MAINFLOW:
  880: 		else if( ( ( DeviceStatus.ChangeUnit1 & 0x01 ) == 0x01 ) && ( ( MoneyDevAlarm & 0x01 ) != 0x01 ) )
80A44A ED                MOV     A,R5
80A44B 30E028            JNB     ACC.0,?C0215?MAINFLOW
80A44E 90041F            MOV     DPTR,#MoneyDevAlarm
80A451 E0                MOVX    A,@DPTR
80A452 20E021            JB      ACC.0,?C0215?MAINFLOW
  881: 		{
  882: 			Trace( "\n ScanIsSendAlarm hopper1 error");
  883: 			//HOPPER故障,还没有发送报警,准备发送
  884: 			strcpy( str1,"D0110");			
80A455 789E              MOV     R0,#LOW str1
80A457 7C15              MOV     R4,#HIGH str1
80A459 7D00              MOV     R5,#?C?XDATASEG
80A45B 7B80              MOV     R3,#BYTE2 080034DH
80A45D 7A03              MOV     R2,#HIGH 080034DH
80A45F 794D              MOV     R1,#LOW 080034DH
80A461 A512800854        ECALL   ?C?STRCPY
  885: 			flag |= 0x80;		
80A466 901646            MOV     DPTR,#flag
80A469 E0                MOVX    A,@DPTR
80A46A 4480              ORL     A,#080H
80A46C F0                MOVX    @DPTR,A
  886: 			MoneyDevAlarm |= 0x01;
80A46D 90041F            MOV     DPTR,#MoneyDevAlarm
80A470 E0                MOVX    A,@DPTR
80A471 4401              ORL     A,#01H
80A473 F0                MOVX    @DPTR,A
  887: 		}
80A474 803C              SJMP    ?C0214?MAINFLOW
80A476         ?C0215?MAINFLOW:
  888: 		else if( ( ( DeviceStatus.ChangeUnit1 & 0x02 ) == 0x02 ) && ( ( MoneyDevAlarm & 0x02 ) != 0x02 ) )
80A476 900B1D            MOV     DPTR,#DeviceStatus+02H
80A479 E0                MOVX    A,@DPTR
80A47A 30E135            JNB     ACC.1,?C0214?MAINFLOW
80A47D 90041F            MOV     DPTR,#MoneyDevAlarm
80A480 E0                MOVX    A,@DPTR
80A481 20E12E            JB      ACC.1,?C0214?MAINFLOW
  889: 		{
  890: 			//缺币, 还没有发送报警,准备发送
  891: 			if( ( flag & 0x80 ) == 0x80 )			
80A484 901646            MOV     DPTR,#flag
80A487 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 392


80A488 789E              MOV     R0,#LOW str1
80A48A 7C15              MOV     R4,#HIGH str1
80A48C 7D00              MOV     R5,#?C?XDATASEG
80A48E 30E708            JNB     ACC.7,?C0218?MAINFLOW
  892: 				//已记录了一条故障
  893: 				strcpy( str1,"D0111");						
80A491 7B80              MOV     R3,#BYTE2 0800353H
80A493 7A03              MOV     R2,#HIGH 0800353H
80A495 7953              MOV     R1,#LOW 0800353H
80A497 8006              SJMP    ?C1061?MAINFLOW
80A499         ?C0218?MAINFLOW:
  894: 			else
  895: 				strcpy( str1,"D0101");
80A499 7B80              MOV     R3,#BYTE2 0800359H
80A49B 7A03              MOV     R2,#HIGH 0800359H
80A49D 7959              MOV     R1,#LOW 0800359H
80A49F         
80A49F A512800854        ECALL   ?C?STRCPY
80A4A4         ?C0219?MAINFLOW:
  896: 			flag |= 0x80;		
80A4A4 901646            MOV     DPTR,#flag
80A4A7 E0                MOVX    A,@DPTR
80A4A8 4480              ORL     A,#080H
80A4AA F0                MOVX    @DPTR,A
  897: 			MoneyDevAlarm |= 0x02;
80A4AB 90041F            MOV     DPTR,#MoneyDevAlarm
80A4AE E0                MOVX    A,@DPTR
80A4AF 4402              ORL     A,#02H
80A4B1 F0                MOVX    @DPTR,A
  898: 		}
80A4B2         ?C0214?MAINFLOW:
  899: 		if( ( flag & 0x80 ) == 0x80 )
80A4B2 901646            MOV     DPTR,#flag
80A4B5 E0                MOVX    A,@DPTR
80A4B6 30E74D            JNB     ACC.7,?C0212?MAINFLOW
  900: 		{
  901: 			memcpy( m_SMSMessage + len, str1, 5 );
80A4B9 901644            MOV     DPTR,#len
80A4BC A3                INC     DPTR
80A4BD E0                MOVX    A,@DPTR
80A4BE 24A4              ADD     A,#LOW m_SMSMessage
80A4C0 F9                MOV     R1,A
80A4C1 E4                CLR     A
80A4C2 3415              ADDC    A,#HIGH m_SMSMessage
80A4C4 A801              MOV     R0,AR1
80A4C6 FC                MOV     R4,A
80A4C7 7D00              MOV     R5,#?C?XDATASEG
80A4C9 7B00              MOV     R3,#?C?XDATASEG
80A4CB 7A15              MOV     R2,#HIGH str1
80A4CD 799E              MOV     R1,#LOW str1
80A4CF 7E00              MOV     R6,#00H
80A4D1 7F05              MOV     R7,#05H
80A4D3 A51280052D        ECALL   ?C?COPY
  902: 			len += 5;	
80A4D8 901644            MOV     DPTR,#len
80A4DB E4                CLR     A
80A4DC 75F005            MOV     B,#05H
80A4DF A512800600        ECALL   ?C?IILDX
  903: 			m_SMSMessage[len++] = '\r';	
80A4E4 901644            MOV     DPTR,#len
80A4E7 E4                CLR     A
80A4E8 75F001            MOV     B,#01H
80A4EB A512800617        ECALL   ?C?ILDIX
80A4F0 FE                MOV     R6,A
80A4F1 74A4              MOV     A,#LOW m_SMSMessage
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 393


80A4F3 25F0              ADD     A,B
80A4F5 F582              MOV     DPL,A
80A4F7 7415              MOV     A,#HIGH m_SMSMessage
80A4F9 3E                ADDC    A,R6
80A4FA F583              MOV     DPH,A
80A4FC 740D              MOV     A,#0DH
80A4FE F0                MOVX    @DPTR,A
  904: 			flag |= 0x01;
80A4FF 901646            MOV     DPTR,#flag
80A502 E0                MOVX    A,@DPTR
80A503 4401              ORL     A,#01H
80A505 F0                MOVX    @DPTR,A
  905: 		}
  906: 	}	
80A506         ?C0212?MAINFLOW:
  907: 	memset( str1, 0, sizeof( str1 ) );
80A506 7E00              MOV     R6,#00H
80A508 7F06              MOV     R7,#06H
80A50A 7D00              MOV     R5,#00H
80A50C 7B00              MOV     R3,#?C?XDATASEG
80A50E 7A15              MOV     R2,#HIGH str1
80A510 799E              MOV     R1,#LOW str1
80A512 A5128008A6        ECALL   ?C?MEMSET
  908: 	flag &= 0x7f;
80A517 901646            MOV     DPTR,#flag
80A51A E0                MOVX    A,@DPTR
80A51B 547F              ANL     A,#07FH
80A51D F0                MOVX    @DPTR,A
  909: 	//HOPPER2
  910: 	if( SystemParameter.HopperCoinPrice2 != 0 )
80A51E 900423            MOV     DPTR,#SystemParameter+03H
80A521 E0                MOVX    A,@DPTR
80A522 7002              JNZ     ?C1017?MAINFLOW
80A524 A3                INC     DPTR
80A525 E0                MOVX    A,@DPTR
80A526         ?C1017?MAINFLOW:
80A526 7003              JNZ     $ + 5H
80A528 02A5F7            LJMP    ?C0221?MAINFLOW
  911: 	{
  912: 		if( DeviceStatus.ChangeUnit2 == 0 )
80A52B 900B1E            MOV     DPTR,#DeviceStatus+03H
80A52E E0                MOVX    A,@DPTR
80A52F FD                MOV     R5,A
80A530 7009              JNZ     ?C0222?MAINFLOW
  913: 			MoneyDevAlarm &= 0xf3;
80A532 90041F            MOV     DPTR,#MoneyDevAlarm
80A535 E0                MOVX    A,@DPTR
80A536 54F3              ANL     A,#0F3H
80A538 F0                MOVX    @DPTR,A
80A539 8068              SJMP    ?C0223?MAINFLOW
80A53B         ?C0222?MAINFLOW:
  914: 		else if( ( ( DeviceStatus.ChangeUnit2 & 0x01 ) == 0x01 ) && ( ( MoneyDevAlarm & 0x04 ) != 0x04 ) )
80A53B ED                MOV     A,R5
80A53C 30E028            JNB     ACC.0,?C0224?MAINFLOW
80A53F 90041F            MOV     DPTR,#MoneyDevAlarm
80A542 E0                MOVX    A,@DPTR
80A543 20E221            JB      ACC.2,?C0224?MAINFLOW
  915: 		{
  916: 			Trace( "\n ScanIsSendAlarm hopper2 error");
  917: 			//还没有发送报警,准备发送
  918: 			strcpy( str1,"D0210");			
80A546 789E              MOV     R0,#LOW str1
80A548 7C15              MOV     R4,#HIGH str1
80A54A 7D00              MOV     R5,#?C?XDATASEG
80A54C 7B80              MOV     R3,#BYTE2 080035FH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 394


80A54E 7A03              MOV     R2,#HIGH 080035FH
80A550 795F              MOV     R1,#LOW 080035FH
80A552 A512800854        ECALL   ?C?STRCPY
  919: 			flag |= 0x80;		
80A557 901646            MOV     DPTR,#flag
80A55A E0                MOVX    A,@DPTR
80A55B 4480              ORL     A,#080H
80A55D F0                MOVX    @DPTR,A
  920: 			MoneyDevAlarm |= 0x04;
80A55E 90041F            MOV     DPTR,#MoneyDevAlarm
80A561 E0                MOVX    A,@DPTR
80A562 4404              ORL     A,#04H
80A564 F0                MOVX    @DPTR,A
  921: 		}
80A565 803C              SJMP    ?C0223?MAINFLOW
80A567         ?C0224?MAINFLOW:
  922: 		else if( ( ( DeviceStatus.ChangeUnit2 & 0x02 ) == 0x02 ) && ( ( MoneyDevAlarm & 0x08 ) != 0x08 ) )
80A567 900B1E            MOV     DPTR,#DeviceStatus+03H
80A56A E0                MOVX    A,@DPTR
80A56B 30E135            JNB     ACC.1,?C0223?MAINFLOW
80A56E 90041F            MOV     DPTR,#MoneyDevAlarm
80A571 E0                MOVX    A,@DPTR
80A572 20E32E            JB      ACC.3,?C0223?MAINFLOW
  923: 		{
  924: 			//还没有发送报警,准备发送
  925: 			if( ( flag & 0x80 ) == 0x80 )			
80A575 901646            MOV     DPTR,#flag
80A578 E0                MOVX    A,@DPTR
80A579 789E              MOV     R0,#LOW str1
80A57B 7C15              MOV     R4,#HIGH str1
80A57D 7D00              MOV     R5,#?C?XDATASEG
80A57F 30E708            JNB     ACC.7,?C0227?MAINFLOW
  926: 				//已记录了一条故障
  927: 				strcpy( str1,"D0211");						
80A582 7B80              MOV     R3,#BYTE2 0800365H
80A584 7A03              MOV     R2,#HIGH 0800365H
80A586 7965              MOV     R1,#LOW 0800365H
80A588 8006              SJMP    ?C1062?MAINFLOW
80A58A         ?C0227?MAINFLOW:
  928: 			else
  929: 				strcpy( str1,"D0201");
80A58A 7B80              MOV     R3,#BYTE2 080036BH
80A58C 7A03              MOV     R2,#HIGH 080036BH
80A58E 796B              MOV     R1,#LOW 080036BH
80A590         
80A590 A512800854        ECALL   ?C?STRCPY
80A595         ?C0228?MAINFLOW:
  930: 			flag |= 0x80;		
80A595 901646            MOV     DPTR,#flag
80A598 E0                MOVX    A,@DPTR
80A599 4480              ORL     A,#080H
80A59B F0                MOVX    @DPTR,A
  931: 			MoneyDevAlarm |= 0x08;
80A59C 90041F            MOV     DPTR,#MoneyDevAlarm
80A59F E0                MOVX    A,@DPTR
80A5A0 4408              ORL     A,#08H
80A5A2 F0                MOVX    @DPTR,A
  932: 		}
80A5A3         ?C0223?MAINFLOW:
  933: 		if( ( flag & 0x80 ) == 0x80 )
80A5A3 901646            MOV     DPTR,#flag
80A5A6 E0                MOVX    A,@DPTR
80A5A7 30E74D            JNB     ACC.7,?C0221?MAINFLOW
  934: 		{
  935: 			memcpy( m_SMSMessage + len, str1, 5 );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 395


80A5AA 901644            MOV     DPTR,#len
80A5AD A3                INC     DPTR
80A5AE E0                MOVX    A,@DPTR
80A5AF 24A4              ADD     A,#LOW m_SMSMessage
80A5B1 F9                MOV     R1,A
80A5B2 E4                CLR     A
80A5B3 3415              ADDC    A,#HIGH m_SMSMessage
80A5B5 A801              MOV     R0,AR1
80A5B7 FC                MOV     R4,A
80A5B8 7D00              MOV     R5,#?C?XDATASEG
80A5BA 7B00              MOV     R3,#?C?XDATASEG
80A5BC 7A15              MOV     R2,#HIGH str1
80A5BE 799E              MOV     R1,#LOW str1
80A5C0 7E00              MOV     R6,#00H
80A5C2 7F05              MOV     R7,#05H
80A5C4 A51280052D        ECALL   ?C?COPY
  936: 			len += 5;
80A5C9 901644            MOV     DPTR,#len
80A5CC E4                CLR     A
80A5CD 75F005            MOV     B,#05H
80A5D0 A512800600        ECALL   ?C?IILDX
  937: 			m_SMSMessage[len++] = '\r';			
80A5D5 901644            MOV     DPTR,#len
80A5D8 E4                CLR     A
80A5D9 75F001            MOV     B,#01H
80A5DC A512800617        ECALL   ?C?ILDIX
80A5E1 FE                MOV     R6,A
80A5E2 74A4              MOV     A,#LOW m_SMSMessage
80A5E4 25F0              ADD     A,B
80A5E6 F582              MOV     DPL,A
80A5E8 7415              MOV     A,#HIGH m_SMSMessage
80A5EA 3E                ADDC    A,R6
80A5EB F583              MOV     DPH,A
80A5ED 740D              MOV     A,#0DH
80A5EF F0                MOVX    @DPTR,A
  938: 			flag |= 0x01;
80A5F0 901646            MOV     DPTR,#flag
80A5F3 E0                MOVX    A,@DPTR
80A5F4 4401              ORL     A,#01H
80A5F6 F0                MOVX    @DPTR,A
  939: 		}
  940: 	}	
80A5F7         ?C0221?MAINFLOW:
  941: 	memset( str1, 0, sizeof( str1 ) );
80A5F7 7E00              MOV     R6,#00H
80A5F9 7F06              MOV     R7,#06H
80A5FB 7D00              MOV     R5,#00H
80A5FD 7B00              MOV     R3,#?C?XDATASEG
80A5FF 7A15              MOV     R2,#HIGH str1
80A601 799E              MOV     R1,#LOW str1
80A603 A5128008A6        ECALL   ?C?MEMSET
  942: 	flag &= 0x7f;
80A608 901646            MOV     DPTR,#flag
80A60B E0                MOVX    A,@DPTR
80A60C 547F              ANL     A,#07FH
80A60E F0                MOVX    @DPTR,A
  943: 	//HOPPER3
  944: 	if( SystemParameter.HopperCoinPrice3 != 0 )
80A60F 900425            MOV     DPTR,#SystemParameter+05H
80A612 E0                MOVX    A,@DPTR
80A613 7002              JNZ     ?C1018?MAINFLOW
80A615 A3                INC     DPTR
80A616 E0                MOVX    A,@DPTR
80A617         ?C1018?MAINFLOW:
80A617 7003              JNZ     $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 396


80A619 02A6E8            LJMP    ?C0230?MAINFLOW
  945: 	{
  946: 		if( DeviceStatus.ChangeUnit3 == 0 )
80A61C 900B1F            MOV     DPTR,#DeviceStatus+04H
80A61F E0                MOVX    A,@DPTR
80A620 FD                MOV     R5,A
80A621 7009              JNZ     ?C0231?MAINFLOW
  947: 			MoneyDevAlarm &= 0xcf;
80A623 90041F            MOV     DPTR,#MoneyDevAlarm
80A626 E0                MOVX    A,@DPTR
80A627 54CF              ANL     A,#0CFH
80A629 F0                MOVX    @DPTR,A
80A62A 8068              SJMP    ?C0232?MAINFLOW
80A62C         ?C0231?MAINFLOW:
  948: 		else if( ( ( DeviceStatus.ChangeUnit3 & 0x01 ) == 0x01 ) && ( ( MoneyDevAlarm & 0x10 ) != 0x10 ) )
80A62C ED                MOV     A,R5
80A62D 30E028            JNB     ACC.0,?C0233?MAINFLOW
80A630 90041F            MOV     DPTR,#MoneyDevAlarm
80A633 E0                MOVX    A,@DPTR
80A634 20E421            JB      ACC.4,?C0233?MAINFLOW
  949: 		{
  950: 			Trace( "\n ScanIsSendAlarm hopper3 error");
  951: 			//还没有发送报警,准备发送
  952: 			strcpy( str1,"D0310");			
80A637 789E              MOV     R0,#LOW str1
80A639 7C15              MOV     R4,#HIGH str1
80A63B 7D00              MOV     R5,#?C?XDATASEG
80A63D 7B80              MOV     R3,#BYTE2 0800371H
80A63F 7A03              MOV     R2,#HIGH 0800371H
80A641 7971              MOV     R1,#LOW 0800371H
80A643 A512800854        ECALL   ?C?STRCPY
  953: 			flag |= 0x80;		
80A648 901646            MOV     DPTR,#flag
80A64B E0                MOVX    A,@DPTR
80A64C 4480              ORL     A,#080H
80A64E F0                MOVX    @DPTR,A
  954: 			MoneyDevAlarm |= 0x10;
80A64F 90041F            MOV     DPTR,#MoneyDevAlarm
80A652 E0                MOVX    A,@DPTR
80A653 4410              ORL     A,#010H
80A655 F0                MOVX    @DPTR,A
  955: 		}
80A656 803C              SJMP    ?C0232?MAINFLOW
80A658         ?C0233?MAINFLOW:
  956: 		else if( ( ( DeviceStatus.ChangeUnit3 & 0x02 ) == 0x02 ) && ( ( MoneyDevAlarm & 0x20 ) != 0x20 ) )
80A658 900B1F            MOV     DPTR,#DeviceStatus+04H
80A65B E0                MOVX    A,@DPTR
80A65C 30E135            JNB     ACC.1,?C0232?MAINFLOW
80A65F 90041F            MOV     DPTR,#MoneyDevAlarm
80A662 E0                MOVX    A,@DPTR
80A663 20E52E            JB      ACC.5,?C0232?MAINFLOW
  957: 		{
  958: 			//还没有发送报警,准备发送
  959: 			if( ( flag & 0x80 ) == 0x80 )			
80A666 901646            MOV     DPTR,#flag
80A669 E0                MOVX    A,@DPTR
80A66A 789E              MOV     R0,#LOW str1
80A66C 7C15              MOV     R4,#HIGH str1
80A66E 7D00              MOV     R5,#?C?XDATASEG
80A670 30E708            JNB     ACC.7,?C0236?MAINFLOW
  960: 				//已记录了一条故障
  961: 				strcpy( str1,"D0311");						
80A673 7B80              MOV     R3,#BYTE2 0800377H
80A675 7A03              MOV     R2,#HIGH 0800377H
80A677 7977              MOV     R1,#LOW 0800377H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 397


80A679 8006              SJMP    ?C1063?MAINFLOW
80A67B         ?C0236?MAINFLOW:
  962: 			else
  963: 				strcpy( str1,"D0301");
80A67B 7B80              MOV     R3,#BYTE2 080037DH
80A67D 7A03              MOV     R2,#HIGH 080037DH
80A67F 797D              MOV     R1,#LOW 080037DH
80A681         
80A681 A512800854        ECALL   ?C?STRCPY
80A686         ?C0237?MAINFLOW:
  964: 			flag |= 0x80;		
80A686 901646            MOV     DPTR,#flag
80A689 E0                MOVX    A,@DPTR
80A68A 4480              ORL     A,#080H
80A68C F0                MOVX    @DPTR,A
  965: 			MoneyDevAlarm |= 0x20;
80A68D 90041F            MOV     DPTR,#MoneyDevAlarm
80A690 E0                MOVX    A,@DPTR
80A691 4420              ORL     A,#020H
80A693 F0                MOVX    @DPTR,A
  966: 		}
80A694         ?C0232?MAINFLOW:
  967: 		if( ( flag & 0x80 ) == 0x80 )
80A694 901646            MOV     DPTR,#flag
80A697 E0                MOVX    A,@DPTR
80A698 30E74D            JNB     ACC.7,?C0230?MAINFLOW
  968: 		{
  969: 			memcpy( m_SMSMessage + len, str1, 5 );
80A69B 901644            MOV     DPTR,#len
80A69E A3                INC     DPTR
80A69F E0                MOVX    A,@DPTR
80A6A0 24A4              ADD     A,#LOW m_SMSMessage
80A6A2 F9                MOV     R1,A
80A6A3 E4                CLR     A
80A6A4 3415              ADDC    A,#HIGH m_SMSMessage
80A6A6 A801              MOV     R0,AR1
80A6A8 FC                MOV     R4,A
80A6A9 7D00              MOV     R5,#?C?XDATASEG
80A6AB 7B00              MOV     R3,#?C?XDATASEG
80A6AD 7A15              MOV     R2,#HIGH str1
80A6AF 799E              MOV     R1,#LOW str1
80A6B1 7E00              MOV     R6,#00H
80A6B3 7F05              MOV     R7,#05H
80A6B5 A51280052D        ECALL   ?C?COPY
  970: 			len += 5;
80A6BA 901644            MOV     DPTR,#len
80A6BD E4                CLR     A
80A6BE 75F005            MOV     B,#05H
80A6C1 A512800600        ECALL   ?C?IILDX
  971: 			m_SMSMessage[len++] = '\r';	
80A6C6 901644            MOV     DPTR,#len
80A6C9 E4                CLR     A
80A6CA 75F001            MOV     B,#01H
80A6CD A512800617        ECALL   ?C?ILDIX
80A6D2 FE                MOV     R6,A
80A6D3 74A4              MOV     A,#LOW m_SMSMessage
80A6D5 25F0              ADD     A,B
80A6D7 F582              MOV     DPL,A
80A6D9 7415              MOV     A,#HIGH m_SMSMessage
80A6DB 3E                ADDC    A,R6
80A6DC F583              MOV     DPH,A
80A6DE 740D              MOV     A,#0DH
80A6E0 F0                MOVX    @DPTR,A
  972: 			flag |= 0x01;
80A6E1 901646            MOV     DPTR,#flag
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 398


80A6E4 E0                MOVX    A,@DPTR
80A6E5 4401              ORL     A,#01H
80A6E7 F0                MOVX    @DPTR,A
  973: 		}
  974: 	}		
80A6E8         ?C0230?MAINFLOW:
  975: 	memset( str1, 0, sizeof( str1 ) );
80A6E8 7E00              MOV     R6,#00H
80A6EA 7F06              MOV     R7,#06H
80A6EC 7D00              MOV     R5,#00H
80A6EE 7B00              MOV     R3,#?C?XDATASEG
80A6F0 7A15              MOV     R2,#HIGH str1
80A6F2 799E              MOV     R1,#LOW str1
80A6F4 A5128008A6        ECALL   ?C?MEMSET
  976: 	flag &= 0x7f;
80A6F9 901646            MOV     DPTR,#flag
80A6FC E0                MOVX    A,@DPTR
80A6FD 547F              ANL     A,#07FH
80A6FF F0                MOVX    @DPTR,A
  977: 	////货道扫描	
  978: /*	if( ( ( HardWareErr & 0x0080 ) == 0x0080 ) && ( ( SystemErrorAlarm & 0x20 ) != 0x20 ) )
  979: 	{
  980: 		Trace( "\n ScanIsSendAlarm colunm not work error");
  981: 		//货道全不能工作
  982: 		memcpy( SMSMessage+len, "C0003", 5 );
  983: 		len  += 5;
  984: 		SMSMessage[len++] = '\r';	
  985: 		flag |= 0x01;
  986: 		if( SystemStatus != 2 )
  987: 			SystemErrorAlarm |= 0x20;//置已发送标志位		
  988: 	}
  989: 	else if( ( HardWareErr & 0x0080 ) == 0x0000 )
  990: 		SystemErrorAlarm &= 0xdf;//复位已发送标志
  991: */	
  992: 	if( ( ( HardWareErr & 0x0010 ) == 0x0010 ) && ( ( SystemErrorAlarm & 0x08 ) != 0x08 ) )
80A700 900485            MOV     DPTR,#HardWareErr+01H
80A703 E0                MOVX    A,@DPTR
80A704 30E45D            JNB     ACC.4,?C0239?MAINFLOW
80A707 900144            MOV     DPTR,#SystemErrorAlarm
80A70A E0                MOVX    A,@DPTR
80A70B 20E356            JB      ACC.3,?C0239?MAINFLOW
  993: 	{
  994: 		Trace( "\n ScanIsSendAlarm colunm out all error");
  995: 		//都无货
  996: 		memcpy( m_SMSMessage+len, "C0001", 5 );
80A70E 901644            MOV     DPTR,#len
80A711 A3                INC     DPTR
80A712 E0                MOVX    A,@DPTR
80A713 24A4              ADD     A,#LOW m_SMSMessage
80A715 F9                MOV     R1,A
80A716 E4                CLR     A
80A717 3415              ADDC    A,#HIGH m_SMSMessage
80A719 A801              MOV     R0,AR1
80A71B FC                MOV     R4,A
80A71C 7D00              MOV     R5,#?C?XDATASEG
80A71E 7B80              MOV     R3,#BYTE2 0800383H
80A720 7A03              MOV     R2,#HIGH 0800383H
80A722 7983              MOV     R1,#LOW 0800383H
80A724 7E00              MOV     R6,#00H
80A726 7F05              MOV     R7,#05H
80A728 A51280052D        ECALL   ?C?COPY
  997: 		len  += 5;
80A72D 901644            MOV     DPTR,#len
80A730 E4                CLR     A
80A731 75F005            MOV     B,#05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 399


80A734 A512800600        ECALL   ?C?IILDX
  998: 		m_SMSMessage[len++] = '\r';	
80A739 901644            MOV     DPTR,#len
80A73C E4                CLR     A
80A73D 75F001            MOV     B,#01H
80A740 A512800617        ECALL   ?C?ILDIX
80A745 FE                MOV     R6,A
80A746 74A4              MOV     A,#LOW m_SMSMessage
80A748 25F0              ADD     A,B
80A74A F582              MOV     DPL,A
80A74C 7415              MOV     A,#HIGH m_SMSMessage
80A74E 3E                ADDC    A,R6
80A74F F583              MOV     DPH,A
80A751 740D              MOV     A,#0DH
80A753 F0                MOVX    @DPTR,A
  999: 		flag |= 0x01;	
80A754 901646            MOV     DPTR,#flag
80A757 E0                MOVX    A,@DPTR
80A758 4401              ORL     A,#01H
80A75A F0                MOVX    @DPTR,A
 1000: 		SystemErrorAlarm |= 0x08;		
80A75B 900144            MOV     DPTR,#SystemErrorAlarm
80A75E E0                MOVX    A,@DPTR
80A75F 4408              ORL     A,#08H
80A761 F0                MOVX    @DPTR,A
 1001: 	}
80A762 800E              SJMP    ?C0240?MAINFLOW
80A764         ?C0239?MAINFLOW:
 1002: 	else if( ( HardWareErr & 0x0010 ) == 0x0000 )
80A764 900485            MOV     DPTR,#HardWareErr+01H
80A767 E0                MOVX    A,@DPTR
80A768 20E407            JB      ACC.4,?C0240?MAINFLOW
 1003: 		SystemErrorAlarm &= 0xf7;//复位已发送标志	
80A76B 900144            MOV     DPTR,#SystemErrorAlarm
80A76E E0                MOVX    A,@DPTR
80A76F 54F7              ANL     A,#0F7H
80A771 F0                MOVX    @DPTR,A
80A772         ?C0240?MAINFLOW:
 1004: 	if( ( ( HardWareErr & 0x0020 ) == 0x0020 ) && ( ( SystemErrorAlarm & 0x10 ) != 0x10 ) )
80A772 900485            MOV     DPTR,#HardWareErr+01H
80A775 E0                MOVX    A,@DPTR
80A776 30E55D            JNB     ACC.5,?C0242?MAINFLOW
80A779 900144            MOV     DPTR,#SystemErrorAlarm
80A77C E0                MOVX    A,@DPTR
80A77D 20E456            JB      ACC.4,?C0242?MAINFLOW
 1005: 	{
 1006: 		Trace( "\n ScanIsSendAlarm colunm all error");
 1007: 		//都故障
 1008: 		memcpy( m_SMSMessage+len, "C0010", 5 );
80A780 901644            MOV     DPTR,#len
80A783 A3                INC     DPTR
80A784 E0                MOVX    A,@DPTR
80A785 24A4              ADD     A,#LOW m_SMSMessage
80A787 F9                MOV     R1,A
80A788 E4                CLR     A
80A789 3415              ADDC    A,#HIGH m_SMSMessage
80A78B A801              MOV     R0,AR1
80A78D FC                MOV     R4,A
80A78E 7D00              MOV     R5,#?C?XDATASEG
80A790 7B80              MOV     R3,#BYTE2 0800389H
80A792 7A03              MOV     R2,#HIGH 0800389H
80A794 7989              MOV     R1,#LOW 0800389H
80A796 7E00              MOV     R6,#00H
80A798 7F05              MOV     R7,#05H
80A79A A51280052D        ECALL   ?C?COPY
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 400


 1009: 		len  += 5;
80A79F 901644            MOV     DPTR,#len
80A7A2 E4                CLR     A
80A7A3 75F005            MOV     B,#05H
80A7A6 A512800600        ECALL   ?C?IILDX
 1010: 		m_SMSMessage[len++] = '\r';	
80A7AB 901644            MOV     DPTR,#len
80A7AE E4                CLR     A
80A7AF 75F001            MOV     B,#01H
80A7B2 A512800617        ECALL   ?C?ILDIX
80A7B7 FE                MOV     R6,A
80A7B8 74A4              MOV     A,#LOW m_SMSMessage
80A7BA 25F0              ADD     A,B
80A7BC F582              MOV     DPL,A
80A7BE 7415              MOV     A,#HIGH m_SMSMessage
80A7C0 3E                ADDC    A,R6
80A7C1 F583              MOV     DPH,A
80A7C3 740D              MOV     A,#0DH
80A7C5 F0                MOVX    @DPTR,A
 1011: 		flag |= 0x01;
80A7C6 901646            MOV     DPTR,#flag
80A7C9 E0                MOVX    A,@DPTR
80A7CA 4401              ORL     A,#01H
80A7CC F0                MOVX    @DPTR,A
 1012: 		SystemErrorAlarm |= 0x10;		
80A7CD 900144            MOV     DPTR,#SystemErrorAlarm
80A7D0 E0                MOVX    A,@DPTR
80A7D1 4410              ORL     A,#010H
80A7D3 F0                MOVX    @DPTR,A
 1013: 	}
80A7D4 800E              SJMP    ?C0243?MAINFLOW
80A7D6         ?C0242?MAINFLOW:
 1014: 	else if ( ( HardWareErr & 0x0020 ) == 0x0020 )
80A7D6 900485            MOV     DPTR,#HardWareErr+01H
80A7D9 E0                MOVX    A,@DPTR
80A7DA 30E507            JNB     ACC.5,?C0243?MAINFLOW
 1015: 		SystemErrorAlarm &= 0xef;//复位已发送标志
80A7DD 900144            MOV     DPTR,#SystemErrorAlarm
80A7E0 E0                MOVX    A,@DPTR
80A7E1 54EF              ANL     A,#0EFH
80A7E3 F0                MOVX    @DPTR,A
80A7E4         ?C0243?MAINFLOW:
 1016: 	for( i = 0; i < GOODSWAYNUM; i ++ )
80A7E4 E4                CLR     A
80A7E5 901647            MOV     DPTR,#i
80A7E8 F0                MOVX    @DPTR,A
80A7E9         ?C0245?MAINFLOW:
80A7E9 901647            MOV     DPTR,#i
80A7EC E0                MOVX    A,@DPTR
80A7ED FF                MOV     R7,A
80A7EE C3                CLR     C
80A7EF 9440              SUBB    A,#040H
80A7F1 4003              JC      $ + 5H
80A7F3 02A9A9            LJMP    ?C0246?MAINFLOW
 1017: 	{
 1018: 		if( GoodsWaySetVal[i].WayNo == 0 )
80A7F6 75F005            MOV     B,#05H
80A7F9 EF                MOV     A,R7
80A7FA 900004            MOV     DPTR,#GoodsWaySetVal
80A7FD A51280079F        ECALL   ?C?OFFXADD
80A802 E0                MOVX    A,@DPTR
80A803 7003              JNZ     $ + 5H
80A805 02A9A0            LJMP    ?C0247?MAINFLOW
 1019: 			continue;
80A808         ?C0248?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 401


 1020: 		if( ( GoodsWaySetVal[i].WayState & 0x01 ) != 0x01 )
80A808 901647            MOV     DPTR,#i
80A80B E0                MOVX    A,@DPTR
80A80C 75F005            MOV     B,#05H
80A80F 900005            MOV     DPTR,#GoodsWaySetVal+01H
80A812 A51280079F        ECALL   ?C?OFFXADD
80A817 E0                MOVX    A,@DPTR
80A818 FF                MOV     R7,A
80A819 20E003            JB      ACC.0,$ + 6H
80A81C 02A9A0            LJMP    ?C0247?MAINFLOW
 1021: 	    	continue;
80A81F         ?C0249?MAINFLOW:
 1022: //		Trace( "\n GoodsWaySetVal[%bu].WayState = %bu", i, GoodsWaySetVal[i].WayState );
 1023: 		 //货道正常了
 1024: 		if( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 )
80A81F EF                MOV     A,R7
80A820 540A              ANL     A,#0AH
80A822 7013              JNZ     ?C0250?MAINFLOW
 1025: 		 	 GoodsWaySetVal[i].WayState &= 0xbf;//重置bit6
80A824 901647            MOV     DPTR,#i
80A827 E0                MOVX    A,@DPTR
80A828 75F005            MOV     B,#05H
80A82B 900005            MOV     DPTR,#GoodsWaySetVal+01H
80A82E A51280079F        ECALL   ?C?OFFXADD
80A833 E0                MOVX    A,@DPTR
80A834 54BF              ANL     A,#0BFH
80A836 F0                MOVX    @DPTR,A
80A837         ?C0250?MAINFLOW:
 1026: 		//货道有货了
 1027: 		if( GoodsWaySetVal[i].GoodsCurrentSum != 0 )
80A837 901647            MOV     DPTR,#i
80A83A E0                MOVX    A,@DPTR
80A83B FF                MOV     R7,A
80A83C 75F005            MOV     B,#05H
80A83F 900008            MOV     DPTR,#GoodsWaySetVal+04H
80A842 A51280079F        ECALL   ?C?OFFXADD
80A847 E0                MOVX    A,@DPTR
80A848 6010              JZ      ?C0251?MAINFLOW
 1028: 		 	GoodsWaySetVal[i].WayState &= 0xdf;	//重置bit5
80A84A 75F005            MOV     B,#05H
80A84D EF                MOV     A,R7
80A84E 900005            MOV     DPTR,#GoodsWaySetVal+01H
80A851 A51280079F        ECALL   ?C?OFFXADD
80A856 E0                MOVX    A,@DPTR
80A857 54DF              ANL     A,#0DFH
80A859 F0                MOVX    @DPTR,A
80A85A         ?C0251?MAINFLOW:
 1029: 		 	flag &= 0x01;
80A85A 901646            MOV     DPTR,#flag
80A85D E0                MOVX    A,@DPTR
80A85E 5401              ANL     A,#01H
80A860 F0                MOVX    @DPTR,A
 1030: 		if( ( ( GoodsWaySetVal[i].WayState & 0x02 ) == 0x02 ) && ( ( GoodsWaySetVal[i].WayState & 0x40 ) != 0x40 ) )			
>> 
80A861 A3                INC     DPTR
80A862 E0                MOVX    A,@DPTR
80A863 75F005            MOV     B,#05H
80A866 900005            MOV     DPTR,#GoodsWaySetVal+01H
80A869 A51280079F        ECALL   ?C?OFFXADD
80A86E E0                MOVX    A,@DPTR
80A86F 30E10A            JNB     ACC.1,?C0252?MAINFLOW
80A872 20E607            JB      ACC.6,?C0252?MAINFLOW
 1031: 			//货道故障				
 1032: 			flag |= 0x20;//bit5			
80A875 901646            MOV     DPTR,#flag
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 402


80A878 E0                MOVX    A,@DPTR
80A879 4420              ORL     A,#020H
80A87B F0                MOVX    @DPTR,A
80A87C         ?C0252?MAINFLOW:
 1033: 		if( ( GoodsWaySetVal[i].GoodsCurrentSum == 0 ) && ( ( GoodsWaySetVal[i].WayState & 0x20 ) != 0x20 ) )
80A87C 901647            MOV     DPTR,#i
80A87F E0                MOVX    A,@DPTR
80A880 FF                MOV     R7,A
80A881 75F005            MOV     B,#05H
80A884 900008            MOV     DPTR,#GoodsWaySetVal+04H
80A887 A51280079F        ECALL   ?C?OFFXADD
80A88C E0                MOVX    A,@DPTR
80A88D 7017              JNZ     ?C0253?MAINFLOW
80A88F 75F005            MOV     B,#05H
80A892 EF                MOV     A,R7
80A893 900005            MOV     DPTR,#GoodsWaySetVal+01H
80A896 A51280079F        ECALL   ?C?OFFXADD
80A89B E0                MOVX    A,@DPTR
80A89C 20E507            JB      ACC.5,?C0253?MAINFLOW
 1034: 			flag |= 0x10;//bit4			
80A89F 901646            MOV     DPTR,#flag
80A8A2 E0                MOVX    A,@DPTR
80A8A3 4410              ORL     A,#010H
80A8A5 F0                MOVX    @DPTR,A
80A8A6         ?C0253?MAINFLOW:
 1035: 		if( ( flag & 0x30 ) != 0 )
80A8A6 901646            MOV     DPTR,#flag
80A8A9 E0                MOVX    A,@DPTR
80A8AA 5430              ANL     A,#030H
80A8AC 7003              JNZ     $ + 5H
80A8AE 02A9A0            LJMP    ?C0247?MAINFLOW
 1036: 		{
 1037: //			Trace( "\n GoodsWaySetVal[%bu].WayNo = %bu error", i, GoodsWaySetVal[i].WayNo );
 1038: 			memset( str1, 0, sizeof( str1 ) );
80A8B1 7E00              MOV     R6,#00H
80A8B3 7F06              MOV     R7,#06H
80A8B5 7D00              MOV     R5,#00H
80A8B7 7B00              MOV     R3,#?C?XDATASEG
80A8B9 7A15              MOV     R2,#HIGH str1
80A8BB 799E              MOV     R1,#LOW str1
80A8BD A5128008A6        ECALL   ?C?MEMSET
 1039: 			sprintf( str1, "C%02bu00", GoodsWaySetVal[i].WayNo );			
80A8C2 7B80              MOV     R3,#BYTE2 080038FH
80A8C4 7A03              MOV     R2,#HIGH 080038FH
80A8C6 798F              MOV     R1,#LOW 080038FH
80A8C8 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80A8CB A5128007B6        ECALL   ?C?PSTXDATA
80A8D0 901647            MOV     DPTR,#i
80A8D3 E0                MOVX    A,@DPTR
80A8D4 75F005            MOV     B,#05H
80A8D7 900004            MOV     DPTR,#GoodsWaySetVal
80A8DA A51280079F        ECALL   ?C?OFFXADD
80A8DF E0                MOVX    A,@DPTR
80A8E0 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80A8E3 F0                MOVX    @DPTR,A
80A8E4 7B00              MOV     R3,#?C?XDATASEG
80A8E6 7A15              MOV     R2,#HIGH str1
80A8E8 799E              MOV     R1,#LOW str1
80A8EA A512800949        ECALL   _sprintf
 1040: 			if( ( flag & 0x20 ) == 0x20 )
80A8EF 901646            MOV     DPTR,#flag
80A8F2 E0                MOVX    A,@DPTR
80A8F3 FF                MOV     R7,A
80A8F4 30E519            JNB     ACC.5,?C0255?MAINFLOW
 1041: 			{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 403


 1042: 				//故障
 1043: 				str1[3] = '1';			
80A8F7 9015A1            MOV     DPTR,#str1+03H
80A8FA 7431              MOV     A,#031H
80A8FC F0                MOVX    @DPTR,A
 1044: 				GoodsWaySetVal[i].WayState |= 0x40; 
80A8FD 901647            MOV     DPTR,#i
80A900 E0                MOVX    A,@DPTR
80A901 75F005            MOV     B,#05H
80A904 900005            MOV     DPTR,#GoodsWaySetVal+01H
80A907 A51280079F        ECALL   ?C?OFFXADD
80A90C E0                MOVX    A,@DPTR
80A90D 4440              ORL     A,#040H
80A90F F0                MOVX    @DPTR,A
 1045: 			}				
80A910         ?C0255?MAINFLOW:
 1046: 			if( ( flag & 0x10 ) == 0x10 ) 
80A910 EF                MOV     A,R7
80A911 30E419            JNB     ACC.4,?C0256?MAINFLOW
 1047: 			{
 1048: 				//缺货
 1049: 				str1[4] = '1';		
80A914 9015A2            MOV     DPTR,#str1+04H
80A917 7431              MOV     A,#031H
80A919 F0                MOVX    @DPTR,A
 1050: 				GoodsWaySetVal[i].WayState |= 0x20;
80A91A 901647            MOV     DPTR,#i
80A91D E0                MOVX    A,@DPTR
80A91E 75F005            MOV     B,#05H
80A921 900005            MOV     DPTR,#GoodsWaySetVal+01H
80A924 A51280079F        ECALL   ?C?OFFXADD
80A929 E0                MOVX    A,@DPTR
80A92A 4420              ORL     A,#020H
80A92C F0                MOVX    @DPTR,A
 1051: 			}		
80A92D         ?C0256?MAINFLOW:
 1052: //			Trace( "\n str1 = %s", str1 );
 1053: 			memcpy( m_SMSMessage + len, str1, 5 );
80A92D 901644            MOV     DPTR,#len
80A930 A3                INC     DPTR
80A931 E0                MOVX    A,@DPTR
80A932 24A4              ADD     A,#LOW m_SMSMessage
80A934 F9                MOV     R1,A
80A935 E4                CLR     A
80A936 3415              ADDC    A,#HIGH m_SMSMessage
80A938 A801              MOV     R0,AR1
80A93A FC                MOV     R4,A
80A93B 7D00              MOV     R5,#?C?XDATASEG
80A93D 7B00              MOV     R3,#?C?XDATASEG
80A93F 7A15              MOV     R2,#HIGH str1
80A941 799E              MOV     R1,#LOW str1
80A943 7E00              MOV     R6,#00H
80A945 7F05              MOV     R7,#05H
80A947 A51280052D        ECALL   ?C?COPY
 1054: 			len += 5;
80A94C 901644            MOV     DPTR,#len
80A94F E4                CLR     A
80A950 75F005            MOV     B,#05H
80A953 A512800600        ECALL   ?C?IILDX
 1055: 			m_SMSMessage[len++] = '\r';
80A958 901644            MOV     DPTR,#len
80A95B E4                CLR     A
80A95C 75F001            MOV     B,#01H
80A95F A512800617        ECALL   ?C?ILDIX
80A964 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 404


80A965 74A4              MOV     A,#LOW m_SMSMessage
80A967 25F0              ADD     A,B
80A969 F582              MOV     DPL,A
80A96B 7415              MOV     A,#HIGH m_SMSMessage
80A96D 3E                ADDC    A,R6
80A96E F583              MOV     DPH,A
80A970 740D              MOV     A,#0DH
80A972 F0                MOVX    @DPTR,A
 1056: 			flag |= 0x01;
80A973 901646            MOV     DPTR,#flag
80A976 E0                MOVX    A,@DPTR
80A977 4401              ORL     A,#01H
80A979 F0                MOVX    @DPTR,A
 1057: 			if( ( len + 5 ) >= MAX_SMS_LEN )
80A97A 901645            MOV     DPTR,#len+01H
80A97D E0                MOVX    A,@DPTR
80A97E 2405              ADD     A,#05H
80A980 FF                MOV     R7,A
80A981 901644            MOV     DPTR,#len
80A984 E0                MOVX    A,@DPTR
80A985 3400              ADDC    A,#00H
80A987 FE                MOV     R6,A
80A988 C3                CLR     C
80A989 EF                MOV     A,R7
80A98A 94A0              SUBB    A,#0A0H
80A98C EE                MOV     A,R6
80A98D 9400              SUBB    A,#00H
80A98F 400F              JC      ?C0247?MAINFLOW
 1058: 			{
 1059: 				SMSQuery |= 0x40;
80A991 900145            MOV     DPTR,#SMSQuery
80A994 E0                MOVX    A,@DPTR
80A995 4440              ORL     A,#040H
80A997 F0                MOVX    @DPTR,A
 1060: 				IsMorePage = 1;
80A998 901649            MOV     DPTR,#IsMorePage
80A99B 7401              MOV     A,#01H
80A99D F0                MOVX    @DPTR,A
 1061: 				break;
80A99E 8009              SJMP    ?C0246?MAINFLOW
 1062: 			}
 1063: 		}				
 1064: 	}		
80A9A0         ?C0247?MAINFLOW:
80A9A0 901647            MOV     DPTR,#i
80A9A3 E0                MOVX    A,@DPTR
80A9A4 04                INC     A
80A9A5 F0                MOVX    @DPTR,A
80A9A6 02A7E9            LJMP    ?C0245?MAINFLOW
80A9A9         ?C0246?MAINFLOW:
 1065: 	if( ( flag & 0x01 ) == 0x01 )
80A9A9 901646            MOV     DPTR,#flag
80A9AC E0                MOVX    A,@DPTR
80A9AD 30E00F            JNB     ACC.0,?C0258?MAINFLOW
 1066: 	{
 1067: 		//有报警信息要发送		
 1068: 		m_SMSMessage[len--] = 0;		   
80A9B0 A51280A9D2        ECALL   ?L?COM0017
 1069: 		SendSMS( m_SMSMessage, len );
 1070: 		
 1071: /*		if( ( 255 - AlarmSpacing ) > 60 )
 1072: 		{
 1073: 			SMSMessage[ Index ].Flag = 0;
 1074: 			SMSMessage[ Index ].SendTime = AlarmSpacing + 60;	//发送时间		
 1075: 		}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 405


 1076: 		else
 1077: 		{
 1078: 			SMSMessage[ Index ].SendTime = 60- ( 255 - AlarmSpacing );
 1079: 			SMSMessage[ Index ].Flag = 1;	
 1080: 		}
 1081: 		SMSMessage[ Index ].SMSLen = len;		//短信长度
 1082: 		memcpy( SMSMessage[ Index ].SMSMessage, m_SMSMessage, len );
 1083: */  
 1084:    		if( ( SMSQuery & 0x04 ) == 0 )
80A9B5 900145            MOV     DPTR,#SMSQuery
80A9B8 E0                MOVX    A,@DPTR
80A9B9 20E203            JB      ACC.2,?C0258?MAINFLOW
 1085: 			SMSQuery |= 0x04;
80A9BC 4404              ORL     A,#04H
80A9BE F0                MOVX    @DPTR,A
 1086: 	}
80A9BF         ?C0258?MAINFLOW:
 1087: 	if( IsMorePage != 1 )
80A9BF 901649            MOV     DPTR,#IsMorePage
80A9C2 E0                MOVX    A,@DPTR
80A9C3 6401              XRL     A,#01H
80A9C5 6007              JZ      ?C0260?MAINFLOW
 1088: 		SMSQuery = ( SMSQuery & 0xBF );
80A9C7 900145            MOV     DPTR,#SMSQuery
80A9CA E0                MOVX    A,@DPTR
80A9CB 54BF              ANL     A,#0BFH
80A9CD F0                MOVX    @DPTR,A
80A9CE         ?C0260?MAINFLOW:
 1089: 	return 0;
80A9CE 7F00              MOV     R7,#00H
 1090: }
80A9D0         ?C0186?MAINFLOW:
80A9D0 A522              ERET    
----- FUNCTION ScanIsSendAlarm (END) -------


----- FUNCTION ?L?COM0017 (BEGIN) -----
80A9D2 901644            MOV     DPTR,#len
80A9D5 74FF              MOV     A,#0FFH
80A9D7 F5F0              MOV     B,A
80A9D9 A512800617        ECALL   ?C?ILDIX
80A9DE FE                MOV     R6,A
80A9DF 74A4              MOV     A,#LOW m_SMSMessage
80A9E1 25F0              ADD     A,B
80A9E3 F582              MOV     DPL,A
80A9E5 7415              MOV     A,#HIGH m_SMSMessage
80A9E7 3E                ADDC    A,R6
80A9E8 F583              MOV     DPH,A
80A9EA E4                CLR     A
80A9EB F0                MOVX    @DPTR,A
80A9EC 7B00              MOV     R3,#?C?XDATASEG
80A9EE 7A15              MOV     R2,#HIGH m_SMSMessage
80A9F0 79A4              MOV     R1,#LOW m_SMSMessage
80A9F2 901644            MOV     DPTR,#len
80A9F5 A3                INC     DPTR
80A9F6 E0                MOVX    A,@DPTR
80A9F7 FD                MOV     R5,A
----- FUNCTION _SendSMS (BEGIN) -----
 FILE: 'communication.c'
   27: 	void SendSMS( unsigned char* pSMS, unsigned char byLen )
   28: 	{
80A9F8 90164A            MOV     DPTR,#pSMS
80A9FB A5128007B6        ECALL   ?C?PSTXDATA
80AA00 90164D            MOV     DPTR,#byLen
80AA03 ED                MOV     A,R5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 406


80AA04 F0                MOVX    @DPTR,A
   29: 		while( byLen > MAX_SMS_LEN )
80AA05         ?C0006?COMMUNICATION:
   30: 		{
80AA05 90164D            MOV     DPTR,#byLen
80AA08 E0                MOVX    A,@DPTR
80AA09 D3                SETB    C
80AA0A 94A0              SUBB    A,#0A0H
80AA0C 4024              JC      ?C0007?COMMUNICATION
   31: 			commAdd2SMSSendBuffer( pSMS, MAX_SMS_LEN );
   32: 			pSMS += MAX_SMS_LEN;
80AA0E 90164A            MOV     DPTR,#pSMS
80AA11 A5128007AC        ECALL   ?C?PLDXDATA
80AA16 7DA0              MOV     R5,#0A0H
80AA18 A51280AA48        ECALL   _commAdd2SMSSendBuffer
   33: 			byLen -= MAX_SMS_LEN;
80AA1D 90164B            MOV     DPTR,#pSMS+01H
80AA20 E4                CLR     A
80AA21 75F0A0            MOV     B,#0A0H
80AA24 A512800600        ECALL   ?C?IILDX
   34: 		}
80AA29 90164D            MOV     DPTR,#byLen
80AA2C E0                MOVX    A,@DPTR
80AA2D 2460              ADD     A,#060H
80AA2F F0                MOVX    @DPTR,A
   35: 		if( byLen )
80AA30 80D3              SJMP    ?C0006?COMMUNICATION
80AA32         ?C0007?COMMUNICATION:
   36: 		{
80AA32 90164D            MOV     DPTR,#byLen
80AA35 E0                MOVX    A,@DPTR
80AA36 FD                MOV     R5,A
80AA37 600D              JZ      ?C0009?COMMUNICATION
   37: 			commAdd2SMSSendBuffer( pSMS, byLen );
   38: 		}
80AA39 90164A            MOV     DPTR,#pSMS
80AA3C A5128007AC        ECALL   ?C?PLDXDATA
80AA41 A51280AA48        ECALL   _commAdd2SMSSendBuffer
   39: 	}
   40: #endif
80AA46         ?C0009?COMMUNICATION:
80AA46 A522              ERET    
----- FUNCTION _SendSMS (END) -------


----- FUNCTION _commAdd2SMSSendBuffer (BEGIN) -----
 FILE: 'CommModule.c'
  265: 	void commAdd2SMSSendBuffer( unsigned char* pSMS, unsigned char byLen )
  266: 	{
80AA48 90164E            MOV     DPTR,#byLen
80AA4B ED                MOV     A,R5
80AA4C F0                MOVX    @DPTR,A
;---- Variable 'pSMS' assigned to Register 'R1/R2/R3' ----
  267: 		unsigned char data byEndIndex = g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex
  268: 			+ g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;
80AA4D 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
80AA50 E0                MOVX    A,@DPTR
80AA51 FF                MOV     R7,A
80AA52 902361            MOV     DPTR,#g_SMSCommModuleInfo+064AH
80AA55 E0                MOVX    A,@DPTR
80AA56 2F                ADD     A,R7
80AA57 F528              MOV     byEndIndex,A
  269: 		if( byEndIndex >= MAX_BUFFERED_SMS_COUNT )
80AA59 C3                CLR     C
80AA5A 940A              SUBB    A,#0AH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 407


80AA5C 4006              JC      ?C0048?COMMMODULE
  270: 		{
  271: 			byEndIndex -= MAX_BUFFERED_SMS_COUNT;
80AA5E 74F6              MOV     A,#0F6H
80AA60 2528              ADD     A,byEndIndex
80AA62 F528              MOV     byEndIndex,A
  272: 		}
80AA64         ?C0048?COMMMODULE:
  273: 		
  274: 		if( byLen > MAX_SMS_LEN )
80AA64 90164E            MOV     DPTR,#byLen
80AA67 E0                MOVX    A,@DPTR
80AA68 D3                SETB    C
80AA69 94A0              SUBB    A,#0A0H
80AA6B 4003              JC      ?C0049?COMMMODULE
  275: 		{
  276: 			byLen = MAX_SMS_LEN;				
80AA6D 74A0              MOV     A,#0A0H
80AA6F F0                MOVX    @DPTR,A
  277: 		}
80AA70         ?C0049?COMMMODULE:
  278: 		Trace("\n commAdd2SMSSendBuffer");
  279: 		memcpy( g_SMSCommModuleInfo.m_SMSBuffer.m_bySMSs[ byEndIndex ]
80AA70 90164E            MOV     DPTR,#byLen
80AA73 E0                MOVX    A,@DPTR
80AA74 F582              MOV     DPL,A
80AA76 758300            MOV     DPH,#00H
80AA79 C083              PUSH    DPH
80AA7B C082              PUSH    DPL
80AA7D C001              PUSH    AR1
80AA7F E528              MOV     A,byEndIndex
80AA81 75F0A0            MOV     B,#0A0H
80AA84 A4                MUL     AB
80AA85 2417              ADD     A,#LOW g_SMSCommModuleInfo
80AA87 F9                MOV     R1,A
80AA88 741D              MOV     A,#HIGH g_SMSCommModuleInfo
80AA8A 35F0              ADDC    A,B
80AA8C A801              MOV     R0,AR1
80AA8E FC                MOV     R4,A
80AA8F 7D00              MOV     R5,#?C?XDATASEG
80AA91 D001              POP     AR1
80AA93 D007              POP     AR7
80AA95 D006              POP     AR6
80AA97 A51280052D        ECALL   ?C?COPY
  280: 			, pSMS, byLen );
  281: 		g_SMSCommModuleInfo.m_SMSBuffer.m_byLens[ byEndIndex ] = byLen;		
80AA9C 90164E            MOV     DPTR,#byLen
80AA9F E0                MOVX    A,@DPTR
80AAA0 FF                MOV     R7,A
80AAA1 7457              MOV     A,#LOW g_SMSCommModuleInfo+0640H
80AAA3 2528              ADD     A,byEndIndex
80AAA5 F582              MOV     DPL,A
80AAA7 E4                CLR     A
80AAA8 3423              ADDC    A,#HIGH g_SMSCommModuleInfo+0640H
80AAAA F583              MOV     DPH,A
80AAAC EF                MOV     A,R7
80AAAD F0                MOVX    @DPTR,A
  282: 		
  283: 		if( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount == MAX_BUFFERED_SMS_COUNT )	//drop first one
80AAAE 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
80AAB1 E0                MOVX    A,@DPTR
80AAB2 B40A0D            CJNE    A,#0AH,?C0050?COMMMODULE
  284: 		{
  285: 			if( ++g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex == MAX_BUFFERED_SMS_COUNT )
80AAB5 902361            MOV     DPTR,#g_SMSCommModuleInfo+064AH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 408


80AAB8 E0                MOVX    A,@DPTR
80AAB9 04                INC     A
80AABA F0                MOVX    @DPTR,A
80AABB B40A0A            CJNE    A,#0AH,?C0053?COMMMODULE
  286: 			{
  287: 				g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex = 0;
80AABE E4                CLR     A
80AABF F0                MOVX    @DPTR,A
  288: 			}
  289: 		}
80AAC0 8006              SJMP    ?C0053?COMMMODULE
80AAC2         ?C0050?COMMMODULE:
  290: 		else
  291: 		{
  292: 			++g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;
80AAC2 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
80AAC5 E0                MOVX    A,@DPTR
80AAC6 04                INC     A
80AAC7 F0                MOVX    @DPTR,A
  293: 		}
  294: 	}
80AAC8         ?C0053?COMMMODULE:
80AAC8 A522              ERET    
----- FUNCTION _commAdd2SMSSendBuffer (END) -------


----- FUNCTION TradePack (BEGIN) -----
 FILE: 'mainflow.c'
 1374: u_char	TradePack()
 1375: {
 1376: 	u_char xdata m_SMSMessage[MAX_SMS_LEN];
 1377: 	u_int  xdata len = 0;	
80AACA E4                CLR     A
80AACB 90163E            MOV     DPTR,#len
80AACE F0                MOVX    @DPTR,A
80AACF A3                INC     DPTR
80AAD0 F0                MOVX    @DPTR,A
 1378: 	u_char xdata i = 0;	
80AAD1 A3                INC     DPTR
80AAD2 F0                MOVX    @DPTR,A
 1379: 	
 1380: 	if( SystemParameter.MobileON != 1 )
80AAD3 900446            MOV     DPTR,#SystemParameter+026H
80AAD6 E0                MOVX    A,@DPTR
80AAD7 6401              XRL     A,#01H
80AAD9 6005              JZ      ?C0315?MAINFLOW
 1381: 		return 1;
80AADB 7F01              MOV     R7,#01H
80AADD 02AF79            LJMP    ?C0316?MAINFLOW
80AAE0         ?C0315?MAINFLOW:
 1382: 	//是否可以向短信发送队列中添加短信
 1383: 	if( !SMSCommStatus() )
80AAE0 A51280AF7B        ECALL   SMSCommStatus
80AAE5 4005              JC      ?C0317?MAINFLOW
 1384: 		//已不能向短信发送队列中添加短信了
 1385: 		return 1;
80AAE7 7F01              MOV     R7,#01H
80AAE9 02AF79            LJMP    ?C0316?MAINFLOW
80AAEC         ?C0317?MAINFLOW:
 1386: 
 1387: 	memset( m_SMSMessage, 0, sizeof( m_SMSMessage ) );	
80AAEC 7E00              MOV     R6,#00H
80AAEE 7FA0              MOV     R7,#0A0H
80AAF0 7D00              MOV     R5,#00H
80AAF2 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 409


80AAF4 7A15              MOV     R2,#HIGH m_SMSMessage
80AAF6 799E              MOV     R1,#LOW m_SMSMessage
80AAF8 A5128008A6        ECALL   ?C?MEMSET
 1388: 	//添加短信头部
 1389: 	memcpy( m_SMSMessage, "VMSUM", 5 );
80AAFD 789E              MOV     R0,#LOW m_SMSMessage
80AAFF 7C15              MOV     R4,#HIGH m_SMSMessage
80AB01 7D00              MOV     R5,#?C?XDATASEG
80AB03 7B80              MOV     R3,#BYTE2 080039EH
80AB05 7A03              MOV     R2,#HIGH 080039EH
80AB07 799E              MOV     R1,#LOW 080039EH
80AB09 7E00              MOV     R6,#00H
80AB0B 7F05              MOV     R7,#05H
80AB0D A51280052D        ECALL   ?C?COPY
 1390: 	len += 5;
80AB12 90163E            MOV     DPTR,#len
80AB15 E4                CLR     A
80AB16 75F005            MOV     B,#05H
80AB19 A512800600        ECALL   ?C?IILDX
 1391: 	for( i = 0; i < 5; i ++ )
80AB1E E4                CLR     A
80AB1F 901640            MOV     DPTR,#i
80AB22 F0                MOVX    @DPTR,A
80AB23         ?C0318?MAINFLOW:
 1392: 		sprintf( m_SMSMessage + len + i, "%bu", SystemParameter.VmID[i] );
80AB23 90163E            MOV     DPTR,#len
80AB26 E0                MOVX    A,@DPTR
80AB27 FE                MOV     R6,A
80AB28 A3                INC     DPTR
80AB29 E0                MOVX    A,@DPTR
80AB2A 249E              ADD     A,#LOW m_SMSMessage
80AB2C F9                MOV     R1,A
80AB2D 7415              MOV     A,#HIGH m_SMSMessage
80AB2F 3E                ADDC    A,R6
80AB30 FA                MOV     R2,A
80AB31 7B00              MOV     R3,#?C?XDATASEG
80AB33 A3                INC     DPTR
80AB34 E0                MOVX    A,@DPTR
80AB35 FF                MOV     R7,A
80AB36 29                ADD     A,R1
80AB37 F9                MOV     R1,A
80AB38 E4                CLR     A
80AB39 3A                ADDC    A,R2
80AB3A FA                MOV     R2,A
80AB3B C003              PUSH    AR3
80AB3D C002              PUSH    AR2
80AB3F C001              PUSH    AR1
80AB41 7B80              MOV     R3,#BYTE2 0800325H
80AB43 7A03              MOV     R2,#HIGH 0800325H
80AB45 7925              MOV     R1,#LOW 0800325H
80AB47 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80AB4A A5128007B6        ECALL   ?C?PSTXDATA
80AB4F 7431              MOV     A,#LOW SystemParameter+011H
80AB51 2F                ADD     A,R7
80AB52 F582              MOV     DPL,A
80AB54 E4                CLR     A
80AB55 3404              ADDC    A,#HIGH SystemParameter+011H
80AB57 F583              MOV     DPH,A
80AB59 E0                MOVX    A,@DPTR
80AB5A 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80AB5D F0                MOVX    @DPTR,A
80AB5E D001              POP     AR1
80AB60 D002              POP     AR2
80AB62 D003              POP     AR3
80AB64 A512800949        ECALL   _sprintf
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 410


80AB69 901640            MOV     DPTR,#i
80AB6C E0                MOVX    A,@DPTR
80AB6D 04                INC     A
80AB6E F0                MOVX    @DPTR,A
80AB6F E0                MOVX    A,@DPTR
80AB70 C3                CLR     C
80AB71 9405              SUBB    A,#05H
80AB73 40AE              JC      ?C0318?MAINFLOW
80AB75         ?C0319?MAINFLOW:
 1393: 	len += 5;	
80AB75 90163E            MOV     DPTR,#len
80AB78 E4                CLR     A
80AB79 75F005            MOV     B,#05H
80AB7C A512800600        ECALL   ?C?IILDX
 1394: 	m_SMSMessage[len++] = '\r';
80AB81 90163E            MOV     DPTR,#len
80AB84 E4                CLR     A
80AB85 75F001            MOV     B,#01H
80AB88 A512800617        ECALL   ?C?ILDIX
80AB8D FE                MOV     R6,A
80AB8E 749E              MOV     A,#LOW m_SMSMessage
80AB90 25F0              ADD     A,B
80AB92 F582              MOV     DPL,A
80AB94 7415              MOV     A,#HIGH m_SMSMessage
80AB96 3E                ADDC    A,R6
80AB97 F583              MOV     DPH,A
80AB99 740D              MOV     A,#0DH
80AB9B F0                MOVX    @DPTR,A
 1395: 	//收款记录	
 1396: 	//收入总金额					
 1397: 	len += sprintf( m_SMSMessage + len, "R00-%08lu", TradeCounter.TrueCurrencySum/SystemParameter.curUnit );
80AB9C 90163E            MOV     DPTR,#len
80AB9F A3                INC     DPTR
80ABA0 E0                MOVX    A,@DPTR
80ABA1 249E              ADD     A,#LOW m_SMSMessage
80ABA3 F9                MOV     R1,A
80ABA4 E4                CLR     A
80ABA5 3415              ADDC    A,#HIGH m_SMSMessage
80ABA7 FA                MOV     R2,A
80ABA8 7B00              MOV     R3,#?C?XDATASEG
80ABAA C003              PUSH    AR3
80ABAC C002              PUSH    AR2
80ABAE C001              PUSH    AR1
80ABB0 7B80              MOV     R3,#BYTE2 08003A4H
80ABB2 7A03              MOV     R2,#HIGH 08003A4H
80ABB4 79A4              MOV     R1,#LOW 08003A4H
80ABB6 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80ABB9 A5128007B6        ECALL   ?C?PSTXDATA
80ABBE 900468            MOV     DPTR,#SystemParameter+048H
80ABC1 E0                MOVX    A,@DPTR
80ABC2 FE                MOV     R6,A
80ABC3 A3                INC     DPTR
80ABC4 E0                MOVX    A,@DPTR
80ABC5 FF                MOV     R7,A
80ABC6 FB                MOV     R3,A
80ABC7 AA06              MOV     R2,AR6
80ABC9 E4                CLR     A
80ABCA F9                MOV     R1,A
80ABCB F8                MOV     R0,A
80ABCC 900AF1            MOV     DPTR,#TradeCounter
80ABCF A512800720        ECALL   ?C?LLDXDATA
80ABD4 A512800679        ECALL   ?C?ULDIV
80ABD9 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80ABDC A512800792        ECALL   ?C?LSTXDATA
80ABE1 D001              POP     AR1
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 411


80ABE3 D002              POP     AR2
80ABE5 D003              POP     AR3
80ABE7 A512800949        ECALL   _sprintf
80ABEC 90163E            MOV     DPTR,#len
80ABEF EE                MOV     A,R6
80ABF0 8FF0              MOV     B,R7
80ABF2 A512800600        ECALL   ?C?IILDX
 1398: 	m_SMSMessage[len++] = '\r';
80ABF7 90163E            MOV     DPTR,#len
80ABFA E4                CLR     A
80ABFB 75F001            MOV     B,#01H
80ABFE A512800617        ECALL   ?C?ILDIX
80AC03 FE                MOV     R6,A
80AC04 749E              MOV     A,#LOW m_SMSMessage
80AC06 25F0              ADD     A,B
80AC08 F582              MOV     DPL,A
80AC0A 7415              MOV     A,#HIGH m_SMSMessage
80AC0C 3E                ADDC    A,R6
80AC0D F583              MOV     DPH,A
80AC0F 740D              MOV     A,#0DH
80AC11 F0                MOVX    @DPTR,A
 1399: 	//收入硬总金额					
 1400: 	len += sprintf( m_SMSMessage + len, "R01-%08lu", TradeCounter.CoinSum/SystemParameter.curUnit );
80AC12 90163E            MOV     DPTR,#len
80AC15 A3                INC     DPTR
80AC16 E0                MOVX    A,@DPTR
80AC17 249E              ADD     A,#LOW m_SMSMessage
80AC19 F9                MOV     R1,A
80AC1A E4                CLR     A
80AC1B 3415              ADDC    A,#HIGH m_SMSMessage
80AC1D FA                MOV     R2,A
80AC1E 7B00              MOV     R3,#?C?XDATASEG
80AC20 C003              PUSH    AR3
80AC22 C002              PUSH    AR2
80AC24 C001              PUSH    AR1
80AC26 7B80              MOV     R3,#BYTE2 08003AEH
80AC28 7A03              MOV     R2,#HIGH 08003AEH
80AC2A 79AE              MOV     R1,#LOW 08003AEH
80AC2C 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80AC2F A5128007B6        ECALL   ?C?PSTXDATA
80AC34 900468            MOV     DPTR,#SystemParameter+048H
80AC37 E0                MOVX    A,@DPTR
80AC38 FE                MOV     R6,A
80AC39 A3                INC     DPTR
80AC3A E0                MOVX    A,@DPTR
80AC3B FF                MOV     R7,A
80AC3C FB                MOV     R3,A
80AC3D AA06              MOV     R2,AR6
80AC3F E4                CLR     A
80AC40 F9                MOV     R1,A
80AC41 F8                MOV     R0,A
80AC42 900AF9            MOV     DPTR,#TradeCounter+08H
80AC45 A512800720        ECALL   ?C?LLDXDATA
80AC4A A512800679        ECALL   ?C?ULDIV
80AC4F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80AC52 A512800792        ECALL   ?C?LSTXDATA
80AC57 D001              POP     AR1
80AC59 D002              POP     AR2
80AC5B D003              POP     AR3
80AC5D A512800949        ECALL   _sprintf
80AC62 90163E            MOV     DPTR,#len
80AC65 EE                MOV     A,R6
80AC66 8FF0              MOV     B,R7
80AC68 A512800600        ECALL   ?C?IILDX
 1401: 	m_SMSMessage[len++] = '\r';
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 412


80AC6D 90163E            MOV     DPTR,#len
80AC70 E4                CLR     A
80AC71 75F001            MOV     B,#01H
80AC74 A512800617        ECALL   ?C?ILDIX
80AC79 FE                MOV     R6,A
80AC7A 749E              MOV     A,#LOW m_SMSMessage
80AC7C 25F0              ADD     A,B
80AC7E F582              MOV     DPL,A
80AC80 7415              MOV     A,#HIGH m_SMSMessage
80AC82 3E                ADDC    A,R6
80AC83 F583              MOV     DPH,A
80AC85 740D              MOV     A,#0DH
80AC87 F0                MOVX    @DPTR,A
 1402: 	//收入纸币总金额					
 1403: 	len += sprintf( m_SMSMessage + len, "R02-%08lu", TradeCounter.CashSum/SystemParameter.curUnit );		
80AC88 90163E            MOV     DPTR,#len
80AC8B A3                INC     DPTR
80AC8C E0                MOVX    A,@DPTR
80AC8D 249E              ADD     A,#LOW m_SMSMessage
80AC8F F9                MOV     R1,A
80AC90 E4                CLR     A
80AC91 3415              ADDC    A,#HIGH m_SMSMessage
80AC93 FA                MOV     R2,A
80AC94 7B00              MOV     R3,#?C?XDATASEG
80AC96 C003              PUSH    AR3
80AC98 C002              PUSH    AR2
80AC9A C001              PUSH    AR1
80AC9C 7B80              MOV     R3,#BYTE2 08003B8H
80AC9E 7A03              MOV     R2,#HIGH 08003B8H
80ACA0 79B8              MOV     R1,#LOW 08003B8H
80ACA2 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80ACA5 A5128007B6        ECALL   ?C?PSTXDATA
80ACAA 900468            MOV     DPTR,#SystemParameter+048H
80ACAD E0                MOVX    A,@DPTR
80ACAE FE                MOV     R6,A
80ACAF A3                INC     DPTR
80ACB0 E0                MOVX    A,@DPTR
80ACB1 FF                MOV     R7,A
80ACB2 FB                MOV     R3,A
80ACB3 AA06              MOV     R2,AR6
80ACB5 E4                CLR     A
80ACB6 F9                MOV     R1,A
80ACB7 F8                MOV     R0,A
80ACB8 900AF5            MOV     DPTR,#TradeCounter+04H
80ACBB A512800720        ECALL   ?C?LLDXDATA
80ACC0 A512800679        ECALL   ?C?ULDIV
80ACC5 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80ACC8 A512800792        ECALL   ?C?LSTXDATA
80ACCD D001              POP     AR1
80ACCF D002              POP     AR2
80ACD1 D003              POP     AR3
80ACD3 A512800949        ECALL   _sprintf
80ACD8 90163E            MOV     DPTR,#len
80ACDB EE                MOV     A,R6
80ACDC 8FF0              MOV     B,R7
80ACDE A512800600        ECALL   ?C?IILDX
 1404: 	m_SMSMessage[len++] = '\r';
80ACE3 90163E            MOV     DPTR,#len
80ACE6 E4                CLR     A
80ACE7 75F001            MOV     B,#01H
80ACEA A512800617        ECALL   ?C?ILDIX
80ACEF FE                MOV     R6,A
80ACF0 749E              MOV     A,#LOW m_SMSMessage
80ACF2 25F0              ADD     A,B
80ACF4 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 413


80ACF6 7415              MOV     A,#HIGH m_SMSMessage
80ACF8 3E                ADDC    A,R6
80ACF9 F583              MOV     DPH,A
80ACFB 740D              MOV     A,#0DH
80ACFD F0                MOVX    @DPTR,A
 1405: 
 1406: 	//找出总金额			
 1407: 	len += sprintf( m_SMSMessage + len, "P00-%08lu", TradeCounter.ChangeSum/SystemParameter.curUnit );
80ACFE 90163E            MOV     DPTR,#len
80AD01 A3                INC     DPTR
80AD02 E0                MOVX    A,@DPTR
80AD03 249E              ADD     A,#LOW m_SMSMessage
80AD05 F9                MOV     R1,A
80AD06 E4                CLR     A
80AD07 3415              ADDC    A,#HIGH m_SMSMessage
80AD09 FA                MOV     R2,A
80AD0A 7B00              MOV     R3,#?C?XDATASEG
80AD0C C003              PUSH    AR3
80AD0E C002              PUSH    AR2
80AD10 C001              PUSH    AR1
80AD12 7B80              MOV     R3,#BYTE2 08003C2H
80AD14 7A03              MOV     R2,#HIGH 08003C2H
80AD16 79C2              MOV     R1,#LOW 08003C2H
80AD18 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80AD1B A5128007B6        ECALL   ?C?PSTXDATA
80AD20 900468            MOV     DPTR,#SystemParameter+048H
80AD23 E0                MOVX    A,@DPTR
80AD24 FE                MOV     R6,A
80AD25 A3                INC     DPTR
80AD26 E0                MOVX    A,@DPTR
80AD27 FF                MOV     R7,A
80AD28 FB                MOV     R3,A
80AD29 AA06              MOV     R2,AR6
80AD2B E4                CLR     A
80AD2C F9                MOV     R1,A
80AD2D F8                MOV     R0,A
80AD2E 900B05            MOV     DPTR,#TradeCounter+014H
80AD31 A512800720        ECALL   ?C?LLDXDATA
80AD36 A512800679        ECALL   ?C?ULDIV
80AD3B 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80AD3E A512800792        ECALL   ?C?LSTXDATA
80AD43 D001              POP     AR1
80AD45 D002              POP     AR2
80AD47 D003              POP     AR3
80AD49 A512800949        ECALL   _sprintf
80AD4E 90163E            MOV     DPTR,#len
80AD51 EE                MOV     A,R6
80AD52 8FF0              MOV     B,R7
80AD54 A512800600        ECALL   ?C?IILDX
 1408: 	m_SMSMessage[len++] = '\r';
80AD59 90163E            MOV     DPTR,#len
80AD5C E4                CLR     A
80AD5D 75F001            MOV     B,#01H
80AD60 A512800617        ECALL   ?C?ILDIX
80AD65 FE                MOV     R6,A
80AD66 749E              MOV     A,#LOW m_SMSMessage
80AD68 25F0              ADD     A,B
80AD6A F582              MOV     DPL,A
80AD6C 7415              MOV     A,#HIGH m_SMSMessage
80AD6E 3E                ADDC    A,R6
80AD6F F583              MOV     DPH,A
80AD71 740D              MOV     A,#0DH
80AD73 F0                MOVX    @DPTR,A
 1409: 	//找出硬币的总金额
 1410: 	len += sprintf( m_SMSMessage + len, "P01-%08lu", 
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 414


80AD74 90163E            MOV     DPTR,#len
80AD77 A3                INC     DPTR
80AD78 E0                MOVX    A,@DPTR
80AD79 249E              ADD     A,#LOW m_SMSMessage
80AD7B F9                MOV     R1,A
80AD7C E4                CLR     A
80AD7D 3415              ADDC    A,#HIGH m_SMSMessage
80AD7F FA                MOV     R2,A
80AD80 7B00              MOV     R3,#?C?XDATASEG
80AD82 C003              PUSH    AR3
80AD84 C002              PUSH    AR2
80AD86 C001              PUSH    AR1
80AD88 7B80              MOV     R3,#BYTE2 08003CCH
80AD8A 7A03              MOV     R2,#HIGH 08003CCH
80AD8C 79CC              MOV     R1,#LOW 08003CCH
80AD8E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80AD91 A5128007B6        ECALL   ?C?PSTXDATA
80AD96 900B0D            MOV     DPTR,#TradeCounter+01CH
80AD99 A512800720        ECALL   ?C?LLDXDATA
80AD9E 900B09            MOV     DPTR,#TradeCounter+018H
80ADA1 A51280073E        ECALL   ?C?LLDXDATA0
80ADA6 A51280062E        ECALL   ?C?LADD
80ADAB 900B11            MOV     DPTR,#TradeCounter+020H
80ADAE A51280073E        ECALL   ?C?LLDXDATA0
80ADB3 A51280062E        ECALL   ?C?LADD
80ADB8 C006              PUSH    AR6
80ADBA C007              PUSH    AR7
80ADBC 900468            MOV     DPTR,#SystemParameter+048H
80ADBF E0                MOVX    A,@DPTR
80ADC0 FE                MOV     R6,A
80ADC1 A3                INC     DPTR
80ADC2 E0                MOVX    A,@DPTR
80ADC3 FB                MOV     R3,A
80ADC4 AA06              MOV     R2,AR6
80ADC6 E4                CLR     A
80ADC7 F9                MOV     R1,A
80ADC8 F8                MOV     R0,A
80ADC9 D007              POP     AR7
80ADCB D006              POP     AR6
80ADCD A512800679        ECALL   ?C?ULDIV
80ADD2 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80ADD5 A512800792        ECALL   ?C?LSTXDATA
80ADDA D001              POP     AR1
80ADDC D002              POP     AR2
80ADDE D003              POP     AR3
80ADE0 A512800949        ECALL   _sprintf
80ADE5 90163E            MOV     DPTR,#len
80ADE8 EE                MOV     A,R6
80ADE9 8FF0              MOV     B,R7
80ADEB A512800600        ECALL   ?C?IILDX
 1411:         //TradeCounter.Hopper1Sum + TradeCounter.Hopper2Sum + TradeCounter.Hopper3Sum
 1412: 		(TradeCounter.Hopper1Sum + TradeCounter.Hopper2Sum + TradeCounter.Hopper3Sum)/SystemParameter.curUnit ); //Chan
>> ged by Andy on 2010.8.26
 1413: 	m_SMSMessage[len++] = '\r';
80ADF0 90163E            MOV     DPTR,#len
80ADF3 E4                CLR     A
80ADF4 75F001            MOV     B,#01H
80ADF7 A512800617        ECALL   ?C?ILDIX
80ADFC FE                MOV     R6,A
80ADFD 749E              MOV     A,#LOW m_SMSMessage
80ADFF 25F0              ADD     A,B
80AE01 F582              MOV     DPL,A
80AE03 7415              MOV     A,#HIGH m_SMSMessage
80AE05 3E                ADDC    A,R6
80AE06 F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 415


80AE08 740D              MOV     A,#0DH
80AE0A F0                MOVX    @DPTR,A
 1414: 
 1415: 	//交易总金额			
 1416: 	len += sprintf( m_SMSMessage + len, "V00-%08lu", TradeCounter.TradeCurrencySum/SystemParameter.curUnit );
80AE0B 90163E            MOV     DPTR,#len
80AE0E A3                INC     DPTR
80AE0F E0                MOVX    A,@DPTR
80AE10 249E              ADD     A,#LOW m_SMSMessage
80AE12 F9                MOV     R1,A
80AE13 E4                CLR     A
80AE14 3415              ADDC    A,#HIGH m_SMSMessage
80AE16 FA                MOV     R2,A
80AE17 7B00              MOV     R3,#?C?XDATASEG
80AE19 C003              PUSH    AR3
80AE1B C002              PUSH    AR2
80AE1D C001              PUSH    AR1
80AE1F 7B80              MOV     R3,#BYTE2 08003D6H
80AE21 7A03              MOV     R2,#HIGH 08003D6H
80AE23 79D6              MOV     R1,#LOW 08003D6H
80AE25 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80AE28 A5128007B6        ECALL   ?C?PSTXDATA
80AE2D 900468            MOV     DPTR,#SystemParameter+048H
80AE30 E0                MOVX    A,@DPTR
80AE31 FE                MOV     R6,A
80AE32 A3                INC     DPTR
80AE33 E0                MOVX    A,@DPTR
80AE34 FF                MOV     R7,A
80AE35 FB                MOV     R3,A
80AE36 AA06              MOV     R2,AR6
80AE38 E4                CLR     A
80AE39 F9                MOV     R1,A
80AE3A F8                MOV     R0,A
80AE3B 900AFD            MOV     DPTR,#TradeCounter+0CH
80AE3E A512800720        ECALL   ?C?LLDXDATA
80AE43 A512800679        ECALL   ?C?ULDIV
80AE48 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80AE4B A512800792        ECALL   ?C?LSTXDATA
80AE50 D001              POP     AR1
80AE52 D002              POP     AR2
80AE54 D003              POP     AR3
80AE56 A512800949        ECALL   _sprintf
80AE5B 90163E            MOV     DPTR,#len
80AE5E EE                MOV     A,R6
80AE5F 8FF0              MOV     B,R7
80AE61 A512800600        ECALL   ?C?IILDX
 1417: 	m_SMSMessage[len++] = '\r';
80AE66 90163E            MOV     DPTR,#len
80AE69 E4                CLR     A
80AE6A 75F001            MOV     B,#01H
80AE6D A512800617        ECALL   ?C?ILDIX
80AE72 FE                MOV     R6,A
80AE73 749E              MOV     A,#LOW m_SMSMessage
80AE75 25F0              ADD     A,B
80AE77 F582              MOV     DPL,A
80AE79 7415              MOV     A,#HIGH m_SMSMessage
80AE7B 3E                ADDC    A,R6
80AE7C F583              MOV     DPH,A
80AE7E 740D              MOV     A,#0DH
80AE80 F0                MOVX    @DPTR,A
 1418: 	//正常交易次数	
 1419: 	len += sprintf( m_SMSMessage + len, "V01-%08u", TradeCounter.GoodTraceSum );
80AE81 90163E            MOV     DPTR,#len
80AE84 A3                INC     DPTR
80AE85 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 416


80AE86 249E              ADD     A,#LOW m_SMSMessage
80AE88 F9                MOV     R1,A
80AE89 E4                CLR     A
80AE8A 3415              ADDC    A,#HIGH m_SMSMessage
80AE8C FA                MOV     R2,A
80AE8D 7B00              MOV     R3,#?C?XDATASEG
80AE8F C003              PUSH    AR3
80AE91 C002              PUSH    AR2
80AE93 C001              PUSH    AR1
80AE95 7B80              MOV     R3,#BYTE2 08003E0H
80AE97 7A03              MOV     R2,#HIGH 08003E0H
80AE99 79E0              MOV     R1,#LOW 08003E0H
80AE9B 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80AE9E A5128007B6        ECALL   ?C?PSTXDATA
80AEA3 900B01            MOV     DPTR,#TradeCounter+010H
80AEA6 E0                MOVX    A,@DPTR
80AEA7 FF                MOV     R7,A
80AEA8 A3                INC     DPTR
80AEA9 E0                MOVX    A,@DPTR
80AEAA 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80AEAD CF                XCH     A,R7
80AEAE F0                MOVX    @DPTR,A
80AEAF A3                INC     DPTR
80AEB0 EF                MOV     A,R7
80AEB1 F0                MOVX    @DPTR,A
80AEB2 D001              POP     AR1
80AEB4 D002              POP     AR2
80AEB6 D003              POP     AR3
80AEB8 A512800949        ECALL   _sprintf
80AEBD 90163E            MOV     DPTR,#len
80AEC0 EE                MOV     A,R6
80AEC1 8FF0              MOV     B,R7
80AEC3 A512800600        ECALL   ?C?IILDX
 1420: 	m_SMSMessage[len++] = '\r';
80AEC8 90163E            MOV     DPTR,#len
80AECB E4                CLR     A
80AECC 75F001            MOV     B,#01H
80AECF A512800617        ECALL   ?C?ILDIX
80AED4 FE                MOV     R6,A
80AED5 749E              MOV     A,#LOW m_SMSMessage
80AED7 25F0              ADD     A,B
80AED9 F582              MOV     DPL,A
80AEDB 7415              MOV     A,#HIGH m_SMSMessage
80AEDD 3E                ADDC    A,R6
80AEDE F583              MOV     DPH,A
80AEE0 740D              MOV     A,#0DH
80AEE2 F0                MOVX    @DPTR,A
 1421: 	//有疑问出货交易次数
 1422: 	len += sprintf( m_SMSMessage + len, "V02-%08u", TradeCounter.GoodDoubtTraceSum );
80AEE3 90163E            MOV     DPTR,#len
80AEE6 A3                INC     DPTR
80AEE7 E0                MOVX    A,@DPTR
80AEE8 249E              ADD     A,#LOW m_SMSMessage
80AEEA F9                MOV     R1,A
80AEEB E4                CLR     A
80AEEC 3415              ADDC    A,#HIGH m_SMSMessage
80AEEE FA                MOV     R2,A
80AEEF 7B00              MOV     R3,#?C?XDATASEG
80AEF1 C003              PUSH    AR3
80AEF3 C002              PUSH    AR2
80AEF5 C001              PUSH    AR1
80AEF7 7B80              MOV     R3,#BYTE2 08003E9H
80AEF9 7A03              MOV     R2,#HIGH 08003E9H
80AEFB 79E9              MOV     R1,#LOW 08003E9H
80AEFD 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 417


80AF00 A5128007B6        ECALL   ?C?PSTXDATA
80AF05 900B03            MOV     DPTR,#TradeCounter+012H
80AF08 E0                MOVX    A,@DPTR
80AF09 FF                MOV     R7,A
80AF0A A3                INC     DPTR
80AF0B E0                MOVX    A,@DPTR
80AF0C 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80AF0F CF                XCH     A,R7
80AF10 F0                MOVX    @DPTR,A
80AF11 A3                INC     DPTR
80AF12 EF                MOV     A,R7
80AF13 F0                MOVX    @DPTR,A
80AF14 D001              POP     AR1
80AF16 D002              POP     AR2
80AF18 D003              POP     AR3
80AF1A A512800949        ECALL   _sprintf
80AF1F 90163E            MOV     DPTR,#len
80AF22 EE                MOV     A,R6
80AF23 8FF0              MOV     B,R7
80AF25 A512800600        ECALL   ?C?IILDX
 1423: 	m_SMSMessage[len++] = '\r';
80AF2A 90163E            MOV     DPTR,#len
80AF2D E4                CLR     A
80AF2E 75F001            MOV     B,#01H
80AF31 A512800617        ECALL   ?C?ILDIX
80AF36 FE                MOV     R6,A
80AF37 749E              MOV     A,#LOW m_SMSMessage
80AF39 25F0              ADD     A,B
80AF3B F582              MOV     DPL,A
80AF3D 7415              MOV     A,#HIGH m_SMSMessage
80AF3F 3E                ADDC    A,R6
80AF40 F583              MOV     DPH,A
80AF42 740D              MOV     A,#0DH
80AF44 F0                MOVX    @DPTR,A
 1424: 	
 1425: 	
 1426: 	//有统计信息要发送		
 1427: 	m_SMSMessage[len--] = 0;
80AF45 90163E            MOV     DPTR,#len
80AF48 74FF              MOV     A,#0FFH
80AF4A F5F0              MOV     B,A
80AF4C A512800617        ECALL   ?C?ILDIX
80AF51 FE                MOV     R6,A
80AF52 749E              MOV     A,#LOW m_SMSMessage
80AF54 25F0              ADD     A,B
80AF56 F582              MOV     DPL,A
80AF58 7415              MOV     A,#HIGH m_SMSMessage
80AF5A 3E                ADDC    A,R6
80AF5B F583              MOV     DPH,A
80AF5D E4                CLR     A
80AF5E F0                MOVX    @DPTR,A
 1428: 	Trace( "\n TradePack m_SMSMessage[%u] = %s", len, m_SMSMessage );	
 1429: #ifdef _MOBILE_SMS_1
 1430: 	SendSMS( m_SMSMessage, len );
80AF5F 7B00              MOV     R3,#?C?XDATASEG
80AF61 7A15              MOV     R2,#HIGH m_SMSMessage
80AF63 799E              MOV     R1,#LOW m_SMSMessage
80AF65 90163E            MOV     DPTR,#len
80AF68 A3                INC     DPTR
80AF69 E0                MOVX    A,@DPTR
80AF6A FD                MOV     R5,A
80AF6B A51280A9F8        ECALL   _SendSMS
 1431: 	SMSQuery &= 0xFD;						
80AF70 900145            MOV     DPTR,#SMSQuery
80AF73 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 418


80AF74 54FD              ANL     A,#0FDH
80AF76 F0                MOVX    @DPTR,A
 1432: #endif
 1433: 	return 0;
80AF77 7F00              MOV     R7,#00H
 1434: }
80AF79         ?C0316?MAINFLOW:
80AF79 A522              ERET    
----- FUNCTION TradePack (END) -------


----- FUNCTION SMSCommStatus (BEGIN) -----
 FILE: 'communication.c'
   17: 	bit SMSCommStatus()
   18: 	{	
   19: 		///待发的短信已装满待发区，不能再加入了
   20: 		if( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount >= MAX_BUFFERED_SMS_COUNT )
80AF7B 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
80AF7E E0                MOVX    A,@DPTR
80AF7F C3                CLR     C
80AF80 940A              SUBB    A,#0AH
80AF82 4002              JC      ?C0003?COMMUNICATION
   21: 			return 0;	
80AF84 800A              SJMP    ?C0004?COMMUNICATION
80AF86         ?C0003?COMMUNICATION:
   22: 		if( g_SMSCommModuleInfo.m_byCommStatus != COMM_STATUS_OK )
80AF86 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
80AF89 E0                MOVX    A,@DPTR
80AF8A 6404              XRL     A,#04H
80AF8C D3                SETB    C
80AF8D 6001              JZ      ?C0005?COMMUNICATION
   23: 			return 0;
80AF8F C3                CLR     C
80AF90         ?C0005?COMMUNICATION:
   24: 		return 1;	
   25: 	}
80AF90         ?C0004?COMMUNICATION:
80AF90 A522              ERET    
----- FUNCTION SMSCommStatus (END) -------


----- FUNCTION ScanDeviceStatus (BEGIN) -----
 FILE: 'mainflow.c'
 1094: u_char	ScanDeviceStatus()
 1095: {
 1096: 	u_char xdata str1[6];
 1097: 	u_char xdata m_SMSMessage[MAX_SMS_LEN];
 1098: 	u_int  xdata len = 0;
80AF92 E4                CLR     A
80AF93 901644            MOV     DPTR,#len
80AF96 F0                MOVX    @DPTR,A
80AF97 A3                INC     DPTR
80AF98 F0                MOVX    @DPTR,A
 1099: 	//bit0表示已添加了至少一个消息包	
 1100: 	u_char xdata flag = 0;
80AF99 A3                INC     DPTR
80AF9A F0                MOVX    @DPTR,A
 1101: 	u_char xdata i = 0;
80AF9B A3                INC     DPTR
80AF9C F0                MOVX    @DPTR,A
 1102: 	u_char xdata Index = 0;
80AF9D A3                INC     DPTR
80AF9E F0                MOVX    @DPTR,A
 1103: 	u_char xdata IsMorePage = 0;
80AF9F A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 419


80AFA0 F0                MOVX    @DPTR,A
 1104: 
 1105: 	if( SystemParameter.MobileON != 1 )
80AFA1 900446            MOV     DPTR,#SystemParameter+026H
80AFA4 E0                MOVX    A,@DPTR
80AFA5 6401              XRL     A,#01H
80AFA7 6005              JZ      ?C0261?MAINFLOW
 1106: 		return 1;
80AFA9 7F01              MOV     R7,#01H
80AFAB 02B744            LJMP    ?C0262?MAINFLOW
80AFAE         ?C0261?MAINFLOW:
 1107: 	//是否可以向短信发送队列中添加短信
 1108: 	if( !SMSCommStatus() )
80AFAE A51280AF7B        ECALL   SMSCommStatus
80AFB3 4005              JC      ?C0263?MAINFLOW
 1109: 		//已不能向短信发送队列中添加短信了
 1110: 		return 1;
80AFB5 7F01              MOV     R7,#01H
80AFB7 02B744            LJMP    ?C0262?MAINFLOW
80AFBA         ?C0263?MAINFLOW:
 1111: 	
 1112: 	memset( m_SMSMessage, 0, sizeof( m_SMSMessage ) );	
80AFBA 7E00              MOV     R6,#00H
80AFBC 7FA0              MOV     R7,#0A0H
80AFBE 7D00              MOV     R5,#00H
80AFC0 7B00              MOV     R3,#?C?XDATASEG
80AFC2 7A15              MOV     R2,#HIGH m_SMSMessage
80AFC4 79A4              MOV     R1,#LOW m_SMSMessage
80AFC6 A5128008A6        ECALL   ?C?MEMSET
 1113: 	//添加短信头部
 1114: 	memcpy( m_SMSMessage, "VMMSG", 5 );
80AFCB 78A4              MOV     R0,#LOW m_SMSMessage
80AFCD 7C15              MOV     R4,#HIGH m_SMSMessage
80AFCF 7D00              MOV     R5,#?C?XDATASEG
80AFD1 7B80              MOV     R3,#BYTE2 080031FH
80AFD3 7A03              MOV     R2,#HIGH 080031FH
80AFD5 791F              MOV     R1,#LOW 080031FH
80AFD7 7E00              MOV     R6,#00H
80AFD9 7F05              MOV     R7,#05H
80AFDB A51280052D        ECALL   ?C?COPY
 1115: 	len += 5;
80AFE0 901644            MOV     DPTR,#len
80AFE3 E4                CLR     A
80AFE4 75F005            MOV     B,#05H
80AFE7 A512800600        ECALL   ?C?IILDX
 1116: 	for( i = 0; i < 5; i ++ )
80AFEC E4                CLR     A
80AFED 901647            MOV     DPTR,#i
80AFF0 F0                MOVX    @DPTR,A
80AFF1         ?C0264?MAINFLOW:
 1117: 		sprintf( m_SMSMessage + len + i, "%bu", SystemParameter.VmID[i] );
80AFF1 901644            MOV     DPTR,#len
80AFF4 E0                MOVX    A,@DPTR
80AFF5 FE                MOV     R6,A
80AFF6 A3                INC     DPTR
80AFF7 E0                MOVX    A,@DPTR
80AFF8 24A4              ADD     A,#LOW m_SMSMessage
80AFFA F9                MOV     R1,A
80AFFB 7415              MOV     A,#HIGH m_SMSMessage
80AFFD 3E                ADDC    A,R6
80AFFE FA                MOV     R2,A
80AFFF 7B00              MOV     R3,#?C?XDATASEG
80B001 901647            MOV     DPTR,#i
80B004 E0                MOVX    A,@DPTR
80B005 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 420


80B006 29                ADD     A,R1
80B007 F9                MOV     R1,A
80B008 E4                CLR     A
80B009 3A                ADDC    A,R2
80B00A FA                MOV     R2,A
80B00B C003              PUSH    AR3
80B00D C002              PUSH    AR2
80B00F C001              PUSH    AR1
80B011 7B80              MOV     R3,#BYTE2 0800325H
80B013 7A03              MOV     R2,#HIGH 0800325H
80B015 7925              MOV     R1,#LOW 0800325H
80B017 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80B01A A5128007B6        ECALL   ?C?PSTXDATA
80B01F 7431              MOV     A,#LOW SystemParameter+011H
80B021 2F                ADD     A,R7
80B022 F582              MOV     DPL,A
80B024 E4                CLR     A
80B025 3404              ADDC    A,#HIGH SystemParameter+011H
80B027 F583              MOV     DPH,A
80B029 E0                MOVX    A,@DPTR
80B02A 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80B02D F0                MOVX    @DPTR,A
80B02E D001              POP     AR1
80B030 D002              POP     AR2
80B032 D003              POP     AR3
80B034 A512800949        ECALL   _sprintf
80B039 901647            MOV     DPTR,#i
80B03C E0                MOVX    A,@DPTR
80B03D 04                INC     A
80B03E F0                MOVX    @DPTR,A
80B03F E0                MOVX    A,@DPTR
80B040 C3                CLR     C
80B041 9405              SUBB    A,#05H
80B043 40AC              JC      ?C0264?MAINFLOW
80B045         ?C0265?MAINFLOW:
 1118: 	len += 5;	
80B045 901644            MOV     DPTR,#len
80B048 E4                CLR     A
80B049 75F005            MOV     B,#05H
80B04C A512800600        ECALL   ?C?IILDX
 1119: 	m_SMSMessage[len++] = '\r';
80B051 901644            MOV     DPTR,#len
80B054 E4                CLR     A
80B055 75F001            MOV     B,#01H
80B058 A512800617        ECALL   ?C?ILDIX
80B05D FE                MOV     R6,A
80B05E 74A4              MOV     A,#LOW m_SMSMessage
80B060 25F0              ADD     A,B
80B062 F582              MOV     DPL,A
80B064 7415              MOV     A,#HIGH m_SMSMessage
80B066 3E                ADDC    A,R6
80B067 F583              MOV     DPH,A
80B069 740D              MOV     A,#0DH
80B06B F0                MOVX    @DPTR,A
 1120: 	//处理系统故障
 1121: 	//暂停服务
 1122: 	if( SystemStatus == 2 ) 
80B06C 9001C6            MOV     DPTR,#SystemStatus
80B06F E0                MOVX    A,@DPTR
80B070 6402              XRL     A,#02H
80B072 704D              JNZ     ?C0267?MAINFLOW
 1123: 	{
 1124: 		memcpy( m_SMSMessage + len, "S0090", 5 );		
80B074 901644            MOV     DPTR,#len
80B077 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 421


80B078 E0                MOVX    A,@DPTR
80B079 24A4              ADD     A,#LOW m_SMSMessage
80B07B F9                MOV     R1,A
80B07C E4                CLR     A
80B07D 3415              ADDC    A,#HIGH m_SMSMessage
80B07F A801              MOV     R0,AR1
80B081 FC                MOV     R4,A
80B082 7D00              MOV     R5,#?C?XDATASEG
80B084 7B80              MOV     R3,#BYTE2 0800329H
80B086 7A03              MOV     R2,#HIGH 0800329H
80B088 7929              MOV     R1,#LOW 0800329H
80B08A 7E00              MOV     R6,#00H
80B08C 7F05              MOV     R7,#05H
80B08E A51280052D        ECALL   ?C?COPY
 1125: 		len += 5;	
80B093 901644            MOV     DPTR,#len
80B096 E4                CLR     A
80B097 75F005            MOV     B,#05H
80B09A A512800600        ECALL   ?C?IILDX
 1126: 		flag |= 0x03;
80B09F 901646            MOV     DPTR,#flag
80B0A2 E0                MOVX    A,@DPTR
80B0A3 4403              ORL     A,#03H
80B0A5 F0                MOVX    @DPTR,A
 1127: 		m_SMSMessage[len++] = '\r';		
80B0A6 901644            MOV     DPTR,#len
80B0A9 E4                CLR     A
80B0AA 75F001            MOV     B,#01H
80B0AD A512800617        ECALL   ?C?ILDIX
80B0B2 FE                MOV     R6,A
80B0B3 74A4              MOV     A,#LOW m_SMSMessage
80B0B5 25F0              ADD     A,B
80B0B7 F582              MOV     DPL,A
80B0B9 7415              MOV     A,#HIGH m_SMSMessage
80B0BB 3E                ADDC    A,R6
80B0BC F583              MOV     DPH,A
80B0BE 740D              MOV     A,#0DH
80B0C0 F0                MOVX    @DPTR,A
 1128: 	}
80B0C1         ?C0267?MAINFLOW:
 1129: 
 1130: 	//参数校验错误
 1131: 	if(( HardWareErr & 0x0100 ) == 0x0100 )
80B0C1 900484            MOV     DPTR,#HardWareErr
80B0C4 E0                MOVX    A,@DPTR
80B0C5 30E061            JNB     ACC.0,?C0268?MAINFLOW
 1132: 	{		
 1133: 		if( ( flag & 0x02 ) == 0x02 )
80B0C8 901646            MOV     DPTR,#flag
80B0CB E0                MOVX    A,@DPTR
80B0CC 30E117            JNB     ACC.1,?C0269?MAINFLOW
 1134: 			memcpy( m_SMSMessage - 5, "S0010", 5 );
80B0CF 789F              MOV     R0,#LOW m_SMSMessage-05H
80B0D1 7C15              MOV     R4,#HIGH m_SMSMessage-05H
80B0D3 7D00              MOV     R5,#?C?XDATASEG
80B0D5 7B80              MOV     R3,#BYTE2 080032FH
80B0D7 7A03              MOV     R2,#HIGH 080032FH
80B0D9 792F              MOV     R1,#LOW 080032FH
80B0DB 7E00              MOV     R6,#00H
80B0DD 7F05              MOV     R7,#05H
80B0DF A51280052D        ECALL   ?C?COPY
80B0E4 8028              SJMP    ?C0270?MAINFLOW
80B0E6         ?C0269?MAINFLOW:
 1135: 		else
 1136: 		{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 422


 1137: 			memcpy( m_SMSMessage, "S0010", 5 );
80B0E6 78A4              MOV     R0,#LOW m_SMSMessage
80B0E8 7C15              MOV     R4,#HIGH m_SMSMessage
80B0EA 7D00              MOV     R5,#?C?XDATASEG
80B0EC 7B80              MOV     R3,#BYTE2 080032FH
80B0EE 7A03              MOV     R2,#HIGH 080032FH
80B0F0 792F              MOV     R1,#LOW 080032FH
80B0F2 7E00              MOV     R6,#00H
80B0F4 7F05              MOV     R7,#05H
80B0F6 A51280052D        ECALL   ?C?COPY
 1138: 			len += 5;	
80B0FB 901644            MOV     DPTR,#len
80B0FE E4                CLR     A
80B0FF 75F005            MOV     B,#05H
80B102 A512800600        ECALL   ?C?IILDX
 1139: 			flag |= 0x03;
80B107 901646            MOV     DPTR,#flag
80B10A E0                MOVX    A,@DPTR
80B10B 4403              ORL     A,#03H
80B10D F0                MOVX    @DPTR,A
 1140: 		}
80B10E         ?C0270?MAINFLOW:
 1141: 		m_SMSMessage[len++] = '\r';				
80B10E 901644            MOV     DPTR,#len
80B111 E4                CLR     A
80B112 75F001            MOV     B,#01H
80B115 A512800617        ECALL   ?C?ILDIX
80B11A FE                MOV     R6,A
80B11B 74A4              MOV     A,#LOW m_SMSMessage
80B11D 25F0              ADD     A,B
80B11F F582              MOV     DPL,A
80B121 7415              MOV     A,#HIGH m_SMSMessage
80B123 3E                ADDC    A,R6
80B124 F583              MOV     DPH,A
80B126 740D              MOV     A,#0DH
80B128 F0                MOVX    @DPTR,A
 1142: 	}
80B129         ?C0268?MAINFLOW:
 1143: 	
 1144: 	//显示板通讯故障
 1145: 	if ( ( HardWareErr & 0x0200 ) == 0x0200 ) 
80B129 900484            MOV     DPTR,#HardWareErr
80B12C E0                MOVX    A,@DPTR
80B12D 30E14D            JNB     ACC.1,?C0271?MAINFLOW
 1146: 	{		
 1147: 		memcpy( m_SMSMessage + len, "S0420", 5 );
80B130 901644            MOV     DPTR,#len
80B133 A3                INC     DPTR
80B134 E0                MOVX    A,@DPTR
80B135 24A4              ADD     A,#LOW m_SMSMessage
80B137 F9                MOV     R1,A
80B138 E4                CLR     A
80B139 3415              ADDC    A,#HIGH m_SMSMessage
80B13B A801              MOV     R0,AR1
80B13D FC                MOV     R4,A
80B13E 7D00              MOV     R5,#?C?XDATASEG
80B140 7B80              MOV     R3,#BYTE2 0800398H
80B142 7A03              MOV     R2,#HIGH 0800398H
80B144 7998              MOV     R1,#LOW 0800398H
80B146 7E00              MOV     R6,#00H
80B148 7F05              MOV     R7,#05H
80B14A A51280052D        ECALL   ?C?COPY
 1148: 		len += 5;	
80B14F 901644            MOV     DPTR,#len
80B152 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 423


80B153 75F005            MOV     B,#05H
80B156 A512800600        ECALL   ?C?IILDX
 1149: 		flag |= 0x01;
80B15B 901646            MOV     DPTR,#flag
80B15E E0                MOVX    A,@DPTR
80B15F 4401              ORL     A,#01H
80B161 F0                MOVX    @DPTR,A
 1150: 		m_SMSMessage[len++] = '\r';			
80B162 901644            MOV     DPTR,#len
80B165 E4                CLR     A
80B166 75F001            MOV     B,#01H
80B169 A512800617        ECALL   ?C?ILDIX
80B16E FE                MOV     R6,A
80B16F 74A4              MOV     A,#LOW m_SMSMessage
80B171 25F0              ADD     A,B
80B173 F582              MOV     DPL,A
80B175 7415              MOV     A,#HIGH m_SMSMessage
80B177 3E                ADDC    A,R6
80B178 F583              MOV     DPH,A
80B17A 740D              MOV     A,#0DH
80B17C F0                MOVX    @DPTR,A
 1151: 	}
80B17D         ?C0271?MAINFLOW:
 1152: 	
 1153: 	////货道驱动板扫描		
 1154: 	if( ( HardWareErr & 0x0040 ) == 0x0040 ) 
80B17D 900485            MOV     DPTR,#HardWareErr+01H
80B180 E0                MOVX    A,@DPTR
80B181 30E64D            JNB     ACC.6,?C0272?MAINFLOW
 1155: 	{
 1156: 		Trace( "\n ScanIsSendAlarm link error");
 1157: 		//都与主板通讯不上
 1158: 		memcpy( m_SMSMessage+len, "H0120", 5 );
80B184 901644            MOV     DPTR,#len
80B187 A3                INC     DPTR
80B188 E0                MOVX    A,@DPTR
80B189 24A4              ADD     A,#LOW m_SMSMessage
80B18B F9                MOV     R1,A
80B18C E4                CLR     A
80B18D 3415              ADDC    A,#HIGH m_SMSMessage
80B18F A801              MOV     R0,AR1
80B191 FC                MOV     R4,A
80B192 7D00              MOV     R5,#?C?XDATASEG
80B194 7B80              MOV     R3,#BYTE2 0800335H
80B196 7A03              MOV     R2,#HIGH 0800335H
80B198 7935              MOV     R1,#LOW 0800335H
80B19A 7E00              MOV     R6,#00H
80B19C 7F05              MOV     R7,#05H
80B19E A51280052D        ECALL   ?C?COPY
 1159: 		len  += 5;
80B1A3 901644            MOV     DPTR,#len
80B1A6 E4                CLR     A
80B1A7 75F005            MOV     B,#05H
80B1AA A512800600        ECALL   ?C?IILDX
 1160: 		m_SMSMessage[len++] = '\r';	
80B1AF 901644            MOV     DPTR,#len
80B1B2 E4                CLR     A
80B1B3 75F001            MOV     B,#01H
80B1B6 A512800617        ECALL   ?C?ILDIX
80B1BB FE                MOV     R6,A
80B1BC 74A4              MOV     A,#LOW m_SMSMessage
80B1BE 25F0              ADD     A,B
80B1C0 F582              MOV     DPL,A
80B1C2 7415              MOV     A,#HIGH m_SMSMessage
80B1C4 3E                ADDC    A,R6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 424


80B1C5 F583              MOV     DPH,A
80B1C7 740D              MOV     A,#0DH
80B1C9 F0                MOVX    @DPTR,A
 1161: 		flag |= 0x01;		
80B1CA 901646            MOV     DPTR,#flag
80B1CD E0                MOVX    A,@DPTR
80B1CE 4401              ORL     A,#01H
80B1D0 F0                MOVX    @DPTR,A
 1162: 	}	
80B1D1         ?C0272?MAINFLOW:
 1163: 
 1164: 	//纸币器
 1165: 	if( SystemParameter.BillNo == 1 )
80B1D1 900427            MOV     DPTR,#SystemParameter+07H
80B1D4 E0                MOVX    A,@DPTR
80B1D5 6401              XRL     A,#01H
80B1D7 7053              JNZ     ?C0273?MAINFLOW
 1166: 	{
 1167: 		//开启了纸币器
 1168: 		if( DeviceStatus.BillAccepter != 0 )			
80B1D9 900B1B            MOV     DPTR,#DeviceStatus
80B1DC E0                MOVX    A,@DPTR
80B1DD 604D              JZ      ?C0273?MAINFLOW
 1169: 		{
 1170: 			Trace( "\n ScanIsSendAlarm bill error");
 1171: 			//还没有发送报警,准备发送			
 1172: 			memcpy( m_SMSMessage+len, "A0210", 5 );
80B1DF 901644            MOV     DPTR,#len
80B1E2 A3                INC     DPTR
80B1E3 E0                MOVX    A,@DPTR
80B1E4 24A4              ADD     A,#LOW m_SMSMessage
80B1E6 F9                MOV     R1,A
80B1E7 E4                CLR     A
80B1E8 3415              ADDC    A,#HIGH m_SMSMessage
80B1EA A801              MOV     R0,AR1
80B1EC FC                MOV     R4,A
80B1ED 7D00              MOV     R5,#?C?XDATASEG
80B1EF 7B80              MOV     R3,#BYTE2 0800341H
80B1F1 7A03              MOV     R2,#HIGH 0800341H
80B1F3 7941              MOV     R1,#LOW 0800341H
80B1F5 7E00              MOV     R6,#00H
80B1F7 7F05              MOV     R7,#05H
80B1F9 A51280052D        ECALL   ?C?COPY
 1173: 			len += 5;			
80B1FE 901644            MOV     DPTR,#len
80B201 E4                CLR     A
80B202 75F005            MOV     B,#05H
80B205 A512800600        ECALL   ?C?IILDX
 1174: 			m_SMSMessage[len++] = '\r';	
80B20A 901644            MOV     DPTR,#len
80B20D E4                CLR     A
80B20E 75F001            MOV     B,#01H
80B211 A512800617        ECALL   ?C?ILDIX
80B216 FE                MOV     R6,A
80B217 74A4              MOV     A,#LOW m_SMSMessage
80B219 25F0              ADD     A,B
80B21B F582              MOV     DPL,A
80B21D 7415              MOV     A,#HIGH m_SMSMessage
80B21F 3E                ADDC    A,R6
80B220 F583              MOV     DPH,A
80B222 740D              MOV     A,#0DH
80B224 F0                MOVX    @DPTR,A
 1175: 			flag |= 0x01;			
80B225 901646            MOV     DPTR,#flag
80B228 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 425


80B229 4401              ORL     A,#01H
80B22B F0                MOVX    @DPTR,A
 1176: 		}
 1177: 	}	
80B22C         ?C0273?MAINFLOW:
 1178: 	
 1179: 	//硬币器
 1180: 	if( DeviceStatus.CoinAccepter != 0 )		
80B22C 900B1C            MOV     DPTR,#DeviceStatus+01H
80B22F E0                MOVX    A,@DPTR
80B230 604D              JZ      ?C0275?MAINFLOW
 1181: 	{
 1182: 		Trace( "\n ScanIsSendAlarm coin error");
 1183: 		//还没有发送报警,准备发送
 1184: 		memcpy( m_SMSMessage + len, "A0110", 5 );
80B232 901644            MOV     DPTR,#len
80B235 A3                INC     DPTR
80B236 E0                MOVX    A,@DPTR
80B237 24A4              ADD     A,#LOW m_SMSMessage
80B239 F9                MOV     R1,A
80B23A E4                CLR     A
80B23B 3415              ADDC    A,#HIGH m_SMSMessage
80B23D A801              MOV     R0,AR1
80B23F FC                MOV     R4,A
80B240 7D00              MOV     R5,#?C?XDATASEG
80B242 7B80              MOV     R3,#BYTE2 0800347H
80B244 7A03              MOV     R2,#HIGH 0800347H
80B246 7947              MOV     R1,#LOW 0800347H
80B248 7E00              MOV     R6,#00H
80B24A 7F05              MOV     R7,#05H
80B24C A51280052D        ECALL   ?C?COPY
 1185: 		len += 5;
80B251 901644            MOV     DPTR,#len
80B254 E4                CLR     A
80B255 75F005            MOV     B,#05H
80B258 A512800600        ECALL   ?C?IILDX
 1186: 		m_SMSMessage[len++] = '\r';	
80B25D 901644            MOV     DPTR,#len
80B260 E4                CLR     A
80B261 75F001            MOV     B,#01H
80B264 A512800617        ECALL   ?C?ILDIX
80B269 FE                MOV     R6,A
80B26A 74A4              MOV     A,#LOW m_SMSMessage
80B26C 25F0              ADD     A,B
80B26E F582              MOV     DPL,A
80B270 7415              MOV     A,#HIGH m_SMSMessage
80B272 3E                ADDC    A,R6
80B273 F583              MOV     DPH,A
80B275 740D              MOV     A,#0DH
80B277 F0                MOVX    @DPTR,A
 1187: 		flag |= 0x01;		
80B278 901646            MOV     DPTR,#flag
80B27B E0                MOVX    A,@DPTR
80B27C 4401              ORL     A,#01H
80B27E F0                MOVX    @DPTR,A
 1188: 	}	
80B27F         ?C0275?MAINFLOW:
 1189: 
 1190: 	//HOPPER1
 1191: 	//flag的bit7表示已添加了一种HOPPER故障，扫描其它HOPPER则重置它	
 1192: 	memset( str1, 0, sizeof( str1 ) );
80B27F 7E00              MOV     R6,#00H
80B281 7F06              MOV     R7,#06H
80B283 7D00              MOV     R5,#00H
80B285 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 426


80B287 7A15              MOV     R2,#HIGH str1
80B289 799E              MOV     R1,#LOW str1
80B28B A5128008A6        ECALL   ?C?MEMSET
 1193: 	flag &= 0x7f;
80B290 901646            MOV     DPTR,#flag
80B293 E0                MOVX    A,@DPTR
80B294 547F              ANL     A,#07FH
80B296 F0                MOVX    @DPTR,A
 1194: 	if( ( SystemParameter.HopperCoinPrice1 ) != 0 )
80B297 900421            MOV     DPTR,#SystemParameter+01H
80B29A E0                MOVX    A,@DPTR
80B29B 7002              JNZ     ?C1019?MAINFLOW
80B29D A3                INC     DPTR
80B29E E0                MOVX    A,@DPTR
80B29F         ?C1019?MAINFLOW:
80B29F 7003              JNZ     $ + 5H
80B2A1 02B340            LJMP    ?C0276?MAINFLOW
 1195: 	{
 1196: 		if( ( DeviceStatus.ChangeUnit1 & 0x01 ) == 0x01 )
80B2A4 900B1D            MOV     DPTR,#DeviceStatus+02H
80B2A7 E0                MOVX    A,@DPTR
80B2A8 30E013            JNB     ACC.0,?C0277?MAINFLOW
 1197: 		{
 1198: 			Trace( "\n ScanIsSendAlarm hopper1 error");
 1199: 			//HOPPER故障,还没有发送报警,准备发送
 1200: 			strcpy( str1,"D0110");			
80B2AB 789E              MOV     R0,#LOW str1
80B2AD 7C15              MOV     R4,#HIGH str1
80B2AF 7D00              MOV     R5,#?C?XDATASEG
80B2B1 7B80              MOV     R3,#BYTE2 080034DH
80B2B3 7A03              MOV     R2,#HIGH 080034DH
80B2B5 794D              MOV     R1,#LOW 080034DH
80B2B7 A512800854        ECALL   ?C?STRCPY
 1201: 			flag |= 0x80;			
 1202: 		}
80B2BC 8027              SJMP    ?C1064?MAINFLOW
80B2BE         ?C0277?MAINFLOW:
 1203: 		else if( ( DeviceStatus.ChangeUnit1 & 0x02 ) == 0x02 ) 
80B2BE 900B1D            MOV     DPTR,#DeviceStatus+02H
80B2C1 E0                MOVX    A,@DPTR
80B2C2 30E127            JNB     ACC.1,?C0278?MAINFLOW
 1204: 		{
 1205: 			//缺币, 还没有发送报警,准备发送
 1206: 			if( ( flag & 0x80 ) == 0x80 )			
80B2C5 901646            MOV     DPTR,#flag
80B2C8 E0                MOVX    A,@DPTR
80B2C9 789E              MOV     R0,#LOW str1
80B2CB 7C15              MOV     R4,#HIGH str1
80B2CD 7D00              MOV     R5,#?C?XDATASEG
80B2CF 30E708            JNB     ACC.7,?C0280?MAINFLOW
 1207: 				//已记录了一条故障
 1208: 				strcpy( str1,"D0111");						
80B2D2 7B80              MOV     R3,#BYTE2 0800353H
80B2D4 7A03              MOV     R2,#HIGH 0800353H
80B2D6 7953              MOV     R1,#LOW 0800353H
80B2D8 8006              SJMP    ?C1065?MAINFLOW
80B2DA         ?C0280?MAINFLOW:
 1209: 			else
 1210: 				strcpy( str1,"D0101");
80B2DA 7B80              MOV     R3,#BYTE2 0800359H
80B2DC 7A03              MOV     R2,#HIGH 0800359H
80B2DE 7959              MOV     R1,#LOW 0800359H
80B2E0         
80B2E0 A512800854        ECALL   ?C?STRCPY
80B2E5         ?C0281?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 427


 1211: 			flag |= 0x80;			
80B2E5         
80B2E5 901646            MOV     DPTR,#flag
80B2E8 E0                MOVX    A,@DPTR
80B2E9 4480              ORL     A,#080H
80B2EB F0                MOVX    @DPTR,A
 1212: 		}
80B2EC         ?C0278?MAINFLOW:
 1213: 		if( ( flag & 0x80 ) == 0x80 )
80B2EC 901646            MOV     DPTR,#flag
80B2EF E0                MOVX    A,@DPTR
80B2F0 30E74D            JNB     ACC.7,?C0276?MAINFLOW
 1214: 		{
 1215: 			memcpy( m_SMSMessage + len, str1, 5 );
80B2F3 901644            MOV     DPTR,#len
80B2F6 A3                INC     DPTR
80B2F7 E0                MOVX    A,@DPTR
80B2F8 24A4              ADD     A,#LOW m_SMSMessage
80B2FA F9                MOV     R1,A
80B2FB E4                CLR     A
80B2FC 3415              ADDC    A,#HIGH m_SMSMessage
80B2FE A801              MOV     R0,AR1
80B300 FC                MOV     R4,A
80B301 7D00              MOV     R5,#?C?XDATASEG
80B303 7B00              MOV     R3,#?C?XDATASEG
80B305 7A15              MOV     R2,#HIGH str1
80B307 799E              MOV     R1,#LOW str1
80B309 7E00              MOV     R6,#00H
80B30B 7F05              MOV     R7,#05H
80B30D A51280052D        ECALL   ?C?COPY
 1216: 			len += 5;	
80B312 901644            MOV     DPTR,#len
80B315 E4                CLR     A
80B316 75F005            MOV     B,#05H
80B319 A512800600        ECALL   ?C?IILDX
 1217: 			m_SMSMessage[len++] = '\r';	
80B31E 901644            MOV     DPTR,#len
80B321 E4                CLR     A
80B322 75F001            MOV     B,#01H
80B325 A512800617        ECALL   ?C?ILDIX
80B32A FE                MOV     R6,A
80B32B 74A4              MOV     A,#LOW m_SMSMessage
80B32D 25F0              ADD     A,B
80B32F F582              MOV     DPL,A
80B331 7415              MOV     A,#HIGH m_SMSMessage
80B333 3E                ADDC    A,R6
80B334 F583              MOV     DPH,A
80B336 740D              MOV     A,#0DH
80B338 F0                MOVX    @DPTR,A
 1218: 			flag |= 0x01;
80B339 901646            MOV     DPTR,#flag
80B33C E0                MOVX    A,@DPTR
80B33D 4401              ORL     A,#01H
80B33F F0                MOVX    @DPTR,A
 1219: 		}
 1220: 	}
80B340         ?C0276?MAINFLOW:
 1221: 	
 1222: 	memset( str1, 0, sizeof( str1 ) );
80B340 7E00              MOV     R6,#00H
80B342 7F06              MOV     R7,#06H
80B344 7D00              MOV     R5,#00H
80B346 7B00              MOV     R3,#?C?XDATASEG
80B348 7A15              MOV     R2,#HIGH str1
80B34A 799E              MOV     R1,#LOW str1
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 428


80B34C A5128008A6        ECALL   ?C?MEMSET
 1223: 	flag &= 0x7f;
80B351 901646            MOV     DPTR,#flag
80B354 E0                MOVX    A,@DPTR
80B355 547F              ANL     A,#07FH
80B357 F0                MOVX    @DPTR,A
 1224: 	//HOPPER2
 1225: 	if( SystemParameter.HopperCoinPrice2 != 0 )
80B358 900423            MOV     DPTR,#SystemParameter+03H
80B35B E0                MOVX    A,@DPTR
80B35C 7002              JNZ     ?C1020?MAINFLOW
80B35E A3                INC     DPTR
80B35F E0                MOVX    A,@DPTR
80B360         ?C1020?MAINFLOW:
80B360 7003              JNZ     $ + 5H
80B362 02B401            LJMP    ?C0283?MAINFLOW
 1226: 	{
 1227: 		if( ( DeviceStatus.ChangeUnit2 & 0x01 ) == 0x01 ) 
80B365 900B1E            MOV     DPTR,#DeviceStatus+03H
80B368 E0                MOVX    A,@DPTR
80B369 30E013            JNB     ACC.0,?C0284?MAINFLOW
 1228: 		{
 1229: 			Trace( "\n ScanIsSendAlarm hopper2 error");
 1230: 			//还没有发送报警,准备发送
 1231: 			strcpy( str1,"D0210");			
80B36C 789E              MOV     R0,#LOW str1
80B36E 7C15              MOV     R4,#HIGH str1
80B370 7D00              MOV     R5,#?C?XDATASEG
80B372 7B80              MOV     R3,#BYTE2 080035FH
80B374 7A03              MOV     R2,#HIGH 080035FH
80B376 795F              MOV     R1,#LOW 080035FH
80B378 A512800854        ECALL   ?C?STRCPY
 1232: 			flag |= 0x80;			
 1233: 		}
80B37D 8027              SJMP    ?C1066?MAINFLOW
80B37F         ?C0284?MAINFLOW:
 1234: 		else if( ( DeviceStatus.ChangeUnit2 & 0x02 ) == 0x02 ) 
80B37F 900B1E            MOV     DPTR,#DeviceStatus+03H
80B382 E0                MOVX    A,@DPTR
80B383 30E127            JNB     ACC.1,?C0285?MAINFLOW
 1235: 		{
 1236: 			//还没有发送报警,准备发送
 1237: 			if( ( flag & 0x80 ) == 0x80 )			
80B386 901646            MOV     DPTR,#flag
80B389 E0                MOVX    A,@DPTR
80B38A 789E              MOV     R0,#LOW str1
80B38C 7C15              MOV     R4,#HIGH str1
80B38E 7D00              MOV     R5,#?C?XDATASEG
80B390 30E708            JNB     ACC.7,?C0287?MAINFLOW
 1238: 				//已记录了一条故障
 1239: 				strcpy( str1,"D0211");						
80B393 7B80              MOV     R3,#BYTE2 0800365H
80B395 7A03              MOV     R2,#HIGH 0800365H
80B397 7965              MOV     R1,#LOW 0800365H
80B399 8006              SJMP    ?C1067?MAINFLOW
80B39B         ?C0287?MAINFLOW:
 1240: 			else
 1241: 				strcpy( str1,"D0201");
80B39B 7B80              MOV     R3,#BYTE2 080036BH
80B39D 7A03              MOV     R2,#HIGH 080036BH
80B39F 796B              MOV     R1,#LOW 080036BH
80B3A1         
80B3A1 A512800854        ECALL   ?C?STRCPY
80B3A6         ?C0288?MAINFLOW:
 1242: 			flag |= 0x80;			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 429


80B3A6         
80B3A6 901646            MOV     DPTR,#flag
80B3A9 E0                MOVX    A,@DPTR
80B3AA 4480              ORL     A,#080H
80B3AC F0                MOVX    @DPTR,A
 1243: 		}
80B3AD         ?C0285?MAINFLOW:
 1244: 		if( ( flag & 0x80 ) == 0x80 )
80B3AD 901646            MOV     DPTR,#flag
80B3B0 E0                MOVX    A,@DPTR
80B3B1 30E74D            JNB     ACC.7,?C0283?MAINFLOW
 1245: 		{
 1246: 			memcpy( m_SMSMessage + len, str1, 5 );
80B3B4 901644            MOV     DPTR,#len
80B3B7 A3                INC     DPTR
80B3B8 E0                MOVX    A,@DPTR
80B3B9 24A4              ADD     A,#LOW m_SMSMessage
80B3BB F9                MOV     R1,A
80B3BC E4                CLR     A
80B3BD 3415              ADDC    A,#HIGH m_SMSMessage
80B3BF A801              MOV     R0,AR1
80B3C1 FC                MOV     R4,A
80B3C2 7D00              MOV     R5,#?C?XDATASEG
80B3C4 7B00              MOV     R3,#?C?XDATASEG
80B3C6 7A15              MOV     R2,#HIGH str1
80B3C8 799E              MOV     R1,#LOW str1
80B3CA 7E00              MOV     R6,#00H
80B3CC 7F05              MOV     R7,#05H
80B3CE A51280052D        ECALL   ?C?COPY
 1247: 			len += 5;
80B3D3 901644            MOV     DPTR,#len
80B3D6 E4                CLR     A
80B3D7 75F005            MOV     B,#05H
80B3DA A512800600        ECALL   ?C?IILDX
 1248: 			m_SMSMessage[len++] = '\r';			
80B3DF 901644            MOV     DPTR,#len
80B3E2 E4                CLR     A
80B3E3 75F001            MOV     B,#01H
80B3E6 A512800617        ECALL   ?C?ILDIX
80B3EB FE                MOV     R6,A
80B3EC 74A4              MOV     A,#LOW m_SMSMessage
80B3EE 25F0              ADD     A,B
80B3F0 F582              MOV     DPL,A
80B3F2 7415              MOV     A,#HIGH m_SMSMessage
80B3F4 3E                ADDC    A,R6
80B3F5 F583              MOV     DPH,A
80B3F7 740D              MOV     A,#0DH
80B3F9 F0                MOVX    @DPTR,A
 1249: 			flag |= 0x01;
80B3FA 901646            MOV     DPTR,#flag
80B3FD E0                MOVX    A,@DPTR
80B3FE 4401              ORL     A,#01H
80B400 F0                MOVX    @DPTR,A
 1250: 		}
 1251: 	}	
80B401         ?C0283?MAINFLOW:
 1252: 
 1253: 	memset( str1, 0, sizeof( str1 ) );
80B401 7E00              MOV     R6,#00H
80B403 7F06              MOV     R7,#06H
80B405 7D00              MOV     R5,#00H
80B407 7B00              MOV     R3,#?C?XDATASEG
80B409 7A15              MOV     R2,#HIGH str1
80B40B 799E              MOV     R1,#LOW str1
80B40D A5128008A6        ECALL   ?C?MEMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 430


 1254: 	flag &= 0x7f;
80B412 901646            MOV     DPTR,#flag
80B415 E0                MOVX    A,@DPTR
80B416 547F              ANL     A,#07FH
80B418 F0                MOVX    @DPTR,A
 1255: 	//HOPPER3
 1256: 	if( SystemParameter.HopperCoinPrice3 != 0 )
80B419 900425            MOV     DPTR,#SystemParameter+05H
80B41C E0                MOVX    A,@DPTR
80B41D 7002              JNZ     ?C1021?MAINFLOW
80B41F A3                INC     DPTR
80B420 E0                MOVX    A,@DPTR
80B421         ?C1021?MAINFLOW:
80B421 7003              JNZ     $ + 5H
80B423 02B4C2            LJMP    ?C0290?MAINFLOW
 1257: 	{		
 1258: 		if( ( DeviceStatus.ChangeUnit3 & 0x01 ) == 0x01 )
80B426 900B1F            MOV     DPTR,#DeviceStatus+04H
80B429 E0                MOVX    A,@DPTR
80B42A 30E013            JNB     ACC.0,?C0291?MAINFLOW
 1259: 		{
 1260: 			Trace( "\n ScanIsSendAlarm hopper3 error");
 1261: 			//还没有发送报警,准备发送
 1262: 			strcpy( str1,"D0310");			
80B42D 789E              MOV     R0,#LOW str1
80B42F 7C15              MOV     R4,#HIGH str1
80B431 7D00              MOV     R5,#?C?XDATASEG
80B433 7B80              MOV     R3,#BYTE2 0800371H
80B435 7A03              MOV     R2,#HIGH 0800371H
80B437 7971              MOV     R1,#LOW 0800371H
80B439 A512800854        ECALL   ?C?STRCPY
 1263: 			flag |= 0x80;			
 1264: 		}
80B43E 8027              SJMP    ?C1068?MAINFLOW
80B440         ?C0291?MAINFLOW:
 1265: 		else if( ( DeviceStatus.ChangeUnit3 & 0x02 ) == 0x02 ) 
80B440 900B1F            MOV     DPTR,#DeviceStatus+04H
80B443 E0                MOVX    A,@DPTR
80B444 30E127            JNB     ACC.1,?C0292?MAINFLOW
 1266: 		{
 1267: 			//还没有发送报警,准备发送
 1268: 			if( ( flag & 0x80 ) == 0x80 )			
80B447 901646            MOV     DPTR,#flag
80B44A E0                MOVX    A,@DPTR
80B44B 789E              MOV     R0,#LOW str1
80B44D 7C15              MOV     R4,#HIGH str1
80B44F 7D00              MOV     R5,#?C?XDATASEG
80B451 30E708            JNB     ACC.7,?C0294?MAINFLOW
 1269: 				//已记录了一条故障
 1270: 				strcpy( str1,"D0311");						
80B454 7B80              MOV     R3,#BYTE2 0800377H
80B456 7A03              MOV     R2,#HIGH 0800377H
80B458 7977              MOV     R1,#LOW 0800377H
80B45A 8006              SJMP    ?C1069?MAINFLOW
80B45C         ?C0294?MAINFLOW:
 1271: 			else
 1272: 				strcpy( str1,"D0301");
80B45C 7B80              MOV     R3,#BYTE2 080037DH
80B45E 7A03              MOV     R2,#HIGH 080037DH
80B460 797D              MOV     R1,#LOW 080037DH
80B462         
80B462 A512800854        ECALL   ?C?STRCPY
80B467         ?C0295?MAINFLOW:
 1273: 			flag |= 0x80;			
80B467         
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 431


80B467 901646            MOV     DPTR,#flag
80B46A E0                MOVX    A,@DPTR
80B46B 4480              ORL     A,#080H
80B46D F0                MOVX    @DPTR,A
 1274: 		}
80B46E         ?C0292?MAINFLOW:
 1275: 		if( ( flag & 0x80 ) == 0x80 )
80B46E 901646            MOV     DPTR,#flag
80B471 E0                MOVX    A,@DPTR
80B472 30E74D            JNB     ACC.7,?C0290?MAINFLOW
 1276: 		{
 1277: 			memcpy( m_SMSMessage + len, str1, 5 );
80B475 901644            MOV     DPTR,#len
80B478 A3                INC     DPTR
80B479 E0                MOVX    A,@DPTR
80B47A 24A4              ADD     A,#LOW m_SMSMessage
80B47C F9                MOV     R1,A
80B47D E4                CLR     A
80B47E 3415              ADDC    A,#HIGH m_SMSMessage
80B480 A801              MOV     R0,AR1
80B482 FC                MOV     R4,A
80B483 7D00              MOV     R5,#?C?XDATASEG
80B485 7B00              MOV     R3,#?C?XDATASEG
80B487 7A15              MOV     R2,#HIGH str1
80B489 799E              MOV     R1,#LOW str1
80B48B 7E00              MOV     R6,#00H
80B48D 7F05              MOV     R7,#05H
80B48F A51280052D        ECALL   ?C?COPY
 1278: 			len += 5;
80B494 901644            MOV     DPTR,#len
80B497 E4                CLR     A
80B498 75F005            MOV     B,#05H
80B49B A512800600        ECALL   ?C?IILDX
 1279: 			m_SMSMessage[len++] = '\r';	
80B4A0 901644            MOV     DPTR,#len
80B4A3 E4                CLR     A
80B4A4 75F001            MOV     B,#01H
80B4A7 A512800617        ECALL   ?C?ILDIX
80B4AC FE                MOV     R6,A
80B4AD 74A4              MOV     A,#LOW m_SMSMessage
80B4AF 25F0              ADD     A,B
80B4B1 F582              MOV     DPL,A
80B4B3 7415              MOV     A,#HIGH m_SMSMessage
80B4B5 3E                ADDC    A,R6
80B4B6 F583              MOV     DPH,A
80B4B8 740D              MOV     A,#0DH
80B4BA F0                MOVX    @DPTR,A
 1280: 			flag |= 0x01;
80B4BB 901646            MOV     DPTR,#flag
80B4BE E0                MOVX    A,@DPTR
80B4BF 4401              ORL     A,#01H
80B4C1 F0                MOVX    @DPTR,A
 1281: 		}
 1282: 	}	
80B4C2         ?C0290?MAINFLOW:
 1283: 	
 1284: 	memset( str1, 0, sizeof( str1 ) );
80B4C2 7E00              MOV     R6,#00H
80B4C4 7F06              MOV     R7,#06H
80B4C6 7D00              MOV     R5,#00H
80B4C8 7B00              MOV     R3,#?C?XDATASEG
80B4CA 7A15              MOV     R2,#HIGH str1
80B4CC 799E              MOV     R1,#LOW str1
80B4CE A5128008A6        ECALL   ?C?MEMSET
 1285: 	flag &= 0x7f;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 432


80B4D3 901646            MOV     DPTR,#flag
80B4D6 E0                MOVX    A,@DPTR
80B4D7 547F              ANL     A,#07FH
80B4D9 F0                MOVX    @DPTR,A
 1286: 	////货道扫描	
 1287: 	if( ( HardWareErr & 0x0010 ) == 0x0010 ) 
80B4DA 900485            MOV     DPTR,#HardWareErr+01H
80B4DD E0                MOVX    A,@DPTR
80B4DE 30E44D            JNB     ACC.4,?C0297?MAINFLOW
 1288: 	{
 1289: 		Trace( "\n ScanIsSendAlarm colunm out all error");
 1290: 		//都无货
 1291: 		memcpy( m_SMSMessage+len, "C0001", 5 );
80B4E1 901644            MOV     DPTR,#len
80B4E4 A3                INC     DPTR
80B4E5 E0                MOVX    A,@DPTR
80B4E6 24A4              ADD     A,#LOW m_SMSMessage
80B4E8 F9                MOV     R1,A
80B4E9 E4                CLR     A
80B4EA 3415              ADDC    A,#HIGH m_SMSMessage
80B4EC A801              MOV     R0,AR1
80B4EE FC                MOV     R4,A
80B4EF 7D00              MOV     R5,#?C?XDATASEG
80B4F1 7B80              MOV     R3,#BYTE2 0800383H
80B4F3 7A03              MOV     R2,#HIGH 0800383H
80B4F5 7983              MOV     R1,#LOW 0800383H
80B4F7 7E00              MOV     R6,#00H
80B4F9 7F05              MOV     R7,#05H
80B4FB A51280052D        ECALL   ?C?COPY
 1292: 		len  += 5;
80B500 901644            MOV     DPTR,#len
80B503 E4                CLR     A
80B504 75F005            MOV     B,#05H
80B507 A512800600        ECALL   ?C?IILDX
 1293: 		m_SMSMessage[len++] = '\r';	
80B50C 901644            MOV     DPTR,#len
80B50F E4                CLR     A
80B510 75F001            MOV     B,#01H
80B513 A512800617        ECALL   ?C?ILDIX
80B518 FE                MOV     R6,A
80B519 74A4              MOV     A,#LOW m_SMSMessage
80B51B 25F0              ADD     A,B
80B51D F582              MOV     DPL,A
80B51F 7415              MOV     A,#HIGH m_SMSMessage
80B521 3E                ADDC    A,R6
80B522 F583              MOV     DPH,A
80B524 740D              MOV     A,#0DH
80B526 F0                MOVX    @DPTR,A
 1294: 		flag |= 0x01;		
80B527 901646            MOV     DPTR,#flag
80B52A E0                MOVX    A,@DPTR
80B52B 4401              ORL     A,#01H
80B52D F0                MOVX    @DPTR,A
 1295: 	}
80B52E         ?C0297?MAINFLOW:
 1296: 	
 1297: 	if( ( HardWareErr & 0x0020 ) == 0x0020 ) 
80B52E 900485            MOV     DPTR,#HardWareErr+01H
80B531 E0                MOVX    A,@DPTR
80B532 30E54D            JNB     ACC.5,?C0298?MAINFLOW
 1298: 	{
 1299: 		Trace( "\n ScanIsSendAlarm colunm all error");
 1300: 		//都故障
 1301: 		memcpy( m_SMSMessage+len, "C0010", 5 );
80B535 901644            MOV     DPTR,#len
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 433


80B538 A3                INC     DPTR
80B539 E0                MOVX    A,@DPTR
80B53A 24A4              ADD     A,#LOW m_SMSMessage
80B53C F9                MOV     R1,A
80B53D E4                CLR     A
80B53E 3415              ADDC    A,#HIGH m_SMSMessage
80B540 A801              MOV     R0,AR1
80B542 FC                MOV     R4,A
80B543 7D00              MOV     R5,#?C?XDATASEG
80B545 7B80              MOV     R3,#BYTE2 0800389H
80B547 7A03              MOV     R2,#HIGH 0800389H
80B549 7989              MOV     R1,#LOW 0800389H
80B54B 7E00              MOV     R6,#00H
80B54D 7F05              MOV     R7,#05H
80B54F A51280052D        ECALL   ?C?COPY
 1302: 		len  += 5;
80B554 901644            MOV     DPTR,#len
80B557 E4                CLR     A
80B558 75F005            MOV     B,#05H
80B55B A512800600        ECALL   ?C?IILDX
 1303: 		m_SMSMessage[len++] = '\r';	
80B560 901644            MOV     DPTR,#len
80B563 E4                CLR     A
80B564 75F001            MOV     B,#01H
80B567 A512800617        ECALL   ?C?ILDIX
80B56C FE                MOV     R6,A
80B56D 74A4              MOV     A,#LOW m_SMSMessage
80B56F 25F0              ADD     A,B
80B571 F582              MOV     DPL,A
80B573 7415              MOV     A,#HIGH m_SMSMessage
80B575 3E                ADDC    A,R6
80B576 F583              MOV     DPH,A
80B578 740D              MOV     A,#0DH
80B57A F0                MOVX    @DPTR,A
 1304: 		flag |= 0x01;		
80B57B 901646            MOV     DPTR,#flag
80B57E E0                MOVX    A,@DPTR
80B57F 4401              ORL     A,#01H
80B581 F0                MOVX    @DPTR,A
 1305: 	}
80B582         ?C0298?MAINFLOW:
 1306: 	
 1307: 	for( i = 0; i < GOODSWAYNUM; i ++ )
80B582 E4                CLR     A
80B583 901647            MOV     DPTR,#i
80B586 F0                MOVX    @DPTR,A
80B587         ?C0299?MAINFLOW:
80B587 901647            MOV     DPTR,#i
80B58A E0                MOVX    A,@DPTR
80B58B FF                MOV     R7,A
80B58C C3                CLR     C
80B58D 9440              SUBB    A,#040H
80B58F 4003              JC      $ + 5H
80B591 02B72E            LJMP    ?C0300?MAINFLOW
 1308: 	{
 1309: 		if( GoodsWaySetVal[i].WayNo == 0 )
80B594 75F005            MOV     B,#05H
80B597 EF                MOV     A,R7
80B598 900004            MOV     DPTR,#GoodsWaySetVal
80B59B A51280079F        ECALL   ?C?OFFXADD
80B5A0 E0                MOVX    A,@DPTR
80B5A1 7003              JNZ     $ + 5H
80B5A3 02B725            LJMP    ?C0301?MAINFLOW
 1310: 			continue;
80B5A6         ?C0302?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 434


 1311: 		if( ( GoodsWaySetVal[i].WayState & 0x01 ) != 0x01 )
80B5A6 901647            MOV     DPTR,#i
80B5A9 E0                MOVX    A,@DPTR
80B5AA 75F005            MOV     B,#05H
80B5AD 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B5B0 A51280079F        ECALL   ?C?OFFXADD
80B5B5 E0                MOVX    A,@DPTR
80B5B6 FF                MOV     R7,A
80B5B7 20E003            JB      ACC.0,$ + 6H
80B5BA 02B725            LJMP    ?C0301?MAINFLOW
 1312: 	    	continue;
80B5BD         ?C0303?MAINFLOW:
 1313: //		Trace( "\n GoodsWaySetVal[%bu].WayState = %bu", i, GoodsWaySetVal[i].WayState );
 1314: 		 //货道正常了
 1315: 		if( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 )
80B5BD EF                MOV     A,R7
80B5BE 540A              ANL     A,#0AH
80B5C0 7013              JNZ     ?C0304?MAINFLOW
 1316: 		 	 GoodsWaySetVal[i].WayState &= 0xbf;//重置bit6
80B5C2 901647            MOV     DPTR,#i
80B5C5 E0                MOVX    A,@DPTR
80B5C6 75F005            MOV     B,#05H
80B5C9 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B5CC A51280079F        ECALL   ?C?OFFXADD
80B5D1 E0                MOVX    A,@DPTR
80B5D2 54BF              ANL     A,#0BFH
80B5D4 F0                MOVX    @DPTR,A
80B5D5         ?C0304?MAINFLOW:
 1317: 		//货道有货了
 1318: 		if( GoodsWaySetVal[i].GoodsCurrentSum != 0 )
80B5D5 901647            MOV     DPTR,#i
80B5D8 E0                MOVX    A,@DPTR
80B5D9 FF                MOV     R7,A
80B5DA 75F005            MOV     B,#05H
80B5DD 900008            MOV     DPTR,#GoodsWaySetVal+04H
80B5E0 A51280079F        ECALL   ?C?OFFXADD
80B5E5 E0                MOVX    A,@DPTR
80B5E6 6010              JZ      ?C0305?MAINFLOW
 1319: 		 	GoodsWaySetVal[i].WayState &= 0xdf;	//重置bit5
80B5E8 75F005            MOV     B,#05H
80B5EB EF                MOV     A,R7
80B5EC 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B5EF A51280079F        ECALL   ?C?OFFXADD
80B5F4 E0                MOVX    A,@DPTR
80B5F5 54DF              ANL     A,#0DFH
80B5F7 F0                MOVX    @DPTR,A
80B5F8         ?C0305?MAINFLOW:
 1320: 		 	flag &= 0x01;
80B5F8 901646            MOV     DPTR,#flag
80B5FB E0                MOVX    A,@DPTR
80B5FC 5401              ANL     A,#01H
80B5FE F0                MOVX    @DPTR,A
 1321: 		if(  ( GoodsWaySetVal[i].WayState & 0x02 ) == 0x02 )			
80B5FF A3                INC     DPTR
80B600 E0                MOVX    A,@DPTR
80B601 FD                MOV     R5,A
80B602 75F005            MOV     B,#05H
80B605 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B608 A51280079F        ECALL   ?C?OFFXADD
80B60D E0                MOVX    A,@DPTR
80B60E 30E107            JNB     ACC.1,?C0306?MAINFLOW
 1322: 			//货道故障				
 1323: 			flag |= 0x20;//bit5			
80B611 901646            MOV     DPTR,#flag
80B614 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 435


80B615 4420              ORL     A,#020H
80B617 F0                MOVX    @DPTR,A
80B618         ?C0306?MAINFLOW:
 1324: 		if( GoodsWaySetVal[i].GoodsCurrentSum == 0 )
80B618 75F005            MOV     B,#05H
80B61B ED                MOV     A,R5
80B61C 900008            MOV     DPTR,#GoodsWaySetVal+04H
80B61F A51280079F        ECALL   ?C?OFFXADD
80B624 E0                MOVX    A,@DPTR
80B625 7007              JNZ     ?C0307?MAINFLOW
 1325: 			flag |= 0x10;//bit4			
80B627 901646            MOV     DPTR,#flag
80B62A E0                MOVX    A,@DPTR
80B62B 4410              ORL     A,#010H
80B62D F0                MOVX    @DPTR,A
80B62E         ?C0307?MAINFLOW:
 1326: 		if( ( flag & 0x30 ) != 0 )
80B62E 901646            MOV     DPTR,#flag
80B631 E0                MOVX    A,@DPTR
80B632 5430              ANL     A,#030H
80B634 7003              JNZ     $ + 5H
80B636 02B725            LJMP    ?C0301?MAINFLOW
 1327: 		{
 1328: //			Trace( "\n GoodsWaySetVal[%bu].WayNo = %bu error", i, GoodsWaySetVal[i].WayNo );
 1329: 			memset( str1, 0, sizeof( str1 ) );
80B639 7E00              MOV     R6,#00H
80B63B 7F06              MOV     R7,#06H
80B63D 7D00              MOV     R5,#00H
80B63F 7B00              MOV     R3,#?C?XDATASEG
80B641 7A15              MOV     R2,#HIGH str1
80B643 799E              MOV     R1,#LOW str1
80B645 A5128008A6        ECALL   ?C?MEMSET
 1330: 			sprintf( str1, "C%02bu00", GoodsWaySetVal[i].WayNo );			
80B64A 7B80              MOV     R3,#BYTE2 080038FH
80B64C 7A03              MOV     R2,#HIGH 080038FH
80B64E 798F              MOV     R1,#LOW 080038FH
80B650 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80B653 A5128007B6        ECALL   ?C?PSTXDATA
80B658 901647            MOV     DPTR,#i
80B65B E0                MOVX    A,@DPTR
80B65C 75F005            MOV     B,#05H
80B65F 900004            MOV     DPTR,#GoodsWaySetVal
80B662 A51280079F        ECALL   ?C?OFFXADD
80B667 E0                MOVX    A,@DPTR
80B668 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80B66B F0                MOVX    @DPTR,A
80B66C 7B00              MOV     R3,#?C?XDATASEG
80B66E 7A15              MOV     R2,#HIGH str1
80B670 799E              MOV     R1,#LOW str1
80B672 A512800949        ECALL   _sprintf
 1331: 			if( ( flag & 0x20 ) == 0x20 )
80B677 901646            MOV     DPTR,#flag
80B67A E0                MOVX    A,@DPTR
80B67B FF                MOV     R7,A
80B67C 30E506            JNB     ACC.5,?C0309?MAINFLOW
 1332: 			{
 1333: 				//故障
 1334: 				str1[3] = '1';				
80B67F 9015A1            MOV     DPTR,#str1+03H
80B682 7431              MOV     A,#031H
80B684 F0                MOVX    @DPTR,A
 1335: 			}				
80B685         ?C0309?MAINFLOW:
 1336: 			if( ( flag & 0x10 ) == 0x10 ) 
80B685 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 436


80B686 30E406            JNB     ACC.4,?C0310?MAINFLOW
 1337: 			{
 1338: 				//缺货
 1339: 				str1[4] = '1';				
80B689 9015A2            MOV     DPTR,#str1+04H
80B68C 7431              MOV     A,#031H
80B68E F0                MOVX    @DPTR,A
 1340: 			}		
80B68F         ?C0310?MAINFLOW:
 1341: 			memcpy( m_SMSMessage + len, str1, 5 );
80B68F 901644            MOV     DPTR,#len
80B692 A3                INC     DPTR
80B693 E0                MOVX    A,@DPTR
80B694 24A4              ADD     A,#LOW m_SMSMessage
80B696 F9                MOV     R1,A
80B697 E4                CLR     A
80B698 3415              ADDC    A,#HIGH m_SMSMessage
80B69A A801              MOV     R0,AR1
80B69C FC                MOV     R4,A
80B69D 7D00              MOV     R5,#?C?XDATASEG
80B69F 7B00              MOV     R3,#?C?XDATASEG
80B6A1 7A15              MOV     R2,#HIGH str1
80B6A3 799E              MOV     R1,#LOW str1
80B6A5 7E00              MOV     R6,#00H
80B6A7 7F05              MOV     R7,#05H
80B6A9 A51280052D        ECALL   ?C?COPY
 1342: 			len += 5;
80B6AE 901644            MOV     DPTR,#len
80B6B1 E4                CLR     A
80B6B2 75F005            MOV     B,#05H
80B6B5 A512800600        ECALL   ?C?IILDX
 1343: 			m_SMSMessage[len++] = '\r';
80B6BA 901644            MOV     DPTR,#len
80B6BD E4                CLR     A
80B6BE 75F001            MOV     B,#01H
80B6C1 A512800617        ECALL   ?C?ILDIX
80B6C6 FE                MOV     R6,A
80B6C7 74A4              MOV     A,#LOW m_SMSMessage
80B6C9 25F0              ADD     A,B
80B6CB F582              MOV     DPL,A
80B6CD 7415              MOV     A,#HIGH m_SMSMessage
80B6CF 3E                ADDC    A,R6
80B6D0 F583              MOV     DPH,A
80B6D2 740D              MOV     A,#0DH
80B6D4 F0                MOVX    @DPTR,A
 1344: 			flag |= 0x01;
80B6D5 901646            MOV     DPTR,#flag
80B6D8 E0                MOVX    A,@DPTR
80B6D9 4401              ORL     A,#01H
80B6DB F0                MOVX    @DPTR,A
 1345: 			if( ( len + 5 ) >= MAX_SMS_LEN )
80B6DC 901645            MOV     DPTR,#len+01H
80B6DF E0                MOVX    A,@DPTR
80B6E0 2405              ADD     A,#05H
80B6E2 FF                MOV     R7,A
80B6E3 901644            MOV     DPTR,#len
80B6E6 E0                MOVX    A,@DPTR
80B6E7 3400              ADDC    A,#00H
80B6E9 FE                MOV     R6,A
80B6EA C3                CLR     C
80B6EB EF                MOV     A,R7
80B6EC 94A0              SUBB    A,#0A0H
80B6EE EE                MOV     A,R6
80B6EF 9400              SUBB    A,#00H
80B6F1 4032              JC      ?C0301?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 437


 1346: 			{				
 1347: 				if( ( SMSQuery & 0x80 ) == 0x80 )
80B6F3 900145            MOV     DPTR,#SMSQuery
80B6F6 E0                MOVX    A,@DPTR
80B6F7 30E71C            JNB     ACC.7,?C0312?MAINFLOW
 1348: 				{
 1349: 					Trace("\n ScanDeviceStatus 2");
 1350: 					memset( m_SMSMessage + 11, 0, sizeof( m_SMSMessage)-11 );
80B6FA 7E00              MOV     R6,#00H
80B6FC 7F95              MOV     R7,#095H
80B6FE 7D00              MOV     R5,#00H
80B700 7B00              MOV     R3,#?C?XDATASEG
80B702 7A15              MOV     R2,#HIGH m_SMSMessage+0BH
80B704 79AF              MOV     R1,#LOW m_SMSMessage+0BH
80B706 A5128008A6        ECALL   ?C?MEMSET
 1351: 					len = 11;	
80B70B 901644            MOV     DPTR,#len
80B70E E4                CLR     A
80B70F F0                MOVX    @DPTR,A
80B710 A3                INC     DPTR
80B711 740B              MOV     A,#0BH
80B713 F0                MOVX    @DPTR,A
 1352: 					continue;
80B714 800F              SJMP    ?C0301?MAINFLOW
 1353: 				}
80B716         ?C0312?MAINFLOW:
 1354: 				else
 1355: 				{
 1356: 					Trace("\n ScanDeviceStatus 1");
 1357: 					SMSQuery |= 0x80;
80B716 900145            MOV     DPTR,#SMSQuery
80B719 E0                MOVX    A,@DPTR
80B71A 4480              ORL     A,#080H
80B71C F0                MOVX    @DPTR,A
 1358: 					IsMorePage = 1;
80B71D 901649            MOV     DPTR,#IsMorePage
80B720 7401              MOV     A,#01H
80B722 F0                MOVX    @DPTR,A
 1359: 					break;
80B723 8009              SJMP    ?C0300?MAINFLOW
 1360: 				}
 1361: 			}
 1362: 		}				
 1363: 	}
80B725         ?C0301?MAINFLOW:
80B725 901647            MOV     DPTR,#i
80B728 E0                MOVX    A,@DPTR
80B729 04                INC     A
80B72A F0                MOVX    @DPTR,A
80B72B 02B587            LJMP    ?C0299?MAINFLOW
80B72E         ?C0300?MAINFLOW:
 1364: 	//有状态信息要发送		
 1365: 	Trace( "\n ScanDeviceStatus m_SMSMessage[%u] = %s", len, m_SMSMessage );	
 1366: 	m_SMSMessage[len--] = 0;	
80B72E A51280A9D2        ECALL   ?L?COM0017
 1367: 	SendSMS( m_SMSMessage, len );
 1368: 	if( IsMorePage != 1 )
80B733 901649            MOV     DPTR,#IsMorePage
80B736 E0                MOVX    A,@DPTR
80B737 6401              XRL     A,#01H
80B739 6007              JZ      ?C0314?MAINFLOW
 1369: 		SMSQuery = ( SMSQuery & 0x7F );
80B73B 900145            MOV     DPTR,#SMSQuery
80B73E E0                MOVX    A,@DPTR
80B73F 547F              ANL     A,#07FH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 438


80B741 F0                MOVX    @DPTR,A
80B742         ?C0314?MAINFLOW:
 1370: 	return 0;
80B742 7F00              MOV     R7,#00H
 1371: }
80B744         ?C0262?MAINFLOW:
80B744 A522              ERET    
----- FUNCTION ScanDeviceStatus (END) -------


----- FUNCTION DeviceDefaultSetting (BEGIN) -----
 FILE: 'mainflow.c'
 1453: u_char DeviceDefaultSetting()
 1454: {	
 1455: 	u_char xdata i = 0;
 1456:     u_char xdata j = 0;
80B746 E4                CLR     A
80B747 90159B            MOV     DPTR,#i
80B74A F0                MOVX    @DPTR,A
 1457: 	u_char xdata x = 0 ;
80B74B A3                INC     DPTR
80B74C F0                MOVX    @DPTR,A
 1458: 	u_char xdata y = 0;
80B74D A3                INC     DPTR
80B74E F0                MOVX    @DPTR,A
 1459: 	u_char xdata z = 0;
80B74F A3                INC     DPTR
80B750 F0                MOVX    @DPTR,A
 1460: 	u_char xdata iRack = 0;
80B751 A3                INC     DPTR
80B752 F0                MOVX    @DPTR,A
 1461: 
80B753 A3                INC     DPTR
80B754 F0                MOVX    @DPTR,A
 1462: 	WaitForWork( 100, NULL );
80B755 7F64              MOV     R7,#064H
80B757 FE                MOV     R6,A
80B758 A512808330        ECALL   ?L?COM000D
 1463: 	memset( &DeviceStatus, 0, sizeof( struct DEVICESTATUS ) );
80B75D 7E00              MOV     R6,#00H
80B75F 7F0A              MOV     R7,#0AH
80B761 7D00              MOV     R5,#00H
80B763 7B00              MOV     R3,#?C?XDATASEG
80B765 7A0B              MOV     R2,#HIGH DeviceStatus
80B767 791B              MOV     R1,#LOW DeviceStatus
80B769 A5128008A6        ECALL   ?C?MEMSET
 1464:     //----------------------------------------------------------
 1465:     //Trace( "\n SysInitParam" );
 1466: 	for( i = 0; i < 50; i++ )
80B76E E4                CLR     A
80B76F 90159B            MOV     DPTR,#i
80B772 F0                MOVX    @DPTR,A
80B773         ?C0322?MAINFLOW:
 1467: 		CoreProcessCycle();
80B773 A5128082D7        ECALL   CoreProcessCycle
80B778 90159B            MOV     DPTR,#i
80B77B E0                MOVX    A,@DPTR
80B77C 04                INC     A
80B77D F0                MOVX    @DPTR,A
80B77E E0                MOVX    A,@DPTR
80B77F C3                CLR     C
80B780 9432              SUBB    A,#032H
80B782 40EF              JC      ?C0322?MAINFLOW
80B784         ?C0323?MAINFLOW:
 1468: 
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 439


 1469: 	IsCanInCashFlag = 1;
80B784 D226              SETB    IsCanInCashFlag
 1470: 	// 如果不是新机器,这里要从flash里把东西读出来,变量初始化 
 1471: 	memset( HopperSetList, 0, sizeof( HopperSetList ) );	
80B786 7E00              MOV     R6,#00H
80B788 7F0C              MOV     R7,#0CH
80B78A 7D00              MOV     R5,#00H
80B78C 7B00              MOV     R3,#?C?XDATASEG
80B78E 7A0A              MOV     R2,#HIGH HopperSetList
80B790 79E4              MOV     R1,#LOW HopperSetList
80B792 A5128008A6        ECALL   ?C?MEMSET
 1472: 	LoadGlobalParam(); // 获取全程变量参数
80B797 A51280D78F        ECALL   LoadGlobalParam
 1473: 
 1474: 	//检验系统参数的校验位
 1475: 	i = 0;
80B79C E4                CLR     A
80B79D 90159B            MOV     DPTR,#i
80B7A0 F0                MOVX    @DPTR,A
 1476: 	i = sizeof( struct SYSTEMPARAMETER ) - 1;
80B7A1 744D              MOV     A,#04DH
80B7A3 F0                MOVX    @DPTR,A
 1477: 	x = 0;
80B7A4 E4                CLR     A
80B7A5 90159D            MOV     DPTR,#x
80B7A8 F0                MOVX    @DPTR,A
 1478: 	for( j = 0; j < i; j++ )	
80B7A9 90159C            MOV     DPTR,#j
80B7AC F0                MOVX    @DPTR,A
80B7AD         ?C0325?MAINFLOW:
80B7AD 90159B            MOV     DPTR,#i
80B7B0 E0                MOVX    A,@DPTR
80B7B1 FF                MOV     R7,A
80B7B2 A3                INC     DPTR
80B7B3 E0                MOVX    A,@DPTR
80B7B4 FE                MOV     R6,A
80B7B5 C3                CLR     C
80B7B6 9F                SUBB    A,R7
80B7B7 501D              JNC     ?C0326?MAINFLOW
 1479: 		x ^= (( u_char* )&SystemParameter)[j];		
80B7B9 A3                INC     DPTR
80B7BA E0                MOVX    A,@DPTR
80B7BB FF                MOV     R7,A
80B7BC EE                MOV     A,R6
80B7BD 7C00              MOV     R4,#00H
80B7BF 7B00              MOV     R3,#?C?XDATASEG
80B7C1 2420              ADD     A,#LOW SystemParameter
80B7C3 F9                MOV     R1,A
80B7C4 EC                MOV     A,R4
80B7C5 3404              ADDC    A,#HIGH SystemParameter
80B7C7 FA                MOV     R2,A
80B7C8 A548              EMOV    A,@PR0
80B7CA FE                MOV     R6,A
80B7CB EF                MOV     A,R7
80B7CC 6E                XRL     A,R6
80B7CD F0                MOVX    @DPTR,A
80B7CE 90159C            MOV     DPTR,#j
80B7D1 E0                MOVX    A,@DPTR
80B7D2 04                INC     A
80B7D3 F0                MOVX    @DPTR,A
80B7D4 80D7              SJMP    ?C0325?MAINFLOW
80B7D6         ?C0326?MAINFLOW:
 1480: 	if( x != SystemParameter.Checkbyte )
80B7D6 90046D            MOV     DPTR,#SystemParameter+04DH
80B7D9 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 440


80B7DA FF                MOV     R7,A
80B7DB 90159D            MOV     DPTR,#x
80B7DE E0                MOVX    A,@DPTR
80B7DF 6F                XRL     A,R7
80B7E0 600A              JZ      ?C0328?MAINFLOW
 1481: 	{
 1482: 		//参数校验错
 1483: 		Trace( "\n SysParam check error" );
 1484: 		HardWareErr |= 0x0100;//ERR_SYSTEM_CHECK;//ERR_SYSPARAMETER_ERR;	
80B7E2 900484            MOV     DPTR,#HardWareErr
80B7E5 E0                MOVX    A,@DPTR
80B7E6 4401              ORL     A,#01H
80B7E8 F0                MOVX    @DPTR,A
80B7E9 A3                INC     DPTR
80B7EA E0                MOVX    A,@DPTR
80B7EB F0                MOVX    @DPTR,A
 1485: 	}
80B7EC         ?C0328?MAINFLOW:
 1486:     //根据层架设置来配置货道设置
 1487: 	memset( InputGoodsWayList, 0, sizeof( InputGoodsWayList )*GOODSWAYNUM );
80B7EC 7E40              MOV     R6,#040H
80B7EE 7F00              MOV     R7,#00H
80B7F0 7D00              MOV     R5,#00H
80B7F2 7B00              MOV     R3,#?C?XDATASEG
80B7F4 7A2B              MOV     R2,#HIGH InputGoodsWayList
80B7F6 79DC              MOV     R1,#LOW InputGoodsWayList
80B7F8 A5128008A6        ECALL   ?C?MEMSET
 1488: 	z = 0;
80B7FD E4                CLR     A
80B7FE 90159F            MOV     DPTR,#z
80B801 F0                MOVX    @DPTR,A
 1489: 
 1490: 	///根据flash值确定物理货道与逻辑货道的关系
 1491: 	for( i = 0; i < RACKNUM; i++ )//货架层数
80B802 90159B            MOV     DPTR,#i
80B805 F0                MOVX    @DPTR,A
80B806         ?C0329?MAINFLOW:
 1492: 		iRackSet[ i ].RackNo = i + 1;
80B806 90159B            MOV     DPTR,#i
80B809 E0                MOVX    A,@DPTR
80B80A FF                MOV     R7,A
80B80B 04                INC     A
80B80C FE                MOV     R6,A
80B80D EF                MOV     A,R7
80B80E 75F003            MOV     B,#03H
80B811 A4                MUL     AB
80B812 2407              ADD     A,#LOW iRackSet
80B814 F582              MOV     DPL,A
80B816 E4                CLR     A
80B817 3404              ADDC    A,#HIGH iRackSet
80B819 F583              MOV     DPH,A
80B81B EE                MOV     A,R6
80B81C F0                MOVX    @DPTR,A
80B81D 90159B            MOV     DPTR,#i
80B820 E0                MOVX    A,@DPTR
80B821 04                INC     A
80B822 F0                MOVX    @DPTR,A
80B823 E0                MOVX    A,@DPTR
80B824 B408DF            CJNE    A,#08H,?C0329?MAINFLOW
80B827         ?C0330?MAINFLOW:
 1493: 	iRack = 0;
80B827 E4                CLR     A
80B828 9015A0            MOV     DPTR,#iRack
80B82B F0                MOVX    @DPTR,A
 1494: 	for( i = 0; i < RACKNUM; i++ )//货架层数
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 441


80B82C 90159B            MOV     DPTR,#i
80B82F F0                MOVX    @DPTR,A
80B830         ?C0332?MAINFLOW:
80B830 90159B            MOV     DPTR,#i
80B833 E0                MOVX    A,@DPTR
80B834 FF                MOV     R7,A
80B835 C3                CLR     C
80B836 9408              SUBB    A,#08H
80B838 4003              JC      $ + 5H
80B83A 02B92E            LJMP    ?C0333?MAINFLOW
 1495: 	{
 1496: 		if( iRackSet[ i ].UseState == 1 )//如果此层开启了
80B83D EF                MOV     A,R7
80B83E 75F003            MOV     B,#03H
80B841 A4                MUL     AB
80B842 2408              ADD     A,#LOW iRackSet+01H
80B844 F582              MOV     DPL,A
80B846 E4                CLR     A
80B847 3404              ADDC    A,#HIGH iRackSet+01H
80B849 F583              MOV     DPH,A
80B84B E0                MOVX    A,@DPTR
80B84C 6401              XRL     A,#01H
80B84E 6003              JZ      $ + 5H
80B850 02B925            LJMP    ?C0334?MAINFLOW
 1497: 		{
 1498: 			j = iRackSet[ i ].GoodsMax;//此层中各货道最大存货量
80B853 90159B            MOV     DPTR,#i
80B856 E0                MOVX    A,@DPTR
80B857 75F003            MOV     B,#03H
80B85A A4                MUL     AB
80B85B 2409              ADD     A,#LOW iRackSet+02H
80B85D F582              MOV     DPL,A
80B85F E4                CLR     A
80B860 3404              ADDC    A,#HIGH iRackSet+02H
80B862 F583              MOV     DPH,A
80B864 E0                MOVX    A,@DPTR
80B865 90159C            MOV     DPTR,#j
80B868 F0                MOVX    @DPTR,A
 1499: 			x = 1;//辑逻货道编号的个位	
80B869 A3                INC     DPTR
80B86A 7401              MOV     A,#01H
80B86C F0                MOVX    @DPTR,A
 1500: 			for( y = 0; y < RACKCOLUMNNUM; y ++ )//检索每层中开启的货道数
80B86D E4                CLR     A
80B86E A3                INC     DPTR
80B86F F0                MOVX    @DPTR,A
80B870         ?C0336?MAINFLOW:
80B870 90159E            MOV     DPTR,#y
80B873 E0                MOVX    A,@DPTR
80B874 FF                MOV     R7,A
80B875 C3                CLR     C
80B876 9408              SUBB    A,#08H
80B878 4003              JC      $ + 5H
80B87A 02B91F            LJMP    ?C0337?MAINFLOW
 1501: 			{
 1502: 				if( iRackColumnSet[i][y].UseState == 1)
80B87D 90159B            MOV     DPTR,#i
80B880 E0                MOVX    A,@DPTR
80B881 FE                MOV     R6,A
80B882 C4                SWAP    A
80B883 54F0              ANL     A,#0F0H
80B885 2447              ADD     A,#LOW iRackColumnSet+01H
80B887 F582              MOV     DPL,A
80B889 E4                CLR     A
80B88A 3401              ADDC    A,#HIGH iRackColumnSet+01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 442


80B88C F583              MOV     DPH,A
80B88E 75F002            MOV     B,#02H
80B891 EF                MOV     A,R7
80B892 A51280079F        ECALL   ?C?OFFXADD
80B897 E0                MOVX    A,@DPTR
80B898 6401              XRL     A,#01H
80B89A 707A              JNZ     ?C0338?MAINFLOW
 1503: 				{
 1504: 					InputGoodsWayList[ z ].GoodsWayNo = ( iRack + 1 ) * 10 + x;//逻辑货道  			
80B89C 9015A0            MOV     DPTR,#iRack
80B89F E0                MOVX    A,@DPTR
80B8A0 04                INC     A
80B8A1 75F00A            MOV     B,#0AH
80B8A4 A4                MUL     AB
80B8A5 FF                MOV     R7,A
80B8A6 90159D            MOV     DPTR,#x
80B8A9 E0                MOVX    A,@DPTR
80B8AA 2F                ADD     A,R7
80B8AB FF                MOV     R7,A
80B8AC 90159F            MOV     DPTR,#z
80B8AF E0                MOVX    A,@DPTR
80B8B0 FD                MOV     R5,A
80B8B1 25E0              ADD     A,ACC
80B8B3 25E0              ADD     A,ACC
80B8B5 24DC              ADD     A,#LOW InputGoodsWayList
80B8B7 F582              MOV     DPL,A
80B8B9 E4                CLR     A
80B8BA 342B              ADDC    A,#HIGH InputGoodsWayList
80B8BC F583              MOV     DPH,A
80B8BE EF                MOV     A,R7
80B8BF F0                MOVX    @DPTR,A
 1505: 					InputGoodsWayList[ z ].SetArrayNo = 64 - i*RACKCOLUMNNUM - 8 + y + 1;//物理货道
80B8C0 EE                MOV     A,R6
80B8C1 75F008            MOV     B,#08H
80B8C4 A4                MUL     AB
80B8C5 F4                CPL     A
80B8C6 04                INC     A
80B8C7 FF                MOV     R7,A
80B8C8 90159E            MOV     DPTR,#y
80B8CB E0                MOVX    A,@DPTR
80B8CC 2F                ADD     A,R7
80B8CD 2439              ADD     A,#039H
80B8CF FF                MOV     R7,A
80B8D0 ED                MOV     A,R5
80B8D1 25E0              ADD     A,ACC
80B8D3 25E0              ADD     A,ACC
80B8D5 24DD              ADD     A,#LOW InputGoodsWayList+01H
80B8D7 F582              MOV     DPL,A
80B8D9 E4                CLR     A
80B8DA 342B              ADDC    A,#HIGH InputGoodsWayList+01H
80B8DC F583              MOV     DPH,A
80B8DE EF                MOV     A,R7
80B8DF F0                MOVX    @DPTR,A
 1506: 					InputGoodsWayList[ z ].UseState = 1;//开启状态
80B8E0 90159F            MOV     DPTR,#z
80B8E3 E0                MOVX    A,@DPTR
80B8E4 FF                MOV     R7,A
80B8E5 25E0              ADD     A,ACC
80B8E7 25E0              ADD     A,ACC
80B8E9 24DE              ADD     A,#LOW InputGoodsWayList+02H
80B8EB F582              MOV     DPL,A
80B8ED E4                CLR     A
80B8EE 342B              ADDC    A,#HIGH InputGoodsWayList+02H
80B8F0 F583              MOV     DPH,A
80B8F2 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 443


80B8F4 F0                MOVX    @DPTR,A
 1507: 					InputGoodsWayList[ z ].GoodsMax = j;//最大存货量
80B8F5 90159C            MOV     DPTR,#j
80B8F8 E0                MOVX    A,@DPTR
80B8F9 FE                MOV     R6,A
80B8FA EF                MOV     A,R7
80B8FB 25E0              ADD     A,ACC
80B8FD 25E0              ADD     A,ACC
80B8FF 24DF              ADD     A,#LOW InputGoodsWayList+03H
80B901 F582              MOV     DPL,A
80B903 E4                CLR     A
80B904 342B              ADDC    A,#HIGH InputGoodsWayList+03H
80B906 F583              MOV     DPH,A
80B908 EE                MOV     A,R6
80B909 F0                MOVX    @DPTR,A
 1508: 					x += 1;
80B90A 90159D            MOV     DPTR,#x
80B90D E0                MOVX    A,@DPTR
80B90E 04                INC     A
80B90F F0                MOVX    @DPTR,A
 1509: 					z += 1;
80B910 90159F            MOV     DPTR,#z
80B913 E0                MOVX    A,@DPTR
80B914 04                INC     A
80B915 F0                MOVX    @DPTR,A
 1510: 				}
 1511: 			}
80B916         ?C0338?MAINFLOW:
80B916 90159E            MOV     DPTR,#y
80B919 E0                MOVX    A,@DPTR
80B91A 04                INC     A
80B91B F0                MOVX    @DPTR,A
80B91C 02B870            LJMP    ?C0336?MAINFLOW
80B91F         ?C0337?MAINFLOW:
 1512: 			iRack++;
80B91F 9015A0            MOV     DPTR,#iRack
80B922 E0                MOVX    A,@DPTR
80B923 04                INC     A
80B924 F0                MOVX    @DPTR,A
 1513: 		}
 1514: 	}	
80B925         ?C0334?MAINFLOW:
80B925 90159B            MOV     DPTR,#i
80B928 E0                MOVX    A,@DPTR
80B929 04                INC     A
80B92A F0                MOVX    @DPTR,A
80B92B 02B830            LJMP    ?C0332?MAINFLOW
80B92E         ?C0333?MAINFLOW:
 1515: 
 1516: 	//货道数组中的货道代码初始化,确认逻辑货道的参数值	
 1517: 	for( i = 0; i < GOODSWAYNUM; i++ )
80B92E E4                CLR     A
80B92F 90159B            MOV     DPTR,#i
80B932 F0                MOVX    @DPTR,A
80B933         ?C0340?MAINFLOW:
80B933 90159B            MOV     DPTR,#i
80B936 E0                MOVX    A,@DPTR
80B937 FF                MOV     R7,A
80B938 C3                CLR     C
80B939 9440              SUBB    A,#040H
80B93B 4003              JC      $ + 5H
80B93D 02B9F6            LJMP    ?C0341?MAINFLOW
 1518: 	{		
 1519: 		GoodsWaySetVal[i].WayNo = InputGoodsWayList[i].GoodsWayNo;	
80B940 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 444


80B941 FE                MOV     R6,A
80B942 25E0              ADD     A,ACC
80B944 25E0              ADD     A,ACC
80B946 24DC              ADD     A,#LOW InputGoodsWayList
80B948 F582              MOV     DPL,A
80B94A E4                CLR     A
80B94B 342B              ADDC    A,#HIGH InputGoodsWayList
80B94D F583              MOV     DPH,A
80B94F E0                MOVX    A,@DPTR
80B950 FD                MOV     R5,A
80B951 75F005            MOV     B,#05H
80B954 EE                MOV     A,R6
80B955 900004            MOV     DPTR,#GoodsWaySetVal
80B958 A51280079F        ECALL   ?C?OFFXADD
80B95D ED                MOV     A,R5
80B95E F0                MOVX    @DPTR,A
 1520: #ifdef _DEBUG_TRACE
 1521: 		GoodsWaySetVal[i].WayState = 0x01;	
 1522: #else	
 1523:         //-----------------------------------------------------------------------------
 1524:         //In GOC check mode, clear the column's error flag when power on.	
 1525:         if( SystemParameter.GOCOn == 0x01 )
80B95F 90046B            MOV     DPTR,#SystemParameter+04BH
80B962 E0                MOVX    A,@DPTR
80B963 FE                MOV     R6,A
80B964 B40110            CJNE    A,#01H,?C0343?MAINFLOW
 1526:         {
 1527:         	GoodsWaySetVal[i].WayState &= 0xfb;
80B967 75F005            MOV     B,#05H
80B96A EF                MOV     A,R7
80B96B 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B96E A51280079F        ECALL   ?C?OFFXADD
80B973 E0                MOVX    A,@DPTR
80B974 54FB              ANL     A,#0FBH
80B976 F0                MOVX    @DPTR,A
 1528:         }
80B977         ?C0343?MAINFLOW:
 1529:         //=============================================================================		
 1530: 		if( (SystemParameter.GOCOn != 0x01)&&( GoodsWaySetVal[i].GoodsCurrentSum != 0 )&&( ( GoodsWaySetVal[i].WayState
>>  & 0x0B ) == 0x01 ) )
80B977 EE                MOV     A,R6
80B978 6401              XRL     A,#01H
80B97A 602F              JZ      ?C0344?MAINFLOW
80B97C 90159B            MOV     DPTR,#i
80B97F E0                MOVX    A,@DPTR
80B980 FF                MOV     R7,A
80B981 75F005            MOV     B,#05H
80B984 900008            MOV     DPTR,#GoodsWaySetVal+04H
80B987 A51280079F        ECALL   ?C?OFFXADD
80B98C E0                MOVX    A,@DPTR
80B98D 601C              JZ      ?C0344?MAINFLOW
80B98F 75F005            MOV     B,#05H
80B992 EF                MOV     A,R7
80B993 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B996 A51280079F        ECALL   ?C?OFFXADD
80B99B E0                MOVX    A,@DPTR
80B99C 540B              ANL     A,#0BH
80B99E FF                MOV     R7,A
80B99F BF0109            CJNE    R7,#01H,?C0344?MAINFLOW
 1531: 			GoodsWaySetVal[i].WayState = 0x01;
80B9A2 90159B            MOV     DPTR,#i
80B9A5 E0                MOVX    A,@DPTR
80B9A6 75F005            MOV     B,#05H
80B9A9 8022              SJMP    ?C1070?MAINFLOW
80B9AB         ?C0344?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 445


 1532: 		else if( (SystemParameter.GOCOn==0x01) && ( ( GoodsWaySetVal[i].WayState & 0x0B ) == 0x01 ) )
80B9AB 90046B            MOV     DPTR,#SystemParameter+04BH
80B9AE E0                MOVX    A,@DPTR
80B9AF B40128            CJNE    A,#01H,?C0346?MAINFLOW
80B9B2 90159B            MOV     DPTR,#i
80B9B5 E0                MOVX    A,@DPTR
80B9B6 FF                MOV     R7,A
80B9B7 75F005            MOV     B,#05H
80B9BA 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B9BD A51280079F        ECALL   ?C?OFFXADD
80B9C2 E0                MOVX    A,@DPTR
80B9C3 540B              ANL     A,#0BH
80B9C5 FE                MOV     R6,A
80B9C6 BE0111            CJNE    R6,#01H,?C0346?MAINFLOW
 1533: 		    GoodsWaySetVal[i].WayState = 0x01;
80B9C9 75F005            MOV     B,#05H
80B9CC EF                MOV     A,R7
80B9CD         
80B9CD 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B9D0 A51280079F        ECALL   ?C?OFFXADD
80B9D5 7401              MOV     A,#01H
80B9D7 F0                MOVX    @DPTR,A
80B9D8 8013              SJMP    ?C0342?MAINFLOW
80B9DA         ?C0346?MAINFLOW:
 1534: 		else
 1535: 			GoodsWaySetVal[i].WayState = ( GoodsWaySetVal[i].WayState & 0x0F );
80B9DA 90159B            MOV     DPTR,#i
80B9DD E0                MOVX    A,@DPTR
80B9DE 75F005            MOV     B,#05H
80B9E1 900005            MOV     DPTR,#GoodsWaySetVal+01H
80B9E4 A51280079F        ECALL   ?C?OFFXADD
80B9E9 E0                MOVX    A,@DPTR
80B9EA 540F              ANL     A,#0FH
80B9EC F0                MOVX    @DPTR,A
 1536: #endif
 1537: 	}		
80B9ED         ?C0342?MAINFLOW:
80B9ED 90159B            MOV     DPTR,#i
80B9F0 E0                MOVX    A,@DPTR
80B9F1 04                INC     A
80B9F2 F0                MOVX    @DPTR,A
80B9F3 02B933            LJMP    ?C0340?MAINFLOW
80B9F6         ?C0341?MAINFLOW:
 1538: 	
 1539: 	for( i = 0; i < GOODSWAYNUM; i ++ )	
80B9F6 E4                CLR     A
80B9F7 90159B            MOV     DPTR,#i
80B9FA F0                MOVX    @DPTR,A
80B9FB         ?C0348?MAINFLOW:
80B9FB 90159B            MOV     DPTR,#i
80B9FE E0                MOVX    A,@DPTR
80B9FF FF                MOV     R7,A
80BA00 C3                CLR     C
80BA01 9440              SUBB    A,#040H
80BA03 505D              JNC     ?C0349?MAINFLOW
 1540: 	{
 1541: 		if( ( GoodsWaySetVal[i].WayNo == InputGoodsWayList[i].GoodsWayNo ) && 
80BA05 E0                MOVX    A,@DPTR
80BA06 FE                MOV     R6,A
80BA07 25E0              ADD     A,ACC
80BA09 25E0              ADD     A,ACC
80BA0B 24DC              ADD     A,#LOW InputGoodsWayList
80BA0D F582              MOV     DPL,A
80BA0F E4                CLR     A
80BA10 342B              ADDC    A,#HIGH InputGoodsWayList
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 446


80BA12 F583              MOV     DPH,A
80BA14 E0                MOVX    A,@DPTR
80BA15 FD                MOV     R5,A
80BA16 75F005            MOV     B,#05H
80BA19 EE                MOV     A,R6
80BA1A 900004            MOV     DPTR,#GoodsWaySetVal
80BA1D A51280079F        ECALL   ?C?OFFXADD
80BA22 E0                MOVX    A,@DPTR
80BA23 6D                XRL     A,R5
80BA24 7034              JNZ     ?C0350?MAINFLOW
80BA26 EF                MOV     A,R7
80BA27 25E0              ADD     A,ACC
80BA29 25E0              ADD     A,ACC
80BA2B 24DE              ADD     A,#LOW InputGoodsWayList+02H
80BA2D F582              MOV     DPL,A
80BA2F E4                CLR     A
80BA30 342B              ADDC    A,#HIGH InputGoodsWayList+02H
80BA32 F583              MOV     DPH,A
80BA34 E0                MOVX    A,@DPTR
80BA35 B40122            CJNE    A,#01H,?C0350?MAINFLOW
80BA38 90159B            MOV     DPTR,#i
80BA3B E0                MOVX    A,@DPTR
80BA3C 75F005            MOV     B,#05H
80BA3F 900006            MOV     DPTR,#GoodsWaySetVal+02H
80BA42 A51280079F        ECALL   ?C?OFFXADD
80BA47 E0                MOVX    A,@DPTR
80BA48 FE                MOV     R6,A
80BA49 A3                INC     DPTR
80BA4A E0                MOVX    A,@DPTR
80BA4B 4E                ORL     A,R6
80BA4C 700C              JNZ     ?C0350?MAINFLOW
 1542: 			( InputGoodsWayList[ i ].UseState == 1 ) &&
 1543: 			( GoodsWaySetVal[i].Price == 0 ) )
 1544: 		{
 1545: 			HardWareErr |= 0x0400;
80BA4E 900484            MOV     DPTR,#HardWareErr
80BA51 E0                MOVX    A,@DPTR
80BA52 4404              ORL     A,#04H
80BA54 F0                MOVX    @DPTR,A
80BA55 A3                INC     DPTR
80BA56 E0                MOVX    A,@DPTR
80BA57 F0                MOVX    @DPTR,A
 1546: 			break;
80BA58 8008              SJMP    ?C0349?MAINFLOW
 1547: 		}
 1548: 	}
80BA5A         ?C0350?MAINFLOW:
80BA5A 90159B            MOV     DPTR,#i
80BA5D E0                MOVX    A,@DPTR
80BA5E 04                INC     A
80BA5F F0                MOVX    @DPTR,A
80BA60 8099              SJMP    ?C0348?MAINFLOW
80BA62         ?C0349?MAINFLOW:
 1549:     IOUFlag = 0;	
80BA62 C22B              CLR     IOUFlag
 1550: 	UpdataDisp = 0;
80BA64 E4                CLR     A
80BA65 900B29            MOV     DPTR,#UpdataDisp
80BA68 F0                MOVX    @DPTR,A
 1551: 	SystemErrorAlarm = 0;
80BA69 900144            MOV     DPTR,#SystemErrorAlarm
80BA6C F0                MOVX    @DPTR,A
 1552: 	MoneyDevAlarm = 0;
80BA6D 90041F            MOV     DPTR,#MoneyDevAlarm
80BA70 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 447


 1553: 	AlarmTime = 0;
80BA71 900002            MOV     DPTR,#AlarmTime
80BA74 F0                MOVX    @DPTR,A
 1554: 	QueryFlag = 0;
80BA75 C227              CLR     QueryFlag
 1555: 	memset( SMSMessage, 0, sizeof( struct SMSMessageList )* MAX_SMS_LIST );
80BA77 7E06              MOV     R6,#06H
80BA79 7F5E              MOV     R7,#05EH
80BA7B FD                MOV     R5,A
80BA7C 7B00              MOV     R3,#?C?XDATASEG
80BA7E 7A04              MOV     R2,#HIGH SMSMessage
80BA80 7986              MOV     R1,#LOW SMSMessage
80BA82 A5128008A6        ECALL   ?C?MEMSET
 1556:     //ListIndex = 0;
 1557: 	
 1558:     //==========================================================		
 1559: 	return 0;
80BA87 7F00              MOV     R7,#00H
 1560: }
80BA89         ?C0352?MAINFLOW:
80BA89 A522              ERET    
----- FUNCTION DeviceDefaultSetting (END) -------


----- FUNCTION ?L?COM0040 (BEGIN) -----
80BA8B A5128082D7        ECALL   CoreProcessCycle
----- FUNCTION CheckOperStatus (BEGIN) -----
 FILE: 'mainflow.c'
 1612: u_char CheckOperStatus()
 1613: {	
 1614: 	CurrentPayed = 0; //用户付款计数清零 
 1615: //	CurrentTransType = 0; // 设置空闲状态 	
80BA90 E4                CLR     A
80BA91 900B25            MOV     DPTR,#CurrentPayed
80BA94 F0                MOVX    @DPTR,A
80BA95 A3                INC     DPTR
80BA96 F0                MOVX    @DPTR,A
 1616: 	CasherGetMachineState( 0 );//空闲状态
80BA97 FF                MOV     R7,A
80BA98 A512807FA6        ECALL   _CasherGetMachineState
 1617: 	WaitForWork( 10, NULL );
80BA9D E4                CLR     A
80BA9E 7F0A              MOV     R7,#0AH
80BAA0 FE                MOV     R6,A
80BAA1 A512808330        ECALL   ?L?COM000D
 1618: 	if ( IsModeOff() )// 是否模式开关处于关闭状态	
80BAA6 A51280BAB3        ECALL   IsModeOff
80BAAB 7F00              MOV     R7,#00H
80BAAD 5002              JNC     ?C0359?MAINFLOW
 1619: 		return 1;	
80BAAF 7F01              MOV     R7,#01H
80BAB1         ?C0359?MAINFLOW:
 1620: 	return 0;
 1621: }
80BAB1         ?C0360?MAINFLOW:
80BAB1 A522              ERET    
----- FUNCTION CheckOperStatus (END) -------


----- FUNCTION IsModeOff (BEGIN) -----
 FILE: 'IOInput.c'
   43: bit IsModeOff( void )
   44: {
   45: 	return ZhkModeState == 0;
   46: }
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 448


80BAB3 902DEE            MOV     DPTR,#ZhkModeState
80BAB6 E0                MOVX    A,@DPTR
80BAB7 C3                CLR     C
80BAB8 7001              JNZ     ?C0001?IOINPUT
80BABA D3                SETB    C
80BABB         ?C0001?IOINPUT:
80BABB         ?C0002?IOINPUT:
   47: 
80BABB         ?C0003?IOINPUT:
80BABB A522              ERET    
----- FUNCTION IsModeOff (END) -------


----- FUNCTION CheckHardwareState (BEGIN) -----
 FILE: 'mainflow.c'
 1624: u_char CheckHardwareState()	
 1625: {	
 1626:     
 1627:     //Trace( "\n HardWareErr1 = %u", HardWareErr );	
 1628:     //#ifndef _DEBUG_TRACE	
 1629: 	if( CasherRealTimeState() == 1 )
80BABD A51280BB01        ECALL   CasherRealTimeState
80BAC2 BF0108            CJNE    R7,#01H,?C0361?MAINFLOW
 1630: 		DeviceStatus.BillAccepter = 1;
80BAC5 900B1B            MOV     DPTR,#DeviceStatus
80BAC8 7401              MOV     A,#01H
80BACA F0                MOVX    @DPTR,A
80BACB 8005              SJMP    ?C0362?MAINFLOW
80BACD         ?C0361?MAINFLOW:
 1631: 	else 
 1632: 		DeviceStatus.BillAccepter = 0;
80BACD E4                CLR     A
80BACE 900B1B            MOV     DPTR,#DeviceStatus
80BAD1 F0                MOVX    @DPTR,A
80BAD2         ?C0362?MAINFLOW:
 1633: 
 1634: 
 1635: 	if( (SystemParameter.GOCOn==0x01)&&(DeviceStatus.GOCStatus != 0x00) /*&&(SystemParameter.SVC_GOCErr==0)*/ )
80BAD2 90046B            MOV     DPTR,#SystemParameter+04BH
80BAD5 E0                MOVX    A,@DPTR
80BAD6 B40112            CJNE    A,#01H,?C0363?MAINFLOW
80BAD9 900B24            MOV     DPTR,#DeviceStatus+09H
80BADC E0                MOVX    A,@DPTR
80BADD 600C              JZ      ?C0363?MAINFLOW
 1636: 	{
 1637: 		HardWareErr |= 0x0800;
80BADF 900484            MOV     DPTR,#HardWareErr
80BAE2 E0                MOVX    A,@DPTR
80BAE3 4408              ORL     A,#08H
80BAE5 F0                MOVX    @DPTR,A
80BAE6 A3                INC     DPTR
80BAE7 E0                MOVX    A,@DPTR
80BAE8 F0                MOVX    @DPTR,A
 1638: 	}
80BAE9 8007              SJMP    ?C0364?MAINFLOW
80BAEB         ?C0363?MAINFLOW:
 1639: 	else
 1640: 	{
 1641: 	    HardWareErr &= 0xF7FF;
80BAEB 900484            MOV     DPTR,#HardWareErr
80BAEE E0                MOVX    A,@DPTR
80BAEF 54F7              ANL     A,#0F7H
80BAF1 F0                MOVX    @DPTR,A
 1642: 	}
80BAF2         ?C0364?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 449


 1643: 	//===========================================
 1644:    	if( HardWareErr == 0 )
80BAF2 900484            MOV     DPTR,#HardWareErr
80BAF5 E0                MOVX    A,@DPTR
80BAF6 7002              JNZ     ?C1022?MAINFLOW
80BAF8 A3                INC     DPTR
80BAF9 E0                MOVX    A,@DPTR
80BAFA         ?C1022?MAINFLOW:
80BAFA 7F01              MOV     R7,#01H
80BAFC 7001              JNZ     ?C0365?MAINFLOW
 1645: 		return 0;
80BAFE FF                MOV     R7,A
80BAFF         ?C0365?MAINFLOW:
 1646: 	else 
 1647: 		return 1;
 1648: //#else
 1649: //	return 0;
 1650: //#endif
 1651: 
 1652: }
80BAFF         ?C0366?MAINFLOW:
80BAFF A522              ERET    
----- FUNCTION CheckHardwareState (END) -------


----- FUNCTION CasherRealTimeState (BEGIN) -----
 FILE: 'scheduler.c'
 1401: uchar CasherRealTimeState( )
 1402: {
 1403: 	return Casher.ExtState[ 13 ];
 1404: }
80BB01 9023E5            MOV     DPTR,#Casher+011H
80BB04 E0                MOVX    A,@DPTR
80BB05 FF                MOV     R7,A
 1405: 
80BB06         ?C0255?SCHEDULER:
80BB06 A522              ERET    
----- FUNCTION CasherRealTimeState (END) -------


----- FUNCTION CheckQureyCmd (BEGIN) -----
 FILE: 'mainflow.c'
 1654: u_char CheckQureyCmd()
 1655: {
 1656: //	Trace("\n CheckQureyCmd" );
 1657: 	struct SHORTMSG xdata ShortMsg;
 1658: 	uchar xdata QueryCmdstr[11];
 1659: 
 1660: 	if( SystemParameter.MobileON != 1 )
80BB08 900446            MOV     DPTR,#SystemParameter+026H
80BB0B E0                MOVX    A,@DPTR
80BB0C 6401              XRL     A,#01H
80BB0E 6005              JZ      ?C0368?MAINFLOW
 1661: 		return 0;
80BB10 7F00              MOV     R7,#00H
80BB12 02BC5D            LJMP    ?C0369?MAINFLOW
80BB15         ?C0368?MAINFLOW:
 1662: 	
 1663: #ifndef _DEBUG_NO_MOBILE	
 1664: //	if ( !SMSCommStatus() )			
 1665: //		return 0;	
 1666: 	if ( IsShortMessageIn != 1 )
80BB15 900AF0            MOV     DPTR,#IsShortMessageIn
80BB18 E0                MOVX    A,@DPTR
80BB19 6401              XRL     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 450


80BB1B 6005              JZ      ?C0370?MAINFLOW
 1667: 		return 0;
80BB1D 7F00              MOV     R7,#00H
80BB1F 02BC5D            LJMP    ?C0369?MAINFLOW
80BB22         ?C0370?MAINFLOW:
 1668: 
 1669: //	Trace("\n GET Query SMS ");
 1670: 	memset( &ShortMsg, 0, sizeof( struct SHORTMSG ) );		
80BB22 7E00              MOV     R6,#00H
80BB24 7FB2              MOV     R7,#0B2H
80BB26 7D00              MOV     R5,#00H
80BB28 7B00              MOV     R3,#?C?XDATASEG
80BB2A 7A15              MOV     R2,#HIGH ShortMsg
80BB2C 799B              MOV     R1,#LOW ShortMsg
80BB2E A5128008A6        ECALL   ?C?MEMSET
 1671: 	if( GetShortMsg( &ShortMsg ) == 1 )
80BB33 7B00              MOV     R3,#?C?XDATASEG
80BB35 7A15              MOV     R2,#HIGH ShortMsg
80BB37 799B              MOV     R1,#LOW ShortMsg
80BB39 A51280BC5F        ECALL   _GetShortMsg
80BB3E BF0105            CJNE    R7,#01H,?C0371?MAINFLOW
 1672: 	{
 1673: 	//	Trace("\n have not SMS");
 1674: 		return 0;
80BB41 7F00              MOV     R7,#00H
80BB43 02BC5D            LJMP    ?C0369?MAINFLOW
 1675: 	}
80BB46         ?C0371?MAINFLOW:
 1676: 	IsShortMessageIn = 0;
80BB46 E4                CLR     A
80BB47 900AF0            MOV     DPTR,#IsShortMessageIn
80BB4A F0                MOVX    @DPTR,A
 1677: 	memset( QueryCmdstr, 0, sizeof(QueryCmdstr) );		
80BB4B FE                MOV     R6,A
80BB4C 7F0B              MOV     R7,#0BH
80BB4E FD                MOV     R5,A
80BB4F 7B00              MOV     R3,#?C?XDATASEG
80BB51 7A16              MOV     R2,#HIGH QueryCmdstr
80BB53 794D              MOV     R1,#LOW QueryCmdstr
80BB55 A5128008A6        ECALL   ?C?MEMSET
 1678: 	sprintf( QueryCmdstr, "%s%bx%bx%bx%bx%bx",QueryCmd[0].str, 
80BB5A 7B80              MOV     R3,#BYTE2 08003F2H
80BB5C 7A03              MOV     R2,#HIGH 08003F2H
80BB5E 79F2              MOV     R1,#LOW 08003F2H
80BB60 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80BB63 A5128007B6        ECALL   ?C?PSTXDATA
80BB68 900525            MOV     DPTR,#QueryCmd
80BB6B A5128007C0        ECALL   ?C?PLDCODE
80BB70 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80BB73 A5128007B6        ECALL   ?C?PSTXDATA
80BB78 900431            MOV     DPTR,#SystemParameter+011H
80BB7B E0                MOVX    A,@DPTR
80BB7C 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80BB7F F0                MOVX    @DPTR,A
80BB80 900432            MOV     DPTR,#SystemParameter+012H
80BB83 E0                MOVX    A,@DPTR
80BB84 901B90            MOV     DPTR,#?_sprintf?BYTE+0AH
80BB87 F0                MOVX    @DPTR,A
80BB88 900433            MOV     DPTR,#SystemParameter+013H
80BB8B E0                MOVX    A,@DPTR
80BB8C 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
80BB8F F0                MOVX    @DPTR,A
80BB90 900434            MOV     DPTR,#SystemParameter+014H
80BB93 E0                MOVX    A,@DPTR
80BB94 901B92            MOV     DPTR,#?_sprintf?BYTE+0CH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 451


80BB97 F0                MOVX    @DPTR,A
80BB98 900435            MOV     DPTR,#SystemParameter+015H
80BB9B E0                MOVX    A,@DPTR
80BB9C 901B93            MOV     DPTR,#?_sprintf?BYTE+0DH
80BB9F F0                MOVX    @DPTR,A
80BBA0 900436            MOV     DPTR,#SystemParameter+016H
80BBA3 E0                MOVX    A,@DPTR
80BBA4 901B94            MOV     DPTR,#?_sprintf?BYTE+0EH
80BBA7 F0                MOVX    @DPTR,A
80BBA8 7B00              MOV     R3,#?C?XDATASEG
80BBAA 7A16              MOV     R2,#HIGH QueryCmdstr
80BBAC 794D              MOV     R1,#LOW QueryCmdstr
80BBAE A512800949        ECALL   _sprintf
 1679: 			SystemParameter.VmID[0],SystemParameter.VmID[1],SystemParameter.VmID[2],
 1680: 			SystemParameter.VmID[3],SystemParameter.VmID[4],SystemParameter.VmID[5]);
 1681: 	if( memcmp( QueryCmdstr, ShortMsg.msg, 10 ) == 0 )	
80BBB3 784D              MOV     R0,#LOW QueryCmdstr
80BBB5 7C16              MOV     R4,#HIGH QueryCmdstr
80BBB7 7D00              MOV     R5,#?C?XDATASEG
80BBB9 7B00              MOV     R3,#?C?XDATASEG
80BBBB 7A15              MOV     R2,#HIGH ShortMsg+012H
80BBBD 79AD              MOV     R1,#LOW ShortMsg+012H
80BBBF 7E00              MOV     R6,#00H
80BBC1 7F0A              MOV     R7,#0AH
80BBC3 A51280086D        ECALL   ?C?MEMCMP
80BBC8 EF                MOV     A,R7
80BBC9 7007              JNZ     ?C0372?MAINFLOW
 1682: 	{
 1683: 		//查询设备状态
 1684: 		SMSQuery |= 0x01;
80BBCB 900145            MOV     DPTR,#SMSQuery
80BBCE E0                MOVX    A,@DPTR
80BBCF 4401              ORL     A,#01H
80BBD1 F0                MOVX    @DPTR,A
 1685: 	//	Trace("\n Query Device status SMS ");
 1686: 	}
80BBD2         ?C0372?MAINFLOW:
 1687: 
 1688: 	memset( QueryCmdstr, 0, sizeof(QueryCmdstr) );		
80BBD2 7E00              MOV     R6,#00H
80BBD4 7F0B              MOV     R7,#0BH
80BBD6 7D00              MOV     R5,#00H
80BBD8 7B00              MOV     R3,#?C?XDATASEG
80BBDA 7A16              MOV     R2,#HIGH QueryCmdstr
80BBDC 794D              MOV     R1,#LOW QueryCmdstr
80BBDE A5128008A6        ECALL   ?C?MEMSET
 1689: 	sprintf( QueryCmdstr, "%s%bx%bx%bx%bx%bx",QueryCmd[1].str, 
80BBE3 7B80              MOV     R3,#BYTE2 08003F2H
80BBE5 7A03              MOV     R2,#HIGH 08003F2H
80BBE7 79F2              MOV     R1,#LOW 08003F2H
80BBE9 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80BBEC A5128007B6        ECALL   ?C?PSTXDATA
80BBF1 900529            MOV     DPTR,#QueryCmd+04H
80BBF4 A5128007C0        ECALL   ?C?PLDCODE
80BBF9 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80BBFC A5128007B6        ECALL   ?C?PSTXDATA
80BC01 900431            MOV     DPTR,#SystemParameter+011H
80BC04 E0                MOVX    A,@DPTR
80BC05 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80BC08 F0                MOVX    @DPTR,A
80BC09 900432            MOV     DPTR,#SystemParameter+012H
80BC0C E0                MOVX    A,@DPTR
80BC0D 901B90            MOV     DPTR,#?_sprintf?BYTE+0AH
80BC10 F0                MOVX    @DPTR,A
80BC11 900433            MOV     DPTR,#SystemParameter+013H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 452


80BC14 E0                MOVX    A,@DPTR
80BC15 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
80BC18 F0                MOVX    @DPTR,A
80BC19 900434            MOV     DPTR,#SystemParameter+014H
80BC1C E0                MOVX    A,@DPTR
80BC1D 901B92            MOV     DPTR,#?_sprintf?BYTE+0CH
80BC20 F0                MOVX    @DPTR,A
80BC21 900435            MOV     DPTR,#SystemParameter+015H
80BC24 E0                MOVX    A,@DPTR
80BC25 901B93            MOV     DPTR,#?_sprintf?BYTE+0DH
80BC28 F0                MOVX    @DPTR,A
80BC29 900436            MOV     DPTR,#SystemParameter+016H
80BC2C E0                MOVX    A,@DPTR
80BC2D 901B94            MOV     DPTR,#?_sprintf?BYTE+0EH
80BC30 F0                MOVX    @DPTR,A
80BC31 7B00              MOV     R3,#?C?XDATASEG
80BC33 7A16              MOV     R2,#HIGH QueryCmdstr
80BC35 794D              MOV     R1,#LOW QueryCmdstr
80BC37 A512800949        ECALL   _sprintf
 1690: 			SystemParameter.VmID[0],SystemParameter.VmID[1],SystemParameter.VmID[2],
 1691: 			SystemParameter.VmID[3],SystemParameter.VmID[4],SystemParameter.VmID[5]);
 1692: 	if( memcmp( QueryCmdstr, ShortMsg.msg, 10 ) == 0 )	
80BC3C 784D              MOV     R0,#LOW QueryCmdstr
80BC3E 7C16              MOV     R4,#HIGH QueryCmdstr
80BC40 7D00              MOV     R5,#?C?XDATASEG
80BC42 7B00              MOV     R3,#?C?XDATASEG
80BC44 7A15              MOV     R2,#HIGH ShortMsg+012H
80BC46 79AD              MOV     R1,#LOW ShortMsg+012H
80BC48 7E00              MOV     R6,#00H
80BC4A 7F0A              MOV     R7,#0AH
80BC4C A51280086D        ECALL   ?C?MEMCMP
80BC51 EF                MOV     A,R7
80BC52 7007              JNZ     ?C0373?MAINFLOW
 1693: 	{
 1694: 		//查询交易记录
 1695: 		SMSQuery |= 0x02;	
80BC54 900145            MOV     DPTR,#SMSQuery
80BC57 E0                MOVX    A,@DPTR
80BC58 4402              ORL     A,#02H
80BC5A F0                MOVX    @DPTR,A
 1696: 	//	Trace("\n Query trane SMS ");
 1697: 	}
80BC5B         ?C0373?MAINFLOW:
 1698: #endif
 1699: 	return 0;
80BC5B 7F00              MOV     R7,#00H
 1700: }
80BC5D         ?C0369?MAINFLOW:
80BC5D A522              ERET    
----- FUNCTION CheckQureyCmd (END) -------


----- FUNCTION _GetShortMsg (BEGIN) -----
 FILE: 'mobile.c'
  680: 	uchar GetShortMsg( struct SHORTMSG* Msg )
  681: 	{
80BC5F 901658            MOV     DPTR,#Msg
80BC62 A5128007B6        ECALL   ?C?PSTXDATA
  682: 		uchar data i = 0;	
  683: 
80BC67 E4                CLR     A
80BC68 F528              MOV     i,A
  684: 		if( ZhkSmsRxNum == 0 )
80BC6A 901587            MOV     DPTR,#ZhkSmsRxNum
80BC6D E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 453


80BC6E 7005              JNZ     ?C0133?MOBILE
  685: 			return 1;
80BC70 7F01              MOV     R7,#01H
80BC72 02BCFB            LJMP    ?C0134?MOBILE
80BC75         ?C0133?MOBILE:
  686: 
  687: 		memcpy( Msg , &ZhkSmsRxBuf[0], sizeof( struct SHORTMSG ) );
80BC75 901658            MOV     DPTR,#Msg
80BC78 A5128007AC        ECALL   ?C?PLDXDATA
80BC7D A801              MOV     R0,AR1
80BC7F AC02              MOV     R4,AR2
80BC81 AD03              MOV     R5,AR3
80BC83 7B00              MOV     R3,#?C?XDATASEG
80BC85 7A0E              MOV     R2,#HIGH ZhkSmsRxBuf
80BC87 79BD              MOV     R1,#LOW ZhkSmsRxBuf
80BC89 7E00              MOV     R6,#00H
80BC8B 7FB2              MOV     R7,#0B2H
80BC8D A51280052D        ECALL   ?C?COPY
  688: 		ZhkSmsRxNum -- ;
80BC92 901587            MOV     DPTR,#ZhkSmsRxNum
80BC95 E0                MOVX    A,@DPTR
80BC96 14                DEC     A
80BC97 F0                MOVX    @DPTR,A
  689: 		if( ZhkSmsRxNum > 0 )
80BC98 E0                MOVX    A,@DPTR
80BC99 D3                SETB    C
80BC9A 9400              SUBB    A,#00H
80BC9C 403D              JC      ?C0135?MOBILE
  690: 		{
  691: 			for( i = 0; i < ZhkSmsRxNum; i ++ )
80BC9E E4                CLR     A
80BC9F F528              MOV     i,A
80BCA1         ?C0136?MOBILE:
80BCA1 901587            MOV     DPTR,#ZhkSmsRxNum
80BCA4 E0                MOVX    A,@DPTR
80BCA5 FF                MOV     R7,A
80BCA6 E528              MOV     A,i
80BCA8 C3                CLR     C
80BCA9 9F                SUBB    A,R7
80BCAA 502F              JNC     ?C0135?MOBILE
  692: 				memcpy( &ZhkSmsRxBuf[i], &ZhkSmsRxBuf[i+1], sizeof( struct SHORTMSG ) );
80BCAC E528              MOV     A,i
80BCAE 75F0B2            MOV     B,#0B2H
80BCB1 A4                MUL     AB
80BCB2 FF                MOV     R7,A
80BCB3 AEF0              MOV     R6,B
80BCB5 246F              ADD     A,#LOW ZhkSmsRxBuf+0B2H
80BCB7 F9                MOV     R1,A
80BCB8 740F              MOV     A,#HIGH ZhkSmsRxBuf+0B2H
80BCBA 3E                ADDC    A,R6
80BCBB FA                MOV     R2,A
80BCBC 7B00              MOV     R3,#?C?XDATASEG
80BCBE C001              PUSH    AR1
80BCC0 74BD              MOV     A,#LOW ZhkSmsRxBuf
80BCC2 2F                ADD     A,R7
80BCC3 F9                MOV     R1,A
80BCC4 740E              MOV     A,#HIGH ZhkSmsRxBuf
80BCC6 3E                ADDC    A,R6
80BCC7 A801              MOV     R0,AR1
80BCC9 FC                MOV     R4,A
80BCCA 7D00              MOV     R5,#?C?XDATASEG
80BCCC D001              POP     AR1
80BCCE 7E00              MOV     R6,#00H
80BCD0 7FB2              MOV     R7,#0B2H
80BCD2 A51280052D        ECALL   ?C?COPY
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 454


80BCD7 0528              INC     i
80BCD9 80C6              SJMP    ?C0136?MOBILE
  693: 		}
80BCDB         ?C0135?MOBILE:
  694: 		memset( &ZhkSmsRxBuf[i], 0, sizeof( struct SHORTMSG ) );
80BCDB 9000B2            MOV     DPTR,#0B2H
80BCDE 7D00              MOV     R5,#00H
80BCE0 E528              MOV     A,i
80BCE2 75F0B2            MOV     B,#0B2H
80BCE5 A4                MUL     AB
80BCE6 24BD              ADD     A,#LOW ZhkSmsRxBuf
80BCE8 F9                MOV     R1,A
80BCE9 740E              MOV     A,#HIGH ZhkSmsRxBuf
80BCEB 35F0              ADDC    A,B
80BCED FA                MOV     R2,A
80BCEE 7B00              MOV     R3,#?C?XDATASEG
80BCF0 AE83              MOV     R6,DPH
80BCF2 AF82              MOV     R7,DPL
80BCF4 A5128008A6        ECALL   ?C?MEMSET
  695: 		return 0;	
80BCF9 7F00              MOV     R7,#00H
  696: 	}
80BCFB         ?C0134?MOBILE:
80BCFB A522              ERET    
----- FUNCTION _GetShortMsg (END) -------


----- FUNCTION CycleSendSMS (BEGIN) -----
 FILE: 'mainflow.c'
 1702: u_char CycleSendSMS()
 1703: {
 1704: 	u_char xdata i = 0;
 1705: 	
80BCFD E4                CLR     A
80BCFE 90159D            MOV     DPTR,#i
80BD01 F0                MOVX    @DPTR,A
 1706: 	if( SystemParameter.MobileON != 1 )
80BD02 900446            MOV     DPTR,#SystemParameter+026H
80BD05 E0                MOVX    A,@DPTR
80BD06 6401              XRL     A,#01H
80BD08 6004              JZ      ?C0374?MAINFLOW
 1707: 		return 0;
80BD0A 7F00              MOV     R7,#00H
80BD0C 805C              SJMP    ?C0375?MAINFLOW
80BD0E         ?C0374?MAINFLOW:
 1708: /*	//用于有重发机制的协议
 1709: 	for( i = 0; i < MAX_SMS_LIST; i++ )
 1710: 	{
 1711: 		if( ( AlarmSpacing >= 0 ) && ( AlarmSpacing <= 2 ) && ( SMSMessage[ i ].Flag == 1 ) )
 1712: 		{
 1713: 			SMSMessage[ i ].Flag = 0;			
 1714: 		}
 1715: 	}
 1716: 	for( i = 0; i < MAX_SMS_LIST; i ++ )
 1717: 	{
 1718: 		if( ( SMSMessage[ i ].SendTime <= AlarmSpacing ) && ( SMSMessage[ i ].Flag == 0 ) && 
 1719: 			( SMSCommStatus() ) && ( SMSMessage[ i ].SMSLen != 0 ) )
 1720: 		{				
 1721: 			SendSMS( SMSMessage[ i ].SMSMessage, SMSMessage[ i ].SMSLen );
 1722: 			memset( &SMSMessage[ i ], 0, sizeof(struct SMSMessageList ) );
 1723: 		}
 1724: 	}
 1725: */
 1726: 	//报警信息如果有页，则再次组包
 1727: 	if( ( SMSQuery & 0x40 ) == 0x40 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 455


80BD0E 900145            MOV     DPTR,#SMSQuery
80BD11 E0                MOVX    A,@DPTR
80BD12 30E605            JNB     ACC.6,?C0376?MAINFLOW
 1728: 		ScanIsSendAlarm();
80BD15 A51280A082        ECALL   ScanIsSendAlarm
80BD1A         ?C0376?MAINFLOW:
 1729: 
 1730: 	//查询设备状态如果有分页，则再次组包
 1731: 	if( ( SMSQuery & 0x80 ) == 0x80 )
80BD1A 900145            MOV     DPTR,#SMSQuery
80BD1D E0                MOVX    A,@DPTR
80BD1E 30E705            JNB     ACC.7,?C0377?MAINFLOW
 1732: 		ScanDeviceStatus();
80BD21 A51280AF92        ECALL   ScanDeviceStatus
80BD26         ?C0377?MAINFLOW:
 1733: 
 1734: 	if( ( SMSQuery & 0x01 ) == 0x01 )
80BD26 900145            MOV     DPTR,#SMSQuery
80BD29 E0                MOVX    A,@DPTR
80BD2A 30E00F            JNB     ACC.0,?C0378?MAINFLOW
 1735: 	{
 1736: 		//有查询设备状态的命令
 1737: 		if( ScanDeviceStatus() == 0 )
80BD2D A51280AF92        ECALL   ScanDeviceStatus
80BD32 EF                MOV     A,R7
80BD33 7007              JNZ     ?C0378?MAINFLOW
 1738: 			SMSQuery &= 0xFE;
80BD35 900145            MOV     DPTR,#SMSQuery
80BD38 E0                MOVX    A,@DPTR
80BD39 54FE              ANL     A,#0FEH
80BD3B F0                MOVX    @DPTR,A
 1739: 	}
80BD3C         ?C0378?MAINFLOW:
 1740: 	if(( SMSQuery & 0x02 ) == 0x02 )
80BD3C 900145            MOV     DPTR,#SMSQuery
80BD3F E0                MOVX    A,@DPTR
80BD40 30E10F            JNB     ACC.1,?C0380?MAINFLOW
 1741: 	{
 1742: 		if( TradePack() == 0 )
80BD43 A51280AACA        ECALL   TradePack
80BD48 EF                MOV     A,R7
80BD49 7007              JNZ     ?C0380?MAINFLOW
 1743: 			SMSQuery &= 0xFD;
80BD4B 900145            MOV     DPTR,#SMSQuery
80BD4E E0                MOVX    A,@DPTR
80BD4F 54FD              ANL     A,#0FDH
80BD51 F0                MOVX    @DPTR,A
 1744: 	}
80BD52         ?C0380?MAINFLOW:
 1745: 	if( ( SMSQuery & 0x04 ) == 0x00 ) 
80BD52 900145            MOV     DPTR,#SMSQuery
80BD55 E0                MOVX    A,@DPTR
80BD56 20E20F            JB      ACC.2,?C0382?MAINFLOW
 1746: 	{	
 1747: 		if( ScanIsSendAlarm() == 0 )
80BD59 A51280A082        ECALL   ScanIsSendAlarm
80BD5E EF                MOV     A,R7
80BD5F 7007              JNZ     ?C0382?MAINFLOW
 1748: 			SMSQuery |= 0x04;
80BD61 900145            MOV     DPTR,#SMSQuery
80BD64 E0                MOVX    A,@DPTR
80BD65 4404              ORL     A,#04H
80BD67 F0                MOVX    @DPTR,A
 1749: 	}		
80BD68         ?C0382?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 456


 1750: 	return 0;
80BD68 7F00              MOV     R7,#00H
 1751: }
80BD6A         ?C0375?MAINFLOW:
80BD6A A522              ERET    
----- FUNCTION CycleSendSMS (END) -------


----- FUNCTION ?L?COM002F (BEGIN) -----
80BD6C A5128082D7        ECALL   CoreProcessCycle
----- FUNCTION CheckGoodsSumAndLoad (BEGIN) -----
 FILE: 'mainflow.c'
 1753: u_char CheckGoodsSumAndLoad()
 1754: {
 1755: 	u_char xdata i = 0;	
 1756: 	u_char xdata j = 0;
;---- Variable 'i' assigned to Register 'R7' ----
80BD71 E4                CLR     A
80BD72 FF                MOV     R7,A
 1757: 
80BD73 90159B            MOV     DPTR,#j
80BD76 F0                MOVX    @DPTR,A
 1758:     //Trace( "\n CheckCardSumAndLoad" );
 1759: 	for( i = 0; i < GOODSWAYNUM; i ++ )
80BD77         ?C0384?MAINFLOW:
 1760: 	{
 1761: 	    if( SystemParameter.GOCOn != 0x01 )
80BD77 90046B            MOV     DPTR,#SystemParameter+04BH
80BD7A E0                MOVX    A,@DPTR
80BD7B 6401              XRL     A,#01H
80BD7D 6035              JZ      ?C0387?MAINFLOW
 1762: 		{
 1763: 			if(( GoodsWaySetVal[i].GoodsCurrentSum != 0 ) && ( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 ) && 
80BD7F 75F005            MOV     B,#05H
80BD82 EF                MOV     A,R7
80BD83 900008            MOV     DPTR,#GoodsWaySetVal+04H
80BD86 A51280079F        ECALL   ?C?OFFXADD
80BD8B E0                MOVX    A,@DPTR
80BD8C 604E              JZ      ?C0386?MAINFLOW
80BD8E 75F005            MOV     B,#05H
80BD91 EF                MOV     A,R7
80BD92 900005            MOV     DPTR,#GoodsWaySetVal+01H
80BD95 A51280079F        ECALL   ?C?OFFXADD
80BD9A E0                MOVX    A,@DPTR
80BD9B 540A              ANL     A,#0AH
80BD9D 703D              JNZ     ?C0386?MAINFLOW
80BD9F 75F005            MOV     B,#05H
80BDA2 EF                MOV     A,R7
80BDA3 900006            MOV     DPTR,#GoodsWaySetVal+02H
80BDA6 A51280079F        ECALL   ?C?OFFXADD
80BDAB E0                MOVX    A,@DPTR
80BDAC FC                MOV     R4,A
80BDAD A3                INC     DPTR
80BDAE E0                MOVX    A,@DPTR
80BDAF 4C                ORL     A,R4
80BDB0 602A              JZ      ?C0386?MAINFLOW
 1764: 							( GoodsWaySetVal[i].Price != 0 ) )
 1765: 				break;
80BDB2 802E              SJMP    ?C0385?MAINFLOW
 1766: 		}
80BDB4         ?C0387?MAINFLOW:
 1767: 		else
 1768: 		{
 1769: 			if(( (GoodsWaySetVal[i].WayState & 0x04) == 0 ) && ( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 ) && 
80BDB4 75F005            MOV     B,#05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 457


80BDB7 EF                MOV     A,R7
80BDB8 900005            MOV     DPTR,#GoodsWaySetVal+01H
80BDBB A51280079F        ECALL   ?C?OFFXADD
80BDC0 E0                MOVX    A,@DPTR
80BDC1 FE                MOV     R6,A
80BDC2 20E217            JB      ACC.2,?C0386?MAINFLOW
80BDC5 540A              ANL     A,#0AH
80BDC7 7013              JNZ     ?C0386?MAINFLOW
80BDC9 75F005            MOV     B,#05H
80BDCC EF                MOV     A,R7
80BDCD 900006            MOV     DPTR,#GoodsWaySetVal+02H
80BDD0 A51280079F        ECALL   ?C?OFFXADD
80BDD5 E0                MOVX    A,@DPTR
80BDD6 FC                MOV     R4,A
80BDD7 A3                INC     DPTR
80BDD8 E0                MOVX    A,@DPTR
80BDD9 4C                ORL     A,R4
80BDDA 7006              JNZ     ?C0385?MAINFLOW
 1770: 							( GoodsWaySetVal[i].Price != 0 ) )
 1771: 				break;
 1772: 		}
 1773: 	}
80BDDC         ?C0386?MAINFLOW:
80BDDC 0F                INC     R7
80BDDD EF                MOV     A,R7
80BDDE 6440              XRL     A,#040H
80BDE0 7095              JNZ     ?C0384?MAINFLOW
80BDE2         ?C0385?MAINFLOW:
 1774: 
 1775: 	if( i == GOODSWAYNUM )
80BDE2 EF                MOV     A,R7
80BDE3 6440              XRL     A,#040H
80BDE5 7072              JNZ     ?C0391?MAINFLOW
 1776: 	{
 1777:         //Trace( "\n HardWareErr |= 0x0080 " );
 1778: 		HardWareErr |= 0x0080;
80BDE7 900485            MOV     DPTR,#HardWareErr+01H
80BDEA E0                MOVX    A,@DPTR
80BDEB 4480              ORL     A,#080H
80BDED F0                MOVX    @DPTR,A
 1779: 		SystemStatus = 1;
80BDEE 9001C6            MOV     DPTR,#SystemStatus
80BDF1 7401              MOV     A,#01H
80BDF3 F0                MOVX    @DPTR,A
 1780: 		for( i = 0; i < GOODSWAYNUM; i ++ )
80BDF4 E4                CLR     A
80BDF5 FF                MOV     R7,A
80BDF6         ?C0392?MAINFLOW:
 1781: 		{
 1782: 		    if( SystemParameter.GOCOn != 0x01 )
80BDF6 90046B            MOV     DPTR,#SystemParameter+04BH
80BDF9 E0                MOVX    A,@DPTR
80BDFA 6401              XRL     A,#01H
80BDFC 6011              JZ      ?C0395?MAINFLOW
 1783: 			{
 1784: 				if( GoodsWaySetVal[i].GoodsCurrentSum != 0 ) 
80BDFE 75F005            MOV     B,#05H
80BE01 EF                MOV     A,R7
80BE02 900008            MOV     DPTR,#GoodsWaySetVal+04H
80BE05 A51280079F        ECALL   ?C?OFFXADD
80BE0A E0                MOVX    A,@DPTR
80BE0B 6012              JZ      ?C0394?MAINFLOW
 1785: 					break;
80BE0D 8015              SJMP    ?C0393?MAINFLOW
 1786: 			}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 458


80BE0F         ?C0395?MAINFLOW:
 1787: 			else
 1788: 			{
 1789: 			    if( (GoodsWaySetVal[i].WayState & 0x04) == 0 )
80BE0F 75F005            MOV     B,#05H
80BE12 EF                MOV     A,R7
80BE13 900005            MOV     DPTR,#GoodsWaySetVal+01H
80BE16 A51280079F        ECALL   ?C?OFFXADD
80BE1B E0                MOVX    A,@DPTR
80BE1C 30E205            JNB     ACC.2,?C0393?MAINFLOW
 1790: 				    break;
 1791: 			}
 1792: 		}
80BE1F         ?C0394?MAINFLOW:
80BE1F 0F                INC     R7
80BE20 EF                MOV     A,R7
80BE21 B440D2            CJNE    A,#040H,?C0392?MAINFLOW
80BE24         ?C0393?MAINFLOW:
 1793: 	
 1794: 		if( i == GOODSWAYNUM )
80BE24 EF                MOV     A,R7
80BE25 B44008            CJNE    A,#040H,?C0399?MAINFLOW
 1795: 		{
 1796: 			HardWareErr |= 0x0010;
80BE28 900485            MOV     DPTR,#HardWareErr+01H
80BE2B E0                MOVX    A,@DPTR
80BE2C 4410              ORL     A,#010H
 1797: 			SystemStatus = 1;		
 1798:             //Trace( "\n CheckCardSumAndLoad all no goods" );
 1799: 		}
80BE2E 8022              SJMP    ?C1071?MAINFLOW
80BE30         ?C0399?MAINFLOW:
 1800: 		else
 1801: 		{
 1802: 			for( i = 0; i < GOODSWAYNUM; i ++ )
80BE30 E4                CLR     A
80BE31 FF                MOV     R7,A
80BE32         ?C0401?MAINFLOW:
 1803: 			{
 1804: 				if( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 )
80BE32 75F005            MOV     B,#05H
80BE35 EF                MOV     A,R7
80BE36 900005            MOV     DPTR,#GoodsWaySetVal+01H
80BE39 A51280079F        ECALL   ?C?OFFXADD
80BE3E E0                MOVX    A,@DPTR
80BE3F 540A              ANL     A,#0AH
80BE41 6005              JZ      ?C0402?MAINFLOW
 1805: 					break;
 1806: 			}
80BE43         ?C0403?MAINFLOW:
80BE43 0F                INC     R7
80BE44 EF                MOV     A,R7
80BE45 B440EA            CJNE    A,#040H,?C0401?MAINFLOW
80BE48         ?C0402?MAINFLOW:
 1807: 
 1808: 			if( i == GOODSWAYNUM )
80BE48 EF                MOV     A,R7
80BE49 B4400D            CJNE    A,#040H,?C0391?MAINFLOW
 1809: 			{			
 1810:                 //Trace( "\n CheckCardSumAndLoad colnum no ok" );
 1811: 				HardWareErr |= 0x0020;
80BE4C 900485            MOV     DPTR,#HardWareErr+01H
80BE4F E0                MOVX    A,@DPTR
80BE50 4420              ORL     A,#020H
80BE52         
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 459


80BE52 F0                MOVX    @DPTR,A
 1812: 				SystemStatus = 1;
80BE53 9001C6            MOV     DPTR,#SystemStatus
80BE56 7401              MOV     A,#01H
80BE58 F0                MOVX    @DPTR,A
 1813: 			}
 1814: 		}		
 1815: 	}
80BE59         ?C0391?MAINFLOW:
 1816: 
 1817: 	if( HardWareErr == 0 )	
80BE59 900484            MOV     DPTR,#HardWareErr
80BE5C E0                MOVX    A,@DPTR
80BE5D 7002              JNZ     ?C1023?MAINFLOW
80BE5F A3                INC     DPTR
80BE60 E0                MOVX    A,@DPTR
80BE61         ?C1023?MAINFLOW:
80BE61 7009              JNZ     ?C0406?MAINFLOW
 1818: 	{
 1819: 		LogicOpen();
80BE63 A5128097EE        ECALL   LogicOpen
 1820: 		return 0;
80BE68 7F00              MOV     R7,#00H
80BE6A 8002              SJMP    ?C0407?MAINFLOW
 1821: 	}
80BE6C         ?C0406?MAINFLOW:
 1822: 	else 
 1823: 	{
 1824: 		#ifndef _DEBUG_TRACE		
 1825: 			return 1;
80BE6C 7F01              MOV     R7,#01H
 1826: 		#else
 1827: 			return 0;
 1828: 		#endif
 1829: 	}
 1830: }
80BE6E         ?C0407?MAINFLOW:
80BE6E A522              ERET    
----- FUNCTION CheckGoodsSumAndLoad (END) -------


----- FUNCTION ?L?COM003F (BEGIN) -----
80BE70 A5128082D7        ECALL   CoreProcessCycle
----- FUNCTION CheckKeyPress (BEGIN) -----
 FILE: 'mainflow.c'
 1887: u_char CheckKeyPress()
 1888: {
 1889: 	u_char xdata key = 0;
 1890: 
;---- Variable 'key' assigned to Register 'R6' ----
80BE75 E4                CLR     A
80BE76 FE                MOV     R6,A
 1891: //	Trace( "\n CheckKeyPress" );
 1892: 	if ( SystemStatus != 1 ) 
80BE77 9001C6            MOV     DPTR,#SystemStatus
80BE7A E0                MOVX    A,@DPTR
80BE7B 6401              XRL     A,#01H
80BE7D 6004              JZ      ?C0417?MAINFLOW
 1893: 		return 2; // 系统关闭，按键不理,当做没按		
80BE7F 7F02              MOV     R7,#02H
80BE81 8075              SJMP    ?C0418?MAINFLOW
80BE83         ?C0417?MAINFLOW:
 1894: 	key = GetKey();
80BE83 A5128096D1        ECALL   GetKey
80BE88 AE07              MOV     R6,AR7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 460


 1895: //	Trace( "\n CheckKeyPress key1 = %bu", key );
 1896: 	if( ( key > 0 ) && ( key <= 9 ) )
80BE8A EE                MOV     A,R6
80BE8B D3                SETB    C
80BE8C 9400              SUBB    A,#00H
80BE8E 401C              JC      ?C0419?MAINFLOW
80BE90 EE                MOV     A,R6
80BE91 D3                SETB    C
80BE92 9409              SUBB    A,#09H
80BE94 5016              JNC     ?C0419?MAINFLOW
 1897: 	{
 1898: //		Trace( "\n CheckKeyPress key2 = %bu", key );
 1899: 		CurrentStockCode = key + CurrentStockCode*10;
80BE96 900B28            MOV     DPTR,#CurrentStockCode
80BE99 E0                MOVX    A,@DPTR
80BE9A 75F00A            MOV     B,#0AH
80BE9D A4                MUL     AB
80BE9E 2E                ADD     A,R6
80BE9F F0                MOVX    @DPTR,A
 1900: 		if( QueryFlag == 0 )
80BEA0 202705            JB      QueryFlag,?C0420?MAINFLOW
 1901: 		{
 1902: 			QueryFlag = 1;
80BEA3 D227              SETB    QueryFlag
 1903: 			QueryTimer = 30;
80BEA5 75141E            MOV     QueryTimer,#01EH
 1904: 		}
80BEA8         ?C0420?MAINFLOW:
 1905: 		return 1;
80BEA8 7F01              MOV     R7,#01H
80BEAA 804C              SJMP    ?C0418?MAINFLOW
 1906: 	}
80BEAC         ?C0419?MAINFLOW:
 1907: 	else if( key == KEY_CANCEL )
80BEAC EE                MOV     A,R6
80BEAD B41B22            CJNE    A,#01BH,?C0422?MAINFLOW
 1908: 	{
 1909: 		DisplayCursorState( 0, 1, 1, 0, 1 );
80BEB0 D21A              SETB    ?_DisplayCursorState?BIT
80BEB2 E4                CLR     A
80BEB3 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80BEB6 F0                MOVX    @DPTR,A
80BEB7 D21B              SETB    ?_DisplayCursorState?BIT+01H
80BEB9 7D01              MOV     R5,#01H
80BEBB FF                MOV     R7,A
80BEBC A51280897C        ECALL   _DisplayCursorState
 1910: 		QueryFlag = 0;
80BEC1 C227              CLR     QueryFlag
 1911: 		QueryTimer = 0;
80BEC3 E4                CLR     A
80BEC4 F514              MOV     QueryTimer,A
 1912: 		CurrentStockCode = 0;
80BEC6 900B28            MOV     DPTR,#CurrentStockCode
80BEC9 F0                MOVX    @DPTR,A
 1913: 		UpdataDisp = 6;
80BECA A3                INC     DPTR
80BECB 7406              MOV     A,#06H
80BECD F0                MOVX    @DPTR,A
 1914: 		return 2;
80BECE 7F02              MOV     R7,#02H
80BED0 8026              SJMP    ?C0418?MAINFLOW
 1915: 	}		
80BED2         ?C0422?MAINFLOW:
 1916: 	else
 1917: 	{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 461


 1918: 		if( ( QueryFlag == 1 ) && ( QueryTimer == 0 ) )
80BED2 302721            JNB     QueryFlag,?C0424?MAINFLOW
80BED5 E514              MOV     A,QueryTimer
80BED7 701D              JNZ     ?C0424?MAINFLOW
 1919: 		{
 1920: 			DisplayCursorState( 0, 1, 1, 0, 1 );
80BED9 D21A              SETB    ?_DisplayCursorState?BIT
80BEDB 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80BEDE F0                MOVX    @DPTR,A
80BEDF D21B              SETB    ?_DisplayCursorState?BIT+01H
80BEE1 7D01              MOV     R5,#01H
80BEE3 FF                MOV     R7,A
80BEE4 A51280897C        ECALL   _DisplayCursorState
 1921: 			QueryFlag = 0;
80BEE9 C227              CLR     QueryFlag
 1922: 			QueryTimer = 0;
80BEEB E4                CLR     A
80BEEC F514              MOV     QueryTimer,A
 1923: 			CurrentStockCode = 0;
80BEEE 900B28            MOV     DPTR,#CurrentStockCode
80BEF1 F0                MOVX    @DPTR,A
 1924: 			UpdataDisp = 6;
80BEF2 A3                INC     DPTR
80BEF3 7406              MOV     A,#06H
80BEF5 F0                MOVX    @DPTR,A
 1925: 		}
80BEF6         ?C0424?MAINFLOW:
 1926: 		return 2;	
80BEF6 7F02              MOV     R7,#02H
 1927: 	}
80BEF8         ?C0418?MAINFLOW:
80BEF8 A522              ERET    
----- FUNCTION CheckKeyPress (END) -------


----- FUNCTION QueryIsGoodsWay (BEGIN) -----
 FILE: 'mainflow.c'
 2011: u_char QueryIsGoodsWay()
 2012: {
 2013: 	uchar xdata i = 0;
 2014: 
80BEFA E4                CLR     A
80BEFB 90159B            MOV     DPTR,#i
80BEFE F0                MOVX    @DPTR,A
 2015: 	Trace( "\n QueryIsGoodsWay" );	
 2016: 	Trace("\n GoodsWayTest GoodsWaySetVal[%bu].WayState = %02bx", CurrentStockCode,GoodsWaySetVal[ CurrentStockCode 
>> ].WayState );
 2017: 	Trace("\n GoodsWaySetVal[%bu].Price = %u", CurrentStockCode,GoodsWaySetVal[CurrentStockCode].Price );
 2018: 	memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );
80BEFF FE                MOV     R6,A
80BF00 7F14              MOV     R7,#014H
80BF02 FD                MOV     R5,A
80BF03 7B00              MOV     R3,#?C?XDATASEG
80BF05 7A04              MOV     R2,#HIGH DisplayBuffer
80BF07 7970              MOV     R1,#LOW DisplayBuffer
80BF09 A5128008A6        ECALL   ?C?MEMSET
 2019: 	
 2020: 	if( (SystemParameter.GOCOn != 0x01)&&(GoodsWaySetVal[CurrentStockCode].GoodsCurrentSum==0) ) //Added by Andy on 
>> 2010.10.26
80BF0E 90046B            MOV     DPTR,#SystemParameter+04BH
80BF11 E0                MOVX    A,@DPTR
80BF12 6401              XRL     A,#01H
80BF14 6015              JZ      ?C0437?MAINFLOW
80BF16 900B28            MOV     DPTR,#CurrentStockCode
80BF19 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 462


80BF1A FF                MOV     R7,A
80BF1B 75F005            MOV     B,#05H
80BF1E 900008            MOV     DPTR,#GoodsWaySetVal+04H
80BF21 A51280079F        ECALL   ?C?OFFXADD
80BF26 E0                MOVX    A,@DPTR
80BF27 7002              JNZ     ?C0437?MAINFLOW
 2021: 	{	
 2022: 		DisplayLine = STR_COLUMN;	
 2023: 		i = sprintf( DisplayBuffer, "%s %bu - %s", DispInformationTable[DisplayLine].str, GoodsWaySetVal[CurrentStockCo
>> de].WayNo,
 2024: 	 			DispInformationTable[STR_GOODS_OUT].str );				
 2025: 	}
80BF29 801C              SJMP    ?C1074?MAINFLOW
80BF2B         ?C0437?MAINFLOW:
 2026: 	else if( (SystemParameter.GOCOn==0x01)&&(GoodsWaySetVal[CurrentStockCode].WayState&0x04) ) //Added by Andy on 20
>> 10.10.26
80BF2B 90046B            MOV     DPTR,#SystemParameter+04BH
80BF2E E0                MOVX    A,@DPTR
80BF2F 6401              XRL     A,#01H
80BF31 705C              JNZ     ?C0439?MAINFLOW
80BF33 900B28            MOV     DPTR,#CurrentStockCode
80BF36 E0                MOVX    A,@DPTR
80BF37 FF                MOV     R7,A
80BF38 75F005            MOV     B,#05H
80BF3B 900005            MOV     DPTR,#GoodsWaySetVal+01H
80BF3E A51280079F        ECALL   ?C?OFFXADD
80BF43 E0                MOVX    A,@DPTR
80BF44 30E248            JNB     ACC.2,?C0439?MAINFLOW
 2027: 	{
 2028: 		DisplayLine = STR_COLUMN;	
80BF47         
80BF47 900B27            MOV     DPTR,#DisplayLine
80BF4A 7428              MOV     A,#028H
80BF4C F0                MOVX    @DPTR,A
 2029: 		i = sprintf( DisplayBuffer, "%s %bu - %s", DispInformationTable[DisplayLine].str, GoodsWaySetVal[CurrentStockCo
>> de].WayNo,
80BF4D 7B80              MOV     R3,#BYTE2 080040AH
80BF4F 7A04              MOV     R2,#HIGH 080040AH
80BF51 790A              MOV     R1,#LOW 080040AH
80BF53 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80BF56 A5128007B6        ECALL   ?C?PSTXDATA
80BF5B 900B27            MOV     DPTR,#DisplayLine
80BF5E E0                MOVX    A,@DPTR
80BF5F 25E0              ADD     A,ACC
80BF61 25E0              ADD     A,ACC
80BF63 2471              ADD     A,#LOW DispInformationTable
80BF65 F582              MOV     DPL,A
80BF67 E4                CLR     A
80BF68 3404              ADDC    A,#HIGH DispInformationTable
80BF6A F583              MOV     DPH,A
80BF6C A5128007C0        ECALL   ?C?PLDCODE
80BF71 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80BF74 A5128007B6        ECALL   ?C?PSTXDATA
80BF79 75F005            MOV     B,#05H
80BF7C EF                MOV     A,R7
80BF7D 900004            MOV     DPTR,#GoodsWaySetVal
80BF80 A51280079F        ECALL   ?C?OFFXADD
80BF85 E0                MOVX    A,@DPTR
80BF86 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80BF89 F0                MOVX    @DPTR,A
80BF8A 900515            MOV     DPTR,#DispInformationTable+0A4H
 2030: 	 			DispInformationTable[STR_GOODS_OUT].str );
 2031: 	}
80BF8D 8076              SJMP    ?C1075?MAINFLOW
80BF8F         ?C0439?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 463


 2032: 	else if( ( ( GoodsWaySetVal[CurrentStockCode].WayState & 0x0A ) != 0x00 ) || 
80BF8F 900B28            MOV     DPTR,#CurrentStockCode
80BF92 E0                MOVX    A,@DPTR
80BF93 FF                MOV     R7,A
80BF94 75F005            MOV     B,#05H
80BF97 900005            MOV     DPTR,#GoodsWaySetVal+01H
80BF9A A51280079F        ECALL   ?C?OFFXADD
80BF9F E0                MOVX    A,@DPTR
80BFA0 FE                MOV     R6,A
80BFA1 540A              ANL     A,#0AH
80BFA3 7017              JNZ     ?C0442?MAINFLOW
80BFA5 75F005            MOV     B,#05H
80BFA8 EF                MOV     A,R7
80BFA9 900006            MOV     DPTR,#GoodsWaySetVal+02H
80BFAC A51280079F        ECALL   ?C?OFFXADD
80BFB1 E0                MOVX    A,@DPTR
80BFB2 FC                MOV     R4,A
80BFB3 A3                INC     DPTR
80BFB4 E0                MOVX    A,@DPTR
80BFB5 4C                ORL     A,R4
80BFB6 6004              JZ      ?C0442?MAINFLOW
80BFB8 EE                MOV     A,R6
80BFB9 20E059            JB      ACC.0,?C0441?MAINFLOW
80BFBC         ?C0442?MAINFLOW:
 2033: 			( GoodsWaySetVal[CurrentStockCode].Price == 0 ) || ( ( GoodsWaySetVal[CurrentStockCode].WayState & 0x01 ) != 0
>> x01 ) )
 2034: 			//货道故障或单价为0		
 2035: 	{
 2036: 		DisplayLine = STR_COLUMN;	
80BFBC 900B27            MOV     DPTR,#DisplayLine
80BFBF 7428              MOV     A,#028H
80BFC1 F0                MOVX    @DPTR,A
 2037: 		i = sprintf( DisplayBuffer, "%s %bu - %s", DispInformationTable[DisplayLine].str, GoodsWaySetVal[CurrentStockCo
>> de].WayNo,
80BFC2 7B80              MOV     R3,#BYTE2 080040AH
80BFC4 7A04              MOV     R2,#HIGH 080040AH
80BFC6 790A              MOV     R1,#LOW 080040AH
80BFC8 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80BFCB A5128007B6        ECALL   ?C?PSTXDATA
80BFD0 900B27            MOV     DPTR,#DisplayLine
80BFD3 E0                MOVX    A,@DPTR
80BFD4 25E0              ADD     A,ACC
80BFD6 25E0              ADD     A,ACC
80BFD8 2471              ADD     A,#LOW DispInformationTable
80BFDA F582              MOV     DPL,A
80BFDC E4                CLR     A
80BFDD 3404              ADDC    A,#HIGH DispInformationTable
80BFDF F583              MOV     DPH,A
80BFE1 A5128007C0        ECALL   ?C?PLDCODE
80BFE6 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80BFE9 A5128007B6        ECALL   ?C?PSTXDATA
80BFEE 900B28            MOV     DPTR,#CurrentStockCode
80BFF1 E0                MOVX    A,@DPTR
80BFF2 75F005            MOV     B,#05H
80BFF5 900004            MOV     DPTR,#GoodsWaySetVal
80BFF8 A51280079F        ECALL   ?C?OFFXADD
80BFFD E0                MOVX    A,@DPTR
80BFFE 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80C001 F0                MOVX    @DPTR,A
80C002 900519            MOV     DPTR,#DispInformationTable+0A8H
80C005         
80C005 A5128007C0        ECALL   ?C?PLDCODE
80C00A 901B90            MOV     DPTR,#?_sprintf?BYTE+0AH
80C00D A5128007B6        ECALL   ?C?PSTXDATA
 2038: 	 			DispInformationTable[STR_COLUMN_ERROR].str );			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 464


 2039: 	}
80C012 02C16C            LJMP    ?C1078?MAINFLOW
80C015         ?C0441?MAINFLOW:
 2040: 	else
 2041: 	{		
 2042: 		DisplayLine = STR_PRICE;
80C015 900B27            MOV     DPTR,#DisplayLine
80C018 7427              MOV     A,#027H
80C01A F0                MOVX    @DPTR,A
 2043: 		switch( SystemParameter.curUnit )
80C01B 900468            MOV     DPTR,#SystemParameter+048H
80C01E E0                MOVX    A,@DPTR
80C01F FE                MOV     R6,A
80C020 A3                INC     DPTR
80C021 E0                MOVX    A,@DPTR
80C022 FF                MOV     R7,A
80C023 EE                MOV     A,R6
80C024 6003              JZ      $ + 5H
80C026 02C17C            LJMP    ?C0438?MAINFLOW
80C029 EF                MOV     A,R7
80C02A 24F6              ADD     A,#0F6H
80C02C 6058              JZ      ?C0446?MAINFLOW
80C02E 24A6              ADD     A,#0A6H
80C030 7003              JNZ     $ + 5H
80C032 02C0FA            LJMP    ?C0447?MAINFLOW
80C035 2463              ADD     A,#063H
80C037 6003              JZ      $ + 5H
80C039 02C17C            LJMP    ?C0438?MAINFLOW
 2044: 		{
 2045: 			case 1:
80C03C         ?C0445?MAINFLOW:
 2046: 				i = sprintf( DisplayBuffer, "%s %u", DispInformationTable[DisplayLine].str,	GoodsWaySetVal[CurrentStockCode].
>> Price );
80C03C 7B80              MOV     R3,#BYTE2 0800416H
80C03E 7A04              MOV     R2,#HIGH 0800416H
80C040 7916              MOV     R1,#LOW 0800416H
80C042 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C045 A5128007B6        ECALL   ?C?PSTXDATA
80C04A 900B27            MOV     DPTR,#DisplayLine
80C04D E0                MOVX    A,@DPTR
80C04E 25E0              ADD     A,ACC
80C050 25E0              ADD     A,ACC
80C052 2471              ADD     A,#LOW DispInformationTable
80C054 F582              MOV     DPL,A
80C056 E4                CLR     A
80C057 3404              ADDC    A,#HIGH DispInformationTable
80C059 F583              MOV     DPH,A
80C05B A5128007C0        ECALL   ?C?PLDCODE
80C060 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80C063 A5128007B6        ECALL   ?C?PSTXDATA
80C068 900B28            MOV     DPTR,#CurrentStockCode
80C06B E0                MOVX    A,@DPTR
80C06C 75F005            MOV     B,#05H
80C06F 900006            MOV     DPTR,#GoodsWaySetVal+02H
80C072 A51280079F        ECALL   ?C?OFFXADD
80C077 E0                MOVX    A,@DPTR
80C078 FF                MOV     R7,A
80C079 A3                INC     DPTR
80C07A E0                MOVX    A,@DPTR
80C07B 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80C07E CF                XCH     A,R7
80C07F F0                MOVX    @DPTR,A
80C080 A3                INC     DPTR
80C081 EF                MOV     A,R7
80C082 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 465


80C083         
 2047: 				break;				
80C083 02C16C            LJMP    ?C1078?MAINFLOW
 2048: 			case 10:
80C086         ?C0446?MAINFLOW:
 2049: 				i = sprintf( DisplayBuffer, "%s %u.%u", DispInformationTable[DisplayLine].str,
80C086 7B80              MOV     R3,#BYTE2 080041CH
80C088 7A04              MOV     R2,#HIGH 080041CH
80C08A 791C              MOV     R1,#LOW 080041CH
80C08C 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C08F A5128007B6        ECALL   ?C?PSTXDATA
80C094 900B27            MOV     DPTR,#DisplayLine
80C097 E0                MOVX    A,@DPTR
80C098 25E0              ADD     A,ACC
80C09A 25E0              ADD     A,ACC
80C09C 2471              ADD     A,#LOW DispInformationTable
80C09E F582              MOV     DPL,A
80C0A0 E4                CLR     A
80C0A1 3404              ADDC    A,#HIGH DispInformationTable
80C0A3 F583              MOV     DPH,A
80C0A5 A5128007C0        ECALL   ?C?PLDCODE
80C0AA 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80C0AD A5128007B6        ECALL   ?C?PSTXDATA
80C0B2 900B28            MOV     DPTR,#CurrentStockCode
80C0B5 E0                MOVX    A,@DPTR
80C0B6 75F005            MOV     B,#05H
80C0B9 900006            MOV     DPTR,#GoodsWaySetVal+02H
80C0BC A51280079F        ECALL   ?C?OFFXADD
80C0C1 E0                MOVX    A,@DPTR
80C0C2 FA                MOV     R2,A
80C0C3 A3                INC     DPTR
80C0C4 E0                MOVX    A,@DPTR
80C0C5 FB                MOV     R3,A
80C0C6 900468            MOV     DPTR,#SystemParameter+048H
80C0C9 E0                MOVX    A,@DPTR
80C0CA FC                MOV     R4,A
80C0CB A3                INC     DPTR
80C0CC E0                MOVX    A,@DPTR
80C0CD FD                MOV     R5,A
80C0CE AF03              MOV     R7,AR3
80C0D0 AE02              MOV     R6,AR2
80C0D2 A51280056C        ECALL   ?C?UIDIV
80C0D7 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80C0DA EE                MOV     A,R6
80C0DB F0                MOVX    @DPTR,A
80C0DC A3                INC     DPTR
80C0DD EF                MOV     A,R7
80C0DE F0                MOVX    @DPTR,A
80C0DF 900468            MOV     DPTR,#SystemParameter+048H
80C0E2 E0                MOVX    A,@DPTR
80C0E3 FC                MOV     R4,A
80C0E4 A3                INC     DPTR
80C0E5 E0                MOVX    A,@DPTR
80C0E6 FD                MOV     R5,A
80C0E7 AF03              MOV     R7,AR3
80C0E9 AE02              MOV     R6,AR2
80C0EB A51280056C        ECALL   ?C?UIDIV
80C0F0 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
80C0F3 EC                MOV     A,R4
80C0F4 F0                MOVX    @DPTR,A
80C0F5 A3                INC     DPTR
80C0F6 ED                MOV     A,R5
80C0F7 F0                MOVX    @DPTR,A
80C0F8         
 2050: 					GoodsWaySetVal[CurrentStockCode].Price/SystemParameter.curUnit,GoodsWaySetVal[CurrentStockCode].Price%System
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 466


>> Parameter.curUnit );				
 2051: 				break;
80C0F8 8072              SJMP    ?C1078?MAINFLOW
 2052: 			case 100:
80C0FA         ?C0447?MAINFLOW:
 2053: 				i = sprintf( DisplayBuffer, "%s %u.%02u", DispInformationTable[DisplayLine].str,
80C0FA 7B80              MOV     R3,#BYTE2 0800425H
80C0FC 7A04              MOV     R2,#HIGH 0800425H
80C0FE 7925              MOV     R1,#LOW 0800425H
80C100 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C103 A5128007B6        ECALL   ?C?PSTXDATA
80C108 900B27            MOV     DPTR,#DisplayLine
80C10B E0                MOVX    A,@DPTR
80C10C 25E0              ADD     A,ACC
80C10E 25E0              ADD     A,ACC
80C110 2471              ADD     A,#LOW DispInformationTable
80C112 F582              MOV     DPL,A
80C114 E4                CLR     A
80C115 3404              ADDC    A,#HIGH DispInformationTable
80C117 F583              MOV     DPH,A
80C119 A5128007C0        ECALL   ?C?PLDCODE
80C11E 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80C121 A5128007B6        ECALL   ?C?PSTXDATA
80C126 900B28            MOV     DPTR,#CurrentStockCode
80C129 E0                MOVX    A,@DPTR
80C12A 75F005            MOV     B,#05H
80C12D 900006            MOV     DPTR,#GoodsWaySetVal+02H
80C130 A51280079F        ECALL   ?C?OFFXADD
80C135 E0                MOVX    A,@DPTR
80C136 FA                MOV     R2,A
80C137 A3                INC     DPTR
80C138 E0                MOVX    A,@DPTR
80C139 FB                MOV     R3,A
80C13A 900468            MOV     DPTR,#SystemParameter+048H
80C13D E0                MOVX    A,@DPTR
80C13E FC                MOV     R4,A
80C13F A3                INC     DPTR
80C140 E0                MOVX    A,@DPTR
80C141 FD                MOV     R5,A
80C142 AF03              MOV     R7,AR3
80C144 AE02              MOV     R6,AR2
80C146 A51280056C        ECALL   ?C?UIDIV
80C14B 901B8F            MOV     DPTR,#?_sprintf?BYTE+09H
80C14E EE                MOV     A,R6
80C14F F0                MOVX    @DPTR,A
80C150 A3                INC     DPTR
80C151 EF                MOV     A,R7
80C152 F0                MOVX    @DPTR,A
80C153 900468            MOV     DPTR,#SystemParameter+048H
80C156 E0                MOVX    A,@DPTR
80C157 FC                MOV     R4,A
80C158 A3                INC     DPTR
80C159 E0                MOVX    A,@DPTR
80C15A FD                MOV     R5,A
80C15B AF03              MOV     R7,AR3
80C15D AE02              MOV     R6,AR2
80C15F A51280056C        ECALL   ?C?UIDIV
80C164 901B91            MOV     DPTR,#?_sprintf?BYTE+0BH
80C167 EC                MOV     A,R4
80C168 F0                MOVX    @DPTR,A
80C169 A3                INC     DPTR
80C16A ED                MOV     A,R5
80C16B F0                MOVX    @DPTR,A
80C16C         
80C16C 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 467


80C16E 7A04              MOV     R2,#HIGH DisplayBuffer
80C170 7970              MOV     R1,#LOW DisplayBuffer
80C172 A512800949        ECALL   _sprintf
80C177 90159B            MOV     DPTR,#i
80C17A EF                MOV     A,R7
80C17B F0                MOVX    @DPTR,A
 2054: 					GoodsWaySetVal[CurrentStockCode].Price/SystemParameter.curUnit,GoodsWaySetVal[CurrentStockCode].Price%System
>> Parameter.curUnit );				
 2055: 			break;		
 2056: 		}				
 2057: 	}
80C17C         ?C0438?MAINFLOW:
 2058: 	DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
80C17C D21A              SETB    ?_DisplayStr?BIT
80C17E 7B00              MOV     R3,#?C?XDATASEG
80C180 7A04              MOV     R2,#HIGH DisplayBuffer
80C182 7970              MOV     R1,#LOW DisplayBuffer
80C184 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C187 A5128007B6        ECALL   ?C?PSTXDATA
80C18C 90159B            MOV     DPTR,#i
80C18F E0                MOVX    A,@DPTR
80C190 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80C193 F0                MOVX    @DPTR,A
80C194 7D01              MOV     R5,#01H
80C196 E4                CLR     A
80C197 FF                MOV     R7,A
80C198 A51280885F        ECALL   _DisplayStr
 2059: 	WaitForWork( 3000, NULL );
80C19D E4                CLR     A
80C19E 7FB8              MOV     R7,#0B8H
80C1A0 7E0B              MOV     R6,#0BH
80C1A2 A512808330        ECALL   ?L?COM000D
 2060: 	ClearKey();
80C1A7 A512808FA5        ECALL   ClearKey
 2061: 	QueryFlag = 0;
80C1AC C227              CLR     QueryFlag
 2062: 	QueryTimer = 0;
80C1AE E4                CLR     A
80C1AF F514              MOV     QueryTimer,A
 2063: 	CurrentStockCode = 0;
80C1B1 900B28            MOV     DPTR,#CurrentStockCode
80C1B4 F0                MOVX    @DPTR,A
 2064: 	UpdataDisp = 6;
80C1B5 A3                INC     DPTR
80C1B6 7406              MOV     A,#06H
80C1B8 F0                MOVX    @DPTR,A
 2065: 	return 0;
80C1B9 7F00              MOV     R7,#00H
 2066: }
80C1BB         ?C0448?MAINFLOW:
80C1BB A522              ERET    
----- FUNCTION QueryIsGoodsWay (END) -------


----- FUNCTION IsInputGoodsNo (BEGIN) -----
 FILE: 'mainflow.c'
 2333: u_char IsInputGoodsNo()
 2334: {
 2335: 	u_char xdata key = 0;
 2336: 
;---- Variable 'key' assigned to Register 'R7' ----
80C1BD E4                CLR     A
80C1BE FF                MOV     R7,A
 2337: //	Trace( "\n IsInputGoodsNo" );
 2338: 	if ( SystemStatus != 1 ) 
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 468


80C1BF 9001C6            MOV     DPTR,#SystemStatus
80C1C2 E0                MOVX    A,@DPTR
80C1C3 6401              XRL     A,#01H
80C1C5 6003              JZ      ?C0505?MAINFLOW
 2339: 		return 1; // 系统关闭，按键不理,当做没按
80C1C7 0F                INC     R7
80C1C8 803A              SJMP    ?C0506?MAINFLOW
80C1CA         ?C0505?MAINFLOW:
 2340: 	if( CurrentPayed <= 0 )
80C1CA D3                SETB    C
80C1CB 900B26            MOV     DPTR,#CurrentPayed+01H
80C1CE E0                MOVX    A,@DPTR
80C1CF 9400              SUBB    A,#00H
80C1D1 900B25            MOV     DPTR,#CurrentPayed
80C1D4 E0                MOVX    A,@DPTR
80C1D5 9400              SUBB    A,#00H
80C1D7 5004              JNC     ?C0507?MAINFLOW
 2341: 		return 2;	
80C1D9 7F02              MOV     R7,#02H
80C1DB 8027              SJMP    ?C0506?MAINFLOW
80C1DD         ?C0507?MAINFLOW:
 2342: 	WaitForWork( 10, NULL );		
80C1DD E4                CLR     A
80C1DE 7F0A              MOV     R7,#0AH
80C1E0 FE                MOV     R6,A
80C1E1 A512808330        ECALL   ?L?COM000D
 2343: 	key = GetKey();
80C1E6 A5128096D1        ECALL   GetKey
 2344: 	if( ( key >= 0 ) && ( key <= 9 ) )
80C1EB EF                MOV     A,R7
80C1EC C3                CLR     C
80C1ED 9400              SUBB    A,#00H
80C1EF 4011              JC      ?C0508?MAINFLOW
80C1F1 EF                MOV     A,R7
80C1F2 D3                SETB    C
80C1F3 9409              SUBB    A,#09H
80C1F5 500B              JNC     ?C0508?MAINFLOW
 2345: 	{
 2346: 		CurrentStockCode = key + 0x30;
80C1F7 EF                MOV     A,R7
80C1F8 2430              ADD     A,#030H
80C1FA 900B28            MOV     DPTR,#CurrentStockCode
80C1FD F0                MOVX    @DPTR,A
 2347: //		Trace( "\n IsInputGoodsNo key = %bu", key );
 2348: 		return 0;
80C1FE 7F00              MOV     R7,#00H
80C200 8002              SJMP    ?C0506?MAINFLOW
 2349: 	}
80C202         ?C0508?MAINFLOW:
 2350: 	else				
 2351: 		return 1;	
80C202 7F01              MOV     R7,#01H
 2352: }
80C204         ?C0506?MAINFLOW:
80C204 A522              ERET    
----- FUNCTION IsInputGoodsNo (END) -------


----- FUNCTION IsMoneyEnough (BEGIN) -----
 FILE: 'mainflow.c'
 2555: u_char IsMoneyEnough()
 2556: {
 2557: //	Trace( "\n Price = %d", GoodsWaySetVal[CurrentStockCode].Price );		
 2558: //	Trace( "\n CurrentPayed = %d", CurrentPayed );		
 2559: 	if( GoodsWaySetVal[CurrentStockCode].Price > CurrentPayed )	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 469


80C206 900B28            MOV     DPTR,#CurrentStockCode
80C209 E0                MOVX    A,@DPTR
80C20A 75F005            MOV     B,#05H
80C20D 900006            MOV     DPTR,#GoodsWaySetVal+02H
80C210 A51280079F        ECALL   ?C?OFFXADD
80C215 E0                MOVX    A,@DPTR
80C216 FE                MOV     R6,A
80C217 A3                INC     DPTR
80C218 E0                MOVX    A,@DPTR
80C219 FF                MOV     R7,A
80C21A 900B25            MOV     DPTR,#CurrentPayed
80C21D E0                MOVX    A,@DPTR
80C21E FC                MOV     R4,A
80C21F A3                INC     DPTR
80C220 E0                MOVX    A,@DPTR
80C221 FD                MOV     R5,A
80C222 D3                SETB    C
80C223 EF                MOV     A,R7
80C224 9D                SUBB    A,R5
80C225 EE                MOV     A,R6
80C226 9C                SUBB    A,R4
80C227 4009              JC      ?C0554?MAINFLOW
 2560: 	{
 2561: 		CurrentStockCode = 0;	
80C229 E4                CLR     A
80C22A 900B28            MOV     DPTR,#CurrentStockCode
80C22D F0                MOVX    @DPTR,A
 2562: 		return 1;	
80C22E 7F01              MOV     R7,#01H
80C230 8002              SJMP    ?C0555?MAINFLOW
 2563: 	}
80C232         ?C0554?MAINFLOW:
 2564: 	return 0;
80C232 7F00              MOV     R7,#00H
 2565: }
80C234         ?C0555?MAINFLOW:
80C234 A522              ERET    
----- FUNCTION IsMoneyEnough (END) -------


----- FUNCTION TestHardWare (BEGIN) -----
 FILE: 'mainflow.c'
 3049: u_char TestHardWare()
 3050: {
 3051: //	bit data z = 0;
 3052: 		
 3053: 	if ( HardWareErr ) 		
80C236 900484            MOV     DPTR,#HardWareErr
80C239 E0                MOVX    A,@DPTR
80C23A 7002              JNZ     ?C1031?MAINFLOW
80C23C A3                INC     DPTR
80C23D E0                MOVX    A,@DPTR
80C23E         ?C1031?MAINFLOW:
80C23E 6007              JZ      ?C0653?MAINFLOW
 3054: 		CheckHardWare( 3 ); //查检硬件故障	
80C240 7F03              MOV     R7,#03H
80C242 A512807C6D        ECALL   _CheckHardWare
80C247         ?C0653?MAINFLOW:
 3055: 	if ( HardWareErr == 0 ) 
80C247 900484            MOV     DPTR,#HardWareErr
80C24A E0                MOVX    A,@DPTR
80C24B 7002              JNZ     ?C1032?MAINFLOW
80C24D A3                INC     DPTR
80C24E E0                MOVX    A,@DPTR
80C24F         ?C1032?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 470


80C24F 7004              JNZ     ?C0654?MAINFLOW
 3056: 		isShowLcd = 1;
80C251 D228              SETB    isShowLcd
80C253 8004              SJMP    ?C0655?MAINFLOW
80C255         ?C0654?MAINFLOW:
 3057: 	else			
 3058: 		return 0;	
80C255 7F00              MOV     R7,#00H
80C257 8002              SJMP    ?C0656?MAINFLOW
80C259         ?C0655?MAINFLOW:
 3059: 	return 0 ;
80C259 7F00              MOV     R7,#00H
 3060: }
80C25B         ?C0656?MAINFLOW:
80C25B A522              ERET    
----- FUNCTION TestHardWare (END) -------


----- FUNCTION ExistAnyChoose (BEGIN) -----
 FILE: 'mainflow.c'
 3408: u_char ExistAnyChoose()
 3409: {
 3410: 	u_char xdata i;
 3411: 	
 3412: 	for( i= 0 ; i <= GOODSWAYNUM ; i++)
;---- Variable 'i' assigned to Register 'R7' ----
80C25D E4                CLR     A
80C25E FF                MOV     R7,A
80C25F         ?C0741?MAINFLOW:
 3413: 	{		
 3414: 		if ( CurrentPayed >= GoodsWaySetVal[i].Price )		 	
80C25F 75F005            MOV     B,#05H
80C262 EF                MOV     A,R7
80C263 900006            MOV     DPTR,#GoodsWaySetVal+02H
80C266 A51280079F        ECALL   ?C?OFFXADD
80C26B E0                MOVX    A,@DPTR
80C26C FC                MOV     R4,A
80C26D A3                INC     DPTR
80C26E E0                MOVX    A,@DPTR
80C26F FD                MOV     R5,A
80C270 C3                CLR     C
80C271 900B26            MOV     DPTR,#CurrentPayed+01H
80C274 E0                MOVX    A,@DPTR
80C275 9D                SUBB    A,R5
80C276 900B25            MOV     DPTR,#CurrentPayed
80C279 E0                MOVX    A,@DPTR
80C27A 9C                SUBB    A,R4
80C27B 4004              JC      ?C0743?MAINFLOW
 3415: 			return 0 ; //找到同类更便宜卡	
80C27D 7F00              MOV     R7,#00H
80C27F 8016              SJMP    ?C0745?MAINFLOW
 3416: 	}
80C281         ?C0743?MAINFLOW:
80C281 0F                INC     R7
80C282 EF                MOV     A,R7
80C283 B441D9            CJNE    A,#041H,?C0741?MAINFLOW
80C286         ?C0742?MAINFLOW:
 3417: 	//Trace( "\n Cheaper stock Not Found! Ready to Reject Coin=%d" , CurrentPayed );
 3418: 	CurrentDispenseCoin = CurrentPayed;
80C286 900B25            MOV     DPTR,#CurrentPayed
80C289 E0                MOVX    A,@DPTR
80C28A FF                MOV     R7,A
80C28B A3                INC     DPTR
80C28C E0                MOVX    A,@DPTR
80C28D 90046E            MOV     DPTR,#CurrentDispenseCoin
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 471


80C290 CF                XCH     A,R7
80C291 F0                MOVX    @DPTR,A
80C292 A3                INC     DPTR
80C293 EF                MOV     A,R7
80C294 F0                MOVX    @DPTR,A
 3419: 	return( 1 ); //没的选择，必需要退币 
80C295 7F01              MOV     R7,#01H
 3420: }
80C297         ?C0745?MAINFLOW:
80C297 A522              ERET    
----- FUNCTION ExistAnyChoose (END) -------


----- FUNCTION DispGetCoin (BEGIN) -----
 FILE: 'mainflow.c'
 3499: u_char DispGetCoin()
 3500: {
 3501: 	return( 0 );
 3502: }
80C299 7F00              MOV     R7,#00H
 3503: 
80C29B         ?C0759?MAINFLOW:
80C29B A522              ERET    
----- FUNCTION DispGetCoin (END) -------


----- FUNCTION ReturnChange (BEGIN) -----
 FILE: 'mainflow.c'
 3505: u_char ReturnChange()
 3506: {
 3507: //	Trace( "\n ReturnChange");
 3508: //	LightBlinkFlag = 0;    
 3509: //	LightBlinkFlag = 1; 			
 3510: //	if ( CurrentPayed > GoodsWaySetVal[CurrentStockCode].Price )
 3511: //	{	
 3512: 	CurrentDispenseCoin = CurrentPayed;// - GoodsWaySetVal[CurrentStockCode].Price; 
80C29D A512803712        ECALL   ?L?COM0023
80C2A2 EF                MOV     A,R7
80C2A3 7F01              MOV     R7,#01H
80C2A5 7001              JNZ     ?C0760?MAINFLOW
 3513: 	CurrentPayed = 0;
 3514: 	if( DispenseCoin() == 0 )					
 3515: 		return( 0 );		
80C2A7 FF                MOV     R7,A
80C2A8         ?C0760?MAINFLOW:
 3516: 	else					
 3517: 		return 1;//找零失败		
 3518: //	}	
 3519: //	return  0 ;
 3520: }
80C2A8         ?C0761?MAINFLOW:
80C2A8 A522              ERET    
----- FUNCTION ReturnChange (END) -------


----- FUNCTION GoodsWayTest (BEGIN) -----
 FILE: 'devicecheck.c'
  115: void  GoodsWayTest()
  116: {
  117: 	u_char xdata m_ChannelNum = 0;
  118: 	u_char xdata m_Index = 0;
80C2AA E4                CLR     A
80C2AB 901747            MOV     DPTR,#m_ChannelNum
80C2AE F0                MOVX    @DPTR,A
  119: 	u_char xdata m_str[20];
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 472


80C2AF A3                INC     DPTR
80C2B0 F0                MOVX    @DPTR,A
  120: 	u_char xdata i = 0;
80C2B1 90175D            MOV     DPTR,#i
80C2B4 F0                MOVX    @DPTR,A
  121: 	u_char xdata len = 0;
80C2B5 A3                INC     DPTR
80C2B6 F0                MOVX    @DPTR,A
  122: 	u_char xdata j = 0;
80C2B7 A3                INC     DPTR
80C2B8 F0                MOVX    @DPTR,A
  123: 	
  124: 	m_ChannelNum = InputGoodsWayNo( 0 );
80C2B9 FF                MOV     R7,A
80C2BA A51280D5CE        ECALL   _InputGoodsWayNo
80C2BF 901747            MOV     DPTR,#m_ChannelNum
80C2C2 EF                MOV     A,R7
80C2C3 F0                MOVX    @DPTR,A
  125: 	if( m_ChannelNum == 100 )
80C2C4 6464              XRL     A,#064H
80C2C6 7003              JNZ     $ + 5H
80C2C8 02C6EF            LJMP    ?C0009?DEVICECHECK
80C2CB         ?C0008?DEVICECHECK:
  126: 		return;
  127: 	if( m_ChannelNum == 99 )//货道全检
80C2CB 901747            MOV     DPTR,#m_ChannelNum
80C2CE E0                MOVX    A,@DPTR
80C2CF 6463              XRL     A,#063H
80C2D1 6003              JZ      $ + 5H
80C2D3 02C507            LJMP    ?C0010?DEVICECHECK
  128: 	{	
  129: 		GoodsSetSave = 1;
80C2D6 902DF8            MOV     DPTR,#GoodsSetSave
80C2D9 04                INC     A
80C2DA F0                MOVX    @DPTR,A
  130: 	    //Trace("\n GoodsSetSave = %bu", GoodsSetSave );
  131: 		for( m_Index = 0; m_Index < GOODSWAYNUM; m_Index ++ )					
80C2DB E4                CLR     A
80C2DC 901748            MOV     DPTR,#m_Index
80C2DF F0                MOVX    @DPTR,A
80C2E0         ?C0011?DEVICECHECK:
  132: 		{			
  133: 			i = 0;	
80C2E0 A5128096CC        ECALL   ?L?COM003D
80C2E5 90175D            MOV     DPTR,#i
80C2E8 EF                MOV     A,R7
80C2E9 F0                MOVX    @DPTR,A
  134: 			i = GetKey();
  135: 			if ( i == KEY_CANCEL )
80C2EA BF1B03            CJNE    R7,#01BH,?C0014?DEVICECHECK
  136:  		    {
  137: 				ClearKey();
80C2ED 02C4ED            LJMP    ?C0267?DEVICECHECK
  138: 				return;
  139: 			}
80C2F0         ?C0014?DEVICECHECK:
  140: 			WaitForWork( 100, NULL );	
80C2F0 E4                CLR     A
80C2F1 7F64              MOV     R7,#064H
80C2F3 FE                MOV     R6,A
80C2F4 A512808330        ECALL   ?L?COM000D
  141: 			if( InputGoodsWayList[m_Index].UseState == 0 )
80C2F9 901748            MOV     DPTR,#m_Index
80C2FC E0                MOVX    A,@DPTR
80C2FD 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 473


80C2FF 25E0              ADD     A,ACC
80C301 24DE              ADD     A,#LOW InputGoodsWayList+02H
80C303 F582              MOV     DPL,A
80C305 E4                CLR     A
80C306 342B              ADDC    A,#HIGH InputGoodsWayList+02H
80C308 F583              MOV     DPH,A
80C30A E0                MOVX    A,@DPTR
80C30B 7003              JNZ     $ + 5H
80C30D 02C4F5            LJMP    ?C0013?DEVICECHECK
  142: 				continue;
80C310         ?C0015?DEVICECHECK:
  143: 			m_ChannelNum = InputGoodsWayList[m_Index].SetArrayNo;
80C310 901748            MOV     DPTR,#m_Index
80C313 E0                MOVX    A,@DPTR
80C314 FF                MOV     R7,A
80C315 25E0              ADD     A,ACC
80C317 25E0              ADD     A,ACC
80C319 24DD              ADD     A,#LOW InputGoodsWayList+01H
80C31B F582              MOV     DPL,A
80C31D E4                CLR     A
80C31E 342B              ADDC    A,#HIGH InputGoodsWayList+01H
80C320 F583              MOV     DPH,A
80C322 E0                MOVX    A,@DPTR
80C323 901747            MOV     DPTR,#m_ChannelNum
80C326 F0                MOVX    @DPTR,A
  144: 			//清除其它状态位
  145: 			GoodsWaySetVal[ m_Index ].WayState = 0x01;		
80C327 75F005            MOV     B,#05H
80C32A EF                MOV     A,R7
80C32B 900005            MOV     DPTR,#GoodsWaySetVal+01H
80C32E A51280079F        ECALL   ?C?OFFXADD
80C333 7401              MOV     A,#01H
80C335 F0                MOVX    @DPTR,A
  146: 		#ifdef _CHINA_
  147: 			len = sprintf( m_str, "\xd5\xfd在检测 %02bu 货道", InputGoodsWayList[m_Index].GoodsWayNo );	
  148: 		#else
  149: 			len = sprintf( m_str, "Checking column %02bu", InputGoodsWayList[m_Index].GoodsWayNo );
80C336 7B80              MOV     R3,#BYTE2 0800D10H
80C338 7A0D              MOV     R2,#HIGH 0800D10H
80C33A 7910              MOV     R1,#LOW 0800D10H
80C33C 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C33F A5128007B6        ECALL   ?C?PSTXDATA
80C344 901748            MOV     DPTR,#m_Index
80C347 E0                MOVX    A,@DPTR
80C348 25E0              ADD     A,ACC
80C34A 25E0              ADD     A,ACC
80C34C 24DC              ADD     A,#LOW InputGoodsWayList
80C34E F582              MOV     DPL,A
80C350 E4                CLR     A
80C351 342B              ADDC    A,#HIGH InputGoodsWayList
80C353 F583              MOV     DPH,A
80C355 E0                MOVX    A,@DPTR
80C356 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80C359 F0                MOVX    @DPTR,A
80C35A 7B00              MOV     R3,#?C?XDATASEG
80C35C 7A17              MOV     R2,#HIGH m_str
80C35E 7949              MOV     R1,#LOW m_str
80C360 A512800949        ECALL   _sprintf
80C365 90175E            MOV     DPTR,#len
80C368 EF                MOV     A,R7
80C369 F0                MOVX    @DPTR,A
  150: 		#endif
  151: 			DisplayStr( 0, 0, 1, m_str, len );
80C36A D21A              SETB    ?_DisplayStr?BIT
80C36C 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 474


80C36E 7A17              MOV     R2,#HIGH m_str
80C370 7949              MOV     R1,#LOW m_str
80C372 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C375 A5128007B6        ECALL   ?C?PSTXDATA
80C37A 90175E            MOV     DPTR,#len
80C37D E0                MOVX    A,@DPTR
80C37E A512808858        ECALL   ?L?COM0006
  152: 		#ifdef _CHINA_
  153: 			len = sprintf( m_str,  "    请稍等..." );
  154: 		#else
  155: 			len = sprintf( m_str,  "Please wait..." );
80C383 7B80              MOV     R3,#BYTE2 0800D26H
80C385 7A0D              MOV     R2,#HIGH 0800D26H
80C387 7926              MOV     R1,#LOW 0800D26H
80C389 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C38C A5128007B6        ECALL   ?C?PSTXDATA
80C391 7B00              MOV     R3,#?C?XDATASEG
80C393 7A17              MOV     R2,#HIGH m_str
80C395 7949              MOV     R1,#LOW m_str
80C397 A512800949        ECALL   _sprintf
80C39C 90175E            MOV     DPTR,#len
80C39F EF                MOV     A,R7
80C3A0 F0                MOVX    @DPTR,A
  156: 		#endif
  157: 			DisplayStr( 0, 1, 1, m_str, len );
80C3A1 D21A              SETB    ?_DisplayStr?BIT
80C3A3 7B00              MOV     R3,#?C?XDATASEG
80C3A5 7A17              MOV     R2,#HIGH m_str
80C3A7 7949              MOV     R1,#LOW m_str
80C3A9 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C3AC A5128007B6        ECALL   ?C?PSTXDATA
80C3B1 90175E            MOV     DPTR,#len
80C3B4 E0                MOVX    A,@DPTR
80C3B5 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80C3B8 F0                MOVX    @DPTR,A
80C3B9 7D01              MOV     R5,#01H
80C3BB E4                CLR     A
80C3BC FF                MOV     R7,A
80C3BD A51280885F        ECALL   _DisplayStr
  158: 			WaitForWork( 500, NULL );	
80C3C2 E4                CLR     A
80C3C3 7FF4              MOV     R7,#0F4H
80C3C5 7E01              MOV     R6,#01H
80C3C7 A512808330        ECALL   ?L?COM000D
  159: 			i = 0;
80C3CC E4                CLR     A
80C3CD 90175D            MOV     DPTR,#i
80C3D0 F0                MOVX    @DPTR,A
  160: 			j = 0;
80C3D1 90175F            MOV     DPTR,#j
80C3D4 F0                MOVX    @DPTR,A
  161: 			i = ChannelTask( m_ChannelNum, CHANNEL_TEST );			
80C3D5 901747            MOV     DPTR,#m_ChannelNum
80C3D8 E0                MOVX    A,@DPTR
80C3D9 FF                MOV     R7,A
80C3DA 7D52              MOV     R5,#052H
80C3DC A512809E86        ECALL   _ChannelTask
80C3E1 90175D            MOV     DPTR,#i
80C3E4 EF                MOV     A,R7
80C3E5 F0                MOVX    @DPTR,A
  162: 		#ifdef _CHINA_			
  163: 			if( i )
  164: 			{
  165: 				if( i == 2 )//主板与货道板通讯超时
  166: 				{				
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 475


  167: 					len = sprintf( m_str, "  货道板: 故障   " );
  168: 					/*
  169: 					for( i = 0; i < GOODSWAYNUM; i ++ )
  170: 					GoodsWaySetVal[ i ].WayState |= 0x09;
  171:                     */		
  172: 					j = 1;			
  173: 				}				
  174: 				else
  175: 				{
  176: 				    if( (i!=7)&&(i!=8) )
  177: 					{
  178: 						GoodsWaySetVal[ m_Index ].WayState |= 0x03;
  179: 						len = sprintf( m_str, "  货道%02bu: 故障   ", InputGoodsWayList[m_Index].GoodsWayNo );
  180: 					}
  181: 					else if( i==8 )
  182: 					{
  183: 					    #ifdef  SYS_GOOS_SOLDOUT_CTR
  184: 							GoodsWaySetVal[ m_Index ].WayState = 0x05;
  185: 						#endif
  186: 						len = sprintf( m_str, "  货道%02bu: 无货   ", InputGoodsWayList[m_Index].GoodsWayNo );
  187: 					}
  188: 
  189: 				}
  190: 			}
  191: 			else
  192: 			{
  193: 				GoodsWaySetVal[ m_Index ].WayState = 0x01;
  194: 				len = sprintf( m_str, "  货道 %02bu:  \xd5\xfd常 ", InputGoodsWayList[m_Index].GoodsWayNo );
  195: 			}
  196: 		#else
  197: 			if( i )
80C3E6 6076              JZ      ?C0016?DEVICECHECK
  198: 			{
  199: 				if( i == 2 )
80C3E8 E0                MOVX    A,@DPTR
80C3E9 B40225            CJNE    A,#02H,?C0017?DEVICECHECK
  200: 				{				
  201: 					len = sprintf( m_str, "Broad:    Error " );
80C3EC 7B80              MOV     R3,#BYTE2 0800D35H
80C3EE 7A0D              MOV     R2,#HIGH 0800D35H
80C3F0 7935              MOV     R1,#LOW 0800D35H
80C3F2 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C3F5 A5128007B6        ECALL   ?C?PSTXDATA
80C3FA 7B00              MOV     R3,#?C?XDATASEG
80C3FC 7A17              MOV     R2,#HIGH m_str
80C3FE 7949              MOV     R1,#LOW m_str
80C400 A512800949        ECALL   _sprintf
80C405 90175E            MOV     DPTR,#len
80C408 EF                MOV     A,R7
80C409 F0                MOVX    @DPTR,A
  202: 					/*
  203: 					for( i = 0; i < GOODSWAYNUM; i ++ )
  204: 						GoodsWaySetVal[ i ].WayState |= 0x09;
  205: 		            */		
  206: 					j = 1;
80C40A A3                INC     DPTR
80C40B 7401              MOV     A,#01H
80C40D F0                MOVX    @DPTR,A
  207: 				}				
80C40E 02C4A2            LJMP    ?C0022?DEVICECHECK
80C411         ?C0017?DEVICECHECK:
  208: 				else
  209: 				{
  210: 					if( (i!=7)&&(i!=8) )
80C411 90175D            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 476


80C414 E0                MOVX    A,@DPTR
80C415 FF                MOV     R7,A
80C416 6407              XRL     A,#07H
80C418 6021              JZ      ?C0019?DEVICECHECK
80C41A EF                MOV     A,R7
80C41B 6408              XRL     A,#08H
80C41D 601C              JZ      ?C0019?DEVICECHECK
  211: 					{
  212: 						GoodsWaySetVal[ m_Index ].WayState |= 0x03;
80C41F 901748            MOV     DPTR,#m_Index
80C422 E0                MOVX    A,@DPTR
80C423 FF                MOV     R7,A
80C424 75F005            MOV     B,#05H
80C427 900005            MOV     DPTR,#GoodsWaySetVal+01H
80C42A A51280079F        ECALL   ?C?OFFXADD
80C42F E0                MOVX    A,@DPTR
80C430 4403              ORL     A,#03H
80C432 F0                MOVX    @DPTR,A
  213: 						len = sprintf( m_str, "Column %02bu: Error", InputGoodsWayList[m_Index].GoodsWayNo );
80C433 7B80              MOV     R3,#BYTE2 0800D46H
80C435 7A0D              MOV     R2,#HIGH 0800D46H
80C437 7946              MOV     R1,#LOW 0800D46H
  214: 					}
80C439 803C              SJMP    ?C0269?DEVICECHECK
80C43B         ?C0019?DEVICECHECK:
  215: 					else if( i==8 )
80C43B 90175D            MOV     DPTR,#i
80C43E E0                MOVX    A,@DPTR
80C43F 6408              XRL     A,#08H
80C441 705F              JNZ     ?C0022?DEVICECHECK
  216: 					{
  217: 					    #ifdef  SYS_GOOS_SOLDOUT_CTR
  218: 							GoodsWaySetVal[ m_Index ].WayState = 0x05;
80C443 901748            MOV     DPTR,#m_Index
80C446 E0                MOVX    A,@DPTR
80C447 FF                MOV     R7,A
80C448 75F005            MOV     B,#05H
80C44B 900005            MOV     DPTR,#GoodsWaySetVal+01H
80C44E A51280079F        ECALL   ?C?OFFXADD
80C453 7405              MOV     A,#05H
80C455 F0                MOVX    @DPTR,A
  219: 						#endif
  220: 						len = sprintf( m_str, "Column %02bu: Soldout", InputGoodsWayList[m_Index].GoodsWayNo );
80C456 7B80              MOV     R3,#BYTE2 0800D5AH
80C458 7A0D              MOV     R2,#HIGH 0800D5AH
80C45A 795A              MOV     R1,#LOW 0800D5AH
80C45C         
  221: 					}
  222: 				}
  223: 			}
80C45C 8019              SJMP    ?C0269?DEVICECHECK
80C45E         ?C0016?DEVICECHECK:
  224: 			else
  225: 			{
  226: 				GoodsWaySetVal[ m_Index ].WayState = 0x01;
80C45E 901748            MOV     DPTR,#m_Index
80C461 E0                MOVX    A,@DPTR
80C462 FF                MOV     R7,A
80C463 75F005            MOV     B,#05H
80C466 900005            MOV     DPTR,#GoodsWaySetVal+01H
80C469 A51280079F        ECALL   ?C?OFFXADD
80C46E 7401              MOV     A,#01H
80C470 F0                MOVX    @DPTR,A
  227: 				len = sprintf( m_str, "Column %02bu:    OK", InputGoodsWayList[m_Index].GoodsWayNo );
80C471 7B80              MOV     R3,#BYTE2 0800D70H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 477


80C473 7A0D              MOV     R2,#HIGH 0800D70H
80C475 7970              MOV     R1,#LOW 0800D70H
80C477         
80C477 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C47A A5128007B6        ECALL   ?C?PSTXDATA
80C47F EF                MOV     A,R7
80C480 25E0              ADD     A,ACC
80C482 25E0              ADD     A,ACC
80C484 24DC              ADD     A,#LOW InputGoodsWayList
80C486 F582              MOV     DPL,A
80C488 E4                CLR     A
80C489 342B              ADDC    A,#HIGH InputGoodsWayList
80C48B F583              MOV     DPH,A
80C48D E0                MOVX    A,@DPTR
80C48E 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80C491 F0                MOVX    @DPTR,A
80C492 7B00              MOV     R3,#?C?XDATASEG
80C494 7A17              MOV     R2,#HIGH m_str
80C496 7949              MOV     R1,#LOW m_str
80C498 A512800949        ECALL   _sprintf
80C49D 90175E            MOV     DPTR,#len
80C4A0 EF                MOV     A,R7
80C4A1 F0                MOVX    @DPTR,A
  228: 			}		
80C4A2         ?C0022?DEVICECHECK:
  229: 		#endif
  230:             //Trace( " \n SystemParameter.BanknoteMax = %d", SystemParameter.BanknoteMax );
  231: 			ClearDisplayLine( 1 );
80C4A2 7F01              MOV     R7,#01H
80C4A4 A512808FB8        ECALL   _ClearDisplayLine
  232: 			DisplayStr( 0, 1, 1, m_str, len );
80C4A9 D21A              SETB    ?_DisplayStr?BIT
80C4AB 7B00              MOV     R3,#?C?XDATASEG
80C4AD 7A17              MOV     R2,#HIGH m_str
80C4AF 7949              MOV     R1,#LOW m_str
80C4B1 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C4B4 A5128007B6        ECALL   ?C?PSTXDATA
80C4B9 90175E            MOV     DPTR,#len
80C4BC E0                MOVX    A,@DPTR
80C4BD 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80C4C0 F0                MOVX    @DPTR,A
80C4C1 7D01              MOV     R5,#01H
80C4C3 E4                CLR     A
80C4C4 FF                MOV     R7,A
80C4C5 A51280885F        ECALL   _DisplayStr
  233: 			WaitForWork( 1000, NULL );
80C4CA E4                CLR     A
80C4CB 7FE8              MOV     R7,#0E8H
80C4CD 7E03              MOV     R6,#03H
80C4CF A512808330        ECALL   ?L?COM000D
  234: 			if( j == 1 )
80C4D4 90175F            MOV     DPTR,#j
80C4D7 E0                MOVX    A,@DPTR
80C4D8 B40105            CJNE    A,#01H,?C0023?DEVICECHECK
  235: 			{
  236: 				j = 0;
80C4DB E4                CLR     A
80C4DC F0                MOVX    @DPTR,A
  237: 				break;
80C4DD 02C6EF            LJMP    ?C0009?DEVICECHECK
  238: 			}
80C4E0         ?C0023?DEVICECHECK:
  239: 			i = 0;	
80C4E0 A5128096CC        ECALL   ?L?COM003D
80C4E5 90175D            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 478


80C4E8 EF                MOV     A,R7
80C4E9 F0                MOVX    @DPTR,A
  240: 			i = GetKey();
  241: 			if ( i == KEY_CANCEL )
80C4EA BF1B08            CJNE    R7,#01BH,?C0013?DEVICECHECK
  242:  		    {
  243: 				ClearKey();
80C4ED         
80C4ED A512808FA5        ECALL   ClearKey
80C4F2 02C6EF            LJMP    ?C0009?DEVICECHECK
  244: 				return;
  245: 			}				
  246: 		}	
80C4F5         ?C0013?DEVICECHECK:
80C4F5 901748            MOV     DPTR,#m_Index
80C4F8 E0                MOVX    A,@DPTR
80C4F9 04                INC     A
80C4FA F0                MOVX    @DPTR,A
80C4FB E0                MOVX    A,@DPTR
80C4FC C3                CLR     C
80C4FD 9440              SUBB    A,#040H
80C4FF 5003              JNC     $ + 5H
80C501 02C2E0            LJMP    ?C0011?DEVICECHECK
80C504 02C6EF            LJMP    ?C0009?DEVICECHECK
  247: 		return;		
  248: 	}
80C507         ?C0010?DEVICECHECK:
  249: 	//单检指定货道
  250: //	if( InputGoodsWayList[m_Index].UseState != 1 )
  251: //			continue;
  252: 	memset( m_str,0, sizeof( m_str ) );
80C507 7E00              MOV     R6,#00H
80C509 7F14              MOV     R7,#014H
80C50B 7D00              MOV     R5,#00H
80C50D 7B00              MOV     R3,#?C?XDATASEG
80C50F 7A17              MOV     R2,#HIGH m_str
80C511 7949              MOV     R1,#LOW m_str
80C513 A5128008A6        ECALL   ?C?MEMSET
  253: 	m_Index = InputGoodsWayList[m_ChannelNum].SetArrayNo;				
80C518 901747            MOV     DPTR,#m_ChannelNum
80C51B E0                MOVX    A,@DPTR
80C51C FF                MOV     R7,A
80C51D 25E0              ADD     A,ACC
80C51F 25E0              ADD     A,ACC
80C521 24DD              ADD     A,#LOW InputGoodsWayList+01H
80C523 F582              MOV     DPL,A
80C525 E4                CLR     A
80C526 342B              ADDC    A,#HIGH InputGoodsWayList+01H
80C528 F583              MOV     DPH,A
80C52A E0                MOVX    A,@DPTR
80C52B 901748            MOV     DPTR,#m_Index
80C52E F0                MOVX    @DPTR,A
  254: //	m_ChannelNum = InputGoodsWayList[m_Index].SetArrayNo;
  255: #ifdef _CHINA_
  256: 	sprintf( m_str, "\xd5\xfd在检测 %02bu 货道", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
  257: 	DisplayStr( 0, 0, 1, m_str, 16 );
  258: 	sprintf( m_str,  "    请稍等..." );			
  259: 	DisplayStr( 0, 1, 1, m_str, 13 );
  260: #else				
  261: 	sprintf( m_str, "Checking Column %02bu", InputGoodsWayList[m_ChannelNum].GoodsWayNo );	
80C52F 7B80              MOV     R3,#BYTE2 0800D84H
80C531 7A0D              MOV     R2,#HIGH 0800D84H
80C533 7984              MOV     R1,#LOW 0800D84H
80C535 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C538 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 479


80C53D EF                MOV     A,R7
80C53E 25E0              ADD     A,ACC
80C540 25E0              ADD     A,ACC
80C542 24DC              ADD     A,#LOW InputGoodsWayList
80C544 F582              MOV     DPL,A
80C546 E4                CLR     A
80C547 342B              ADDC    A,#HIGH InputGoodsWayList
80C549 F583              MOV     DPH,A
80C54B E0                MOVX    A,@DPTR
80C54C 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80C54F F0                MOVX    @DPTR,A
80C550 7B00              MOV     R3,#?C?XDATASEG
80C552 7A17              MOV     R2,#HIGH m_str
80C554 7949              MOV     R1,#LOW m_str
80C556 A512800949        ECALL   _sprintf
  262: //		Trace( "\n Test goodsCode = %bu", m_ChannelNum );
  263: 	DisplayStr( 0, 0, 1, m_str, 18 );
80C55B D21A              SETB    ?_DisplayStr?BIT
80C55D 7B00              MOV     R3,#?C?XDATASEG
80C55F 7A17              MOV     R2,#HIGH m_str
80C561 7949              MOV     R1,#LOW m_str
80C563 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C566 A5128007B6        ECALL   ?C?PSTXDATA
80C56B 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80C56E 7412              MOV     A,#012H
80C570 A51280885B        ECALL   ?L?COM0007
  264: 	sprintf( m_str,  "Please wait..." );
80C575 7B80              MOV     R3,#BYTE2 0800D26H
80C577 7A0D              MOV     R2,#HIGH 0800D26H
80C579 7926              MOV     R1,#LOW 0800D26H
80C57B 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C57E A5128007B6        ECALL   ?C?PSTXDATA
80C583 7B00              MOV     R3,#?C?XDATASEG
80C585 7A17              MOV     R2,#HIGH m_str
80C587 7949              MOV     R1,#LOW m_str
80C589 A512800949        ECALL   _sprintf
  265: 	DisplayStr( 0, 1, 1, m_str, 14 );
80C58E D21A              SETB    ?_DisplayStr?BIT
80C590 7B00              MOV     R3,#?C?XDATASEG
80C592 7A17              MOV     R2,#HIGH m_str
80C594 7949              MOV     R1,#LOW m_str
80C596 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C599 A5128007B6        ECALL   ?C?PSTXDATA
80C59E 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80C5A1 740E              MOV     A,#0EH
80C5A3 F0                MOVX    @DPTR,A
80C5A4 7D01              MOV     R5,#01H
80C5A6 E4                CLR     A
80C5A7 FF                MOV     R7,A
80C5A8 A51280885F        ECALL   _DisplayStr
  266: #endif	
  267: 	WaitForWork( 100, NULL );		
80C5AD E4                CLR     A
80C5AE 7F64              MOV     R7,#064H
80C5B0 FE                MOV     R6,A
80C5B1 A512808330        ECALL   ?L?COM000D
  268: 	i = 0;
80C5B6 E4                CLR     A
80C5B7 90175D            MOV     DPTR,#i
80C5BA F0                MOVX    @DPTR,A
  269: //	i = ChannelExec( m_Index );
  270: 	Trace("\n GoodsWayTest m_Index = %bu", m_Index);
  271: 	i = ChannelTask( m_Index, CHANNEL_TEST );
80C5BB 901748            MOV     DPTR,#m_Index
80C5BE E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 480


80C5BF FF                MOV     R7,A
80C5C0 7D52              MOV     R5,#052H
80C5C2 A512809E86        ECALL   _ChannelTask
80C5C7 90175D            MOV     DPTR,#i
80C5CA EF                MOV     A,R7
80C5CB F0                MOVX    @DPTR,A
  272: 	//清除其它状态位
  273: 	GoodsWaySetVal[ m_ChannelNum ].WayState = 0x01;
80C5CC 901747            MOV     DPTR,#m_ChannelNum
80C5CF E0                MOVX    A,@DPTR
80C5D0 75F005            MOV     B,#05H
80C5D3 900005            MOV     DPTR,#GoodsWaySetVal+01H
80C5D6 A51280079F        ECALL   ?C?OFFXADD
80C5DB 7401              MOV     A,#01H
80C5DD F0                MOVX    @DPTR,A
  274: #ifdef _CHINA_
  275: 	if( i )
  276: 	{
  277: 		if( i == 2 )
  278: 		{
  279: 			sprintf( m_str, "  货道板: 故障   " );
  280:             /*
  281: 			for( i = 0; i < GOODSWAYNUM; i ++ )
  282: 				GoodsWaySetVal[ i ].WayState |= 0x09;
  283:             */			
  284: 		}				
  285: 		else
  286: 		{
  287: 			if( (i!=7)&&(i!=8) )
  288: 			{
  289: 				GoodsWaySetVal[ m_ChannelNum ].WayState |= 0x03;
  290: 				len = sprintf( m_str, "  货道%02bu: 故障   ", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
  291: 			}
  292: 			else if( i==8 )
  293: 			{
  294: 			    #ifdef  SYS_GOOS_SOLDOUT_CTR
  295: 					GoodsWaySetVal[ m_ChannelNum ].WayState = 0x05;
  296: 				#endif
  297: 				len = sprintf( m_str, "  货道%02bu: 无货   ", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
  298: 			}
  299: 		}
  300: 	}
  301: 	else
  302: 	{
  303: 		GoodsWaySetVal[ m_ChannelNum ].WayState = 0x01;
  304: 		sprintf( m_str, "  货道 %02bu:  \xd5\xfd常 ", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
  305: 	}
  306: #else
  307: 	if( i )
80C5DE EF                MOV     A,R7
80C5DF 7003              JNZ     $ + 5H
80C5E1 02C677            LJMP    ?C0025?DEVICECHECK
  308: 	{
  309: 		if( i == 2 )
80C5E4 90175D            MOV     DPTR,#i
80C5E7 E0                MOVX    A,@DPTR
80C5E8 B40211            CJNE    A,#02H,?C0026?DEVICECHECK
  310: 		{
  311: 			sprintf( m_str, "Broad:   Error   " );
80C5EB 7B80              MOV     R3,#BYTE2 0800D9AH
80C5ED 7A0D              MOV     R2,#HIGH 0800D9AH
80C5EF 799A              MOV     R1,#LOW 0800D9AH
80C5F1 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C5F4 A5128007B6        ECALL   ?C?PSTXDATA
  312: 			/*
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 481


  313: 			for( i = 0; i < GOODSWAYNUM; i ++ )
  314: 				GoodsWaySetVal[ i ].WayState |= 0x09;
  315:             */					
  316: 		}			
80C5F9 02C6AB            LJMP    ?C0270?DEVICECHECK
80C5FC         ?C0026?DEVICECHECK:
  317: 		else
  318: 		{
  319: 			if( (i!=7)&&(i!=8) )
80C5FC 90175D            MOV     DPTR,#i
80C5FF E0                MOVX    A,@DPTR
80C600 FF                MOV     R7,A
80C601 6407              XRL     A,#07H
80C603 6021              JZ      ?C0028?DEVICECHECK
80C605 EF                MOV     A,R7
80C606 6408              XRL     A,#08H
80C608 601C              JZ      ?C0028?DEVICECHECK
  320: 			{
  321: 				GoodsWaySetVal[ m_ChannelNum ].WayState |= 0x03;
80C60A 901747            MOV     DPTR,#m_ChannelNum
80C60D E0                MOVX    A,@DPTR
80C60E FF                MOV     R7,A
80C60F 75F005            MOV     B,#05H
80C612 900005            MOV     DPTR,#GoodsWaySetVal+01H
80C615 A51280079F        ECALL   ?C?OFFXADD
80C61A E0                MOVX    A,@DPTR
80C61B 4403              ORL     A,#03H
80C61D F0                MOVX    @DPTR,A
  322: 				len = sprintf( m_str, "Column %02bu: Error", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
80C61E 7B80              MOV     R3,#BYTE2 0800D46H
80C620 7A0D              MOV     R2,#HIGH 0800D46H
80C622 7946              MOV     R1,#LOW 0800D46H
  323: 			}
80C624 8024              SJMP    ?C0271?DEVICECHECK
80C626         ?C0028?DEVICECHECK:
  324: 			else if( i==8 )
80C626 90175D            MOV     DPTR,#i
80C629 E0                MOVX    A,@DPTR
80C62A 6408              XRL     A,#08H
80C62C 6003              JZ      $ + 5H
80C62E 02C6B6            LJMP    ?C0031?DEVICECHECK
  325: 			{
  326: 			    #ifdef  SYS_GOOS_SOLDOUT_CTR
  327: 					GoodsWaySetVal[ m_ChannelNum ].WayState = 0x05;
80C631 901747            MOV     DPTR,#m_ChannelNum
80C634 E0                MOVX    A,@DPTR
80C635 FF                MOV     R7,A
80C636 75F005            MOV     B,#05H
80C639 900005            MOV     DPTR,#GoodsWaySetVal+01H
80C63C A51280079F        ECALL   ?C?OFFXADD
80C641 7405              MOV     A,#05H
80C643 F0                MOVX    @DPTR,A
  328: 				#endif
  329: 				len = sprintf( m_str, "Column %02bu: Soldout", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
80C644 7B80              MOV     R3,#BYTE2 0800D5AH
80C646 7A0D              MOV     R2,#HIGH 0800D5AH
80C648 795A              MOV     R1,#LOW 0800D5AH
80C64A         
80C64A 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C64D A5128007B6        ECALL   ?C?PSTXDATA
80C652 EF                MOV     A,R7
80C653 25E0              ADD     A,ACC
80C655 25E0              ADD     A,ACC
80C657 24DC              ADD     A,#LOW InputGoodsWayList
80C659 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 482


80C65B E4                CLR     A
80C65C 342B              ADDC    A,#HIGH InputGoodsWayList
80C65E F583              MOV     DPH,A
80C660 E0                MOVX    A,@DPTR
80C661 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80C664 F0                MOVX    @DPTR,A
80C665 7B00              MOV     R3,#?C?XDATASEG
80C667 7A17              MOV     R2,#HIGH m_str
80C669 7949              MOV     R1,#LOW m_str
80C66B A512800949        ECALL   _sprintf
80C670 90175E            MOV     DPTR,#len
80C673 EF                MOV     A,R7
80C674 F0                MOVX    @DPTR,A
  330: 			}
  331: 		}
  332: 	}
80C675 803F              SJMP    ?C0031?DEVICECHECK
80C677         ?C0025?DEVICECHECK:
  333: 	else
  334: 	{
  335: 		GoodsWaySetVal[ m_ChannelNum ].WayState = 0x01;
80C677 901747            MOV     DPTR,#m_ChannelNum
80C67A E0                MOVX    A,@DPTR
80C67B FF                MOV     R7,A
80C67C 75F005            MOV     B,#05H
80C67F 900005            MOV     DPTR,#GoodsWaySetVal+01H
80C682 A51280079F        ECALL   ?C?OFFXADD
80C687 7401              MOV     A,#01H
80C689 F0                MOVX    @DPTR,A
  336: 		sprintf( m_str, "Column %02bu:    OK ", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
80C68A 7B80              MOV     R3,#BYTE2 0800DACH
80C68C 7A0D              MOV     R2,#HIGH 0800DACH
80C68E 79AC              MOV     R1,#LOW 0800DACH
80C690 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80C693 A5128007B6        ECALL   ?C?PSTXDATA
80C698 EF                MOV     A,R7
80C699 25E0              ADD     A,ACC
80C69B 25E0              ADD     A,ACC
80C69D 24DC              ADD     A,#LOW InputGoodsWayList
80C69F F582              MOV     DPL,A
80C6A1 E4                CLR     A
80C6A2 342B              ADDC    A,#HIGH InputGoodsWayList
80C6A4 F583              MOV     DPH,A
80C6A6 E0                MOVX    A,@DPTR
80C6A7 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80C6AA F0                MOVX    @DPTR,A
80C6AB         
80C6AB 7B00              MOV     R3,#?C?XDATASEG
80C6AD 7A17              MOV     R2,#HIGH m_str
80C6AF 7949              MOV     R1,#LOW m_str
80C6B1 A512800949        ECALL   _sprintf
  337: 	}				
80C6B6         ?C0031?DEVICECHECK:
  338: #endif
  339: 	GoodsSetSave = 1;
80C6B6 902DF8            MOV     DPTR,#GoodsSetSave
80C6B9 7401              MOV     A,#01H
80C6BB F0                MOVX    @DPTR,A
  340: 	Trace("\n GoodsWayTest GoodsWaySetVal[%bu].WayState = %02bx", m_ChannelNum,GoodsWaySetVal[ m_ChannelNum ].WaySta
>> te );
  341: 	ClearDisplayLine( 1 );
80C6BC FF                MOV     R7,A
80C6BD A512808FB8        ECALL   _ClearDisplayLine
  342: 	DisplayStr( 0, 1, 1, m_str, 17 );
80C6C2 D21A              SETB    ?_DisplayStr?BIT
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 483


80C6C4 7B00              MOV     R3,#?C?XDATASEG
80C6C6 7A17              MOV     R2,#HIGH m_str
80C6C8 7949              MOV     R1,#LOW m_str
80C6CA 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C6CD A5128007B6        ECALL   ?C?PSTXDATA
80C6D2 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80C6D5 7411              MOV     A,#011H
80C6D7 A512808321        ECALL   ?L?COM000B
  343: 	WaitForWork( 2000, NULL );
  344: 	if( i == 3 )
80C6DC 90175D            MOV     DPTR,#i
80C6DF E0                MOVX    A,@DPTR
80C6E0 B4030C            CJNE    A,#03H,?C0009?DEVICECHECK
  345: 	{
  346: 		for( i = 0; i < GOODSWAYNUM; i ++ )
80C6E3 E4                CLR     A
80C6E4 F0                MOVX    @DPTR,A
80C6E5         ?C0033?DEVICECHECK:
  347: 		{
  348: 			//清除其它状态位
  349:             //GoodsWaySetVal[ i ].WayState = 0x00;
  350: 			//GoodsWaySetVal[ i ].WayState = 0x09;
  351: 		}
80C6E5 90175D            MOV     DPTR,#i
80C6E8 E0                MOVX    A,@DPTR
80C6E9 04                INC     A
80C6EA F0                MOVX    @DPTR,A
80C6EB E0                MOVX    A,@DPTR
80C6EC B440F6            CJNE    A,#040H,?C0033?DEVICECHECK
  352: 	}
  353: }
80C6EF         ?C0009?DEVICECHECK:
80C6EF A522              ERET    
----- FUNCTION GoodsWayTest (END) -------


----- FUNCTION DeviceCheck (BEGIN) -----
 FILE: 'devicecheck.c'
 1061: void DeviceCheck()
 1062: {
 1063:     //菜单显示数组   
 1064: 	unsigned char  xdata firstNum; //一级菜单编号	
 1065: 	unsigned char  xdata LineNum;  //选中行在屏幕中的行号		
 1066: 	unsigned char  xdata key;
 1067: 	u_char   xdata status;
 1068: 	bit	data Notout;
 1069: 	unsigned char xdata line[20];
 1070: 
 1071: 	memset(line , 0 , sizeof( line ));
80C6F1 7E00              MOV     R6,#00H
80C6F3 7F14              MOV     R7,#014H
80C6F5 7D00              MOV     R5,#00H
80C6F7 7B00              MOV     R3,#?C?XDATASEG
80C6F9 7A17              MOV     R2,#HIGH line
80C6FB 7933              MOV     R1,#LOW line
80C6FD A5128008A6        ECALL   ?C?MEMSET
 1072: 	key = KEY_NULL;
80C702 901731            MOV     DPTR,#key
80C705 74FF              MOV     A,#0FFH
80C707 F0                MOVX    @DPTR,A
 1073: 	status = 0;
80C708 E4                CLR     A
80C709 A3                INC     DPTR
80C70A F0                MOVX    @DPTR,A
 1074: 	firstNum = 1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 484


80C70B 90172F            MOV     DPTR,#firstNum
80C70E 04                INC     A
80C70F F0                MOVX    @DPTR,A
 1075: 	LineNum = 2;	
80C710 A3                INC     DPTR
80C711 04                INC     A
80C712 F0                MOVX    @DPTR,A
 1076: 	Notout = 1;
80C713 D218              SETB    Notout
 1077: 
 1078: 	ClearKey();
80C715 A512808FA5        ECALL   ClearKey
 1079: 	/*菜单初始化显示（第1，2行）*/	  	
 1080: //	DisplayStr( 0, 0, 1, WMenuStr[0].str, WMenuStr[0].len );		
 1081: //#ifndef _HAVE_CASHER
 1082: 	m_iCheckDevice = 0;
80C71A E4                CLR     A
80C71B 902DFB            MOV     DPTR,#m_iCheckDevice
80C71E F0                MOVX    @DPTR,A
 1083: 	if( SystemParameter.BillNo != 1 )
80C71F 900427            MOV     DPTR,#SystemParameter+07H
80C722 E0                MOVX    A,@DPTR
80C723 6401              XRL     A,#01H
80C725 6006              JZ      ?C0227?DEVICECHECK
 1084: //		GetDeviceStatus( 0 );	
 1085: //	else
 1086: 		DeviceStatus.BillAccepter = 128;
80C727 900B1B            MOV     DPTR,#DeviceStatus
80C72A 7480              MOV     A,#080H
80C72C F0                MOVX    @DPTR,A
80C72D         ?C0227?DEVICECHECK:
 1087: //	GetDeviceStatus( 1 );	
 1088: //#endif
 1089: 	DispDeviceStatus( 0, 0, 0 );	
80C72D C219              CLR     ?_DispDeviceStatus?BIT
80C72F E4                CLR     A
80C730 FD                MOV     R5,A
80C731 FF                MOV     R7,A
80C732 A512804D75        ECALL   _DispDeviceStatus
 1090: 	DispDeviceStatus( 1, 1, 0 );
80C737 C219              CLR     ?_DispDeviceStatus?BIT
80C739 7D01              MOV     R5,#01H
80C73B 7F01              MOV     R7,#01H
80C73D A512804D75        ECALL   _DispDeviceStatus
 1091: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态
80C742 A51280896E        ECALL   ?L?COM000F
 1092: 	//Trace( "in Menu select begin\n" );		
 1093: 	m_iCheckDevice = 1;
80C747 902DFB            MOV     DPTR,#m_iCheckDevice
80C74A 7401              MOV     A,#01H
80C74C F0                MOVX    @DPTR,A
80C74D         ?C0228?DEVICECHECK:
 1094: 	while( Notout )    //超时或客户退出
80C74D 201803            JB      Notout,$ + 6H
80C750 02C8D2            LJMP    ?C0229?DEVICECHECK
 1095: 	{				
 1096: 		key = GetKey();
80C753 A5128096D1        ECALL   GetKey
80C758 901731            MOV     DPTR,#key
80C75B EF                MOV     A,R7
80C75C F0                MOVX    @DPTR,A
 1097: 		switch( key )		
80C75D 24F3              ADD     A,#0F3H
80C75F 7003              JNZ     $ + 5H
80C761 02C826            LJMP    ?C0246?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 485


80C764 24F2              ADD     A,#0F2H
80C766 7003              JNZ     $ + 5H
80C768 02C821            LJMP    ?C0245?DEVICECHECK
80C76B 24CB              ADD     A,#0CBH
80C76D 6067              JZ      ?C0238?DEVICECHECK
80C76F 2408              ADD     A,#08H
80C771 6003              JZ      $ + 5H
80C773 02C8C3            LJMP    ?C0230?DEVICECHECK
 1098: 		{
 1099: 			case KEY_UP://上移  	
80C776         ?C0231?DEVICECHECK:
 1100: 			     if( LineNum == 2 )//选中标记上移
80C776 901730            MOV     DPTR,#LineNum
80C779 E0                MOVX    A,@DPTR
80C77A 6402              XRL     A,#02H
80C77C 702D              JNZ     ?C0232?DEVICECHECK
 1101: 			     {			     
 1102: 			     	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
80C77E D21A              SETB    ?_DisplayCursorState?BIT
80C780 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80C783 7402              MOV     A,#02H
80C785 F0                MOVX    @DPTR,A
80C786 D21B              SETB    ?_DisplayCursorState?BIT+01H
80C788 E4                CLR     A
80C789 FD                MOV     R5,A
80C78A FF                MOV     R7,A
80C78B A51280897C        ECALL   _DisplayCursorState
 1103: 			     	LineNum = 1;			   
80C790 901730            MOV     DPTR,#LineNum
80C793 7401              MOV     A,#01H
80C795 F0                MOVX    @DPTR,A
 1104: 					if( firstNum == 0 )
80C796 90172F            MOV     DPTR,#firstNum
80C799 E0                MOVX    A,@DPTR
80C79A 7006              JNZ     ?C0233?DEVICECHECK
 1105: 						firstNum = MENU_COUNT(WMenuStr)-1;					
80C79C 7408              MOV     A,#08H
80C79E F0                MOVX    @DPTR,A
80C79F 02C8C3            LJMP    ?C0230?DEVICECHECK
80C7A2         ?C0233?DEVICECHECK:
 1106: 					else
 1107: 						firstNum--;
80C7A2 90172F            MOV     DPTR,#firstNum
80C7A5 E0                MOVX    A,@DPTR
80C7A6 14                DEC     A
80C7A7 F0                MOVX    @DPTR,A
 1108: 			     }
80C7A8 02C8C3            LJMP    ?C0230?DEVICECHECK
80C7AB         ?C0232?DEVICECHECK:
 1109: 			     else//菜单上翻
 1110: 			     {
 1111: 			      	/*当firstNum<=1不能上翻了*/			      	
 1112: 					DispDeviceMenu( firstNum, 1);									    
80C7AB A512804F04        ECALL   ?L?COM0036
 1113: 					if( firstNum == 0 )
80C7B0 90172F            MOV     DPTR,#firstNum
80C7B3 E0                MOVX    A,@DPTR
80C7B4 7005              JNZ     ?C0236?DEVICECHECK
 1114: 						firstNum = MENU_COUNT(WMenuStr)-1;					
80C7B6 7408              MOV     A,#08H
80C7B8 F0                MOVX    @DPTR,A
80C7B9 8006              SJMP    ?C0237?DEVICECHECK
80C7BB         ?C0236?DEVICECHECK:
 1115: 					else
 1116: 						firstNum--;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 486


80C7BB 90172F            MOV     DPTR,#firstNum
80C7BE E0                MOVX    A,@DPTR
80C7BF 14                DEC     A
80C7C0 F0                MOVX    @DPTR,A
80C7C1         ?C0237?DEVICECHECK:
 1117: 					DispDeviceMenu( firstNum, 0);						
80C7C1 90172F            MOV     DPTR,#firstNum
80C7C4 E0                MOVX    A,@DPTR
80C7C5 FF                MOV     R7,A
80C7C6 E4                CLR     A
80C7C7 FD                MOV     R5,A
80C7C8 A512804F0B        ECALL   _DispDeviceMenu
 1118: 					LineNum = 1;					
80C7CD 901730            MOV     DPTR,#LineNum
80C7D0 7401              MOV     A,#01H
80C7D2 F0                MOVX    @DPTR,A
 1119: 			     }
 1120: 				 break;
80C7D3 02C8C3            LJMP    ?C0230?DEVICECHECK
 1121: 			case KEY_DOWN://下移				
80C7D6         ?C0238?DEVICECHECK:
 1122: 				if( LineNum == 1 )//选中标记下移
80C7D6 901730            MOV     DPTR,#LineNum
80C7D9 E0                MOVX    A,@DPTR
80C7DA 6401              XRL     A,#01H
80C7DC 7018              JNZ     ?C0239?DEVICECHECK
 1123: 				{				 
 1124: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标				   
80C7DE A51280896E        ECALL   ?L?COM000F
 1125: 					if( firstNum == MENU_COUNT(WMenuStr)-1 )
80C7E3 90172F            MOV     DPTR,#firstNum
80C7E6 E0                MOVX    A,@DPTR
80C7E7 B40804            CJNE    A,#08H,?C0240?DEVICECHECK
 1126: 						firstNum = 0;					
80C7EA E4                CLR     A
80C7EB F0                MOVX    @DPTR,A
80C7EC 802A              SJMP    ?C0315?DEVICECHECK
80C7EE         ?C0240?DEVICECHECK:
 1127: 					else
 1128: 						firstNum++;
80C7EE 90172F            MOV     DPTR,#firstNum
80C7F1 E0                MOVX    A,@DPTR
80C7F2 04                INC     A
80C7F3 F0                MOVX    @DPTR,A
80C7F4         ?C0241?DEVICECHECK:
 1129: 				     LineNum = 2;				     
 1130: 				 }
80C7F4 8022              SJMP    ?C0315?DEVICECHECK
80C7F6         ?C0239?DEVICECHECK:
 1131: 				 else//菜单下翻
 1132: 				 {
 1133: 				    /*当firstNum<=2不能上翻了*/				    				
 1134: 					DispDeviceMenu( firstNum, 0);						
80C7F6 90172F            MOV     DPTR,#firstNum
80C7F9 E0                MOVX    A,@DPTR
80C7FA FF                MOV     R7,A
80C7FB E4                CLR     A
80C7FC FD                MOV     R5,A
80C7FD A512804F0B        ECALL   _DispDeviceMenu
 1135: 			      	if( firstNum == MENU_COUNT(WMenuStr)-1 )
80C802 90172F            MOV     DPTR,#firstNum
80C805 E0                MOVX    A,@DPTR
80C806 B40804            CJNE    A,#08H,?C0243?DEVICECHECK
 1136: 						firstNum = 0;					
80C809 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 487


80C80A F0                MOVX    @DPTR,A
80C80B 8006              SJMP    ?C0244?DEVICECHECK
80C80D         ?C0243?DEVICECHECK:
 1137: 					else
 1138: 						firstNum++;
80C80D 90172F            MOV     DPTR,#firstNum
80C810 E0                MOVX    A,@DPTR
80C811 04                INC     A
80C812 F0                MOVX    @DPTR,A
80C813         ?C0244?DEVICECHECK:
 1139: 					DispDeviceMenu( firstNum, 1);		  
80C813 A512804F04        ECALL   ?L?COM0036
 1140: 					LineNum = 2;					
80C818         
80C818 901730            MOV     DPTR,#LineNum
80C81B 7402              MOV     A,#02H
80C81D F0                MOVX    @DPTR,A
 1141: 				}
 1142: 				break;
80C81E 02C8C3            LJMP    ?C0230?DEVICECHECK
 1143: 			case KEY_CANCEL:
80C821         ?C0245?DEVICECHECK:
 1144: 				Notout = 0;
80C821 C218              CLR     Notout
 1145: 				break;
80C823 02C8C3            LJMP    ?C0230?DEVICECHECK
 1146: 			case KEY_SUBMIT://Enter,选中了某项菜单	
80C826         ?C0246?DEVICECHECK:
 1147: 				DisplayCursorState( 0, 0, 0, 0, 1 );//第二行整光标
80C826 C21A              CLR     ?_DisplayCursorState?BIT
80C828 E4                CLR     A
80C829 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80C82C F0                MOVX    @DPTR,A
80C82D D21B              SETB    ?_DisplayCursorState?BIT+01H
80C82F FD                MOV     R5,A
80C830 A512808F9F        ECALL   ?L?COM0012
 1148: 				ClearKey();				
 1149: 				switch(firstNum)
80C835 90172F            MOV     DPTR,#firstNum
80C838 E0                MOVX    A,@DPTR
80C839 FF                MOV     R7,A
80C83A 24FB              ADD     A,#0FBH
80C83C 500D              JNC     ?C0252?DEVICECHECK
80C83E 6012              JZ      ?C0254?DEVICECHECK
80C840 14                DEC     A
80C841 600F              JZ      ?C0254?DEVICECHECK
80C843 14                DEC     A
80C844 601D              JZ      ?C0255?DEVICECHECK
80C846 14                DEC     A
80C847 6021              JZ      ?C0256?DEVICECHECK
80C849 8024              SJMP    ?C0247?DEVICECHECK
 1150: 				{			
 1151: 					case 0:       //1纸币器状态					
 1152: 					case 1:       //2硬币器状态//					
 1153: 					case 2:       //#1退币器测试						
 1154: 					case 3:       //#1退币器测试
 1155: 					case 4:       //#1退币器测试
80C84B         ?C0252?DEVICECHECK:
 1156: 						GetDeviceStatus( firstNum );
80C84B A512808464        ECALL   _GetDeviceStatus
 1157: 					break;	
80C850 801D              SJMP    ?C0247?DEVICECHECK
 1158: 					case 5: //用AT指令测试主板与手机模块的连接情况										
 1159: 					case 6: //发送短信测试
80C852         ?C0254?DEVICECHECK:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 488


 1160: 						TestAndDispMobileStates( firstNum - 4, LineNum );
80C852 90172F            MOV     DPTR,#firstNum
80C855 E0                MOVX    A,@DPTR
80C856 24FC              ADD     A,#0FCH
80C858 FF                MOV     R7,A
80C859 A3                INC     DPTR
80C85A E0                MOVX    A,@DPTR
80C85B FD                MOV     R5,A
80C85C A5128053B9        ECALL   _TestAndDispMobileStates
 1161: 					break;
80C861 800C              SJMP    ?C0247?DEVICECHECK
 1162: 					case 7://货道状态
80C863         ?C0255?DEVICECHECK:
 1163: 						DispGoodsWaysStates();	
80C863 A512804F78        ECALL   DispGoodsWaysStates
 1164: 						break;				
80C868 8005              SJMP    ?C0247?DEVICECHECK
 1165: 					case 8:       //货道测试
80C86A         ?C0256?DEVICECHECK:
 1166: 						GoodsWayTest();
80C86A A51280C2AA        ECALL   GoodsWayTest
 1167: 	//					Trace("\n GoodsSetSave1 = %bu", GoodsSetSave );
 1168: 						break;					
 1169: 				}
80C86F         ?C0247?DEVICECHECK:
 1170: 				if(LineNum ==2)
80C86F 901730            MOV     DPTR,#LineNum
80C872 E0                MOVX    A,@DPTR
80C873 6402              XRL     A,#02H
80C875 7021              JNZ     ?C0257?DEVICECHECK
 1171: 				{	
 1172: 					if( firstNum == 0 )						
80C877 90172F            MOV     DPTR,#firstNum
80C87A E0                MOVX    A,@DPTR
80C87B 7005              JNZ     ?C0258?DEVICECHECK
 1173: 						DispDeviceMenu( MENU_COUNT(WMenuStr)-1, 0);
80C87D FD                MOV     R5,A
80C87E 7F08              MOV     R7,#08H
80C880 8008              SJMP    ?C0316?DEVICECHECK
80C882         ?C0258?DEVICECHECK:
 1174: 					else						
 1175: 						DispDeviceMenu( firstNum - 1, 0);
80C882 90172F            MOV     DPTR,#firstNum
80C885 E0                MOVX    A,@DPTR
80C886 14                DEC     A
80C887 FF                MOV     R7,A
80C888 E4                CLR     A
80C889 FD                MOV     R5,A
80C88A         
80C88A A512804F0B        ECALL   _DispDeviceMenu
80C88F         ?C0259?DEVICECHECK:
 1176: 					DispDeviceMenu( firstNum, 1);					
80C88F 90172F            MOV     DPTR,#firstNum
80C892 E0                MOVX    A,@DPTR
80C893 FF                MOV     R7,A
80C894 7D01              MOV     R5,#01H
 1177: 				}
80C896 8021              SJMP    ?C0317?DEVICECHECK
80C898         ?C0257?DEVICECHECK:
 1178: 				else
 1179: 				{												
 1180: 					if( firstNum == ( MENU_COUNT(WMenuStr)-1 ) )
80C898 90172F            MOV     DPTR,#firstNum
80C89B E0                MOVX    A,@DPTR
80C89C B40806            CJNE    A,#08H,?C0261?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 489


 1181: 						DispDeviceMenu( 0, 1);					
80C89F 7D01              MOV     R5,#01H
80C8A1 E4                CLR     A
80C8A2 FF                MOV     R7,A
80C8A3 8008              SJMP    ?C0318?DEVICECHECK
80C8A5         ?C0261?DEVICECHECK:
 1182: 					else						
 1183: 						DispDeviceMenu( firstNum + 1, 1);					
80C8A5 90172F            MOV     DPTR,#firstNum
80C8A8 E0                MOVX    A,@DPTR
80C8A9 04                INC     A
80C8AA FF                MOV     R7,A
80C8AB 7D01              MOV     R5,#01H
80C8AD         
80C8AD A512804F0B        ECALL   _DispDeviceMenu
80C8B2         ?C0262?DEVICECHECK:
 1184: 					DispDeviceMenu( firstNum, 0);
80C8B2 90172F            MOV     DPTR,#firstNum
80C8B5 E0                MOVX    A,@DPTR
80C8B6 FF                MOV     R7,A
80C8B7 E4                CLR     A
80C8B8 FD                MOV     R5,A
80C8B9         
80C8B9 A512804F0B        ECALL   _DispDeviceMenu
 1185: 				}				
80C8BE         ?C0260?DEVICECHECK:
 1186: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//第二行整光标
80C8BE A512808F8E        ECALL   ?L?COM0010
 1187: 				ClearKey();	
 1188: 				break;
 1189: 		}
80C8C3         ?C0230?DEVICECHECK:
 1190: 		CoreProcessCycle();//让出时间片
80C8C3 A5128082D7        ECALL   CoreProcessCycle
 1191: 		DelayMs( 10 );
80C8C8 7F0A              MOV     R7,#0AH
80C8CA A512807EAB        ECALL   _DelayMs
 1192: 	}		
80C8CF 02C74D            LJMP    ?C0228?DEVICECHECK
80C8D2         ?C0229?DEVICECHECK:
 1193: 	m_iCheckDevice = 0;
80C8D2 E4                CLR     A
80C8D3 902DFB            MOV     DPTR,#m_iCheckDevice
80C8D6 F0                MOVX    @DPTR,A
 1194: }
80C8D7 A522              ERET    
----- FUNCTION DeviceCheck (END) -------


----- FUNCTION GetOneIDKey (BEGIN) -----
 FILE: 'CommonFunction.c'
  160: u_char GetOneIDKey()
  161: {
  162: 	u_char xdata k = KEY_NULL ;
  163: 	u_char xdata m_str[2];
80C8D9 901775            MOV     DPTR,#k
80C8DC 74FF              MOV     A,#0FFH
80C8DE F0                MOVX    @DPTR,A
  164: //	u_char xdata line[2];	
  165: 	unsigned int xdata interval = 500;   //超时时间5秒
80C8DF 901778            MOV     DPTR,#interval
80C8E2 7401              MOV     A,#01H
80C8E4 F0                MOVX    @DPTR,A
80C8E5 A3                INC     DPTR
80C8E6 74F4              MOV     A,#0F4H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 490


80C8E8 F0                MOVX    @DPTR,A
  166: 
  167: 	memset( m_str, 0, 2 );
80C8E9 7E00              MOV     R6,#00H
80C8EB 7F02              MOV     R7,#02H
80C8ED 7D00              MOV     R5,#00H
80C8EF 7B00              MOV     R3,#?C?XDATASEG
80C8F1 7A17              MOV     R2,#HIGH m_str
80C8F3 7976              MOV     R1,#LOW m_str
80C8F5 A5128008A6        ECALL   ?C?MEMSET
  168: 	m_str[0] = '*';
80C8FA 901776            MOV     DPTR,#m_str
80C8FD 742A              MOV     A,#02AH
80C8FF F0                MOVX    @DPTR,A
80C900         ?C0036?COMMONFUNCTION:
  169: 	while( ( k == KEY_NULL ) && ( interval != 0 ) )
80C900 901775            MOV     DPTR,#k
80C903 E0                MOVX    A,@DPTR
80C904 B4FF30            CJNE    A,#0FFH,?C0037?COMMONFUNCTION
80C907 901778            MOV     DPTR,#interval
80C90A E0                MOVX    A,@DPTR
80C90B 7002              JNZ     ?C0252?COMMONFUNCTION
80C90D A3                INC     DPTR
80C90E E0                MOVX    A,@DPTR
80C90F         ?C0252?COMMONFUNCTION:
80C90F 6026              JZ      ?C0037?COMMONFUNCTION
  170: 	{
  171: 		SchedulerProcess();
80C911 A5128090B6        ECALL   SchedulerProcess
  172: 		WaitForWork( 50, NULL );
80C916 E4                CLR     A
80C917 7F32              MOV     R7,#032H
80C919 FE                MOV     R6,A
80C91A A512808330        ECALL   ?L?COM000D
  173: 		k = GetKey();			
80C91F A5128096D1        ECALL   GetKey
80C924 901775            MOV     DPTR,#k
80C927 EF                MOV     A,R7
80C928 F0                MOVX    @DPTR,A
  174: 		interval --;
80C929 901778            MOV     DPTR,#interval
80C92C 74FF              MOV     A,#0FFH
80C92E F5F0              MOV     B,A
80C930 A512800600        ECALL   ?C?IILDX
  175: 	}
80C935 80C9              SJMP    ?C0036?COMMONFUNCTION
80C937         ?C0037?COMMONFUNCTION:
  176: 	switch( k )
80C937 901775            MOV     DPTR,#k
80C93A E0                MOVX    A,@DPTR
80C93B 24F6              ADD     A,#0F6H
80C93D 5002              JNC     ?C0048?COMMONFUNCTION
80C93F 801A              SJMP    ?C0038?COMMONFUNCTION
  177: 	{
  178: 		case KEY_0:
  179: 		case KEY_1:
  180: 		case KEY_2:
  181: 		case KEY_3:
  182: 		case KEY_4:
  183: 		case KEY_5:
  184: 		case KEY_6:
  185: 		case KEY_7:
  186: 		case KEY_8:
  187: 		case KEY_9:			
80C941         ?C0048?COMMONFUNCTION:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 491


  188: 	//	case KEY_DOT:		
  189: 		//	NumberToString( k ,  m_str , 1  );				
  190: 		//	sprintf( m_str,"%bu", k );
  191: 			DisplayStr( 0, 0, 0, m_str, 1 );
80C941 C21A              CLR     ?_DisplayStr?BIT
80C943 7B00              MOV     R3,#?C?XDATASEG
80C945 7A17              MOV     R2,#HIGH m_str
80C947 7976              MOV     R1,#LOW m_str
80C949 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C94C A5128007B6        ECALL   ?C?PSTXDATA
80C951 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80C954 7401              MOV     A,#01H
80C956 A51280885B        ECALL   ?L?COM0007
  192: 		    break;			
  193: 	}	
80C95B         ?C0038?COMMONFUNCTION:
  194: 	if(interval == 0)
80C95B 901778            MOV     DPTR,#interval
80C95E E0                MOVX    A,@DPTR
80C95F 7002              JNZ     ?C0253?COMMONFUNCTION
80C961 A3                INC     DPTR
80C962 E0                MOVX    A,@DPTR
80C963         ?C0253?COMMONFUNCTION:
80C963 7004              JNZ     ?C0049?COMMONFUNCTION
  195: 		return KEY_NULL;	
80C965 7FFF              MOV     R7,#0FFH
80C967 8005              SJMP    ?C0050?COMMONFUNCTION
80C969         ?C0049?COMMONFUNCTION:
  196: 	return k;	
80C969 901775            MOV     DPTR,#k
80C96C E0                MOVX    A,@DPTR
80C96D FF                MOV     R7,A
  197: }
80C96E         ?C0050?COMMONFUNCTION:
80C96E A522              ERET    
----- FUNCTION GetOneIDKey (END) -------


----- FUNCTION _GetLine_1 (BEGIN) -----
 FILE: 'CommonFunction.c'
  282: u_char GetLine_1( u_char  *strTip, unsigned char len, u_char y, u_char * line, unsigned char *len1, bit Passwdlog
>> )
  283: {
80C970 901752            MOV     DPTR,#strTip
80C973 A5128007B6        ECALL   ?C?PSTXDATA
80C978 901755            MOV     DPTR,#len
80C97B ED                MOV     A,R5
80C97C F0                MOVX    @DPTR,A
  284:     u_char 	xdata key;
  285: 	u_char  xdata iCounter = 0;
80C97D E4                CLR     A
80C97E 90175E            MOV     DPTR,#iCounter
80C981 F0                MOVX    @DPTR,A
  286: 	u_char  xdata len_loca;
  287: 	u_char xdata space_char = 0x20;
80C982 901760            MOV     DPTR,#space_char
80C985 7420              MOV     A,#020H
80C987 F0                MOVX    @DPTR,A
  288: 	u_char xdata Tempstr[20];
  289: 
  290: 	memset( Tempstr, 0, sizeof( Tempstr ) );
80C988 7E00              MOV     R6,#00H
80C98A 7F14              MOV     R7,#014H
80C98C 7D00              MOV     R5,#00H
80C98E 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 492


80C990 7A17              MOV     R2,#HIGH Tempstr
80C992 7961              MOV     R1,#LOW Tempstr
80C994 A5128008A6        ECALL   ?C?MEMSET
  291: 	iCounter = 0;
80C999 E4                CLR     A
80C99A 90175E            MOV     DPTR,#iCounter
80C99D F0                MOVX    @DPTR,A
  292: 	ClearKey();
80C99E A512808FA5        ECALL   ClearKey
  293: 	len_loca = *len1;		
80C9A3 90175A            MOV     DPTR,#len1
80C9A6 A5128007AC        ECALL   ?C?PLDXDATA
80C9AB A548              EMOV    A,@PR0
80C9AD FF                MOV     R7,A
80C9AE 90175F            MOV     DPTR,#len_loca
80C9B1 F0                MOVX    @DPTR,A
  294: 	if( len + len_loca >= 20 )
80C9B2 901755            MOV     DPTR,#len
80C9B5 E0                MOVX    A,@DPTR
80C9B6 2F                ADD     A,R7
80C9B7 FF                MOV     R7,A
80C9B8 E4                CLR     A
80C9B9 33                RLC     A
80C9BA FE                MOV     R6,A
80C9BB C3                CLR     C
80C9BC EF                MOV     A,R7
80C9BD 9414              SUBB    A,#014H
80C9BF EE                MOV     A,R6
80C9C0 6480              XRL     A,#080H
80C9C2 9480              SUBB    A,#080H
80C9C4 4048              JC      ?C0069?COMMONFUNCTION
  295: 	{	
  296: 		DisplayStr( 0, 0, 1, strTip, len );		
80C9C6 D21A              SETB    ?_DisplayStr?BIT
80C9C8 901752            MOV     DPTR,#strTip
80C9CB A5128007AC        ECALL   ?C?PLDXDATA
80C9D0 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C9D3 A5128007B6        ECALL   ?C?PSTXDATA
80C9D8 901755            MOV     DPTR,#len
80C9DB E0                MOVX    A,@DPTR
80C9DC A512808858        ECALL   ?L?COM0006
  297: 		DisplayStr( 0, 1, 1, " ", 1 );	
80C9E1 D21A              SETB    ?_DisplayStr?BIT
80C9E3 7B80              MOV     R3,#BYTE2 08017B3H
80C9E5 7A17              MOV     R2,#HIGH 08017B3H
80C9E7 79B3              MOV     R1,#LOW 08017B3H
80C9E9 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80C9EC A5128007B6        ECALL   ?C?PSTXDATA
80C9F1 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80C9F4 7401              MOV     A,#01H
80C9F6 F0                MOVX    @DPTR,A
80C9F7 FD                MOV     R5,A
80C9F8 E4                CLR     A
80C9F9 FF                MOV     R7,A
80C9FA A51280885F        ECALL   _DisplayStr
  298: 		DisplayCursorState( 0, 1, 1, 1, 1 );	
80C9FF D21A              SETB    ?_DisplayCursorState?BIT
80CA01 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80CA04 7401              MOV     A,#01H
80CA06 F0                MOVX    @DPTR,A
80CA07 D21B              SETB    ?_DisplayCursorState?BIT+01H
80CA09 FD                MOV     R5,A
80CA0A E4                CLR     A
80CA0B FF                MOV     R7,A
  299: 	}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 493


80CA0C 8038              SJMP    ?C0267?COMMONFUNCTION
80CA0E         ?C0069?COMMONFUNCTION:
  300: 	else
  301: 	{
  302: 		DisplayStr( 0, y, 1, strTip, len );
80CA0E 901756            MOV     DPTR,#y
80CA11 E0                MOVX    A,@DPTR
80CA12 FD                MOV     R5,A
80CA13 D21A              SETB    ?_DisplayStr?BIT
80CA15 901752            MOV     DPTR,#strTip
80CA18 A5128007AC        ECALL   ?C?PLDXDATA
80CA1D 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80CA20 A5128007B6        ECALL   ?C?PSTXDATA
80CA25 901755            MOV     DPTR,#len
80CA28 E0                MOVX    A,@DPTR
80CA29 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80CA2C F0                MOVX    @DPTR,A
80CA2D E4                CLR     A
80CA2E FF                MOV     R7,A
80CA2F A51280885F        ECALL   _DisplayStr
  303: 		DisplayCursorState( len, y, 1, 1, 1 );		
80CA34 901755            MOV     DPTR,#len
80CA37 E0                MOVX    A,@DPTR
80CA38 FF                MOV     R7,A
80CA39 A3                INC     DPTR
80CA3A E0                MOVX    A,@DPTR
80CA3B FD                MOV     R5,A
80CA3C D21A              SETB    ?_DisplayCursorState?BIT
80CA3E 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80CA41 7401              MOV     A,#01H
80CA43 F0                MOVX    @DPTR,A
80CA44 D21B              SETB    ?_DisplayCursorState?BIT+01H
80CA46         
80CA46 A51280897C        ECALL   _DisplayCursorState
  304: 	}
80CA4B         ?C0071?COMMONFUNCTION:
  305: 
  306:     //SgwSecTimer = 30;
  307: 	while( 1 )
  308: 	{
  309: 		WaitForWork( 50, NULL );			
80CA4B E4                CLR     A
80CA4C 7F32              MOV     R7,#032H
80CA4E FE                MOV     R6,A
80CA4F A512808330        ECALL   ?L?COM000D
  310: 		key = KEY_NULL;
80CA54 90175D            MOV     DPTR,#key
80CA57 74FF              MOV     A,#0FFH
80CA59 F0                MOVX    @DPTR,A
  311: 		ClearKey();
80CA5A A512808FA5        ECALL   ClearKey
  312: 		if(iCounter >= len_loca)	
80CA5F 90175F            MOV     DPTR,#len_loca
80CA62 E0                MOVX    A,@DPTR
80CA63 FF                MOV     R7,A
80CA64 90175E            MOV     DPTR,#iCounter
80CA67 E0                MOVX    A,@DPTR
80CA68 C3                CLR     C
80CA69 9F                SUBB    A,R7
80CA6A 4010              JC      ?C0073?COMMONFUNCTION
  313: 		{
  314: 			*len1 = len_loca;		
80CA6C 90175A            MOV     DPTR,#len1
80CA6F A5128007AC        ECALL   ?C?PLDXDATA
80CA74 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 494


80CA75 A558              EMOV    @PR0,A
  315: 			memcpy( line, Tempstr, len_loca );
80CA77 90175F            MOV     DPTR,#len_loca
  316: 			return 1;
80CA7A 803E              SJMP    ?C0268?COMMONFUNCTION
  317: 		}
80CA7C         ?C0073?COMMONFUNCTION:
  318: 		if( Passwdlog == 1 )
80CA7C 301807            JNB     Passwdlog,?C0075?COMMONFUNCTION
  319: 			key = GetOneIDKey();	
80CA7F A51280C8D9        ECALL   GetOneIDKey
80CA84 8005              SJMP    ?C0265?COMMONFUNCTION
80CA86         ?C0075?COMMONFUNCTION:
  320: 		else
  321: 			key = GetOneKey();			
80CA86 A51280D21D        ECALL   GetOneKey
80CA8B         
80CA8B 90175D            MOV     DPTR,#key
80CA8E EF                MOV     A,R7
80CA8F F0                MOVX    @DPTR,A
80CA90         ?C0076?COMMONFUNCTION:
  322: 		if ( (key == KEY_UP) || (key == KEY_DOWN) /*|| (key == KEY_BACK)*/ || (key == KEY_NULL) )
80CA90 90175D            MOV     DPTR,#key
80CA93 E0                MOVX    A,@DPTR
80CA94 FF                MOV     R7,A
80CA95 6448              XRL     A,#048H
80CA97 60B2              JZ      ?C0071?COMMONFUNCTION
80CA99 EF                MOV     A,R7
80CA9A 6450              XRL     A,#050H
80CA9C 60AD              JZ      ?C0071?COMMONFUNCTION
80CA9E EF                MOV     A,R7
80CA9F F4                CPL     A
80CAA0 60A9              JZ      ?C0071?COMMONFUNCTION
  323: 		    continue;
80CAA2         ?C0077?COMMONFUNCTION:
  324: 		else if( key == KEY_SUBMIT) 
80CAA2 EF                MOV     A,R7
80CAA3 640D              XRL     A,#0DH
80CAA5 7035              JNZ     ?C0080?COMMONFUNCTION
  325: 		{				
  326: 			*len1 = iCounter;			
80CAA7 90175E            MOV     DPTR,#iCounter
80CAAA E0                MOVX    A,@DPTR
80CAAB FF                MOV     R7,A
80CAAC 90175A            MOV     DPTR,#len1
80CAAF A5128007AC        ECALL   ?C?PLDXDATA
80CAB4 EF                MOV     A,R7
80CAB5 A558              EMOV    @PR0,A
  327: 			memcpy( line, Tempstr, iCounter );
80CAB7 90175E            MOV     DPTR,#iCounter
80CABA         
80CABA E0                MOVX    A,@DPTR
80CABB FF                MOV     R7,A
80CABC 7E00              MOV     R6,#00H
80CABE 901757            MOV     DPTR,#line
80CAC1 A5128007AC        ECALL   ?C?PLDXDATA
80CAC6 A801              MOV     R0,AR1
80CAC8 AC02              MOV     R4,AR2
80CACA AD03              MOV     R5,AR3
80CACC 7B00              MOV     R3,#?C?XDATASEG
80CACE 7A17              MOV     R2,#HIGH Tempstr
80CAD0 7961              MOV     R1,#LOW Tempstr
80CAD2 A51280052D        ECALL   ?C?COPY
  328: 			return 1;
80CAD7 7F01              MOV     R7,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 495


80CAD9 02CBDC            LJMP    ?C0074?COMMONFUNCTION
  329: 		}			
80CADC         ?C0080?COMMONFUNCTION:
  330: 		else if(key == KEY_CANCEL)
80CADC 90175D            MOV     DPTR,#key
80CADF E0                MOVX    A,@DPTR
80CAE0 FE                MOV     R6,A
80CAE1 B41B05            CJNE    A,#01BH,?C0082?COMMONFUNCTION
  331: 			return 0;
80CAE4 7F00              MOV     R7,#00H
80CAE6 02CBDC            LJMP    ?C0074?COMMONFUNCTION
80CAE9         ?C0082?COMMONFUNCTION:
  332: 		else if( key == KEY_BACK)//clear键,光标后退一格
80CAE9 EE                MOV     A,R6
80CAEA 6418              XRL     A,#018H
80CAEC 6003              JZ      $ + 5H
80CAEE 02CBC1            LJMP    ?C0084?COMMONFUNCTION
  333: 		{		
  334: 			if( iCounter >= 1 )
80CAF1 90175E            MOV     DPTR,#iCounter
80CAF4 E0                MOVX    A,@DPTR
80CAF5 FF                MOV     R7,A
80CAF6 C3                CLR     C
80CAF7 9401              SUBB    A,#01H
80CAF9 5003              JNC     $ + 5H
80CAFB 02CA4B            LJMP    ?C0071?COMMONFUNCTION
  335: 			{
  336: 				if( len + len_loca >= 20 )
80CAFE A3                INC     DPTR
80CAFF E0                MOVX    A,@DPTR
80CB00 FD                MOV     R5,A
80CB01 901755            MOV     DPTR,#len
80CB04 E0                MOVX    A,@DPTR
80CB05 2D                ADD     A,R5
80CB06 FD                MOV     R5,A
80CB07 E4                CLR     A
80CB08 33                RLC     A
80CB09 FC                MOV     R4,A
80CB0A C3                CLR     C
80CB0B ED                MOV     A,R5
80CB0C 9414              SUBB    A,#014H
80CB0E EC                MOV     A,R4
80CB0F 6480              XRL     A,#080H
80CB11 9480              SUBB    A,#080H
80CB13 402E              JC      ?C0086?COMMONFUNCTION
  337: 				{										
  338: 					DisplayPosString( iCounter - 1, 1, &space_char, 1); /* 屏幕清掉一个数字字符 */	
80CB15 EF                MOV     A,R7
80CB16 14                DEC     A
80CB17 FF                MOV     R7,A
80CB18 7B00              MOV     R3,#?C?XDATASEG
80CB1A 7A17              MOV     R2,#HIGH space_char
80CB1C 7960              MOV     R1,#LOW space_char
80CB1E A51280CBDE        ECALL   ?L?COM002B
  339: 					WaitForWork( 300, &Lcd );
80CB23 E4                CLR     A
80CB24 7F2C              MOV     R7,#02CH
80CB26 7E01              MOV     R6,#01H
80CB28 FD                MOV     R5,A
80CB29 FC                MOV     R4,A
80CB2A 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80CB2D 7423              MOV     A,#HIGH Lcd
80CB2F F0                MOVX    @DPTR,A
80CB30 A3                INC     DPTR
80CB31 7469              MOV     A,#LOW Lcd
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 496


80CB33 F0                MOVX    @DPTR,A
80CB34 A512808338        ECALL   _WaitForWork
  340: 					DisplaySetCursorPos( iCounter - 1 , 1 );//设置光标位置				
80CB39 90175E            MOV     DPTR,#iCounter
80CB3C E0                MOVX    A,@DPTR
80CB3D 14                DEC     A
80CB3E FF                MOV     R7,A
80CB3F 7D01              MOV     R5,#01H
  341: 					WaitForWork( 300, &Lcd );
  342: 				}
80CB41 8049              SJMP    ?C0266?COMMONFUNCTION
80CB43         ?C0086?COMMONFUNCTION:
  343: 				else
  344: 				{										
  345: 					DisplayPosString( iCounter + len - 1, y, &space_char, 1); /* 屏幕清掉一个数字字符 */	
80CB43 901755            MOV     DPTR,#len
80CB46 E0                MOVX    A,@DPTR
80CB47 FF                MOV     R7,A
80CB48 90175E            MOV     DPTR,#iCounter
80CB4B E0                MOVX    A,@DPTR
80CB4C 2F                ADD     A,R7
80CB4D 14                DEC     A
80CB4E FF                MOV     R7,A
80CB4F 901756            MOV     DPTR,#y
80CB52 E0                MOVX    A,@DPTR
80CB53 FD                MOV     R5,A
80CB54 7B00              MOV     R3,#?C?XDATASEG
80CB56 7A17              MOV     R2,#HIGH space_char
80CB58 7960              MOV     R1,#LOW space_char
80CB5A 90184B            MOV     DPTR,#?_DisplayPosString?BYTE+05H
80CB5D 7401              MOV     A,#01H
80CB5F F0                MOVX    @DPTR,A
80CB60 A51280CBE5        ECALL   _DisplayPosString
  346: 					WaitForWork( 300, &Lcd );
80CB65 E4                CLR     A
80CB66 7F2C              MOV     R7,#02CH
80CB68 7E01              MOV     R6,#01H
80CB6A FD                MOV     R5,A
80CB6B FC                MOV     R4,A
80CB6C 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80CB6F 7423              MOV     A,#HIGH Lcd
80CB71 F0                MOVX    @DPTR,A
80CB72 A3                INC     DPTR
80CB73 7469              MOV     A,#LOW Lcd
80CB75 F0                MOVX    @DPTR,A
80CB76 A512808338        ECALL   _WaitForWork
  347: 					DisplaySetCursorPos( iCounter + len - 1 , y );//设置光标位置				
80CB7B 901755            MOV     DPTR,#len
80CB7E E0                MOVX    A,@DPTR
80CB7F FF                MOV     R7,A
80CB80 90175E            MOV     DPTR,#iCounter
80CB83 E0                MOVX    A,@DPTR
80CB84 2F                ADD     A,R7
80CB85 14                DEC     A
80CB86 FF                MOV     R7,A
80CB87 901756            MOV     DPTR,#y
80CB8A E0                MOVX    A,@DPTR
80CB8B FD                MOV     R5,A
80CB8C         
80CB8C A51280CEC1        ECALL   _DisplaySetCursorPos
  348: 					WaitForWork( 300, &Lcd );
80CB91 E4                CLR     A
80CB92 7F2C              MOV     R7,#02CH
80CB94 7E01              MOV     R6,#01H
80CB96 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 497


80CB97 FC                MOV     R4,A
80CB98 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80CB9B 7423              MOV     A,#HIGH Lcd
80CB9D F0                MOVX    @DPTR,A
80CB9E A3                INC     DPTR
80CB9F 7469              MOV     A,#LOW Lcd
80CBA1 F0                MOVX    @DPTR,A
80CBA2 A512808338        ECALL   _WaitForWork
  349: 				}						
80CBA7         ?C0087?COMMONFUNCTION:
  350: 				*(line + iCounter) = 0;
80CBA7 901757            MOV     DPTR,#line
80CBAA A5128007AC        ECALL   ?C?PLDXDATA
80CBAF 90175E            MOV     DPTR,#iCounter
80CBB2 E0                MOVX    A,@DPTR
80CBB3 29                ADD     A,R1
80CBB4 F9                MOV     R1,A
80CBB5 E4                CLR     A
80CBB6 3A                ADDC    A,R2
80CBB7 FA                MOV     R2,A
80CBB8 E4                CLR     A
80CBB9 A558              EMOV    @PR0,A
  351: 				iCounter--;				
80CBBB E0                MOVX    A,@DPTR
80CBBC 14                DEC     A
80CBBD F0                MOVX    @DPTR,A
  352: 			}			
  353: 		}
80CBBE 02CA4B            LJMP    ?C0071?COMMONFUNCTION
80CBC1         ?C0084?COMMONFUNCTION:
  354: 		else
  355: 		{						
  356: 			Tempstr[ iCounter ] = key;			
80CBC1 90175D            MOV     DPTR,#key
80CBC4 E0                MOVX    A,@DPTR
80CBC5 FF                MOV     R7,A
80CBC6 A3                INC     DPTR
80CBC7 E0                MOVX    A,@DPTR
80CBC8 2461              ADD     A,#LOW Tempstr
80CBCA F582              MOV     DPL,A
80CBCC E4                CLR     A
80CBCD 3417              ADDC    A,#HIGH Tempstr
80CBCF F583              MOV     DPH,A
80CBD1 EF                MOV     A,R7
80CBD2 F0                MOVX    @DPTR,A
  357: 			iCounter++;					
80CBD3 90175E            MOV     DPTR,#iCounter
80CBD6 E0                MOVX    A,@DPTR
80CBD7 04                INC     A
80CBD8 F0                MOVX    @DPTR,A
  358: 		}			
  359: 	}
80CBD9 02CA4B            LJMP    ?C0071?COMMONFUNCTION
  360: 	return 0;
  361: }
80CBDC         ?C0074?COMMONFUNCTION:
80CBDC A522              ERET    
----- FUNCTION _GetLine_1 (END) -------


----- FUNCTION ?L?COM002B (BEGIN) -----
80CBDE 90184B            MOV     DPTR,#?_DisplayPosString?BYTE+05H
80CBE1 7401              MOV     A,#01H
80CBE3 F0                MOVX    @DPTR,A
80CBE4 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 498


----- FUNCTION _DisplayPosString (BEGIN) -----
 FILE: 'scheduler.c'
 1071: bit DisplayPosString( const uchar PosX , const uchar PosY , uchar * Str , const uchar len )
 1072: {
80CBE5 901846            MOV     DPTR,#PosX
80CBE8 EF                MOV     A,R7
80CBE9 F0                MOVX    @DPTR,A
80CBEA A3                INC     DPTR
80CBEB ED                MOV     A,R5
80CBEC F0                MOVX    @DPTR,A
80CBED A3                INC     DPTR
80CBEE A5128007B6        ECALL   ?C?PSTXDATA
 1073: 	struct COMMTASK xdata TaskTemp;
 1074: 	
 1075: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );
80CBF3 7E00              MOV     R6,#00H
80CBF5 7F26              MOV     R7,#026H
80CBF7 7D00              MOV     R5,#00H
80CBF9 7B00              MOV     R3,#?C?XDATASEG
80CBFB 7A18              MOV     R2,#HIGH TaskTemp
80CBFD 794C              MOV     R1,#LOW TaskTemp
80CBFF A5128008A6        ECALL   ?C?MEMSET
 1076: 	//Trace( "DisplayPosString( %bd , %bd , % bd )\n" , PosX , PosY , len );
 1077: 	TaskTemp.Id 		= ID_LCD;
80CC04 90184D            MOV     DPTR,#TaskTemp+01H
80CC07 7409              MOV     A,#09H
80CC09 F0                MOVX    @DPTR,A
 1078: 	TaskTemp.Cmd 		= DISPKEY_DISPS;
80CC0A A3                INC     DPTR
80CC0B 7452              MOV     A,#052H
80CC0D F0                MOVX    @DPTR,A
 1079: 	TaskTemp.Sn		= Lcd.Sn;
80CC0E 90236A            MOV     DPTR,#Lcd+01H
80CC11 E0                MOVX    A,@DPTR
80CC12 90184F            MOV     DPTR,#TaskTemp+03H
80CC15 F0                MOVX    @DPTR,A
 1080: 	TaskTemp.Priority       = PRIORITY_NORMAL;
80CC16 90184C            MOV     DPTR,#TaskTemp
80CC19 7442              MOV     A,#042H
80CC1B F0                MOVX    @DPTR,A
 1081: 	TaskTemp.ParamLen	= len + 2;
80CC1C 90184B            MOV     DPTR,#len
80CC1F E0                MOVX    A,@DPTR
80CC20 FE                MOV     R6,A
80CC21 2402              ADD     A,#02H
80CC23 901851            MOV     DPTR,#TaskTemp+05H
80CC26 F0                MOVX    @DPTR,A
 1082: 	TaskTemp.Param[ 0 ] 	= PosX;
80CC27 901846            MOV     DPTR,#PosX
80CC2A E0                MOVX    A,@DPTR
80CC2B 901852            MOV     DPTR,#TaskTemp+06H
80CC2E F0                MOVX    @DPTR,A
 1083: 	TaskTemp.Param[ 1 ] 	= PosY;
80CC2F 901847            MOV     DPTR,#PosY
80CC32 E0                MOVX    A,@DPTR
80CC33 901853            MOV     DPTR,#TaskTemp+07H
80CC36 F0                MOVX    @DPTR,A
 1084: 	memcpy( TaskTemp.Param + 2 , Str , len );
80CC37 EE                MOV     A,R6
80CC38 FF                MOV     R7,A
80CC39 7E00              MOV     R6,#00H
80CC3B 7854              MOV     R0,#LOW TaskTemp+08H
80CC3D 7C18              MOV     R4,#HIGH TaskTemp+08H
80CC3F 7D00              MOV     R5,#?C?XDATASEG
80CC41 901848            MOV     DPTR,#Str
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 499


80CC44 A5128007AC        ECALL   ?C?PLDXDATA
80CC49 A51280052D        ECALL   ?C?COPY
 1085: 
 1086: 	return ZhkSchedulerAddTask( &TaskTemp );
80CC4E 7E18              MOV     R6,#HIGH TaskTemp
80CC50 7F4C              MOV     R7,#LOW TaskTemp
80CC52 A51280976B        ECALL   _ZhkSchedulerAddTask
80CC57 EF                MOV     A,R7
80CC58 24FF              ADD     A,#0FFH
 1087: }
80CC5A         ?C0204?SCHEDULER:
80CC5A A522              ERET    
----- FUNCTION _DisplayPosString (END) -------


----- FUNCTION _GetLineMoney (BEGIN) -----
 FILE: 'CommonFunction.c'
  404: u_char GetLineMoney( u_char  *strTip, unsigned char len, u_char y, u_char * line, unsigned char *len1 )
  405: {
80CC5C 901755            MOV     DPTR,#strTip
80CC5F A5128007B6        ECALL   ?C?PSTXDATA
80CC64 901758            MOV     DPTR,#len
80CC67 ED                MOV     A,R5
80CC68 F0                MOVX    @DPTR,A
  406:     u_char xdata key;
  407: 	u_char xdata iCounter = 0;
80CC69 E4                CLR     A
80CC6A 901761            MOV     DPTR,#iCounter
80CC6D F0                MOVX    @DPTR,A
  408: 	u_char xdata len_loca;
  409: 	u_char xdata space_char = 0x20;
80CC6E 901763            MOV     DPTR,#space_char
80CC71 7420              MOV     A,#020H
80CC73 F0                MOVX    @DPTR,A
  410: 	u_char xdata Tempstr[20];
  411: 
  412: 	memset( Tempstr, 0, sizeof( Tempstr ) );
80CC74 7E00              MOV     R6,#00H
80CC76 7F14              MOV     R7,#014H
80CC78 7D00              MOV     R5,#00H
80CC7A 7B00              MOV     R3,#?C?XDATASEG
80CC7C 7A17              MOV     R2,#HIGH Tempstr
80CC7E 7964              MOV     R1,#LOW Tempstr
80CC80 A5128008A6        ECALL   ?C?MEMSET
  413: 	iCounter = 0;
80CC85 E4                CLR     A
80CC86 901761            MOV     DPTR,#iCounter
80CC89 F0                MOVX    @DPTR,A
  414: 	ClearKey();
80CC8A A512808FA5        ECALL   ClearKey
  415: 	len_loca = *len1;		
80CC8F 90175D            MOV     DPTR,#len1
80CC92 A5128007AC        ECALL   ?C?PLDXDATA
80CC97 A548              EMOV    A,@PR0
80CC99 FF                MOV     R7,A
80CC9A 901762            MOV     DPTR,#len_loca
80CC9D F0                MOVX    @DPTR,A
  416: 	if( len + len_loca >= 20 )
80CC9E 901758            MOV     DPTR,#len
80CCA1 E0                MOVX    A,@DPTR
80CCA2 2F                ADD     A,R7
80CCA3 FF                MOV     R7,A
80CCA4 E4                CLR     A
80CCA5 33                RLC     A
80CCA6 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 500


80CCA7 C3                CLR     C
80CCA8 EF                MOV     A,R7
80CCA9 9414              SUBB    A,#014H
80CCAB EE                MOV     A,R6
80CCAC 6480              XRL     A,#080H
80CCAE 9480              SUBB    A,#080H
80CCB0 4048              JC      ?C0104?COMMONFUNCTION
  417: 	{	
  418: 		DisplayStr( 0, 0, 1, strTip, len );		
80CCB2 D21A              SETB    ?_DisplayStr?BIT
80CCB4 901755            MOV     DPTR,#strTip
80CCB7 A5128007AC        ECALL   ?C?PLDXDATA
80CCBC 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80CCBF A5128007B6        ECALL   ?C?PSTXDATA
80CCC4 901758            MOV     DPTR,#len
80CCC7 E0                MOVX    A,@DPTR
80CCC8 A512808858        ECALL   ?L?COM0006
  419: 		DisplayStr( 0, 1, 1, " ", 1 );	
80CCCD D21A              SETB    ?_DisplayStr?BIT
80CCCF 7B80              MOV     R3,#BYTE2 08017B3H
80CCD1 7A17              MOV     R2,#HIGH 08017B3H
80CCD3 79B3              MOV     R1,#LOW 08017B3H
80CCD5 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80CCD8 A5128007B6        ECALL   ?C?PSTXDATA
80CCDD 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80CCE0 7401              MOV     A,#01H
80CCE2 F0                MOVX    @DPTR,A
80CCE3 FD                MOV     R5,A
80CCE4 E4                CLR     A
80CCE5 FF                MOV     R7,A
80CCE6 A51280885F        ECALL   _DisplayStr
  420: 		DisplayCursorState( 0, 1, 1, 1, 1 );	
80CCEB D21A              SETB    ?_DisplayCursorState?BIT
80CCED 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80CCF0 7401              MOV     A,#01H
80CCF2 F0                MOVX    @DPTR,A
80CCF3 D21B              SETB    ?_DisplayCursorState?BIT+01H
80CCF5 FD                MOV     R5,A
80CCF6 E4                CLR     A
80CCF7 FF                MOV     R7,A
  421: 	}
80CCF8 8038              SJMP    ?C0270?COMMONFUNCTION
80CCFA         ?C0104?COMMONFUNCTION:
  422: 	else
  423: 	{
  424: 		DisplayStr( 0, y, 1, strTip, len );
80CCFA 901759            MOV     DPTR,#y
80CCFD E0                MOVX    A,@DPTR
80CCFE FD                MOV     R5,A
80CCFF D21A              SETB    ?_DisplayStr?BIT
80CD01 901755            MOV     DPTR,#strTip
80CD04 A5128007AC        ECALL   ?C?PLDXDATA
80CD09 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80CD0C A5128007B6        ECALL   ?C?PSTXDATA
80CD11 901758            MOV     DPTR,#len
80CD14 E0                MOVX    A,@DPTR
80CD15 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80CD18 F0                MOVX    @DPTR,A
80CD19 E4                CLR     A
80CD1A FF                MOV     R7,A
80CD1B A51280885F        ECALL   _DisplayStr
  425: 		DisplayCursorState( len, y, 1, 1, 1 );		
80CD20 901758            MOV     DPTR,#len
80CD23 E0                MOVX    A,@DPTR
80CD24 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 501


80CD25 A3                INC     DPTR
80CD26 E0                MOVX    A,@DPTR
80CD27 FD                MOV     R5,A
80CD28 D21A              SETB    ?_DisplayCursorState?BIT
80CD2A 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80CD2D 7401              MOV     A,#01H
80CD2F F0                MOVX    @DPTR,A
80CD30 D21B              SETB    ?_DisplayCursorState?BIT+01H
80CD32         
80CD32 A51280897C        ECALL   _DisplayCursorState
  426: 	}
80CD37         ?C0106?COMMONFUNCTION:
  427: 	while( 1 )
  428: 	{
  429: 		WaitForWork( 50, NULL );			
80CD37 E4                CLR     A
80CD38 7F32              MOV     R7,#032H
80CD3A FE                MOV     R6,A
80CD3B A512808330        ECALL   ?L?COM000D
  430: 		key = KEY_NULL;
80CD40 901760            MOV     DPTR,#key
80CD43 74FF              MOV     A,#0FFH
80CD45 F0                MOVX    @DPTR,A
  431: 		ClearKey();
80CD46 A512808FA5        ECALL   ClearKey
  432: 		if(iCounter >= len_loca)	
80CD4B 901762            MOV     DPTR,#len_loca
80CD4E E0                MOVX    A,@DPTR
80CD4F FF                MOV     R7,A
80CD50 901761            MOV     DPTR,#iCounter
80CD53 E0                MOVX    A,@DPTR
80CD54 C3                CLR     C
80CD55 9F                SUBB    A,R7
80CD56 4010              JC      ?C0108?COMMONFUNCTION
  433: 		{
  434: 			*len1 = len_loca;		
80CD58 90175D            MOV     DPTR,#len1
80CD5B A5128007AC        ECALL   ?C?PLDXDATA
80CD60 EF                MOV     A,R7
80CD61 A558              EMOV    @PR0,A
  435: 			memcpy( line, Tempstr, len_loca );
80CD63 901762            MOV     DPTR,#len_loca
  436: 			return 1;
80CD66 8035              SJMP    ?C0271?COMMONFUNCTION
  437: 		}
80CD68         ?C0108?COMMONFUNCTION:
  438: 		key = GetOneMoneyKey();			
80CD68 A51280CF16        ECALL   GetOneMoneyKey
80CD6D 901760            MOV     DPTR,#key
80CD70 EF                MOV     A,R7
80CD71 F0                MOVX    @DPTR,A
  439: 		if ( (key == KEY_UP) || (key == KEY_DOWN) || (key == KEY_DOT) || (key == KEY_NULL) )
80CD72 6448              XRL     A,#048H
80CD74 60C1              JZ      ?C0106?COMMONFUNCTION
80CD76 E0                MOVX    A,@DPTR
80CD77 FF                MOV     R7,A
80CD78 6450              XRL     A,#050H
80CD7A 60BB              JZ      ?C0106?COMMONFUNCTION
80CD7C EF                MOV     A,R7
80CD7D 642E              XRL     A,#02EH
80CD7F 60B6              JZ      ?C0106?COMMONFUNCTION
80CD81 EF                MOV     A,R7
80CD82 F4                CPL     A
80CD83 60B2              JZ      ?C0106?COMMONFUNCTION
  440: 		    continue;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 502


80CD85         ?C0110?COMMONFUNCTION:
  441: 		else if( key == KEY_SUBMIT) 
80CD85 EF                MOV     A,R7
80CD86 640D              XRL     A,#0DH
80CD88 7035              JNZ     ?C0113?COMMONFUNCTION
  442: 		{				
  443: 			*len1 = iCounter;			
80CD8A 901761            MOV     DPTR,#iCounter
80CD8D E0                MOVX    A,@DPTR
80CD8E FF                MOV     R7,A
80CD8F 90175D            MOV     DPTR,#len1
80CD92 A5128007AC        ECALL   ?C?PLDXDATA
80CD97 EF                MOV     A,R7
80CD98 A558              EMOV    @PR0,A
  444: 			memcpy( line, Tempstr, iCounter );
80CD9A 901761            MOV     DPTR,#iCounter
80CD9D         
80CD9D E0                MOVX    A,@DPTR
80CD9E FF                MOV     R7,A
80CD9F 7E00              MOV     R6,#00H
80CDA1 90175A            MOV     DPTR,#line
80CDA4 A5128007AC        ECALL   ?C?PLDXDATA
80CDA9 A801              MOV     R0,AR1
80CDAB AC02              MOV     R4,AR2
80CDAD AD03              MOV     R5,AR3
80CDAF 7B00              MOV     R3,#?C?XDATASEG
80CDB1 7A17              MOV     R2,#HIGH Tempstr
80CDB3 7964              MOV     R1,#LOW Tempstr
80CDB5 A51280052D        ECALL   ?C?COPY
  445: 			return 1;
80CDBA 7F01              MOV     R7,#01H
80CDBC 02CEBF            LJMP    ?C0109?COMMONFUNCTION
  446: 		}			
80CDBF         ?C0113?COMMONFUNCTION:
  447: 		else if(key == KEY_CANCEL)
80CDBF 901760            MOV     DPTR,#key
80CDC2 E0                MOVX    A,@DPTR
80CDC3 FE                MOV     R6,A
80CDC4 B41B05            CJNE    A,#01BH,?C0115?COMMONFUNCTION
  448: 			return 0;
80CDC7 7F00              MOV     R7,#00H
80CDC9 02CEBF            LJMP    ?C0109?COMMONFUNCTION
80CDCC         ?C0115?COMMONFUNCTION:
  449: 		else if( key == KEY_BACK)//clear键,光标后退一格
80CDCC EE                MOV     A,R6
80CDCD 6418              XRL     A,#018H
80CDCF 6003              JZ      $ + 5H
80CDD1 02CEA4            LJMP    ?C0117?COMMONFUNCTION
  450: 		{		
  451: 			if( iCounter >= 1 )
80CDD4 901761            MOV     DPTR,#iCounter
80CDD7 E0                MOVX    A,@DPTR
80CDD8 FF                MOV     R7,A
80CDD9 C3                CLR     C
80CDDA 9401              SUBB    A,#01H
80CDDC 5003              JNC     $ + 5H
80CDDE 02CD37            LJMP    ?C0106?COMMONFUNCTION
  452: 			{
  453: 				if( len + len_loca >= 20 )
80CDE1 A3                INC     DPTR
80CDE2 E0                MOVX    A,@DPTR
80CDE3 FD                MOV     R5,A
80CDE4 901758            MOV     DPTR,#len
80CDE7 E0                MOVX    A,@DPTR
80CDE8 2D                ADD     A,R5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 503


80CDE9 FD                MOV     R5,A
80CDEA E4                CLR     A
80CDEB 33                RLC     A
80CDEC FC                MOV     R4,A
80CDED C3                CLR     C
80CDEE ED                MOV     A,R5
80CDEF 9414              SUBB    A,#014H
80CDF1 EC                MOV     A,R4
80CDF2 6480              XRL     A,#080H
80CDF4 9480              SUBB    A,#080H
80CDF6 402E              JC      ?C0119?COMMONFUNCTION
  454: 				{										
  455: 					DisplayPosString( iCounter - 1, 1, &space_char, 1); /* 屏幕清掉一个数字字符 */	
80CDF8 EF                MOV     A,R7
80CDF9 14                DEC     A
80CDFA FF                MOV     R7,A
80CDFB 7B00              MOV     R3,#?C?XDATASEG
80CDFD 7A17              MOV     R2,#HIGH space_char
80CDFF 7963              MOV     R1,#LOW space_char
80CE01 A51280CBDE        ECALL   ?L?COM002B
  456: 					WaitForWork( 300, &Lcd );
80CE06 E4                CLR     A
80CE07 7F2C              MOV     R7,#02CH
80CE09 7E01              MOV     R6,#01H
80CE0B FD                MOV     R5,A
80CE0C FC                MOV     R4,A
80CE0D 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80CE10 7423              MOV     A,#HIGH Lcd
80CE12 F0                MOVX    @DPTR,A
80CE13 A3                INC     DPTR
80CE14 7469              MOV     A,#LOW Lcd
80CE16 F0                MOVX    @DPTR,A
80CE17 A512808338        ECALL   _WaitForWork
  457: 					DisplaySetCursorPos( iCounter - 1 , 1 );//设置光标位置				
80CE1C 901761            MOV     DPTR,#iCounter
80CE1F E0                MOVX    A,@DPTR
80CE20 14                DEC     A
80CE21 FF                MOV     R7,A
80CE22 7D01              MOV     R5,#01H
  458: 					WaitForWork( 300, &Lcd );
  459: 				}
80CE24 8049              SJMP    ?C0269?COMMONFUNCTION
80CE26         ?C0119?COMMONFUNCTION:
  460: 				else
  461: 				{										
  462: 					DisplayPosString( iCounter + len - 1, y, &space_char, 1); /* 屏幕清掉一个数字字符 */	
80CE26 901758            MOV     DPTR,#len
80CE29 E0                MOVX    A,@DPTR
80CE2A FF                MOV     R7,A
80CE2B 901761            MOV     DPTR,#iCounter
80CE2E E0                MOVX    A,@DPTR
80CE2F 2F                ADD     A,R7
80CE30 14                DEC     A
80CE31 FF                MOV     R7,A
80CE32 901759            MOV     DPTR,#y
80CE35 E0                MOVX    A,@DPTR
80CE36 FD                MOV     R5,A
80CE37 7B00              MOV     R3,#?C?XDATASEG
80CE39 7A17              MOV     R2,#HIGH space_char
80CE3B 7963              MOV     R1,#LOW space_char
80CE3D 90184B            MOV     DPTR,#?_DisplayPosString?BYTE+05H
80CE40 7401              MOV     A,#01H
80CE42 F0                MOVX    @DPTR,A
80CE43 A51280CBE5        ECALL   _DisplayPosString
  463: 					WaitForWork( 300, &Lcd );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 504


80CE48 E4                CLR     A
80CE49 7F2C              MOV     R7,#02CH
80CE4B 7E01              MOV     R6,#01H
80CE4D FD                MOV     R5,A
80CE4E FC                MOV     R4,A
80CE4F 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80CE52 7423              MOV     A,#HIGH Lcd
80CE54 F0                MOVX    @DPTR,A
80CE55 A3                INC     DPTR
80CE56 7469              MOV     A,#LOW Lcd
80CE58 F0                MOVX    @DPTR,A
80CE59 A512808338        ECALL   _WaitForWork
  464: 					DisplaySetCursorPos( iCounter + len - 1 , y );//设置光标位置				
80CE5E 901758            MOV     DPTR,#len
80CE61 E0                MOVX    A,@DPTR
80CE62 FF                MOV     R7,A
80CE63 901761            MOV     DPTR,#iCounter
80CE66 E0                MOVX    A,@DPTR
80CE67 2F                ADD     A,R7
80CE68 14                DEC     A
80CE69 FF                MOV     R7,A
80CE6A 901759            MOV     DPTR,#y
80CE6D E0                MOVX    A,@DPTR
80CE6E FD                MOV     R5,A
80CE6F         
80CE6F A51280CEC1        ECALL   _DisplaySetCursorPos
  465: 					WaitForWork( 300, &Lcd );
80CE74 E4                CLR     A
80CE75 7F2C              MOV     R7,#02CH
80CE77 7E01              MOV     R6,#01H
80CE79 FD                MOV     R5,A
80CE7A FC                MOV     R4,A
80CE7B 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80CE7E 7423              MOV     A,#HIGH Lcd
80CE80 F0                MOVX    @DPTR,A
80CE81 A3                INC     DPTR
80CE82 7469              MOV     A,#LOW Lcd
80CE84 F0                MOVX    @DPTR,A
80CE85 A512808338        ECALL   _WaitForWork
  466: 				}						
80CE8A         ?C0120?COMMONFUNCTION:
  467: 				*(line + iCounter) = 0;
80CE8A 90175A            MOV     DPTR,#line
80CE8D A5128007AC        ECALL   ?C?PLDXDATA
80CE92 901761            MOV     DPTR,#iCounter
80CE95 E0                MOVX    A,@DPTR
80CE96 29                ADD     A,R1
80CE97 F9                MOV     R1,A
80CE98 E4                CLR     A
80CE99 3A                ADDC    A,R2
80CE9A FA                MOV     R2,A
80CE9B E4                CLR     A
80CE9C A558              EMOV    @PR0,A
  468: 				iCounter--;						
80CE9E E0                MOVX    A,@DPTR
80CE9F 14                DEC     A
80CEA0 F0                MOVX    @DPTR,A
  469: 			}			
  470: 		}
80CEA1 02CD37            LJMP    ?C0106?COMMONFUNCTION
80CEA4         ?C0117?COMMONFUNCTION:
  471: 		else
  472: 		{						
  473: 			Tempstr[ iCounter ] = key;			
80CEA4 901760            MOV     DPTR,#key
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 505


80CEA7 E0                MOVX    A,@DPTR
80CEA8 FF                MOV     R7,A
80CEA9 A3                INC     DPTR
80CEAA E0                MOVX    A,@DPTR
80CEAB 2464              ADD     A,#LOW Tempstr
80CEAD F582              MOV     DPL,A
80CEAF E4                CLR     A
80CEB0 3417              ADDC    A,#HIGH Tempstr
80CEB2 F583              MOV     DPH,A
80CEB4 EF                MOV     A,R7
80CEB5 F0                MOVX    @DPTR,A
  474: 			iCounter++;			
80CEB6 901761            MOV     DPTR,#iCounter
80CEB9 E0                MOVX    A,@DPTR
80CEBA 04                INC     A
80CEBB F0                MOVX    @DPTR,A
  475: 		}			
  476: 	}
80CEBC 02CD37            LJMP    ?C0106?COMMONFUNCTION
  477: 	return 0;
  478: }
80CEBF         ?C0109?COMMONFUNCTION:
80CEBF A522              ERET    
----- FUNCTION _GetLineMoney (END) -------


----- FUNCTION _DisplaySetCursorPos (BEGIN) -----
 FILE: 'scheduler.c'
 1104: bit DisplaySetCursorPos( uchar PosX , uchar PosY )
 1105: {
80CEC1 901796            MOV     DPTR,#PosX
80CEC4 EF                MOV     A,R7
80CEC5 F0                MOVX    @DPTR,A
80CEC6 A3                INC     DPTR
80CEC7 ED                MOV     A,R5
80CEC8 F0                MOVX    @DPTR,A
 1106: 	struct COMMTASK xdata TaskTemp;
 1107: 
 1108: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );	
80CEC9 7E00              MOV     R6,#00H
80CECB 7F26              MOV     R7,#026H
80CECD 7D00              MOV     R5,#00H
80CECF 7B00              MOV     R3,#?C?XDATASEG
80CED1 7A17              MOV     R2,#HIGH TaskTemp
80CED3 7998              MOV     R1,#LOW TaskTemp
80CED5 A5128008A6        ECALL   ?C?MEMSET
 1109: 	TaskTemp.Id 		= ID_LCD;
80CEDA 901799            MOV     DPTR,#TaskTemp+01H
80CEDD 7409              MOV     A,#09H
80CEDF F0                MOVX    @DPTR,A
 1110: 	TaskTemp.Cmd 		= DISPKEY_SETCURSOR;
80CEE0 A3                INC     DPTR
80CEE1 7454              MOV     A,#054H
80CEE3 F0                MOVX    @DPTR,A
 1111: 	TaskTemp.Sn		= Lcd.Sn;
80CEE4 90236A            MOV     DPTR,#Lcd+01H
80CEE7 E0                MOVX    A,@DPTR
80CEE8 90179B            MOV     DPTR,#TaskTemp+03H
80CEEB F0                MOVX    @DPTR,A
 1112: 	TaskTemp.Priority       = PRIORITY_NORMAL;
80CEEC 901798            MOV     DPTR,#TaskTemp
80CEEF 7442              MOV     A,#042H
80CEF1 F0                MOVX    @DPTR,A
 1113: 	TaskTemp.ParamLen	= 2;
80CEF2 90179D            MOV     DPTR,#TaskTemp+05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 506


80CEF5 7402              MOV     A,#02H
80CEF7 F0                MOVX    @DPTR,A
 1114: 	TaskTemp.Param[ 0 ] 	= PosX;
80CEF8 901796            MOV     DPTR,#PosX
80CEFB E0                MOVX    A,@DPTR
80CEFC 90179E            MOV     DPTR,#TaskTemp+06H
80CEFF F0                MOVX    @DPTR,A
 1115: 	TaskTemp.Param[ 1 ] 	= PosY;
80CF00 901797            MOV     DPTR,#PosY
80CF03 E0                MOVX    A,@DPTR
80CF04 90179F            MOV     DPTR,#TaskTemp+07H
80CF07 F0                MOVX    @DPTR,A
 1116: 
 1117: 	return ZhkSchedulerAddTask( &TaskTemp );
80CF08 7E17              MOV     R6,#HIGH TaskTemp
80CF0A 7F98              MOV     R7,#LOW TaskTemp
80CF0C A51280976B        ECALL   _ZhkSchedulerAddTask
80CF11 EF                MOV     A,R7
80CF12 24FF              ADD     A,#0FFH
 1118: 		
 1119: }
80CF14         ?C0206?SCHEDULER:
80CF14 A522              ERET    
----- FUNCTION _DisplaySetCursorPos (END) -------


----- FUNCTION GetOneMoneyKey (BEGIN) -----
 FILE: 'CommonFunction.c'
  365: u_char GetOneMoneyKey()
  366: {
  367: 	u_char xdata k = KEY_NULL ;
  368: 	u_char xdata m_str[2];
80CF16 901778            MOV     DPTR,#k
80CF19 74FF              MOV     A,#0FFH
80CF1B F0                MOVX    @DPTR,A
  369: //	u_char xdata line[2];	
  370: 	unsigned int xdata interval = 500;   //超时时间5秒
80CF1C 90177B            MOV     DPTR,#interval
80CF1F 7401              MOV     A,#01H
80CF21 F0                MOVX    @DPTR,A
80CF22 A3                INC     DPTR
80CF23 74F4              MOV     A,#0F4H
80CF25 F0                MOVX    @DPTR,A
  371: 	
  372: 	memset( m_str, 0 , sizeof (m_str ) );
80CF26 7E00              MOV     R6,#00H
80CF28 7F02              MOV     R7,#02H
80CF2A 7D00              MOV     R5,#00H
80CF2C 7B00              MOV     R3,#?C?XDATASEG
80CF2E 7A17              MOV     R2,#HIGH m_str
80CF30 7979              MOV     R1,#LOW m_str
80CF32 A5128008A6        ECALL   ?C?MEMSET
80CF37         ?C0089?COMMONFUNCTION:
  373: 	while( ( k == KEY_NULL ) && ( interval != 0 ) )
80CF37 901778            MOV     DPTR,#k
80CF3A E0                MOVX    A,@DPTR
80CF3B B4FF30            CJNE    A,#0FFH,?C0090?COMMONFUNCTION
80CF3E 90177B            MOV     DPTR,#interval
80CF41 E0                MOVX    A,@DPTR
80CF42 7002              JNZ     ?C0254?COMMONFUNCTION
80CF44 A3                INC     DPTR
80CF45 E0                MOVX    A,@DPTR
80CF46         ?C0254?COMMONFUNCTION:
80CF46 6026              JZ      ?C0090?COMMONFUNCTION
  374: 	{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 507


  375: 		SchedulerProcess();
80CF48 A5128090B6        ECALL   SchedulerProcess
  376: 		WaitForWork( 50, NULL );
80CF4D E4                CLR     A
80CF4E 7F32              MOV     R7,#032H
80CF50 FE                MOV     R6,A
80CF51 A512808330        ECALL   ?L?COM000D
  377: 		k = GetKey();			
80CF56 A5128096D1        ECALL   GetKey
80CF5B 901778            MOV     DPTR,#k
80CF5E EF                MOV     A,R7
80CF5F F0                MOVX    @DPTR,A
  378: 		interval --;
80CF60 90177B            MOV     DPTR,#interval
80CF63 74FF              MOV     A,#0FFH
80CF65 F5F0              MOV     B,A
80CF67 A512800600        ECALL   ?C?IILDX
  379: 	}
80CF6C 80C9              SJMP    ?C0089?COMMONFUNCTION
80CF6E         ?C0090?COMMONFUNCTION:
  380: 	switch( k )
80CF6E 901778            MOV     DPTR,#k
80CF71 E0                MOVX    A,@DPTR
80CF72 FF                MOV     R7,A
80CF73 24F6              ADD     A,#0F6H
80CF75 5002              JNC     ?C0101?COMMONFUNCTION
80CF77 8029              SJMP    ?C0091?COMMONFUNCTION
  381: 	{
  382: 		case KEY_0:
  383: 		case KEY_1:
  384: 		case KEY_2:
  385: 		case KEY_3:
  386: 		case KEY_4:
  387: 		case KEY_5:
  388: 		case KEY_6:
  389: 		case KEY_7:
  390: 		case KEY_8:
  391: 		case KEY_9:			
80CF79         ?C0101?COMMONFUNCTION:
  392: 			NumberToString( k ,  m_str , 1  );				
80CF79 E4                CLR     A
80CF7A FC                MOV     R4,A
80CF7B FD                MOV     R5,A
80CF7C FE                MOV     R6,A
80CF7D 7B00              MOV     R3,#?C?XDATASEG
80CF7F 7A17              MOV     R2,#HIGH m_str
80CF81 7979              MOV     R1,#LOW m_str
80CF83 A51280D2BE        ECALL   ?L?COM003B
  393: 		//	sprintf( m_str,"%bu", k );
  394: 			DisplayStr( 0, 0, 0, m_str, 1 );
80CF88 C21A              CLR     ?_DisplayStr?BIT
80CF8A 7B00              MOV     R3,#?C?XDATASEG
80CF8C 7A17              MOV     R2,#HIGH m_str
80CF8E 7979              MOV     R1,#LOW m_str
80CF90 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80CF93 A5128007B6        ECALL   ?C?PSTXDATA
80CF98 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80CF9B 7401              MOV     A,#01H
80CF9D A51280885B        ECALL   ?L?COM0007
  395: 		    break;	
  396: 	}	
80CFA2         ?C0091?COMMONFUNCTION:
  397: 	if(interval == 0)
80CFA2 90177B            MOV     DPTR,#interval
80CFA5 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 508


80CFA6 7002              JNZ     ?C0255?COMMONFUNCTION
80CFA8 A3                INC     DPTR
80CFA9 E0                MOVX    A,@DPTR
80CFAA         ?C0255?COMMONFUNCTION:
80CFAA 7004              JNZ     ?C0102?COMMONFUNCTION
  398: 		return KEY_NULL;	
80CFAC 7FFF              MOV     R7,#0FFH
80CFAE 8005              SJMP    ?C0103?COMMONFUNCTION
80CFB0         ?C0102?COMMONFUNCTION:
  399: 	return k;	
80CFB0 901778            MOV     DPTR,#k
80CFB3 E0                MOVX    A,@DPTR
80CFB4 FF                MOV     R7,A
  400: }
80CFB5         ?C0103?COMMONFUNCTION:
80CFB5 A522              ERET    
----- FUNCTION GetOneMoneyKey (END) -------


----- FUNCTION _GetLine (BEGIN) -----
 FILE: 'CommonFunction.c'
  202: u_char GetLine( u_char  *strTip, unsigned char len, u_char y, u_char * line, unsigned char *len1)
  203: {
80CFB7 90176E            MOV     DPTR,#strTip
80CFBA A5128007B6        ECALL   ?C?PSTXDATA
80CFBF 901771            MOV     DPTR,#len
80CFC2 ED                MOV     A,R5
80CFC3 F0                MOVX    @DPTR,A
  204:     u_char 	xdata key;
  205: 	u_char  xdata iCounter = 0;
80CFC4 E4                CLR     A
80CFC5 90177A            MOV     DPTR,#iCounter
80CFC8 F0                MOVX    @DPTR,A
  206: 	u_char  xdata len_loca;
  207: 	u_char xdata space_char = 0x20;
80CFC9 90177C            MOV     DPTR,#space_char
80CFCC 7420              MOV     A,#020H
80CFCE F0                MOVX    @DPTR,A
  208: 	u_char xdata Tempstr[20];
  209: 
  210: 	memset( Tempstr, 0, sizeof( Tempstr ) );
80CFCF 7E00              MOV     R6,#00H
80CFD1 7F14              MOV     R7,#014H
80CFD3 7D00              MOV     R5,#00H
80CFD5 7B00              MOV     R3,#?C?XDATASEG
80CFD7 7A17              MOV     R2,#HIGH Tempstr
80CFD9 797D              MOV     R1,#LOW Tempstr
80CFDB A5128008A6        ECALL   ?C?MEMSET
  211: 	iCounter = 0;
80CFE0 E4                CLR     A
80CFE1 90177A            MOV     DPTR,#iCounter
80CFE4 F0                MOVX    @DPTR,A
  212: 	ClearKey();
80CFE5 A512808FA5        ECALL   ClearKey
  213: 	len_loca = *len1;		
80CFEA 901776            MOV     DPTR,#len1
80CFED A5128007AC        ECALL   ?C?PLDXDATA
80CFF2 A548              EMOV    A,@PR0
80CFF4 FF                MOV     R7,A
80CFF5 90177B            MOV     DPTR,#len_loca
80CFF8 F0                MOVX    @DPTR,A
  214: 	if( len + len_loca > 20 )
80CFF9 901771            MOV     DPTR,#len
80CFFC E0                MOVX    A,@DPTR
80CFFD 2F                ADD     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 509


80CFFE FF                MOV     R7,A
80CFFF E4                CLR     A
80D000 33                RLC     A
80D001 FE                MOV     R6,A
80D002 D3                SETB    C
80D003 EF                MOV     A,R7
80D004 9414              SUBB    A,#014H
80D006 EE                MOV     A,R6
80D007 6480              XRL     A,#080H
80D009 9480              SUBB    A,#080H
80D00B 4048              JC      ?C0051?COMMONFUNCTION
  215: 	{	
  216: 		DisplayStr( 0, 0, 1, strTip, len );		
80D00D D21A              SETB    ?_DisplayStr?BIT
80D00F 90176E            MOV     DPTR,#strTip
80D012 A5128007AC        ECALL   ?C?PLDXDATA
80D017 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D01A A5128007B6        ECALL   ?C?PSTXDATA
80D01F 901771            MOV     DPTR,#len
80D022 E0                MOVX    A,@DPTR
80D023 A512808858        ECALL   ?L?COM0006
  217: 		DisplayStr( 0, 1, 1, " ", 1 );	
80D028 D21A              SETB    ?_DisplayStr?BIT
80D02A 7B80              MOV     R3,#BYTE2 08017B3H
80D02C 7A17              MOV     R2,#HIGH 08017B3H
80D02E 79B3              MOV     R1,#LOW 08017B3H
80D030 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D033 A5128007B6        ECALL   ?C?PSTXDATA
80D038 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D03B 7401              MOV     A,#01H
80D03D F0                MOVX    @DPTR,A
80D03E FD                MOV     R5,A
80D03F E4                CLR     A
80D040 FF                MOV     R7,A
80D041 A51280885F        ECALL   _DisplayStr
  218: 		DisplayCursorState( 0, 1, 1, 1, 1 );	
80D046 D21A              SETB    ?_DisplayCursorState?BIT
80D048 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80D04B 7401              MOV     A,#01H
80D04D F0                MOVX    @DPTR,A
80D04E D21B              SETB    ?_DisplayCursorState?BIT+01H
80D050 FD                MOV     R5,A
80D051 E4                CLR     A
80D052 FF                MOV     R7,A
  219: 	}
80D053 8038              SJMP    ?C0261?COMMONFUNCTION
80D055         ?C0051?COMMONFUNCTION:
  220: 	else
  221: 	{
  222: 		DisplayStr( 0, y, 1, strTip, len );
80D055 901772            MOV     DPTR,#y
80D058 E0                MOVX    A,@DPTR
80D059 FD                MOV     R5,A
80D05A D21A              SETB    ?_DisplayStr?BIT
80D05C 90176E            MOV     DPTR,#strTip
80D05F A5128007AC        ECALL   ?C?PLDXDATA
80D064 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D067 A5128007B6        ECALL   ?C?PSTXDATA
80D06C 901771            MOV     DPTR,#len
80D06F E0                MOVX    A,@DPTR
80D070 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D073 F0                MOVX    @DPTR,A
80D074 E4                CLR     A
80D075 FF                MOV     R7,A
80D076 A51280885F        ECALL   _DisplayStr
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 510


  223: 		DisplayCursorState( len, y, 1, 1, 1 );		
80D07B 901771            MOV     DPTR,#len
80D07E E0                MOVX    A,@DPTR
80D07F FF                MOV     R7,A
80D080 A3                INC     DPTR
80D081 E0                MOVX    A,@DPTR
80D082 FD                MOV     R5,A
80D083 D21A              SETB    ?_DisplayCursorState?BIT
80D085 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80D088 7401              MOV     A,#01H
80D08A F0                MOVX    @DPTR,A
80D08B D21B              SETB    ?_DisplayCursorState?BIT+01H
80D08D         
80D08D A51280897C        ECALL   _DisplayCursorState
  224: 	}
80D092         ?C0052?COMMONFUNCTION:
  225: 	SgwSecTimer= 30;
80D092 02D215            LJMP    ?C0264?COMMONFUNCTION
80D095         ?C0053?COMMONFUNCTION:
  226: 	while( SgwSecTimer )
80D095 E51E              MOV     A,SgwSecTimer
80D097 7003              JNZ     $ + 5H
80D099 02D21B            LJMP    ?C0056?COMMONFUNCTION
  227: 	{
  228: 		WaitForWork( 20, NULL );			
80D09C E4                CLR     A
80D09D 7F14              MOV     R7,#014H
80D09F FE                MOV     R6,A
80D0A0 A512808330        ECALL   ?L?COM000D
  229: 		if(iCounter >= len_loca)	
80D0A5 90177B            MOV     DPTR,#len_loca
80D0A8 E0                MOVX    A,@DPTR
80D0A9 FF                MOV     R7,A
80D0AA 90177A            MOV     DPTR,#iCounter
80D0AD E0                MOVX    A,@DPTR
80D0AE C3                CLR     C
80D0AF 9F                SUBB    A,R7
80D0B0 4010              JC      ?C0055?COMMONFUNCTION
  230: 		{
  231: 			*len1 = len_loca;
80D0B2 901776            MOV     DPTR,#len1
80D0B5 A5128007AC        ECALL   ?C?PLDXDATA
80D0BA EF                MOV     A,R7
80D0BB A558              EMOV    @PR0,A
  232: 		//	WaitForWork( 800, NULL );		
  233: 			memcpy( line, Tempstr, len_loca );
80D0BD 90177B            MOV     DPTR,#len_loca
  234: 			return 1;
80D0C0 8035              SJMP    ?C0263?COMMONFUNCTION
  235: 		}
80D0C2         ?C0055?COMMONFUNCTION:
  236: 		key = GetOneKey();	
80D0C2 A51280D21D        ECALL   GetOneKey
80D0C7 901779            MOV     DPTR,#key
80D0CA EF                MOV     A,R7
80D0CB F0                MOVX    @DPTR,A
  237: 		if ( (key == KEY_UP) || (key == KEY_DOWN) || (key == KEY_DOT) || (key == KEY_NULL) )
80D0CC 6448              XRL     A,#048H
80D0CE 60C5              JZ      ?C0053?COMMONFUNCTION
80D0D0 E0                MOVX    A,@DPTR
80D0D1 FF                MOV     R7,A
80D0D2 6450              XRL     A,#050H
80D0D4 60BF              JZ      ?C0053?COMMONFUNCTION
80D0D6 EF                MOV     A,R7
80D0D7 642E              XRL     A,#02EH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 511


80D0D9 60BA              JZ      ?C0053?COMMONFUNCTION
80D0DB EF                MOV     A,R7
80D0DC F4                CPL     A
80D0DD 60B6              JZ      ?C0053?COMMONFUNCTION
  238: 		    continue;
80D0DF         ?C0057?COMMONFUNCTION:
  239: 		else if( key == KEY_SUBMIT) 
80D0DF EF                MOV     A,R7
80D0E0 640D              XRL     A,#0DH
80D0E2 7035              JNZ     ?C0060?COMMONFUNCTION
  240: 		{				
  241: 			*len1 = iCounter;			
80D0E4 90177A            MOV     DPTR,#iCounter
80D0E7 E0                MOVX    A,@DPTR
80D0E8 FF                MOV     R7,A
80D0E9 901776            MOV     DPTR,#len1
80D0EC A5128007AC        ECALL   ?C?PLDXDATA
80D0F1 EF                MOV     A,R7
80D0F2 A558              EMOV    @PR0,A
  242: 			memcpy( line, Tempstr, iCounter );
80D0F4 90177A            MOV     DPTR,#iCounter
80D0F7         
80D0F7 E0                MOVX    A,@DPTR
80D0F8 FF                MOV     R7,A
80D0F9 7E00              MOV     R6,#00H
80D0FB 901773            MOV     DPTR,#line
80D0FE A5128007AC        ECALL   ?C?PLDXDATA
80D103 A801              MOV     R0,AR1
80D105 AC02              MOV     R4,AR2
80D107 AD03              MOV     R5,AR3
80D109 7B00              MOV     R3,#?C?XDATASEG
80D10B 7A17              MOV     R2,#HIGH Tempstr
80D10D 797D              MOV     R1,#LOW Tempstr
80D10F A51280052D        ECALL   ?C?COPY
  243: 			return 1;
80D114 7F01              MOV     R7,#01H
80D116 02D21B            LJMP    ?C0056?COMMONFUNCTION
  244: 		}			
80D119         ?C0060?COMMONFUNCTION:
  245: 		else if(key == KEY_CANCEL)
80D119 901779            MOV     DPTR,#key
80D11C E0                MOVX    A,@DPTR
80D11D FE                MOV     R6,A
80D11E B41B05            CJNE    A,#01BH,?C0062?COMMONFUNCTION
  246: 			return 0;
80D121 7F00              MOV     R7,#00H
80D123 02D21B            LJMP    ?C0056?COMMONFUNCTION
80D126         ?C0062?COMMONFUNCTION:
  247: 		else if( key == KEY_BACK)//clear键,光标后退一格
80D126 EE                MOV     A,R6
80D127 6418              XRL     A,#018H
80D129 6003              JZ      $ + 5H
80D12B 02D1FD            LJMP    ?C0064?COMMONFUNCTION
  248: 		{		
  249: 			if( iCounter >= 1 )
80D12E 90177A            MOV     DPTR,#iCounter
80D131 E0                MOVX    A,@DPTR
80D132 FF                MOV     R7,A
80D133 C3                CLR     C
80D134 9401              SUBB    A,#01H
80D136 5003              JNC     $ + 5H
80D138 02D095            LJMP    ?C0053?COMMONFUNCTION
  250: 			{
  251: 				if( len + len_loca >= 20 )
80D13B A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 512


80D13C E0                MOVX    A,@DPTR
80D13D FD                MOV     R5,A
80D13E 901771            MOV     DPTR,#len
80D141 E0                MOVX    A,@DPTR
80D142 2D                ADD     A,R5
80D143 FD                MOV     R5,A
80D144 E4                CLR     A
80D145 33                RLC     A
80D146 FC                MOV     R4,A
80D147 C3                CLR     C
80D148 ED                MOV     A,R5
80D149 9414              SUBB    A,#014H
80D14B EC                MOV     A,R4
80D14C 6480              XRL     A,#080H
80D14E 9480              SUBB    A,#080H
80D150 402E              JC      ?C0066?COMMONFUNCTION
  252: 				{										
  253: 					DisplayPosString( iCounter - 1, 1, &space_char, 1); /* 屏幕清掉一个数字字符 */	
80D152 EF                MOV     A,R7
80D153 14                DEC     A
80D154 FF                MOV     R7,A
80D155 7B00              MOV     R3,#?C?XDATASEG
80D157 7A17              MOV     R2,#HIGH space_char
80D159 797C              MOV     R1,#LOW space_char
80D15B A51280CBDE        ECALL   ?L?COM002B
  254: 					WaitForWork( 300, &Lcd );
80D160 E4                CLR     A
80D161 7F2C              MOV     R7,#02CH
80D163 7E01              MOV     R6,#01H
80D165 FD                MOV     R5,A
80D166 FC                MOV     R4,A
80D167 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80D16A 7423              MOV     A,#HIGH Lcd
80D16C F0                MOVX    @DPTR,A
80D16D A3                INC     DPTR
80D16E 7469              MOV     A,#LOW Lcd
80D170 F0                MOVX    @DPTR,A
80D171 A512808338        ECALL   _WaitForWork
  255: 					DisplaySetCursorPos( iCounter - 1 , 1 );//设置光标位置				
80D176 90177A            MOV     DPTR,#iCounter
80D179 E0                MOVX    A,@DPTR
80D17A 14                DEC     A
80D17B FF                MOV     R7,A
80D17C 7D01              MOV     R5,#01H
  256: 					WaitForWork( 300, &Lcd );
  257: 				}
80D17E 8049              SJMP    ?C0260?COMMONFUNCTION
80D180         ?C0066?COMMONFUNCTION:
  258: 				else
  259: 				{										
  260: 					DisplayPosString( iCounter + len - 1, y, &space_char, 1); /* 屏幕清掉一个数字字符 */	
80D180 901771            MOV     DPTR,#len
80D183 E0                MOVX    A,@DPTR
80D184 FF                MOV     R7,A
80D185 90177A            MOV     DPTR,#iCounter
80D188 E0                MOVX    A,@DPTR
80D189 2F                ADD     A,R7
80D18A 14                DEC     A
80D18B FF                MOV     R7,A
80D18C 901772            MOV     DPTR,#y
80D18F E0                MOVX    A,@DPTR
80D190 FD                MOV     R5,A
80D191 7B00              MOV     R3,#?C?XDATASEG
80D193 7A17              MOV     R2,#HIGH space_char
80D195 797C              MOV     R1,#LOW space_char
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 513


80D197 90184B            MOV     DPTR,#?_DisplayPosString?BYTE+05H
80D19A 7401              MOV     A,#01H
80D19C F0                MOVX    @DPTR,A
80D19D A51280CBE5        ECALL   _DisplayPosString
  261: 					WaitForWork( 300, &Lcd );
80D1A2 E4                CLR     A
80D1A3 7F2C              MOV     R7,#02CH
80D1A5 7E01              MOV     R6,#01H
80D1A7 FD                MOV     R5,A
80D1A8 FC                MOV     R4,A
80D1A9 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80D1AC 7423              MOV     A,#HIGH Lcd
80D1AE F0                MOVX    @DPTR,A
80D1AF A3                INC     DPTR
80D1B0 7469              MOV     A,#LOW Lcd
80D1B2 F0                MOVX    @DPTR,A
80D1B3 A512808338        ECALL   _WaitForWork
  262: 					DisplaySetCursorPos( iCounter + len - 1 , y );//设置光标位置				
80D1B8 901771            MOV     DPTR,#len
80D1BB E0                MOVX    A,@DPTR
80D1BC FF                MOV     R7,A
80D1BD 90177A            MOV     DPTR,#iCounter
80D1C0 E0                MOVX    A,@DPTR
80D1C1 2F                ADD     A,R7
80D1C2 14                DEC     A
80D1C3 FF                MOV     R7,A
80D1C4 901772            MOV     DPTR,#y
80D1C7 E0                MOVX    A,@DPTR
80D1C8 FD                MOV     R5,A
80D1C9         
80D1C9 A51280CEC1        ECALL   _DisplaySetCursorPos
  263: 					WaitForWork( 300, &Lcd );
80D1CE E4                CLR     A
80D1CF 7F2C              MOV     R7,#02CH
80D1D1 7E01              MOV     R6,#01H
80D1D3 FD                MOV     R5,A
80D1D4 FC                MOV     R4,A
80D1D5 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80D1D8 7423              MOV     A,#HIGH Lcd
80D1DA F0                MOVX    @DPTR,A
80D1DB A3                INC     DPTR
80D1DC 7469              MOV     A,#LOW Lcd
80D1DE F0                MOVX    @DPTR,A
80D1DF A512808338        ECALL   _WaitForWork
  264: 				}						
80D1E4         ?C0067?COMMONFUNCTION:
  265: 				*(line + iCounter) = 0;
80D1E4 901773            MOV     DPTR,#line
80D1E7 A5128007AC        ECALL   ?C?PLDXDATA
80D1EC 90177A            MOV     DPTR,#iCounter
80D1EF E0                MOVX    A,@DPTR
80D1F0 29                ADD     A,R1
80D1F1 F9                MOV     R1,A
80D1F2 E4                CLR     A
80D1F3 3A                ADDC    A,R2
80D1F4 FA                MOV     R2,A
80D1F5 E4                CLR     A
80D1F6 A558              EMOV    @PR0,A
  266: 				iCounter--;		
80D1F8 E0                MOVX    A,@DPTR
80D1F9 14                DEC     A
80D1FA F0                MOVX    @DPTR,A
  267: 				SgwSecTimer = 30;
80D1FB         
  268: 			}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 514


  269: 			
  270: 		}
80D1FB 8018              SJMP    ?C0264?COMMONFUNCTION
80D1FD         ?C0064?COMMONFUNCTION:
  271: 		else
  272: 		{						
  273: 			Tempstr[ iCounter ] = key;			
80D1FD 901779            MOV     DPTR,#key
80D200 E0                MOVX    A,@DPTR
80D201 FF                MOV     R7,A
80D202 A3                INC     DPTR
80D203 E0                MOVX    A,@DPTR
80D204 247D              ADD     A,#LOW Tempstr
80D206 F582              MOV     DPL,A
80D208 E4                CLR     A
80D209 3417              ADDC    A,#HIGH Tempstr
80D20B F583              MOV     DPH,A
80D20D EF                MOV     A,R7
80D20E F0                MOVX    @DPTR,A
  274: 			iCounter++;
80D20F 90177A            MOV     DPTR,#iCounter
80D212 E0                MOVX    A,@DPTR
80D213 04                INC     A
80D214 F0                MOVX    @DPTR,A
  275: 			SgwSecTimer = 30;			
80D215         
80D215 751E1E            MOV     SgwSecTimer,#01EH
  276: 		}			
  277: 	}
80D218 02D095            LJMP    ?C0053?COMMONFUNCTION
  278: }
80D21B         ?C0056?COMMONFUNCTION:
80D21B A522              ERET    
----- FUNCTION _GetLine (END) -------


----- FUNCTION GetOneKey (BEGIN) -----
 FILE: 'CommonFunction.c'
  514: u_char GetOneKey()
  515: {
  516: 	u_char xdata k = KEY_NULL ;
  517: 	u_char xdata m_str[2];
80D21D 901791            MOV     DPTR,#k
80D220 74FF              MOV     A,#0FFH
80D222 F0                MOVX    @DPTR,A
  518: //	u_char xdata line[2];	
  519: 	unsigned int xdata interval = 500;   //超时时间5秒
80D223 901794            MOV     DPTR,#interval
80D226 7401              MOV     A,#01H
80D228 F0                MOVX    @DPTR,A
80D229 A3                INC     DPTR
80D22A 74F4              MOV     A,#0F4H
80D22C F0                MOVX    @DPTR,A
  520: 	
  521: 	memset( m_str, 0 , sizeof (m_str ) );
80D22D 7E00              MOV     R6,#00H
80D22F 7F02              MOV     R7,#02H
80D231 7D00              MOV     R5,#00H
80D233 7B00              MOV     R3,#?C?XDATASEG
80D235 7A17              MOV     R2,#HIGH m_str
80D237 7992              MOV     R1,#LOW m_str
80D239 A5128008A6        ECALL   ?C?MEMSET
80D23E         ?C0130?COMMONFUNCTION:
  522: 	while( ( k == KEY_NULL ) && ( interval != 0 ) )
80D23E 901791            MOV     DPTR,#k
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 515


80D241 E0                MOVX    A,@DPTR
80D242 B4FF30            CJNE    A,#0FFH,?C0131?COMMONFUNCTION
80D245 901794            MOV     DPTR,#interval
80D248 E0                MOVX    A,@DPTR
80D249 7002              JNZ     ?C0256?COMMONFUNCTION
80D24B A3                INC     DPTR
80D24C E0                MOVX    A,@DPTR
80D24D         ?C0256?COMMONFUNCTION:
80D24D 6026              JZ      ?C0131?COMMONFUNCTION
  523: 	{
  524: 		CoreProcessCycle();
80D24F A5128082D7        ECALL   CoreProcessCycle
  525: 		WaitForWork( 50, NULL );
80D254 E4                CLR     A
80D255 7F32              MOV     R7,#032H
80D257 FE                MOV     R6,A
80D258 A512808330        ECALL   ?L?COM000D
  526: 		k = GetKey();			
80D25D A5128096D1        ECALL   GetKey
80D262 901791            MOV     DPTR,#k
80D265 EF                MOV     A,R7
80D266 F0                MOVX    @DPTR,A
  527: 		interval --;
80D267 901794            MOV     DPTR,#interval
80D26A 74FF              MOV     A,#0FFH
80D26C F5F0              MOV     B,A
80D26E A512800600        ECALL   ?C?IILDX
  528: 	}
80D273 80C9              SJMP    ?C0130?COMMONFUNCTION
80D275         ?C0131?COMMONFUNCTION:
  529: 	switch( k )
80D275 901791            MOV     DPTR,#k
80D278 E0                MOVX    A,@DPTR
80D279 FF                MOV     R7,A
80D27A 24F6              ADD     A,#0F6H
80D27C 5002              JNC     ?C0142?COMMONFUNCTION
80D27E 8029              SJMP    ?C0132?COMMONFUNCTION
  530: 	{
  531: 		case KEY_0:
  532: 		case KEY_1:
  533: 		case KEY_2:
  534: 		case KEY_3:
  535: 		case KEY_4:
  536: 		case KEY_5:
  537: 		case KEY_6:
  538: 		case KEY_7:
  539: 		case KEY_8:
  540: 		case KEY_9:			
80D280         ?C0142?COMMONFUNCTION:
  541: 			NumberToString( k ,  m_str , 1  );				
80D280 E4                CLR     A
80D281 FC                MOV     R4,A
80D282 FD                MOV     R5,A
80D283 FE                MOV     R6,A
80D284 7B00              MOV     R3,#?C?XDATASEG
80D286 7A17              MOV     R2,#HIGH m_str
80D288 7992              MOV     R1,#LOW m_str
80D28A A51280D2BE        ECALL   ?L?COM003B
  542: 		//	sprintf( m_str,"%bu", k );
  543: 			DisplayStr( 0, 0, 0, m_str, 1 );
80D28F C21A              CLR     ?_DisplayStr?BIT
80D291 7B00              MOV     R3,#?C?XDATASEG
80D293 7A17              MOV     R2,#HIGH m_str
80D295 7992              MOV     R1,#LOW m_str
80D297 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 516


80D29A A5128007B6        ECALL   ?C?PSTXDATA
80D29F 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D2A2 7401              MOV     A,#01H
80D2A4 A51280885B        ECALL   ?L?COM0007
  544: 		    break;
  545: 	//	case KEY_DOT:		
  546: 	//		m_str[0] = 0x2e;
  547:     //      DisplayStr( 0, 0, 0, m_str, 1 );  
  548: 	//		break;
  549: 	}	
80D2A9         ?C0132?COMMONFUNCTION:
  550: 	if(interval == 0)
80D2A9 901794            MOV     DPTR,#interval
80D2AC E0                MOVX    A,@DPTR
80D2AD 7002              JNZ     ?C0257?COMMONFUNCTION
80D2AF A3                INC     DPTR
80D2B0 E0                MOVX    A,@DPTR
80D2B1         ?C0257?COMMONFUNCTION:
80D2B1 7004              JNZ     ?C0143?COMMONFUNCTION
  551: 		return KEY_NULL;	
80D2B3 7FFF              MOV     R7,#0FFH
80D2B5 8005              SJMP    ?C0144?COMMONFUNCTION
80D2B7         ?C0143?COMMONFUNCTION:
  552: 	return k;	
80D2B7 901791            MOV     DPTR,#k
80D2BA E0                MOVX    A,@DPTR
80D2BB FF                MOV     R7,A
  553: }
80D2BC         ?C0144?COMMONFUNCTION:
80D2BC A522              ERET    
----- FUNCTION GetOneKey (END) -------


----- FUNCTION ?L?COM003B (BEGIN) -----
80D2BE 90179D            MOV     DPTR,#?_NumberToString?BYTE+07H
80D2C1 04                INC     A
80D2C2 F0                MOVX    @DPTR,A
----- FUNCTION _NumberToString (BEGIN) -----
 FILE: 'common.c'
   30: void NumberToString( unsigned long dat , uchar * str , uchar len  )
   31: {
80D2C3 901796            MOV     DPTR,#dat
80D2C6 A512800792        ECALL   ?C?LSTXDATA
80D2CB 90179A            MOV     DPTR,#str
80D2CE A5128007B6        ECALL   ?C?PSTXDATA
   32: 	unsigned long code divisor[]=
   33: 	{
   34: 		1,
   35: 		10,
   36: 		100,
   37: 		1000,
   38: 		10000,
   39: 		100000,
   40: 		1000000,
   41: 		10000000,
   42: 		100000000
   43: 	};
   44: 	uchar data i,ch;
   45: 	unsigned long data temp1;
   46: 	unsigned  int data temp2;
   47: 	uchar data temp3;
   48: 	unsigned long data divisor1;
   49: 	unsigned  int data divisor2;
   50: 	
   51: 	if ( len > 8 ) len = 8;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 517


80D2D3 90179D            MOV     DPTR,#len
80D2D6 E0                MOVX    A,@DPTR
80D2D7 D3                SETB    C
80D2D8 9408              SUBB    A,#08H
80D2DA 4003              JC      ?C0011?COMMON
80D2DC 7408              MOV     A,#08H
80D2DE F0                MOVX    @DPTR,A
80D2DF         ?C0011?COMMON:
   52: 	temp1    = dat;
80D2DF 901796            MOV     DPTR,#dat
80D2E2 A512800720        ECALL   ?C?LLDXDATA
80D2E7 8F2D              MOV     temp1+03H,R7
80D2E9 8E2C              MOV     temp1+02H,R6
80D2EB 8D2B              MOV     temp1+01H,R5
80D2ED 8C2A              MOV     temp1,R4
   53: 	temp1   %= divisor[ len ];
80D2EF 90179D            MOV     DPTR,#len
80D2F2 E0                MOVX    A,@DPTR
80D2F3 25E0              ADD     A,ACC
80D2F5 25E0              ADD     A,ACC
80D2F7 24B4              ADD     A,#LOW divisor
80D2F9 F582              MOV     DPL,A
80D2FB E4                CLR     A
80D2FC 3418              ADDC    A,#HIGH divisor
80D2FE F583              MOV     DPH,A
80D300 A51280074B        ECALL   ?C?LLDCODE0
80D305 A512800679        ECALL   ?C?ULDIV
80D30A AC00              MOV     R4,AR0
80D30C AD01              MOV     R5,AR1
80D30E AE02              MOV     R6,AR2
80D310 AF03              MOV     R7,AR3
80D312 8F2D              MOV     temp1+03H,R7
80D314 8E2C              MOV     temp1+02H,R6
80D316 8D2B              MOV     temp1+01H,R5
80D318 8C2A              MOV     temp1,R4
   54: 	for( i = 8 ; i > 4 ; i -- )
80D31A 752808            MOV     i,#08H
80D31D         ?C0012?COMMON:
   55: 	{
   56: 		divisor1 = divisor[ i - 1 ];
80D31D E528              MOV     A,i
80D31F 25E0              ADD     A,ACC
80D321 25E0              ADD     A,ACC
80D323 24B0              ADD     A,#LOW divisor-04H
80D325 F582              MOV     DPL,A
80D327 E4                CLR     A
80D328 3418              ADDC    A,#HIGH divisor-04H
80D32A F583              MOV     DPH,A
80D32C A51280072D        ECALL   ?C?LLDCODE
80D331 8F34              MOV     divisor1+03H,R7
80D333 8E33              MOV     divisor1+02H,R6
80D335 8D32              MOV     divisor1+01H,R5
80D337 8C31              MOV     divisor1,R4
   57: 		for( ch = 0 ; ch < 9 ; ch ++ )
80D339 E4                CLR     A
80D33A F529              MOV     ch,A
80D33C         ?C0015?COMMON:
   58: 		{
   59: 			if ( temp1 < divisor1 ) break;
80D33C AF34              MOV     R7,divisor1+03H
80D33E AE33              MOV     R6,divisor1+02H
80D340 AD32              MOV     R5,divisor1+01H
80D342 AC31              MOV     R4,divisor1
80D344 AB2D              MOV     R3,temp1+03H
80D346 AA2C              MOV     R2,temp1+02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 518


80D348 A92B              MOV     R1,temp1+01H
80D34A A82A              MOV     R0,temp1
80D34C C3                CLR     C
80D34D A51280070E        ECALL   ?C?ULCMP
80D352 4023              JC      ?C0016?COMMON
80D354         ?C0018?COMMON:
   60: 			temp1 -= divisor1;
80D354 C3                CLR     C
80D355 E52D              MOV     A,temp1+03H
80D357 9534              SUBB    A,divisor1+03H
80D359 FF                MOV     R7,A
80D35A E52C              MOV     A,temp1+02H
80D35C 9533              SUBB    A,divisor1+02H
80D35E FE                MOV     R6,A
80D35F E52B              MOV     A,temp1+01H
80D361 9532              SUBB    A,divisor1+01H
80D363 FD                MOV     R5,A
80D364 E52A              MOV     A,temp1
80D366 9531              SUBB    A,divisor1
80D368 8F2D              MOV     temp1+03H,R7
80D36A 8E2C              MOV     temp1+02H,R6
80D36C 8D2B              MOV     temp1+01H,R5
80D36E F52A              MOV     temp1,A
   61: 		}
80D370 0529              INC     ch
80D372 E529              MOV     A,ch
80D374 B409C5            CJNE    A,#09H,?C0015?COMMON
80D377         ?C0016?COMMON:
   62: 		if ( i <= len )
80D377 90179D            MOV     DPTR,#len
80D37A E0                MOVX    A,@DPTR
80D37B FF                MOV     R7,A
80D37C E528              MOV     A,i
80D37E D3                SETB    C
80D37F 9F                SUBB    A,R7
80D380 501D              JNC     ?C0014?COMMON
   63: 			str[ len - i ] = ch;
80D382 E528              MOV     A,i
80D384 FD                MOV     R5,A
80D385 C3                CLR     C
80D386 EF                MOV     A,R7
80D387 9D                SUBB    A,R5
80D388 FF                MOV     R7,A
80D389 E4                CLR     A
80D38A 9400              SUBB    A,#00H
80D38C FE                MOV     R6,A
80D38D 90179A            MOV     DPTR,#str
80D390 A5128007AC        ECALL   ?C?PLDXDATA
80D395 E9                MOV     A,R1
80D396 2F                ADD     A,R7
80D397 F9                MOV     R1,A
80D398 EA                MOV     A,R2
80D399 3E                ADDC    A,R6
80D39A FA                MOV     R2,A
80D39B E529              MOV     A,ch
80D39D A558              EMOV    @PR0,A
   64: 	}
80D39F         ?C0014?COMMON:
80D39F 1528              DEC     i
80D3A1 E528              MOV     A,i
80D3A3 6404              XRL     A,#04H
80D3A5 6003              JZ      $ + 5H
80D3A7 02D31D            LJMP    ?C0012?COMMON
80D3AA         ?C0013?COMMON:
   65: 	temp2    = temp1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 519


80D3AA 852C2E            MOV     temp2,temp1+02H
80D3AD 852D2F            MOV     temp2+01H,temp1+03H
   66: 	for( i = 4 ; i > 2 ; i -- )
80D3B0 752804            MOV     i,#04H
80D3B3         ?C0020?COMMON:
   67: 	{
   68: 		divisor2 = divisor[ i - 1 ];
80D3B3 E528              MOV     A,i
80D3B5 25E0              ADD     A,ACC
80D3B7 25E0              ADD     A,ACC
80D3B9 24B0              ADD     A,#LOW divisor-04H
80D3BB F582              MOV     DPL,A
80D3BD E4                CLR     A
80D3BE 3418              ADDC    A,#HIGH divisor-04H
80D3C0 F583              MOV     DPH,A
80D3C2 A51280072D        ECALL   ?C?LLDCODE
80D3C7 8E35              MOV     divisor2,R6
80D3C9 8F36              MOV     divisor2+01H,R7
   69: 		for( ch = 0 ; ch < 9 ; ch ++ )
80D3CB E4                CLR     A
80D3CC F529              MOV     ch,A
80D3CE         ?C0023?COMMON:
   70: 		{
   71: 			if ( temp2 < divisor2 ) break;
80D3CE C3                CLR     C
80D3CF E52F              MOV     A,temp2+01H
80D3D1 9536              SUBB    A,divisor2+01H
80D3D3 E52E              MOV     A,temp2
80D3D5 9535              SUBB    A,divisor2
80D3D7 4014              JC      ?C0024?COMMON
80D3D9         ?C0026?COMMON:
   72: 			temp2 -= divisor2;
80D3D9 C3                CLR     C
80D3DA E52F              MOV     A,temp2+01H
80D3DC 9536              SUBB    A,divisor2+01H
80D3DE F52F              MOV     temp2+01H,A
80D3E0 E52E              MOV     A,temp2
80D3E2 9535              SUBB    A,divisor2
80D3E4 F52E              MOV     temp2,A
   73: 		}
80D3E6 0529              INC     ch
80D3E8 E529              MOV     A,ch
80D3EA B409E1            CJNE    A,#09H,?C0023?COMMON
80D3ED         ?C0024?COMMON:
   74: 		if ( i <= len )
80D3ED 90179D            MOV     DPTR,#len
80D3F0 E0                MOVX    A,@DPTR
80D3F1 FF                MOV     R7,A
80D3F2 E528              MOV     A,i
80D3F4 D3                SETB    C
80D3F5 9F                SUBB    A,R7
80D3F6 501D              JNC     ?C0022?COMMON
   75: 			str[ len - i ] = ch;
80D3F8 E528              MOV     A,i
80D3FA FD                MOV     R5,A
80D3FB C3                CLR     C
80D3FC EF                MOV     A,R7
80D3FD 9D                SUBB    A,R5
80D3FE FF                MOV     R7,A
80D3FF E4                CLR     A
80D400 9400              SUBB    A,#00H
80D402 FE                MOV     R6,A
80D403 90179A            MOV     DPTR,#str
80D406 A5128007AC        ECALL   ?C?PLDXDATA
80D40B E9                MOV     A,R1
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 520


80D40C 2F                ADD     A,R7
80D40D F9                MOV     R1,A
80D40E EA                MOV     A,R2
80D40F 3E                ADDC    A,R6
80D410 FA                MOV     R2,A
80D411 E529              MOV     A,ch
80D413 A558              EMOV    @PR0,A
   76: 	}
80D415         ?C0022?COMMON:
80D415 1528              DEC     i
80D417 E528              MOV     A,i
80D419 B40297            CJNE    A,#02H,?C0020?COMMON
80D41C         ?C0021?COMMON:
   77: 	temp3 = temp2;
80D41C 852F30            MOV     temp3,temp2+01H
   78: 	ch    = temp3 / 10;
80D41F E530              MOV     A,temp3
80D421 75F00A            MOV     B,#0AH
80D424 84                DIV     AB
80D425 F529              MOV     ch,A
   79: 	if ( 2 <= len )
80D427 90179D            MOV     DPTR,#len
80D42A E0                MOVX    A,@DPTR
80D42B FF                MOV     R7,A
80D42C 7402              MOV     A,#02H
80D42E D3                SETB    C
80D42F 9F                SUBB    A,R7
80D430 501A              JNC     ?C0028?COMMON
   80: 		str[ len - 2 ] = ch;
80D432 EF                MOV     A,R7
80D433 24FE              ADD     A,#0FEH
80D435 FF                MOV     R7,A
80D436 E4                CLR     A
80D437 34FF              ADDC    A,#0FFH
80D439 FE                MOV     R6,A
80D43A 90179A            MOV     DPTR,#str
80D43D A5128007AC        ECALL   ?C?PLDXDATA
80D442 E9                MOV     A,R1
80D443 2F                ADD     A,R7
80D444 F9                MOV     R1,A
80D445 EA                MOV     A,R2
80D446 3E                ADDC    A,R6
80D447 FA                MOV     R2,A
80D448 E529              MOV     A,ch
80D44A A558              EMOV    @PR0,A
80D44C         ?C0028?COMMON:
   81: 	ch    = temp3 % 10;
80D44C E530              MOV     A,temp3
80D44E 75F00A            MOV     B,#0AH
80D451 84                DIV     AB
80D452 85F029            MOV     ch,B
   82: 	if ( 1 <= len )
80D455 90179D            MOV     DPTR,#len
80D458 E0                MOVX    A,@DPTR
80D459 FF                MOV     R7,A
80D45A 7401              MOV     A,#01H
80D45C D3                SETB    C
80D45D 9F                SUBB    A,R7
80D45E 501A              JNC     ?C0029?COMMON
   83: 		str[ len - 1 ] = ch;
80D460 EF                MOV     A,R7
80D461 24FF              ADD     A,#0FFH
80D463 FF                MOV     R7,A
80D464 E4                CLR     A
80D465 34FF              ADDC    A,#0FFH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 521


80D467 FE                MOV     R6,A
80D468 90179A            MOV     DPTR,#str
80D46B A5128007AC        ECALL   ?C?PLDXDATA
80D470 E9                MOV     A,R1
80D471 2F                ADD     A,R7
80D472 F9                MOV     R1,A
80D473 EA                MOV     A,R2
80D474 3E                ADDC    A,R6
80D475 FA                MOV     R2,A
80D476 E529              MOV     A,ch
80D478 A558              EMOV    @PR0,A
80D47A         ?C0029?COMMON:
   84: 	for( i = 0 ; i < len - 1 ; i ++ )
80D47A E4                CLR     A
80D47B F528              MOV     i,A
80D47D         ?C0030?COMMON:
80D47D 90179D            MOV     DPTR,#len
80D480 E0                MOVX    A,@DPTR
80D481 14                DEC     A
80D482 FF                MOV     R7,A
80D483 E528              MOV     A,i
80D485 C3                CLR     C
80D486 9F                SUBB    A,R7
80D487 501B              JNC     ?C0034?COMMON
   85: 	{
   86: 		if ( str[ i ] != 0 ) break;
80D489 90179A            MOV     DPTR,#str
80D48C A5128007AC        ECALL   ?C?PLDXDATA
80D491 E9                MOV     A,R1
80D492 2528              ADD     A,i
80D494 F9                MOV     R1,A
80D495 E4                CLR     A
80D496 3A                ADDC    A,R2
80D497 FA                MOV     R2,A
80D498 A548              EMOV    A,@PR0
80D49A 7008              JNZ     ?C0034?COMMON
80D49C         ?C0033?COMMON:
   87: 		str[ i ] = 0x20;
80D49C 7420              MOV     A,#020H
80D49E A558              EMOV    @PR0,A
   88: 	}
80D4A0 0528              INC     i
80D4A2 80D9              SJMP    ?C0030?COMMON
   89: 	for( ; i < len ; i ++ )
80D4A4         ?C0034?COMMON:
80D4A4 90179D            MOV     DPTR,#len
80D4A7 E0                MOVX    A,@DPTR
80D4A8 FF                MOV     R7,A
80D4A9 E528              MOV     A,i
80D4AB C3                CLR     C
80D4AC 9F                SUBB    A,R7
80D4AD 5019              JNC     ?C0037?COMMON
   90: 	{
   91: 		str[ i ] += '0';
80D4AF 90179A            MOV     DPTR,#str
80D4B2 A5128007AC        ECALL   ?C?PLDXDATA
80D4B7 E9                MOV     A,R1
80D4B8 2528              ADD     A,i
80D4BA F9                MOV     R1,A
80D4BB E4                CLR     A
80D4BC 3A                ADDC    A,R2
80D4BD FA                MOV     R2,A
80D4BE A548              EMOV    A,@PR0
80D4C0 2430              ADD     A,#030H
80D4C2 A558              EMOV    @PR0,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 522


   92: 	}
80D4C4 0528              INC     i
80D4C6 80DC              SJMP    ?C0034?COMMON
   92: }
80D4C8         ?C0037?COMMON:
80D4C8 A522              ERET    
----- FUNCTION _NumberToString (END) -------


----- FUNCTION _LenOfNum (BEGIN) -----
 FILE: 'CommonFunction.c'
  557: u_char LenOfNum( unsigned long num )
  558: {
80D4CA 901755            MOV     DPTR,#num
80D4CD A512800792        ECALL   ?C?LSTXDATA
  559: 	if(num >= 1000000000 )
  560: 		return 10;
80D4D2 7F00              MOV     R7,#00H
80D4D4 7ECA              MOV     R6,#0CAH
80D4D6 7D9A              MOV     R5,#09AH
80D4D8 7C3B              MOV     R4,#03BH
80D4DA 901755            MOV     DPTR,#num
80D4DD A51280073E        ECALL   ?C?LLDXDATA0
80D4E2 C3                CLR     C
80D4E3 A51280070E        ECALL   ?C?ULCMP
80D4E8 4005              JC      ?C0145?COMMONFUNCTION
  561: 	if(num >= 100000000 )
80D4EA 7F0A              MOV     R7,#0AH
80D4EC 02D5CC            LJMP    ?C0146?COMMONFUNCTION
80D4EF         ?C0145?COMMONFUNCTION:
  562: 		return 9;
80D4EF 7F00              MOV     R7,#00H
80D4F1 7EE1              MOV     R6,#0E1H
80D4F3 7DF5              MOV     R5,#0F5H
80D4F5 7C05              MOV     R4,#05H
80D4F7 901755            MOV     DPTR,#num
80D4FA A51280073E        ECALL   ?C?LLDXDATA0
80D4FF C3                CLR     C
80D500 A51280070E        ECALL   ?C?ULCMP
80D505 4005              JC      ?C0147?COMMONFUNCTION
  563: 	if(num >= 10000000 )
80D507 7F09              MOV     R7,#09H
80D509 02D5CC            LJMP    ?C0146?COMMONFUNCTION
80D50C         ?C0147?COMMONFUNCTION:
  564: 		return 8;
80D50C 7F80              MOV     R7,#080H
80D50E 7E96              MOV     R6,#096H
80D510 7D98              MOV     R5,#098H
80D512 7C00              MOV     R4,#00H
80D514 901755            MOV     DPTR,#num
80D517 A51280073E        ECALL   ?C?LLDXDATA0
80D51C C3                CLR     C
80D51D A51280070E        ECALL   ?C?ULCMP
80D522 4005              JC      ?C0148?COMMONFUNCTION
  565: 	if(num >= 1000000 )
80D524 7F08              MOV     R7,#08H
80D526 02D5CC            LJMP    ?C0146?COMMONFUNCTION
80D529         ?C0148?COMMONFUNCTION:
  566: 		return 7;
80D529 7F40              MOV     R7,#040H
80D52B 7E42              MOV     R6,#042H
80D52D 7D0F              MOV     R5,#0FH
80D52F 7C00              MOV     R4,#00H
80D531 901755            MOV     DPTR,#num
80D534 A51280073E        ECALL   ?C?LLDXDATA0
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 523


80D539 C3                CLR     C
80D53A A51280070E        ECALL   ?C?ULCMP
80D53F 4005              JC      ?C0149?COMMONFUNCTION
  567: 	if(num >= 100000 )
80D541 7F07              MOV     R7,#07H
80D543 02D5CC            LJMP    ?C0146?COMMONFUNCTION
80D546         ?C0149?COMMONFUNCTION:
  568: 		return 6;
80D546 7FA0              MOV     R7,#0A0H
80D548 7E86              MOV     R6,#086H
80D54A 7D01              MOV     R5,#01H
80D54C 7C00              MOV     R4,#00H
80D54E 901755            MOV     DPTR,#num
80D551 A51280073E        ECALL   ?C?LLDXDATA0
80D556 C3                CLR     C
80D557 A51280070E        ECALL   ?C?ULCMP
80D55C 4004              JC      ?C0150?COMMONFUNCTION
  569: 	if(num >= 10000 )
80D55E 7F06              MOV     R7,#06H
80D560 806A              SJMP    ?C0146?COMMONFUNCTION
80D562         ?C0150?COMMONFUNCTION:
  570: 		return 5;
80D562 E4                CLR     A
80D563 7F10              MOV     R7,#010H
80D565 7E27              MOV     R6,#027H
80D567 FD                MOV     R5,A
80D568 FC                MOV     R4,A
80D569 901755            MOV     DPTR,#num
80D56C A51280073E        ECALL   ?C?LLDXDATA0
80D571 C3                CLR     C
80D572 A51280070E        ECALL   ?C?ULCMP
80D577 4004              JC      ?C0151?COMMONFUNCTION
  571: 	else if(num >= 1000 )
80D579 7F05              MOV     R7,#05H
80D57B 804F              SJMP    ?C0146?COMMONFUNCTION
80D57D         ?C0151?COMMONFUNCTION:
  572: 		return 4;
80D57D E4                CLR     A
80D57E 7FE8              MOV     R7,#0E8H
80D580 7E03              MOV     R6,#03H
80D582 FD                MOV     R5,A
80D583 FC                MOV     R4,A
80D584 901755            MOV     DPTR,#num
80D587 A51280073E        ECALL   ?C?LLDXDATA0
80D58C C3                CLR     C
80D58D A51280070E        ECALL   ?C?ULCMP
80D592 4004              JC      ?C0153?COMMONFUNCTION
  573: 	else if(num >= 100 )
80D594 7F04              MOV     R7,#04H
80D596 8034              SJMP    ?C0146?COMMONFUNCTION
80D598         ?C0153?COMMONFUNCTION:
  574: 		return 3;
80D598 E4                CLR     A
80D599 7F64              MOV     R7,#064H
80D59B FE                MOV     R6,A
80D59C FD                MOV     R5,A
80D59D FC                MOV     R4,A
80D59E 901755            MOV     DPTR,#num
80D5A1 A51280073E        ECALL   ?C?LLDXDATA0
80D5A6 C3                CLR     C
80D5A7 A51280070E        ECALL   ?C?ULCMP
80D5AC 4004              JC      ?C0155?COMMONFUNCTION
  575: 	else if(num >= 10 ) 
80D5AE 7F03              MOV     R7,#03H
80D5B0 801A              SJMP    ?C0146?COMMONFUNCTION
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 524


80D5B2         ?C0155?COMMONFUNCTION:
  576: 		return 2;
80D5B2 E4                CLR     A
80D5B3 7F0A              MOV     R7,#0AH
80D5B5 FE                MOV     R6,A
80D5B6 FD                MOV     R5,A
80D5B7 FC                MOV     R4,A
80D5B8 901755            MOV     DPTR,#num
80D5BB A51280073E        ECALL   ?C?LLDXDATA0
80D5C0 C3                CLR     C
80D5C1 A51280070E        ECALL   ?C?ULCMP
80D5C6 7F01              MOV     R7,#01H
80D5C8 4002              JC      ?C0157?COMMONFUNCTION
  577: 	else
80D5CA 7F02              MOV     R7,#02H
80D5CC         ?C0157?COMMONFUNCTION:
  578: 		return 1;
  579: } 
80D5CC         ?C0146?COMMONFUNCTION:
80D5CC A522              ERET    
----- FUNCTION _LenOfNum (END) -------


----- FUNCTION _InputGoodsWayNo (BEGIN) -----
 FILE: 'CommonFunction.c'
  610: u_char InputGoodsWayNo( u_char x )
  611: {
80D5CE 901760            MOV     DPTR,#x
80D5D1 EF                MOV     A,R7
80D5D2 F0                MOVX    @DPTR,A
  612: 	u_char xdata key = 0;
  613: 	u_char xdata m_InputCode;
80D5D3 E4                CLR     A
80D5D4 A3                INC     DPTR
80D5D5 F0                MOVX    @DPTR,A
  614: 	u_char xdata m_GoodsWayNo;
  615: 	u_char xdata Tempstr[8];
  616: 	u_char xdata len = 0;
80D5D6 90176C            MOV     DPTR,#len
80D5D9 F0                MOVX    @DPTR,A
  617: 	u_char xdata i = 0;
80D5DA A3                INC     DPTR
80D5DB F0                MOVX    @DPTR,A
  618: 	
  619: 	ClearKey();
80D5DC A512808FA5        ECALL   ClearKey
80D5E1         ?C0163?COMMONFUNCTION:
  620: 	while( 1 )
  621: 	{		
  622: 		ClearDisplayLine( 1 );
80D5E1 A512808FAF        ECALL   ?L?COM0014
  623: 		ClearDisplayLine( 2 );		
  624: 		len = 2;
80D5E6 90176C            MOV     DPTR,#len
80D5E9 7402              MOV     A,#02H
80D5EB F0                MOVX    @DPTR,A
  625: 		memset( Tempstr,0, sizeof( Tempstr ) );	
80D5EC 7E00              MOV     R6,#00H
80D5EE 7F08              MOV     R7,#08H
80D5F0 7D00              MOV     R5,#00H
80D5F2 7B00              MOV     R3,#?C?XDATASEG
80D5F4 7A17              MOV     R2,#HIGH Tempstr
80D5F6 7964              MOV     R1,#LOW Tempstr
80D5F8 A5128008A6        ECALL   ?C?MEMSET
  626: 	#ifdef _CHINA_
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 525


  627: 		key = GetLine( "请输入编号: ", 12 , 0, Tempstr, &len );
  628: 	#else	
  629: 		key = GetLine( "Input column code:", 18 , 0, Tempstr, &len );
80D5FD E4                CLR     A
80D5FE 901772            MOV     DPTR,#?_GetLine?BYTE+04H
80D601 F0                MOVX    @DPTR,A
80D602 7B00              MOV     R3,#?C?XDATASEG
80D604 7A17              MOV     R2,#HIGH Tempstr
80D606 7964              MOV     R1,#LOW Tempstr
80D608 A3                INC     DPTR
80D609 A5128007B6        ECALL   ?C?PSTXDATA
80D60E 7A17              MOV     R2,#HIGH len
80D610 796C              MOV     R1,#LOW len
80D612 901776            MOV     DPTR,#?_GetLine?BYTE+08H
80D615 A5128007B6        ECALL   ?C?PSTXDATA
80D61A 7B80              MOV     R3,#BYTE2 08017CAH
80D61C 7A17              MOV     R2,#HIGH 08017CAH
80D61E 79CA              MOV     R1,#LOW 08017CAH
80D620 7D12              MOV     R5,#012H
80D622 A51280CFB7        ECALL   _GetLine
80D627 901761            MOV     DPTR,#key
80D62A EF                MOV     A,R7
80D62B F0                MOVX    @DPTR,A
  630: 	#endif
  631: 		WaitForWork( 500, NULL );	
80D62C E4                CLR     A
80D62D 7FF4              MOV     R7,#0F4H
80D62F 7E01              MOV     R6,#01H
80D631 A512808330        ECALL   ?L?COM000D
  632: 		m_GoodsWayNo = 100;
80D636 901763            MOV     DPTR,#m_GoodsWayNo
80D639 7464              MOV     A,#064H
80D63B F0                MOVX    @DPTR,A
  633: 		m_InputCode = 0;
80D63C E4                CLR     A
80D63D 901762            MOV     DPTR,#m_InputCode
80D640 F0                MOVX    @DPTR,A
  634: 		ClearKey();				
80D641 A512808FA5        ECALL   ClearKey
  635: 		if( key == 1 )//Enter	
80D646 901761            MOV     DPTR,#key
80D649 E0                MOVX    A,@DPTR
80D64A 6401              XRL     A,#01H
80D64C 6003              JZ      $ + 5H
80D64E 02D749            LJMP    ?C0165?COMMONFUNCTION
  636: 		{			
  637: 			DisplayCursorState( 0, 0, 0, 0, 1 );			
80D651 C21A              CLR     ?_DisplayCursorState?BIT
80D653 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80D656 F0                MOVX    @DPTR,A
80D657 D21B              SETB    ?_DisplayCursorState?BIT+01H
80D659 FD                MOV     R5,A
80D65A FF                MOV     R7,A
80D65B A51280897C        ECALL   _DisplayCursorState
  638: 			for( i = 0; i < len; i ++ )
80D660 E4                CLR     A
80D661 90176D            MOV     DPTR,#i
80D664 F0                MOVX    @DPTR,A
80D665         ?C0166?COMMONFUNCTION:
80D665 90176C            MOV     DPTR,#len
80D668 E0                MOVX    A,@DPTR
80D669 FF                MOV     R7,A
80D66A A3                INC     DPTR
80D66B E0                MOVX    A,@DPTR
80D66C FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 526


80D66D C3                CLR     C
80D66E 9F                SUBB    A,R7
80D66F 502B              JNC     ?C0167?COMMONFUNCTION
  639: 			{
  640: 	//			Trace( "\n GoodsNo1 = %bu", Tempstr[i] );		
  641: 				if( ( Tempstr[i] >= 0 ) && ( Tempstr[i] <= 9 ) )
80D671 7464              MOV     A,#LOW Tempstr
80D673 2E                ADD     A,R6
80D674 F582              MOV     DPL,A
80D676 E4                CLR     A
80D677 3417              ADDC    A,#HIGH Tempstr
80D679 F583              MOV     DPH,A
80D67B E0                MOVX    A,@DPTR
80D67C FF                MOV     R7,A
80D67D C3                CLR     C
80D67E 9400              SUBB    A,#00H
80D680 4012              JC      ?C0168?COMMONFUNCTION
80D682 EF                MOV     A,R7
80D683 D3                SETB    C
80D684 9409              SUBB    A,#09H
80D686 500C              JNC     ?C0168?COMMONFUNCTION
  642: 					m_InputCode = m_InputCode * 10 + Tempstr[i];				
80D688 901762            MOV     DPTR,#m_InputCode
80D68B E0                MOVX    A,@DPTR
80D68C 75F00A            MOV     B,#0AH
80D68F A4                MUL     AB
80D690 FE                MOV     R6,A
80D691 EF                MOV     A,R7
80D692 2E                ADD     A,R6
80D693 F0                MOVX    @DPTR,A
  643: 			}
80D694         ?C0168?COMMONFUNCTION:
80D694 90176D            MOV     DPTR,#i
80D697 E0                MOVX    A,@DPTR
80D698 04                INC     A
80D699 F0                MOVX    @DPTR,A
80D69A 80C9              SJMP    ?C0166?COMMONFUNCTION
80D69C         ?C0167?COMMONFUNCTION:
  644: 			if( ( m_InputCode == 99 ) && ( x == 0 ) )
80D69C 901762            MOV     DPTR,#m_InputCode
80D69F E0                MOVX    A,@DPTR
80D6A0 B4630B            CJNE    A,#063H,?C0170?COMMONFUNCTION
80D6A3 901760            MOV     DPTR,#x
80D6A6 E0                MOVX    A,@DPTR
80D6A7 7005              JNZ     ?C0170?COMMONFUNCTION
  645: 				return 99;					
80D6A9 7F63              MOV     R7,#063H
80D6AB 02D74E            LJMP    ?C0171?COMMONFUNCTION
80D6AE         ?C0170?COMMONFUNCTION:
  646: 			ClearKey();	
80D6AE A512808FA5        ECALL   ClearKey
  647: 			if( m_InputCode != 0 )
80D6B3 901762            MOV     DPTR,#m_InputCode
80D6B6 E0                MOVX    A,@DPTR
80D6B7 603B              JZ      ?C0172?COMMONFUNCTION
  648: 			{
  649: 				for( i = 0; i < GOODSWAYNUM; i ++ )
80D6B9 E4                CLR     A
80D6BA 90176D            MOV     DPTR,#i
80D6BD F0                MOVX    @DPTR,A
80D6BE         ?C0173?COMMONFUNCTION:
80D6BE 90176D            MOV     DPTR,#i
80D6C1 E0                MOVX    A,@DPTR
80D6C2 FF                MOV     R7,A
80D6C3 C3                CLR     C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 527


80D6C4 9440              SUBB    A,#040H
80D6C6 5032              JNC     ?C0177?COMMONFUNCTION
  650: 				{
  651: 					if( InputGoodsWayList[i].GoodsWayNo == m_InputCode )
80D6C8 EF                MOV     A,R7
80D6C9 25E0              ADD     A,ACC
80D6CB 25E0              ADD     A,ACC
80D6CD 24DC              ADD     A,#LOW InputGoodsWayList
80D6CF F582              MOV     DPL,A
80D6D1 E4                CLR     A
80D6D2 342B              ADDC    A,#HIGH InputGoodsWayList
80D6D4 F583              MOV     DPH,A
80D6D6 E0                MOVX    A,@DPTR
80D6D7 FF                MOV     R7,A
80D6D8 901762            MOV     DPTR,#m_InputCode
80D6DB E0                MOVX    A,@DPTR
80D6DC FE                MOV     R6,A
80D6DD EF                MOV     A,R7
80D6DE B5060B            CJNE    A,AR6,?C0175?COMMONFUNCTION
  652: 					{
  653: 						m_GoodsWayNo = i;					
80D6E1 90176D            MOV     DPTR,#i
80D6E4 E0                MOVX    A,@DPTR
80D6E5 FF                MOV     R7,A
80D6E6 901763            MOV     DPTR,#m_GoodsWayNo
80D6E9 F0                MOVX    @DPTR,A
  654: 						return i;
80D6EA 8062              SJMP    ?C0171?COMMONFUNCTION
  655: 					}
  656: 				}		
80D6EC         ?C0175?COMMONFUNCTION:
80D6EC 90176D            MOV     DPTR,#i
80D6EF E0                MOVX    A,@DPTR
80D6F0 04                INC     A
80D6F1 F0                MOVX    @DPTR,A
80D6F2 80CA              SJMP    ?C0173?COMMONFUNCTION
  657: 			}
80D6F4         ?C0172?COMMONFUNCTION:
  658: 			else
  659: 				i = GOODSWAYNUM;
80D6F4 90176D            MOV     DPTR,#i
80D6F7 7440              MOV     A,#040H
80D6F9 F0                MOVX    @DPTR,A
80D6FA         ?C0177?COMMONFUNCTION:
  660: 			if( i == GOODSWAYNUM )
80D6FA 90176D            MOV     DPTR,#i
80D6FD E0                MOVX    A,@DPTR
80D6FE 6440              XRL     A,#040H
80D700 7047              JNZ     ?C0272?COMMONFUNCTION
  661: 	 	    {
  662: 			#ifdef _CHINA_
  663: 				DisplayStr( 0, 0, 1, "编号输入错误", 12 );
  664: 				DisplayStr( 0, 1, 1, "请输入其它编号", 14 );
  665: 			#else
  666: 				DisplayStr( 0, 0, 1, "Input code error", 16 );
80D702 D21A              SETB    ?_DisplayStr?BIT
80D704 7B80              MOV     R3,#BYTE2 08017DDH
80D706 7A17              MOV     R2,#HIGH 08017DDH
80D708 79DD              MOV     R1,#LOW 08017DDH
80D70A 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D70D A5128007B6        ECALL   ?C?PSTXDATA
80D712 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D715 7410              MOV     A,#010H
80D717 A51280885B        ECALL   ?L?COM0007
  667: 				DisplayStr( 0, 1, 1, "Input other code", 16 );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 528


80D71C D21A              SETB    ?_DisplayStr?BIT
80D71E 7B80              MOV     R3,#BYTE2 08017EEH
80D720 7A17              MOV     R2,#HIGH 08017EEH
80D722 79EE              MOV     R1,#LOW 08017EEH
80D724 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D727 A5128007B6        ECALL   ?C?PSTXDATA
80D72C 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D72F 7410              MOV     A,#010H
80D731 F0                MOVX    @DPTR,A
80D732 7D01              MOV     R5,#01H
80D734 E4                CLR     A
80D735 FF                MOV     R7,A
80D736 A51280885F        ECALL   _DisplayStr
  668: 			#endif
  669: 				m_GoodsWayNo = 100;			
80D73B 901763            MOV     DPTR,#m_GoodsWayNo
80D73E 7464              MOV     A,#064H
80D740 F0                MOVX    @DPTR,A
  670: 				WaitForWork( 2000, NULL );
80D741 A51280832B        ECALL   ?L?COM000C
  671: 				continue;
80D746 02D5E1            LJMP    ?C0163?COMMONFUNCTION
  672: 			}			
  673: 	//		Trace( "\n m_SetArrayNo = %bu", m_GoodsWayNo );
  674: 	//		Trace( "\n return 0" );
  675: 			return m_GoodsWayNo;
  676: 		}
80D749         ?C0165?COMMONFUNCTION:
  677: 		else
  678: 			return m_GoodsWayNo;
80D749         
80D749 901763            MOV     DPTR,#m_GoodsWayNo
80D74C E0                MOVX    A,@DPTR
80D74D FF                MOV     R7,A
  679: 	}
  680: }
80D74E         ?C0171?COMMONFUNCTION:
80D74E A522              ERET    
----- FUNCTION _InputGoodsWayNo (END) -------


----- FUNCTION _DisplayInfo (BEGIN) -----
 FILE: 'CommonFunction.c'
  982: u_char DisplayInfo( u_char line , u_char offset , u_char * buffer )
  983: {
80D750 901767            MOV     DPTR,#line
80D753 EF                MOV     A,R7
80D754 F0                MOVX    @DPTR,A
80D755 A3                INC     DPTR
80D756 ED                MOV     A,R5
80D757 F0                MOVX    @DPTR,A
80D758 A3                INC     DPTR
80D759 A5128007B6        ECALL   ?C?PSTXDATA
  984: 	u_char xdata length;
  985: 
  986: 	length = strlen( buffer );
80D75E A512800010        ECALL   _strlen
;---- Variable 'length' assigned to Register 'R6' ----
80D763 AE07              MOV     R6,AR7
  987: 	DisplayStr( offset , line , 1 , buffer , length );
80D765 901768            MOV     DPTR,#offset
80D768 E0                MOVX    A,@DPTR
80D769 FF                MOV     R7,A
80D76A 901767            MOV     DPTR,#line
80D76D E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 529


80D76E FD                MOV     R5,A
80D76F D21A              SETB    ?_DisplayStr?BIT
80D771 901769            MOV     DPTR,#buffer
80D774 A5128007AC        ECALL   ?C?PLDXDATA
80D779 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D77C A5128007B6        ECALL   ?C?PSTXDATA
80D781 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D784 EE                MOV     A,R6
80D785 F0                MOVX    @DPTR,A
80D786 A51280885F        ECALL   _DisplayStr
  988: 	return( 0 );
80D78B 7F00              MOV     R7,#00H
  989: }
80D78D         ?C0237?COMMONFUNCTION:
80D78D A522              ERET    
----- FUNCTION _DisplayInfo (END) -------


----- FUNCTION LoadGlobalParam (BEGIN) -----
 FILE: 'CommonFunction.c'
  992: void   LoadGlobalParam()
  993: {
  994: 	u_char xdata i = 0;		
  995: 	
80D78F E4                CLR     A
80D790 9015A1            MOV     DPTR,#i
80D793 F0                MOVX    @DPTR,A
  996: 	memset( &SystemParameter, 0, sizeof( SystemParameter ) );
80D794 FE                MOV     R6,A
80D795 7F4E              MOV     R7,#04EH
80D797 FD                MOV     R5,A
80D798 7B00              MOV     R3,#?C?XDATASEG
80D79A 7A04              MOV     R2,#HIGH SystemParameter
80D79C 7920              MOV     R1,#LOW SystemParameter
80D79E A5128008A6        ECALL   ?C?MEMSET
  997: 	memset( GoodsWaySetVal, 0, sizeof( GoodsWaySetVal ) );
80D7A3 7E01              MOV     R6,#01H
80D7A5 7F40              MOV     R7,#040H
80D7A7 7D00              MOV     R5,#00H
80D7A9 7B00              MOV     R3,#?C?XDATASEG
80D7AB 7A00              MOV     R2,#HIGH GoodsWaySetVal
80D7AD 7904              MOV     R1,#LOW GoodsWaySetVal
80D7AF A5128008A6        ECALL   ?C?MEMSET
  998: 	memset( &TradeCounter, 0, sizeof(struct TRADECOUNTER) ); 
80D7B4 7E00              MOV     R6,#00H
80D7B6 7F2A              MOV     R7,#02AH
80D7B8 7D00              MOV     R5,#00H
80D7BA 7B00              MOV     R3,#?C?XDATASEG
80D7BC 7A0A              MOV     R2,#HIGH TradeCounter
80D7BE 79F1              MOV     R1,#LOW TradeCounter
80D7C0 A5128008A6        ECALL   ?C?MEMSET
  999: 	memset( TradeLog, 0, sizeof(struct TRADELOG) * GOODSWAYNUM ); 	
80D7C5 7E02              MOV     R6,#02H
80D7C7 7F40              MOV     R7,#040H
80D7C9 7D00              MOV     R5,#00H
80D7CB 7B00              MOV     R3,#?C?XDATASEG
80D7CD 7A01              MOV     R2,#HIGH TradeLog
80D7CF 79C7              MOV     R1,#LOW TradeLog
80D7D1 A5128008A6        ECALL   ?C?MEMSET
 1000: 	memset( iRackSet, 0, sizeof(struct RackSet) * RACKNUM ); 	
80D7D6 7E00              MOV     R6,#00H
80D7D8 7F18              MOV     R7,#018H
80D7DA 7D00              MOV     R5,#00H
80D7DC 7B00              MOV     R3,#?C?XDATASEG
80D7DE 7A04              MOV     R2,#HIGH iRackSet
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 530


80D7E0 7907              MOV     R1,#LOW iRackSet
80D7E2 A5128008A6        ECALL   ?C?MEMSET
 1001: 	memset( iRackColumnSet, 0, sizeof(struct RackColumnSet) * RACKNUM * RACKCOLUMNNUM );
80D7E7 7E00              MOV     R6,#00H
80D7E9 7F80              MOV     R7,#080H
80D7EB 7D00              MOV     R5,#00H
80D7ED 7B00              MOV     R3,#?C?XDATASEG
80D7EF 7A01              MOV     R2,#HIGH iRackColumnSet
80D7F1 7946              MOV     R1,#LOW iRackColumnSet
80D7F3 A5128008A6        ECALL   ?C?MEMSET
 1002: 	//本机系统参数
 1003: 	MovFlashToSram( ADDRF_SYSTEMPARAM , ( unsigned char xdata * )&SystemParameter , sizeof(struct SYSTEMPARAMETER) )
>> ;	
80D7F8 7F80              MOV     R7,#080H
80D7FA 7E01              MOV     R6,#01H
80D7FC 7D08              MOV     R5,#08H
80D7FE 7C00              MOV     R4,#00H
80D800 753804            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH SystemParameter
80D803 753920            MOV     ?_MovFlashToSram?BYTE+05H,#LOW SystemParameter
80D806 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80D809 753B4E            MOV     ?_MovFlashToSram?BYTE+07H,#04EH
80D80C A51280D88E        ECALL   _MovFlashToSram
 1004: 	MovFlashToSram( ADDRF_GOODSWAYS_SET , ( unsigned char xdata * )GoodsWaySetVal , sizeof( GoodsWaySetVal ) );	
80D811 7F80              MOV     R7,#080H
80D813 7E02              MOV     R6,#02H
80D815 7D08              MOV     R5,#08H
80D817 7C00              MOV     R4,#00H
80D819 753800            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH GoodsWaySetVal
80D81C 753904            MOV     ?_MovFlashToSram?BYTE+05H,#LOW GoodsWaySetVal
80D81F A51280D888        ECALL   ?L?COM0031
 1005: 	//交易记录
 1006: 	MovFlashToSram( ADDRF_TRADECOUNTER , ( unsigned char xdata * )&TradeCounter , sizeof(struct TRADECOUNTER) );		
80D824 7F00              MOV     R7,#00H
80D826 7E04              MOV     R6,#04H
80D828 7D08              MOV     R5,#08H
80D82A 7C00              MOV     R4,#00H
80D82C 75380A            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TradeCounter
80D82F 7539F1            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TradeCounter
80D832 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80D835 753B2A            MOV     ?_MovFlashToSram?BYTE+07H,#02AH
80D838 A51280D88E        ECALL   _MovFlashToSram
 1007: 	//货道交易LOG设置
 1008: 	MovFlashToSram( ADDRF_WAYSTARDE_LOG , ( unsigned char xdata * )TradeLog , sizeof(struct TRADELOG) * GOODSWAYNUM 
>> );	
80D83D 7F80              MOV     R7,#080H
80D83F 7E04              MOV     R6,#04H
80D841 7D08              MOV     R5,#08H
80D843 7C00              MOV     R4,#00H
80D845 753801            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TradeLog
80D848 7539C7            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TradeLog
80D84B 753A02            MOV     ?_MovFlashToSram?BYTE+06H,#02H
80D84E 753B40            MOV     ?_MovFlashToSram?BYTE+07H,#040H
80D851 A51280D88E        ECALL   _MovFlashToSram
 1009: 	//货架配置
 1010: 	MovFlashToSram( ADDRF_RACK_SET , ( unsigned char xdata * )iRackSet , sizeof(struct RackSet) * RACKNUM );		
80D856 7F00              MOV     R7,#00H
80D858 7E07              MOV     R6,#07H
80D85A 7D08              MOV     R5,#08H
80D85C 7C00              MOV     R4,#00H
80D85E 753804            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH iRackSet
80D861 753907            MOV     ?_MovFlashToSram?BYTE+05H,#LOW iRackSet
80D864 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80D867 753B18            MOV     ?_MovFlashToSram?BYTE+07H,#018H
80D86A A51280D88E        ECALL   _MovFlashToSram
 1011: 	//货道配置
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 531


 1012: 	MovFlashToSram( ADDRF_RACK_COLUMN_SET , ( unsigned char xdata * )iRackColumnSet , sizeof(struct RackColumnSet) *
>>  RACKNUM * RACKCOLUMNNUM );		
80D86F 7F00              MOV     R7,#00H
80D871 7E08              MOV     R6,#08H
80D873 7D08              MOV     R5,#08H
80D875 7C00              MOV     R4,#00H
80D877 753801            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH iRackColumnSet
80D87A 753946            MOV     ?_MovFlashToSram?BYTE+05H,#LOW iRackColumnSet
80D87D 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80D880 753B80            MOV     ?_MovFlashToSram?BYTE+07H,#080H
80D883 A50280D88E        EJMP    _MovFlashToSram
----- FUNCTION LoadGlobalParam (END) -------


----- FUNCTION ?L?COM0031 (BEGIN) -----
80D888 753A01            MOV     ?_MovFlashToSram?BYTE+06H,#01H
80D88B 753B40            MOV     ?_MovFlashToSram?BYTE+07H,#040H
----- FUNCTION _MovFlashToSram (BEGIN) -----
 FILE: 'DataExchange.c'
   92: bit MovFlashToSram( ulong FlashAddr , uchar xdata* SramAddr , uint len ) small
   93: {
80D88E 8F37              MOV     FlashAddr+03H,R7
80D890 8E36              MOV     FlashAddr+02H,R6
80D892 8D35              MOV     FlashAddr+01H,R5
80D894 8C34              MOV     FlashAddr,R4
80D896         ?C0025?DATAEXCHANGE:
   94: 	uint data lentemp;
   95: 	
   96: 	while( len > 0 )
80D896 D3                SETB    C
80D897 E53B              MOV     A,len+01H
80D899 9400              SUBB    A,#00H
80D89B E53A              MOV     A,len
80D89D 9400              SUBB    A,#00H
80D89F 5003              JNC     $ + 5H
80D8A1 02D936            LJMP    ?C0026?DATAEXCHANGE
   97: 	{
   98: 		lentemp = (len > sizeof( Cache )) ? sizeof( Cache ) : len;
80D8A4 D3                SETB    C
80D8A5 E53B              MOV     A,len+01H
80D8A7 9440              SUBB    A,#040H
80D8A9 E53A              MOV     A,len
80D8AB 9400              SUBB    A,#00H
80D8AD 4006              JC      ?C0027?DATAEXCHANGE
80D8AF 7E00              MOV     R6,#00H
80D8B1 7F40              MOV     R7,#040H
80D8B3 8004              SJMP    ?C0028?DATAEXCHANGE
80D8B5         ?C0027?DATAEXCHANGE:
80D8B5 AE3A              MOV     R6,len
80D8B7 AF3B              MOV     R7,len+01H
80D8B9         ?C0028?DATAEXCHANGE:
80D8B9 8E3C              MOV     lentemp,R6
80D8BB 8F3D              MOV     lentemp+01H,R7
   99: 		////////////////////////
  100: //		MovDataFromFlash( FlashAddr, Cache, lentemp );
  101: /*		if ( (FlashAddr & 0x80000) == 0) 
  102: 			ZhkHardFlashSelect();			
  103: 		else
  104: 			ZhkHardFlash1Select();	
  105: */			
  106: 		if ( (FlashAddr & 0x80000) == 0) 			
80D8BD E4                CLR     A
80D8BE FF                MOV     R7,A
80D8BF FE                MOV     R6,A
80D8C0 E535              MOV     A,FlashAddr+01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 532


80D8C2 5408              ANL     A,#08H
80D8C4 FD                MOV     R5,A
80D8C5 E4                CLR     A
80D8C6 FC                MOV     R4,A
80D8C7 FB                MOV     R3,A
80D8C8 FA                MOV     R2,A
80D8C9 F9                MOV     R1,A
80D8CA F8                MOV     R0,A
80D8CB C3                CLR     C
80D8CC A51280070E        ECALL   ?C?ULCMP
80D8D1 7005              JNZ     ?C0029?DATAEXCHANGE
  107: 			P1 = 0x09;
80D8D3 759009            MOV     P1,#09H
80D8D6 8003              SJMP    ?C0030?DATAEXCHANGE
80D8D8         ?C0029?DATAEXCHANGE:
  108: 		else			
  109: 			P1 = 0x0a;
80D8D8 75900A            MOV     P1,#0AH
80D8DB         ?C0030?DATAEXCHANGE:
  110: 
  111: 		SstFlashReadString( FlashAddr ,Cache , lentemp );
80D8DB AF37              MOV     R7,FlashAddr+03H
80D8DD AE36              MOV     R6,FlashAddr+02H
80D8DF AD35              MOV     R5,FlashAddr+01H
80D8E1 AC34              MOV     R4,FlashAddr
80D8E3 754250            MOV     ?_SstFlashReadString?BYTE+04H,#LOW Cache
80D8E6 853D43            MOV     ?_SstFlashReadString?BYTE+05H,lentemp+01H
80D8E9 A51280DC28        ECALL   _SstFlashReadString
  112: 		ZhkHardSramSelect();		
80D8EE 759008            MOV     P1,#08H
  113: 
  114: 		MovDataToSram( SramAddr,Cache,lentemp);	
80D8F1 7D50              MOV     R5,#LOW Cache
80D8F3 AB3D              MOV     R3,lentemp+01H
80D8F5 AF39              MOV     R7,SramAddr+01H
80D8F7 AE38              MOV     R6,SramAddr
80D8F9 A51280DBB8        ECALL   _MovDataToSram
  115: //		memcpy( SramAddr,Cache,lentemp);	
  116: 
  117: 		FlashAddr += lentemp;
80D8FE E4                CLR     A
80D8FF FC                MOV     R4,A
80D900 FD                MOV     R5,A
80D901 E537              MOV     A,FlashAddr+03H
80D903 253D              ADD     A,lentemp+01H
80D905 FF                MOV     R7,A
80D906 E536              MOV     A,FlashAddr+02H
80D908 353C              ADDC    A,lentemp
80D90A FE                MOV     R6,A
80D90B ED                MOV     A,R5
80D90C 3535              ADDC    A,FlashAddr+01H
80D90E FD                MOV     R5,A
80D90F EC                MOV     A,R4
80D910 3534              ADDC    A,FlashAddr
80D912 8F37              MOV     FlashAddr+03H,R7
80D914 8E36              MOV     FlashAddr+02H,R6
80D916 8D35              MOV     FlashAddr+01H,R5
80D918 F534              MOV     FlashAddr,A
  118: 		SramAddr += lentemp;
80D91A E53D              MOV     A,lentemp+01H
80D91C 2539              ADD     A,SramAddr+01H
80D91E F539              MOV     SramAddr+01H,A
80D920 E53C              MOV     A,lentemp
80D922 3538              ADDC    A,SramAddr
80D924 F538              MOV     SramAddr,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 533


  119: 		len -= lentemp;
80D926 C3                CLR     C
80D927 E53B              MOV     A,len+01H
80D929 953D              SUBB    A,lentemp+01H
80D92B F53B              MOV     len+01H,A
80D92D E53A              MOV     A,len
80D92F 953C              SUBB    A,lentemp
80D931 F53A              MOV     len,A
  120: 	}
80D933 02D896            LJMP    ?C0025?DATAEXCHANGE
80D936         ?C0026?DATAEXCHANGE:
  121: 	return 1;
80D936 D3                SETB    C
  122: }
80D937         ?C0031?DATAEXCHANGE:
80D937 A522              ERET    
----- FUNCTION _MovFlashToSram (END) -------


----- FUNCTION _MovSramToFlash (BEGIN) -----
 FILE: 'DataExchange.c'
   57: bit MovSramToFlash( ulong FlashAddr , uchar xdata* SramAddr , uint len ) small
   58: {
80D939 8F2B              MOV     FlashAddr+03H,R7
80D93B 8E2A              MOV     FlashAddr+02H,R6
80D93D 8D29              MOV     FlashAddr+01H,R5
80D93F 8C28              MOV     FlashAddr,R4
80D941         ?C0016?DATAEXCHANGE:
   59: 	uchar xdata TempBuf[ SECTORSIZE ];
   60: 	uint  data len1;
   61: 	uint  data len2;
   62: 
   63: //	Trace("\n FlashAddr2 = 0x%02lx", FlashAddr );
   64: 	while( len > 0)
80D941 D3                SETB    C
80D942 E52F              MOV     A,len+01H
80D944 9400              SUBB    A,#00H
80D946 E52E              MOV     A,len
80D948 9400              SUBB    A,#00H
80D94A 5003              JNC     $ + 5H
80D94C 02DA4E            LJMP    ?C0017?DATAEXCHANGE
   65: 	{
   66: 		len1 = FlashAddr % SECTORSIZE;
80D94F E52B              MOV     A,FlashAddr+03H
80D951 547F              ANL     A,#07FH
80D953 FF                MOV     R7,A
80D954 E4                CLR     A
80D955 F530              MOV     len1,A
80D957 8F31              MOV     len1+01H,R7
   67: 		len2 = SECTORSIZE - len1;
80D959 7480              MOV     A,#080H
80D95B 9531              SUBB    A,len1+01H
80D95D F533              MOV     len2+01H,A
80D95F E4                CLR     A
80D960 9530              SUBB    A,len1
80D962 F532              MOV     len2,A
   68: 
   69: 		if( len1 > 0 || len2 > len )
80D964 D3                SETB    C
80D965 E531              MOV     A,len1+01H
80D967 9400              SUBB    A,#00H
80D969 E530              MOV     A,len1
80D96B 9400              SUBB    A,#00H
80D96D 500A              JNC     ?C0019?DATAEXCHANGE
80D96F E533              MOV     A,len2+01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 534


80D971 952F              SUBB    A,len+01H
80D973 E532              MOV     A,len2
80D975 952E              SUBB    A,len
80D977 402C              JC      ?C0018?DATAEXCHANGE
80D979         ?C0019?DATAEXCHANGE:
   70: 			MovFlashToSram( FlashAddr - len1, TempBuf, SECTORSIZE );
80D979 AE30              MOV     R6,len1
80D97B AF31              MOV     R7,len1+01H
80D97D AB07              MOV     R3,AR7
80D97F AA06              MOV     R2,AR6
80D981 C3                CLR     C
80D982 E52B              MOV     A,FlashAddr+03H
80D984 9B                SUBB    A,R3
80D985 FF                MOV     R7,A
80D986 E52A              MOV     A,FlashAddr+02H
80D988 9A                SUBB    A,R2
80D989 FE                MOV     R6,A
80D98A E529              MOV     A,FlashAddr+01H
80D98C 9400              SUBB    A,#00H
80D98E FD                MOV     R5,A
80D98F E528              MOV     A,FlashAddr
80D991 9400              SUBB    A,#00H
80D993 FC                MOV     R4,A
80D994 753817            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TempBuf
80D997 753952            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TempBuf
80D99A 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80D99D 753B80            MOV     ?_MovFlashToSram?BYTE+07H,#080H
80D9A0 A51280D88E        ECALL   _MovFlashToSram
80D9A5         ?C0018?DATAEXCHANGE:
   71: 
   72: 		len2 = (len > len2) ? len2 : len;
80D9A5 D3                SETB    C
80D9A6 E52F              MOV     A,len+01H
80D9A8 9533              SUBB    A,len2+01H
80D9AA E52E              MOV     A,len
80D9AC 9532              SUBB    A,len2
80D9AE 4006              JC      ?C0020?DATAEXCHANGE
80D9B0 AE32              MOV     R6,len2
80D9B2 AF33              MOV     R7,len2+01H
80D9B4 8004              SJMP    ?C0021?DATAEXCHANGE
80D9B6         ?C0020?DATAEXCHANGE:
80D9B6 AE2E              MOV     R6,len
80D9B8 AF2F              MOV     R7,len+01H
80D9BA         ?C0021?DATAEXCHANGE:
80D9BA 8E32              MOV     len2,R6
80D9BC 8F33              MOV     len2+01H,R7
   73: 		MovSramToSram( SramAddr, TempBuf + len1, len2 );		
80D9BE 7452              MOV     A,#LOW TempBuf
80D9C0 2531              ADD     A,len1+01H
80D9C2 F582              MOV     DPL,A
80D9C4 E4                CLR     A
80D9C5 3417              ADDC    A,#HIGH TempBuf
80D9C7 AD82              MOV     R5,DPL
80D9C9 FC                MOV     R4,A
80D9CA AB33              MOV     R3,len2+01H
80D9CC AA32              MOV     R2,len2
80D9CE AF2D              MOV     R7,SramAddr+01H
80D9D0 AE2C              MOV     R6,SramAddr
80D9D2 A51280DBE5        ECALL   _MovSramToSram
   74: 
   75: 		if ( FlashAddr & 0x80000 == 0) 
   76: 			P1 = 0x09;
80D9D7         ?C0022?DATAEXCHANGE:
   77: 		else
   78: 			P1 = 0x0a;		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 535


80D9D7 75900A            MOV     P1,#0AH
80D9DA         ?C0023?DATAEXCHANGE:
   79: 
   80: 		SstFlashSectorErase( FlashAddr );
80D9DA AF2B              MOV     R7,FlashAddr+03H
80D9DC AE2A              MOV     R6,FlashAddr+02H
80D9DE AD29              MOV     R5,FlashAddr+01H
80D9E0 AC28              MOV     R4,FlashAddr
80D9E2 A51280DCDC        ECALL   _SstFlashSectorErase
   81: 		ZhkHardSramSelect();		
80D9E7 759008            MOV     P1,#08H
   82: 		PogramFlash( FlashAddr - len1, TempBuf, SECTORSIZE );
80D9EA AE30              MOV     R6,len1
80D9EC AF31              MOV     R7,len1+01H
80D9EE AB07              MOV     R3,AR7
80D9F0 AA06              MOV     R2,AR6
80D9F2 C3                CLR     C
80D9F3 E52B              MOV     A,FlashAddr+03H
80D9F5 9B                SUBB    A,R3
80D9F6 FF                MOV     R7,A
80D9F7 E52A              MOV     A,FlashAddr+02H
80D9F9 9A                SUBB    A,R2
80D9FA FE                MOV     R6,A
80D9FB E529              MOV     A,FlashAddr+01H
80D9FD 9400              SUBB    A,#00H
80D9FF FD                MOV     R5,A
80DA00 E528              MOV     A,FlashAddr
80DA02 9400              SUBB    A,#00H
80DA04 FC                MOV     R4,A
80DA05 753817            MOV     ?_PogramFlash?BYTE+04H,#HIGH TempBuf
80DA08 753952            MOV     ?_PogramFlash?BYTE+05H,#LOW TempBuf
80DA0B 753A00            MOV     ?_PogramFlash?BYTE+06H,#00H
80DA0E 753B80            MOV     ?_PogramFlash?BYTE+07H,#080H
80DA11 A51280DAA4        ECALL   _PogramFlash
   83: 
   84: 		FlashAddr += len2;
80DA16 E4                CLR     A
80DA17 FC                MOV     R4,A
80DA18 FD                MOV     R5,A
80DA19 E52B              MOV     A,FlashAddr+03H
80DA1B 2533              ADD     A,len2+01H
80DA1D FF                MOV     R7,A
80DA1E E52A              MOV     A,FlashAddr+02H
80DA20 3532              ADDC    A,len2
80DA22 FE                MOV     R6,A
80DA23 ED                MOV     A,R5
80DA24 3529              ADDC    A,FlashAddr+01H
80DA26 FD                MOV     R5,A
80DA27 EC                MOV     A,R4
80DA28 3528              ADDC    A,FlashAddr
80DA2A 8F2B              MOV     FlashAddr+03H,R7
80DA2C 8E2A              MOV     FlashAddr+02H,R6
80DA2E 8D29              MOV     FlashAddr+01H,R5
80DA30 F528              MOV     FlashAddr,A
   85: 		SramAddr += len2;
80DA32 E533              MOV     A,len2+01H
80DA34 252D              ADD     A,SramAddr+01H
80DA36 F52D              MOV     SramAddr+01H,A
80DA38 E532              MOV     A,len2
80DA3A 352C              ADDC    A,SramAddr
80DA3C F52C              MOV     SramAddr,A
   86: 		len -= len2;
80DA3E C3                CLR     C
80DA3F E52F              MOV     A,len+01H
80DA41 9533              SUBB    A,len2+01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 536


80DA43 F52F              MOV     len+01H,A
80DA45 E52E              MOV     A,len
80DA47 9532              SUBB    A,len2
80DA49 F52E              MOV     len,A
   87: 	}
80DA4B 02D941            LJMP    ?C0016?DATAEXCHANGE
80DA4E         ?C0017?DATAEXCHANGE:
   88: 
   89: 	return 1;
80DA4E D3                SETB    C
   90: }
80DA4F         ?C0024?DATAEXCHANGE:
80DA4F A522              ERET    
----- FUNCTION _MovSramToFlash (END) -------


----- FUNCTION ?L?COM0024 (BEGIN) -----
80DA51 900B28            MOV     DPTR,#CurrentStockCode
80DA54 E0                MOVX    A,@DPTR
80DA55 75F005            MOV     B,#05H
80DA58 900005            MOV     DPTR,#GoodsWaySetVal+01H
80DA5B A51280079F        ECALL   ?C?OFFXADD
80DA60 E0                MOVX    A,@DPTR
80DA61 4402              ORL     A,#02H
80DA63 F0                MOVX    @DPTR,A
----- FUNCTION SaveGoodsSet (BEGIN) -----
 FILE: 'CommonFunction.c'
 1017: void SaveGoodsSet()
 1018: {	
 1019: 	MovSramToFlash( ADDRF_GOODSWAYS_SET , ( unsigned char xdata * )GoodsWaySetVal , sizeof(GoodsWaySetVal) );	
 1020: }
80DA64 7F80              MOV     R7,#080H
80DA66 7E02              MOV     R6,#02H
80DA68 7D08              MOV     R5,#08H
80DA6A 7C00              MOV     R4,#00H
80DA6C 752C00            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH GoodsWaySetVal
80DA6F 752D04            MOV     ?_MovSramToFlash?BYTE+05H,#LOW GoodsWaySetVal
80DA72 752E01            MOV     ?_MovSramToFlash?BYTE+06H,#01H
80DA75 752F40            MOV     ?_MovSramToFlash?BYTE+07H,#040H
80DA78 A50280D939        EJMP    _MovSramToFlash
----- FUNCTION SaveGoodsSet (END) -------


----- FUNCTION ?L?COM002D (BEGIN) -----
80DA7D A51280079F        ECALL   ?C?OFFXADD
80DA82 E4                CLR     A
80DA83 75F001            MOV     B,#01H
80DA86 A512800600        ECALL   ?C?IILDX
----- FUNCTION SaveTradeCounter (BEGIN) -----
 FILE: 'CommonFunction.c'
 1047: void SaveTradeCounter()
 1048: {
 1049: 	//货道交易LOG设置
 1050: 	MovSramToFlash( ADDRF_WAYSTARDE_LOG , ( unsigned char xdata * )TradeLog , sizeof(struct TRADELOG) * GOODSWAYNUM 
>> );		
80DA8B 7F80              MOV     R7,#080H
80DA8D 7E04              MOV     R6,#04H
80DA8F 7D08              MOV     R5,#08H
80DA91 7C00              MOV     R4,#00H
80DA93 752C01            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH TradeLog
80DA96 752DC7            MOV     ?_MovSramToFlash?BYTE+05H,#LOW TradeLog
80DA99 752E02            MOV     ?_MovSramToFlash?BYTE+06H,#02H
80DA9C 752F40            MOV     ?_MovSramToFlash?BYTE+07H,#040H
80DA9F A50280D939        EJMP    _MovSramToFlash
----- FUNCTION SaveTradeCounter (END) -------
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 537




----- FUNCTION _PogramFlash (BEGIN) -----
 FILE: 'DataExchange.c'
   32: bit PogramFlash( ulong FlashAddr , uchar xdata* SramAddr , uint len ) small
   33: {
80DAA4 8F37              MOV     FlashAddr+03H,R7
80DAA6 8E36              MOV     FlashAddr+02H,R6
80DAA8 8D35              MOV     FlashAddr+01H,R5
80DAAA 8C34              MOV     FlashAddr,R4
80DAAC         ?C0010?DATAEXCHANGE:
   34: 	uchar data lentemp;
   35: 
   36: 	while( len )
80DAAC E53B              MOV     A,len+01H
80DAAE 453A              ORL     A,len
80DAB0 7003              JNZ     $ + 5H
80DAB2 02DB3F            LJMP    ?C0011?DATAEXCHANGE
   37: 	{
   38: 		lentemp = sizeof( Cache );
80DAB5 753C40            MOV     lentemp,#040H
   39: 		if ( len < sizeof( Cache ) ) 
80DAB8 C3                CLR     C
80DAB9 E53B              MOV     A,len+01H
80DABB 9440              SUBB    A,#040H
80DABD E53A              MOV     A,len
80DABF 9400              SUBB    A,#00H
80DAC1 5003              JNC     ?C0012?DATAEXCHANGE
   40: 			lentemp = len;		
80DAC3 853B3C            MOV     lentemp,len+01H
80DAC6         ?C0012?DATAEXCHANGE:
   41: 
   42: 		MovDataFromSram( SramAddr , Cache , lentemp );
80DAC6 7D50              MOV     R5,#LOW Cache
80DAC8 AB3C              MOV     R3,lentemp
80DACA AF39              MOV     R7,SramAddr+01H
80DACC AE38              MOV     R6,SramAddr
80DACE A51280DB8D        ECALL   _MovDataFromSram
   43: 		if ( (FlashAddr & 0x80000) == 0) 			
80DAD3 E4                CLR     A
80DAD4 FF                MOV     R7,A
80DAD5 FE                MOV     R6,A
80DAD6 E535              MOV     A,FlashAddr+01H
80DAD8 5408              ANL     A,#08H
80DADA FD                MOV     R5,A
80DADB E4                CLR     A
80DADC FC                MOV     R4,A
80DADD FB                MOV     R3,A
80DADE FA                MOV     R2,A
80DADF F9                MOV     R1,A
80DAE0 F8                MOV     R0,A
80DAE1 C3                CLR     C
80DAE2 A51280070E        ECALL   ?C?ULCMP
80DAE7 7005              JNZ     ?C0013?DATAEXCHANGE
   44: 			P1 = 0x09;
80DAE9 759009            MOV     P1,#09H
80DAEC 8003              SJMP    ?C0014?DATAEXCHANGE
80DAEE         ?C0013?DATAEXCHANGE:
   45: 		else			
   46: 			P1 = 0x0a;
80DAEE 75900A            MOV     P1,#0AH
80DAF1         ?C0014?DATAEXCHANGE:
   47: 
   48: 		SstFlashStringProgam( FlashAddr , Cache , lentemp );
80DAF1 AF37              MOV     R7,FlashAddr+03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 538


80DAF3 AE36              MOV     R6,FlashAddr+02H
80DAF5 AD35              MOV     R5,FlashAddr+01H
80DAF7 AC34              MOV     R4,FlashAddr
80DAF9 754150            MOV     ?_SstFlashStringProgam?BYTE+04H,#LOW Cache
80DAFC 853C42            MOV     ?_SstFlashStringProgam?BYTE+05H,lentemp
80DAFF A51280DD4A        ECALL   _SstFlashStringProgam
   49: 		ZhkHardSramSelect();
80DB04 759008            MOV     P1,#08H
   50: 		FlashAddr += lentemp;
80DB07 E4                CLR     A
80DB08 FC                MOV     R4,A
80DB09 FD                MOV     R5,A
80DB0A FE                MOV     R6,A
80DB0B E537              MOV     A,FlashAddr+03H
80DB0D 253C              ADD     A,lentemp
80DB0F FF                MOV     R7,A
80DB10 EE                MOV     A,R6
80DB11 3536              ADDC    A,FlashAddr+02H
80DB13 FE                MOV     R6,A
80DB14 ED                MOV     A,R5
80DB15 3535              ADDC    A,FlashAddr+01H
80DB17 FD                MOV     R5,A
80DB18 EC                MOV     A,R4
80DB19 3534              ADDC    A,FlashAddr
80DB1B 8F37              MOV     FlashAddr+03H,R7
80DB1D 8E36              MOV     FlashAddr+02H,R6
80DB1F 8D35              MOV     FlashAddr+01H,R5
80DB21 F534              MOV     FlashAddr,A
   51: 		SramAddr  += lentemp;		
80DB23 AF3C              MOV     R7,lentemp
80DB25 7E00              MOV     R6,#00H
80DB27 EF                MOV     A,R7
80DB28 2539              ADD     A,SramAddr+01H
80DB2A F539              MOV     SramAddr+01H,A
80DB2C EE                MOV     A,R6
80DB2D 3538              ADDC    A,SramAddr
80DB2F F538              MOV     SramAddr,A
   52: 		len       -= lentemp;
80DB31 C3                CLR     C
80DB32 E53B              MOV     A,len+01H
80DB34 9F                SUBB    A,R7
80DB35 F53B              MOV     len+01H,A
80DB37 E53A              MOV     A,len
80DB39 9E                SUBB    A,R6
80DB3A F53A              MOV     len,A
   53: 	}	
80DB3C 02DAAC            LJMP    ?C0010?DATAEXCHANGE
80DB3F         ?C0011?DATAEXCHANGE:
   54: 	return 1;
80DB3F D3                SETB    C
   55: }
80DB40         ?C0015?DATAEXCHANGE:
80DB40 A522              ERET    
----- FUNCTION _PogramFlash (END) -------


----- FUNCTION SaveTradeParam (BEGIN) -----
 FILE: 'CommonFunction.c'
 1040: void  SaveTradeParam()
 1041: {
 1042: 	//本机运行参数
 1043: 	MovSramToFlash( ADDRF_TRADECOUNTER , ( unsigned char xdata * )&TradeCounter , sizeof(struct TRADECOUNTER) );
80DB42 7F00              MOV     R7,#00H
80DB44 7E04              MOV     R6,#04H
80DB46 7D08              MOV     R5,#08H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 539


80DB48 7C00              MOV     R4,#00H
80DB4A 752C0A            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH TradeCounter
80DB4D 752DF1            MOV     ?_MovSramToFlash?BYTE+05H,#LOW TradeCounter
80DB50 752E00            MOV     ?_MovSramToFlash?BYTE+06H,#00H
80DB53 752F2A            MOV     ?_MovSramToFlash?BYTE+07H,#02AH
80DB56 A50280D939        EJMP    _MovSramToFlash
----- FUNCTION SaveTradeParam (END) -------


----- FUNCTION SaveRackSet (BEGIN) -----
 FILE: 'CommonFunction.c'
 1054: void SaveRackSet()
 1055: {
 1056: 	//货架配置
 1057: 	MovSramToFlash( ADDRF_RACK_SET , ( unsigned char xdata * )iRackSet , sizeof(struct RackSet) * RACKNUM );		
80DB5B 7F00              MOV     R7,#00H
80DB5D 7E07              MOV     R6,#07H
80DB5F 7D08              MOV     R5,#08H
80DB61 7C00              MOV     R4,#00H
80DB63 752C04            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH iRackSet
80DB66 752D07            MOV     ?_MovSramToFlash?BYTE+05H,#LOW iRackSet
80DB69 752E00            MOV     ?_MovSramToFlash?BYTE+06H,#00H
80DB6C 752F18            MOV     ?_MovSramToFlash?BYTE+07H,#018H
80DB6F A50280D939        EJMP    _MovSramToFlash
----- FUNCTION SaveRackSet (END) -------


----- FUNCTION SaveRackColumnSet (BEGIN) -----
 FILE: 'CommonFunction.c'
 1061: void SaveRackColumnSet()
 1062: {
 1063: 	//货道配置
 1064: 	MovSramToFlash( ADDRF_RACK_COLUMN_SET , ( unsigned char xdata * )iRackColumnSet , sizeof(struct RackColumnSet) *
>>  RACKNUM * RACKCOLUMNNUM );		
80DB74 7F00              MOV     R7,#00H
80DB76 7E08              MOV     R6,#08H
80DB78 7D08              MOV     R5,#08H
80DB7A 7C00              MOV     R4,#00H
80DB7C 752C01            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH iRackColumnSet
80DB7F 752D46            MOV     ?_MovSramToFlash?BYTE+05H,#LOW iRackColumnSet
80DB82 752E00            MOV     ?_MovSramToFlash?BYTE+06H,#00H
80DB85 752F80            MOV     ?_MovSramToFlash?BYTE+07H,#080H
80DB88 A50280D939        EJMP    _MovSramToFlash
----- FUNCTION SaveRackColumnSet (END) -------


----- FUNCTION _MovDataFromSram (BEGIN) -----
 FILE: 'DataExchange.c'
    9: bit MovDataFromSram( uchar xdata* SramAddr , uchar idata* RamAddr , uchar len )
   10: {
80DB8D 9017D2            MOV     DPTR,#SramAddr
80DB90 EE                MOV     A,R6
80DB91 F0                MOVX    @DPTR,A
80DB92 A3                INC     DPTR
80DB93 EF                MOV     A,R7
80DB94 F0                MOVX    @DPTR,A
;---- Variable 'len' assigned to Register 'R3' ----
;---- Variable 'RamAddr' assigned to Register 'R5' ----
   11: 	while(len --)
80DB95         ?C0001?DATAEXCHANGE:
   12: 		*RamAddr ++ = *SramAddr ++;
80DB95 AF03              MOV     R7,AR3
80DB97 1B                DEC     R3
80DB98 EF                MOV     A,R7
80DB99 601A              JZ      ?C0002?DATAEXCHANGE
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 540


   13: 
80DB9B 9017D2            MOV     DPTR,#SramAddr
80DB9E E4                CLR     A
80DB9F 75F001            MOV     B,#01H
80DBA2 A512800617        ECALL   ?C?ILDIX
80DBA7 85F082            MOV     DPL,B
80DBAA F583              MOV     DPH,A
80DBAC E0                MOVX    A,@DPTR
80DBAD AE05              MOV     R6,AR5
80DBAF 0D                INC     R5
80DBB0 A806              MOV     R0,AR6
80DBB2 F6                MOV     @R0,A
80DBB3 80E0              SJMP    ?C0001?DATAEXCHANGE
80DBB5         ?C0002?DATAEXCHANGE:
   14: 	return 1;	
80DBB5 D3                SETB    C
   15: }
80DBB6         ?C0003?DATAEXCHANGE:
80DBB6 A522              ERET    
----- FUNCTION _MovDataFromSram (END) -------


----- FUNCTION _MovDataToSram (BEGIN) -----
 FILE: 'DataExchange.c'
   17: bit MovDataToSram( uchar xdata* SramAddr , uchar idata* RamAddr , uchar len )
   18: {
80DBB8 9017D2            MOV     DPTR,#SramAddr
80DBBB EE                MOV     A,R6
80DBBC F0                MOVX    @DPTR,A
80DBBD A3                INC     DPTR
80DBBE EF                MOV     A,R7
80DBBF F0                MOVX    @DPTR,A
;---- Variable 'len' assigned to Register 'R3' ----
;---- Variable 'RamAddr' assigned to Register 'R5' ----
   19: 	while(len --)
80DBC0         ?C0004?DATAEXCHANGE:
   20: 		*SramAddr ++ = *RamAddr ++;
80DBC0 AF03              MOV     R7,AR3
80DBC2 1B                DEC     R3
80DBC3 EF                MOV     A,R7
80DBC4 601C              JZ      ?C0005?DATAEXCHANGE
   21: 
80DBC6 AF05              MOV     R7,AR5
80DBC8 0D                INC     R5
80DBC9 A807              MOV     R0,AR7
80DBCB E6                MOV     A,@R0
80DBCC FF                MOV     R7,A
80DBCD 9017D2            MOV     DPTR,#SramAddr
80DBD0 E4                CLR     A
80DBD1 75F001            MOV     B,#01H
80DBD4 A512800617        ECALL   ?C?ILDIX
80DBD9 85F082            MOV     DPL,B
80DBDC F583              MOV     DPH,A
80DBDE EF                MOV     A,R7
80DBDF F0                MOVX    @DPTR,A
80DBE0 80DE              SJMP    ?C0004?DATAEXCHANGE
80DBE2         ?C0005?DATAEXCHANGE:
   22: 	return 1;
80DBE2 D3                SETB    C
   23: }
80DBE3         ?C0006?DATAEXCHANGE:
80DBE3 A522              ERET    
----- FUNCTION _MovDataToSram (END) -------


LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 541


----- FUNCTION _MovSramToSram (BEGIN) -----
 FILE: 'DataExchange.c'
   25: bit MovSramToSram( uchar xdata* Sourse , uchar xdata* Object , uint len ) 
   26: {
80DBE5 90187A            MOV     DPTR,#Sourse
80DBE8 EE                MOV     A,R6
80DBE9 F0                MOVX    @DPTR,A
80DBEA A3                INC     DPTR
80DBEB EF                MOV     A,R7
80DBEC F0                MOVX    @DPTR,A
80DBED A3                INC     DPTR
80DBEE EC                MOV     A,R4
80DBEF F0                MOVX    @DPTR,A
80DBF0 A3                INC     DPTR
80DBF1 ED                MOV     A,R5
80DBF2 F0                MOVX    @DPTR,A
;---- Variable 'len' assigned to Register 'R2/R3' ----
   27: 	while( len -- )
80DBF3         ?C0007?DATAEXCHANGE:
   28: 		*Object ++ = *Sourse ++;
80DBF3 EB                MOV     A,R3
80DBF4 1B                DEC     R3
80DBF5 AE02              MOV     R6,AR2
80DBF7 7001              JNZ     ?C0032?DATAEXCHANGE
80DBF9 1A                DEC     R2
80DBFA         ?C0032?DATAEXCHANGE:
80DBFA 4E                ORL     A,R6
80DBFB 6028              JZ      ?C0008?DATAEXCHANGE
   29: 	return 1;
80DBFD 90187A            MOV     DPTR,#Sourse
80DC00 E4                CLR     A
80DC01 75F001            MOV     B,#01H
80DC04 A512800617        ECALL   ?C?ILDIX
80DC09 85F082            MOV     DPL,B
80DC0C F583              MOV     DPH,A
80DC0E E0                MOVX    A,@DPTR
80DC0F FF                MOV     R7,A
80DC10 90187C            MOV     DPTR,#Object
80DC13 E4                CLR     A
80DC14 75F001            MOV     B,#01H
80DC17 A512800617        ECALL   ?C?ILDIX
80DC1C 85F082            MOV     DPL,B
80DC1F F583              MOV     DPH,A
80DC21 EF                MOV     A,R7
80DC22 F0                MOVX    @DPTR,A
80DC23 80CE              SJMP    ?C0007?DATAEXCHANGE
80DC25         ?C0008?DATAEXCHANGE:
   30: }
80DC25 D3                SETB    C
   31: 
80DC26         ?C0009?DATAEXCHANGE:
80DC26 A522              ERET    
----- FUNCTION _MovSramToSram (END) -------


----- FUNCTION _SstFlashReadString (BEGIN) -----
 FILE: 'SstFlash.c'
  118: bit SstFlashReadString( unsigned long FlashAddr , unsigned char idata* RamAddr , unsigned char len )		small
  119: {
80DC28 8F41              MOV     FlashAddr+03H,R7
80DC2A 8E40              MOV     FlashAddr+02H,R6
80DC2C 8D3F              MOV     FlashAddr+01H,R5
80DC2E 8C3E              MOV     FlashAddr,R4
80DC30         ?C0016?SSTFLASH:
  120: 	unsigned int  data FlashAddrL;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 542


  121: 	unsigned char data FlashAddrH;
  122: 
  123: 	while( len -- )
80DC30 AF43              MOV     R7,len
80DC32 1543              DEC     len
80DC34 EF                MOV     A,R7
80DC35 6042              JZ      ?C0017?SSTFLASH
  124: 	{	
  125: 		FlashAddrH = ( ( uchar data* )&FlashAddr )[ 1 ];
80DC37 783F              MOV     R0,#LOW FlashAddr+01H
80DC39 E6                MOV     A,@R0
;---- Variable 'FlashAddrH' assigned to Register 'R3' ----
80DC3A FB                MOV     R3,A
  126: 		FlashAddrL = FlashAddr & 0xFFFF;
80DC3B E541              MOV     A,FlashAddr+03H
80DC3D FF                MOV     R7,A
80DC3E E540              MOV     A,FlashAddr+02H
80DC40 FE                MOV     R6,A
80DC41 8E44              MOV     FlashAddrL,R6
80DC43 8F45              MOV     FlashAddrL+01H,R7
  127: 		PinAddr18 = FlashAddrH & 0x04;
80DC45 EB                MOV     A,R3
80DC46 A2E2              MOV     C,ACC.2
80DC48 9297              MOV     PinAddr18,C
  128: 		PinAddr17 = FlashAddrH & 0x02;
80DC4A A2E1              MOV     C,ACC.1
80DC4C 9296              MOV     PinAddr17,C
  129: 		PinAddr16 = FlashAddrH & 0x01;
80DC4E 13                RRC     A
80DC4F 9295              MOV     PinAddr16,C
  130: 		*RamAddr ++ = XBYTE[ FlashAddrL ];
80DC51 854582            MOV     DPL,FlashAddrL+01H
80DC54 854483            MOV     DPH,FlashAddrL
80DC57 E0                MOVX    A,@DPTR
80DC58 AE42              MOV     R6,RamAddr
80DC5A 0542              INC     RamAddr
80DC5C A806              MOV     R0,AR6
80DC5E F6                MOV     @R0,A
  131: 		FlashAddr ++;
80DC5F E541              MOV     A,FlashAddr+03H
80DC61 2401              ADD     A,#01H
80DC63 FF                MOV     R7,A
80DC64 E4                CLR     A
80DC65 3540              ADDC    A,FlashAddr+02H
80DC67 FE                MOV     R6,A
80DC68 E4                CLR     A
80DC69 353F              ADDC    A,FlashAddr+01H
80DC6B FD                MOV     R5,A
80DC6C E4                CLR     A
80DC6D 353E              ADDC    A,FlashAddr
80DC6F 8F41              MOV     FlashAddr+03H,R7
80DC71 8E40              MOV     FlashAddr+02H,R6
80DC73 8D3F              MOV     FlashAddr+01H,R5
80DC75 F53E              MOV     FlashAddr,A
  132: 	}
80DC77 80B7              SJMP    ?C0016?SSTFLASH
80DC79         ?C0017?SSTFLASH:
  133: 	return 1;
80DC79 D3                SETB    C
  134: }
80DC7A         ?C0018?SSTFLASH:
80DC7A A522              ERET    
----- FUNCTION _SstFlashReadString (END) -------


LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 543


----- FUNCTION SaveGlobalParam (BEGIN) -----
 FILE: 'CommonFunction.c'
 1023: void   SaveGlobalParam()
 1024: {
 1025: 	//本机系统参数	
 1026: 	u_char xdata i = 0;
80DC7C E4                CLR     A
80DC7D 90172F            MOV     DPTR,#i
80DC80 F0                MOVX    @DPTR,A
 1027: 	u_char xdata j = 0;
80DC81 A3                INC     DPTR
80DC82 F0                MOVX    @DPTR,A
 1028: 	u_char xdata z = 0;
80DC83 A3                INC     DPTR
80DC84 F0                MOVX    @DPTR,A
 1029: 	//本机系统参数	
 1030: 	//生成系统参数的校验位	
 1031: 	i = sizeof( struct SYSTEMPARAMETER ) - 1;
80DC85 90172F            MOV     DPTR,#i
80DC88 744D              MOV     A,#04DH
80DC8A F0                MOVX    @DPTR,A
 1032: 	j = 0;
80DC8B E4                CLR     A
80DC8C A3                INC     DPTR
80DC8D F0                MOVX    @DPTR,A
 1033: 	for( z = 0; z < i; z++ )			
80DC8E A3                INC     DPTR
80DC8F F0                MOVX    @DPTR,A
80DC90         ?C0240?COMMONFUNCTION:
80DC90 90172F            MOV     DPTR,#i
80DC93 E0                MOVX    A,@DPTR
80DC94 FF                MOV     R7,A
80DC95 901731            MOV     DPTR,#z
80DC98 E0                MOVX    A,@DPTR
80DC99 FE                MOV     R6,A
80DC9A C3                CLR     C
80DC9B 9F                SUBB    A,R7
80DC9C 501D              JNC     ?C0241?COMMONFUNCTION
 1034: 		j ^= (( u_char* )&SystemParameter)[z];			
80DC9E 901730            MOV     DPTR,#j
80DCA1 E0                MOVX    A,@DPTR
80DCA2 FF                MOV     R7,A
80DCA3 EE                MOV     A,R6
80DCA4 7C00              MOV     R4,#00H
80DCA6 7B00              MOV     R3,#?C?XDATASEG
80DCA8 2420              ADD     A,#LOW SystemParameter
80DCAA F9                MOV     R1,A
80DCAB EC                MOV     A,R4
80DCAC 3404              ADDC    A,#HIGH SystemParameter
80DCAE FA                MOV     R2,A
80DCAF A548              EMOV    A,@PR0
80DCB1 FE                MOV     R6,A
80DCB2 EF                MOV     A,R7
80DCB3 6E                XRL     A,R6
80DCB4 F0                MOVX    @DPTR,A
80DCB5 A3                INC     DPTR
80DCB6 E0                MOVX    A,@DPTR
80DCB7 04                INC     A
80DCB8 F0                MOVX    @DPTR,A
80DCB9 80D5              SJMP    ?C0240?COMMONFUNCTION
80DCBB         ?C0241?COMMONFUNCTION:
 1035: 	SystemParameter.Checkbyte = j;
80DCBB 901730            MOV     DPTR,#j
80DCBE E0                MOVX    A,@DPTR
80DCBF 90046D            MOV     DPTR,#SystemParameter+04DH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 544


80DCC2 F0                MOVX    @DPTR,A
 1036: 
 1037: 	MovSramToFlash( ADDRF_SYSTEMPARAM , ( unsigned char xdata * )&SystemParameter , sizeof(struct SYSTEMPARAMETER) )
>> ;	
80DCC3 7F80              MOV     R7,#080H
80DCC5 7E01              MOV     R6,#01H
80DCC7 7D08              MOV     R5,#08H
80DCC9 7C00              MOV     R4,#00H
80DCCB 752C04            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH SystemParameter
80DCCE 752D20            MOV     ?_MovSramToFlash?BYTE+05H,#LOW SystemParameter
80DCD1 752E00            MOV     ?_MovSramToFlash?BYTE+06H,#00H
80DCD4 752F4E            MOV     ?_MovSramToFlash?BYTE+07H,#04EH
80DCD7 A50280D939        EJMP    _MovSramToFlash
----- FUNCTION SaveGlobalParam (END) -------


----- FUNCTION _SstFlashSectorErase (BEGIN) -----
 FILE: 'SstFlash.c'
   57: bit SstFlashSectorErase( unsigned long FlashAddr )		small
   58: {
80DCDC 8F37              MOV     FlashAddr+03H,R7
80DCDE 8E36              MOV     FlashAddr+02H,R6
80DCE0 8D35              MOV     FlashAddr+01H,R5
80DCE2 8C34              MOV     FlashAddr,R4
   59: 	unsigned  int data FlashAddrL;
   60: 	unsigned char data FlashAddrH;
   61: 	unsigned char data i;
   62: 
   63: 	XBYTE[ 0x555 ] = 0xAA;
80DCE4 900555            MOV     DPTR,#0555H
80DCE7 74AA              MOV     A,#0AAH
80DCE9 F0                MOVX    @DPTR,A
   64: 	XBYTE[ 0x2AA ] = 0x55;
80DCEA 9002AA            MOV     DPTR,#02AAH
80DCED 7455              MOV     A,#055H
80DCEF F0                MOVX    @DPTR,A
   65: 	XBYTE[ 0x555 ] = 0x80;
80DCF0 900555            MOV     DPTR,#0555H
80DCF3 7480              MOV     A,#080H
80DCF5 F0                MOVX    @DPTR,A
   66: 	XBYTE[ 0x555 ] = 0xAA;
80DCF6 74AA              MOV     A,#0AAH
80DCF8 F0                MOVX    @DPTR,A
   67: 	XBYTE[ 0x2AA ] = 0x55;	
80DCF9 9002AA            MOV     DPTR,#02AAH
80DCFC 7455              MOV     A,#055H
80DCFE F0                MOVX    @DPTR,A
   68: 
   69: 	FlashAddrH = ( ( uchar data* )&FlashAddr )[ 1 ];
80DCFF 7835              MOV     R0,#LOW FlashAddr+01H
80DD01 E6                MOV     A,@R0
;---- Variable 'FlashAddrH' assigned to Register 'R1' ----
80DD02 F9                MOV     R1,A
   70: 	FlashAddrL = FlashAddr & 0xFFFF;
;---- Variable 'FlashAddrL' assigned to Register 'R6/R7' ----
   71: 	PinAddr18 = FlashAddrH & 0x04;
80DD03 E9                MOV     A,R1
80DD04 A2E2              MOV     C,ACC.2
80DD06 9297              MOV     PinAddr18,C
   72: 	PinAddr17 = FlashAddrH & 0x02;
80DD08 A2E1              MOV     C,ACC.1
80DD0A 9296              MOV     PinAddr17,C
   73: 	PinAddr16 = FlashAddrH & 0x01;	
80DD0C 13                RRC     A
80DD0D 9295              MOV     PinAddr16,C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 545


   74: 	XBYTE[ FlashAddrL ] = 0x20;
80DD0F 8F82              MOV     DPL,R7
80DD11 8E83              MOV     DPH,R6
80DD13 7420              MOV     A,#020H
80DD15 F0                MOVX    @DPTR,A
80DD16         ?C0004?SSTFLASH:
   75: 
   76: 	while( (XBYTE[0] & 0x40) != (XBYTE[0] & 0x40) )
80DD16 900000            MOV     DPTR,#00H
80DD19 E0                MOVX    A,@DPTR
80DD1A 5440              ANL     A,#040H
80DD1C FD                MOV     R5,A
80DD1D E0                MOVX    A,@DPTR
80DD1E 5440              ANL     A,#040H
80DD20 6D                XRL     A,R5
80DD21 6003              JZ      ?C0005?SSTFLASH
   77: 		_nop_();
80DD23 00                NOP     
80DD24 80F0              SJMP    ?C0004?SSTFLASH
80DD26         ?C0005?SSTFLASH:
   78: 
   79: 	FlashAddrL  = FlashAddr & 0xffffff80;
80DD26 E537              MOV     A,FlashAddr+03H
80DD28 5480              ANL     A,#080H
80DD2A FF                MOV     R7,A
80DD2B E536              MOV     A,FlashAddr+02H
80DD2D FE                MOV     R6,A
   80: 	for( i = 0 ; i < SECTORSIZE ; i ++ )
;---- Variable 'i' assigned to Register 'R5' ----
80DD2E E4                CLR     A
80DD2F FD                MOV     R5,A
80DD30         ?C0006?SSTFLASH:
   81: 	{
   82: 		if ( XBYTE[ FlashAddrL ++ ] != 0xFF ) 
80DD30 0F                INC     R7
80DD31 EF                MOV     A,R7
80DD32 AA06              MOV     R2,AR6
80DD34 7001              JNZ     ?C0019?SSTFLASH
80DD36 0E                INC     R6
80DD37         ?C0019?SSTFLASH:
80DD37 14                DEC     A
80DD38 F582              MOV     DPL,A
80DD3A 8A83              MOV     DPH,R2
80DD3C E0                MOVX    A,@DPTR
80DD3D F4                CPL     A
80DD3E 6003              JZ      ?C0008?SSTFLASH
   83: 			return 0;
80DD40 C3                CLR     C
80DD41 8005              SJMP    ?C0010?SSTFLASH
   84: 	}
80DD43         ?C0008?SSTFLASH:
80DD43 0D                INC     R5
80DD44 BD80E9            CJNE    R5,#080H,?C0006?SSTFLASH
80DD47         ?C0007?SSTFLASH:
   85: 	return 1;
80DD47 D3                SETB    C
   86: }
80DD48         ?C0010?SSTFLASH:
80DD48 A522              ERET    
----- FUNCTION _SstFlashSectorErase (END) -------


----- FUNCTION _SstFlashStringProgam (BEGIN) -----
 FILE: 'SstFlash.c'
   88: bit SstFlashStringProgam( unsigned long FlashAddr , unsigned char idata* RamAddr , unsigned char len )		small
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 546


   89: {
80DD4A 8F40              MOV     FlashAddr+03H,R7
80DD4C 8E3F              MOV     FlashAddr+02H,R6
80DD4E 8D3E              MOV     FlashAddr+01H,R5
80DD50 8C3D              MOV     FlashAddr,R4
80DD52         ?C0011?SSTFLASH:
   90: 	unsigned  int data FlashAddrL;
   91: 	unsigned char data FlashAddrH;
   92: 
   93: 	while( len -- )
80DD52 AF42              MOV     R7,len
80DD54 1542              DEC     len
80DD56 EF                MOV     A,R7
80DD57 6068              JZ      ?C0012?SSTFLASH
   94: 	{		
   95: 		PinAddr18 = 0;
80DD59 C297              CLR     PinAddr18
   96: 		PinAddr17 = 0;
80DD5B C296              CLR     PinAddr17
   97: 		PinAddr16 = 0;
80DD5D C295              CLR     PinAddr16
   98: 		XBYTE[ 0x555 ] = 0xAA;
80DD5F 900555            MOV     DPTR,#0555H
80DD62 74AA              MOV     A,#0AAH
80DD64 F0                MOVX    @DPTR,A
   99: 		XBYTE[ 0x2AA ] = 0x55;
80DD65 9002AA            MOV     DPTR,#02AAH
80DD68 7455              MOV     A,#055H
80DD6A F0                MOVX    @DPTR,A
  100: 		XBYTE[ 0x555 ] = 0xA0;
80DD6B 900555            MOV     DPTR,#0555H
80DD6E 74A0              MOV     A,#0A0H
80DD70 F0                MOVX    @DPTR,A
  101: 		
  102: 		FlashAddrH = ( ( uchar data* )&FlashAddr )[ 1 ];
80DD71 783E              MOV     R0,#LOW FlashAddr+01H
80DD73 E6                MOV     A,@R0
;---- Variable 'FlashAddrH' assigned to Register 'R3' ----
80DD74 FB                MOV     R3,A
  103: 		FlashAddrL = FlashAddr & 0xFFFF;
80DD75 E540              MOV     A,FlashAddr+03H
80DD77 FF                MOV     R7,A
80DD78 E53F              MOV     A,FlashAddr+02H
80DD7A FE                MOV     R6,A
80DD7B 8E43              MOV     FlashAddrL,R6
80DD7D 8F44              MOV     FlashAddrL+01H,R7
  104: 		PinAddr18 = FlashAddrH & 0x04;
80DD7F EB                MOV     A,R3
80DD80 A2E2              MOV     C,ACC.2
80DD82 9297              MOV     PinAddr18,C
  105: 		PinAddr17 = FlashAddrH & 0x02;
80DD84 A2E1              MOV     C,ACC.1
80DD86 9296              MOV     PinAddr17,C
  106: 		PinAddr16 = FlashAddrH & 0x01;
80DD88 13                RRC     A
80DD89 9295              MOV     PinAddr16,C
  107: 		XBYTE[ FlashAddrL ] = *RamAddr;
80DD8B A841              MOV     R0,RamAddr
80DD8D E6                MOV     A,@R0
80DD8E 854482            MOV     DPL,FlashAddrL+01H
80DD91 854383            MOV     DPH,FlashAddrL
80DD94 F0                MOVX    @DPTR,A
80DD95         ?C0013?SSTFLASH:
  108: 	
  109: 		while( (XBYTE[0] & 0x40) != (XBYTE[0] & 0x40) )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 547


80DD95 900000            MOV     DPTR,#00H
80DD98 E0                MOVX    A,@DPTR
80DD99 5440              ANL     A,#040H
80DD9B FF                MOV     R7,A
80DD9C E0                MOVX    A,@DPTR
80DD9D 5440              ANL     A,#040H
80DD9F 6F                XRL     A,R7
80DDA0 6003              JZ      ?C0014?SSTFLASH
  110: 			_nop_();
80DDA2 00                NOP     
80DDA3 80F0              SJMP    ?C0013?SSTFLASH
80DDA5         ?C0014?SSTFLASH:
  111: 
  112: 		FlashAddr++;
80DDA5 E540              MOV     A,FlashAddr+03H
80DDA7 2401              ADD     A,#01H
80DDA9 FF                MOV     R7,A
80DDAA E4                CLR     A
80DDAB 353F              ADDC    A,FlashAddr+02H
80DDAD FE                MOV     R6,A
80DDAE E4                CLR     A
80DDAF 353E              ADDC    A,FlashAddr+01H
80DDB1 FD                MOV     R5,A
80DDB2 E4                CLR     A
80DDB3 353D              ADDC    A,FlashAddr
80DDB5 8F40              MOV     FlashAddr+03H,R7
80DDB7 8E3F              MOV     FlashAddr+02H,R6
80DDB9 8D3E              MOV     FlashAddr+01H,R5
80DDBB F53D              MOV     FlashAddr,A
  113: 		RamAddr++;
80DDBD 0541              INC     RamAddr
  114: 	}
80DDBF 8091              SJMP    ?C0011?SSTFLASH
80DDC1         ?C0012?SSTFLASH:
  115: 	return 1;
80DDC1 D3                SETB    C
  116: }
80DDC2         ?C0015?SSTFLASH:
80DDC2 A522              ERET    
----- FUNCTION _SstFlashStringProgam (END) -------


----- FUNCTION ?L?COM0016 (BEGIN) -----
80DDC4 90173D            MOV     DPTR,#Num
80DDC7 E0                MOVX    A,@DPTR
80DDC8 FF                MOV     R7,A
80DDC9 25E0              ADD     A,ACC
80DDCB 25E0              ADD     A,ACC
80DDCD 24A6              ADD     A,#LOW GoodsWaystr+03H
80DDCF F582              MOV     DPL,A
80DDD1 E4                CLR     A
80DDD2 3417              ADDC    A,#HIGH GoodsWaystr+03H
80DDD4 F583              MOV     DPH,A
80DDD6 E4                CLR     A
80DDD7 93                MOVC    A,@A+DPTR
80DDD8 243E              ADD     A,#LOW y_displaystr
80DDDA F582              MOV     DPL,A
80DDDC E4                CLR     A
80DDDD 3417              ADDC    A,#HIGH y_displaystr
80DDDF AD82              MOV     R5,DPL
80DDE1 FC                MOV     R4,A
80DDE2 90175A            MOV     DPTR,#?_ReadWriteGoodsParam?BYTE+05H
80DDE5 7417              MOV     A,#HIGH len
80DDE7 F0                MOVX    @DPTR,A
80DDE8 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 548


80DDE9 7454              MOV     A,#LOW len
80DDEB F0                MOVX    @DPTR,A
80DDEC C21A              CLR     ?_ReadWriteGoodsParam?BIT
80DDEE E4                CLR     A
80DDEF FB                MOV     R3,A
80DDF0 FA                MOV     R2,A
----- FUNCTION _ReadWriteGoodsParam (BEGIN) -----
 FILE: 'GoodsWaySet.c'
   43: void ReadWriteGoodsParam( u_char Num,u_char xdata *OutStr,u_char xdata *InStr ,u_char xdata *len, bit OutInFlag )
>> 
   44: {	
80DDF1 901756            MOV     DPTR,#OutStr
80DDF4 EC                MOV     A,R4
80DDF5 F0                MOVX    @DPTR,A
80DDF6 A3                INC     DPTR
80DDF7 ED                MOV     A,R5
80DDF8 F0                MOVX    @DPTR,A
80DDF9 A3                INC     DPTR
80DDFA EA                MOV     A,R2
80DDFB F0                MOVX    @DPTR,A
80DDFC A3                INC     DPTR
80DDFD EB                MOV     A,R3
80DDFE F0                MOVX    @DPTR,A
;---- Variable 'Num' assigned to Register 'R7' ----
   45: 	u_char  xdata Templen = 0;	
   46: 	u_char	xdata  i = 0;
80DDFF E4                CLR     A
80DE00 90175C            MOV     DPTR,#Templen
80DE03 F0                MOVX    @DPTR,A
   47: 	uint	xdata temp = 0;	
80DE04 A3                INC     DPTR
80DE05 F0                MOVX    @DPTR,A
   48: 
80DE06 A3                INC     DPTR
80DE07 F0                MOVX    @DPTR,A
80DE08 A3                INC     DPTR
80DE09 F0                MOVX    @DPTR,A
   49: 	switch( Num )
80DE0A EF                MOV     A,R7
80DE0B 14                DEC     A
80DE0C 6069              JZ      ?C0004?GOODSWAYSET
80DE0E 14                DEC     A
80DE0F 7003              JNZ     $ + 5H
80DE11 02E066            LJMP    ?C0017?GOODSWAYSET
80DE14 14                DEC     A
80DE15 7003              JNZ     $ + 5H
80DE17 02E160            LJMP    ?C0027?GOODSWAYSET
80DE1A 2403              ADD     A,#03H
80DE1C 6003              JZ      $ + 5H
80DE1E 02E2EF            LJMP    ?C0050?GOODSWAYSET
   50: 	{
   51: 		case 0:	//货道编号	
80DE21         ?C0002?GOODSWAYSET:
   52: 			if( OutInFlag == 0 )
80DE21 301A03            JNB     OutInFlag,$ + 6H
80DE24 02E2EF            LJMP    ?C0050?GOODSWAYSET
   53: 			{
   54: 				//Trace( "\n Get IP val = ");									
   55: 				//	Trace( " %bd ", SystemParameter.IP[i] );
   56: 				sprintf( OutStr, "%02bu", GoodsWaySetVal[m_SetArrayNo].WayNo );//GoodsWayNoList[m_SetArrayNo].GoodsWayNo)				
>> 
80DE27 901756            MOV     DPTR,#OutStr
80DE2A E0                MOVX    A,@DPTR
80DE2B FE                MOV     R6,A
80DE2C A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 549


80DE2D E0                MOVX    A,@DPTR
80DE2E AA06              MOV     R2,AR6
80DE30 F9                MOV     R1,A
80DE31 7B00              MOV     R3,#?C?XDATASEG
80DE33 C003              PUSH    AR3
80DE35 C002              PUSH    AR2
80DE37 C001              PUSH    AR1
80DE39 7B80              MOV     R3,#BYTE2 0801783H
80DE3B 7A17              MOV     R2,#HIGH 0801783H
80DE3D 7983              MOV     R1,#LOW 0801783H
80DE3F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80DE42 A5128007B6        ECALL   ?C?PSTXDATA
80DE47 902DF7            MOV     DPTR,#m_SetArrayNo
80DE4A E0                MOVX    A,@DPTR
80DE4B 75F005            MOV     B,#05H
80DE4E 900004            MOV     DPTR,#GoodsWaySetVal
80DE51 A51280079F        ECALL   ?C?OFFXADD
80DE56 E0                MOVX    A,@DPTR
80DE57 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80DE5A F0                MOVX    @DPTR,A
80DE5B D001              POP     AR1
80DE5D D002              POP     AR2
80DE5F D003              POP     AR3
80DE61 A512800949        ECALL   _sprintf
   57: 				*len = 2;
80DE66 90175A            MOV     DPTR,#len
80DE69 E0                MOVX    A,@DPTR
80DE6A FE                MOV     R6,A
80DE6B A3                INC     DPTR
80DE6C E0                MOVX    A,@DPTR
80DE6D F582              MOV     DPL,A
80DE6F 8E83              MOV     DPH,R6
80DE71 7402              MOV     A,#02H
80DE73 F0                MOVX    @DPTR,A
   58: 			}			
   59: 		break;
80DE74 02E2EF            LJMP    ?C0050?GOODSWAYSET
   60: 		case 1://单价
80DE77         ?C0004?GOODSWAYSET:
   61: 			////////////////////
   62: 			if( OutInFlag == 0 )
80DE77 301A03            JNB     OutInFlag,$ + 6H
80DE7A 02DFC3            LJMP    ?C0005?GOODSWAYSET
   63: 			{
   64: 				switch( SystemParameter.curUnit )
80DE7D 900468            MOV     DPTR,#SystemParameter+048H
80DE80 E0                MOVX    A,@DPTR
80DE81 FE                MOV     R6,A
80DE82 A3                INC     DPTR
80DE83 E0                MOVX    A,@DPTR
80DE84 FF                MOV     R7,A
80DE85 EE                MOV     A,R6
80DE86 6003              JZ      $ + 5H
80DE88 02E2EF            LJMP    ?C0050?GOODSWAYSET
80DE8B EF                MOV     A,R7
80DE8C 24F6              ADD     A,#0F6H
80DE8E 604B              JZ      ?C0008?GOODSWAYSET
80DE90 24A6              ADD     A,#0A6H
80DE92 7003              JNZ     $ + 5H
80DE94 02DF42            LJMP    ?C0009?GOODSWAYSET
80DE97 2463              ADD     A,#063H
80DE99 6003              JZ      $ + 5H
80DE9B 02E2EF            LJMP    ?C0050?GOODSWAYSET
   65: 				{
   66: 					case 1:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 550


80DE9E         ?C0007?GOODSWAYSET:
   67: 						*len = sprintf( OutStr, "%u", GoodsWaySetVal[m_SetArrayNo].Price );
80DE9E 901756            MOV     DPTR,#OutStr
80DEA1 E0                MOVX    A,@DPTR
80DEA2 FE                MOV     R6,A
80DEA3 A3                INC     DPTR
80DEA4 E0                MOVX    A,@DPTR
80DEA5 AA06              MOV     R2,AR6
80DEA7 F9                MOV     R1,A
80DEA8 7B00              MOV     R3,#?C?XDATASEG
80DEAA C003              PUSH    AR3
80DEAC C002              PUSH    AR2
80DEAE C001              PUSH    AR1
80DEB0 7B80              MOV     R3,#BYTE2 0801789H
80DEB2 7A17              MOV     R2,#HIGH 0801789H
80DEB4 7989              MOV     R1,#LOW 0801789H
80DEB6 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80DEB9 A5128007B6        ECALL   ?C?PSTXDATA
80DEBE 902DF7            MOV     DPTR,#m_SetArrayNo
80DEC1 E0                MOVX    A,@DPTR
80DEC2 75F005            MOV     B,#05H
80DEC5 900006            MOV     DPTR,#GoodsWaySetVal+02H
80DEC8 A51280079F        ECALL   ?C?OFFXADD
80DECD E0                MOVX    A,@DPTR
80DECE FF                MOV     R7,A
80DECF A3                INC     DPTR
80DED0 E0                MOVX    A,@DPTR
80DED1 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80DED4 CF                XCH     A,R7
80DED5 F0                MOVX    @DPTR,A
80DED6 A3                INC     DPTR
80DED7 EF                MOV     A,R7
   68: 					break;				
80DED8 02DFA7            LJMP    ?C0099?GOODSWAYSET
   69: 					case 10:
80DEDB         ?C0008?GOODSWAYSET:
   70: 						*len = sprintf( OutStr, "%u.%u", GoodsWaySetVal[m_SetArrayNo].Price/SystemParameter.curUnit, GoodsWaySetVal
>> [m_SetArrayNo].Price%SystemParameter.curUnit );
80DEDB 901756            MOV     DPTR,#OutStr
80DEDE E0                MOVX    A,@DPTR
80DEDF FE                MOV     R6,A
80DEE0 A3                INC     DPTR
80DEE1 E0                MOVX    A,@DPTR
80DEE2 AA06              MOV     R2,AR6
80DEE4 F9                MOV     R1,A
80DEE5 7B00              MOV     R3,#?C?XDATASEG
80DEE7 C003              PUSH    AR3
80DEE9 C002              PUSH    AR2
80DEEB C001              PUSH    AR1
80DEED 7B80              MOV     R3,#BYTE2 080178CH
80DEEF 7A17              MOV     R2,#HIGH 080178CH
80DEF1 798C              MOV     R1,#LOW 080178CH
80DEF3 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80DEF6 A5128007B6        ECALL   ?C?PSTXDATA
80DEFB 902DF7            MOV     DPTR,#m_SetArrayNo
80DEFE E0                MOVX    A,@DPTR
80DEFF 75F005            MOV     B,#05H
80DF02 900006            MOV     DPTR,#GoodsWaySetVal+02H
80DF05 A51280079F        ECALL   ?C?OFFXADD
80DF0A E0                MOVX    A,@DPTR
80DF0B FA                MOV     R2,A
80DF0C A3                INC     DPTR
80DF0D E0                MOVX    A,@DPTR
80DF0E FB                MOV     R3,A
80DF0F 900468            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 551


80DF12 E0                MOVX    A,@DPTR
80DF13 FC                MOV     R4,A
80DF14 A3                INC     DPTR
80DF15 E0                MOVX    A,@DPTR
80DF16 FD                MOV     R5,A
80DF17 AF03              MOV     R7,AR3
80DF19 AE02              MOV     R6,AR2
80DF1B A51280056C        ECALL   ?C?UIDIV
80DF20 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80DF23 EE                MOV     A,R6
80DF24 F0                MOVX    @DPTR,A
80DF25 A3                INC     DPTR
80DF26 EF                MOV     A,R7
80DF27 F0                MOVX    @DPTR,A
80DF28 900468            MOV     DPTR,#SystemParameter+048H
80DF2B E0                MOVX    A,@DPTR
80DF2C FC                MOV     R4,A
80DF2D A3                INC     DPTR
80DF2E E0                MOVX    A,@DPTR
80DF2F FD                MOV     R5,A
80DF30 AF03              MOV     R7,AR3
80DF32 AE02              MOV     R6,AR2
80DF34 A51280056C        ECALL   ?C?UIDIV
80DF39 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
80DF3C EC                MOV     A,R4
80DF3D F0                MOVX    @DPTR,A
80DF3E A3                INC     DPTR
80DF3F ED                MOV     A,R5
80DF40         
   71: 					break;
80DF40 8065              SJMP    ?C0099?GOODSWAYSET
   72: 					case 100:
80DF42         ?C0009?GOODSWAYSET:
   73: 						*len = sprintf( OutStr, "%u.%02u", GoodsWaySetVal[m_SetArrayNo].Price/SystemParameter.curUnit, GoodsWaySetV
>> al[m_SetArrayNo].Price%SystemParameter.curUnit );
80DF42 901756            MOV     DPTR,#OutStr
80DF45 E0                MOVX    A,@DPTR
80DF46 FE                MOV     R6,A
80DF47 A3                INC     DPTR
80DF48 E0                MOVX    A,@DPTR
80DF49 AA06              MOV     R2,AR6
80DF4B F9                MOV     R1,A
80DF4C 7B00              MOV     R3,#?C?XDATASEG
80DF4E C003              PUSH    AR3
80DF50 C002              PUSH    AR2
80DF52 C001              PUSH    AR1
80DF54 7B80              MOV     R3,#BYTE2 0801792H
80DF56 7A17              MOV     R2,#HIGH 0801792H
80DF58 7992              MOV     R1,#LOW 0801792H
80DF5A 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80DF5D A5128007B6        ECALL   ?C?PSTXDATA
80DF62 902DF7            MOV     DPTR,#m_SetArrayNo
80DF65 E0                MOVX    A,@DPTR
80DF66 75F005            MOV     B,#05H
80DF69 900006            MOV     DPTR,#GoodsWaySetVal+02H
80DF6C A51280079F        ECALL   ?C?OFFXADD
80DF71 E0                MOVX    A,@DPTR
80DF72 FA                MOV     R2,A
80DF73 A3                INC     DPTR
80DF74 E0                MOVX    A,@DPTR
80DF75 FB                MOV     R3,A
80DF76 900468            MOV     DPTR,#SystemParameter+048H
80DF79 E0                MOVX    A,@DPTR
80DF7A FC                MOV     R4,A
80DF7B A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 552


80DF7C E0                MOVX    A,@DPTR
80DF7D FD                MOV     R5,A
80DF7E AF03              MOV     R7,AR3
80DF80 AE02              MOV     R6,AR2
80DF82 A51280056C        ECALL   ?C?UIDIV
80DF87 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80DF8A EE                MOV     A,R6
80DF8B F0                MOVX    @DPTR,A
80DF8C A3                INC     DPTR
80DF8D EF                MOV     A,R7
80DF8E F0                MOVX    @DPTR,A
80DF8F 900468            MOV     DPTR,#SystemParameter+048H
80DF92 E0                MOVX    A,@DPTR
80DF93 FC                MOV     R4,A
80DF94 A3                INC     DPTR
80DF95 E0                MOVX    A,@DPTR
80DF96 FD                MOV     R5,A
80DF97 AF03              MOV     R7,AR3
80DF99 AE02              MOV     R6,AR2
80DF9B A51280056C        ECALL   ?C?UIDIV
80DFA0 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
80DFA3 EC                MOV     A,R4
80DFA4 F0                MOVX    @DPTR,A
80DFA5 A3                INC     DPTR
80DFA6 ED                MOV     A,R5
80DFA7         
80DFA7 F0                MOVX    @DPTR,A
80DFA8 D001              POP     AR1
80DFAA D002              POP     AR2
80DFAC D003              POP     AR3
80DFAE A512800949        ECALL   _sprintf
80DFB3 90175A            MOV     DPTR,#len
80DFB6 E0                MOVX    A,@DPTR
80DFB7 FC                MOV     R4,A
80DFB8 A3                INC     DPTR
80DFB9 E0                MOVX    A,@DPTR
80DFBA F582              MOV     DPL,A
80DFBC 8C83              MOV     DPH,R4
80DFBE EF                MOV     A,R7
80DFBF F0                MOVX    @DPTR,A
   74: 					break;					
80DFC0 02E2EF            LJMP    ?C0050?GOODSWAYSET
   75: 				}
   76: 			}
80DFC3         ?C0005?GOODSWAYSET:
   77: 			else
   78: 			{
   79: 				Templen = *len;
80DFC3 90175A            MOV     DPTR,#len
80DFC6 E0                MOVX    A,@DPTR
80DFC7 FE                MOV     R6,A
80DFC8 A3                INC     DPTR
80DFC9 E0                MOVX    A,@DPTR
80DFCA F582              MOV     DPL,A
80DFCC 8E83              MOV     DPH,R6
80DFCE E0                MOVX    A,@DPTR
80DFCF 90175C            MOV     DPTR,#Templen
80DFD2 F0                MOVX    @DPTR,A
   80: 				if( Templen == 0 )
80DFD3 7003              JNZ     $ + 5H
80DFD5 02E2EF            LJMP    ?C0050?GOODSWAYSET
   81: 					break;
80DFD8         ?C0011?GOODSWAYSET:
   82: 				if( Templen > 5 )
80DFD8 90175C            MOV     DPTR,#Templen
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 553


80DFDB E0                MOVX    A,@DPTR
80DFDC D3                SETB    C
80DFDD 9405              SUBB    A,#05H
80DFDF 4003              JC      ?C0012?GOODSWAYSET
   83: 					Templen = 5;
80DFE1 7405              MOV     A,#05H
80DFE3 F0                MOVX    @DPTR,A
80DFE4         ?C0012?GOODSWAYSET:
   84: 				GoodsWaySetVal[m_SetArrayNo].Price = 0;
80DFE4 902DF7            MOV     DPTR,#m_SetArrayNo
80DFE7 E0                MOVX    A,@DPTR
80DFE8 75F005            MOV     B,#05H
80DFEB 900006            MOV     DPTR,#GoodsWaySetVal+02H
80DFEE A51280079F        ECALL   ?C?OFFXADD
80DFF3 E4                CLR     A
80DFF4 F0                MOVX    @DPTR,A
80DFF5 A3                INC     DPTR
80DFF6 F0                MOVX    @DPTR,A
   85: 				for( i = 0; i < Templen; i ++ )
80DFF7 90175D            MOV     DPTR,#i
80DFFA F0                MOVX    @DPTR,A
80DFFB         ?C0013?GOODSWAYSET:
80DFFB 90175C            MOV     DPTR,#Templen
80DFFE E0                MOVX    A,@DPTR
80DFFF FF                MOV     R7,A
80E000 A3                INC     DPTR
80E001 E0                MOVX    A,@DPTR
80E002 FE                MOV     R6,A
80E003 C3                CLR     C
80E004 9F                SUBB    A,R7
80E005 4003              JC      $ + 5H
80E007 02E2E9            LJMP    ?C0101?GOODSWAYSET
   86: 				{					
   87: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80E00A 901758            MOV     DPTR,#InStr
80E00D E0                MOVX    A,@DPTR
80E00E FC                MOV     R4,A
80E00F A3                INC     DPTR
80E010 E0                MOVX    A,@DPTR
80E011 2E                ADD     A,R6
80E012 F582              MOV     DPL,A
80E014 E4                CLR     A
80E015 3C                ADDC    A,R4
80E016 F583              MOV     DPH,A
80E018 E0                MOVX    A,@DPTR
80E019 FF                MOV     R7,A
80E01A C3                CLR     C
80E01B 9400              SUBB    A,#00H
80E01D 403F              JC      ?C0015?GOODSWAYSET
80E01F EF                MOV     A,R7
80E020 D3                SETB    C
80E021 9409              SUBB    A,#09H
80E023 5039              JNC     ?C0015?GOODSWAYSET
   88: 						GoodsWaySetVal[m_SetArrayNo].Price = GoodsWaySetVal[m_SetArrayNo].Price * 10 + *( InStr + i );					
80E025 EF                MOV     A,R7
80E026 FB                MOV     R3,A
80E027 7A00              MOV     R2,#00H
80E029 902DF7            MOV     DPTR,#m_SetArrayNo
80E02C E0                MOVX    A,@DPTR
80E02D F9                MOV     R1,A
80E02E 75F005            MOV     B,#05H
80E031 900006            MOV     DPTR,#GoodsWaySetVal+02H
80E034 A51280079F        ECALL   ?C?OFFXADD
80E039 E0                MOVX    A,@DPTR
80E03A FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 554


80E03B A3                INC     DPTR
80E03C E0                MOVX    A,@DPTR
80E03D FF                MOV     R7,A
80E03E 7C00              MOV     R4,#00H
80E040 7D0A              MOV     R5,#0AH
80E042 A512800559        ECALL   ?C?IMUL
80E047 EF                MOV     A,R7
80E048 2B                ADD     A,R3
80E049 FF                MOV     R7,A
80E04A EA                MOV     A,R2
80E04B 3E                ADDC    A,R6
80E04C FE                MOV     R6,A
80E04D 75F005            MOV     B,#05H
80E050 E9                MOV     A,R1
80E051 900006            MOV     DPTR,#GoodsWaySetVal+02H
80E054 A51280079F        ECALL   ?C?OFFXADD
80E059 EE                MOV     A,R6
80E05A F0                MOVX    @DPTR,A
80E05B A3                INC     DPTR
80E05C EF                MOV     A,R7
80E05D F0                MOVX    @DPTR,A
   89: 				}	
80E05E         ?C0015?GOODSWAYSET:
80E05E 90175D            MOV     DPTR,#i
80E061 E0                MOVX    A,@DPTR
80E062 04                INC     A
80E063 F0                MOVX    @DPTR,A
80E064 8095              SJMP    ?C0013?GOODSWAYSET
   90: 				GoodsSetSave = 1;			
   91: 			}			
   92: 		break;
   93: 		case 2://货品现存量				
80E066         ?C0017?GOODSWAYSET:
   94: 			if(  OutInFlag == 0 )
80E066 201A50            JB      OutInFlag,?C0018?GOODSWAYSET
   95: 			{					
   96: 				sprintf( OutStr, "%3bu", GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum );				
80E069 901756            MOV     DPTR,#OutStr
80E06C E0                MOVX    A,@DPTR
80E06D FE                MOV     R6,A
80E06E A3                INC     DPTR
80E06F E0                MOVX    A,@DPTR
80E070 AA06              MOV     R2,AR6
80E072 F9                MOV     R1,A
80E073 7B00              MOV     R3,#?C?XDATASEG
80E075 C003              PUSH    AR3
80E077 C002              PUSH    AR2
80E079 C001              PUSH    AR1
80E07B 7B80              MOV     R3,#BYTE2 080179AH
80E07D 7A17              MOV     R2,#HIGH 080179AH
80E07F 799A              MOV     R1,#LOW 080179AH
80E081 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80E084 A5128007B6        ECALL   ?C?PSTXDATA
80E089 902DF7            MOV     DPTR,#m_SetArrayNo
80E08C E0                MOVX    A,@DPTR
80E08D 75F005            MOV     B,#05H
80E090 900008            MOV     DPTR,#GoodsWaySetVal+04H
80E093 A51280079F        ECALL   ?C?OFFXADD
80E098 E0                MOVX    A,@DPTR
80E099 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80E09C F0                MOVX    @DPTR,A
80E09D D001              POP     AR1
80E09F D002              POP     AR2
80E0A1 D003              POP     AR3
80E0A3 A512800949        ECALL   _sprintf
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 555


   97: 				*len = 3;								
80E0A8 90175A            MOV     DPTR,#len
80E0AB E0                MOVX    A,@DPTR
80E0AC FE                MOV     R6,A
80E0AD A3                INC     DPTR
80E0AE E0                MOVX    A,@DPTR
80E0AF F582              MOV     DPL,A
80E0B1 8E83              MOV     DPH,R6
80E0B3 7403              MOV     A,#03H
80E0B5 F0                MOVX    @DPTR,A
   98: 			}			
80E0B6 02E2EF            LJMP    ?C0050?GOODSWAYSET
80E0B9         ?C0018?GOODSWAYSET:
   99: 			else//存入
  100: 			{
  101: 				Templen = *len;
80E0B9 90175A            MOV     DPTR,#len
80E0BC E0                MOVX    A,@DPTR
80E0BD FE                MOV     R6,A
80E0BE A3                INC     DPTR
80E0BF E0                MOVX    A,@DPTR
80E0C0 F582              MOV     DPL,A
80E0C2 8E83              MOV     DPH,R6
80E0C4 E0                MOVX    A,@DPTR
80E0C5 90175C            MOV     DPTR,#Templen
80E0C8 F0                MOVX    @DPTR,A
  102: 				if( Templen == 0 )
80E0C9 7003              JNZ     $ + 5H
80E0CB 02E2EF            LJMP    ?C0050?GOODSWAYSET
  103: 					break;
80E0CE         ?C0020?GOODSWAYSET:
  104: 				if( Templen > 3 )
80E0CE 90175C            MOV     DPTR,#Templen
80E0D1 E0                MOVX    A,@DPTR
80E0D2 D3                SETB    C
80E0D3 9403              SUBB    A,#03H
80E0D5 4003              JC      ?C0021?GOODSWAYSET
  105: 					Templen = 3;	
80E0D7 7403              MOV     A,#03H
80E0D9 F0                MOVX    @DPTR,A
80E0DA         ?C0021?GOODSWAYSET:
  106: 				GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum = 0;	
80E0DA 902DF7            MOV     DPTR,#m_SetArrayNo
80E0DD E0                MOVX    A,@DPTR
80E0DE 75F005            MOV     B,#05H
80E0E1 900008            MOV     DPTR,#GoodsWaySetVal+04H
80E0E4 A51280079F        ECALL   ?C?OFFXADD
80E0E9 E4                CLR     A
80E0EA F0                MOVX    @DPTR,A
  107: 				for( i = 0; i < Templen; i ++ )
80E0EB 90175D            MOV     DPTR,#i
80E0EE F0                MOVX    @DPTR,A
80E0EF         ?C0022?GOODSWAYSET:
80E0EF 90175C            MOV     DPTR,#Templen
80E0F2 E0                MOVX    A,@DPTR
80E0F3 FF                MOV     R7,A
80E0F4 A3                INC     DPTR
80E0F5 E0                MOVX    A,@DPTR
80E0F6 FE                MOV     R6,A
80E0F7 C3                CLR     C
80E0F8 9F                SUBB    A,R7
80E0F9 504A              JNC     ?C0023?GOODSWAYSET
  108: 				{					
  109: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80E0FB 901758            MOV     DPTR,#InStr
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 556


80E0FE E0                MOVX    A,@DPTR
80E0FF FC                MOV     R4,A
80E100 A3                INC     DPTR
80E101 E0                MOVX    A,@DPTR
80E102 2E                ADD     A,R6
80E103 F582              MOV     DPL,A
80E105 E4                CLR     A
80E106 3C                ADDC    A,R4
80E107 F583              MOV     DPH,A
80E109 E0                MOVX    A,@DPTR
80E10A FF                MOV     R7,A
80E10B C3                CLR     C
80E10C 9400              SUBB    A,#00H
80E10E 402D              JC      ?C0024?GOODSWAYSET
80E110 EF                MOV     A,R7
80E111 D3                SETB    C
80E112 9409              SUBB    A,#09H
80E114 5027              JNC     ?C0024?GOODSWAYSET
  110: 						GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum = 
80E116 902DF7            MOV     DPTR,#m_SetArrayNo
80E119 E0                MOVX    A,@DPTR
80E11A FE                MOV     R6,A
80E11B 75F005            MOV     B,#05H
80E11E 900008            MOV     DPTR,#GoodsWaySetVal+04H
80E121 A51280079F        ECALL   ?C?OFFXADD
80E126 E0                MOVX    A,@DPTR
80E127 75F00A            MOV     B,#0AH
80E12A A4                MUL     AB
80E12B FD                MOV     R5,A
80E12C EF                MOV     A,R7
80E12D 2D                ADD     A,R5
80E12E FF                MOV     R7,A
80E12F 75F005            MOV     B,#05H
80E132 EE                MOV     A,R6
80E133 900008            MOV     DPTR,#GoodsWaySetVal+04H
80E136 A51280079F        ECALL   ?C?OFFXADD
80E13B EF                MOV     A,R7
80E13C F0                MOVX    @DPTR,A
  111: 								GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum * 10 + *( InStr + i );					
  112: 				}
80E13D         ?C0024?GOODSWAYSET:
80E13D 90175D            MOV     DPTR,#i
80E140 E0                MOVX    A,@DPTR
80E141 04                INC     A
80E142 F0                MOVX    @DPTR,A
80E143 80AA              SJMP    ?C0022?GOODSWAYSET
80E145         ?C0023?GOODSWAYSET:
  113: 				if( GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum == 0 )								
80E145 902DF7            MOV     DPTR,#m_SetArrayNo
80E148 E0                MOVX    A,@DPTR
80E149 75F005            MOV     B,#05H
80E14C 900008            MOV     DPTR,#GoodsWaySetVal+04H
80E14F A51280079F        ECALL   ?C?OFFXADD
80E154 E0                MOVX    A,@DPTR
80E155 7006              JNZ     ?C0026?GOODSWAYSET
  114: 					Templen = 3;
80E157 90175C            MOV     DPTR,#Templen
80E15A 7403              MOV     A,#03H
80E15C F0                MOVX    @DPTR,A
80E15D         ?C0026?GOODSWAYSET:
  115: 				GoodsSetSave = 1;
80E15D         
  116: 			}						
  117: 		break;	
80E15D 02E2E9            LJMP    ?C0101?GOODSWAYSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 557


  118: 		case 3:// 货道状态
80E160         ?C0027?GOODSWAYSET:
  119: 			if(  OutInFlag == 0 )
80E160 301A03            JNB     OutInFlag,$ + 6H
80E163 02E209            LJMP    ?C0028?GOODSWAYSET
  120: 			{				
  121: 				Templen = 1;
80E166 90175C            MOV     DPTR,#Templen
80E169 7401              MOV     A,#01H
80E16B F0                MOVX    @DPTR,A
  122: 				if( GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum == 0 )
80E16C 902DF7            MOV     DPTR,#m_SetArrayNo
80E16F E0                MOVX    A,@DPTR
80E170 FF                MOV     R7,A
80E171 75F005            MOV     B,#05H
80E174 900008            MOV     DPTR,#GoodsWaySetVal+04H
80E177 A51280079F        ECALL   ?C?OFFXADD
80E17C E0                MOVX    A,@DPTR
80E17D 7006              JNZ     ?C0029?GOODSWAYSET
  123: 					Templen = 3;
80E17F 90175C            MOV     DPTR,#Templen
80E182 7403              MOV     A,#03H
80E184 F0                MOVX    @DPTR,A
80E185         ?C0029?GOODSWAYSET:
  124: 				i = ( GoodsWaySetVal[m_SetArrayNo].WayState & 0x0f );				
80E185 75F005            MOV     B,#05H
80E188 EF                MOV     A,R7
80E189 900005            MOV     DPTR,#GoodsWaySetVal+01H
80E18C A51280079F        ECALL   ?C?OFFXADD
80E191 E0                MOVX    A,@DPTR
80E192 540F              ANL     A,#0FH
80E194 90175D            MOV     DPTR,#i
80E197 F0                MOVX    @DPTR,A
  125: 				if( ( i & 0x01 ) != 0x01 )
80E198 20E007            JB      ACC.0,?C0030?GOODSWAYSET
  126: 					Templen = 0;				
80E19B E4                CLR     A
80E19C 90175C            MOV     DPTR,#Templen
80E19F F0                MOVX    @DPTR,A
80E1A0 8026              SJMP    ?C0031?GOODSWAYSET
80E1A2         ?C0030?GOODSWAYSET:
  127: 				else if( ( i & 0x02 ) == 0x02 )
80E1A2 90175D            MOV     DPTR,#i
80E1A5 E0                MOVX    A,@DPTR
80E1A6 FF                MOV     R7,A
80E1A7 30E108            JNB     ACC.1,?C0032?GOODSWAYSET
  128: 					Templen = 2;
80E1AA 90175C            MOV     DPTR,#Templen
80E1AD 7402              MOV     A,#02H
80E1AF F0                MOVX    @DPTR,A
80E1B0 8016              SJMP    ?C0031?GOODSWAYSET
80E1B2         ?C0032?GOODSWAYSET:
  129: 				else if( ( i & 0x04 ) == 0x04 )
80E1B2 EF                MOV     A,R7
80E1B3 30E208            JNB     ACC.2,?C0034?GOODSWAYSET
  130: 					Templen = 3;
80E1B6 90175C            MOV     DPTR,#Templen
80E1B9 7403              MOV     A,#03H
80E1BB F0                MOVX    @DPTR,A
80E1BC 800A              SJMP    ?C0031?GOODSWAYSET
80E1BE         ?C0034?GOODSWAYSET:
  131: 				else if( ( i & 0x08 ) == 0x08 )
80E1BE EF                MOV     A,R7
80E1BF 30E306            JNB     ACC.3,?C0031?GOODSWAYSET
  132: 					Templen = 4;				
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 558


80E1C2 90175C            MOV     DPTR,#Templen
80E1C5 7404              MOV     A,#04H
80E1C7 F0                MOVX    @DPTR,A
80E1C8         ?C0031?GOODSWAYSET:
  133: 				sprintf( OutStr, "%bu", Templen );				
80E1C8 901756            MOV     DPTR,#OutStr
80E1CB E0                MOVX    A,@DPTR
80E1CC FE                MOV     R6,A
80E1CD A3                INC     DPTR
80E1CE E0                MOVX    A,@DPTR
80E1CF AA06              MOV     R2,AR6
80E1D1 F9                MOV     R1,A
80E1D2 7B00              MOV     R3,#?C?XDATASEG
80E1D4 C003              PUSH    AR3
80E1D6 C002              PUSH    AR2
80E1D8 C001              PUSH    AR1
80E1DA 7B80              MOV     R3,#BYTE2 080179FH
80E1DC 7A17              MOV     R2,#HIGH 080179FH
80E1DE 799F              MOV     R1,#LOW 080179FH
80E1E0 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80E1E3 A5128007B6        ECALL   ?C?PSTXDATA
80E1E8 90175C            MOV     DPTR,#Templen
80E1EB E0                MOVX    A,@DPTR
80E1EC 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80E1EF F0                MOVX    @DPTR,A
80E1F0 D001              POP     AR1
80E1F2 D002              POP     AR2
80E1F4 D003              POP     AR3
80E1F6 A512800949        ECALL   _sprintf
  134: 				*len = 1;				
80E1FB 90175A            MOV     DPTR,#len
80E1FE E0                MOVX    A,@DPTR
80E1FF FE                MOV     R6,A
80E200 A3                INC     DPTR
80E201 E0                MOVX    A,@DPTR
80E202 F582              MOV     DPL,A
80E204 8E83              MOV     DPH,R6
  135: 			}			
80E206 02E2EC            LJMP    ?C0102?GOODSWAYSET
80E209         ?C0028?GOODSWAYSET:
  136: 			else//存入
  137: 			{
  138: 				Templen = *len;
80E209 90175A            MOV     DPTR,#len
80E20C E0                MOVX    A,@DPTR
80E20D FE                MOV     R6,A
80E20E A3                INC     DPTR
80E20F E0                MOVX    A,@DPTR
80E210 F582              MOV     DPL,A
80E212 8E83              MOV     DPH,R6
80E214 E0                MOVX    A,@DPTR
80E215 90175C            MOV     DPTR,#Templen
80E218 F0                MOVX    @DPTR,A
  139: 				if( Templen == 0 )
80E219 7003              JNZ     $ + 5H
80E21B 02E2EF            LJMP    ?C0050?GOODSWAYSET
  140: 					break;
80E21E         ?C0038?GOODSWAYSET:
  141: 				if( Templen > 1 )
80E21E 90175C            MOV     DPTR,#Templen
80E221 E0                MOVX    A,@DPTR
80E222 D3                SETB    C
80E223 9401              SUBB    A,#01H
80E225 4003              JC      ?C0039?GOODSWAYSET
  142: 					Templen = 1;	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 559


80E227 7401              MOV     A,#01H
80E229 F0                MOVX    @DPTR,A
80E22A         ?C0039?GOODSWAYSET:
  143: 				GoodsWaySetVal[m_SetArrayNo].WayState = 0x01;	
80E22A 902DF7            MOV     DPTR,#m_SetArrayNo
80E22D E0                MOVX    A,@DPTR
80E22E FF                MOV     R7,A
80E22F 75F005            MOV     B,#05H
80E232 900005            MOV     DPTR,#GoodsWaySetVal+01H
80E235 A51280079F        ECALL   ?C?OFFXADD
80E23A 7401              MOV     A,#01H
80E23C F0                MOVX    @DPTR,A
  144: 				if( *InStr == 0 )//手动设为不确定
80E23D 901758            MOV     DPTR,#InStr
80E240 E0                MOVX    A,@DPTR
80E241 FC                MOV     R4,A
80E242 A3                INC     DPTR
80E243 E0                MOVX    A,@DPTR
80E244 F582              MOV     DPL,A
80E246 8C83              MOV     DPH,R4
80E248 E0                MOVX    A,@DPTR
80E249 FE                MOV     R6,A
80E24A 7009              JNZ     ?C0040?GOODSWAYSET
  145: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x00;
80E24C 75F005            MOV     B,#05H
80E24F EF                MOV     A,R7
80E250 900005            MOV     DPTR,#GoodsWaySetVal+01H
80E253 8059              SJMP    ?C0103?GOODSWAYSET
80E255         ?C0040?GOODSWAYSET:
  146: 				else if( *InStr == 1 )//手动设为正常
80E255 EE                MOV     A,R6
80E256 B40114            CJNE    A,#01H,?C0042?GOODSWAYSET
  147: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x01; 
80E259 902DF7            MOV     DPTR,#m_SetArrayNo
80E25C E0                MOVX    A,@DPTR
80E25D 75F005            MOV     B,#05H
80E260 900005            MOV     DPTR,#GoodsWaySetVal+01H
80E263 A51280079F        ECALL   ?C?OFFXADD
80E268 7401              MOV     A,#01H
80E26A F0                MOVX    @DPTR,A
80E26B 807C              SJMP    ?C0041?GOODSWAYSET
80E26D         ?C0042?GOODSWAYSET:
  148: 				else if( *InStr == 2 )//手动设为故障
80E26D 901758            MOV     DPTR,#InStr
80E270 E0                MOVX    A,@DPTR
80E271 FE                MOV     R6,A
80E272 A3                INC     DPTR
80E273 E0                MOVX    A,@DPTR
80E274 F582              MOV     DPL,A
80E276 8E83              MOV     DPH,R6
80E278 E0                MOVX    A,@DPTR
80E279 FF                MOV     R7,A
80E27A B40214            CJNE    A,#02H,?C0044?GOODSWAYSET
  149: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x03;
80E27D 902DF7            MOV     DPTR,#m_SetArrayNo
80E280 E0                MOVX    A,@DPTR
80E281 75F005            MOV     B,#05H
80E284 900005            MOV     DPTR,#GoodsWaySetVal+01H
80E287 A51280079F        ECALL   ?C?OFFXADD
80E28C 7403              MOV     A,#03H
80E28E F0                MOVX    @DPTR,A
80E28F 8058              SJMP    ?C0041?GOODSWAYSET
80E291         ?C0044?GOODSWAYSET:
  150: 				else if( *InStr == 3 )//手动设为无货
80E291 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 560


80E292 B40322            CJNE    A,#03H,?C0046?GOODSWAYSET
  151: 				{
  152: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x05;
80E295 902DF7            MOV     DPTR,#m_SetArrayNo
80E298 E0                MOVX    A,@DPTR
80E299 FF                MOV     R7,A
80E29A 75F005            MOV     B,#05H
80E29D 900005            MOV     DPTR,#GoodsWaySetVal+01H
80E2A0 A51280079F        ECALL   ?C?OFFXADD
80E2A5 7405              MOV     A,#05H
80E2A7 F0                MOVX    @DPTR,A
  153: 					GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum = 0;
80E2A8 F5F0              MOV     B,A
80E2AA EF                MOV     A,R7
80E2AB 900008            MOV     DPTR,#GoodsWaySetVal+04H
80E2AE         
80E2AE A51280079F        ECALL   ?C?OFFXADD
80E2B3 E4                CLR     A
80E2B4 F0                MOVX    @DPTR,A
  154: 				}
80E2B5 8032              SJMP    ?C0041?GOODSWAYSET
80E2B7         ?C0046?GOODSWAYSET:
  155: 				else if( *InStr == 4 )//手动设为板坏
80E2B7 901758            MOV     DPTR,#InStr
80E2BA E0                MOVX    A,@DPTR
80E2BB FE                MOV     R6,A
80E2BC A3                INC     DPTR
80E2BD E0                MOVX    A,@DPTR
80E2BE F582              MOV     DPL,A
80E2C0 8E83              MOV     DPH,R6
80E2C2 E0                MOVX    A,@DPTR
80E2C3 FF                MOV     R7,A
80E2C4 902DF7            MOV     DPTR,#m_SetArrayNo
80E2C7 B40411            CJNE    A,#04H,?C0048?GOODSWAYSET
  156: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x09;
80E2CA E0                MOVX    A,@DPTR
80E2CB 75F005            MOV     B,#05H
80E2CE 900005            MOV     DPTR,#GoodsWaySetVal+01H
80E2D1 A51280079F        ECALL   ?C?OFFXADD
80E2D6 7409              MOV     A,#09H
80E2D8 F0                MOVX    @DPTR,A
80E2D9 800E              SJMP    ?C0041?GOODSWAYSET
80E2DB         ?C0048?GOODSWAYSET:
  157: 				else
  158: 					GoodsWaySetVal[m_SetArrayNo].WayState = *InStr;				
80E2DB E0                MOVX    A,@DPTR
80E2DC 75F005            MOV     B,#05H
80E2DF 900005            MOV     DPTR,#GoodsWaySetVal+01H
80E2E2 A51280079F        ECALL   ?C?OFFXADD
80E2E7 EF                MOV     A,R7
80E2E8 F0                MOVX    @DPTR,A
80E2E9         ?C0041?GOODSWAYSET:
  159: 				GoodsSetSave = 1;
80E2E9         
80E2E9 902DF8            MOV     DPTR,#GoodsSetSave
80E2EC         
80E2EC 7401              MOV     A,#01H
80E2EE F0                MOVX    @DPTR,A
  160: 			}			
  161: 		break;					
  162: 	}
  163: }
80E2EF         ?C0050?GOODSWAYSET:
80E2EF A522              ERET    
----- FUNCTION _ReadWriteGoodsParam (END) -------
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 561




----- FUNCTION _Goods_MenuSelected (BEGIN) -----
 FILE: 'GoodsWaySet.c'
  234: void  Goods_MenuSelected( u_char xdata *SelectedNum, u_char xdata *CursorLine, u_char MoveRange )
  235: {
80E2F1 901737            MOV     DPTR,#MoveRange
80E2F4 EB                MOV     A,R3
80E2F5 F0                MOVX    @DPTR,A
80E2F6 901733            MOV     DPTR,#SelectedNum
80E2F9 EE                MOV     A,R6
80E2FA F0                MOVX    @DPTR,A
80E2FB A3                INC     DPTR
80E2FC EF                MOV     A,R7
80E2FD F0                MOVX    @DPTR,A
80E2FE A3                INC     DPTR
80E2FF EC                MOV     A,R4
80E300 F0                MOVX    @DPTR,A
80E301 A3                INC     DPTR
80E302 ED                MOV     A,R5
80E303 F0                MOVX    @DPTR,A
  236: 	u_char xdata  MenuNum = *SelectedNum;
  237: 	u_char xdata  Cursor = *CursorLine;
80E304 8F82              MOV     DPL,R7
80E306 8E83              MOV     DPH,R6
80E308 E0                MOVX    A,@DPTR
80E309 901738            MOV     DPTR,#MenuNum
80E30C F0                MOVX    @DPTR,A
  238: 	bit	   data  flag = 1;
80E30D 8D82              MOV     DPL,R5
80E30F 8C83              MOV     DPH,R4
80E311 E0                MOVX    A,@DPTR
80E312 901739            MOV     DPTR,#Cursor
80E315 F0                MOVX    @DPTR,A
  239: 	u_char xdata  key = 0xff;
80E316 D218              SETB    flag
  240: 	u_char  xdata  len = 0;	
80E318 A3                INC     DPTR
80E319 74FF              MOV     A,#0FFH
80E31B F0                MOVX    @DPTR,A
  241: 
80E31C E4                CLR     A
80E31D A3                INC     DPTR
80E31E F0                MOVX    @DPTR,A
80E31F         ?C0061?GOODSWAYSET:
  242: 	while( flag )
80E31F 201803            JB      flag,$ + 6H
80E322 02E449            LJMP    ?C0062?GOODSWAYSET
  243: 	{
  244: 		key = GetKey();
80E325 A5128096D1        ECALL   GetKey
80E32A 90173A            MOV     DPTR,#key
80E32D EF                MOV     A,R7
80E32E F0                MOVX    @DPTR,A
  245: 		switch( key )		
80E32F 24F3              ADD     A,#0F3H
80E331 7003              JNZ     $ + 5H
80E333 02E414            LJMP    ?C0079?GOODSWAYSET
80E336 24C5              ADD     A,#0C5H
80E338 6021              JZ      ?C0065?GOODSWAYSET
80E33A 24F8              ADD     A,#0F8H
80E33C 7003              JNZ     $ + 5H
80E33E 02E3C2            LJMP    ?C0072?GOODSWAYSET
80E341 2435              ADD     A,#035H
80E343 6003              JZ      $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 562


80E345 02E43A            LJMP    ?C0063?GOODSWAYSET
  246: 		{
  247: 			case KEY_CANCEL:
80E348         ?C0064?GOODSWAYSET:
  248: 				flag = 0;
80E348 C218              CLR     flag
  249: 				*SelectedNum = 100;				
80E34A 901733            MOV     DPTR,#SelectedNum
80E34D E0                MOVX    A,@DPTR
80E34E FE                MOV     R6,A
80E34F A3                INC     DPTR
80E350 E0                MOVX    A,@DPTR
80E351 F582              MOV     DPL,A
80E353 8E83              MOV     DPH,R6
80E355 7464              MOV     A,#064H
80E357 F0                MOVX    @DPTR,A
  250: 				break;
80E358 02E43A            LJMP    ?C0063?GOODSWAYSET
  251: 			case KEY_UP://上移  				
80E35B         ?C0065?GOODSWAYSET:
  252: 				if( Cursor == 2 )//选中标记上移
80E35B 901739            MOV     DPTR,#Cursor
80E35E E0                MOVX    A,@DPTR
80E35F 6402              XRL     A,#02H
80E361 7030              JNZ     ?C0066?GOODSWAYSET
  253: 				{			
  254: 					DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标					
80E363 D21A              SETB    ?_DisplayCursorState?BIT
80E365 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80E368 7402              MOV     A,#02H
80E36A F0                MOVX    @DPTR,A
80E36B D21B              SETB    ?_DisplayCursorState?BIT+01H
80E36D E4                CLR     A
80E36E FD                MOV     R5,A
80E36F FF                MOV     R7,A
80E370 A51280897C        ECALL   _DisplayCursorState
  255: 					Cursor = 1;
80E375 901739            MOV     DPTR,#Cursor
80E378 7401              MOV     A,#01H
80E37A F0                MOVX    @DPTR,A
  256: 					if( MenuNum == 0 )
80E37B 901738            MOV     DPTR,#MenuNum
80E37E E0                MOVX    A,@DPTR
80E37F 7009              JNZ     ?C0067?GOODSWAYSET
  257: 						MenuNum = MoveRange;					
80E381 901737            MOV     DPTR,#MoveRange
80E384 E0                MOVX    A,@DPTR
80E385 A3                INC     DPTR
80E386 F0                MOVX    @DPTR,A
80E387 02E43A            LJMP    ?C0063?GOODSWAYSET
80E38A         ?C0067?GOODSWAYSET:
  258: 					else									    
  259: 						MenuNum--;					
80E38A 901738            MOV     DPTR,#MenuNum
80E38D E0                MOVX    A,@DPTR
80E38E 14                DEC     A
80E38F F0                MOVX    @DPTR,A
  260: 				}
80E390 02E43A            LJMP    ?C0063?GOODSWAYSET
80E393         ?C0066?GOODSWAYSET:
  261: 				else//菜单上翻
  262: 				{						
  263: 					DisplayGoodsMenuAndVal( 1, MenuNum, 1 );					
80E393 A51280575B        ECALL   ?L?COM0029
  264: 					if( MenuNum == 0 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 563


80E398 901738            MOV     DPTR,#MenuNum
80E39B E0                MOVX    A,@DPTR
80E39C 7008              JNZ     ?C0070?GOODSWAYSET
  265: 						MenuNum = MoveRange;					
80E39E 901737            MOV     DPTR,#MoveRange
80E3A1 E0                MOVX    A,@DPTR
80E3A2 A3                INC     DPTR
80E3A3 F0                MOVX    @DPTR,A
80E3A4 8006              SJMP    ?C0071?GOODSWAYSET
80E3A6         ?C0070?GOODSWAYSET:
  266: 					else									    
  267: 						MenuNum--;					
80E3A6 901738            MOV     DPTR,#MenuNum
80E3A9 E0                MOVX    A,@DPTR
80E3AA 14                DEC     A
80E3AB F0                MOVX    @DPTR,A
80E3AC         ?C0071?GOODSWAYSET:
  268: 					DisplayGoodsMenuAndVal( 0, MenuNum , 1 );																					
80E3AC 901738            MOV     DPTR,#MenuNum
80E3AF E0                MOVX    A,@DPTR
80E3B0 FD                MOV     R5,A
80E3B1 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E3B3 E4                CLR     A
80E3B4 FF                MOV     R7,A
80E3B5 A512805764        ECALL   _DisplayGoodsMenuAndVal
  269: 					Cursor = 1;						
80E3BA 901739            MOV     DPTR,#Cursor
80E3BD 7401              MOV     A,#01H
80E3BF F0                MOVX    @DPTR,A
  270: 				}
  271: 				break;
80E3C0 8078              SJMP    ?C0063?GOODSWAYSET
  272: 			case KEY_DOWN://下移						
80E3C2         ?C0072?GOODSWAYSET:
  273: 				if( Cursor == 1 )//选中标记下移
80E3C2 901739            MOV     DPTR,#Cursor
80E3C5 E0                MOVX    A,@DPTR
80E3C6 6401              XRL     A,#01H
80E3C8 701B              JNZ     ?C0073?GOODSWAYSET
  274: 				{
  275: 					DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
80E3CA A51280896E        ECALL   ?L?COM000F
  276: 					if( MenuNum == MoveRange )
80E3CF 901737            MOV     DPTR,#MoveRange
80E3D2 E0                MOVX    A,@DPTR
80E3D3 FF                MOV     R7,A
80E3D4 A3                INC     DPTR
80E3D5 E0                MOVX    A,@DPTR
80E3D6 B50704            CJNE    A,AR7,?C0074?GOODSWAYSET
  277: 						MenuNum = 0;					
80E3D9 E4                CLR     A
80E3DA F0                MOVX    @DPTR,A
80E3DB 802F              SJMP    ?C0107?GOODSWAYSET
80E3DD         ?C0074?GOODSWAYSET:
  278: 					else									    						
  279: 						MenuNum++;				     
80E3DD 901738            MOV     DPTR,#MenuNum
80E3E0 E0                MOVX    A,@DPTR
80E3E1 04                INC     A
80E3E2 F0                MOVX    @DPTR,A
80E3E3         ?C0075?GOODSWAYSET:
  280: 					Cursor = 2;						
  281: 				}
80E3E3 8027              SJMP    ?C0107?GOODSWAYSET
80E3E5         ?C0073?GOODSWAYSET:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 564


  282: 				else//菜单下翻
  283: 				{					
  284: 					DisplayGoodsMenuAndVal( 0, MenuNum, 1 );						
80E3E5 901738            MOV     DPTR,#MenuNum
80E3E8 E0                MOVX    A,@DPTR
80E3E9 FD                MOV     R5,A
80E3EA D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E3EC E4                CLR     A
80E3ED FF                MOV     R7,A
80E3EE A512805764        ECALL   _DisplayGoodsMenuAndVal
  285: 					if( MenuNum == MoveRange )
80E3F3 901737            MOV     DPTR,#MoveRange
80E3F6 E0                MOVX    A,@DPTR
80E3F7 FF                MOV     R7,A
80E3F8 A3                INC     DPTR
80E3F9 E0                MOVX    A,@DPTR
80E3FA B50704            CJNE    A,AR7,?C0077?GOODSWAYSET
  286: 						MenuNum = 0;					
80E3FD E4                CLR     A
80E3FE F0                MOVX    @DPTR,A
80E3FF 8006              SJMP    ?C0078?GOODSWAYSET
80E401         ?C0077?GOODSWAYSET:
  287: 					else									    
  288: 						MenuNum++;					
80E401 901738            MOV     DPTR,#MenuNum
80E404 E0                MOVX    A,@DPTR
80E405 04                INC     A
80E406 F0                MOVX    @DPTR,A
80E407         ?C0078?GOODSWAYSET:
  289: 					DisplayGoodsMenuAndVal( 1, MenuNum , 1 );																					
80E407 A51280575B        ECALL   ?L?COM0029
  290: 					Cursor = 2;
80E40C         
80E40C 901739            MOV     DPTR,#Cursor
80E40F 7402              MOV     A,#02H
80E411 F0                MOVX    @DPTR,A
  291: 				}
  292: 				break;
80E412 8026              SJMP    ?C0063?GOODSWAYSET
  293: 			case KEY_SUBMIT://Enter,选中了某项菜单
80E414         ?C0079?GOODSWAYSET:
  294: 				{			
  295: 					*SelectedNum = MenuNum;
80E414 901738            MOV     DPTR,#MenuNum
80E417 E0                MOVX    A,@DPTR
80E418 FF                MOV     R7,A
80E419 901733            MOV     DPTR,#SelectedNum
80E41C E0                MOVX    A,@DPTR
80E41D FC                MOV     R4,A
80E41E A3                INC     DPTR
80E41F E0                MOVX    A,@DPTR
80E420 F582              MOV     DPL,A
80E422 8C83              MOV     DPH,R4
80E424 EF                MOV     A,R7
80E425 F0                MOVX    @DPTR,A
  296: 					*CursorLine = Cursor;					
80E426 901739            MOV     DPTR,#Cursor
80E429 E0                MOVX    A,@DPTR
80E42A FF                MOV     R7,A
80E42B 901735            MOV     DPTR,#CursorLine
80E42E E0                MOVX    A,@DPTR
80E42F FC                MOV     R4,A
80E430 A3                INC     DPTR
80E431 E0                MOVX    A,@DPTR
80E432 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 565


80E434 8C83              MOV     DPH,R4
80E436 EF                MOV     A,R7
80E437 F0                MOVX    @DPTR,A
  297: 					flag = 0;	
80E438 C218              CLR     flag
  298: 				}
  299: 				break;			
  300: 		}
80E43A         ?C0063?GOODSWAYSET:
  301: 		CoreProcessCycle();//让出时间片
80E43A A5128082D7        ECALL   CoreProcessCycle
  302: 		DelayMs( 5 );
80E43F 7F05              MOV     R7,#05H
80E441 A512807EAB        ECALL   _DelayMs
  303: 	}
80E446 02E31F            LJMP    ?C0061?GOODSWAYSET
80E449         ?C0062?GOODSWAYSET:
  304: 	ClearKey();		
80E449 A502808FA5        EJMP    ClearKey
----- FUNCTION _Goods_MenuSelected (END) -------


----- FUNCTION GoodsParamManage (BEGIN) -----
 FILE: 'GoodsWaySet.c'
  309: bit GoodsParamManage()		
  310: {
  311: 	u_char  xdata fristNum ;//一级菜单编号
  312: 	u_char  xdata LineNum ;//选中屏幕的行号	
  313: 	u_char  xdata key = 0;
80E44E E4                CLR     A
80E44F 901731            MOV     DPTR,#key
80E452 F0                MOVX    @DPTR,A
  314: 	u_char xdata  i = 0;
80E453 A3                INC     DPTR
80E454 F0                MOVX    @DPTR,A
  315: 	
  316: 	ClearKey();	
80E455 A512808FA5        ECALL   ClearKey
  317: 	GoodsSetSave = 0;
80E45A E4                CLR     A
80E45B 902DF8            MOV     DPTR,#GoodsSetSave
80E45E F0                MOVX    @DPTR,A
  318: 	//输入货道编号
  319: 	m_SetArrayNo = 0;
80E45F 902DF7            MOV     DPTR,#m_SetArrayNo
80E462 F0                MOVX    @DPTR,A
80E463         ?C0081?GOODSWAYSET:
  320: //	m_SetArrayNo = InputGoodsWayNo( );
  321: 	/////////////////////////////////////////
  322: 	while( 1 )
  323: 	{		
  324: 		ClearKey();	
80E463 A512808FA5        ECALL   ClearKey
  325: 		//输入货道编号
  326: 		m_SetArrayNo = 0;
80E468 E4                CLR     A
80E469 902DF7            MOV     DPTR,#m_SetArrayNo
80E46C F0                MOVX    @DPTR,A
  327: 		m_SetArrayNo = InputGoodsWayNo( 1 );
80E46D 7F01              MOV     R7,#01H
80E46F A51280D5CE        ECALL   _InputGoodsWayNo
80E474 902DF7            MOV     DPTR,#m_SetArrayNo
80E477 EF                MOV     A,R7
80E478 F0                MOVX    @DPTR,A
  328: 		if( ( m_SetArrayNo == 100 ) || ( m_SetArrayNo == 99 ) )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 566


80E479 6464              XRL     A,#064H
80E47B 6004              JZ      ?C0084?GOODSWAYSET
80E47D E0                MOVX    A,@DPTR
80E47E B46304            CJNE    A,#063H,?C0083?GOODSWAYSET
80E481         ?C0084?GOODSWAYSET:
  329: 			return 0;	
80E481 C3                CLR     C
80E482 02E552            LJMP    ?C0085?GOODSWAYSET
80E485         ?C0083?GOODSWAYSET:
  330: 		Trace("\n input m_SetArrayNo = %bu", m_SetArrayNo );	
  331: 		DisplayGoodsMenuAndVal( 0, 0, 1 );	
80E485 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E487 E4                CLR     A
80E488 FD                MOV     R5,A
80E489 FF                MOV     R7,A
80E48A A512805764        ECALL   _DisplayGoodsMenuAndVal
  332: 		DisplayGoodsMenuAndVal( 1, 1, 1 );		
80E48F D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E491 7D01              MOV     R5,#01H
80E493 7F01              MOV     R7,#01H
80E495 A512805764        ECALL   _DisplayGoodsMenuAndVal
  333: 		DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
80E49A A51280896E        ECALL   ?L?COM000F
  334: 		fristNum = 1;
80E49F 90172F            MOV     DPTR,#fristNum
80E4A2 7401              MOV     A,#01H
80E4A4 F0                MOVX    @DPTR,A
  335: 		LineNum = 2;
80E4A5 A3                INC     DPTR
80E4A6 04                INC     A
80E4A7 F0                MOVX    @DPTR,A
  336: 		WaitForWork( 300, NULL );
80E4A8 E4                CLR     A
80E4A9 7F2C              MOV     R7,#02CH
80E4AB 7E01              MOV     R6,#01H
80E4AD A512808330        ECALL   ?L?COM000D
80E4B2         ?C0086?GOODSWAYSET:
  337: 		while( 1 )
  338: 		{		
  339: 			/*判断按下何键*/			
  340: 			Goods_MenuSelected( &fristNum, &LineNum, MENU_COUNT( GoodsWaystr ) - 1 );			
80E4B2 7E17              MOV     R6,#HIGH fristNum
80E4B4 7F2F              MOV     R7,#LOW fristNum
80E4B6 7C17              MOV     R4,#HIGH LineNum
80E4B8 7D30              MOV     R5,#LOW LineNum
80E4BA 7B03              MOV     R3,#03H
80E4BC A51280E2F1        ECALL   _Goods_MenuSelected
  341: 			//选中了某项菜单				
  342: 			if( fristNum == 100 )//选中退出									
80E4C1 90172F            MOV     DPTR,#fristNum
80E4C4 E0                MOVX    A,@DPTR
80E4C5 FF                MOV     R7,A
80E4C6 6464              XRL     A,#064H
80E4C8 6099              JZ      ?C0081?GOODSWAYSET
  343: 				break;		
80E4CA         ?C0088?GOODSWAYSET:
  344: 			else if( fristNum == 0 )//没有选中退出
80E4CA EF                MOV     A,R7
80E4CB 60E5              JZ      ?C0086?GOODSWAYSET
  345: 				continue;
80E4CD         ?C0090?GOODSWAYSET:
  346: 			else
  347: 			{				
  348: 				ClearKey();									
80E4CD A512808FA5        ECALL   ClearKey
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 567


  349: 				EditGoodsParam( fristNum, LineNum - 1 );			
80E4D2 90172F            MOV     DPTR,#fristNum
80E4D5 E0                MOVX    A,@DPTR
80E4D6 FF                MOV     R7,A
80E4D7 A3                INC     DPTR
80E4D8 E0                MOVX    A,@DPTR
80E4D9 14                DEC     A
80E4DA FD                MOV     R5,A
80E4DB A5128058BD        ECALL   _EditGoodsParam
  350: 				//重新显示此项参数的值			
  351: 				if( LineNum == 2 )
80E4E0 901730            MOV     DPTR,#LineNum
80E4E3 E0                MOVX    A,@DPTR
80E4E4 6402              XRL     A,#02H
80E4E6 7026              JNZ     ?C0092?GOODSWAYSET
  352: 				{			
  353: 					if( fristNum == 0 )
80E4E8 90172F            MOV     DPTR,#fristNum
80E4EB E0                MOVX    A,@DPTR
80E4EC 7006              JNZ     ?C0093?GOODSWAYSET
  354: 						DisplayGoodsMenuAndVal( 0, MENU_COUNT( GoodsWaystr ) - 1, 1 );
80E4EE D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E4F0 7D03              MOV     R5,#03H
80E4F2 8009              SJMP    ?C0108?GOODSWAYSET
80E4F4         ?C0093?GOODSWAYSET:
  355: 					else						
  356: 						DisplayGoodsMenuAndVal( 0, fristNum-1, 1 );						
80E4F4 90172F            MOV     DPTR,#fristNum
80E4F7 E0                MOVX    A,@DPTR
80E4F8 14                DEC     A
80E4F9 FD                MOV     R5,A
80E4FA D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E4FC E4                CLR     A
80E4FD         
80E4FD FF                MOV     R7,A
80E4FE A512805764        ECALL   _DisplayGoodsMenuAndVal
80E503         ?C0094?GOODSWAYSET:
  357: 					DisplayGoodsMenuAndVal( 1, fristNum, 1 );	
80E503 90172F            MOV     DPTR,#fristNum
80E506 E0                MOVX    A,@DPTR
80E507 FD                MOV     R5,A
80E508 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E50A 7F01              MOV     R7,#01H
  358: 				}
80E50C 8025              SJMP    ?C0110?GOODSWAYSET
80E50E         ?C0092?GOODSWAYSET:
  359: 				else
  360: 				{									
  361: 					if( fristNum == ( MENU_COUNT( GoodsWaystr ) - 1 ) )
80E50E 90172F            MOV     DPTR,#fristNum
80E511 E0                MOVX    A,@DPTR
80E512 B40306            CJNE    A,#03H,?C0096?GOODSWAYSET
  362: 						DisplayGoodsMenuAndVal( 1, 0, 1 );	
80E515 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E517 E4                CLR     A
80E518 FD                MOV     R5,A
80E519 8008              SJMP    ?C0109?GOODSWAYSET
80E51B         ?C0096?GOODSWAYSET:
  363: 					else						
  364: 						DisplayGoodsMenuAndVal( 1, fristNum + 1, 1 );	
80E51B 90172F            MOV     DPTR,#fristNum
80E51E E0                MOVX    A,@DPTR
80E51F 04                INC     A
80E520 FD                MOV     R5,A
80E521 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 568


80E523         
80E523 7F01              MOV     R7,#01H
80E525 A512805764        ECALL   _DisplayGoodsMenuAndVal
80E52A         ?C0097?GOODSWAYSET:
  365: 					DisplayGoodsMenuAndVal( 0, fristNum, 1 );
80E52A 90172F            MOV     DPTR,#fristNum
80E52D E0                MOVX    A,@DPTR
80E52E FD                MOV     R5,A
80E52F D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80E531 E4                CLR     A
80E532 FF                MOV     R7,A
80E533         
80E533 A512805764        ECALL   _DisplayGoodsMenuAndVal
  366: 				}			
80E538         ?C0095?GOODSWAYSET:
  367: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//设置光标为整行状态			
80E538 901730            MOV     DPTR,#LineNum
80E53B E0                MOVX    A,@DPTR
80E53C 14                DEC     A
80E53D FD                MOV     R5,A
80E53E D21A              SETB    ?_DisplayCursorState?BIT
80E540 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80E543 7402              MOV     A,#02H
80E545 F0                MOVX    @DPTR,A
80E546 D21B              SETB    ?_DisplayCursorState?BIT+01H
80E548 E4                CLR     A
80E549 FF                MOV     R7,A
80E54A A51280897C        ECALL   _DisplayCursorState
  368: 			}				
  369: 		}
80E54F 02E4B2            LJMP    ?C0086?GOODSWAYSET
  370: 	}
  371: 	return 0;
  372: }
80E552         ?C0085?GOODSWAYSET:
80E552 A522              ERET    
----- FUNCTION GoodsParamManage (END) -------


----- FUNCTION SysParamManage (BEGIN) -----
 FILE: 'SysParamSet.c'
 1241: bit SysParamManage()		
 1242: {
 1243: 	u_char  xdata fristNum ;//一级菜单编号
 1244: 	u_char  xdata LineNum ;//选中屏幕的行号	
 1245: 	u_char xdata  ReDisplen = 0;
80E554 E4                CLR     A
80E555 901731            MOV     DPTR,#ReDisplen
80E558 F0                MOVX    @DPTR,A
 1246: 	//bit0为上移光不改变菜单项,bit1为下移光标不改变菜单项
 1247: 	u_char xdata  ChangeLineflag = 0;	
80E559 A3                INC     DPTR
80E55A F0                MOVX    @DPTR,A
 1248: 
 1249: 	ClearKey();
80E55B A512808FA5        ECALL   ClearKey
 1250: 	
 1251: 	/*显示两行菜单及其值*/				
 1252: 	DisplayMenuAndVal( 0, 0, 1 );	
80E560 D219              SETB    ?_DisplayMenuAndVal?BIT
80E562 E4                CLR     A
80E563 FD                MOV     R5,A
80E564 FF                MOV     R7,A
80E565 A5128059E7        ECALL   _DisplayMenuAndVal
 1253: 	DisplayMenuAndVal( 1, 1, 1 );		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 569


80E56A D219              SETB    ?_DisplayMenuAndVal?BIT
80E56C 7D01              MOV     R5,#01H
80E56E 7F01              MOV     R7,#01H
80E570 A5128059E7        ECALL   _DisplayMenuAndVal
 1254: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
80E575 A51280896E        ECALL   ?L?COM000F
 1255: 	fristNum = 1;
80E57A 90172F            MOV     DPTR,#fristNum
80E57D 7401              MOV     A,#01H
80E57F F0                MOVX    @DPTR,A
 1256: 	LineNum = 2;	
80E580 A3                INC     DPTR
80E581 04                INC     A
80E582 F0                MOVX    @DPTR,A
80E583         ?C0399?SYSPARAMSET:
 1257: 	while( 1 )
 1258: 	{		
 1259: 		/*判断按下何键*/			
 1260: 		SP_MenuSelected( &fristNum, &LineNum, MENU_COUNT( SysMenustr ) - 1, ChangeLineflag );			
80E583 7E17              MOV     R6,#HIGH fristNum
80E585 7F2F              MOV     R7,#LOW fristNum
80E587 7C17              MOV     R4,#HIGH LineNum
80E589 7D30              MOV     R5,#LOW LineNum
80E58B 901732            MOV     DPTR,#ChangeLineflag
80E58E E0                MOVX    A,@DPTR
80E58F 901738            MOV     DPTR,#?_SP_MenuSelected?BYTE+05H
80E592 F0                MOVX    @DPTR,A
80E593 7B1C              MOV     R3,#01CH
80E595 A512808D23        ECALL   _SP_MenuSelected
 1261: 		//选中了某项菜单				
 1262: 		if( fristNum == 100 )//选中退出									
80E59A 90172F            MOV     DPTR,#fristNum
80E59D E0                MOVX    A,@DPTR
80E59E 6464              XRL     A,#064H
80E5A0 7003              JNZ     $ + 5H
80E5A2 02E6A6            LJMP    ?C0400?SYSPARAMSET
 1263: 			break;		
80E5A5         ?C0401?SYSPARAMSET:
 1264: 		else//没有选中退出
 1265: 		{				
 1266: 			ClearKey();									
80E5A5 A512808FA5        ECALL   ClearKey
 1267: 			EditParam( fristNum, LineNum - 1 );	
80E5AA 90172F            MOV     DPTR,#fristNum
80E5AD E0                MOVX    A,@DPTR
80E5AE FF                MOV     R7,A
80E5AF A3                INC     DPTR
80E5B0 E0                MOVX    A,@DPTR
80E5B1 14                DEC     A
80E5B2 FD                MOV     R5,A
80E5B3 A512805B3D        ECALL   _EditParam
 1268: 			//重新显示此项参数的值			
 1269: 			if( LineNum == 2 )
80E5B8 901730            MOV     DPTR,#LineNum
80E5BB E0                MOVX    A,@DPTR
80E5BC 6402              XRL     A,#02H
80E5BE 7071              JNZ     ?C0403?SYSPARAMSET
 1270: 			{			
 1271: 				if( fristNum == 0 )
80E5C0 90172F            MOV     DPTR,#fristNum
80E5C3 E0                MOVX    A,@DPTR
80E5C4 7006              JNZ     ?C0404?SYSPARAMSET
 1272: 					ReDisplen = DisplayMenuAndVal( 0, MENU_COUNT( SysMenustr ) - 1, 1 );
80E5C6 D219              SETB    ?_DisplayMenuAndVal?BIT
80E5C8 7D1C              MOV     R5,#01CH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 570


80E5CA 8009              SJMP    ?C0489?SYSPARAMSET
80E5CC         ?C0404?SYSPARAMSET:
 1273: 				else						
 1274: 					ReDisplen = DisplayMenuAndVal( 0, fristNum-1, 1 );						
80E5CC 90172F            MOV     DPTR,#fristNum
80E5CF E0                MOVX    A,@DPTR
80E5D0 14                DEC     A
80E5D1 FD                MOV     R5,A
80E5D2 D219              SETB    ?_DisplayMenuAndVal?BIT
80E5D4 E4                CLR     A
80E5D5         
80E5D5 FF                MOV     R7,A
80E5D6 A5128059E7        ECALL   _DisplayMenuAndVal
80E5DB 901731            MOV     DPTR,#ReDisplen
80E5DE EF                MOV     A,R7
80E5DF F0                MOVX    @DPTR,A
80E5E0         ?C0405?SYSPARAMSET:
 1275: 				if( ReDisplen > 0 )
80E5E0 901731            MOV     DPTR,#ReDisplen
80E5E3 E0                MOVX    A,@DPTR
80E5E4 FF                MOV     R7,A
80E5E5 D3                SETB    C
80E5E6 9400              SUBB    A,#00H
80E5E8 402A              JC      ?C0406?SYSPARAMSET
 1276: 				{
 1277: 					DisplayStr( 0, 1, 1,  y_displaystr + 20, ReDisplen );//显示菜单					
80E5EA D21A              SETB    ?_DisplayStr?BIT
80E5EC 7B00              MOV     R3,#?C?XDATASEG
80E5EE 7A2D              MOV     R2,#HIGH y_displaystr+014H
80E5F0 79B7              MOV     R1,#LOW y_displaystr+014H
80E5F2 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80E5F5 A5128007B6        ECALL   ?C?PSTXDATA
80E5FA 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80E5FD EF                MOV     A,R7
80E5FE F0                MOVX    @DPTR,A
80E5FF 7D01              MOV     R5,#01H
80E601 E4                CLR     A
80E602 FF                MOV     R7,A
80E603 A51280885F        ECALL   _DisplayStr
 1278: 					ReDisplen = 0;
80E608 E4                CLR     A
80E609 901731            MOV     DPTR,#ReDisplen
80E60C F0                MOVX    @DPTR,A
 1279: 					ChangeLineflag |=0x01;
80E60D A3                INC     DPTR
80E60E E0                MOVX    A,@DPTR
80E60F 4401              ORL     A,#01H
80E611 F0                MOVX    @DPTR,A
 1280: 				}
80E612 8078              SJMP    ?C0409?SYSPARAMSET
80E614         ?C0406?SYSPARAMSET:
 1281: 				else
 1282: 				{
 1283: 					ReDisplen = DisplayMenuAndVal( 1, fristNum, 1 );
80E614 90172F            MOV     DPTR,#fristNum
80E617 E0                MOVX    A,@DPTR
80E618 FD                MOV     R5,A
80E619 D219              SETB    ?_DisplayMenuAndVal?BIT
80E61B 7F01              MOV     R7,#01H
80E61D A5128059E7        ECALL   _DisplayMenuAndVal
80E622 901731            MOV     DPTR,#ReDisplen
80E625 EF                MOV     A,R7
80E626 F0                MOVX    @DPTR,A
 1284: 					if( ReDisplen > 0 )
80E627 D3                SETB    C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 571


80E628 9400              SUBB    A,#00H
80E62A 4060              JC      ?C0409?SYSPARAMSET
 1285: 						ChangeLineflag = 0;
80E62C E4                CLR     A
80E62D A3                INC     DPTR
80E62E F0                MOVX    @DPTR,A
 1286: 				}
 1287: 			}
80E62F 805B              SJMP    ?C0409?SYSPARAMSET
80E631         ?C0403?SYSPARAMSET:
 1288: 			else
 1289: 			{	
 1290: 				ReDisplen = DisplayMenuAndVal( 0, fristNum, 1 );				
80E631 90172F            MOV     DPTR,#fristNum
80E634 A5128059E1        ECALL   ?L?COM0022
80E639 901731            MOV     DPTR,#ReDisplen
80E63C EF                MOV     A,R7
80E63D F0                MOVX    @DPTR,A
 1291: 				if( ReDisplen > 0 )
80E63E D3                SETB    C
80E63F 9400              SUBB    A,#00H
80E641 402D              JC      ?C0410?SYSPARAMSET
 1292: 				{
 1293: 					DisplayStr( 0, 1, 1,  y_displaystr + 20, ReDisplen );//显示菜单					
80E643 D21A              SETB    ?_DisplayStr?BIT
80E645 7B00              MOV     R3,#?C?XDATASEG
80E647 7A2D              MOV     R2,#HIGH y_displaystr+014H
80E649 79B7              MOV     R1,#LOW y_displaystr+014H
80E64B 901816            MOV     DPTR,#?_DisplayStr?BYTE+02H
80E64E A5128007B6        ECALL   ?C?PSTXDATA
80E653 901731            MOV     DPTR,#ReDisplen
80E656 E0                MOVX    A,@DPTR
80E657 901819            MOV     DPTR,#?_DisplayStr?BYTE+05H
80E65A F0                MOVX    @DPTR,A
80E65B 7D01              MOV     R5,#01H
80E65D E4                CLR     A
80E65E FF                MOV     R7,A
80E65F A51280885F        ECALL   _DisplayStr
 1294: 					ReDisplen = 0;
80E664 E4                CLR     A
80E665 901731            MOV     DPTR,#ReDisplen
80E668 F0                MOVX    @DPTR,A
 1295: 					ChangeLineflag |=0x02;
80E669 A3                INC     DPTR
80E66A E0                MOVX    A,@DPTR
80E66B 4402              ORL     A,#02H
80E66D F0                MOVX    @DPTR,A
 1296: 				}
80E66E 801C              SJMP    ?C0409?SYSPARAMSET
80E670         ?C0410?SYSPARAMSET:
 1297: 				else
 1298: 				{
 1299: 					if( fristNum == ( MENU_COUNT( SysMenustr ) - 1 ) )
80E670 90172F            MOV     DPTR,#fristNum
80E673 E0                MOVX    A,@DPTR
80E674 B41C06            CJNE    A,#01CH,?C0412?SYSPARAMSET
 1300: 						DisplayMenuAndVal( 1, 0, 1 );	
80E677 D219              SETB    ?_DisplayMenuAndVal?BIT
80E679 E4                CLR     A
80E67A FD                MOV     R5,A
80E67B 8008              SJMP    ?C0490?SYSPARAMSET
80E67D         ?C0412?SYSPARAMSET:
 1301: 					else						
 1302: 						DisplayMenuAndVal( 1, fristNum + 1, 1 );	
80E67D 90172F            MOV     DPTR,#fristNum
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 572


80E680 E0                MOVX    A,@DPTR
80E681 04                INC     A
80E682 FD                MOV     R5,A
80E683 D219              SETB    ?_DisplayMenuAndVal?BIT
80E685         
80E685 7F01              MOV     R7,#01H
80E687 A5128059E7        ECALL   _DisplayMenuAndVal
 1303: 				}
 1304: 			//	DisplayMenuAndVal( 0, fristNum, 1 );
 1305: 			}			
80E68C         ?C0409?SYSPARAMSET:
 1306: 			DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//设置光标为整行状态			
80E68C 901730            MOV     DPTR,#LineNum
80E68F E0                MOVX    A,@DPTR
80E690 14                DEC     A
80E691 FD                MOV     R5,A
80E692 D21A              SETB    ?_DisplayCursorState?BIT
80E694 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80E697 7402              MOV     A,#02H
80E699 F0                MOVX    @DPTR,A
80E69A D21B              SETB    ?_DisplayCursorState?BIT+01H
80E69C E4                CLR     A
80E69D FF                MOV     R7,A
80E69E A51280897C        ECALL   _DisplayCursorState
 1307: 		}
 1308: 	}		
80E6A3 02E583            LJMP    ?C0399?SYSPARAMSET
80E6A6         ?C0400?SYSPARAMSET:
 1309: 	return 0;
80E6A6 C3                CLR     C
 1310: }
80E6A7         ?C0414?SYSPARAMSET:
80E6A7 A522              ERET    
----- FUNCTION SysParamManage (END) -------


----- FUNCTION CurrencyCountMenu (BEGIN) -----
 FILE: 'countermaint.c'
  574: void CurrencyCountMenu()
  575: {
  576: 	u_char xdata key = 0;
  577: 	bit	data Notout = 1;
80E6A9 E4                CLR     A
80E6AA 901732            MOV     DPTR,#key
80E6AD F0                MOVX    @DPTR,A
  578: 	u_char  xdata firstNum = 1;//一级菜单编号
80E6AE D219              SETB    Notout
  579: 	u_char  xdata LineNum = 2;//选中屏幕的行号	
80E6B0 A3                INC     DPTR
80E6B1 04                INC     A
80E6B2 F0                MOVX    @DPTR,A
  580: 	u_char xdata  MenuNum = 0;
80E6B3 A3                INC     DPTR
80E6B4 04                INC     A
80E6B5 F0                MOVX    @DPTR,A
  581: 
80E6B6 E4                CLR     A
80E6B7 A3                INC     DPTR
80E6B8 F0                MOVX    @DPTR,A
  582: 	ClearDisplayLine( 1 );
80E6B9 A512808FAF        ECALL   ?L?COM0014
  583: 	ClearDisplayLine( 2 );		
  584: 	DispCurrencyList( 0, 0 );
80E6BE E4                CLR     A
80E6BF FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 573


80E6C0 FF                MOV     R7,A
80E6C1 A512806051        ECALL   _DispCurrencyList
  585: 	DispCurrencyList( 1, 1 );
80E6C6 7D01              MOV     R5,#01H
80E6C8 7F01              MOV     R7,#01H
80E6CA A512806051        ECALL   _DispCurrencyList
  586: 	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
80E6CF D21A              SETB    ?_DisplayCursorState?BIT
80E6D1 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80E6D4 7402              MOV     A,#02H
80E6D6 F0                MOVX    @DPTR,A
80E6D7 D21B              SETB    ?_DisplayCursorState?BIT+01H
80E6D9 E4                CLR     A
80E6DA FD                MOV     R5,A
80E6DB FF                MOV     R7,A
80E6DC A51280897C        ECALL   _DisplayCursorState
  587: 	MenuNum = MENU_COUNT( CurrencyMenuStr ) - 1;	
80E6E1 901735            MOV     DPTR,#MenuNum
80E6E4 740A              MOV     A,#0AH
80E6E6 F0                MOVX    @DPTR,A
80E6E7         ?C0119?COUNTERMAINT:
  588: 	
  589: 	while( Notout )
80E6E7 201903            JB      Notout,$ + 6H
80E6EA 02E7E5            LJMP    ?C0137?COUNTERMAINT
  590: 	{		
  591: 		/*判断按下何键*/	
  592: 		key = GetKey();
80E6ED A5128096D1        ECALL   GetKey
80E6F2 901732            MOV     DPTR,#key
80E6F5 EF                MOV     A,R7
80E6F6 F0                MOVX    @DPTR,A
  593: 		switch( key )		
80E6F7 24E5              ADD     A,#0E5H
80E6F9 7003              JNZ     $ + 5H
80E6FB 02E7C6            LJMP    ?C0136?COUNTERMAINT
80E6FE 24CB              ADD     A,#0CBH
80E700 6070              JZ      ?C0129?COUNTERMAINT
80E702 2408              ADD     A,#08H
80E704 6003              JZ      $ + 5H
80E706 02E7C8            LJMP    ?C0121?COUNTERMAINT
  594: 		{
  595: 			case KEY_UP://上移  	
80E709         ?C0122?COUNTERMAINT:
  596: 			    if( LineNum == 2 )//选中标记上移
80E709 901734            MOV     DPTR,#LineNum
80E70C E0                MOVX    A,@DPTR
80E70D 6402              XRL     A,#02H
80E70F 7032              JNZ     ?C0123?COUNTERMAINT
  597: 			    {			     
  598: 			    	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
80E711 D21A              SETB    ?_DisplayCursorState?BIT
80E713 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80E716 7402              MOV     A,#02H
80E718 F0                MOVX    @DPTR,A
80E719 D21B              SETB    ?_DisplayCursorState?BIT+01H
80E71B E4                CLR     A
80E71C FD                MOV     R5,A
80E71D FF                MOV     R7,A
80E71E A51280897C        ECALL   _DisplayCursorState
  599: 			    	LineNum = 1;
80E723 901734            MOV     DPTR,#LineNum
80E726 7401              MOV     A,#01H
80E728 F0                MOVX    @DPTR,A
  600: 					if( firstNum == 0 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 574


80E729 901733            MOV     DPTR,#firstNum
80E72C E0                MOVX    A,@DPTR
80E72D 700B              JNZ     ?C0124?COUNTERMAINT
  601: 						firstNum = MenuNum;					
80E72F 901735            MOV     DPTR,#MenuNum
80E732 E0                MOVX    A,@DPTR
80E733 901733            MOV     DPTR,#firstNum
80E736 F0                MOVX    @DPTR,A
80E737 02E7C8            LJMP    ?C0121?COUNTERMAINT
80E73A         ?C0124?COUNTERMAINT:
  602: 					else
  603: 						firstNum--;			    
80E73A 901733            MOV     DPTR,#firstNum
80E73D E0                MOVX    A,@DPTR
80E73E 14                DEC     A
80E73F F0                MOVX    @DPTR,A
  604: 			     }
80E740 02E7C8            LJMP    ?C0121?COUNTERMAINT
80E743         ?C0123?COUNTERMAINT:
  605: 			     else//菜单上翻
  606: 			     {
  607: 				 	DispCurrencyList( 1, firstNum );			     
80E743 A51280604A        ECALL   ?L?COM0030
  608: 				  	if( firstNum == 0 )
80E748 901733            MOV     DPTR,#firstNum
80E74B E0                MOVX    A,@DPTR
80E74C 700A              JNZ     ?C0127?COUNTERMAINT
  609: 				  		firstNum = MenuNum;					
80E74E 901735            MOV     DPTR,#MenuNum
80E751 E0                MOVX    A,@DPTR
80E752 901733            MOV     DPTR,#firstNum
80E755 F0                MOVX    @DPTR,A
80E756 8006              SJMP    ?C0128?COUNTERMAINT
80E758         ?C0127?COUNTERMAINT:
  610: 				  	else
  611: 						firstNum--;	
80E758 901733            MOV     DPTR,#firstNum
80E75B E0                MOVX    A,@DPTR
80E75C 14                DEC     A
80E75D F0                MOVX    @DPTR,A
80E75E         ?C0128?COUNTERMAINT:
  612: 					DispCurrencyList( 0, firstNum );
80E75E 901733            MOV     DPTR,#firstNum
80E761 E0                MOVX    A,@DPTR
80E762 FD                MOV     R5,A
80E763 E4                CLR     A
80E764 FF                MOV     R7,A
80E765 A512806051        ECALL   _DispCurrencyList
  613: 				  	LineNum = 1;										
80E76A 901734            MOV     DPTR,#LineNum
80E76D 7401              MOV     A,#01H
80E76F F0                MOVX    @DPTR,A
  614: 			     }
  615: 				 break;
80E770 8056              SJMP    ?C0121?COUNTERMAINT
  616: 			case KEY_DOWN://下移				
80E772         ?C0129?COUNTERMAINT:
  617: 				if( LineNum == 1 )//选中标记下移
80E772 901734            MOV     DPTR,#LineNum
80E775 E0                MOVX    A,@DPTR
80E776 6401              XRL     A,#01H
80E778 701D              JNZ     ?C0130?COUNTERMAINT
  618: 				{			
  619: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
80E77A A51280896E        ECALL   ?L?COM000F
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 575


  620: 					 if( firstNum == MenuNum )
80E77F 901735            MOV     DPTR,#MenuNum
80E782 E0                MOVX    A,@DPTR
80E783 FF                MOV     R7,A
80E784 901733            MOV     DPTR,#firstNum
80E787 E0                MOVX    A,@DPTR
80E788 B50704            CJNE    A,AR7,?C0131?COUNTERMAINT
  621: 						firstNum = 0;					
80E78B E4                CLR     A
80E78C F0                MOVX    @DPTR,A
80E78D 802F              SJMP    ?C0203?COUNTERMAINT
80E78F         ?C0131?COUNTERMAINT:
  622: 					 else						
  623: 				    	firstNum++;				     
80E78F 901733            MOV     DPTR,#firstNum
80E792 E0                MOVX    A,@DPTR
80E793 04                INC     A
80E794 F0                MOVX    @DPTR,A
80E795         ?C0132?COUNTERMAINT:
  624: 				     LineNum = 2;				     
  625: 				 }
80E795 8027              SJMP    ?C0203?COUNTERMAINT
80E797         ?C0130?COUNTERMAINT:
  626: 				 else//菜单下翻
  627: 				 {
  628: 				 	DispCurrencyList( 0, firstNum );
80E797 901733            MOV     DPTR,#firstNum
80E79A E0                MOVX    A,@DPTR
80E79B FD                MOV     R5,A
80E79C E4                CLR     A
80E79D FF                MOV     R7,A
80E79E A512806051        ECALL   _DispCurrencyList
  629: 					if( firstNum == MenuNum )
80E7A3 901735            MOV     DPTR,#MenuNum
80E7A6 E0                MOVX    A,@DPTR
80E7A7 FF                MOV     R7,A
80E7A8 901733            MOV     DPTR,#firstNum
80E7AB E0                MOVX    A,@DPTR
80E7AC B50704            CJNE    A,AR7,?C0134?COUNTERMAINT
  630: 						firstNum = 0;					
80E7AF E4                CLR     A
80E7B0 F0                MOVX    @DPTR,A
80E7B1 8006              SJMP    ?C0135?COUNTERMAINT
80E7B3         ?C0134?COUNTERMAINT:
  631: 					else				    	 
  632: 				    	firstNum++;				
80E7B3 901733            MOV     DPTR,#firstNum
80E7B6 E0                MOVX    A,@DPTR
80E7B7 04                INC     A
80E7B8 F0                MOVX    @DPTR,A
80E7B9         ?C0135?COUNTERMAINT:
  633: 					DispCurrencyList( 1, firstNum );
80E7B9 A51280604A        ECALL   ?L?COM0030
  634: 					LineNum = 2;					
80E7BE         
80E7BE 901734            MOV     DPTR,#LineNum
80E7C1 7402              MOV     A,#02H
80E7C3 F0                MOVX    @DPTR,A
  635: 				}
  636: 				break;
80E7C4 8002              SJMP    ?C0121?COUNTERMAINT
  637: 			case KEY_CANCEL:
80E7C6         ?C0136?COUNTERMAINT:
  638: 				Notout = 0;
80E7C6 C219              CLR     Notout
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 576


  639: 				break;					
  640: 		}
80E7C8         ?C0121?COUNTERMAINT:
  641: 		SchedulerProcess();//让出时间片
80E7C8 A5128090B6        ECALL   SchedulerProcess
  642: 		WaitForWork( 100, &Lcd );
80E7CD E4                CLR     A
80E7CE 7F64              MOV     R7,#064H
80E7D0 FE                MOV     R6,A
80E7D1 FD                MOV     R5,A
80E7D2 FC                MOV     R4,A
80E7D3 90184A            MOV     DPTR,#?_WaitForWork?BYTE+04H
80E7D6 7423              MOV     A,#HIGH Lcd
80E7D8 F0                MOVX    @DPTR,A
80E7D9 A3                INC     DPTR
80E7DA 7469              MOV     A,#LOW Lcd
80E7DC F0                MOVX    @DPTR,A
80E7DD A512808338        ECALL   _WaitForWork
  643: 	}
80E7E2 02E6E7            LJMP    ?C0119?COUNTERMAINT
  644: }
80E7E5         ?C0137?COUNTERMAINT:
80E7E5 A522              ERET    
----- FUNCTION CurrencyCountMenu (END) -------


----- FUNCTION _ReadWriteRactParam (BEGIN) -----
 FILE: 'RackSet.c'
   71: void ReadWriteRactParam( u_char Num,u_char xdata *OutStr,u_char xdata *InStr ,u_char xdata *len, bit OutInFlag )
   72: {	
80E7E7 901775            MOV     DPTR,#OutStr
80E7EA EC                MOV     A,R4
80E7EB F0                MOVX    @DPTR,A
80E7EC A3                INC     DPTR
80E7ED ED                MOV     A,R5
80E7EE F0                MOVX    @DPTR,A
80E7EF A3                INC     DPTR
80E7F0 EA                MOV     A,R2
80E7F1 F0                MOVX    @DPTR,A
80E7F2 A3                INC     DPTR
80E7F3 EB                MOV     A,R3
80E7F4 F0                MOVX    @DPTR,A
;---- Variable 'Num' assigned to Register 'R7' ----
   73: 	u_char  xdata Templen = 0;	
   74: 	u_char	xdata  i = 0;
80E7F5 E4                CLR     A
80E7F6 90177B            MOV     DPTR,#Templen
80E7F9 F0                MOVX    @DPTR,A
   75: 	uint	xdata temp = 0;	
80E7FA A3                INC     DPTR
80E7FB F0                MOVX    @DPTR,A
   76: 
80E7FC A3                INC     DPTR
80E7FD F0                MOVX    @DPTR,A
80E7FE A3                INC     DPTR
80E7FF F0                MOVX    @DPTR,A
   77: 	switch( Num )
80E800 EF                MOV     A,R7
80E801 A5128007CD        ECALL   ?C?CCASEX
80E806 E82B              DW      ?C0002?RACKSET
80E808 00                DB      00H
80E809 E883              DW      ?C0004?RACKSET
80E80B 01                DB      01H
80E80C E935              DW      ?C0013?RACKSET
80E80E 02                DB      02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 577


80E80F E9FF              DW      ?C0022?RACKSET
80E811 03                DB      03H
80E812 EAAE              DW      ?C0031?RACKSET
80E814 04                DB      04H
80E815 EB5D              DW      ?C0040?RACKSET
80E817 05                DB      05H
80E818 EC0C              DW      ?C0049?RACKSET
80E81A 06                DB      06H
80E81B ECBB              DW      ?C0058?RACKSET
80E81D 07                DB      07H
80E81E ED6A              DW      ?C0067?RACKSET
80E820 08                DB      08H
80E821 EE19              DW      ?C0076?RACKSET
80E823 09                DB      09H
80E824 EEC8              DW      ?C0085?RACKSET
80E826 0A                DB      0AH
80E827 0000              DW      00H
80E829 EF8F              DW      ?C0094?RACKSET
   78: 	{
   79: 		case 0:	//层架编号	
80E82B         ?C0002?RACKSET:
   80: 			if( OutInFlag == 0 )
80E82B 301A03            JNB     OutInFlag,$ + 6H
80E82E 02EF8F            LJMP    ?C0094?RACKSET
   81: 			{				
   82: 				sprintf( OutStr, "%bu", iRackSet[RackNo - 1].RackNo );//GoodsWayNoList[m_SetArrayNo].GoodsWayNo)				
80E831 901775            MOV     DPTR,#OutStr
80E834 E0                MOVX    A,@DPTR
80E835 FE                MOV     R6,A
80E836 A3                INC     DPTR
80E837 E0                MOVX    A,@DPTR
80E838 AA06              MOV     R2,AR6
80E83A F9                MOV     R1,A
80E83B 7B00              MOV     R3,#?C?XDATASEG
80E83D C003              PUSH    AR3
80E83F C002              PUSH    AR2
80E841 C001              PUSH    AR1
80E843 7B80              MOV     R3,#BYTE2 08013F4H
80E845 7A13              MOV     R2,#HIGH 08013F4H
80E847 79F4              MOV     R1,#LOW 08013F4H
80E849 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80E84C A5128007B6        ECALL   ?C?PSTXDATA
80E851 902DFA            MOV     DPTR,#RackNo
80E854 E0                MOVX    A,@DPTR
80E855 75F003            MOV     B,#03H
80E858 A4                MUL     AB
80E859 2404              ADD     A,#LOW iRackSet-03H
80E85B F582              MOV     DPL,A
80E85D E4                CLR     A
80E85E 3404              ADDC    A,#HIGH iRackSet-03H
80E860 F583              MOV     DPH,A
80E862 E0                MOVX    A,@DPTR
80E863 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80E866 F0                MOVX    @DPTR,A
80E867 D001              POP     AR1
80E869 D002              POP     AR2
80E86B D003              POP     AR3
80E86D A512800949        ECALL   _sprintf
   83: 				*len = 2;
80E872 901779            MOV     DPTR,#len
80E875 E0                MOVX    A,@DPTR
80E876 FE                MOV     R6,A
80E877 A3                INC     DPTR
80E878 E0                MOVX    A,@DPTR
80E879 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 578


80E87B 8E83              MOV     DPH,R6
80E87D 7402              MOV     A,#02H
80E87F F0                MOVX    @DPTR,A
   84: 			}			
   85: 		break;
80E880 02EF8F            LJMP    ?C0094?RACKSET
   86: 		case 1://启用标志
80E883         ?C0004?RACKSET:
   87: 			////////////////////
   88: 			if( OutInFlag == 0 )
80E883 201A32            JB      OutInFlag,?C0005?RACKSET
   89: 			{
   90: 				*len = sprintf( OutStr, "%bu", iRackSet[RackNo - 1].UseState );				
80E886 901775            MOV     DPTR,#OutStr
80E889 E0                MOVX    A,@DPTR
80E88A FE                MOV     R6,A
80E88B A3                INC     DPTR
80E88C E0                MOVX    A,@DPTR
80E88D AA06              MOV     R2,AR6
80E88F F9                MOV     R1,A
80E890 7B00              MOV     R3,#?C?XDATASEG
80E892 C003              PUSH    AR3
80E894 C002              PUSH    AR2
80E896 C001              PUSH    AR1
80E898 7B80              MOV     R3,#BYTE2 08013F4H
80E89A 7A13              MOV     R2,#HIGH 08013F4H
80E89C 79F4              MOV     R1,#LOW 08013F4H
80E89E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80E8A1 A5128007B6        ECALL   ?C?PSTXDATA
80E8A6 902DFA            MOV     DPTR,#RackNo
80E8A9 E0                MOVX    A,@DPTR
80E8AA 75F003            MOV     B,#03H
80E8AD A4                MUL     AB
80E8AE 2405              ADD     A,#LOW iRackSet-02H
80E8B0 F582              MOV     DPL,A
80E8B2 E4                CLR     A
80E8B3 3404              ADDC    A,#HIGH iRackSet-02H
   91: 			}
80E8B5 02EEF9            LJMP    ?C0179?RACKSET
80E8B8         ?C0005?RACKSET:
   92: 			else
   93: 			{
   94: 				Templen = *len;
80E8B8 901779            MOV     DPTR,#len
80E8BB E0                MOVX    A,@DPTR
80E8BC FE                MOV     R6,A
80E8BD A3                INC     DPTR
80E8BE E0                MOVX    A,@DPTR
80E8BF F582              MOV     DPL,A
80E8C1 8E83              MOV     DPH,R6
80E8C3 E0                MOVX    A,@DPTR
80E8C4 90177B            MOV     DPTR,#Templen
80E8C7 F0                MOVX    @DPTR,A
   95: 				if( Templen == 0 )
80E8C8 7003              JNZ     $ + 5H
80E8CA 02EF8F            LJMP    ?C0094?RACKSET
   96: 					break;
80E8CD         ?C0007?RACKSET:
   97: 				if( Templen > 1 )
80E8CD 90177B            MOV     DPTR,#Templen
80E8D0 E0                MOVX    A,@DPTR
80E8D1 D3                SETB    C
80E8D2 9401              SUBB    A,#01H
80E8D4 4003              JC      ?C0008?RACKSET
   98: 					Templen = 1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 579


80E8D6 7401              MOV     A,#01H
80E8D8 F0                MOVX    @DPTR,A
80E8D9         ?C0008?RACKSET:
   99: 				iRackSet[RackNo - 1].UseState = 0;
80E8D9 902DFA            MOV     DPTR,#RackNo
80E8DC E0                MOVX    A,@DPTR
80E8DD 75F003            MOV     B,#03H
80E8E0 A4                MUL     AB
80E8E1 2405              ADD     A,#LOW iRackSet-02H
80E8E3 F582              MOV     DPL,A
80E8E5 E4                CLR     A
80E8E6 3404              ADDC    A,#HIGH iRackSet-02H
80E8E8 F583              MOV     DPH,A
80E8EA E4                CLR     A
80E8EB F0                MOVX    @DPTR,A
  100: 				for( i = 0; i < Templen; i ++ )
80E8EC 90177C            MOV     DPTR,#i
80E8EF F0                MOVX    @DPTR,A
80E8F0         ?C0009?RACKSET:
80E8F0 90177B            MOV     DPTR,#Templen
80E8F3 E0                MOVX    A,@DPTR
80E8F4 FF                MOV     R7,A
80E8F5 A3                INC     DPTR
80E8F6 E0                MOVX    A,@DPTR
80E8F7 FE                MOV     R6,A
80E8F8 C3                CLR     C
80E8F9 9F                SUBB    A,R7
80E8FA 4003              JC      $ + 5H
80E8FC 02EF8F            LJMP    ?C0094?RACKSET
  101: 				{					
  102: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80E8FF 901777            MOV     DPTR,#InStr
80E902 E0                MOVX    A,@DPTR
80E903 FC                MOV     R4,A
80E904 A3                INC     DPTR
80E905 E0                MOVX    A,@DPTR
80E906 2E                ADD     A,R6
80E907 F582              MOV     DPL,A
80E909 E4                CLR     A
80E90A 3C                ADDC    A,R4
80E90B F583              MOV     DPH,A
80E90D E0                MOVX    A,@DPTR
80E90E FF                MOV     R7,A
80E90F C3                CLR     C
80E910 9400              SUBB    A,#00H
80E912 4019              JC      ?C0011?RACKSET
80E914 EF                MOV     A,R7
80E915 D3                SETB    C
80E916 9409              SUBB    A,#09H
80E918 5013              JNC     ?C0011?RACKSET
  103: 						iRackSet[RackNo - 1].UseState = *( InStr + i );					
80E91A 902DFA            MOV     DPTR,#RackNo
80E91D E0                MOVX    A,@DPTR
80E91E 75F003            MOV     B,#03H
80E921 A4                MUL     AB
80E922 2405              ADD     A,#LOW iRackSet-02H
80E924 F582              MOV     DPL,A
80E926 E4                CLR     A
80E927 3404              ADDC    A,#HIGH iRackSet-02H
80E929 F583              MOV     DPH,A
80E92B EF                MOV     A,R7
80E92C F0                MOVX    @DPTR,A
  104: 				}					
80E92D         ?C0011?RACKSET:
80E92D 90177C            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 580


80E930 E0                MOVX    A,@DPTR
80E931 04                INC     A
80E932 F0                MOVX    @DPTR,A
80E933 80BB              SJMP    ?C0009?RACKSET
  105: 			}			
  106: 		break;
  107: 		case 2://最大货品存量				
80E935         ?C0013?RACKSET:
  108: 			if(  OutInFlag == 0 )							
80E935 201A32            JB      OutInFlag,?C0014?RACKSET
  109: 				*len = sprintf( OutStr, "%bu", iRackSet[RackNo - 1].GoodsMax );						
80E938 901775            MOV     DPTR,#OutStr
80E93B E0                MOVX    A,@DPTR
80E93C FE                MOV     R6,A
80E93D A3                INC     DPTR
80E93E E0                MOVX    A,@DPTR
80E93F AA06              MOV     R2,AR6
80E941 F9                MOV     R1,A
80E942 7B00              MOV     R3,#?C?XDATASEG
80E944 C003              PUSH    AR3
80E946 C002              PUSH    AR2
80E948 C001              PUSH    AR1
80E94A 7B80              MOV     R3,#BYTE2 08013F4H
80E94C 7A13              MOV     R2,#HIGH 08013F4H
80E94E 79F4              MOV     R1,#LOW 08013F4H
80E950 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80E953 A5128007B6        ECALL   ?C?PSTXDATA
80E958 902DFA            MOV     DPTR,#RackNo
80E95B E0                MOVX    A,@DPTR
80E95C 75F003            MOV     B,#03H
80E95F A4                MUL     AB
80E960 2406              ADD     A,#LOW iRackSet-01H
80E962 F582              MOV     DPL,A
80E964 E4                CLR     A
80E965 3404              ADDC    A,#HIGH iRackSet-01H
80E967         
80E967 02EEF9            LJMP    ?C0179?RACKSET
80E96A         ?C0014?RACKSET:
  110: 			else//存入
  111: 			{
  112: 				Templen = *len;
80E96A 901779            MOV     DPTR,#len
80E96D E0                MOVX    A,@DPTR
80E96E FE                MOV     R6,A
80E96F A3                INC     DPTR
80E970 E0                MOVX    A,@DPTR
80E971 F582              MOV     DPL,A
80E973 8E83              MOV     DPH,R6
80E975 E0                MOVX    A,@DPTR
80E976 90177B            MOV     DPTR,#Templen
80E979 F0                MOVX    @DPTR,A
  113: 				if( Templen == 0 )
80E97A 7003              JNZ     $ + 5H
80E97C 02EF8F            LJMP    ?C0094?RACKSET
  114: 					break;
80E97F         ?C0016?RACKSET:
  115: 				if( Templen > 2 )
80E97F 90177B            MOV     DPTR,#Templen
80E982 E0                MOVX    A,@DPTR
80E983 D3                SETB    C
80E984 9402              SUBB    A,#02H
80E986 4003              JC      ?C0017?RACKSET
  116: 					Templen = 2;	
80E988 7402              MOV     A,#02H
80E98A F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 581


80E98B         ?C0017?RACKSET:
  117: 				iRackSet[RackNo - 1].GoodsMax = 0;	
80E98B 902DFA            MOV     DPTR,#RackNo
80E98E E0                MOVX    A,@DPTR
80E98F 75F003            MOV     B,#03H
80E992 A4                MUL     AB
80E993 2406              ADD     A,#LOW iRackSet-01H
80E995 F582              MOV     DPL,A
80E997 E4                CLR     A
80E998 3404              ADDC    A,#HIGH iRackSet-01H
80E99A F583              MOV     DPH,A
80E99C E4                CLR     A
80E99D F0                MOVX    @DPTR,A
  118: 				for( i = 0; i < Templen; i ++ )
80E99E 90177C            MOV     DPTR,#i
80E9A1 F0                MOVX    @DPTR,A
80E9A2         ?C0018?RACKSET:
80E9A2 90177B            MOV     DPTR,#Templen
80E9A5 E0                MOVX    A,@DPTR
80E9A6 FF                MOV     R7,A
80E9A7 A3                INC     DPTR
80E9A8 E0                MOVX    A,@DPTR
80E9A9 FE                MOV     R6,A
80E9AA C3                CLR     C
80E9AB 9F                SUBB    A,R7
80E9AC 4003              JC      $ + 5H
80E9AE 02EF8F            LJMP    ?C0094?RACKSET
  119: 				{					
  120: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80E9B1 901777            MOV     DPTR,#InStr
80E9B4 E0                MOVX    A,@DPTR
80E9B5 FC                MOV     R4,A
80E9B6 A3                INC     DPTR
80E9B7 E0                MOVX    A,@DPTR
80E9B8 2E                ADD     A,R6
80E9B9 F582              MOV     DPL,A
80E9BB E4                CLR     A
80E9BC 3C                ADDC    A,R4
80E9BD F583              MOV     DPH,A
80E9BF E0                MOVX    A,@DPTR
80E9C0 FF                MOV     R7,A
80E9C1 C3                CLR     C
80E9C2 9400              SUBB    A,#00H
80E9C4 4031              JC      ?C0020?RACKSET
80E9C6 EF                MOV     A,R7
80E9C7 D3                SETB    C
80E9C8 9409              SUBB    A,#09H
80E9CA 502B              JNC     ?C0020?RACKSET
  121: 						iRackSet[RackNo - 1].GoodsMax = iRackSet[RackNo - 1].GoodsMax*10 + *( InStr + i );					
80E9CC 902DFA            MOV     DPTR,#RackNo
80E9CF E0                MOVX    A,@DPTR
80E9D0 FE                MOV     R6,A
80E9D1 75F003            MOV     B,#03H
80E9D4 A4                MUL     AB
80E9D5 2406              ADD     A,#LOW iRackSet-01H
80E9D7 F582              MOV     DPL,A
80E9D9 E4                CLR     A
80E9DA 3404              ADDC    A,#HIGH iRackSet-01H
80E9DC F583              MOV     DPH,A
80E9DE E0                MOVX    A,@DPTR
80E9DF 75F00A            MOV     B,#0AH
80E9E2 A4                MUL     AB
80E9E3 FD                MOV     R5,A
80E9E4 EF                MOV     A,R7
80E9E5 2D                ADD     A,R5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 582


80E9E6 FF                MOV     R7,A
80E9E7 EE                MOV     A,R6
80E9E8 75F003            MOV     B,#03H
80E9EB A4                MUL     AB
80E9EC 2406              ADD     A,#LOW iRackSet-01H
80E9EE F582              MOV     DPL,A
80E9F0 E4                CLR     A
80E9F1 3404              ADDC    A,#HIGH iRackSet-01H
80E9F3 F583              MOV     DPH,A
80E9F5 EF                MOV     A,R7
80E9F6 F0                MOVX    @DPTR,A
  122: 				}				
80E9F7         ?C0020?RACKSET:
80E9F7 90177C            MOV     DPTR,#i
80E9FA E0                MOVX    A,@DPTR
80E9FB 04                INC     A
80E9FC F0                MOVX    @DPTR,A
80E9FD 80A3              SJMP    ?C0018?RACKSET
  123: 			}						
  124: 		break;	
  125: 		case 3:// 货道1开启状态
80E9FF         ?C0022?RACKSET:
  126: 			if(  OutInFlag == 0 )							
80E9FF 201A31            JB      OutInFlag,?C0023?RACKSET
  127: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][0].UseState );			
80EA02 901775            MOV     DPTR,#OutStr
80EA05 E0                MOVX    A,@DPTR
80EA06 FE                MOV     R6,A
80EA07 A3                INC     DPTR
80EA08 E0                MOVX    A,@DPTR
80EA09 AA06              MOV     R2,AR6
80EA0B F9                MOV     R1,A
80EA0C 7B00              MOV     R3,#?C?XDATASEG
80EA0E C003              PUSH    AR3
80EA10 C002              PUSH    AR2
80EA12 C001              PUSH    AR1
80EA14 7B80              MOV     R3,#BYTE2 08013F4H
80EA16 7A13              MOV     R2,#HIGH 08013F4H
80EA18 79F4              MOV     R1,#LOW 08013F4H
80EA1A 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80EA1D A5128007B6        ECALL   ?C?PSTXDATA
80EA22 902DFA            MOV     DPTR,#RackNo
80EA25 E0                MOVX    A,@DPTR
80EA26 C4                SWAP    A
80EA27 54F0              ANL     A,#0F0H
80EA29 2437              ADD     A,#LOW iRackColumnSet-0FH
80EA2B F582              MOV     DPL,A
80EA2D E4                CLR     A
80EA2E 3401              ADDC    A,#HIGH iRackColumnSet-0FH
80EA30         
80EA30 02EEF9            LJMP    ?C0179?RACKSET
80EA33         ?C0023?RACKSET:
  128: 			else//存入
  129: 			{
  130: 				Templen = *len;
80EA33 901779            MOV     DPTR,#len
80EA36 E0                MOVX    A,@DPTR
80EA37 FE                MOV     R6,A
80EA38 A3                INC     DPTR
80EA39 E0                MOVX    A,@DPTR
80EA3A F582              MOV     DPL,A
80EA3C 8E83              MOV     DPH,R6
80EA3E E0                MOVX    A,@DPTR
80EA3F 90177B            MOV     DPTR,#Templen
80EA42 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 583


  131: 				if( Templen == 0 )
80EA43 7003              JNZ     $ + 5H
80EA45 02EF8F            LJMP    ?C0094?RACKSET
  132: 					break;
80EA48         ?C0025?RACKSET:
  133: 				if( Templen > 1 )
80EA48 90177B            MOV     DPTR,#Templen
80EA4B E0                MOVX    A,@DPTR
80EA4C D3                SETB    C
80EA4D 9401              SUBB    A,#01H
80EA4F 4003              JC      ?C0026?RACKSET
  134: 					Templen = 1;	
80EA51 7401              MOV     A,#01H
80EA53 F0                MOVX    @DPTR,A
80EA54         ?C0026?RACKSET:
  135: 				iRackColumnSet[RackNo - 1][0].UseState = 0;	
80EA54 902DFA            MOV     DPTR,#RackNo
80EA57 E0                MOVX    A,@DPTR
80EA58 C4                SWAP    A
80EA59 54F0              ANL     A,#0F0H
80EA5B 2437              ADD     A,#LOW iRackColumnSet-0FH
80EA5D F582              MOV     DPL,A
80EA5F E4                CLR     A
80EA60 3401              ADDC    A,#HIGH iRackColumnSet-0FH
80EA62 F583              MOV     DPH,A
80EA64 E4                CLR     A
80EA65 F0                MOVX    @DPTR,A
  136: 				for( i = 0; i < Templen; i ++ )
80EA66 90177C            MOV     DPTR,#i
80EA69 F0                MOVX    @DPTR,A
80EA6A         ?C0027?RACKSET:
80EA6A 90177B            MOV     DPTR,#Templen
80EA6D E0                MOVX    A,@DPTR
80EA6E FF                MOV     R7,A
80EA6F A3                INC     DPTR
80EA70 E0                MOVX    A,@DPTR
80EA71 FE                MOV     R6,A
80EA72 C3                CLR     C
80EA73 9F                SUBB    A,R7
80EA74 4003              JC      $ + 5H
80EA76 02EF8F            LJMP    ?C0094?RACKSET
  137: 				{					
  138: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80EA79 901777            MOV     DPTR,#InStr
80EA7C E0                MOVX    A,@DPTR
80EA7D FC                MOV     R4,A
80EA7E A3                INC     DPTR
80EA7F E0                MOVX    A,@DPTR
80EA80 2E                ADD     A,R6
80EA81 F582              MOV     DPL,A
80EA83 E4                CLR     A
80EA84 3C                ADDC    A,R4
80EA85 F583              MOV     DPH,A
80EA87 E0                MOVX    A,@DPTR
80EA88 FF                MOV     R7,A
80EA89 C3                CLR     C
80EA8A 9400              SUBB    A,#00H
80EA8C 4018              JC      ?C0029?RACKSET
80EA8E EF                MOV     A,R7
80EA8F D3                SETB    C
80EA90 9409              SUBB    A,#09H
80EA92 5012              JNC     ?C0029?RACKSET
  139: 						iRackColumnSet[RackNo - 1][0].UseState = *( InStr + i );					
80EA94 902DFA            MOV     DPTR,#RackNo
80EA97 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 584


80EA98 C4                SWAP    A
80EA99 54F0              ANL     A,#0F0H
80EA9B 2437              ADD     A,#LOW iRackColumnSet-0FH
80EA9D F582              MOV     DPL,A
80EA9F E4                CLR     A
80EAA0 3401              ADDC    A,#HIGH iRackColumnSet-0FH
80EAA2 F583              MOV     DPH,A
80EAA4 EF                MOV     A,R7
80EAA5 F0                MOVX    @DPTR,A
  140: 				}			
80EAA6         ?C0029?RACKSET:
80EAA6 90177C            MOV     DPTR,#i
80EAA9 E0                MOVX    A,@DPTR
80EAAA 04                INC     A
80EAAB F0                MOVX    @DPTR,A
80EAAC 80BC              SJMP    ?C0027?RACKSET
  141: 			}			
  142: 		break;	
  143: 		case 4:// 货道2开启状态
80EAAE         ?C0031?RACKSET:
  144: 			if(  OutInFlag == 0 )							
80EAAE 201A31            JB      OutInFlag,?C0032?RACKSET
  145: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][1].UseState );			
80EAB1 901775            MOV     DPTR,#OutStr
80EAB4 E0                MOVX    A,@DPTR
80EAB5 FE                MOV     R6,A
80EAB6 A3                INC     DPTR
80EAB7 E0                MOVX    A,@DPTR
80EAB8 AA06              MOV     R2,AR6
80EABA F9                MOV     R1,A
80EABB 7B00              MOV     R3,#?C?XDATASEG
80EABD C003              PUSH    AR3
80EABF C002              PUSH    AR2
80EAC1 C001              PUSH    AR1
80EAC3 7B80              MOV     R3,#BYTE2 08013F4H
80EAC5 7A13              MOV     R2,#HIGH 08013F4H
80EAC7 79F4              MOV     R1,#LOW 08013F4H
80EAC9 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80EACC A5128007B6        ECALL   ?C?PSTXDATA
80EAD1 902DFA            MOV     DPTR,#RackNo
80EAD4 E0                MOVX    A,@DPTR
80EAD5 C4                SWAP    A
80EAD6 54F0              ANL     A,#0F0H
80EAD8 2439              ADD     A,#LOW iRackColumnSet-0DH
80EADA F582              MOV     DPL,A
80EADC E4                CLR     A
80EADD 3401              ADDC    A,#HIGH iRackColumnSet-0DH
80EADF         
80EADF 02EEF9            LJMP    ?C0179?RACKSET
80EAE2         ?C0032?RACKSET:
  146: 			else//存入
  147: 			{
  148: 				Templen = *len;
80EAE2 901779            MOV     DPTR,#len
80EAE5 E0                MOVX    A,@DPTR
80EAE6 FE                MOV     R6,A
80EAE7 A3                INC     DPTR
80EAE8 E0                MOVX    A,@DPTR
80EAE9 F582              MOV     DPL,A
80EAEB 8E83              MOV     DPH,R6
80EAED E0                MOVX    A,@DPTR
80EAEE 90177B            MOV     DPTR,#Templen
80EAF1 F0                MOVX    @DPTR,A
  149: 				if( Templen == 0 )
80EAF2 7003              JNZ     $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 585


80EAF4 02EF8F            LJMP    ?C0094?RACKSET
  150: 					break;
80EAF7         ?C0034?RACKSET:
  151: 				if( Templen > 1 )
80EAF7 90177B            MOV     DPTR,#Templen
80EAFA E0                MOVX    A,@DPTR
80EAFB D3                SETB    C
80EAFC 9401              SUBB    A,#01H
80EAFE 4003              JC      ?C0035?RACKSET
  152: 					Templen = 1;	
80EB00 7401              MOV     A,#01H
80EB02 F0                MOVX    @DPTR,A
80EB03         ?C0035?RACKSET:
  153: 				iRackColumnSet[RackNo - 1][1].UseState = 0;	
80EB03 902DFA            MOV     DPTR,#RackNo
80EB06 E0                MOVX    A,@DPTR
80EB07 C4                SWAP    A
80EB08 54F0              ANL     A,#0F0H
80EB0A 2439              ADD     A,#LOW iRackColumnSet-0DH
80EB0C F582              MOV     DPL,A
80EB0E E4                CLR     A
80EB0F 3401              ADDC    A,#HIGH iRackColumnSet-0DH
80EB11 F583              MOV     DPH,A
80EB13 E4                CLR     A
80EB14 F0                MOVX    @DPTR,A
  154: 				for( i = 0; i < Templen; i ++ )
80EB15 90177C            MOV     DPTR,#i
80EB18 F0                MOVX    @DPTR,A
80EB19         ?C0036?RACKSET:
80EB19 90177B            MOV     DPTR,#Templen
80EB1C E0                MOVX    A,@DPTR
80EB1D FF                MOV     R7,A
80EB1E A3                INC     DPTR
80EB1F E0                MOVX    A,@DPTR
80EB20 FE                MOV     R6,A
80EB21 C3                CLR     C
80EB22 9F                SUBB    A,R7
80EB23 4003              JC      $ + 5H
80EB25 02EF8F            LJMP    ?C0094?RACKSET
  155: 				{					
  156: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80EB28 901777            MOV     DPTR,#InStr
80EB2B E0                MOVX    A,@DPTR
80EB2C FC                MOV     R4,A
80EB2D A3                INC     DPTR
80EB2E E0                MOVX    A,@DPTR
80EB2F 2E                ADD     A,R6
80EB30 F582              MOV     DPL,A
80EB32 E4                CLR     A
80EB33 3C                ADDC    A,R4
80EB34 F583              MOV     DPH,A
80EB36 E0                MOVX    A,@DPTR
80EB37 FF                MOV     R7,A
80EB38 C3                CLR     C
80EB39 9400              SUBB    A,#00H
80EB3B 4018              JC      ?C0038?RACKSET
80EB3D EF                MOV     A,R7
80EB3E D3                SETB    C
80EB3F 9409              SUBB    A,#09H
80EB41 5012              JNC     ?C0038?RACKSET
  157: 						iRackColumnSet[RackNo - 1][1].UseState = *( InStr + i );					
80EB43 902DFA            MOV     DPTR,#RackNo
80EB46 E0                MOVX    A,@DPTR
80EB47 C4                SWAP    A
80EB48 54F0              ANL     A,#0F0H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 586


80EB4A 2439              ADD     A,#LOW iRackColumnSet-0DH
80EB4C F582              MOV     DPL,A
80EB4E E4                CLR     A
80EB4F 3401              ADDC    A,#HIGH iRackColumnSet-0DH
80EB51 F583              MOV     DPH,A
80EB53 EF                MOV     A,R7
80EB54 F0                MOVX    @DPTR,A
  158: 				}			
80EB55         ?C0038?RACKSET:
80EB55 90177C            MOV     DPTR,#i
80EB58 E0                MOVX    A,@DPTR
80EB59 04                INC     A
80EB5A F0                MOVX    @DPTR,A
80EB5B 80BC              SJMP    ?C0036?RACKSET
  159: 			}			
  160: 		break;	
  161: 		case 5:// 货道3开启状态
80EB5D         ?C0040?RACKSET:
  162: 			if(  OutInFlag == 0 )							
80EB5D 201A31            JB      OutInFlag,?C0041?RACKSET
  163: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][2].UseState );			
80EB60 901775            MOV     DPTR,#OutStr
80EB63 E0                MOVX    A,@DPTR
80EB64 FE                MOV     R6,A
80EB65 A3                INC     DPTR
80EB66 E0                MOVX    A,@DPTR
80EB67 AA06              MOV     R2,AR6
80EB69 F9                MOV     R1,A
80EB6A 7B00              MOV     R3,#?C?XDATASEG
80EB6C C003              PUSH    AR3
80EB6E C002              PUSH    AR2
80EB70 C001              PUSH    AR1
80EB72 7B80              MOV     R3,#BYTE2 08013F4H
80EB74 7A13              MOV     R2,#HIGH 08013F4H
80EB76 79F4              MOV     R1,#LOW 08013F4H
80EB78 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80EB7B A5128007B6        ECALL   ?C?PSTXDATA
80EB80 902DFA            MOV     DPTR,#RackNo
80EB83 E0                MOVX    A,@DPTR
80EB84 C4                SWAP    A
80EB85 54F0              ANL     A,#0F0H
80EB87 243B              ADD     A,#LOW iRackColumnSet-0BH
80EB89 F582              MOV     DPL,A
80EB8B E4                CLR     A
80EB8C 3401              ADDC    A,#HIGH iRackColumnSet-0BH
80EB8E         
80EB8E 02EEF9            LJMP    ?C0179?RACKSET
80EB91         ?C0041?RACKSET:
  164: 			else//存入
  165: 			{
  166: 				Templen = *len;
80EB91 901779            MOV     DPTR,#len
80EB94 E0                MOVX    A,@DPTR
80EB95 FE                MOV     R6,A
80EB96 A3                INC     DPTR
80EB97 E0                MOVX    A,@DPTR
80EB98 F582              MOV     DPL,A
80EB9A 8E83              MOV     DPH,R6
80EB9C E0                MOVX    A,@DPTR
80EB9D 90177B            MOV     DPTR,#Templen
80EBA0 F0                MOVX    @DPTR,A
  167: 				if( Templen == 0 )
80EBA1 7003              JNZ     $ + 5H
80EBA3 02EF8F            LJMP    ?C0094?RACKSET
  168: 					break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 587


80EBA6         ?C0043?RACKSET:
  169: 				if( Templen > 1 )
80EBA6 90177B            MOV     DPTR,#Templen
80EBA9 E0                MOVX    A,@DPTR
80EBAA D3                SETB    C
80EBAB 9401              SUBB    A,#01H
80EBAD 4003              JC      ?C0044?RACKSET
  170: 					Templen = 1;	
80EBAF 7401              MOV     A,#01H
80EBB1 F0                MOVX    @DPTR,A
80EBB2         ?C0044?RACKSET:
  171: 				iRackColumnSet[RackNo - 1][2].UseState = 0;	
80EBB2 902DFA            MOV     DPTR,#RackNo
80EBB5 E0                MOVX    A,@DPTR
80EBB6 C4                SWAP    A
80EBB7 54F0              ANL     A,#0F0H
80EBB9 243B              ADD     A,#LOW iRackColumnSet-0BH
80EBBB F582              MOV     DPL,A
80EBBD E4                CLR     A
80EBBE 3401              ADDC    A,#HIGH iRackColumnSet-0BH
80EBC0 F583              MOV     DPH,A
80EBC2 E4                CLR     A
80EBC3 F0                MOVX    @DPTR,A
  172: 				for( i = 0; i < Templen; i ++ )
80EBC4 90177C            MOV     DPTR,#i
80EBC7 F0                MOVX    @DPTR,A
80EBC8         ?C0045?RACKSET:
80EBC8 90177B            MOV     DPTR,#Templen
80EBCB E0                MOVX    A,@DPTR
80EBCC FF                MOV     R7,A
80EBCD A3                INC     DPTR
80EBCE E0                MOVX    A,@DPTR
80EBCF FE                MOV     R6,A
80EBD0 C3                CLR     C
80EBD1 9F                SUBB    A,R7
80EBD2 4003              JC      $ + 5H
80EBD4 02EF8F            LJMP    ?C0094?RACKSET
  173: 				{					
  174: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80EBD7 901777            MOV     DPTR,#InStr
80EBDA E0                MOVX    A,@DPTR
80EBDB FC                MOV     R4,A
80EBDC A3                INC     DPTR
80EBDD E0                MOVX    A,@DPTR
80EBDE 2E                ADD     A,R6
80EBDF F582              MOV     DPL,A
80EBE1 E4                CLR     A
80EBE2 3C                ADDC    A,R4
80EBE3 F583              MOV     DPH,A
80EBE5 E0                MOVX    A,@DPTR
80EBE6 FF                MOV     R7,A
80EBE7 C3                CLR     C
80EBE8 9400              SUBB    A,#00H
80EBEA 4018              JC      ?C0047?RACKSET
80EBEC EF                MOV     A,R7
80EBED D3                SETB    C
80EBEE 9409              SUBB    A,#09H
80EBF0 5012              JNC     ?C0047?RACKSET
  175: 						iRackColumnSet[RackNo - 1][2].UseState = *( InStr + i );					
80EBF2 902DFA            MOV     DPTR,#RackNo
80EBF5 E0                MOVX    A,@DPTR
80EBF6 C4                SWAP    A
80EBF7 54F0              ANL     A,#0F0H
80EBF9 243B              ADD     A,#LOW iRackColumnSet-0BH
80EBFB F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 588


80EBFD E4                CLR     A
80EBFE 3401              ADDC    A,#HIGH iRackColumnSet-0BH
80EC00 F583              MOV     DPH,A
80EC02 EF                MOV     A,R7
80EC03 F0                MOVX    @DPTR,A
  176: 				}			
80EC04         ?C0047?RACKSET:
80EC04 90177C            MOV     DPTR,#i
80EC07 E0                MOVX    A,@DPTR
80EC08 04                INC     A
80EC09 F0                MOVX    @DPTR,A
80EC0A 80BC              SJMP    ?C0045?RACKSET
  177: 			}			
  178: 		break;
  179: 		case 6:// 货道4开启状态
80EC0C         ?C0049?RACKSET:
  180: 			if(  OutInFlag == 0 )							
80EC0C 201A31            JB      OutInFlag,?C0050?RACKSET
  181: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][3].UseState );			
80EC0F 901775            MOV     DPTR,#OutStr
80EC12 E0                MOVX    A,@DPTR
80EC13 FE                MOV     R6,A
80EC14 A3                INC     DPTR
80EC15 E0                MOVX    A,@DPTR
80EC16 AA06              MOV     R2,AR6
80EC18 F9                MOV     R1,A
80EC19 7B00              MOV     R3,#?C?XDATASEG
80EC1B C003              PUSH    AR3
80EC1D C002              PUSH    AR2
80EC1F C001              PUSH    AR1
80EC21 7B80              MOV     R3,#BYTE2 08013F4H
80EC23 7A13              MOV     R2,#HIGH 08013F4H
80EC25 79F4              MOV     R1,#LOW 08013F4H
80EC27 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80EC2A A5128007B6        ECALL   ?C?PSTXDATA
80EC2F 902DFA            MOV     DPTR,#RackNo
80EC32 E0                MOVX    A,@DPTR
80EC33 C4                SWAP    A
80EC34 54F0              ANL     A,#0F0H
80EC36 243D              ADD     A,#LOW iRackColumnSet-09H
80EC38 F582              MOV     DPL,A
80EC3A E4                CLR     A
80EC3B 3401              ADDC    A,#HIGH iRackColumnSet-09H
80EC3D         
80EC3D 02EEF9            LJMP    ?C0179?RACKSET
80EC40         ?C0050?RACKSET:
  182: 			else//存入
  183: 			{
  184: 				Templen = *len;
80EC40 901779            MOV     DPTR,#len
80EC43 E0                MOVX    A,@DPTR
80EC44 FE                MOV     R6,A
80EC45 A3                INC     DPTR
80EC46 E0                MOVX    A,@DPTR
80EC47 F582              MOV     DPL,A
80EC49 8E83              MOV     DPH,R6
80EC4B E0                MOVX    A,@DPTR
80EC4C 90177B            MOV     DPTR,#Templen
80EC4F F0                MOVX    @DPTR,A
  185: 				if( Templen == 0 )
80EC50 7003              JNZ     $ + 5H
80EC52 02EF8F            LJMP    ?C0094?RACKSET
  186: 					break;
80EC55         ?C0052?RACKSET:
  187: 				if( Templen > 1 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 589


80EC55 90177B            MOV     DPTR,#Templen
80EC58 E0                MOVX    A,@DPTR
80EC59 D3                SETB    C
80EC5A 9401              SUBB    A,#01H
80EC5C 4003              JC      ?C0053?RACKSET
  188: 					Templen = 1;	
80EC5E 7401              MOV     A,#01H
80EC60 F0                MOVX    @DPTR,A
80EC61         ?C0053?RACKSET:
  189: 				iRackColumnSet[RackNo - 1][3].UseState = 0;	
80EC61 902DFA            MOV     DPTR,#RackNo
80EC64 E0                MOVX    A,@DPTR
80EC65 C4                SWAP    A
80EC66 54F0              ANL     A,#0F0H
80EC68 243D              ADD     A,#LOW iRackColumnSet-09H
80EC6A F582              MOV     DPL,A
80EC6C E4                CLR     A
80EC6D 3401              ADDC    A,#HIGH iRackColumnSet-09H
80EC6F F583              MOV     DPH,A
80EC71 E4                CLR     A
80EC72 F0                MOVX    @DPTR,A
  190: 				for( i = 0; i < Templen; i ++ )
80EC73 90177C            MOV     DPTR,#i
80EC76 F0                MOVX    @DPTR,A
80EC77         ?C0054?RACKSET:
80EC77 90177B            MOV     DPTR,#Templen
80EC7A E0                MOVX    A,@DPTR
80EC7B FF                MOV     R7,A
80EC7C A3                INC     DPTR
80EC7D E0                MOVX    A,@DPTR
80EC7E FE                MOV     R6,A
80EC7F C3                CLR     C
80EC80 9F                SUBB    A,R7
80EC81 4003              JC      $ + 5H
80EC83 02EF8F            LJMP    ?C0094?RACKSET
  191: 				{					
  192: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80EC86 901777            MOV     DPTR,#InStr
80EC89 E0                MOVX    A,@DPTR
80EC8A FC                MOV     R4,A
80EC8B A3                INC     DPTR
80EC8C E0                MOVX    A,@DPTR
80EC8D 2E                ADD     A,R6
80EC8E F582              MOV     DPL,A
80EC90 E4                CLR     A
80EC91 3C                ADDC    A,R4
80EC92 F583              MOV     DPH,A
80EC94 E0                MOVX    A,@DPTR
80EC95 FF                MOV     R7,A
80EC96 C3                CLR     C
80EC97 9400              SUBB    A,#00H
80EC99 4018              JC      ?C0056?RACKSET
80EC9B EF                MOV     A,R7
80EC9C D3                SETB    C
80EC9D 9409              SUBB    A,#09H
80EC9F 5012              JNC     ?C0056?RACKSET
  193: 						iRackColumnSet[RackNo - 1][3].UseState = *( InStr + i );					
80ECA1 902DFA            MOV     DPTR,#RackNo
80ECA4 E0                MOVX    A,@DPTR
80ECA5 C4                SWAP    A
80ECA6 54F0              ANL     A,#0F0H
80ECA8 243D              ADD     A,#LOW iRackColumnSet-09H
80ECAA F582              MOV     DPL,A
80ECAC E4                CLR     A
80ECAD 3401              ADDC    A,#HIGH iRackColumnSet-09H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 590


80ECAF F583              MOV     DPH,A
80ECB1 EF                MOV     A,R7
80ECB2 F0                MOVX    @DPTR,A
  194: 				}			
80ECB3         ?C0056?RACKSET:
80ECB3 90177C            MOV     DPTR,#i
80ECB6 E0                MOVX    A,@DPTR
80ECB7 04                INC     A
80ECB8 F0                MOVX    @DPTR,A
80ECB9 80BC              SJMP    ?C0054?RACKSET
  195: 			}			
  196: 		break;
  197: 		case 7:// 货道5开启状态
80ECBB         ?C0058?RACKSET:
  198: 			if(  OutInFlag == 0 )							
80ECBB 201A31            JB      OutInFlag,?C0059?RACKSET
  199: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][4].UseState );			
80ECBE 901775            MOV     DPTR,#OutStr
80ECC1 E0                MOVX    A,@DPTR
80ECC2 FE                MOV     R6,A
80ECC3 A3                INC     DPTR
80ECC4 E0                MOVX    A,@DPTR
80ECC5 AA06              MOV     R2,AR6
80ECC7 F9                MOV     R1,A
80ECC8 7B00              MOV     R3,#?C?XDATASEG
80ECCA C003              PUSH    AR3
80ECCC C002              PUSH    AR2
80ECCE C001              PUSH    AR1
80ECD0 7B80              MOV     R3,#BYTE2 08013F4H
80ECD2 7A13              MOV     R2,#HIGH 08013F4H
80ECD4 79F4              MOV     R1,#LOW 08013F4H
80ECD6 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80ECD9 A5128007B6        ECALL   ?C?PSTXDATA
80ECDE 902DFA            MOV     DPTR,#RackNo
80ECE1 E0                MOVX    A,@DPTR
80ECE2 C4                SWAP    A
80ECE3 54F0              ANL     A,#0F0H
80ECE5 243F              ADD     A,#LOW iRackColumnSet-07H
80ECE7 F582              MOV     DPL,A
80ECE9 E4                CLR     A
80ECEA 3401              ADDC    A,#HIGH iRackColumnSet-07H
80ECEC         
80ECEC 02EEF9            LJMP    ?C0179?RACKSET
80ECEF         ?C0059?RACKSET:
  200: 			else//存入
  201: 			{
  202: 				Templen = *len;
80ECEF 901779            MOV     DPTR,#len
80ECF2 E0                MOVX    A,@DPTR
80ECF3 FE                MOV     R6,A
80ECF4 A3                INC     DPTR
80ECF5 E0                MOVX    A,@DPTR
80ECF6 F582              MOV     DPL,A
80ECF8 8E83              MOV     DPH,R6
80ECFA E0                MOVX    A,@DPTR
80ECFB 90177B            MOV     DPTR,#Templen
80ECFE F0                MOVX    @DPTR,A
  203: 				if( Templen == 0 )
80ECFF 7003              JNZ     $ + 5H
80ED01 02EF8F            LJMP    ?C0094?RACKSET
  204: 					break;
80ED04         ?C0061?RACKSET:
  205: 				if( Templen > 1 )
80ED04 90177B            MOV     DPTR,#Templen
80ED07 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 591


80ED08 D3                SETB    C
80ED09 9401              SUBB    A,#01H
80ED0B 4003              JC      ?C0062?RACKSET
  206: 					Templen = 1;	
80ED0D 7401              MOV     A,#01H
80ED0F F0                MOVX    @DPTR,A
80ED10         ?C0062?RACKSET:
  207: 				iRackColumnSet[RackNo - 1][4].UseState = 0;	
80ED10 902DFA            MOV     DPTR,#RackNo
80ED13 E0                MOVX    A,@DPTR
80ED14 C4                SWAP    A
80ED15 54F0              ANL     A,#0F0H
80ED17 243F              ADD     A,#LOW iRackColumnSet-07H
80ED19 F582              MOV     DPL,A
80ED1B E4                CLR     A
80ED1C 3401              ADDC    A,#HIGH iRackColumnSet-07H
80ED1E F583              MOV     DPH,A
80ED20 E4                CLR     A
80ED21 F0                MOVX    @DPTR,A
  208: 				for( i = 0; i < Templen; i ++ )
80ED22 90177C            MOV     DPTR,#i
80ED25 F0                MOVX    @DPTR,A
80ED26         ?C0063?RACKSET:
80ED26 90177B            MOV     DPTR,#Templen
80ED29 E0                MOVX    A,@DPTR
80ED2A FF                MOV     R7,A
80ED2B A3                INC     DPTR
80ED2C E0                MOVX    A,@DPTR
80ED2D FE                MOV     R6,A
80ED2E C3                CLR     C
80ED2F 9F                SUBB    A,R7
80ED30 4003              JC      $ + 5H
80ED32 02EF8F            LJMP    ?C0094?RACKSET
  209: 				{					
  210: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80ED35 901777            MOV     DPTR,#InStr
80ED38 E0                MOVX    A,@DPTR
80ED39 FC                MOV     R4,A
80ED3A A3                INC     DPTR
80ED3B E0                MOVX    A,@DPTR
80ED3C 2E                ADD     A,R6
80ED3D F582              MOV     DPL,A
80ED3F E4                CLR     A
80ED40 3C                ADDC    A,R4
80ED41 F583              MOV     DPH,A
80ED43 E0                MOVX    A,@DPTR
80ED44 FF                MOV     R7,A
80ED45 C3                CLR     C
80ED46 9400              SUBB    A,#00H
80ED48 4018              JC      ?C0065?RACKSET
80ED4A EF                MOV     A,R7
80ED4B D3                SETB    C
80ED4C 9409              SUBB    A,#09H
80ED4E 5012              JNC     ?C0065?RACKSET
  211: 						iRackColumnSet[RackNo - 1][4].UseState = *( InStr + i );					
80ED50 902DFA            MOV     DPTR,#RackNo
80ED53 E0                MOVX    A,@DPTR
80ED54 C4                SWAP    A
80ED55 54F0              ANL     A,#0F0H
80ED57 243F              ADD     A,#LOW iRackColumnSet-07H
80ED59 F582              MOV     DPL,A
80ED5B E4                CLR     A
80ED5C 3401              ADDC    A,#HIGH iRackColumnSet-07H
80ED5E F583              MOV     DPH,A
80ED60 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 592


80ED61 F0                MOVX    @DPTR,A
  212: 				}			
80ED62         ?C0065?RACKSET:
80ED62 90177C            MOV     DPTR,#i
80ED65 E0                MOVX    A,@DPTR
80ED66 04                INC     A
80ED67 F0                MOVX    @DPTR,A
80ED68 80BC              SJMP    ?C0063?RACKSET
  213: 			}			
  214: 		break;
  215: 		case 8:// 货道6开启状态
80ED6A         ?C0067?RACKSET:
  216: 			if(  OutInFlag == 0 )							
80ED6A 201A31            JB      OutInFlag,?C0068?RACKSET
  217: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][5].UseState );			
80ED6D 901775            MOV     DPTR,#OutStr
80ED70 E0                MOVX    A,@DPTR
80ED71 FE                MOV     R6,A
80ED72 A3                INC     DPTR
80ED73 E0                MOVX    A,@DPTR
80ED74 AA06              MOV     R2,AR6
80ED76 F9                MOV     R1,A
80ED77 7B00              MOV     R3,#?C?XDATASEG
80ED79 C003              PUSH    AR3
80ED7B C002              PUSH    AR2
80ED7D C001              PUSH    AR1
80ED7F 7B80              MOV     R3,#BYTE2 08013F4H
80ED81 7A13              MOV     R2,#HIGH 08013F4H
80ED83 79F4              MOV     R1,#LOW 08013F4H
80ED85 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80ED88 A5128007B6        ECALL   ?C?PSTXDATA
80ED8D 902DFA            MOV     DPTR,#RackNo
80ED90 E0                MOVX    A,@DPTR
80ED91 C4                SWAP    A
80ED92 54F0              ANL     A,#0F0H
80ED94 2441              ADD     A,#LOW iRackColumnSet-05H
80ED96 F582              MOV     DPL,A
80ED98 E4                CLR     A
80ED99 3401              ADDC    A,#HIGH iRackColumnSet-05H
80ED9B         
80ED9B 02EEF9            LJMP    ?C0179?RACKSET
80ED9E         ?C0068?RACKSET:
  218: 			else//存入
  219: 			{
  220: 				Templen = *len;
80ED9E 901779            MOV     DPTR,#len
80EDA1 E0                MOVX    A,@DPTR
80EDA2 FE                MOV     R6,A
80EDA3 A3                INC     DPTR
80EDA4 E0                MOVX    A,@DPTR
80EDA5 F582              MOV     DPL,A
80EDA7 8E83              MOV     DPH,R6
80EDA9 E0                MOVX    A,@DPTR
80EDAA 90177B            MOV     DPTR,#Templen
80EDAD F0                MOVX    @DPTR,A
  221: 				if( Templen == 0 )
80EDAE 7003              JNZ     $ + 5H
80EDB0 02EF8F            LJMP    ?C0094?RACKSET
  222: 					break;
80EDB3         ?C0070?RACKSET:
  223: 				if( Templen > 1 )
80EDB3 90177B            MOV     DPTR,#Templen
80EDB6 E0                MOVX    A,@DPTR
80EDB7 D3                SETB    C
80EDB8 9401              SUBB    A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 593


80EDBA 4003              JC      ?C0071?RACKSET
  224: 					Templen = 1;	
80EDBC 7401              MOV     A,#01H
80EDBE F0                MOVX    @DPTR,A
80EDBF         ?C0071?RACKSET:
  225: 				iRackColumnSet[RackNo - 1][5].UseState = 0;	
80EDBF 902DFA            MOV     DPTR,#RackNo
80EDC2 E0                MOVX    A,@DPTR
80EDC3 C4                SWAP    A
80EDC4 54F0              ANL     A,#0F0H
80EDC6 2441              ADD     A,#LOW iRackColumnSet-05H
80EDC8 F582              MOV     DPL,A
80EDCA E4                CLR     A
80EDCB 3401              ADDC    A,#HIGH iRackColumnSet-05H
80EDCD F583              MOV     DPH,A
80EDCF E4                CLR     A
80EDD0 F0                MOVX    @DPTR,A
  226: 				for( i = 0; i < Templen; i ++ )
80EDD1 90177C            MOV     DPTR,#i
80EDD4 F0                MOVX    @DPTR,A
80EDD5         ?C0072?RACKSET:
80EDD5 90177B            MOV     DPTR,#Templen
80EDD8 E0                MOVX    A,@DPTR
80EDD9 FF                MOV     R7,A
80EDDA A3                INC     DPTR
80EDDB E0                MOVX    A,@DPTR
80EDDC FE                MOV     R6,A
80EDDD C3                CLR     C
80EDDE 9F                SUBB    A,R7
80EDDF 4003              JC      $ + 5H
80EDE1 02EF8F            LJMP    ?C0094?RACKSET
  227: 				{					
  228: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80EDE4 901777            MOV     DPTR,#InStr
80EDE7 E0                MOVX    A,@DPTR
80EDE8 FC                MOV     R4,A
80EDE9 A3                INC     DPTR
80EDEA E0                MOVX    A,@DPTR
80EDEB 2E                ADD     A,R6
80EDEC F582              MOV     DPL,A
80EDEE E4                CLR     A
80EDEF 3C                ADDC    A,R4
80EDF0 F583              MOV     DPH,A
80EDF2 E0                MOVX    A,@DPTR
80EDF3 FF                MOV     R7,A
80EDF4 C3                CLR     C
80EDF5 9400              SUBB    A,#00H
80EDF7 4018              JC      ?C0074?RACKSET
80EDF9 EF                MOV     A,R7
80EDFA D3                SETB    C
80EDFB 9409              SUBB    A,#09H
80EDFD 5012              JNC     ?C0074?RACKSET
  229: 						iRackColumnSet[RackNo - 1][5].UseState = *( InStr + i );					
80EDFF 902DFA            MOV     DPTR,#RackNo
80EE02 E0                MOVX    A,@DPTR
80EE03 C4                SWAP    A
80EE04 54F0              ANL     A,#0F0H
80EE06 2441              ADD     A,#LOW iRackColumnSet-05H
80EE08 F582              MOV     DPL,A
80EE0A E4                CLR     A
80EE0B 3401              ADDC    A,#HIGH iRackColumnSet-05H
80EE0D F583              MOV     DPH,A
80EE0F EF                MOV     A,R7
80EE10 F0                MOVX    @DPTR,A
  230: 				}			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 594


80EE11         ?C0074?RACKSET:
80EE11 90177C            MOV     DPTR,#i
80EE14 E0                MOVX    A,@DPTR
80EE15 04                INC     A
80EE16 F0                MOVX    @DPTR,A
80EE17 80BC              SJMP    ?C0072?RACKSET
  231: 			}			
  232: 		break;
  233: 		case 9:// 货道7开启状态
80EE19         ?C0076?RACKSET:
  234: 			if(  OutInFlag == 0 )							
80EE19 201A31            JB      OutInFlag,?C0077?RACKSET
  235: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][6].UseState );			
80EE1C 901775            MOV     DPTR,#OutStr
80EE1F E0                MOVX    A,@DPTR
80EE20 FE                MOV     R6,A
80EE21 A3                INC     DPTR
80EE22 E0                MOVX    A,@DPTR
80EE23 AA06              MOV     R2,AR6
80EE25 F9                MOV     R1,A
80EE26 7B00              MOV     R3,#?C?XDATASEG
80EE28 C003              PUSH    AR3
80EE2A C002              PUSH    AR2
80EE2C C001              PUSH    AR1
80EE2E 7B80              MOV     R3,#BYTE2 08013F4H
80EE30 7A13              MOV     R2,#HIGH 08013F4H
80EE32 79F4              MOV     R1,#LOW 08013F4H
80EE34 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80EE37 A5128007B6        ECALL   ?C?PSTXDATA
80EE3C 902DFA            MOV     DPTR,#RackNo
80EE3F E0                MOVX    A,@DPTR
80EE40 C4                SWAP    A
80EE41 54F0              ANL     A,#0F0H
80EE43 2443              ADD     A,#LOW iRackColumnSet-03H
80EE45 F582              MOV     DPL,A
80EE47 E4                CLR     A
80EE48 3401              ADDC    A,#HIGH iRackColumnSet-03H
80EE4A         
80EE4A 02EEF9            LJMP    ?C0179?RACKSET
80EE4D         ?C0077?RACKSET:
  236: 			else//存入
  237: 			{
  238: 				Templen = *len;
80EE4D 901779            MOV     DPTR,#len
80EE50 E0                MOVX    A,@DPTR
80EE51 FE                MOV     R6,A
80EE52 A3                INC     DPTR
80EE53 E0                MOVX    A,@DPTR
80EE54 F582              MOV     DPL,A
80EE56 8E83              MOV     DPH,R6
80EE58 E0                MOVX    A,@DPTR
80EE59 90177B            MOV     DPTR,#Templen
80EE5C F0                MOVX    @DPTR,A
  239: 				if( Templen == 0 )
80EE5D 7003              JNZ     $ + 5H
80EE5F 02EF8F            LJMP    ?C0094?RACKSET
  240: 					break;
80EE62         ?C0079?RACKSET:
  241: 				if( Templen > 1 )
80EE62 90177B            MOV     DPTR,#Templen
80EE65 E0                MOVX    A,@DPTR
80EE66 D3                SETB    C
80EE67 9401              SUBB    A,#01H
80EE69 4003              JC      ?C0080?RACKSET
  242: 					Templen = 1;	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 595


80EE6B 7401              MOV     A,#01H
80EE6D F0                MOVX    @DPTR,A
80EE6E         ?C0080?RACKSET:
  243: 				iRackColumnSet[RackNo - 1][6].UseState = 0;	
80EE6E 902DFA            MOV     DPTR,#RackNo
80EE71 E0                MOVX    A,@DPTR
80EE72 C4                SWAP    A
80EE73 54F0              ANL     A,#0F0H
80EE75 2443              ADD     A,#LOW iRackColumnSet-03H
80EE77 F582              MOV     DPL,A
80EE79 E4                CLR     A
80EE7A 3401              ADDC    A,#HIGH iRackColumnSet-03H
80EE7C F583              MOV     DPH,A
80EE7E E4                CLR     A
80EE7F F0                MOVX    @DPTR,A
  244: 				for( i = 0; i < Templen; i ++ )
80EE80 90177C            MOV     DPTR,#i
80EE83 F0                MOVX    @DPTR,A
80EE84         ?C0081?RACKSET:
80EE84 90177B            MOV     DPTR,#Templen
80EE87 E0                MOVX    A,@DPTR
80EE88 FF                MOV     R7,A
80EE89 A3                INC     DPTR
80EE8A E0                MOVX    A,@DPTR
80EE8B FE                MOV     R6,A
80EE8C C3                CLR     C
80EE8D 9F                SUBB    A,R7
80EE8E 4003              JC      $ + 5H
80EE90 02EF8F            LJMP    ?C0094?RACKSET
  245: 				{					
  246: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80EE93 901777            MOV     DPTR,#InStr
80EE96 E0                MOVX    A,@DPTR
80EE97 FC                MOV     R4,A
80EE98 A3                INC     DPTR
80EE99 E0                MOVX    A,@DPTR
80EE9A 2E                ADD     A,R6
80EE9B F582              MOV     DPL,A
80EE9D E4                CLR     A
80EE9E 3C                ADDC    A,R4
80EE9F F583              MOV     DPH,A
80EEA1 E0                MOVX    A,@DPTR
80EEA2 FF                MOV     R7,A
80EEA3 C3                CLR     C
80EEA4 9400              SUBB    A,#00H
80EEA6 4018              JC      ?C0083?RACKSET
80EEA8 EF                MOV     A,R7
80EEA9 D3                SETB    C
80EEAA 9409              SUBB    A,#09H
80EEAC 5012              JNC     ?C0083?RACKSET
  247: 						iRackColumnSet[RackNo - 1][6].UseState = *( InStr + i );					
80EEAE 902DFA            MOV     DPTR,#RackNo
80EEB1 E0                MOVX    A,@DPTR
80EEB2 C4                SWAP    A
80EEB3 54F0              ANL     A,#0F0H
80EEB5 2443              ADD     A,#LOW iRackColumnSet-03H
80EEB7 F582              MOV     DPL,A
80EEB9 E4                CLR     A
80EEBA 3401              ADDC    A,#HIGH iRackColumnSet-03H
80EEBC F583              MOV     DPH,A
80EEBE EF                MOV     A,R7
80EEBF F0                MOVX    @DPTR,A
  248: 				}			
80EEC0         ?C0083?RACKSET:
80EEC0 90177C            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 596


80EEC3 E0                MOVX    A,@DPTR
80EEC4 04                INC     A
80EEC5 F0                MOVX    @DPTR,A
80EEC6 80BC              SJMP    ?C0081?RACKSET
  249: 			}			
  250: 		break;
  251: 		case 10:// 货道8开启状态
80EEC8         ?C0085?RACKSET:
  252: 			if(  OutInFlag == 0 )							
80EEC8 201A4F            JB      OutInFlag,?C0086?RACKSET
  253: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][7].UseState );			
80EECB 901775            MOV     DPTR,#OutStr
80EECE E0                MOVX    A,@DPTR
80EECF FE                MOV     R6,A
80EED0 A3                INC     DPTR
80EED1 E0                MOVX    A,@DPTR
80EED2 AA06              MOV     R2,AR6
80EED4 F9                MOV     R1,A
80EED5 7B00              MOV     R3,#?C?XDATASEG
80EED7 C003              PUSH    AR3
80EED9 C002              PUSH    AR2
80EEDB C001              PUSH    AR1
80EEDD 7B80              MOV     R3,#BYTE2 08013F4H
80EEDF 7A13              MOV     R2,#HIGH 08013F4H
80EEE1 79F4              MOV     R1,#LOW 08013F4H
80EEE3 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
80EEE6 A5128007B6        ECALL   ?C?PSTXDATA
80EEEB 902DFA            MOV     DPTR,#RackNo
80EEEE E0                MOVX    A,@DPTR
80EEEF C4                SWAP    A
80EEF0 54F0              ANL     A,#0F0H
80EEF2 2445              ADD     A,#LOW iRackColumnSet-01H
80EEF4 F582              MOV     DPL,A
80EEF6 E4                CLR     A
80EEF7 3401              ADDC    A,#HIGH iRackColumnSet-01H
80EEF9         
80EEF9 F583              MOV     DPH,A
80EEFB E0                MOVX    A,@DPTR
80EEFC 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
80EEFF F0                MOVX    @DPTR,A
80EF00 D001              POP     AR1
80EF02 D002              POP     AR2
80EF04 D003              POP     AR3
80EF06 A512800949        ECALL   _sprintf
80EF0B 901779            MOV     DPTR,#len
80EF0E E0                MOVX    A,@DPTR
80EF0F FC                MOV     R4,A
80EF10 A3                INC     DPTR
80EF11 E0                MOVX    A,@DPTR
80EF12 F582              MOV     DPL,A
80EF14 8C83              MOV     DPH,R4
80EF16 EF                MOV     A,R7
80EF17 F0                MOVX    @DPTR,A
80EF18 8075              SJMP    ?C0094?RACKSET
80EF1A         ?C0086?RACKSET:
  254: 			else//存入
  255: 			{
  256: 				Templen = *len;
80EF1A 901779            MOV     DPTR,#len
80EF1D E0                MOVX    A,@DPTR
80EF1E FE                MOV     R6,A
80EF1F A3                INC     DPTR
80EF20 E0                MOVX    A,@DPTR
80EF21 F582              MOV     DPL,A
80EF23 8E83              MOV     DPH,R6
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 597


80EF25 E0                MOVX    A,@DPTR
80EF26 90177B            MOV     DPTR,#Templen
80EF29 F0                MOVX    @DPTR,A
  257: 				if( Templen == 0 )
80EF2A 6063              JZ      ?C0094?RACKSET
  258: 					break;
80EF2C         ?C0088?RACKSET:
  259: 				if( Templen > 1 )
80EF2C 90177B            MOV     DPTR,#Templen
80EF2F E0                MOVX    A,@DPTR
80EF30 D3                SETB    C
80EF31 9401              SUBB    A,#01H
80EF33 4003              JC      ?C0089?RACKSET
  260: 					Templen = 1;	
80EF35 7401              MOV     A,#01H
80EF37 F0                MOVX    @DPTR,A
80EF38         ?C0089?RACKSET:
  261: 				iRackColumnSet[RackNo - 1][7].UseState = 0;	
80EF38 902DFA            MOV     DPTR,#RackNo
80EF3B E0                MOVX    A,@DPTR
80EF3C C4                SWAP    A
80EF3D 54F0              ANL     A,#0F0H
80EF3F 2445              ADD     A,#LOW iRackColumnSet-01H
80EF41 F582              MOV     DPL,A
80EF43 E4                CLR     A
80EF44 3401              ADDC    A,#HIGH iRackColumnSet-01H
80EF46 F583              MOV     DPH,A
80EF48 E4                CLR     A
80EF49 F0                MOVX    @DPTR,A
  262: 				for( i = 0; i < Templen; i ++ )
80EF4A 90177C            MOV     DPTR,#i
80EF4D F0                MOVX    @DPTR,A
80EF4E         ?C0090?RACKSET:
80EF4E 90177B            MOV     DPTR,#Templen
80EF51 E0                MOVX    A,@DPTR
80EF52 FF                MOV     R7,A
80EF53 A3                INC     DPTR
80EF54 E0                MOVX    A,@DPTR
80EF55 FE                MOV     R6,A
80EF56 C3                CLR     C
80EF57 9F                SUBB    A,R7
80EF58 5035              JNC     ?C0094?RACKSET
  263: 				{					
  264: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80EF5A 901777            MOV     DPTR,#InStr
80EF5D E0                MOVX    A,@DPTR
80EF5E FC                MOV     R4,A
80EF5F A3                INC     DPTR
80EF60 E0                MOVX    A,@DPTR
80EF61 2E                ADD     A,R6
80EF62 F582              MOV     DPL,A
80EF64 E4                CLR     A
80EF65 3C                ADDC    A,R4
80EF66 F583              MOV     DPH,A
80EF68 E0                MOVX    A,@DPTR
80EF69 FF                MOV     R7,A
80EF6A C3                CLR     C
80EF6B 9400              SUBB    A,#00H
80EF6D 4018              JC      ?C0092?RACKSET
80EF6F EF                MOV     A,R7
80EF70 D3                SETB    C
80EF71 9409              SUBB    A,#09H
80EF73 5012              JNC     ?C0092?RACKSET
  265: 						iRackColumnSet[RackNo - 1][7].UseState = *( InStr + i );					
80EF75 902DFA            MOV     DPTR,#RackNo
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 598


80EF78 E0                MOVX    A,@DPTR
80EF79 C4                SWAP    A
80EF7A 54F0              ANL     A,#0F0H
80EF7C 2445              ADD     A,#LOW iRackColumnSet-01H
80EF7E F582              MOV     DPL,A
80EF80 E4                CLR     A
80EF81 3401              ADDC    A,#HIGH iRackColumnSet-01H
80EF83 F583              MOV     DPH,A
80EF85 EF                MOV     A,R7
80EF86 F0                MOVX    @DPTR,A
  266: 				}			
80EF87         ?C0092?RACKSET:
80EF87 90177C            MOV     DPTR,#i
80EF8A E0                MOVX    A,@DPTR
80EF8B 04                INC     A
80EF8C F0                MOVX    @DPTR,A
80EF8D 80BF              SJMP    ?C0090?RACKSET
  267: 			}			
  268: 		break;
  269: 	}
  270: }
80EF8F         ?C0094?RACKSET:
80EF8F A522              ERET    
----- FUNCTION _ReadWriteRactParam (END) -------


----- FUNCTION _Rack_MenuSelected (BEGIN) -----
 FILE: 'RackSet.c'
  317: void  Rack_MenuSelected( u_char xdata *SelectedNum, u_char xdata *CursorLine, u_char MoveRange )
  318: {
80EF91 901756            MOV     DPTR,#MoveRange
80EF94 EB                MOV     A,R3
80EF95 F0                MOVX    @DPTR,A
80EF96 901752            MOV     DPTR,#SelectedNum
80EF99 EE                MOV     A,R6
80EF9A F0                MOVX    @DPTR,A
80EF9B A3                INC     DPTR
80EF9C EF                MOV     A,R7
80EF9D F0                MOVX    @DPTR,A
80EF9E A3                INC     DPTR
80EF9F EC                MOV     A,R4
80EFA0 F0                MOVX    @DPTR,A
80EFA1 A3                INC     DPTR
80EFA2 ED                MOV     A,R5
80EFA3 F0                MOVX    @DPTR,A
  319: 	u_char xdata  MenuNum = *SelectedNum;
  320: 	u_char xdata  Cursor = *CursorLine;
80EFA4 8F82              MOV     DPL,R7
80EFA6 8E83              MOV     DPH,R6
80EFA8 E0                MOVX    A,@DPTR
80EFA9 901757            MOV     DPTR,#MenuNum
80EFAC F0                MOVX    @DPTR,A
  321: 	bit	   data  flag = 1;
80EFAD 8D82              MOV     DPL,R5
80EFAF 8C83              MOV     DPH,R4
80EFB1 E0                MOVX    A,@DPTR
80EFB2 901758            MOV     DPTR,#Cursor
80EFB5 F0                MOVX    @DPTR,A
  322: 	u_char xdata  key = 0xff;
80EFB6 D218              SETB    flag
  323: 	u_char  xdata  len = 0;	
80EFB8 A3                INC     DPTR
80EFB9 74FF              MOV     A,#0FFH
80EFBB F0                MOVX    @DPTR,A
  324: 
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 599


80EFBC E4                CLR     A
80EFBD A3                INC     DPTR
80EFBE F0                MOVX    @DPTR,A
80EFBF         ?C0099?RACKSET:
  325: 	while( flag )
80EFBF 201803            JB      flag,$ + 6H
80EFC2 02F0E9            LJMP    ?C0100?RACKSET
  326: 	{
  327: 		key = GetKey();
80EFC5 A5128096D1        ECALL   GetKey
80EFCA 901759            MOV     DPTR,#key
80EFCD EF                MOV     A,R7
80EFCE F0                MOVX    @DPTR,A
  328: 		switch( key )		
80EFCF 24F3              ADD     A,#0F3H
80EFD1 7003              JNZ     $ + 5H
80EFD3 02F0B4            LJMP    ?C0117?RACKSET
80EFD6 24C5              ADD     A,#0C5H
80EFD8 6021              JZ      ?C0103?RACKSET
80EFDA 24F8              ADD     A,#0F8H
80EFDC 7003              JNZ     $ + 5H
80EFDE 02F062            LJMP    ?C0110?RACKSET
80EFE1 2435              ADD     A,#035H
80EFE3 6003              JZ      $ + 5H
80EFE5 02F0DA            LJMP    ?C0101?RACKSET
  329: 		{
  330: 			case KEY_CANCEL:
80EFE8         ?C0102?RACKSET:
  331: 				flag = 0;
80EFE8 C218              CLR     flag
  332: 				*SelectedNum = 100;				
80EFEA 901752            MOV     DPTR,#SelectedNum
80EFED E0                MOVX    A,@DPTR
80EFEE FE                MOV     R6,A
80EFEF A3                INC     DPTR
80EFF0 E0                MOVX    A,@DPTR
80EFF1 F582              MOV     DPL,A
80EFF3 8E83              MOV     DPH,R6
80EFF5 7464              MOV     A,#064H
80EFF7 F0                MOVX    @DPTR,A
  333: 				break;
80EFF8 02F0DA            LJMP    ?C0101?RACKSET
  334: 			case KEY_UP://上移  				
80EFFB         ?C0103?RACKSET:
  335: 				if( Cursor == 2 )//选中标记上移
80EFFB 901758            MOV     DPTR,#Cursor
80EFFE E0                MOVX    A,@DPTR
80EFFF 6402              XRL     A,#02H
80F001 7030              JNZ     ?C0104?RACKSET
  336: 				{			
  337: 					DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标					
80F003 D21A              SETB    ?_DisplayCursorState?BIT
80F005 901793            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80F008 7402              MOV     A,#02H
80F00A F0                MOVX    @DPTR,A
80F00B D21B              SETB    ?_DisplayCursorState?BIT+01H
80F00D E4                CLR     A
80F00E FD                MOV     R5,A
80F00F FF                MOV     R7,A
80F010 A51280897C        ECALL   _DisplayCursorState
  338: 					Cursor = 1;
80F015 901758            MOV     DPTR,#Cursor
80F018 7401              MOV     A,#01H
80F01A F0                MOVX    @DPTR,A
  339: 					if( MenuNum == 0 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 600


80F01B 901757            MOV     DPTR,#MenuNum
80F01E E0                MOVX    A,@DPTR
80F01F 7009              JNZ     ?C0105?RACKSET
  340: 						MenuNum = MoveRange;					
80F021 901756            MOV     DPTR,#MoveRange
80F024 E0                MOVX    A,@DPTR
80F025 A3                INC     DPTR
80F026 F0                MOVX    @DPTR,A
80F027 02F0DA            LJMP    ?C0101?RACKSET
80F02A         ?C0105?RACKSET:
  341: 					else									    
  342: 						MenuNum--;					
80F02A 901757            MOV     DPTR,#MenuNum
80F02D E0                MOVX    A,@DPTR
80F02E 14                DEC     A
80F02F F0                MOVX    @DPTR,A
  343: 				}
80F030 02F0DA            LJMP    ?C0101?RACKSET
80F033         ?C0104?RACKSET:
  344: 				else//菜单上翻
  345: 				{						
  346: 					DisplayRackMenuAndVal( 1, MenuNum, 1 );					
80F033 A512806E68        ECALL   ?L?COM0028
  347: 					if( MenuNum == 0 )
80F038 901757            MOV     DPTR,#MenuNum
80F03B E0                MOVX    A,@DPTR
80F03C 7008              JNZ     ?C0108?RACKSET
  348: 						MenuNum = MoveRange;					
80F03E 901756            MOV     DPTR,#MoveRange
80F041 E0                MOVX    A,@DPTR
80F042 A3                INC     DPTR
80F043 F0                MOVX    @DPTR,A
80F044 8006              SJMP    ?C0109?RACKSET
80F046         ?C0108?RACKSET:
  349: 					else									    
  350: 						MenuNum--;					
80F046 901757            MOV     DPTR,#MenuNum
80F049 E0                MOVX    A,@DPTR
80F04A 14                DEC     A
80F04B F0                MOVX    @DPTR,A
80F04C         ?C0109?RACKSET:
  351: 					DisplayRackMenuAndVal( 0, MenuNum , 1 );																					
80F04C 901757            MOV     DPTR,#MenuNum
80F04F E0                MOVX    A,@DPTR
80F050 FD                MOV     R5,A
80F051 D219              SETB    ?_DisplayRackMenuAndVal?BIT
80F053 E4                CLR     A
80F054 FF                MOV     R7,A
80F055 A512806E71        ECALL   _DisplayRackMenuAndVal
  352: 					Cursor = 1;						
80F05A 901758            MOV     DPTR,#Cursor
80F05D 7401              MOV     A,#01H
80F05F F0                MOVX    @DPTR,A
  353: 				}
  354: 				break;
80F060 8078              SJMP    ?C0101?RACKSET
  355: 			case KEY_DOWN://下移						
80F062         ?C0110?RACKSET:
  356: 				if( Cursor == 1 )//选中标记下移
80F062 901758            MOV     DPTR,#Cursor
80F065 E0                MOVX    A,@DPTR
80F066 6401              XRL     A,#01H
80F068 701B              JNZ     ?C0111?RACKSET
  357: 				{
  358: 					DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 601


80F06A A51280896E        ECALL   ?L?COM000F
  359: 					if( MenuNum == MoveRange )
80F06F 901756            MOV     DPTR,#MoveRange
80F072 E0                MOVX    A,@DPTR
80F073 FF                MOV     R7,A
80F074 A3                INC     DPTR
80F075 E0                MOVX    A,@DPTR
80F076 B50704            CJNE    A,AR7,?C0112?RACKSET
  360: 						MenuNum = 0;					
80F079 E4                CLR     A
80F07A F0                MOVX    @DPTR,A
80F07B 802F              SJMP    ?C0180?RACKSET
80F07D         ?C0112?RACKSET:
  361: 					else									    						
  362: 						MenuNum++;				     
80F07D 901757            MOV     DPTR,#MenuNum
80F080 E0                MOVX    A,@DPTR
80F081 04                INC     A
80F082 F0                MOVX    @DPTR,A
80F083         ?C0113?RACKSET:
  363: 					Cursor = 2;						
  364: 				}
80F083 8027              SJMP    ?C0180?RACKSET
80F085         ?C0111?RACKSET:
  365: 				else//菜单下翻
  366: 				{					
  367: 					DisplayRackMenuAndVal( 0, MenuNum, 1 );						
80F085 901757            MOV     DPTR,#MenuNum
80F088 E0                MOVX    A,@DPTR
80F089 FD                MOV     R5,A
80F08A D219              SETB    ?_DisplayRackMenuAndVal?BIT
80F08C E4                CLR     A
80F08D FF                MOV     R7,A
80F08E A512806E71        ECALL   _DisplayRackMenuAndVal
  368: 					if( MenuNum == MoveRange )
80F093 901756            MOV     DPTR,#MoveRange
80F096 E0                MOVX    A,@DPTR
80F097 FF                MOV     R7,A
80F098 A3                INC     DPTR
80F099 E0                MOVX    A,@DPTR
80F09A B50704            CJNE    A,AR7,?C0115?RACKSET
  369: 						MenuNum = 0;					
80F09D E4                CLR     A
80F09E F0                MOVX    @DPTR,A
80F09F 8006              SJMP    ?C0116?RACKSET
80F0A1         ?C0115?RACKSET:
  370: 					else									    
  371: 						MenuNum++;					
80F0A1 901757            MOV     DPTR,#MenuNum
80F0A4 E0                MOVX    A,@DPTR
80F0A5 04                INC     A
80F0A6 F0                MOVX    @DPTR,A
80F0A7         ?C0116?RACKSET:
  372: 					DisplayRackMenuAndVal( 1, MenuNum , 1 );																					
80F0A7 A512806E68        ECALL   ?L?COM0028
  373: 					Cursor = 2;
80F0AC         
80F0AC 901758            MOV     DPTR,#Cursor
80F0AF 7402              MOV     A,#02H
80F0B1 F0                MOVX    @DPTR,A
  374: 				}
  375: 				break;
80F0B2 8026              SJMP    ?C0101?RACKSET
  376: 			case KEY_SUBMIT://Enter,选中了某项菜单
80F0B4         ?C0117?RACKSET:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 602


  377: 				{			
  378: 					*SelectedNum = MenuNum;
80F0B4 901757            MOV     DPTR,#MenuNum
80F0B7 E0                MOVX    A,@DPTR
80F0B8 FF                MOV     R7,A
80F0B9 901752            MOV     DPTR,#SelectedNum
80F0BC E0                MOVX    A,@DPTR
80F0BD FC                MOV     R4,A
80F0BE A3                INC     DPTR
80F0BF E0                MOVX    A,@DPTR
80F0C0 F582              MOV     DPL,A
80F0C2 8C83              MOV     DPH,R4
80F0C4 EF                MOV     A,R7
80F0C5 F0                MOVX    @DPTR,A
  379: 					*CursorLine = Cursor;					
80F0C6 901758            MOV     DPTR,#Cursor
80F0C9 E0                MOVX    A,@DPTR
80F0CA FF                MOV     R7,A
80F0CB 901754            MOV     DPTR,#CursorLine
80F0CE E0                MOVX    A,@DPTR
80F0CF FC                MOV     R4,A
80F0D0 A3                INC     DPTR
80F0D1 E0                MOVX    A,@DPTR
80F0D2 F582              MOV     DPL,A
80F0D4 8C83              MOV     DPH,R4
80F0D6 EF                MOV     A,R7
80F0D7 F0                MOVX    @DPTR,A
  380: 					flag = 0;	
80F0D8 C218              CLR     flag
  381: 				}
  382: 				break;			
  383: 		}
80F0DA         ?C0101?RACKSET:
  384: 		CoreProcessCycle();//让出时间片
80F0DA A5128082D7        ECALL   CoreProcessCycle
  385: 		DelayMs( 5 );
80F0DF 7F05              MOV     R7,#05H
80F0E1 A512807EAB        ECALL   _DelayMs
  386: 	}
80F0E6 02EFBF            LJMP    ?C0099?RACKSET
80F0E9         ?C0100?RACKSET:
  387: 	ClearKey();		
80F0E9 A502808FA5        EJMP    ClearKey
----- FUNCTION _Rack_MenuSelected (END) -------


----- FUNCTION ?L?COM0042 (BEGIN) -----
80F0EE 7FFA              MOV     R7,#0FAH
----- FUNCTION _delay (BEGIN) -----
 FILE: 'common.c'
    6: void delay( uchar Cycle )
    7: {
;---- Variable 'Cycle' assigned to Register 'R7' ----
    8: 	while( Cycle ) 
80F0F0         ?C0001?COMMON:
    9: 		Cycle --;
80F0F0 EF                MOV     A,R7
80F0F1 6003              JZ      ?C0003?COMMON
   10: }
80F0F3 1F                DEC     R7
80F0F4 80FA              SJMP    ?C0001?COMMON
   11: /////////////////////////////////////////////////////////////////////////////////
80F0F6         ?C0003?COMMON:
80F0F6 A522              ERET    
----- FUNCTION _delay (END) -------
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 603




----- FUNCTION ?L?COM001A (BEGIN) -----
80F0F8 F583              MOV     DPH,A
80F0FA E0                MOVX    A,@DPTR
80F0FB FF                MOV     R7,A
----- FUNCTION _ZhkSerial1PutCh (BEGIN) -----
 FILE: 'Serial1.C'
   79: uchar ZhkSerial1PutCh( uchar ch )
   80: {
80F0FC 901894            MOV     DPTR,#ch
80F0FF EF                MOV     A,R7
80F100 F0                MOVX    @DPTR,A
   81: //	uint data i;
80F101         ?C0005?SERIAL1:
   82: 	bit veri;
   83: //	Trace( "ZhkSerial1PutCh(%bx)",ch );
   84: 	while( ! TI_1 )
80F101 A5208105          JB      TI_1,?C0006?SERIAL1
   85: 	TI_1  = 0;
80F105 A5C281            CLR     TI_1
80F108 80F7              SJMP    ?C0005?SERIAL1
80F10A         ?C0006?SERIAL1:
   86: 	delay( 250 );
80F10A A51280F0EE        ECALL   ?L?COM0042
   87: 	delay( 250 );
80F10F A51280F0EE        ECALL   ?L?COM0042
   88: 	ACC   = ch;
80F114 901894            MOV     DPTR,#ch
80F117 E0                MOVX    A,@DPTR
80F118 FF                MOV     R7,A
   89: 	veri  = P;
80F119 A2D0              MOV     C,P
80F11B 921C              MOV     veri,C
   90: 	if ( ZhkVerifyBit == VERIFY_ODD  ) veri = ! veri;
80F11D 902D5D            MOV     DPTR,#ZhkSerial1Param+01H
80F120 E0                MOVX    A,@DPTR
80F121 FE                MOV     R6,A
80F122 B40102            CJNE    A,#01H,?C0007?SERIAL1
80F125 B21C              CPL     veri
80F127         ?C0007?SERIAL1:
   91: 	if ( ZhkVerifyBit == VERIFY_NULL ) veri = 1;
80F127 EE                MOV     A,R6
80F128 7002              JNZ     ?C0008?SERIAL1
80F12A D21C              SETB    veri
80F12C         ?C0008?SERIAL1:
   92: 	if ( ZhkDataBit < 8 )
80F12C 902D5C            MOV     DPTR,#ZhkSerial1Param
80F12F E0                MOVX    A,@DPTR
80F130 C3                CLR     C
80F131 9408              SUBB    A,#08H
80F133 500A              JNC     ?C0009?SERIAL1
   93: 	{
   94: 		if ( veri ) ch |= 1 << 7;
80F135 301C07            JNB     veri,?C0009?SERIAL1
80F138 EF                MOV     A,R7
80F139 4480              ORL     A,#080H
80F13B 901894            MOV     DPTR,#ch
80F13E F0                MOVX    @DPTR,A
   95: 	}
80F13F         ?C0009?SERIAL1:
   96: 	TB8_1 = veri;
80F13F A21C              MOV     C,veri
80F141 A59283            MOV     TB8_1,C
   97: 	S1BUF = ch;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 604


80F144 901894            MOV     DPTR,#ch
80F147 E0                MOVX    A,@DPTR
80F148 A5F581            MOV     S1BUF,A
   98: 	return 0;
80F14B 7F00              MOV     R7,#00H
   99: }
80F14D         ?C0011?SERIAL1:
80F14D A522              ERET    
----- FUNCTION _ZhkSerial1PutCh (END) -------


----- FUNCTION ?L?COM0033 (BEGIN) -----
80F14F 901852            MOV     DPTR,#TaskTemp
80F152 E0                MOVX    A,@DPTR
80F153 FE                MOV     R6,A
80F154 A3                INC     DPTR
80F155 E0                MOVX    A,@DPTR
80F156 FF                MOV     R7,A
----- FUNCTION _ZhkChannelTxMsg (BEGIN) -----
 FILE: 'scheduler.c'
 1515: bit ZhkChannelTxMsg( struct COMMTASK xdata* NewTask )
 1516: {
80F157 901854            MOV     DPTR,#NewTask
80F15A EE                MOV     A,R6
80F15B F0                MOVX    @DPTR,A
80F15C A3                INC     DPTR
80F15D EF                MOV     A,R7
80F15E F0                MOVX    @DPTR,A
 1517: 	u_char ChannelTemp;
 1518: 	u_char sum;
 1519: 	
 1520: //	Trace("\n ZhkChannelTxMsg" );
 1521: 	ChannelTemp  = NewTask->Param[ 0 ] ;	
80F15F 901854            MOV     DPTR,#NewTask
80F162 E0                MOVX    A,@DPTR
80F163 FE                MOV     R6,A
80F164 A3                INC     DPTR
80F165 E0                MOVX    A,@DPTR
80F166 FF                MOV     R7,A
80F167 2406              ADD     A,#06H
80F169 F582              MOV     DPL,A
80F16B E4                CLR     A
80F16C 3E                ADDC    A,R6
80F16D F583              MOV     DPH,A
80F16F E0                MOVX    A,@DPTR
80F170 901856            MOV     DPTR,#ChannelTemp
80F173 F0                MOVX    @DPTR,A
 1522: 	
 1523: 	if( ( NewTask->Cmd == CHANNEL_EXEC ) && ( NewTask->Param[1] == 1 ) )
80F174 8F82              MOV     DPL,R7
80F176 8E83              MOV     DPH,R6
80F178 A3                INC     DPTR
80F179 A3                INC     DPTR
80F17A E0                MOVX    A,@DPTR
80F17B B45017            CJNE    A,#050H,?C0283?SCHEDULER
80F17E 901854            MOV     DPTR,#NewTask
80F181 A3                INC     DPTR
80F182 E0                MOVX    A,@DPTR
80F183 2407              ADD     A,#07H
80F185 F582              MOV     DPL,A
80F187 E4                CLR     A
80F188 3E                ADDC    A,R6
80F189 F583              MOV     DPH,A
80F18B E0                MOVX    A,@DPTR
80F18C B40106            CJNE    A,#01H,?C0283?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 605


 1524: 		Channel.Sn--;
80F18F 9023BF            MOV     DPTR,#Channel+01H
80F192 E0                MOVX    A,@DPTR
80F193 14                DEC     A
80F194 F0                MOVX    @DPTR,A
80F195         ?C0283?SCHEDULER:
 1525: 	if( Channel.Sn == 255 )
80F195 9023BF            MOV     DPTR,#Channel+01H
80F198 E0                MOVX    A,@DPTR
80F199 B4FF05            CJNE    A,#0FFH,?C0284?SCHEDULER
 1526: 		Channel.Sn = 1;
80F19C 7401              MOV     A,#01H
80F19E F0                MOVX    @DPTR,A
80F19F 8006              SJMP    ?C0285?SCHEDULER
80F1A1         ?C0284?SCHEDULER:
 1527: 	else
 1528: 		Channel.Sn ++;
80F1A1 9023BF            MOV     DPTR,#Channel+01H
80F1A4 E0                MOVX    A,@DPTR
80F1A5 04                INC     A
80F1A6 F0                MOVX    @DPTR,A
80F1A7         ?C0285?SCHEDULER:
 1529: 
 1530: 	ZhkSerial1PutCh( 0xED );
80F1A7 7FED              MOV     R7,#0EDH
80F1A9 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1531: //	Trace(" ed" );
 1532: 	sum  = 0xED;
80F1AE 901857            MOV     DPTR,#sum
80F1B1 74ED              MOV     A,#0EDH
80F1B3 F0                MOVX    @DPTR,A
 1533: 	ZhkSerial1PutCh( 0x08 );
80F1B4 7F08              MOV     R7,#08H
80F1B6 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1534: //	Trace(" 08" );
 1535: 	sum ^= 0x08;
80F1BB 901857            MOV     DPTR,#sum
80F1BE E0                MOVX    A,@DPTR
80F1BF 6408              XRL     A,#08H
80F1C1 F0                MOVX    @DPTR,A
 1536: 	if( NewTask->Cmd == CHANNEL_CLEAR )
80F1C2 901854            MOV     DPTR,#NewTask
80F1C5 E0                MOVX    A,@DPTR
80F1C6 FE                MOV     R6,A
80F1C7 A3                INC     DPTR
80F1C8 E0                MOVX    A,@DPTR
80F1C9 F582              MOV     DPL,A
80F1CB 8E83              MOV     DPH,R6
80F1CD A3                INC     DPTR
80F1CE A3                INC     DPTR
80F1CF E0                MOVX    A,@DPTR
80F1D0 B4530E            CJNE    A,#053H,?C0286?SCHEDULER
 1537: 	{
 1538: 		ZhkSerial1PutCh( 0x00 );
80F1D3 E4                CLR     A
80F1D4 FF                MOV     R7,A
80F1D5 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1539: //		Trace(" %02bx", 0x00 );
 1540: 		sum ^= 0x00;
80F1DA 901857            MOV     DPTR,#sum
80F1DD E0                MOVX    A,@DPTR
80F1DE F0                MOVX    @DPTR,A
 1541: 	}
80F1DF 802A              SJMP    ?C0287?SCHEDULER
80F1E1         ?C0286?SCHEDULER:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 606


 1542: 	else
 1543: 	{
 1544: 		ZhkSerial1PutCh( Channel.Sn );
80F1E1 9023BF            MOV     DPTR,#Channel+01H
80F1E4 E0                MOVX    A,@DPTR
80F1E5 FF                MOV     R7,A
80F1E6 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1545: //		Trace(" %02bx", Channel.Sn );
 1546: 		sum ^= Channel.Sn;		
80F1EB 901857            MOV     DPTR,#sum
80F1EE E0                MOVX    A,@DPTR
80F1EF FF                MOV     R7,A
80F1F0 9023BF            MOV     DPTR,#Channel+01H
80F1F3 E0                MOVX    A,@DPTR
80F1F4 FE                MOV     R6,A
80F1F5 EF                MOV     A,R7
80F1F6 6E                XRL     A,R6
80F1F7 901857            MOV     DPTR,#sum
80F1FA F0                MOVX    @DPTR,A
 1547: 		NewTask->Sn = Channel.Sn;
80F1FB 901854            MOV     DPTR,#NewTask
80F1FE E0                MOVX    A,@DPTR
80F1FF FC                MOV     R4,A
80F200 A3                INC     DPTR
80F201 E0                MOVX    A,@DPTR
80F202 F582              MOV     DPL,A
80F204 8C83              MOV     DPH,R4
80F206 A3                INC     DPTR
80F207 A3                INC     DPTR
80F208 A3                INC     DPTR
80F209 EE                MOV     A,R6
80F20A F0                MOVX    @DPTR,A
 1548: 	}
80F20B         ?C0287?SCHEDULER:
 1549: 	switch( NewTask->Cmd )
80F20B 901854            MOV     DPTR,#NewTask
80F20E E0                MOVX    A,@DPTR
80F20F FE                MOV     R6,A
80F210 A3                INC     DPTR
80F211 E0                MOVX    A,@DPTR
80F212 F582              MOV     DPL,A
80F214 8E83              MOV     DPH,R6
80F216 A3                INC     DPTR
80F217 A3                INC     DPTR
80F218 E0                MOVX    A,@DPTR
80F219 24AF              ADD     A,#0AFH
80F21B 601F              JZ      ?C0290?SCHEDULER
80F21D 14                DEC     A
80F21E 7003              JNZ     $ + 5H
80F220 02F2A3            LJMP    ?C0292?SCHEDULER
80F223 14                DEC     A
80F224 6043              JZ      ?C0291?SCHEDULER
80F226 2403              ADD     A,#03H
80F228 6003              JZ      $ + 5H
80F22A 02F2CB            LJMP    ?C0293?SCHEDULER
 1550: 	{
 1551: 		case CHANNEL_EXEC:	//命令ID	
80F22D         ?C0289?SCHEDULER:
 1552: 			ZhkSerial1PutCh( 0x70 );
80F22D 7F70              MOV     R7,#070H
80F22F A51280F0FC        ECALL   _ZhkSerial1PutCh
 1553: //			Trace(" 70" );
 1554: 			sum ^= 0x70;
80F234 901857            MOV     DPTR,#sum
80F237 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 607


80F238 6470              XRL     A,#070H
 1555: 			ZhkSerial1PutCh( ChannelTemp );//货道编号		
 1556: 			sum ^= ChannelTemp;
 1557: //			Trace(" %02bx", ChannelTemp );		
 1558: 		break;	
80F23A 8074              SJMP    ?C0351?SCHEDULER
 1559: 		case CHANNEL_QUERY:	//命令ID	
80F23C         ?C0290?SCHEDULER:
 1560: 			ZhkSerial1PutCh( 0x71 );
80F23C 7F71              MOV     R7,#071H
80F23E A51280F0FC        ECALL   _ZhkSerial1PutCh
 1561: //			Trace(" 71" );
 1562: 			sum ^= 0x71;
80F243 901857            MOV     DPTR,#sum
80F246 E0                MOVX    A,@DPTR
80F247 6471              XRL     A,#071H
80F249 F0                MOVX    @DPTR,A
 1563: 			ZhkSerial1PutCh( 0x00 );//货道编号
80F24A E4                CLR     A
80F24B FF                MOV     R7,A
80F24C A51280F0FC        ECALL   _ZhkSerial1PutCh
 1564: 			sum ^= 0x00;		
80F251 901857            MOV     DPTR,#sum
80F254 E0                MOVX    A,@DPTR
80F255 F0                MOVX    @DPTR,A
 1565: 			NewTask->Param[ 0 ] = 0;
80F256 901854            MOV     DPTR,#NewTask
80F259 E0                MOVX    A,@DPTR
80F25A FE                MOV     R6,A
80F25B A3                INC     DPTR
80F25C E0                MOVX    A,@DPTR
80F25D 2406              ADD     A,#06H
80F25F F582              MOV     DPL,A
80F261 E4                CLR     A
80F262 3E                ADDC    A,R6
80F263 F583              MOV     DPH,A
80F265 E4                CLR     A
80F266 F0                MOVX    @DPTR,A
 1566: //			Trace(" 00");			
 1567: 		break;	
80F267 8065              SJMP    ?C0288?SCHEDULER
 1568: 		case CHANNEL_CLEAR:	//命令ID	
80F269         ?C0291?SCHEDULER:
 1569: 			ZhkSerial1PutCh( 0x72 );
80F269 7F72              MOV     R7,#072H
80F26B A51280F0FC        ECALL   _ZhkSerial1PutCh
 1570: //			Trace(" 72" );
 1571: 			sum ^= 0x72;
80F270 901857            MOV     DPTR,#sum
80F273 E0                MOVX    A,@DPTR
80F274 6472              XRL     A,#072H
80F276 F0                MOVX    @DPTR,A
 1572: 			ZhkSerial1PutCh( 0x00 );//货道编号
80F277 E4                CLR     A
80F278 FF                MOV     R7,A
80F279 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1573: 			sum ^= 0x00;
80F27E 901857            MOV     DPTR,#sum
80F281 E0                MOVX    A,@DPTR
80F282 F0                MOVX    @DPTR,A
 1574: 			NewTask->Param[ 0 ] = 0;
80F283 901854            MOV     DPTR,#NewTask
80F286 E0                MOVX    A,@DPTR
80F287 FE                MOV     R6,A
80F288 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 608


80F289 E0                MOVX    A,@DPTR
80F28A FF                MOV     R7,A
80F28B 2406              ADD     A,#06H
80F28D F582              MOV     DPL,A
80F28F E4                CLR     A
80F290 3E                ADDC    A,R6
80F291 F583              MOV     DPH,A
80F293 E4                CLR     A
80F294 F0                MOVX    @DPTR,A
 1575: //			Trace(" 00");			
 1576: 			Channel.Sn = 0;
80F295 9023BF            MOV     DPTR,#Channel+01H
80F298 F0                MOVX    @DPTR,A
 1577: 			NewTask->Sn = 0;
80F299 8F82              MOV     DPL,R7
80F29B 8E83              MOV     DPH,R6
80F29D A3                INC     DPTR
80F29E A3                INC     DPTR
80F29F A3                INC     DPTR
80F2A0 F0                MOVX    @DPTR,A
 1578: 		break;	
80F2A1 802B              SJMP    ?C0288?SCHEDULER
 1579: 		case CHANNEL_TEST:	//命令ID	
80F2A3         ?C0292?SCHEDULER:
 1580: 			ZhkSerial1PutCh( 0x73 );
80F2A3 7F73              MOV     R7,#073H
80F2A5 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1581: //			Trace(" 73" );
 1582: 			sum ^= 0x73;
80F2AA 901857            MOV     DPTR,#sum
80F2AD E0                MOVX    A,@DPTR
80F2AE 6473              XRL     A,#073H
80F2B0         
80F2B0 F0                MOVX    @DPTR,A
 1583: 			ZhkSerial1PutCh( ChannelTemp );//货道编号
80F2B1 901856            MOV     DPTR,#ChannelTemp
80F2B4 E0                MOVX    A,@DPTR
80F2B5 FF                MOV     R7,A
80F2B6 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1584: //			Trace(" %02bx", ChannelTemp );
 1585: 			sum ^= ChannelTemp;		
80F2BB 901857            MOV     DPTR,#sum
80F2BE E0                MOVX    A,@DPTR
80F2BF FF                MOV     R7,A
80F2C0 901856            MOV     DPTR,#ChannelTemp
80F2C3 E0                MOVX    A,@DPTR
80F2C4 FE                MOV     R6,A
80F2C5 EF                MOV     A,R7
80F2C6 6E                XRL     A,R6
80F2C7 A3                INC     DPTR
80F2C8 F0                MOVX    @DPTR,A
 1586: 		break;			
80F2C9 8003              SJMP    ?C0288?SCHEDULER
 1587: 	default:
80F2CB         ?C0293?SCHEDULER:
 1588: 		return  0;
80F2CB C3                CLR     C
80F2CC 803A              SJMP    ?C0294?SCHEDULER
 1589: 	}
80F2CE         ?C0288?SCHEDULER:
 1590: 	ZhkSerial1PutCh( 0x00 );		
80F2CE E4                CLR     A
80F2CF FF                MOV     R7,A
80F2D0 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1591:     //Trace(" 00" );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 609


 1592: 	sum ^= 0x00;
80F2D5 901857            MOV     DPTR,#sum
80F2D8 E0                MOVX    A,@DPTR
80F2D9 F0                MOVX    @DPTR,A
 1593: 	
 1594:     //----------------------------------------------
 1595:     //Changed for GOC dev, by Andy on 2010.10.21
 1596:     if( SystemParameter.GOCOn == 1 )
80F2DA 90046B            MOV     DPTR,#SystemParameter+04BH
80F2DD E0                MOVX    A,@DPTR
80F2DE B40110            CJNE    A,#01H,?C0295?SCHEDULER
 1597:     {
 1598:     	ZhkSerial1PutCh( 0x01 );
80F2E1 7F01              MOV     R7,#01H
80F2E3 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1599: 	    sum ^= 0x01;
80F2E8 901857            MOV     DPTR,#sum
80F2EB E0                MOVX    A,@DPTR
80F2EC 6401              XRL     A,#01H
80F2EE F0                MOVX    @DPTR,A
 1600:     }
80F2EF 800C              SJMP    ?C0296?SCHEDULER
80F2F1         ?C0295?SCHEDULER:
 1601:     else
 1602:     {
 1603:     	ZhkSerial1PutCh( 0x00 );
80F2F1 E4                CLR     A
80F2F2 FF                MOV     R7,A
80F2F3 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1604:     	//Trace(" 00" );
 1605: 		sum ^= 0x00;
80F2F8 901857            MOV     DPTR,#sum
80F2FB E0                MOVX    A,@DPTR
80F2FC F0                MOVX    @DPTR,A
 1606:     }
80F2FD         ?C0296?SCHEDULER:
 1607:     //==============================================
 1608: 
 1609: 	ZhkSerial1PutCh( sum );
80F2FD 901857            MOV     DPTR,#sum
80F300 E0                MOVX    A,@DPTR
80F301 FF                MOV     R7,A
80F302 A51280F0FC        ECALL   _ZhkSerial1PutCh
 1610:     //Trace(" %02bx", sum );
 1611: 	return 1;	
80F307 D3                SETB    C
 1612: }
80F308         ?C0294?SCHEDULER:
80F308 A522              ERET    
----- FUNCTION _ZhkChannelTxMsg (END) -------


----- FUNCTION _ZhkVtiSendCmd (BEGIN) -----
 FILE: 'casher.c'
   46: void ZhkVtiSendCmd( unsigned char idata* buf , unsigned char style )
   47: {
80F30A 901856            MOV     DPTR,#buf
80F30D EF                MOV     A,R7
80F30E F0                MOVX    @DPTR,A
;---- Variable 'style' assigned to Register 'R5' ----
   48: 	static unsigned char data state = 0x10;
   49: 	unsigned char data i,sum;
   50: 
   51: 	if ( style > 1 ) 
80F30F ED                MOV     A,R5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 610


80F310 D3                SETB    C
80F311 9401              SUBB    A,#01H
80F313 505D              JNC     ?C0002?CASHER
80F315         ?C0001?CASHER:
   52: 		return;
   53: 	if ( state != 0x10 ) 
80F315 E54D              MOV     A,state
80F317 6410              XRL     A,#010H
80F319 6003              JZ      ?C0003?CASHER
   54: 		state = 0x11;	
80F31B 754D11            MOV     state,#011H
80F31E         ?C0003?CASHER:
   55: 	if ( style == 1 ) 
80F31E ED                MOV     A,R5
80F31F B40103            CJNE    A,#01H,?C0004?CASHER
   56: 		state ^= 0x01;
80F322 634D01            XRL     state,#01H
80F325         ?C0004?CASHER:
   57: 
   58: 	Trace("\n Send date to casher ");
   59: 	// 发送帧头
   60: 	ZhkSerial1PutCh( VTISERIAL_FRAMEHEAD );
80F325 7F02              MOV     R7,#02H
80F327 A51280F0FC        ECALL   _ZhkSerial1PutCh
   61: 	Trace(" 0x%02bx", VTISERIAL_FRAMEHEAD );
   62: 	// 发送数据长度
   63: 	sum = 0x08;
80F32C 752E08            MOV     sum,#08H
   64: 	ZhkSerial1PutCh( sum );
80F32F AF2E              MOV     R7,sum
80F331 A51280F0FC        ECALL   _ZhkSerial1PutCh
   65: 	Trace(" 0x%02bx", sum );
   66: 
   67: 	// 发送状态字
   68: 	sum ^= state;
80F336 E54D              MOV     A,state
80F338 622E              XRL     sum,A
   69: 	ZhkSerial1PutCh( state );
80F33A FF                MOV     R7,A
80F33B A51280F0FC        ECALL   _ZhkSerial1PutCh
   70: 	Trace(" 0x%02bx", state );
   71: 	for( i = 0 ; i < 3 ; i ++ )
80F340 E4                CLR     A
80F341 F52D              MOV     i,A
80F343         ?C0005?CASHER:
   72: 	{
   73: 		ZhkSerial1PutCh( buf[ i ] );		
80F343 901856            MOV     DPTR,#buf
80F346 E0                MOVX    A,@DPTR
80F347 252D              ADD     A,i
80F349 F8                MOV     R0,A
80F34A E6                MOV     A,@R0
80F34B FF                MOV     R7,A
80F34C A51280F0FC        ECALL   _ZhkSerial1PutCh
   74: 		Trace(" 0x%02bx", buf[ i ] );
   75: 		sum ^= buf[ i ];
80F351 901856            MOV     DPTR,#buf
80F354 E0                MOVX    A,@DPTR
80F355 252D              ADD     A,i
80F357 F8                MOV     R0,A
80F358 E6                MOV     A,@R0
80F359 622E              XRL     sum,A
   76: 	}
80F35B 052D              INC     i
80F35D E52D              MOV     A,i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 611


80F35F C3                CLR     C
80F360 9403              SUBB    A,#03H
80F362 40DF              JC      ?C0005?CASHER
80F364         ?C0006?CASHER:
   77: 	ZhkSerial1PutCh( VTISERIAL_FRAMETAIL );	
80F364 7F03              MOV     R7,#03H
80F366 A51280F0FC        ECALL   _ZhkSerial1PutCh
   78: 	Trace(" 0x%02bx", VTISERIAL_FRAMETAIL );
   79: 	ZhkSerial1PutCh( sum );
80F36B AF2E              MOV     R7,sum
80F36D A51280F0FC        ECALL   _ZhkSerial1PutCh
   80: 	Trace(" 0x%02bx \n", sum );
   81: }
80F372         ?C0002?CASHER:
80F372 A522              ERET    
----- FUNCTION _ZhkVtiSendCmd (END) -------


----- FUNCTION _ZhkChannelTask (BEGIN) -----
 FILE: 'scheduler.c'
 1422: bit ZhkChannelTask( struct COMMTASK xdata* TaskTemp )
 1423: {
80F374 901852            MOV     DPTR,#TaskTemp
80F377 EE                MOV     A,R6
80F378 F0                MOVX    @DPTR,A
80F379 A3                INC     DPTR
80F37A EF                MOV     A,R7
80F37B F0                MOVX    @DPTR,A
 1424: 	u_char data StateTemp;
 1425: 
 1426: 	switch( ZhkSchedulerState )
80F37C 9023D3            MOV     DPTR,#ZhkSchedulerState
80F37F E0                MOVX    A,@DPTR
80F380 7003              JNZ     $ + 5H
80F382 02F4D5            LJMP    ?C0258?SCHEDULER
80F385 24FE              ADD     A,#0FEH
80F387 6046              JZ      ?C0263?SCHEDULER
80F389 14                DEC     A
80F38A 7003              JNZ     $ + 5H
80F38C 02F452            LJMP    ?C0274?SCHEDULER
80F38F 14                DEC     A
80F390 7003              JNZ     $ + 5H
80F392 02F491            LJMP    ?C0279?SCHEDULER
80F395 14                DEC     A
80F396 7003              JNZ     $ + 5H
80F398 02F4B4            LJMP    ?C0280?SCHEDULER
80F39B 2404              ADD     A,#04H
80F39D 6003              JZ      $ + 5H
80F39F 02F4D0            LJMP    ?C0281?SCHEDULER
 1427: 	{
 1428: 	case TASK_NULL:
 1429: 		break;
 1430: 	case TASK_REDAY:		
80F3A2         ?C0260?SCHEDULER:
 1431: 		ZhkChannelSwitch( EQUIP_CHANNEL );		
80F3A2 7F0D              MOV     R7,#0DH
80F3A4 A512807E2B        ECALL   _ZhkChannelSwitch
 1432: 		if ( ZhkChannelTxMsg( TaskTemp ) )
80F3A9 A51280F14F        ECALL   ?L?COM0033
80F3AE 9023D3            MOV     DPTR,#ZhkSchedulerState
80F3B1 5005              JNC     ?C0261?SCHEDULER
 1433: 			ZhkSchedulerState = TASK_WAIT;
80F3B3 7402              MOV     A,#02H
80F3B5 F0                MOVX    @DPTR,A
80F3B6 8003              SJMP    ?C0262?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 612


80F3B8         ?C0261?SCHEDULER:
 1434: 		else
 1435: 			ZhkSchedulerState = TASK_FINISH;
80F3B8 7404              MOV     A,#04H
80F3BA F0                MOVX    @DPTR,A
80F3BB         ?C0262?SCHEDULER:
 1436: 		
 1437: 		ZhkDownMsgAckTimer  = 800;
80F3BB 751103            MOV     ZhkDownMsgAckTimer,#03H
80F3BE 751220            MOV     ZhkDownMsgAckTimer+01H,#020H
 1438: 		Channel.CommState = COMM_BUZY;
80F3C1 9023C0            MOV     DPTR,#Channel+02H
80F3C4 7401              MOV     A,#01H
80F3C6 F0                MOVX    @DPTR,A
 1439: 		Channel.ExtState[2] = 0;
80F3C7 E4                CLR     A
80F3C8 9023C4            MOV     DPTR,#Channel+06H
80F3CB F0                MOVX    @DPTR,A
 1440: 		break;	
80F3CC 02F4D5            LJMP    ?C0258?SCHEDULER
 1441: 	case TASK_WAIT:
80F3CF         ?C0263?SCHEDULER:
 1442: 		StateTemp = ZhkChannelMsgProcess();
80F3CF A51280F4D8        ECALL   ZhkChannelMsgProcess
80F3D4 8F2A              MOV     StateTemp,R7
 1443: 		if ( StateTemp == 1 )
80F3D6 E52A              MOV     A,StateTemp
80F3D8 6401              XRL     A,#01H
80F3DA 7033              JNZ     ?C0264?SCHEDULER
 1444: 		{
 1445: 			if( ( TaskTemp->Cmd == CHANNEL_EXEC ) || ( TaskTemp->Cmd == CHANNEL_TEST ) )
80F3DC 901852            MOV     DPTR,#TaskTemp
80F3DF E0                MOVX    A,@DPTR
80F3E0 FE                MOV     R6,A
80F3E1 A3                INC     DPTR
80F3E2 E0                MOVX    A,@DPTR
80F3E3 F582              MOV     DPL,A
80F3E5 8E83              MOV     DPH,R6
80F3E7 A3                INC     DPTR
80F3E8 A3                INC     DPTR
80F3E9 E0                MOVX    A,@DPTR
80F3EA FF                MOV     R7,A
80F3EB 6450              XRL     A,#050H
80F3ED 6004              JZ      ?C0266?SCHEDULER
80F3EF EF                MOV     A,R7
80F3F0 B45215            CJNE    A,#052H,?C0265?SCHEDULER
80F3F3         ?C0266?SCHEDULER:
 1446: 			{
 1447: 			//等来了命令ACK，还要等命令执行结果啦
 1448: //				Trace("\n return command ACK");
 1449: 				Channel.ExtState[2] = 1;
80F3F3 9023C4            MOV     DPTR,#Channel+06H
80F3F6 7401              MOV     A,#01H
80F3F8 F0                MOVX    @DPTR,A
 1450: 				ZhkSchedulerState = TASK_REWAIT;
80F3F9 9023D3            MOV     DPTR,#ZhkSchedulerState
80F3FC 7403              MOV     A,#03H
80F3FE F0                MOVX    @DPTR,A
 1451: 				ZhkDownMsgAckTimer = 1500;				
80F3FF 751105            MOV     ZhkDownMsgAckTimer,#05H
80F402 7512DC            MOV     ZhkDownMsgAckTimer+01H,#0DCH
 1452: 			}	
80F405 02F4D5            LJMP    ?C0258?SCHEDULER
80F408         ?C0265?SCHEDULER:
 1453: 			else
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 613


 1454: 			{
 1455: 				ZhkDownMsgAckTimer = 0;
80F408 E4                CLR     A
80F409 F511              MOV     ZhkDownMsgAckTimer,A
80F40B F512              MOV     ZhkDownMsgAckTimer+01H,A
 1456: 				ZhkSchedulerState = TASK_FINISH;
 1457: 			}
 1458: 			break;
80F40D 806C              SJMP    ?C0348?SCHEDULER
 1459: 		}
80F40F         ?C0264?SCHEDULER:
 1460: 		if ( ZhkDownMsgAckTimer == 0 )
80F40F E512              MOV     A,ZhkDownMsgAckTimer+01H
80F411 4511              ORL     A,ZhkDownMsgAckTimer
80F413 6003              JZ      $ + 5H
80F415 02F4D5            LJMP    ?C0258?SCHEDULER
 1461: 		{
 1462: 			if( ( TaskTemp->Cmd == CHANNEL_EXEC ) || ( TaskTemp->Cmd == CHANNEL_TEST ) )
80F418 901852            MOV     DPTR,#TaskTemp
80F41B E0                MOVX    A,@DPTR
80F41C FE                MOV     R6,A
80F41D A3                INC     DPTR
80F41E E0                MOVX    A,@DPTR
80F41F F582              MOV     DPL,A
80F421 8E83              MOV     DPH,R6
80F423 A3                INC     DPTR
80F424 A3                INC     DPTR
80F425 E0                MOVX    A,@DPTR
80F426 FF                MOV     R7,A
80F427 6450              XRL     A,#050H
80F429 6004              JZ      ?C0270?SCHEDULER
80F42B EF                MOV     A,R7
80F42C B45208            CJNE    A,#052H,?C0269?SCHEDULER
80F42F         ?C0270?SCHEDULER:
 1463: 			{
 1464: 				//超时确没有命令ACK回应，只能重来了
 1465: //				Trace("\n no return command ACK");
 1466: 				if( Channel.ExtState[2] == 0)
80F42F 9023C4            MOV     DPTR,#Channel+06H
80F432 E0                MOVX    A,@DPTR
80F433 7002              JNZ     ?C0269?SCHEDULER
 1467: 				{
 1468: 					ZhkSchedulerState = TASK_ERROR;
 1469: 					break;
80F435 8052              SJMP    ?C0349?SCHEDULER
 1470: 				}
 1471: 			}
80F437         ?C0269?SCHEDULER:
 1472: 			//如果是查询或清零命令，则可直接重试一次
 1473: 			Channel.Sn --;
80F437 9023BF            MOV     DPTR,#Channel+01H
80F43A E0                MOVX    A,@DPTR
80F43B 14                DEC     A
80F43C F0                MOVX    @DPTR,A
 1474: 			if ( ZhkChannelTxMsg( TaskTemp ) )
80F43D A51280F14F        ECALL   ?L?COM0033
80F442 9023D3            MOV     DPTR,#ZhkSchedulerState
80F445 5037              JNC     ?C0350?SCHEDULER
 1475: 			{
 1476: 				ZhkSchedulerState = TASK_REWAIT;
80F447 7403              MOV     A,#03H
80F449 F0                MOVX    @DPTR,A
 1477: 				ZhkDownMsgAckTimer = 800;
80F44A F511              MOV     ZhkDownMsgAckTimer,A
80F44C 751220            MOV     ZhkDownMsgAckTimer+01H,#020H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 614


 1478: 			}
80F44F 02F4D5            LJMP    ?C0258?SCHEDULER
 1479: 			else
 1480: 				ZhkSchedulerState = TASK_FINISH;					
 1481: 		}		
 1482: 		break;		
 1483: 	case TASK_REWAIT:
80F452         ?C0274?SCHEDULER:
 1484: 		StateTemp = ZhkChannelMsgProcess();
80F452 A51280F4D8        ECALL   ZhkChannelMsgProcess
80F457 8F2A              MOV     StateTemp,R7
 1485: 		if ( StateTemp == 1 )
80F459 E52A              MOV     A,StateTemp
80F45B B40125            CJNE    A,#01H,?C0275?SCHEDULER
 1486: 		{
 1487: //			Trace("\n return mission ACK");
 1488: 			if( ( TaskTemp->Cmd == CHANNEL_EXEC ) || ( TaskTemp->Cmd == CHANNEL_TEST ) )			
80F45E 901852            MOV     DPTR,#TaskTemp
80F461 E0                MOVX    A,@DPTR
80F462 FE                MOV     R6,A
80F463 A3                INC     DPTR
80F464 E0                MOVX    A,@DPTR
80F465 F582              MOV     DPL,A
80F467 8E83              MOV     DPH,R6
80F469 A3                INC     DPTR
80F46A A3                INC     DPTR
80F46B E0                MOVX    A,@DPTR
80F46C FF                MOV     R7,A
80F46D 6450              XRL     A,#050H
80F46F 6004              JZ      ?C0277?SCHEDULER
80F471 EF                MOV     A,R7
80F472 B45206            CJNE    A,#052H,?C0276?SCHEDULER
80F475         ?C0277?SCHEDULER:
 1489: 				Channel.ExtState[2] = 2;				
80F475 9023C4            MOV     DPTR,#Channel+06H
80F478 7402              MOV     A,#02H
80F47A F0                MOVX    @DPTR,A
80F47B         ?C0276?SCHEDULER:
 1490: 			ZhkSchedulerState = TASK_FINISH;
80F47B         
80F47B 9023D3            MOV     DPTR,#ZhkSchedulerState
80F47E         
80F47E 7404              MOV     A,#04H
80F480 F0                MOVX    @DPTR,A
 1491: 			break;
80F481 8052              SJMP    ?C0258?SCHEDULER
 1492: 		}
80F483         ?C0275?SCHEDULER:
 1493: 		if ( ZhkDownMsgAckTimer == 0 )
80F483 E512              MOV     A,ZhkDownMsgAckTimer+01H
80F485 4511              ORL     A,ZhkDownMsgAckTimer
80F487 704C              JNZ     ?C0258?SCHEDULER
 1494: 		{
 1495: 			ZhkSchedulerState = TASK_ERROR;
80F489         
80F489 9023D3            MOV     DPTR,#ZhkSchedulerState
80F48C 7405              MOV     A,#05H
80F48E F0                MOVX    @DPTR,A
 1496: 		}
 1497: 		break;		
80F48F 8044              SJMP    ?C0258?SCHEDULER
 1498: 	case TASK_FINISH:
80F491         ?C0279?SCHEDULER:
 1499: 		ZhkSchedulerState = TASK_NULL; 		
80F491 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 615


80F492 9023D3            MOV     DPTR,#ZhkSchedulerState
80F495 F0                MOVX    @DPTR,A
 1500: 		Channel.CommState   = COMM_COMMOK;
80F496 9023C0            MOV     DPTR,#Channel+02H
80F499 7404              MOV     A,#04H
80F49B F0                MOVX    @DPTR,A
 1501: 		memset( &CurrentTask, 0, sizeof( struct COMMTASK ) );
80F49C 7E00              MOV     R6,#00H
80F49E 7F26              MOV     R7,#026H
80F4A0 7D00              MOV     R5,#00H
80F4A2 7B00              MOV     R3,#?C?XDATASEG
80F4A4 7A28              MOV     R2,#HIGH CurrentTask
80F4A6 79AE              MOV     R1,#LOW CurrentTask
80F4A8 A5128008A6        ECALL   ?C?MEMSET
 1502: 		ZhkDownMsgAckTimer = 0;
80F4AD E4                CLR     A
80F4AE F511              MOV     ZhkDownMsgAckTimer,A
80F4B0 F512              MOV     ZhkDownMsgAckTimer+01H,A
 1503: 		break;
80F4B2 8021              SJMP    ?C0258?SCHEDULER
 1504: 	case TASK_ERROR:
80F4B4         ?C0280?SCHEDULER:
 1505: 		Channel.CommState = COMM_TIMEOUT;// | COMM_COMMOK;
80F4B4 9023C0            MOV     DPTR,#Channel+02H
80F4B7 7402              MOV     A,#02H
80F4B9 F0                MOVX    @DPTR,A
 1506: 		ZhkSchedulerState   = TASK_NULL; 
80F4BA E4                CLR     A
80F4BB 9023D3            MOV     DPTR,#ZhkSchedulerState
80F4BE F0                MOVX    @DPTR,A
 1507: 		memset( &CurrentTask, 0, sizeof( struct COMMTASK ) );
80F4BF FE                MOV     R6,A
80F4C0 7F26              MOV     R7,#026H
80F4C2 FD                MOV     R5,A
80F4C3 7B00              MOV     R3,#?C?XDATASEG
80F4C5 7A28              MOV     R2,#HIGH CurrentTask
80F4C7 79AE              MOV     R1,#LOW CurrentTask
80F4C9 A5128008A6        ECALL   ?C?MEMSET
 1508: 		break;
80F4CE 8005              SJMP    ?C0258?SCHEDULER
 1509: 	default:
80F4D0         ?C0281?SCHEDULER:
 1510: 		ZhkSchedulerState = TASK_NULL;
80F4D0 E4                CLR     A
80F4D1 9023D3            MOV     DPTR,#ZhkSchedulerState
80F4D4 F0                MOVX    @DPTR,A
 1511: 	}
80F4D5         ?C0258?SCHEDULER:
 1512: 	return 1;
80F4D5 D3                SETB    C
 1513: }
80F4D6         ?C0282?SCHEDULER:
80F4D6 A522              ERET    
----- FUNCTION _ZhkChannelTask (END) -------


----- FUNCTION ZhkChannelMsgProcess (BEGIN) -----
 FILE: 'scheduler.c'
 1614: u_char ZhkChannelMsgProcess( void )
 1615: {
 1616: 	struct COMMTASK xdata AckTask;
 1617: 	
 1618: 	memcpy( &AckTask, &CurrentTask, sizeof( struct COMMTASK ) );
80F4D8 7854              MOV     R0,#LOW AckTask
80F4DA 7C18              MOV     R4,#HIGH AckTask
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 616


80F4DC 7D00              MOV     R5,#?C?XDATASEG
80F4DE 7B00              MOV     R3,#?C?XDATASEG
80F4E0 7A28              MOV     R2,#HIGH CurrentTask
80F4E2 79AE              MOV     R1,#LOW CurrentTask
80F4E4 7E00              MOV     R6,#00H
80F4E6 7F26              MOV     R7,#026H
80F4E8 A51280052D        ECALL   ?C?COPY
 1619: 	if( ZhkChannelFrameUnPack( &AckTask ) == 0 ) 
80F4ED 7E18              MOV     R6,#HIGH AckTask
80F4EF 7F54              MOV     R7,#LOW AckTask
80F4F1 A51280F51C        ECALL   _ZhkChannelFrameUnPack
80F4F6 EF                MOV     A,R7
80F4F7 7003              JNZ     ?C0297?SCHEDULER
 1620: 		return 0;		
80F4F9 FF                MOV     R7,A
80F4FA 801E              SJMP    ?C0298?SCHEDULER
80F4FC         ?C0297?SCHEDULER:
 1621: 	if( AckTask.Cmd == CHANNEL_QUERY )//查询指令不能比较货道编号
80F4FC 901856            MOV     DPTR,#AckTask+02H
80F4FF E0                MOVX    A,@DPTR
 1622: 	{
 1623: 		Channel.State         = AckTask.State;
 1624: 		Channel.ExtState[ 0 ] = AckTask.Param[ 0 ];//货道序列号
 1625: 		Channel.ExtState[ 1 ] = AckTask.Param[ 1 ];//包序列号
 1626: 		return 1;
 1627: 	}
 1628: 	
 1629:     //if( CurrentTask.Param[ 0 ] == AckTask.Param[ 0 ] )
 1630: 	{
 1631: 		Channel.State         = AckTask.State;
80F500 901858            MOV     DPTR,#AckTask+04H
80F503 E0                MOVX    A,@DPTR
80F504 9023C1            MOV     DPTR,#Channel+03H
80F507 F0                MOVX    @DPTR,A
 1632: 		Channel.ExtState[ 0 ] = AckTask.Param[ 0 ];//货道序列号
80F508 90185A            MOV     DPTR,#AckTask+06H
80F50B E0                MOVX    A,@DPTR
80F50C 9023C2            MOV     DPTR,#Channel+04H
80F50F F0                MOVX    @DPTR,A
 1633: 		Channel.ExtState[ 1 ] = AckTask.Param[ 1 ];//包序列号
80F510 90185B            MOV     DPTR,#AckTask+07H
80F513 E0                MOVX    A,@DPTR
80F514 9023C3            MOV     DPTR,#Channel+05H
80F517 F0                MOVX    @DPTR,A
 1634: 	  //Channel.CommState     = COMM_COMMOK;
 1635: 	}
 1636:     /*
 1637: 	else
 1638:     {
 1639: 		return 0;
 1640:     }
 1641:     */
 1642: 	return 1;
80F518 7F01              MOV     R7,#01H
 1643: 	
 1644: }
80F51A         ?C0298?SCHEDULER:
80F51A A522              ERET    
----- FUNCTION ZhkChannelMsgProcess (END) -------


----- FUNCTION _ZhkChannelFrameUnPack (BEGIN) -----
 FILE: 'procotol.c'
  298: unsigned char ZhkChannelFrameUnPack( struct COMMTASK xdata* Result  )
  299: {
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 617


80F51C 90187A            MOV     DPTR,#Result
80F51F EE                MOV     A,R6
80F520 F0                MOVX    @DPTR,A
80F521 A3                INC     DPTR
80F522 EF                MOV     A,R7
80F523 F0                MOVX    @DPTR,A
  300: 	unsigned char xdata i;
  301: 	unsigned char xdata ret = 0;
80F524 E4                CLR     A
80F525 90187D            MOV     DPTR,#ret
80F528 F0                MOVX    @DPTR,A
  302: 	unsigned char xdata sum;
  303: 	unsigned char xdata j = 0;
;---- Variable 'j' assigned to Register 'R7' ----
80F529 FF                MOV     R7,A
  304: //	unsigned char data packetHeard;	
  305: 		
  306: 	j = 0;
80F52A         ?C0070?PROCOTOL:
  307: 	while( ! ZhkSerial1IsRxBufNull() )
80F52A A51280F69E        ECALL   ZhkSerial1IsRxBufNull
80F52F EF                MOV     A,R7
80F530 7036              JNZ     ?C0071?PROCOTOL
  308: 	{
  309: 		for( i = 0 ; i <= sizeof( DownMsgBuf ) - 1 ; i ++ )
80F532 90187C            MOV     DPTR,#i
80F535 F0                MOVX    @DPTR,A
80F536         ?C0072?PROCOTOL:
  310: 			DownMsgBuf[ i ] = DownMsgBuf[ i + 1 ];
80F536 90187C            MOV     DPTR,#i
80F539 E0                MOVX    A,@DPTR
80F53A FF                MOV     R7,A
80F53B 2463              ADD     A,#LOW DownMsgBuf+01H
80F53D F582              MOV     DPL,A
80F53F E4                CLR     A
80F540 342D              ADDC    A,#HIGH DownMsgBuf+01H
80F542 F583              MOV     DPH,A
80F544 E0                MOVX    A,@DPTR
80F545 FE                MOV     R6,A
80F546 7462              MOV     A,#LOW DownMsgBuf
80F548 2F                ADD     A,R7
80F549 F582              MOV     DPL,A
80F54B E4                CLR     A
80F54C 342D              ADDC    A,#HIGH DownMsgBuf
80F54E F583              MOV     DPH,A
80F550 EE                MOV     A,R6
80F551 F0                MOVX    @DPTR,A
80F552 90187C            MOV     DPTR,#i
80F555 E0                MOVX    A,@DPTR
80F556 04                INC     A
80F557 F0                MOVX    @DPTR,A
80F558 E0                MOVX    A,@DPTR
80F559 B440DA            CJNE    A,#040H,?C0072?PROCOTOL
80F55C         ?C0073?PROCOTOL:
  311: 		DownMsgBuf[ sizeof( DownMsgBuf ) - 1 ] = ZhkSerial1GetCh();			
80F55C A51280F739        ECALL   ZhkSerial1GetCh
80F561 902DA1            MOV     DPTR,#DownMsgBuf+03FH
80F564 EF                MOV     A,R7
80F565 F0                MOVX    @DPTR,A
  312: #ifdef _DEBUG_TRACE
  313: 		j++;
  314: #endif
  315: 	}
80F566 80C2              SJMP    ?C0070?PROCOTOL
80F568         ?C0071?PROCOTOL:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 618


  316: 
  317: #ifdef _DEBUG_TRACE
  318: 	if( j != 0 )
  319: 	{
  320: 		Trace( "\n Channel Return Str = " );		
  321: 		for( i = 0; i < j  ; i ++ )
  322: 			Trace( " %02bx", DownMsgBuf[ 64 - j + i ] );		
  323: 	}
  324: 	j = 0;
  325: #endif
  326: 
  327: 	//找应答帧
  328: 	for( i = 0; i <= sizeof( DownMsgBuf ) - 8 ; i++ ) 
80F568 E4                CLR     A
80F569 90187C            MOV     DPTR,#i
80F56C F0                MOVX    @DPTR,A
80F56D         ?C0075?PROCOTOL:
80F56D 90187C            MOV     DPTR,#i
80F570 E0                MOVX    A,@DPTR
80F571 FF                MOV     R7,A
80F572 D3                SETB    C
80F573 9438              SUBB    A,#038H
80F575 4003              JC      $ + 5H
80F577 02F69A            LJMP    ?C0076?PROCOTOL
  329: 	{			
  330: 		if( ( ( DownMsgBuf[ i ] == 0xee ) && ( DownMsgBuf[ i + 1 ] == 0x08 ) ) ) 				
80F57A 7462              MOV     A,#LOW DownMsgBuf
80F57C 2F                ADD     A,R7
80F57D F582              MOV     DPL,A
80F57F E4                CLR     A
80F580 342D              ADDC    A,#HIGH DownMsgBuf
80F582 F583              MOV     DPH,A
80F584 E0                MOVX    A,@DPTR
80F585 64EE              XRL     A,#0EEH
80F587 6003              JZ      $ + 5H
80F589 02F691            LJMP    ?C0077?PROCOTOL
80F58C 90187C            MOV     DPTR,#i
80F58F E0                MOVX    A,@DPTR
80F590 2463              ADD     A,#LOW DownMsgBuf+01H
80F592 F582              MOV     DPL,A
80F594 E4                CLR     A
80F595 342D              ADDC    A,#HIGH DownMsgBuf+01H
80F597 F583              MOV     DPH,A
80F599 E0                MOVX    A,@DPTR
80F59A 6408              XRL     A,#08H
80F59C 6003              JZ      $ + 5H
80F59E 02F691            LJMP    ?C0077?PROCOTOL
  331: 		{
  332: 		//	Trace( "\n Channel Find Heard1" );		
  333: 		//	Trace( "\n Result->Sn = %bu, DownMsgBuf[ i + 2 ] = %bu",Result->Sn, DownMsgBuf[ i + 2 ]);		
  334: 			if( Result->Sn == DownMsgBuf[ i + 2 ] ) 
80F5A1 90187A            MOV     DPTR,#Result
80F5A4 E0                MOVX    A,@DPTR
80F5A5 FC                MOV     R4,A
80F5A6 A3                INC     DPTR
80F5A7 E0                MOVX    A,@DPTR
80F5A8 F582              MOV     DPL,A
80F5AA 8C83              MOV     DPH,R4
80F5AC A3                INC     DPTR
80F5AD A3                INC     DPTR
80F5AE A3                INC     DPTR
80F5AF E0                MOVX    A,@DPTR
80F5B0 FE                MOV     R6,A
80F5B1 7464              MOV     A,#LOW DownMsgBuf+02H
80F5B3 2F                ADD     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 619


80F5B4 F582              MOV     DPL,A
80F5B6 E4                CLR     A
80F5B7 342D              ADDC    A,#HIGH DownMsgBuf+02H
80F5B9 F583              MOV     DPH,A
80F5BB E0                MOVX    A,@DPTR
80F5BC FF                MOV     R7,A
80F5BD EE                MOV     A,R6
80F5BE 6F                XRL     A,R7
80F5BF 6003              JZ      $ + 5H
80F5C1 02F691            LJMP    ?C0077?PROCOTOL
  335: 			{
  336: 			//	Trace( "\n Channel Find SN" );		
  337: 				//是本次的应答包				
  338: 				sum = 0;
;---- Variable 'sum' assigned to Register 'R7' ----
80F5C4 FF                MOV     R7,A
  339: 				for( ret = 0; ret < 7; ret ++ )
80F5C5 90187D            MOV     DPTR,#ret
80F5C8 F0                MOVX    @DPTR,A
80F5C9         ?C0080?PROCOTOL:
80F5C9 90187D            MOV     DPTR,#ret
80F5CC E0                MOVX    A,@DPTR
80F5CD FE                MOV     R6,A
80F5CE C3                CLR     C
80F5CF 9407              SUBB    A,#07H
80F5D1 5019              JNC     ?C0081?PROCOTOL
  340: 					sum ^= DownMsgBuf[ i + ret ];			
80F5D3 90187C            MOV     DPTR,#i
80F5D6 E0                MOVX    A,@DPTR
80F5D7 2E                ADD     A,R6
80F5D8 2462              ADD     A,#LOW DownMsgBuf
80F5DA F582              MOV     DPL,A
80F5DC E4                CLR     A
80F5DD 342D              ADDC    A,#HIGH DownMsgBuf
80F5DF F583              MOV     DPH,A
80F5E1 E0                MOVX    A,@DPTR
80F5E2 6F                XRL     A,R7
80F5E3 FF                MOV     R7,A
80F5E4 90187D            MOV     DPTR,#ret
80F5E7 E0                MOVX    A,@DPTR
80F5E8 04                INC     A
80F5E9 F0                MOVX    @DPTR,A
80F5EA 80DD              SJMP    ?C0080?PROCOTOL
80F5EC         ?C0081?PROCOTOL:
  341: 				if( sum == DownMsgBuf[ i + 7 ] )//完整的响应包				
80F5EC 90187C            MOV     DPTR,#i
80F5EF E0                MOVX    A,@DPTR
80F5F0 2469              ADD     A,#LOW DownMsgBuf+07H
80F5F2 F582              MOV     DPL,A
80F5F4 E4                CLR     A
80F5F5 342D              ADDC    A,#HIGH DownMsgBuf+07H
80F5F7 F583              MOV     DPH,A
80F5F9 E0                MOVX    A,@DPTR
80F5FA 6F                XRL     A,R7
80F5FB 6003              JZ      $ + 5H
80F5FD 02F691            LJMP    ?C0077?PROCOTOL
  342: 				{
  343: 					memset( Result, 0, sizeof( Result ) );
80F600 FE                MOV     R6,A
80F601 7F02              MOV     R7,#02H
80F603 FD                MOV     R5,A
80F604 90187A            MOV     DPTR,#Result
80F607 E0                MOVX    A,@DPTR
80F608 FA                MOV     R2,A
80F609 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 620


80F60A E0                MOVX    A,@DPTR
80F60B F9                MOV     R1,A
80F60C 7B00              MOV     R3,#?C?XDATASEG
80F60E A5128008A6        ECALL   ?C?MEMSET
  344: 					Result->State = DownMsgBuf[ i + 5 ];//状态码
80F613 90187C            MOV     DPTR,#i
80F616 E0                MOVX    A,@DPTR
80F617 FF                MOV     R7,A
80F618 2467              ADD     A,#LOW DownMsgBuf+05H
80F61A F582              MOV     DPL,A
80F61C E4                CLR     A
80F61D 342D              ADDC    A,#HIGH DownMsgBuf+05H
80F61F F583              MOV     DPH,A
80F621 E0                MOVX    A,@DPTR
80F622 FE                MOV     R6,A
80F623 90187A            MOV     DPTR,#Result
80F626 E0                MOVX    A,@DPTR
80F627 FC                MOV     R4,A
80F628 A3                INC     DPTR
80F629 E0                MOVX    A,@DPTR
80F62A FD                MOV     R5,A
80F62B 2404              ADD     A,#04H
80F62D F582              MOV     DPL,A
80F62F E4                CLR     A
80F630 3C                ADDC    A,R4
80F631 F583              MOV     DPH,A
80F633 EE                MOV     A,R6
80F634 F0                MOVX    @DPTR,A
  345: 					Result->Param[0] = DownMsgBuf[ i + 4 ];//货道号
80F635 7466              MOV     A,#LOW DownMsgBuf+04H
80F637 2F                ADD     A,R7
80F638 F582              MOV     DPL,A
80F63A E4                CLR     A
80F63B 342D              ADDC    A,#HIGH DownMsgBuf+04H
80F63D F583              MOV     DPH,A
80F63F E0                MOVX    A,@DPTR
80F640 FF                MOV     R7,A
80F641 ED                MOV     A,R5
80F642 2406              ADD     A,#06H
80F644 F582              MOV     DPL,A
80F646 E4                CLR     A
80F647 3C                ADDC    A,R4
80F648 F583              MOV     DPH,A
80F64A EF                MOV     A,R7
80F64B F0                MOVX    @DPTR,A
  346: 					Result->Param[1] = DownMsgBuf[ i + 2 ];//包序列号
80F64C 90187C            MOV     DPTR,#i
80F64F E0                MOVX    A,@DPTR
80F650 2464              ADD     A,#LOW DownMsgBuf+02H
80F652 F582              MOV     DPL,A
80F654 E4                CLR     A
80F655 342D              ADDC    A,#HIGH DownMsgBuf+02H
80F657 F583              MOV     DPH,A
80F659 E0                MOVX    A,@DPTR
80F65A FF                MOV     R7,A
80F65B ED                MOV     A,R5
80F65C 2407              ADD     A,#07H
80F65E F582              MOV     DPL,A
80F660 E4                CLR     A
80F661 3C                ADDC    A,R4
80F662 F583              MOV     DPH,A
80F664 EF                MOV     A,R7
80F665 F0                MOVX    @DPTR,A
  347: 					
  348: 				//	memset( DownMsgBuf + GoodsPacketLen - i - 8, 0, i + 8 );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 621


  349: 				//	GoodsPacketLen = GoodsPacketLen - i - 8;	
  350: 			#ifdef _DEBUG_TRACE
  351: 					Trace( "\n Channel Return Unpack = " );		
  352: 					for( j = 0; j < 8  ; j ++ )
  353: 						Trace( " %02bx", DownMsgBuf[ i + j ] );							
  354: 			#endif
  355: 					//除去前面的所有字节应答包
  356: 					for( sum = 0; sum < i + 8; sum++ )
80F666 E4                CLR     A
80F667 FF                MOV     R7,A
80F668         ?C0084?PROCOTOL:
80F668 90187C            MOV     DPTR,#i
80F66B E0                MOVX    A,@DPTR
80F66C 2408              ADD     A,#08H
80F66E FD                MOV     R5,A
80F66F E4                CLR     A
80F670 33                RLC     A
80F671 FC                MOV     R4,A
80F672 EF                MOV     A,R7
80F673 C3                CLR     C
80F674 9D                SUBB    A,R5
80F675 EC                MOV     A,R4
80F676 6480              XRL     A,#080H
80F678 F8                MOV     R0,A
80F679 7480              MOV     A,#080H
80F67B 98                SUBB    A,R0
80F67C 500F              JNC     ?C0085?PROCOTOL
  357: 						DownMsgBuf[ sum ] = 0x00;
80F67E 7462              MOV     A,#LOW DownMsgBuf
80F680 2F                ADD     A,R7
80F681 F582              MOV     DPL,A
80F683 E4                CLR     A
80F684 342D              ADDC    A,#HIGH DownMsgBuf
80F686 F583              MOV     DPH,A
80F688 E4                CLR     A
80F689 F0                MOVX    @DPTR,A
80F68A 0F                INC     R7
80F68B 80DB              SJMP    ?C0084?PROCOTOL
80F68D         ?C0085?PROCOTOL:
  358: 
  359: 					return 1;
80F68D 7F01              MOV     R7,#01H
80F68F 800B              SJMP    ?C0087?PROCOTOL
  360: 				}													
  361: 			}											
  362: 		}
  363: 	}
80F691         ?C0077?PROCOTOL:
80F691 90187C            MOV     DPTR,#i
80F694 E0                MOVX    A,@DPTR
80F695 04                INC     A
80F696 F0                MOVX    @DPTR,A
80F697 02F56D            LJMP    ?C0075?PROCOTOL
80F69A         ?C0076?PROCOTOL:
  364: 	return 0;
80F69A 7F00              MOV     R7,#00H
  365: }
80F69C         ?C0087?PROCOTOL:
80F69C A522              ERET    
----- FUNCTION _ZhkChannelFrameUnPack (END) -------


----- FUNCTION ZhkSerial1IsRxBufNull (BEGIN) -----
 FILE: 'Serial1.C'
  132: uchar ZhkSerial1IsRxBufNull( void )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 622


  133: {
  134: 	if  ( ZhkSerial1RxBufRd - ZhkSerial1RxBufWd == 0 ) return 1;
  135: 	return 0;
80F69E C3                CLR     C
80F69F E54B              MOV     A,ZhkSerial1RxBufRd
80F6A1 954C              SUBB    A,ZhkSerial1RxBufWd
80F6A3 7F00              MOV     R7,#00H
80F6A5 7002              JNZ     ?C0015?SERIAL1
80F6A7 7F01              MOV     R7,#01H
80F6A9         ?C0015?SERIAL1:
  136: }
  137: 
80F6A9         ?C0016?SERIAL1:
80F6A9 A522              ERET    
----- FUNCTION ZhkSerial1IsRxBufNull (END) -------


----- FUNCTION ZhkCasherRejectCash (BEGIN) -----
 FILE: 'casher.c'
  148: void ZhkCasherRejectCash( void )
  149: {	
  150: 	unsigned char data buf[ 3 ];
  151: 
  152: 	buf[ 0 ] = 0x00;
80F6AB E4                CLR     A
80F6AC F52A              MOV     buf,A
  153:     buf[ 1 ] = 0x50;             //0x54, 0x50 
80F6AE 752B50            MOV     buf+01H,#050H
  154:     buf[ 2 ] = 0x00;
80F6B1 F52C              MOV     buf+02H,A
  155: 
  156: 	ZhkVtiSendCmd( buf , 1 );
80F6B3 7F2A              MOV     R7,#LOW buf
80F6B5 7D01              MOV     R5,#01H
80F6B7 A50280F30A        EJMP    _ZhkVtiSendCmd
----- FUNCTION ZhkCasherRejectCash (END) -------


----- FUNCTION _ZhkCasherTxMsg (BEGIN) -----
 FILE: 'scheduler.c'
 1250: bit ZhkCasherTxMsg( struct COMMTASK xdata* TaskTemp, uchar xdata Flag )
 1251: {
80F6BC 901855            MOV     DPTR,#Flag
80F6BF ED                MOV     A,R5
80F6C0 F0                MOVX    @DPTR,A
;---- Variable 'TaskTemp' assigned to Register 'R6/R7' ----
 1252: 	switch( TaskTemp->Cmd )
 1253: 	{
80F6C1 8F82              MOV     DPL,R7
80F6C3 8E83              MOV     DPH,R6
80F6C5 A3                INC     DPTR
80F6C6 A3                INC     DPTR
80F6C7 E0                MOVX    A,@DPTR
80F6C8 24B0              ADD     A,#0B0H
80F6CA 6033              JZ      ?C0232?SCHEDULER
80F6CC 14                DEC     A
80F6CD 601A              JZ      ?C0236?SCHEDULER
80F6CF 24FE              ADD     A,#0FEH
80F6D1 600F              JZ      ?C0235?SCHEDULER
80F6D3 24FE              ADD     A,#0FEH
80F6D5 601E              JZ      ?C0237?SCHEDULER
80F6D7 2403              ADD     A,#03H
80F6D9 7021              JNZ     ?C0238?SCHEDULER
 1254: 	case CASHER_PERMISSION:
 1255: 		break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 623


 1256: 	case CASHER_ACCEPT:
 1257: 		// 接收纸币
80F6DB         ?C0234?SCHEDULER:
 1258: 		ZhkCasherAcceptCash();
80F6DB A51280F713        ECALL   ZhkCasherAcceptCash
 1259: 		break;
80F6E0 801D              SJMP    ?C0232?SCHEDULER
 1260: 	case CASHER_REJECT:
80F6E2         ?C0235?SCHEDULER:
 1261: 		// 拒收纸币
 1262: 		ZhkCasherRejectCash();
80F6E2 A51280F6AB        ECALL   ZhkCasherRejectCash
 1263: 		break;
80F6E7 8016              SJMP    ?C0232?SCHEDULER
 1264: 	case CASHER_QUERY:
80F6E9         ?C0236?SCHEDULER:
 1265: 		// 查询纸币器状态
 1266: 		ZhkCasherGetState( Flag );
80F6E9 901855            MOV     DPTR,#Flag
80F6EC E0                MOVX    A,@DPTR
80F6ED FF                MOV     R7,A
80F6EE A51280F725        ECALL   _ZhkCasherGetState
 1267: 		break;
80F6F3 800A              SJMP    ?C0232?SCHEDULER
 1268: 	case CASHER_DISABLE:
80F6F5         ?C0237?SCHEDULER:
 1269: 		//禁能纸币器指令
 1270: 		CasherDisableCasher();
80F6F5 A51280F702        ECALL   CasherDisableCasher
 1271: 		break;
80F6FA 8003              SJMP    ?C0232?SCHEDULER
 1272: 	default:
80F6FC         ?C0238?SCHEDULER:
 1273: 		return  0;
80F6FC C3                CLR     C
80F6FD 8001              SJMP    ?C0239?SCHEDULER
 1274: 	}
80F6FF         ?C0232?SCHEDULER:
 1275: 	return 1;	
80F6FF D3                SETB    C
 1276: }
80F700         ?C0239?SCHEDULER:
80F700 A522              ERET    
----- FUNCTION _ZhkCasherTxMsg (END) -------


----- FUNCTION CasherDisableCasher (BEGIN) -----
 FILE: 'casher.c'
  171: void CasherDisableCasher( void )
  172: {
  173: 	unsigned char data buf[ 3 ];
  174: 
  175: 	buf[ 0 ] = 0x00;
80F702 E4                CLR     A
80F703 F52A              MOV     buf,A
  176:     buf[ 1 ] = 0x14;
80F705 752B14            MOV     buf+01H,#014H
  177:     buf[ 2 ] = 0x00; 
80F708 F52C              MOV     buf+02H,A
  178: 
  179: 	ZhkVtiSendCmd( buf , 1 );
80F70A 7F2A              MOV     R7,#LOW buf
80F70C 7D01              MOV     R5,#01H
80F70E A50280F30A        EJMP    _ZhkVtiSendCmd
----- FUNCTION CasherDisableCasher (END) -------
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 624




----- FUNCTION ZhkCasherAcceptCash (BEGIN) -----
 FILE: 'casher.c'
  137: void ZhkCasherAcceptCash( void )
  138: {	
  139: 	unsigned char data buf[ 3 ];
  140: 	
  141: 	buf[ 0 ] = CasherBit;
80F713 85202A            MOV     buf,CasherBit
  142:     buf[ 1 ] = 0x30;              //0x34, 0x30
80F716 752B30            MOV     buf+01H,#030H
  143:     buf[ 2 ] = 0x00;
80F719 E4                CLR     A
80F71A F52C              MOV     buf+02H,A
  144: 
  145: 	ZhkVtiSendCmd( buf , 1 );
80F71C 7F2A              MOV     R7,#LOW buf
80F71E 7D01              MOV     R5,#01H
80F720 A50280F30A        EJMP    _ZhkVtiSendCmd
----- FUNCTION ZhkCasherAcceptCash (END) -------


----- FUNCTION _ZhkCasherGetState (BEGIN) -----
 FILE: 'casher.c'
  159: void ZhkCasherGetState( unsigned char Flag )
  160: {	
;---- Variable 'Flag' assigned to Register 'R6' ----
80F725 AE07              MOV     R6,AR7
  161: 	unsigned char data buf[ 3 ];
  162: 
  163: 	buf[ 0 ] = CasherBit;
80F727 85202A            MOV     buf,CasherBit
  164:     buf[ 1 ] = 0x14;
80F72A 752B14            MOV     buf+01H,#014H
  165:     buf[ 2 ] = 0x00; 
80F72D E4                CLR     A
80F72E F52C              MOV     buf+02H,A
  166: 
  167: 	ZhkVtiSendCmd( buf , Flag );
80F730 7F2A              MOV     R7,#LOW buf
80F732 AD06              MOV     R5,AR6
80F734 A50280F30A        EJMP    _ZhkVtiSendCmd
----- FUNCTION _ZhkCasherGetState (END) -------


----- FUNCTION ZhkSerial1GetCh (BEGIN) -----
 FILE: 'Serial1.C'
  100: uchar ZhkSerial1GetCh( void )
  101: {
  102: 	uchar data ch;
  103: 	ch = ZhkSerial1RxBuf[ ZhkSerial1RxBufRd ];
80F739 74DC              MOV     A,#LOW ZhkSerial1RxBuf
80F73B 254B              ADD     A,ZhkSerial1RxBufRd
80F73D F582              MOV     DPL,A
80F73F E4                CLR     A
80F740 342C              ADDC    A,#HIGH ZhkSerial1RxBuf
80F742 F583              MOV     DPH,A
80F744 E0                MOVX    A,@DPTR
80F745 F530              MOV     ch,A
  104: 	if ( ZhkDataBit < 8 )
80F747 902D5C            MOV     DPTR,#ZhkSerial1Param
80F74A E0                MOVX    A,@DPTR
80F74B C3                CLR     C
80F74C 9408              SUBB    A,#08H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 625


80F74E 5003              JNC     ?C0012?SERIAL1
  105: 	{
  106: 		ch &= ~( 1 << 7 );
80F750 53307F            ANL     ch,#07FH
  107: 	}
80F753         ?C0012?SERIAL1:
  108: 	ZhkSerial1RxBufRd ++;
80F753 054B              INC     ZhkSerial1RxBufRd
  109: 	if ( ZhkSerial1RxBufRd >= ZHKSERIAL1RXBUFLEN ) ZhkSerial1RxBufRd = 0;
80F755 E54B              MOV     A,ZhkSerial1RxBufRd
80F757 C3                CLR     C
80F758 9480              SUBB    A,#080H
80F75A 4003              JC      ?C0013?SERIAL1
80F75C E4                CLR     A
80F75D F54B              MOV     ZhkSerial1RxBufRd,A
80F75F         ?C0013?SERIAL1:
  110: 	ZhkHardSetRTS();
80F75F C2B4              CLR     PinRTS
  111: //	Trace( "ZhkSerial1GetCh=%bxH\n",ch );
  112: 	return ch;
80F761 AF30              MOV     R7,ch
  113: 	
  114: }
80F763         ?C0014?SERIAL1:
80F763 A522              ERET    
----- FUNCTION ZhkSerial1GetCh (END) -------


----- FUNCTION _ZhkCasherFrameUnPack (BEGIN) -----
 FILE: 'procotol.c'
  184: unsigned char ZhkCasherFrameUnPack( struct COMMTASK xdata* Result )
  185: {
80F765 90187B            MOV     DPTR,#Result
80F768 EE                MOV     A,R6
80F769 F0                MOVX    @DPTR,A
80F76A A3                INC     DPTR
80F76B EF                MOV     A,R7
80F76C F0                MOVX    @DPTR,A
  186: 	unsigned char  data i,j,sum;
  187: 	unsigned char  data buf[ 3 ];
  188: 	
  189: 	
  190: //	Trace( "\n Get Cash Return Begin ");
  191: //	Trace( "\n Cash Return Str = ");
  192: 	j = 0;
80F76D E4                CLR     A
80F76E F52B              MOV     j,A
80F770         ?C0042?PROCOTOL:
  193: 	while( ! ZhkSerial1IsRxBufNull() )
80F770 A51280F69E        ECALL   ZhkSerial1IsRxBufNull
80F775 EF                MOV     A,R7
80F776 702F              JNZ     ?C0047?PROCOTOL
  194: 	{
  195: 		for( i = 0 ; i <= sizeof( DownMsgBuf ) - 1 ; i ++ )
80F778 F52A              MOV     i,A
80F77A         ?C0044?PROCOTOL:
  196: 			DownMsgBuf[ i ] = DownMsgBuf[ i + 1 ];
80F77A 7463              MOV     A,#LOW DownMsgBuf+01H
80F77C 252A              ADD     A,i
80F77E F582              MOV     DPL,A
80F780 E4                CLR     A
80F781 342D              ADDC    A,#HIGH DownMsgBuf+01H
80F783 F583              MOV     DPH,A
80F785 E0                MOVX    A,@DPTR
80F786 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 626


80F787 7462              MOV     A,#LOW DownMsgBuf
80F789 252A              ADD     A,i
80F78B F582              MOV     DPL,A
80F78D E4                CLR     A
80F78E 342D              ADDC    A,#HIGH DownMsgBuf
80F790 F583              MOV     DPH,A
80F792 EF                MOV     A,R7
80F793 F0                MOVX    @DPTR,A
80F794 052A              INC     i
80F796 E52A              MOV     A,i
80F798 B440DF            CJNE    A,#040H,?C0044?PROCOTOL
80F79B         ?C0045?PROCOTOL:
  197: 		DownMsgBuf[ sizeof( DownMsgBuf ) - 1 ] = ZhkSerial1GetCh();
80F79B A51280F739        ECALL   ZhkSerial1GetCh
80F7A0 902DA1            MOV     DPTR,#DownMsgBuf+03FH
80F7A3 EF                MOV     A,R7
80F7A4 F0                MOVX    @DPTR,A
  198: 	//	Trace( " %02bx", DownMsgBuf[ sizeof( DownMsgBuf ) - 1 ] );
  199: #ifdef _DEBUG_TRACE
  200: 		j ++ ;
  201: #endif
  202: 	}		
80F7A5 80C9              SJMP    ?C0042?PROCOTOL
80F7A7         ?C0047?PROCOTOL:
  203: /*
  204: #ifdef _DEBUG_TRACE
  205: 	if( j )
  206: 	{
  207: 		Trace( "\n Casher Return Str = ");
  208: 		for( j = 0; j < 32; j++ )
  209: 			Trace( " %02bx", DownMsgBuf[32+j] );
  210: 		j = 0;
  211: 	}
  212: #endif	
  213: */
  214: //	Trace( "\n Get Cash Return End ");
  215: 	while( 1 )
  216: 	{
  217: 		for( i = 0; i <= sizeof( DownMsgBuf ) - 0x0B; i ++ )
80F7A7 E4                CLR     A
80F7A8 F52A              MOV     i,A
80F7AA         ?C0049?PROCOTOL:
  218: 		{
  219: 			if( ( DownMsgBuf[i] == VTISERIAL_FRAMEHEAD ) && ( DownMsgBuf[ i + 1 ] == 0x0B ) )
80F7AA 7462              MOV     A,#LOW DownMsgBuf
80F7AC 252A              ADD     A,i
80F7AE F582              MOV     DPL,A
80F7B0 E4                CLR     A
80F7B1 342D              ADDC    A,#HIGH DownMsgBuf
80F7B3 F583              MOV     DPH,A
80F7B5 E0                MOVX    A,@DPTR
80F7B6 B40210            CJNE    A,#02H,?C0051?PROCOTOL
80F7B9 7463              MOV     A,#LOW DownMsgBuf+01H
80F7BB 252A              ADD     A,i
80F7BD F582              MOV     DPL,A
80F7BF E4                CLR     A
80F7C0 342D              ADDC    A,#HIGH DownMsgBuf+01H
80F7C2 F583              MOV     DPH,A
80F7C4 E0                MOVX    A,@DPTR
80F7C5 640B              XRL     A,#0BH
80F7C7 6007              JZ      ?C0050?PROCOTOL
  220: 			{
  221: 				//找到包头
  222: 				break;
  223: 			}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 627


  224: 		}
80F7C9         ?C0051?PROCOTOL:
80F7C9 052A              INC     i
80F7CB E52A              MOV     A,i
80F7CD B436DA            CJNE    A,#036H,?C0049?PROCOTOL
80F7D0         ?C0050?PROCOTOL:
  225: 		if( i > sizeof( DownMsgBuf ) - 0x0B )//没有找到包头退出
80F7D0 E52A              MOV     A,i
80F7D2 D3                SETB    C
80F7D3 9435              SUBB    A,#035H
80F7D5 4005              JC      ?C0053?PROCOTOL
  226: 			return 0;
80F7D7 7F00              MOV     R7,#00H
80F7D9 02F932            LJMP    ?C0054?PROCOTOL
80F7DC         ?C0053?PROCOTOL:
  227: 		//找到包头处理	
  228: 		if ( DownMsgBuf[ i + 9 ] != VTISERIAL_FRAMETAIL ) 
80F7DC 746B              MOV     A,#LOW DownMsgBuf+09H
80F7DE 252A              ADD     A,i
80F7E0 F582              MOV     DPL,A
80F7E2 E4                CLR     A
80F7E3 342D              ADDC    A,#HIGH DownMsgBuf+09H
80F7E5 F583              MOV     DPH,A
80F7E7 E0                MOVX    A,@DPTR
80F7E8 6403              XRL     A,#03H
80F7EA 6079              JZ      ?C0048?PROCOTOL
  229: 		{
  230: 			//包头和包尾不配对,应该乱包，除去包头标志
  231: 		//	for( sum = i; sum < sizeof( DownMsgBuf ); sum ++ )
  232: 		//		DownMsgBuf[sum] = DownMsgBuf[sum + 2 ];
  233: 		   	DownMsgBuf[ i ] = 0x00;
80F7EC 7462              MOV     A,#LOW DownMsgBuf
80F7EE 252A              ADD     A,i
80F7F0 F582              MOV     DPL,A
80F7F2 E4                CLR     A
80F7F3 342D              ADDC    A,#HIGH DownMsgBuf
80F7F5 F583              MOV     DPH,A
80F7F7 E4                CLR     A
80F7F8 F0                MOVX    @DPTR,A
  234: 		   	DownMsgBuf[ i + 1 ] = 0x00;		
80F7F9 7463              MOV     A,#LOW DownMsgBuf+01H
80F7FB 252A              ADD     A,i
80F7FD F582              MOV     DPL,A
80F7FF E4                CLR     A
80F800 342D              ADDC    A,#HIGH DownMsgBuf+01H
80F802 F583              MOV     DPH,A
80F804 E4                CLR     A
80F805 F0                MOVX    @DPTR,A
  235: 		}
  236: 		else
  237: 			break;
80F806         ?C0056?PROCOTOL:
  238: 	
  239: 		//包头、尾配对,查校验		
  240: 		sum = 0;
80F806 E4                CLR     A
80F807 F52C              MOV     sum,A
  241: 		for( j = i + 1 ; j < i + 8 ; j ++ )
80F809 E52A              MOV     A,i
80F80B 04                INC     A
80F80C F52B              MOV     j,A
80F80E         ?C0057?PROCOTOL:
80F80E E52A              MOV     A,i
80F810 2408              ADD     A,#08H
80F812 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 628


80F813 E4                CLR     A
80F814 33                RLC     A
80F815 FE                MOV     R6,A
80F816 C3                CLR     C
80F817 E52B              MOV     A,j
80F819 9F                SUBB    A,R7
80F81A EE                MOV     A,R6
80F81B 6480              XRL     A,#080H
80F81D F8                MOV     R0,A
80F81E 7480              MOV     A,#080H
80F820 98                SUBB    A,R0
80F821 5012              JNC     ?C0058?PROCOTOL
  242: 		{
  243: 			sum ^= DownMsgBuf[ j ]; 		
80F823 7462              MOV     A,#LOW DownMsgBuf
80F825 252B              ADD     A,j
80F827 F582              MOV     DPL,A
80F829 E4                CLR     A
80F82A 342D              ADDC    A,#HIGH DownMsgBuf
80F82C F583              MOV     DPH,A
80F82E E0                MOVX    A,@DPTR
80F82F 622C              XRL     sum,A
  244: 		}
80F831 052B              INC     j
80F833 80D9              SJMP    ?C0057?PROCOTOL
80F835         ?C0058?PROCOTOL:
  245: 		if ( DownMsgBuf[ i + 10 ] != sum ) 
80F835 746C              MOV     A,#LOW DownMsgBuf+0AH
80F837 252A              ADD     A,i
80F839 F582              MOV     DPL,A
80F83B E4                CLR     A
80F83C 342D              ADDC    A,#HIGH DownMsgBuf+0AH
80F83E F583              MOV     DPH,A
80F840 E0                MOVX    A,@DPTR
80F841 652C              XRL     A,sum
80F843 6020              JZ      ?C0048?PROCOTOL
  246: 		{
  247: 			//包校验不对，乱包，除去包头
  248: 			sum = 0;
80F845 E4                CLR     A
80F846 F52C              MOV     sum,A
  249: //			for( sum = i; sum < sizeof( DownMsgBuf ); sum ++ )
  250: //				DownMsgBuf[sum] = DownMsgBuf[sum + 2 ];
  251: 		   	DownMsgBuf[ i ] = 0x00;
80F848 7462              MOV     A,#LOW DownMsgBuf
80F84A 252A              ADD     A,i
80F84C F582              MOV     DPL,A
80F84E E4                CLR     A
80F84F 342D              ADDC    A,#HIGH DownMsgBuf
80F851 F583              MOV     DPH,A
80F853 E4                CLR     A
80F854 F0                MOVX    @DPTR,A
  252: 		   	DownMsgBuf[ i + 1 ] = 0x00;		
80F855 7463              MOV     A,#LOW DownMsgBuf+01H
80F857 252A              ADD     A,i
80F859 F582              MOV     DPL,A
80F85B E4                CLR     A
80F85C 342D              ADDC    A,#HIGH DownMsgBuf+01H
80F85E F583              MOV     DPH,A
80F860 E4                CLR     A
80F861 F0                MOVX    @DPTR,A
  253: 		}
80F862 02F7A7            LJMP    ?C0047?PROCOTOL
  254: 		else
  255: 			break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 629


  256: 	}
80F865         ?C0048?PROCOTOL:
  257: 	//是完整而正确的包
  258: 	#ifdef _DEBUG_TRACE
  259: 		Trace( "\n Cash Return OK Str");
  260: 		for( j = i; j <= i + 10 ; j ++ )		
  261: 			Trace( " 0x%02bx",DownMsgBuf[ j ] );	
  262: 		Trace( "\n" );
  263: 	#endif
  264: 	buf[ 0 ] = 0;
80F865 E4                CLR     A
80F866 F52D              MOV     buf,A
  265: 	buf[ 1 ] = 0;
80F868 F52E              MOV     buf+01H,A
  266: 	buf[ 2 ] = 0;
80F86A F52F              MOV     buf+02H,A
  267: 	
  268: 	if ( DownMsgBuf[ i + 3 + 0 ] & 0x04 ) buf[ 0 ] |= 0x10;//有钱进入
80F86C 7465              MOV     A,#LOW DownMsgBuf+03H
80F86E 252A              ADD     A,i
80F870 F582              MOV     DPL,A
80F872 E4                CLR     A
80F873 342D              ADDC    A,#HIGH DownMsgBuf+03H
80F875 F583              MOV     DPH,A
80F877 E0                MOVX    A,@DPTR
80F878 FF                MOV     R7,A
80F879 30E203            JNB     ACC.2,?C0062?PROCOTOL
80F87C 432D10            ORL     buf,#010H
80F87F         ?C0062?PROCOTOL:
  269: 	if ( DownMsgBuf[ i + 3 + 0 ] & 0x10 ) buf[ 0 ] |= 0x20;//已存入
80F87F EF                MOV     A,R7
80F880 30E403            JNB     ACC.4,?C0063?PROCOTOL
80F883 432D20            ORL     buf,#020H
80F886         ?C0063?PROCOTOL:
  270: 	if ( DownMsgBuf[ i + 3 + 0 ] & 0x40 ) buf[ 0 ] |= 0x80;//已返回
80F886 EF                MOV     A,R7
80F887 30E603            JNB     ACC.6,?C0064?PROCOTOL
80F88A 432D80            ORL     buf,#080H
80F88D         ?C0064?PROCOTOL:
  271: 	if ( DownMsgBuf[ i + 3 + 2 ] & 0x02 ) buf[ 0 ] |= 0x04;//命令错误
80F88D 7467              MOV     A,#LOW DownMsgBuf+05H
80F88F 252A              ADD     A,i
80F891 F582              MOV     DPL,A
80F893 E4                CLR     A
80F894 342D              ADDC    A,#HIGH DownMsgBuf+05H
80F896 F583              MOV     DPH,A
80F898 E0                MOVX    A,@DPTR
80F899 FF                MOV     R7,A
80F89A 30E103            JNB     ACC.1,?C0065?PROCOTOL
80F89D 432D04            ORL     buf,#04H
80F8A0         ?C0065?PROCOTOL:
  272: 	if ( DownMsgBuf[ i + 3 + 2 ] & 0x04 ) buf[ 0 ] |= 0x40;//故障
80F8A0 EF                MOV     A,R7
80F8A1 30E203            JNB     ACC.2,?C0066?PROCOTOL
80F8A4 432D40            ORL     buf,#040H
80F8A7         ?C0066?PROCOTOL:
  273: 	buf[ 1 ]  = DownMsgBuf[ i + 3 + 1 ] & 0x7F;//纸币器和钱箱状态
80F8A7 7466              MOV     A,#LOW DownMsgBuf+04H
80F8A9 252A              ADD     A,i
80F8AB F582              MOV     DPL,A
80F8AD E4                CLR     A
80F8AE 342D              ADDC    A,#HIGH DownMsgBuf+04H
80F8B0 F583              MOV     DPH,A
80F8B2 E0                MOVX    A,@DPTR
80F8B3 547F              ANL     A,#07FH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 630


80F8B5 F52E              MOV     buf+01H,A
  274: 	buf[ 2 ]  = DownMsgBuf[ i + 3 + 2 ] / 8;
80F8B7 7467              MOV     A,#LOW DownMsgBuf+05H
80F8B9 252A              ADD     A,i
80F8BB F582              MOV     DPL,A
80F8BD E4                CLR     A
80F8BE 342D              ADDC    A,#HIGH DownMsgBuf+05H
80F8C0 F583              MOV     DPH,A
80F8C2 E0                MOVX    A,@DPTR
80F8C3 13                RRC     A
80F8C4 13                RRC     A
80F8C5 13                RRC     A
80F8C6 541F              ANL     A,#01FH
80F8C8 F52F              MOV     buf+02H,A
  275: 	buf[ 2 ] &= 0x07;//收到的币种编号
80F8CA 532F07            ANL     buf+02H,#07H
  276: 	
  277: //	Trace( "\n Result->State = %02bx", buf[ 0 ] );
  278: 	Result->State      = buf[ 0 ];//纸币状态
80F8CD 90187B            MOV     DPTR,#Result
80F8D0 E0                MOVX    A,@DPTR
80F8D1 FE                MOV     R6,A
80F8D2 A3                INC     DPTR
80F8D3 E0                MOVX    A,@DPTR
80F8D4 FF                MOV     R7,A
80F8D5 2404              ADD     A,#04H
80F8D7 F582              MOV     DPL,A
80F8D9 E4                CLR     A
80F8DA 3E                ADDC    A,R6
80F8DB F583              MOV     DPH,A
80F8DD E52D              MOV     A,buf
80F8DF F0                MOVX    @DPTR,A
  279: 	Result->Param[ 0 ] = buf[ 1 ];//纸币器状态
80F8E0 EF                MOV     A,R7
80F8E1 2406              ADD     A,#06H
80F8E3 F582              MOV     DPL,A
80F8E5 E4                CLR     A
80F8E6 3E                ADDC    A,R6
80F8E7 F583              MOV     DPH,A
80F8E9 E52E              MOV     A,buf+01H
80F8EB F0                MOVX    @DPTR,A
  280: 	Result->Param[ 1 ] = buf[ 2 ];////收到的币种编号
80F8EC EF                MOV     A,R7
80F8ED 2407              ADD     A,#07H
80F8EF F582              MOV     DPL,A
80F8F1 E4                CLR     A
80F8F2 3E                ADDC    A,R6
80F8F3 F583              MOV     DPH,A
80F8F5 E52F              MOV     A,buf+02H
80F8F7 F0                MOVX    @DPTR,A
  281: 	Result->ParamLen   = 3;
80F8F8 EF                MOV     A,R7
80F8F9 2405              ADD     A,#05H
80F8FB F582              MOV     DPL,A
80F8FD E4                CLR     A
80F8FE 3E                ADDC    A,R6
80F8FF F583              MOV     DPH,A
80F901 7403              MOV     A,#03H
80F903 F0                MOVX    @DPTR,A
  282: 	sum = 0;
80F904 E4                CLR     A
80F905 F52C              MOV     sum,A
  283: 	for( sum = i; sum < i + 11; sum ++ )
80F907 852A2C            MOV     sum,i
80F90A         ?C0067?PROCOTOL:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 631


80F90A E52A              MOV     A,i
80F90C 240B              ADD     A,#0BH
80F90E FF                MOV     R7,A
80F90F E4                CLR     A
80F910 33                RLC     A
80F911 FE                MOV     R6,A
80F912 C3                CLR     C
80F913 E52C              MOV     A,sum
80F915 9F                SUBB    A,R7
80F916 EE                MOV     A,R6
80F917 6480              XRL     A,#080H
80F919 F8                MOV     R0,A
80F91A 7480              MOV     A,#080H
80F91C 98                SUBB    A,R0
80F91D 5011              JNC     ?C0068?PROCOTOL
  284: 		DownMsgBuf[sum] = 0x00;
80F91F 7462              MOV     A,#LOW DownMsgBuf
80F921 252C              ADD     A,sum
80F923 F582              MOV     DPL,A
80F925 E4                CLR     A
80F926 342D              ADDC    A,#HIGH DownMsgBuf
80F928 F583              MOV     DPH,A
80F92A E4                CLR     A
80F92B F0                MOVX    @DPTR,A
80F92C 052C              INC     sum
80F92E 80DA              SJMP    ?C0067?PROCOTOL
80F930         ?C0068?PROCOTOL:
  285: //	for( sum = sizeof( DownMsgBuf ) - 11; sum < sizeof( DownMsgBuf ); sum ++ )
  286: //		DownMsgBuf[sum] = 0x00;				
  287: 	return 1;	
80F930 7F01              MOV     R7,#01H
  288: }
80F932         ?C0054?PROCOTOL:
80F932 A522              ERET    
----- FUNCTION _ZhkCasherFrameUnPack (END) -------


----- FUNCTION ZhkTimerInit (BEGIN) -----
 FILE: 'timer.c'
   19: void ZhkTimerInit( void )
   20: {
   21: 	TMOD &= 0xF0;
   22: 	TMOD |= 0x01;
80F934 5389F0            ANL     TMOD,#0F0H
   23: 	TL0   = ( uint )( 0x10000 + 16 - 10.0 * 1000 * OSCRATE / 1000000 / MACHINECYCLE / 12 ) % 256;
80F937 438901            ORL     TMOD,#01H
   24: 	TH0   = ( uint )( 0x10000 + 16 - 10.0 * 1000 * OSCRATE / 1000000 / MACHINECYCLE / 12 ) / 256;
80F93A 758A10            MOV     TL0,#010H
   25: 	TR0   = 1;
80F93D 758CFA            MOV     TH0,#0FAH
   26: 	ET0   = 1;
80F940 D28C              SETB    TR0
   27: 	SgpSecTimer = 0;
80F942 D2A9              SETB    ET0
   28: 	SgwSecTimer = 0;
80F944 E4                CLR     A
80F945 F51B              MOV     SgpSecTimer,A
   29: 	Tick = 0;
80F947 F51E              MOV     SgwSecTimer,A
   30: 	Second = 0;
80F949 F513              MOV     Tick,A
   31: 	YgpSecTimer = 0;
80F94B F51F              MOV     Second,A
   32: 	LzjSecTimer = 0;
80F94D F51C              MOV     YgpSecTimer,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 632


   33: 	ZhkDownMsgAckTimer = 0;
80F94F F51D              MOV     LzjSecTimer,A
   34: 	ZhkBuzzerTimer = 0;
80F951 F511              MOV     ZhkDownMsgAckTimer,A
80F953 F512              MOV     ZhkDownMsgAckTimer+01H,A
   35: 	QueryCashTimer = 0;
80F955 F518              MOV     ZhkBuzzerTimer,A
   36: 	ZhkMobileSecTimer = 0;
80F957 F515              MOV     QueryCashTimer,A
   37: 	AlarmSpacing = 0;
80F959 F517              MOV     ZhkMobileSecTimer,A
   38: 	GPRSModuleResetTimer = 0;
80F95B 902DF3            MOV     DPTR,#AlarmSpacing
80F95E F0                MOVX    @DPTR,A
   39: 	SendSMSTimer = 0;
80F95F 902DF1            MOV     DPTR,#GPRSModuleResetTimer
80F962 F0                MOVX    @DPTR,A
80F963 A3                INC     DPTR
80F964 F0                MOVX    @DPTR,A
   40: 	ReceiveSMSTimer = 0;
80F965 F510              MOV     SendSMSTimer,A
   41: 	QueryTimer = 0;
80F967 F519              MOV     ReceiveSMSTimer,A
   42: }
80F969 F514              MOV     QueryTimer,A
   43: void Zhktmr0( void ) interrupt 1 using 1 
80F96B A522              ERET    
----- FUNCTION ZhkTimerInit (END) -------


----- FUNCTION Zhktmr0 (BEGIN) -----
 FILE: 'timer.c'
   43: void Zhktmr0( void ) interrupt 1 using 1 
80F96D C0E0              PUSH    ACC
80F96F C0F0              PUSH    B
80F971 C083              PUSH    DPH
80F973 C082              PUSH    DPL
80F975 C0D0              PUSH    PSW
80F977 75D008            MOV     PSW,#08H
   44: {
   45: 	ZhkSaveChipSelect();
80F97A C090              PUSH    P1
   46: 	ZhkHardSramSelect();
80F97C 759008            MOV     P1,#08H
   47: 	TL0   = ( uint )( 0x10000 + 16 - 10.0 * 1000 * OSCRATE / 1000000 / MACHINECYCLE ) % 256;
80F97F 758A10            MOV     TL0,#010H
   48: 	TH0   = ( uint )( 0x10000 + 16 - 10.0 * 1000 * OSCRATE / 1000000 / MACHINECYCLE ) / 256;
80F982 758CB8            MOV     TH0,#0B8H
   49: 	
   50: 	Tick ++ ;
80F985 0513              INC     Tick
   51: 	if ( Tick % 5 == 0 ) 
80F987 E513              MOV     A,Tick
80F989 75F005            MOV     B,#05H
80F98C 84                DIV     AB
80F98D E5F0              MOV     A,B
80F98F 7005              JNZ     ?C0002?TIMER
   52: 		ZhkKeyScanIsr();
80F991 A51280FDD9        ECALL   ZhkKeyScanIsr
80F996         ?C0002?TIMER:
   53: 	// 时钟周期(10ms)延时区
   54: 	if ( LzjMSecTimer > 10 ) 
80F996 E516              MOV     A,LzjMSecTimer
80F998 D3                SETB    C
80F999 940A              SUBB    A,#0AH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 633


80F99B 4008              JC      ?C0003?TIMER
   55: 		LzjMSecTimer -= 10;
80F99D 74F6              MOV     A,#0F6H
80F99F 2516              ADD     A,LzjMSecTimer
80F9A1 F516              MOV     LzjMSecTimer,A
80F9A3 8003              SJMP    ?C0004?TIMER
80F9A5         ?C0003?TIMER:
   56: 	else
   57: 		LzjMSecTimer = 0;
80F9A5 751600            MOV     LzjMSecTimer,#00H
80F9A8         ?C0004?TIMER:
   58: //	if ( SerialAckTimer ) SerialAckTimer --;
   59: 	ZhkSchedulerClock ++;
80F9A8 051A              INC     ZhkSchedulerClock
   60: 	if ( ZhkDownMsgAckTimer ) 
80F9AA E512              MOV     A,ZhkDownMsgAckTimer+01H
80F9AC 4511              ORL     A,ZhkDownMsgAckTimer
80F9AE 6008              JZ      ?C0005?TIMER
   61: 		ZhkDownMsgAckTimer --;
80F9B0 E512              MOV     A,ZhkDownMsgAckTimer+01H
80F9B2 1512              DEC     ZhkDownMsgAckTimer+01H
80F9B4 7002              JNZ     ?C0023?TIMER
80F9B6 1511              DEC     ZhkDownMsgAckTimer
80F9B8         ?C0023?TIMER:
80F9B8         ?C0005?TIMER:
   62: 	if ( ZhkBuzzerTimer > 0 ) 
80F9B8 D3                SETB    C
80F9B9 E518              MOV     A,ZhkBuzzerTimer
80F9BB 6480              XRL     A,#080H
80F9BD 9480              SUBB    A,#080H
80F9BF 4004              JC      ?C0006?TIMER
   63: 		ZhkBuzzerTimer --;
80F9C1 1518              DEC     ZhkBuzzerTimer
80F9C3 8005              SJMP    ?C0007?TIMER
80F9C5         ?C0006?TIMER:
   64: 	else
   65: 	{
   66: 		ZhkHardBuzzerOff();
80F9C5 A51280FD88        ECALL   ZhkHardBuzzerOff
   67: 	}
80F9CA         ?C0007?TIMER:
   68: 	
   69: 	if ( Tick >= 100 )
80F9CA E513              MOV     A,Tick
80F9CC C3                CLR     C
80F9CD 9464              SUBB    A,#064H
80F9CF 4078              JC      ?C0008?TIMER
   70: 	{
   71: 		Tick = 0;
80F9D1 751300            MOV     Tick,#00H
   72: 		Second ++;
80F9D4 051F              INC     Second
   73: 		
   74: 		if ( SgpSecTimer ) 
80F9D6 E51B              MOV     A,SgpSecTimer
80F9D8 6002              JZ      ?C0009?TIMER
   75: 			SgpSecTimer --;
80F9DA 151B              DEC     SgpSecTimer
80F9DC         ?C0009?TIMER:
   76: 		if( SgwSecTimer )
80F9DC E51E              MOV     A,SgwSecTimer
80F9DE 6002              JZ      ?C0010?TIMER
   77: 			SgwSecTimer--;
80F9E0 151E              DEC     SgwSecTimer
80F9E2         ?C0010?TIMER:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 634


   78: 		if ( YgpSecTimer ) 
80F9E2 E51C              MOV     A,YgpSecTimer
80F9E4 6002              JZ      ?C0011?TIMER
   79: 			YgpSecTimer --;
80F9E6 151C              DEC     YgpSecTimer
80F9E8         ?C0011?TIMER:
   80: 		if ( LzjSecTimer ) 
80F9E8 E51D              MOV     A,LzjSecTimer
80F9EA 6002              JZ      ?C0012?TIMER
   81: 			LzjSecTimer --;
80F9EC 151D              DEC     LzjSecTimer
80F9EE         ?C0012?TIMER:
   82: 		if(( QueryCashTimer > 0 ) && ( QueryCashTimer < 240 ) )
80F9EE E515              MOV     A,QueryCashTimer
80F9F0 D3                SETB    C
80F9F1 9400              SUBB    A,#00H
80F9F3 4008              JC      ?C0013?TIMER
80F9F5 E515              MOV     A,QueryCashTimer
80F9F7 94F0              SUBB    A,#0F0H
80F9F9 5002              JNC     ?C0013?TIMER
   83: 			QueryCashTimer--;
80F9FB 1515              DEC     QueryCashTimer
80F9FD         ?C0013?TIMER:
   84: 		if ( ZhkMobileSecTimer ) 
80F9FD E517              MOV     A,ZhkMobileSecTimer
80F9FF 6002              JZ      ?C0014?TIMER
   85: 				ZhkMobileSecTimer --;
80FA01 1517              DEC     ZhkMobileSecTimer
80FA03         ?C0014?TIMER:
   86: //		if ( g_byCommTimeOutSeconds ) g_byCommTimeOutSeconds --;
   87: 		
   88: 		if( SendSMSTimer )
80FA03 E510              MOV     A,SendSMSTimer
80FA05 6002              JZ      ?C0015?TIMER
   89: 			SendSMSTimer --;		
80FA07 1510              DEC     SendSMSTimer
80FA09         ?C0015?TIMER:
   90: 		if( ReceiveSMSTimer )
80FA09 E519              MOV     A,ReceiveSMSTimer
80FA0B 6002              JZ      ?C0016?TIMER
   91: 			ReceiveSMSTimer --;
80FA0D 1519              DEC     ReceiveSMSTimer
80FA0F         ?C0016?TIMER:
   92: 		if( QueryTimer )
80FA0F E514              MOV     A,QueryTimer
80FA11 6002              JZ      ?C0017?TIMER
   93: 			QueryTimer--;
80FA13 1514              DEC     QueryTimer
80FA15         ?C0017?TIMER:
   94: 		// 秒级延时区域
   95: 		if ( Second >= 60 )
80FA15 E51F              MOV     A,Second
80FA17 C3                CLR     C
80FA18 943C              SUBB    A,#03CH
80FA1A 4015              JC      ?C0018?TIMER
   96: 		{
   97: 			Second = 0;
80FA1C 751F00            MOV     Second,#00H
   98: 			if( AlarmSpacing < 255 )
80FA1F 902DF3            MOV     DPTR,#AlarmSpacing
80FA22 E0                MOVX    A,@DPTR
80FA23 94FF              SUBB    A,#0FFH
80FA25 5005              JNC     ?C0019?TIMER
   99: 				AlarmSpacing ++ ;
80FA27 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 635


80FA28 04                INC     A
80FA29 F0                MOVX    @DPTR,A
80FA2A 8005              SJMP    ?C0018?TIMER
80FA2C         ?C0019?TIMER:
  100: 			else
  101: 				AlarmSpacing = 0;				
80FA2C 902DF3            MOV     DPTR,#AlarmSpacing
80FA2F E4                CLR     A
80FA30 F0                MOVX    @DPTR,A
  102: 			// 分钟级延时区域
  103: 		//	if ( g_byCommHeartBeatMins ) g_byCommHeartBeatMins --;		
  104: 		}		
80FA31         ?C0018?TIMER:
  105: 		if( GPRSModuleResetTimer > 0 )
80FA31 D3                SETB    C
80FA32 902DF2            MOV     DPTR,#GPRSModuleResetTimer+01H
80FA35 E0                MOVX    A,@DPTR
80FA36 9400              SUBB    A,#00H
80FA38 902DF1            MOV     DPTR,#GPRSModuleResetTimer
80FA3B E0                MOVX    A,@DPTR
80FA3C 9400              SUBB    A,#00H
80FA3E 4009              JC      ?C0008?TIMER
  106: 			GPRSModuleResetTimer--;
80FA40 74FF              MOV     A,#0FFH
80FA42 F5F0              MOV     B,A
80FA44 A512800600        ECALL   ?C?IILDX
  107: 	}
80FA49         ?C0008?TIMER:
  108: //	#ifndef _DEBUG_MOBILE_TEST
  109: 	ZhkIOInputIsr();
80FA49 A51280FDA0        ECALL   ZhkIOInputIsr
  110: 
  111: #ifdef _COIN_INPUT_PARALLEL
  112: 	ZyzChkCoinChnSta();
80FA4E A51280FA60        ECALL   ZyzChkCoinChnSta
  113: #else
  114: 	ZhkChkCoinInIsr();
  115: #endif
  116: 
  117: //	if ( Tick % 5 == 0 ) ZhkKeyScanIsr();
  118: //	#endif	// _DEBUG_MOBILE_TEST	
  119: 	ZhkLoadChipSelect();
80FA53 D090              POP     P1
  119: }
80FA55 D0D0              POP     PSW
80FA57 D082              POP     DPL
80FA59 D083              POP     DPH
80FA5B D0F0              POP     B
80FA5D D0E0              POP     ACC
80FA5F 32                RETI    
----- FUNCTION Zhktmr0 (END) -------


----- FUNCTION ZyzChkCoinChnSta (BEGIN) -----
 FILE: 'IOInput.c'
  344: 	void ZyzChkCoinChnSta( void ) using 1
80FA60 C0D0              PUSH    PSW
80FA62 75D008            MOV     PSW,#08H
  345: 	{
  346: 		//------------------------------------------------------
  347: 	    //Added by Andy on 20071027 for test02 .
  348: 	    #define HardIsCoinChn1In()   !( CountIOState & BitCoinChn1 )
  349: 		#define HardIsCoinChn2In()   !( CountIOState & BitCoinChn2 )
  350: 	    #define HardIsCoinChn3In()   !( CountIOState & BitCoinChn3 )
  351: 		#define HardIsCoinChn4In()   !( CountIOState & BitCoinChn4 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 636


  352: 	    #define HardIsCoinChn5In()   !( CountIOState & BitCoinChn5 )
  353: 		#define HardIsCoinChn6In()   !( CountIOState & BitCoinChn6 )
  354: 	    #define CoinTimes  2
  355: 	    static uchar xdata PinLowCount1 = 0;
  356: 		static uchar xdata PinLowCount2 = 0;
  357: 		static uchar xdata PinLowCount3 = 0;
  358: 		static uchar xdata PinLowCount4 = 0;
  359: 		static uchar xdata PinLowCount5 = 0;
  360: 		static uchar xdata PinLowCount6 = 0;
  361: 		static bit PinLow1   = 0;
  362: 		static bit PinLow2   = 0;
  363: 		static bit PinLow3   = 0;
  364: 		static bit PinLow4   = 0;
  365: 		static bit PinLow5   = 0;
  366: 		static bit PinLow6   = 0;
  367: 	    static bit PinPulse1 = 0;
  368: 	    static bit PinPulse2 = 0;
  369: 		static bit PinPulse3 = 0;
  370: 	    static bit PinPulse4 = 0;
  371: 	    static bit PinPulse5 = 0;
  372: 	  	static bit PinPulse6 = 0;
  373: 	  //static bit PowerOn1MinFlag = 0;
  374: 	    static uchar xdata CurrentChannel = 0; 
  375: 		uchar data CountIOState;
  376: 
  377: 		/*
  378: 	    if( (PowerOn1MinFlag == 0) && ( ColumnTestTimer != 0 ) )
  379: 		{
  380: 		    return;
  381: 		}
  382: 		else
  383: 	    {
  384: 		    PowerOn1MinFlag = 1;
  385: 		}
  386: 	    */
  387:         ScanSPCoin();  //Scan the single pulse interface coin acceptor...
80FA65 A51280FE2C        ECALL   ScanSPCoin
  388: 		ZhkHardIOInputSelect();
80FA6A 75900D            MOV     P1,#0DH
  389: 		_nop_();
80FA6D 00                NOP     
  390: 		_nop_();
80FA6E 00                NOP     
  391: 		_nop_();
80FA6F 00                NOP     
  392: 		CountIOState = P0;
80FA70 858046            MOV     CountIOState,P0
  393: 		ZhkHardSramSelect();
80FA73 759008            MOV     P1,#08H
  394: 	    if( !( CountIOState & 0x04 ) )
80FA76 E546              MOV     A,CountIOState
80FA78 20E208            JB      ACC.2,?C0031?IOINPUT
  395: 	    {
  396: 		    //CurrentChannel |= 0x01;
  397: 			CurrentChannel = 0x01;
80FA7B 902DD7            MOV     DPTR,#CurrentChannel
80FA7E 7401              MOV     A,#01H
80FA80 F0                MOVX    @DPTR,A
  398: 		}
80FA81 803F              SJMP    ?C0032?IOINPUT
80FA83         ?C0031?IOINPUT:
  399: 		else if( !( CountIOState & 0x08 ) )
80FA83 E546              MOV     A,CountIOState
80FA85 20E308            JB      ACC.3,?C0033?IOINPUT
  400: 		{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 637


  401: 		    CurrentChannel = 0x02;
80FA88 902DD7            MOV     DPTR,#CurrentChannel
80FA8B 7402              MOV     A,#02H
80FA8D F0                MOVX    @DPTR,A
  402: 		}
80FA8E 8032              SJMP    ?C0032?IOINPUT
80FA90         ?C0033?IOINPUT:
  403: 		else if( !( CountIOState & 0x10 ) )
80FA90 E546              MOV     A,CountIOState
80FA92 20E408            JB      ACC.4,?C0035?IOINPUT
  404: 		{
  405: 		    CurrentChannel = 0x04;
80FA95 902DD7            MOV     DPTR,#CurrentChannel
80FA98 7404              MOV     A,#04H
80FA9A F0                MOVX    @DPTR,A
  406: 		}
80FA9B 8025              SJMP    ?C0032?IOINPUT
80FA9D         ?C0035?IOINPUT:
  407: 		else if( !( CountIOState & 0x20 ) )
80FA9D E546              MOV     A,CountIOState
80FA9F 20E508            JB      ACC.5,?C0037?IOINPUT
  408: 		{
  409: 		    CurrentChannel = 0x08;
80FAA2 902DD7            MOV     DPTR,#CurrentChannel
80FAA5 7408              MOV     A,#08H
80FAA7 F0                MOVX    @DPTR,A
  410: 		}
80FAA8 8018              SJMP    ?C0032?IOINPUT
80FAAA         ?C0037?IOINPUT:
  411: 		else if( !( CountIOState & 0x40 ) )
80FAAA E546              MOV     A,CountIOState
80FAAC 20E608            JB      ACC.6,?C0039?IOINPUT
  412: 		{
  413: 		    CurrentChannel = 0x10;
80FAAF 902DD7            MOV     DPTR,#CurrentChannel
80FAB2 7410              MOV     A,#010H
80FAB4 F0                MOVX    @DPTR,A
  414: 		}
80FAB5 800B              SJMP    ?C0032?IOINPUT
80FAB7         ?C0039?IOINPUT:
  415: 		else if( !( CountIOState & 0x80 ) )
80FAB7 E546              MOV     A,CountIOState
80FAB9 20E706            JB      ACC.7,?C0032?IOINPUT
  416: 		{
  417: 	    	CurrentChannel = 0x20;
80FABC 902DD7            MOV     DPTR,#CurrentChannel
80FABF 7420              MOV     A,#020H
80FAC1 F0                MOVX    @DPTR,A
  418: 		}
80FAC2         ?C0032?IOINPUT:
  419: 		//******************************************************************
  420: 		//Chn1
  421: 		if( CurrentChannel & 0x01 )
80FAC2 902DD7            MOV     DPTR,#CurrentChannel
80FAC5 E0                MOVX    A,@DPTR
80FAC6 FF                MOV     R7,A
80FAC7 30E06E            JNB     ACC.0,?C0042?IOINPUT
  422: 		{
  423: 			if( HardIsCoinChn1In() )
80FACA E546              MOV     A,CountIOState
80FACC 20E227            JB      ACC.2,?C0043?IOINPUT
  424: 			{
  425: 				if ( PinLow1 )
80FACF 300B19            JNB     PinLow1,?C0044?IOINPUT
  426: 				{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 638


  427: 					if ( PinLowCount1 < 250 ) PinLowCount1 ++;
80FAD2 902DD1            MOV     DPTR,#PinLowCount1
80FAD5 E0                MOVX    A,@DPTR
80FAD6 C3                CLR     C
80FAD7 94FA              SUBB    A,#0FAH
80FAD9 5003              JNC     ?C0045?IOINPUT
80FADB E0                MOVX    A,@DPTR
80FADC 04                INC     A
80FADD F0                MOVX    @DPTR,A
80FADE         ?C0045?IOINPUT:
  428: 					if ( PinLowCount1 >= CoinTimes )  PinPulse1 = 1;
80FADE 902DD1            MOV     DPTR,#PinLowCount1
80FAE1 E0                MOVX    A,@DPTR
80FAE2 C3                CLR     C
80FAE3 9402              SUBB    A,#02H
80FAE5 403E              JC      ?C0048?IOINPUT
80FAE7 D211              SETB    PinPulse1
  429: 				}
80FAE9 803A              SJMP    ?C0048?IOINPUT
80FAEB         ?C0044?IOINPUT:
  430: 				else
  431: 				{
  432: 					PinLow1      = 1;
80FAEB D20B              SETB    PinLow1
  433: 					PinPulse1    = 0;
80FAED C211              CLR     PinPulse1
  434: 					PinLowCount1 = 0;
80FAEF E4                CLR     A
80FAF0 902DD1            MOV     DPTR,#PinLowCount1
80FAF3 F0                MOVX    @DPTR,A
  435: 				}
  436: 				
  437: 			}
80FAF4 802F              SJMP    ?C0048?IOINPUT
80FAF6         ?C0043?IOINPUT:
  438: 			else
  439: 			{
  440: 				if ( PinLow1 )
80FAF6 300B09            JNB     PinLow1,?C0049?IOINPUT
  441: 				{
  442: 					PinLowCount1 = 0;
80FAF9 E4                CLR     A
80FAFA 902DD1            MOV     DPTR,#PinLowCount1
80FAFD F0                MOVX    @DPTR,A
  443: 					PinLow1      = 0;
80FAFE C20B              CLR     PinLow1
  444: 				}	
80FB00 8023              SJMP    ?C0048?IOINPUT
80FB02         ?C0049?IOINPUT:
  445: 				else
  446: 				{
  447: 					PinLowCount1 ++;
80FB02 902DD1            MOV     DPTR,#PinLowCount1
80FB05 E0                MOVX    A,@DPTR
80FB06 04                INC     A
80FB07 F0                MOVX    @DPTR,A
  448: 					if ( PinLowCount1 >= CoinTimes && PinPulse1 )
80FB08 E0                MOVX    A,@DPTR
80FB09 C3                CLR     C
80FB0A 9402              SUBB    A,#02H
80FB0C 4017              JC      ?C0048?IOINPUT
80FB0E 301114            JNB     PinPulse1,?C0048?IOINPUT
  449: 					{
  450: 						ZhkCoiner.CountChn1 ++;
80FB11 902DDA            MOV     DPTR,#ZhkCoiner+02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 639


80FB14 E0                MOVX    A,@DPTR
80FB15 04                INC     A
80FB16 F0                MOVX    @DPTR,A
  451: 						PinPulse1 = 0;
80FB17 C211              CLR     PinPulse1
  452: 						PinLowCount1 = 0;
80FB19 E4                CLR     A
80FB1A 902DD1            MOV     DPTR,#PinLowCount1
80FB1D F0                MOVX    @DPTR,A
  453: 	                    CurrentChannel &= 0xfe;
80FB1E EF                MOV     A,R7
80FB1F 54FE              ANL     A,#0FEH
80FB21 902DD7            MOV     DPTR,#CurrentChannel
80FB24 F0                MOVX    @DPTR,A
  454: 					}
  455: 				}
  456: 			}
80FB25         ?C0048?IOINPUT:
  457: 			if ( PinLowCount1 >= 250 ) 
80FB25 902DD1            MOV     DPTR,#PinLowCount1
80FB28 E0                MOVX    A,@DPTR
80FB29 C3                CLR     C
80FB2A 94FA              SUBB    A,#0FAH
80FB2C 902DD8            MOV     DPTR,#ZhkCoiner
80FB2F E0                MOVX    A,@DPTR
80FB30 5003              JNC     $ + 5H
80FB32 02FD81            LJMP    ?C0144?IOINPUT
  458: 				ZhkCoiner.State |= 1 << 6;
80FB35 02FD7C            LJMP    ?C0143?IOINPUT
80FB38         ?C0042?IOINPUT:
  459: 			else
  460: 				ZhkCoiner.State &= ~( 1 << 6 );    
  461: 		}
  462: 		else if( CurrentChannel & 0x02 )
80FB38 902DD7            MOV     DPTR,#CurrentChannel
80FB3B E0                MOVX    A,@DPTR
80FB3C FF                MOV     R7,A
80FB3D 30E16E            JNB     ACC.1,?C0055?IOINPUT
  463: 		{
  464: 			if( HardIsCoinChn2In() )
80FB40 E546              MOV     A,CountIOState
80FB42 20E327            JB      ACC.3,?C0056?IOINPUT
  465: 			{
  466: 				if ( PinLow2 )
80FB45 300C19            JNB     PinLow2,?C0057?IOINPUT
  467: 				{
  468: 					if ( PinLowCount2 < 250 ) PinLowCount2 ++;
80FB48 902DD2            MOV     DPTR,#PinLowCount2
80FB4B E0                MOVX    A,@DPTR
80FB4C C3                CLR     C
80FB4D 94FA              SUBB    A,#0FAH
80FB4F 5003              JNC     ?C0058?IOINPUT
80FB51 E0                MOVX    A,@DPTR
80FB52 04                INC     A
80FB53 F0                MOVX    @DPTR,A
80FB54         ?C0058?IOINPUT:
  469: 					if ( PinLowCount2 >= CoinTimes )  PinPulse2 = 1;
80FB54 902DD2            MOV     DPTR,#PinLowCount2
80FB57 E0                MOVX    A,@DPTR
80FB58 C3                CLR     C
80FB59 9402              SUBB    A,#02H
80FB5B 403E              JC      ?C0061?IOINPUT
80FB5D D212              SETB    PinPulse2
  470: 				}
80FB5F 803A              SJMP    ?C0061?IOINPUT
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 640


80FB61         ?C0057?IOINPUT:
  471: 				else
  472: 				{
  473: 					PinLow2      = 1;
80FB61 D20C              SETB    PinLow2
  474: 					PinPulse2    = 0;
80FB63 C212              CLR     PinPulse2
  475: 					PinLowCount2 = 0;
80FB65 E4                CLR     A
80FB66 902DD2            MOV     DPTR,#PinLowCount2
80FB69 F0                MOVX    @DPTR,A
  476: 				}
  477: 				
  478: 			}
80FB6A 802F              SJMP    ?C0061?IOINPUT
80FB6C         ?C0056?IOINPUT:
  479: 			else
  480: 			{
  481: 				if ( PinLow2 )
80FB6C 300C09            JNB     PinLow2,?C0062?IOINPUT
  482: 				{
  483: 					PinLowCount2 = 0;
80FB6F E4                CLR     A
80FB70 902DD2            MOV     DPTR,#PinLowCount2
80FB73 F0                MOVX    @DPTR,A
  484: 					PinLow2      = 0;
80FB74 C20C              CLR     PinLow2
  485: 				}	
80FB76 8023              SJMP    ?C0061?IOINPUT
80FB78         ?C0062?IOINPUT:
  486: 				else
  487: 				{
  488: 					PinLowCount2 ++;
80FB78 902DD2            MOV     DPTR,#PinLowCount2
80FB7B E0                MOVX    A,@DPTR
80FB7C 04                INC     A
80FB7D F0                MOVX    @DPTR,A
  489: 					if ( PinLowCount2 >= CoinTimes && PinPulse2 )
80FB7E E0                MOVX    A,@DPTR
80FB7F C3                CLR     C
80FB80 9402              SUBB    A,#02H
80FB82 4017              JC      ?C0061?IOINPUT
80FB84 301214            JNB     PinPulse2,?C0061?IOINPUT
  490: 					{
  491: 						ZhkCoiner.CountChn2 ++;
80FB87 902DDB            MOV     DPTR,#ZhkCoiner+03H
80FB8A E0                MOVX    A,@DPTR
80FB8B 04                INC     A
80FB8C F0                MOVX    @DPTR,A
  492: 						PinPulse2 = 0;
80FB8D C212              CLR     PinPulse2
  493: 						PinLowCount2 = 0;
80FB8F E4                CLR     A
80FB90 902DD2            MOV     DPTR,#PinLowCount2
80FB93 F0                MOVX    @DPTR,A
  494: 	                    CurrentChannel &= 0xfd;
80FB94 EF                MOV     A,R7
80FB95 54FD              ANL     A,#0FDH
80FB97 902DD7            MOV     DPTR,#CurrentChannel
80FB9A F0                MOVX    @DPTR,A
  495: 					}
  496: 				}
  497: 			}
80FB9B         ?C0061?IOINPUT:
  498: 			if ( PinLowCount2 >= 250 ) 
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 641


80FB9B 902DD2            MOV     DPTR,#PinLowCount2
80FB9E E0                MOVX    A,@DPTR
80FB9F C3                CLR     C
80FBA0 94FA              SUBB    A,#0FAH
80FBA2 902DD8            MOV     DPTR,#ZhkCoiner
80FBA5 E0                MOVX    A,@DPTR
80FBA6 4003              JC      ?C0065?IOINPUT
  499: 				ZhkCoiner.State |= 1 << 6;
80FBA8         
80FBA8 02FD7C            LJMP    ?C0143?IOINPUT
80FBAB         ?C0065?IOINPUT:
  500: 			else
  501: 				ZhkCoiner.State &= ~( 1 << 6 );    
80FBAB         
  502: 		}
80FBAB 02FD81            LJMP    ?C0144?IOINPUT
80FBAE         ?C0055?IOINPUT:
  503: 	    else if( CurrentChannel & 0x04 )
80FBAE 902DD7            MOV     DPTR,#CurrentChannel
80FBB1 E0                MOVX    A,@DPTR
80FBB2 FF                MOV     R7,A
80FBB3 30E26E            JNB     ACC.2,?C0068?IOINPUT
  504: 		{
  505: 			if( HardIsCoinChn3In() )
80FBB6 E546              MOV     A,CountIOState
80FBB8 20E427            JB      ACC.4,?C0069?IOINPUT
  506: 			{
  507: 				if ( PinLow3 )
80FBBB 300D19            JNB     PinLow3,?C0070?IOINPUT
  508: 				{
  509: 					if ( PinLowCount3 < 250 ) PinLowCount3 ++;
80FBBE 902DD3            MOV     DPTR,#PinLowCount3
80FBC1 E0                MOVX    A,@DPTR
80FBC2 C3                CLR     C
80FBC3 94FA              SUBB    A,#0FAH
80FBC5 5003              JNC     ?C0071?IOINPUT
80FBC7 E0                MOVX    A,@DPTR
80FBC8 04                INC     A
80FBC9 F0                MOVX    @DPTR,A
80FBCA         ?C0071?IOINPUT:
  510: 					if ( PinLowCount3 >= CoinTimes )  PinPulse3 = 1;
80FBCA 902DD3            MOV     DPTR,#PinLowCount3
80FBCD E0                MOVX    A,@DPTR
80FBCE C3                CLR     C
80FBCF 9402              SUBB    A,#02H
80FBD1 403E              JC      ?C0074?IOINPUT
80FBD3 D213              SETB    PinPulse3
  511: 				}
80FBD5 803A              SJMP    ?C0074?IOINPUT
80FBD7         ?C0070?IOINPUT:
  512: 				else
  513: 				{
  514: 					PinLow3      = 1;
80FBD7 D20D              SETB    PinLow3
  515: 					PinPulse3    = 0;
80FBD9 C213              CLR     PinPulse3
  516: 					PinLowCount3 = 0;
80FBDB E4                CLR     A
80FBDC 902DD3            MOV     DPTR,#PinLowCount3
80FBDF F0                MOVX    @DPTR,A
  517: 				}
  518: 				
  519: 			}
80FBE0 802F              SJMP    ?C0074?IOINPUT
80FBE2         ?C0069?IOINPUT:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 642


  520: 			else
  521: 			{
  522: 				if ( PinLow3 )
80FBE2 300D09            JNB     PinLow3,?C0075?IOINPUT
  523: 				{
  524: 					PinLowCount3 = 0;
80FBE5 E4                CLR     A
80FBE6 902DD3            MOV     DPTR,#PinLowCount3
80FBE9 F0                MOVX    @DPTR,A
  525: 					PinLow3      = 0;
80FBEA C20D              CLR     PinLow3
  526: 				}	
80FBEC 8023              SJMP    ?C0074?IOINPUT
80FBEE         ?C0075?IOINPUT:
  527: 				else
  528: 				{
  529: 					PinLowCount3 ++;
80FBEE 902DD3            MOV     DPTR,#PinLowCount3
80FBF1 E0                MOVX    A,@DPTR
80FBF2 04                INC     A
80FBF3 F0                MOVX    @DPTR,A
  530: 					if ( PinLowCount3 >= CoinTimes && PinPulse3 )
80FBF4 E0                MOVX    A,@DPTR
80FBF5 C3                CLR     C
80FBF6 9402              SUBB    A,#02H
80FBF8 4017              JC      ?C0074?IOINPUT
80FBFA 301314            JNB     PinPulse3,?C0074?IOINPUT
  531: 					{
  532: 						ZhkCoiner.CountChn3 ++;
80FBFD 902DDC            MOV     DPTR,#ZhkCoiner+04H
80FC00 E0                MOVX    A,@DPTR
80FC01 04                INC     A
80FC02 F0                MOVX    @DPTR,A
  533: 						PinPulse3 = 0;
80FC03 C213              CLR     PinPulse3
  534: 						PinLowCount3 = 0;
80FC05 E4                CLR     A
80FC06 902DD3            MOV     DPTR,#PinLowCount3
80FC09 F0                MOVX    @DPTR,A
  535: 	                    CurrentChannel &= 0xfb;
80FC0A EF                MOV     A,R7
80FC0B 54FB              ANL     A,#0FBH
80FC0D 902DD7            MOV     DPTR,#CurrentChannel
80FC10 F0                MOVX    @DPTR,A
  536: 					}
  537: 				}
  538: 			}
80FC11         ?C0074?IOINPUT:
  539: 			if ( PinLowCount3 >= 250 ) 
80FC11 902DD3            MOV     DPTR,#PinLowCount3
80FC14 E0                MOVX    A,@DPTR
80FC15 C3                CLR     C
80FC16 94FA              SUBB    A,#0FAH
80FC18 902DD8            MOV     DPTR,#ZhkCoiner
80FC1B E0                MOVX    A,@DPTR
80FC1C 4003              JC      ?C0078?IOINPUT
  540: 				ZhkCoiner.State |= 1 << 6;
80FC1E         
80FC1E 02FD7C            LJMP    ?C0143?IOINPUT
80FC21         ?C0078?IOINPUT:
  541: 			else
  542: 				ZhkCoiner.State &= ~( 1 << 6 );    
80FC21         
  543: 		}
80FC21 02FD81            LJMP    ?C0144?IOINPUT
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 643


80FC24         ?C0068?IOINPUT:
  544: 	    else if( CurrentChannel & 0x08 )
80FC24 902DD7            MOV     DPTR,#CurrentChannel
80FC27 E0                MOVX    A,@DPTR
80FC28 FF                MOV     R7,A
80FC29 30E36E            JNB     ACC.3,?C0081?IOINPUT
  545: 		{
  546: 			if( HardIsCoinChn4In() )
80FC2C E546              MOV     A,CountIOState
80FC2E 20E527            JB      ACC.5,?C0082?IOINPUT
  547: 			{
  548: 				if ( PinLow4 )
80FC31 300E19            JNB     PinLow4,?C0083?IOINPUT
  549: 				{
  550: 					if ( PinLowCount4 < 250 ) PinLowCount4 ++;
80FC34 902DD4            MOV     DPTR,#PinLowCount4
80FC37 E0                MOVX    A,@DPTR
80FC38 C3                CLR     C
80FC39 94FA              SUBB    A,#0FAH
80FC3B 5003              JNC     ?C0084?IOINPUT
80FC3D E0                MOVX    A,@DPTR
80FC3E 04                INC     A
80FC3F F0                MOVX    @DPTR,A
80FC40         ?C0084?IOINPUT:
  551: 					if ( PinLowCount4 >= CoinTimes )  PinPulse4 = 1;
80FC40 902DD4            MOV     DPTR,#PinLowCount4
80FC43 E0                MOVX    A,@DPTR
80FC44 C3                CLR     C
80FC45 9402              SUBB    A,#02H
80FC47 403E              JC      ?C0087?IOINPUT
80FC49 D214              SETB    PinPulse4
  552: 				}
80FC4B 803A              SJMP    ?C0087?IOINPUT
80FC4D         ?C0083?IOINPUT:
  553: 				else
  554: 				{
  555: 					PinLow4      = 1;
80FC4D D20E              SETB    PinLow4
  556: 					PinPulse4    = 0;
80FC4F C214              CLR     PinPulse4
  557: 					PinLowCount4 = 0;
80FC51 E4                CLR     A
80FC52 902DD4            MOV     DPTR,#PinLowCount4
80FC55 F0                MOVX    @DPTR,A
  558: 				}
  559: 				
  560: 			}
80FC56 802F              SJMP    ?C0087?IOINPUT
80FC58         ?C0082?IOINPUT:
  561: 			else
  562: 			{
  563: 				if ( PinLow4 )
80FC58 300E09            JNB     PinLow4,?C0088?IOINPUT
  564: 				{
  565: 					PinLowCount4 = 0;
80FC5B E4                CLR     A
80FC5C 902DD4            MOV     DPTR,#PinLowCount4
80FC5F F0                MOVX    @DPTR,A
  566: 					PinLow4      = 0;
80FC60 C20E              CLR     PinLow4
  567: 				}	
80FC62 8023              SJMP    ?C0087?IOINPUT
80FC64         ?C0088?IOINPUT:
  568: 				else
  569: 				{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 644


  570: 					PinLowCount4 ++;
80FC64 902DD4            MOV     DPTR,#PinLowCount4
80FC67 E0                MOVX    A,@DPTR
80FC68 04                INC     A
80FC69 F0                MOVX    @DPTR,A
  571: 					if ( PinLowCount4 >= CoinTimes && PinPulse4 )
80FC6A E0                MOVX    A,@DPTR
80FC6B C3                CLR     C
80FC6C 9402              SUBB    A,#02H
80FC6E 4017              JC      ?C0087?IOINPUT
80FC70 301414            JNB     PinPulse4,?C0087?IOINPUT
  572: 					{
  573: 						ZhkCoiner.CountChn4 ++;
80FC73 902DDD            MOV     DPTR,#ZhkCoiner+05H
80FC76 E0                MOVX    A,@DPTR
80FC77 04                INC     A
80FC78 F0                MOVX    @DPTR,A
  574: 						PinPulse4 = 0;
80FC79 C214              CLR     PinPulse4
  575: 						PinLowCount4 = 0;
80FC7B E4                CLR     A
80FC7C 902DD4            MOV     DPTR,#PinLowCount4
80FC7F F0                MOVX    @DPTR,A
  576: 	                    CurrentChannel &= 0xf7;
80FC80 EF                MOV     A,R7
80FC81 54F7              ANL     A,#0F7H
80FC83 902DD7            MOV     DPTR,#CurrentChannel
80FC86 F0                MOVX    @DPTR,A
  577: 					}
  578: 				}
  579: 			}
80FC87         ?C0087?IOINPUT:
  580: 			if ( PinLowCount4 >= 250 ) 
80FC87 902DD4            MOV     DPTR,#PinLowCount4
80FC8A E0                MOVX    A,@DPTR
80FC8B C3                CLR     C
80FC8C 94FA              SUBB    A,#0FAH
80FC8E 902DD8            MOV     DPTR,#ZhkCoiner
80FC91 E0                MOVX    A,@DPTR
80FC92 4003              JC      ?C0091?IOINPUT
  581: 				ZhkCoiner.State |= 1 << 6;
80FC94         
80FC94 02FD7C            LJMP    ?C0143?IOINPUT
80FC97         ?C0091?IOINPUT:
  582: 			else
  583: 				ZhkCoiner.State &= ~( 1 << 6 );    
80FC97         
  584: 		}
80FC97 02FD81            LJMP    ?C0144?IOINPUT
80FC9A         ?C0081?IOINPUT:
  585: 	    else if( CurrentChannel & 0x10 )
80FC9A 902DD7            MOV     DPTR,#CurrentChannel
80FC9D E0                MOVX    A,@DPTR
80FC9E FF                MOV     R7,A
80FC9F 30E46C            JNB     ACC.4,?C0094?IOINPUT
  586: 		{
  587: 			if( HardIsCoinChn5In() )
80FCA2 E546              MOV     A,CountIOState
80FCA4 20E627            JB      ACC.6,?C0095?IOINPUT
  588: 			{
  589: 				if ( PinLow5 )
80FCA7 300F19            JNB     PinLow5,?C0096?IOINPUT
  590: 				{
  591: 					if ( PinLowCount5 < 250 ) PinLowCount5 ++;
80FCAA 902DD5            MOV     DPTR,#PinLowCount5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 645


80FCAD E0                MOVX    A,@DPTR
80FCAE C3                CLR     C
80FCAF 94FA              SUBB    A,#0FAH
80FCB1 5003              JNC     ?C0097?IOINPUT
80FCB3 E0                MOVX    A,@DPTR
80FCB4 04                INC     A
80FCB5 F0                MOVX    @DPTR,A
80FCB6         ?C0097?IOINPUT:
  592: 					if ( PinLowCount5 >= CoinTimes )  PinPulse5 = 1;
80FCB6 902DD5            MOV     DPTR,#PinLowCount5
80FCB9 E0                MOVX    A,@DPTR
80FCBA C3                CLR     C
80FCBB 9402              SUBB    A,#02H
80FCBD 403E              JC      ?C0100?IOINPUT
80FCBF D215              SETB    PinPulse5
  593: 				}
80FCC1 803A              SJMP    ?C0100?IOINPUT
80FCC3         ?C0096?IOINPUT:
  594: 				else
  595: 				{
  596: 					PinLow5      = 1;
80FCC3 D20F              SETB    PinLow5
  597: 					PinPulse5    = 0;
80FCC5 C215              CLR     PinPulse5
  598: 					PinLowCount5 = 0;
80FCC7 E4                CLR     A
80FCC8 902DD5            MOV     DPTR,#PinLowCount5
80FCCB F0                MOVX    @DPTR,A
  599: 				}
  600: 				
  601: 			}
80FCCC 802F              SJMP    ?C0100?IOINPUT
80FCCE         ?C0095?IOINPUT:
  602: 			else
  603: 			{
  604: 				if ( PinLow5 )
80FCCE 300F09            JNB     PinLow5,?C0101?IOINPUT
  605: 				{
  606: 					PinLowCount5 = 0;
80FCD1 E4                CLR     A
80FCD2 902DD5            MOV     DPTR,#PinLowCount5
80FCD5 F0                MOVX    @DPTR,A
  607: 					PinLow5      = 0;
80FCD6 C20F              CLR     PinLow5
  608: 				}	
80FCD8 8023              SJMP    ?C0100?IOINPUT
80FCDA         ?C0101?IOINPUT:
  609: 				else
  610: 				{
  611: 					PinLowCount5 ++;
80FCDA 902DD5            MOV     DPTR,#PinLowCount5
80FCDD E0                MOVX    A,@DPTR
80FCDE 04                INC     A
80FCDF F0                MOVX    @DPTR,A
  612: 					if ( PinLowCount5 >= CoinTimes && PinPulse5 )
80FCE0 E0                MOVX    A,@DPTR
80FCE1 C3                CLR     C
80FCE2 9402              SUBB    A,#02H
80FCE4 4017              JC      ?C0100?IOINPUT
80FCE6 301514            JNB     PinPulse5,?C0100?IOINPUT
  613: 					{
  614: 						ZhkCoiner.CountChn5 ++;
80FCE9 902DDE            MOV     DPTR,#ZhkCoiner+06H
80FCEC E0                MOVX    A,@DPTR
80FCED 04                INC     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 646


80FCEE F0                MOVX    @DPTR,A
  615: 						PinPulse5 = 0;
80FCEF C215              CLR     PinPulse5
  616: 						PinLowCount5 = 0;
80FCF1 E4                CLR     A
80FCF2 902DD5            MOV     DPTR,#PinLowCount5
80FCF5 F0                MOVX    @DPTR,A
  617: 	                    CurrentChannel &= 0xef;
80FCF6 EF                MOV     A,R7
80FCF7 54EF              ANL     A,#0EFH
80FCF9 902DD7            MOV     DPTR,#CurrentChannel
80FCFC F0                MOVX    @DPTR,A
  618: 					}
  619: 				}
  620: 			}
80FCFD         ?C0100?IOINPUT:
  621: 			if ( PinLowCount5 >= 250 ) 
80FCFD 902DD5            MOV     DPTR,#PinLowCount5
80FD00 E0                MOVX    A,@DPTR
80FD01 C3                CLR     C
80FD02 94FA              SUBB    A,#0FAH
80FD04 902DD8            MOV     DPTR,#ZhkCoiner
80FD07 E0                MOVX    A,@DPTR
80FD08 4002              JC      ?C0104?IOINPUT
  622: 				ZhkCoiner.State |= 1 << 6;
80FD0A         
80FD0A 8070              SJMP    ?C0143?IOINPUT
80FD0C         ?C0104?IOINPUT:
  623: 			else
  624: 				ZhkCoiner.State &= ~( 1 << 6 );    
80FD0C         
  625: 		}
80FD0C 8073              SJMP    ?C0144?IOINPUT
80FD0E         ?C0094?IOINPUT:
  626: 		else if( CurrentChannel & 0x20 )
80FD0E 902DD7            MOV     DPTR,#CurrentChannel
80FD11 E0                MOVX    A,@DPTR
80FD12 FF                MOV     R7,A
80FD13 30E56E            JNB     ACC.5,?C0119?IOINPUT
  627: 		{
  628: 			if( HardIsCoinChn6In() )
80FD16 E546              MOV     A,CountIOState
80FD18 20E727            JB      ACC.7,?C0108?IOINPUT
  629: 			{
  630: 				if ( PinLow6 )
80FD1B 301019            JNB     PinLow6,?C0109?IOINPUT
  631: 				{
  632: 					if ( PinLowCount6 < 250 ) PinLowCount6 ++;
80FD1E 902DD6            MOV     DPTR,#PinLowCount6
80FD21 E0                MOVX    A,@DPTR
80FD22 C3                CLR     C
80FD23 94FA              SUBB    A,#0FAH
80FD25 5003              JNC     ?C0110?IOINPUT
80FD27 E0                MOVX    A,@DPTR
80FD28 04                INC     A
80FD29 F0                MOVX    @DPTR,A
80FD2A         ?C0110?IOINPUT:
  633: 					if ( PinLowCount6 >= CoinTimes )  PinPulse6 = 1;
80FD2A 902DD6            MOV     DPTR,#PinLowCount6
80FD2D E0                MOVX    A,@DPTR
80FD2E C3                CLR     C
80FD2F 9402              SUBB    A,#02H
80FD31 403C              JC      ?C0113?IOINPUT
80FD33 D216              SETB    PinPulse6
  634: 				}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 647


80FD35 8038              SJMP    ?C0113?IOINPUT
80FD37         ?C0109?IOINPUT:
  635: 				else
  636: 				{
  637: 					PinLow6      = 1;
80FD37 D210              SETB    PinLow6
  638: 					PinPulse6    = 0;
80FD39 C216              CLR     PinPulse6
  639: 					PinLowCount6 = 0;
80FD3B E4                CLR     A
80FD3C 902DD6            MOV     DPTR,#PinLowCount6
80FD3F F0                MOVX    @DPTR,A
  640: 				}
  641: 				
  642: 			}
80FD40 802D              SJMP    ?C0113?IOINPUT
80FD42         ?C0108?IOINPUT:
  643: 			else
  644: 			{
  645: 				if ( PinLow6 )
80FD42 301009            JNB     PinLow6,?C0114?IOINPUT
  646: 				{
  647: 					PinLowCount6 = 0;
80FD45 E4                CLR     A
80FD46 902DD6            MOV     DPTR,#PinLowCount6
80FD49 F0                MOVX    @DPTR,A
  648: 					PinLow6      = 0;
80FD4A C210              CLR     PinLow6
  649: 				}	
80FD4C 8021              SJMP    ?C0113?IOINPUT
80FD4E         ?C0114?IOINPUT:
  650: 				else
  651: 				{
  652: 					PinLowCount6 ++;
80FD4E 902DD6            MOV     DPTR,#PinLowCount6
80FD51 E0                MOVX    A,@DPTR
80FD52 04                INC     A
80FD53 F0                MOVX    @DPTR,A
  653: 					if ( PinLowCount6 >= CoinTimes && PinPulse6 )
80FD54 E0                MOVX    A,@DPTR
80FD55 C3                CLR     C
80FD56 9402              SUBB    A,#02H
80FD58 4015              JC      ?C0113?IOINPUT
80FD5A 301612            JNB     PinPulse6,?C0113?IOINPUT
  654: 					{
  655: 						ZhkCoiner.CountChn6 ++;
80FD5D 902DDF            MOV     DPTR,#ZhkCoiner+07H
80FD60 E0                MOVX    A,@DPTR
80FD61 04                INC     A
80FD62 F0                MOVX    @DPTR,A
  656: 						PinPulse6 = 0;
80FD63 C216              CLR     PinPulse6
  657: 						PinLowCount6 = 0;
80FD65 E4                CLR     A
80FD66 902DD6            MOV     DPTR,#PinLowCount6
80FD69 F0                MOVX    @DPTR,A
  658: 	                    CurrentChannel &= 0xdf;
80FD6A EF                MOV     A,R7
80FD6B 54DF              ANL     A,#0DFH
80FD6D A3                INC     DPTR
80FD6E F0                MOVX    @DPTR,A
  659: 					}
  660: 				}
  661: 			}
80FD6F         ?C0113?IOINPUT:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 648


  662: 			if ( PinLowCount6 >= 250 ) 
80FD6F 902DD6            MOV     DPTR,#PinLowCount6
80FD72 E0                MOVX    A,@DPTR
80FD73 C3                CLR     C
80FD74 94FA              SUBB    A,#0FAH
80FD76 902DD8            MOV     DPTR,#ZhkCoiner
80FD79 E0                MOVX    A,@DPTR
80FD7A 4005              JC      ?C0117?IOINPUT
  663: 				ZhkCoiner.State |= 1 << 6;
80FD7C         
80FD7C 4440              ORL     A,#040H
80FD7E F0                MOVX    @DPTR,A
80FD7F 8003              SJMP    ?C0119?IOINPUT
80FD81         ?C0117?IOINPUT:
  664: 			else
  665: 				ZhkCoiner.State &= ~( 1 << 6 );    
80FD81         
80FD81 54BF              ANL     A,#0BFH
80FD83 F0                MOVX    @DPTR,A
  666: 		}	    
  667: 	}
80FD84         ?C0119?IOINPUT:
80FD84 D0D0              POP     PSW
80FD86 A522              ERET    
----- FUNCTION ZyzChkCoinChnSta (END) -------


----- FUNCTION ZhkHardBuzzerOff (BEGIN) -----
 FILE: 'device.c'
   42: void ZhkHardBuzzerOff( void )
   43: {
   44: 	ZhkHardSramSelect();
   45: 	EA = 0;
80FD88 759008            MOV     P1,#08H
   46: 	ZhkHardIOOutputReg |= BitBuzzer;
80FD8B C2AF              CLR     EA
   47: 	ZhkHardNullSelect();
80FD8D 434E08            ORL     ZhkHardIOOutputReg,#08H
   48: 	P0 = ZhkHardIOOutputReg;
80FD90 759004            MOV     P1,#04H
   49: 	ZhkHardIOOutputSelect();
80FD93 854E80            MOV     P0,ZhkHardIOOutputReg
   50: 	ZhkHardOutputLock();
80FD96 759014            MOV     P1,#014H
   51: 	EA = 1;
80FD99 759008            MOV     P1,#08H
   52: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
80FD9C D2AF              SETB    EA
   53: //	Trace( "P0State=%bxH\n" , P0State );
   54: }
80FD9E A522              ERET    
----- FUNCTION ZhkHardBuzzerOff (END) -------


----- FUNCTION ZhkIOInputIsr (BEGIN) -----
 FILE: 'IOInput.c'
   72: void ZhkIOInputIsr( void ) using 1
   73: {
   74: 	#define HardIsPowerOff()     !( IOState & BitPowerOff )
   75: 	#define HardIsModeSwitchOn() !( IOState & BitModeSw )
   76: 	#define HardIsAlertOn()      !( IOState & BitAlert )
   77: 	
   78: //	static uchar xdata ModeSwitchTimer,PowerTimer,ShakeAlarmTimer;
   79: //	static bit ModeTemp,PowerTemp,ShakeAlarmFlag;
   80: 	static uchar xdata ModeSwitchTimer;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 649


   81: 	static bit ModeTemp;
   82: 
   83: 	uchar data IOState;
   84: 	
   85: 	
   86: 	ZhkHardIOInputSelect();
80FDA0 75900D            MOV     P1,#0DH
   87: 	_nop_();
80FDA3 00                NOP     
   88: 	_nop_();
80FDA4 00                NOP     
   89: 	_nop_();
80FDA5 00                NOP     
   90: 	IOState = P0;
80FDA6 858046            MOV     IOState,P0
   91: 	ZhkHardSramSelect();	
80FDA9 759008            MOV     P1,#08H
   92: 	
   93: 	// 掉电检测 	
   94: /*	if ( HardIsPowerOff() )
   95: 	{
   96: 		if ( PowerTemp )
   97: 		{
   98: 			if ( PowerTimer ) 
   99: 				PowerTimer --;
  100: 			else
  101: 				ZhkPowerState = 1;
  102: 		}
  103: 		else
  104: 		{
  105: 			PowerTemp  = 1;
  106: 			PowerTimer = 10;
  107: 		}
  108: 	}
  109: 	else
  110: 	{
  111: 		ZhkPowerState  = 0;
  112: 		PowerTemp      = 0;
  113: 	}*/
  114: 	// 模式开关检测
  115: 	if ( HardIsModeSwitchOn() )
80FDAC E546              MOV     A,IOState
80FDAE 20E01F            JB      ACC.0,?C0008?IOINPUT
  116: 	{
  117: 		if ( ModeTemp )
80FDB1 300812            JNB     ModeTemp,?C0009?IOINPUT
  118: 		{
  119: 			if ( ModeSwitchTimer )
80FDB4 902DCF            MOV     DPTR,#ModeSwitchTimer
80FDB7 E0                MOVX    A,@DPTR
80FDB8 6004              JZ      ?C0010?IOINPUT
  120: 				ModeSwitchTimer --;
80FDBA 14                DEC     A
80FDBB F0                MOVX    @DPTR,A
80FDBC 8019              SJMP    ?C0014?IOINPUT
80FDBE         ?C0010?IOINPUT:
  121: 			else
  122: 				ZhkModeState = 1;
80FDBE 902DEE            MOV     DPTR,#ZhkModeState
80FDC1 7401              MOV     A,#01H
80FDC3 F0                MOVX    @DPTR,A
  123: 		}
80FDC4 8011              SJMP    ?C0014?IOINPUT
80FDC6         ?C0009?IOINPUT:
  124: 		else
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 650


  125: 		{
  126: 			ModeTemp = 1;
80FDC6 D208              SETB    ModeTemp
  127: 			ModeSwitchTimer = 10;
80FDC8 902DCF            MOV     DPTR,#ModeSwitchTimer
80FDCB 740A              MOV     A,#0AH
80FDCD F0                MOVX    @DPTR,A
  128: 		}
  129: 	}
80FDCE 8007              SJMP    ?C0014?IOINPUT
80FDD0         ?C0008?IOINPUT:
  130: 	else
  131: 	{
  132: 		ZhkModeState = 0;
80FDD0 E4                CLR     A
80FDD1 902DEE            MOV     DPTR,#ZhkModeState
80FDD4 F0                MOVX    @DPTR,A
  133: 		ModeTemp     = 0;
80FDD5 C208              CLR     ModeTemp
  134: 	}
  135: 
  136: 	// 震动信号检测
  137:  /*   if ( HardAlarmCheck() )
  138: 	{
  139: 		if ( ShakeAlarmFlag )
  140: 		{
  141: 			if ( ShakeAlarmTimer )
  142: 				ShakeAlarmTimer --;
  143: 			else
  144: 				HardShakeAlarmState = 1;
  145: 		}
  146: 		else
  147: 		{
  148: 			ShakeAlarmFlag = 1;
  149: 			ShakeAlarmTimer = 1;      //10, 1,
  150: 		}
  151: 	}
  152: 	else
  153: 	{
  154: 		HardShakeAlarmState = 0;
  155: 		ShakeAlarmFlag = 0;
  156: 	}*/
  157: }
80FDD7         ?C0014?IOINPUT:
80FDD7 A522              ERET    
----- FUNCTION ZhkIOInputIsr (END) -------


----- FUNCTION ZhkKeyScanIsr (BEGIN) -----
 FILE: 'key.c'
   97: void ZhkKeyScanIsr( void ) using 1
80FDD9 C0D0              PUSH    PSW
80FDDB 75D008            MOV     PSW,#08H
   98: {
   99: 	static uchar data KeyValue,KeyDownTime;
  100: 	static bit NewKey;
  101: 	uchar data key;
  102: 
  103: 	key = ScanfKeyFun();
80FDDE A5128076E1        ECALL   ScanfKeyFun
80FDE3 8F46              MOV     key,R7
  104: 	if ( KeyValue != key )
80FDE5 E549              MOV     A,KeyValue
80FDE7 6546              XRL     A,key
80FDE9 600A              JZ      ?C0016?KEY
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 651


  105: 	{
  106: 		KeyValue    = key;
80FDEB 854649            MOV     KeyValue,key
  107: 		KeyDownTime = 0;
80FDEE E4                CLR     A
80FDEF F54A              MOV     KeyDownTime,A
  108: 		NewKey      = 0;
80FDF1 C22F              CLR     NewKey
  109: 	}
80FDF3 8033              SJMP    ?C0022?KEY
80FDF5         ?C0016?KEY:
  110: 	else if ( key != KEY_NULL )
80FDF5 E546              MOV     A,key
80FDF7 F4                CPL     A
80FDF8 602E              JZ      ?C0022?KEY
  111: 	{
  112: 		KeyDownTime ++;
80FDFA 054A              INC     KeyDownTime
  113: 		if ( KeyDownTime % 8 == 2 ) 
80FDFC E54A              MOV     A,KeyDownTime
80FDFE 5407              ANL     A,#07H
80FE00 FF                MOV     R7,A
80FE01 BF0224            CJNE    R7,#02H,?C0022?KEY
  114: 		{
  115: 			NewKey = 1;
80FE04 D22F              SETB    NewKey
  116: 			if ( ZhkKeyBufPtr >= sizeof( ZhkKeyBuf ) )
80FE06 902DF5            MOV     DPTR,#ZhkKeyBufPtr
80FE09 E0                MOVX    A,@DPTR
80FE0A C3                CLR     C
80FE0B 9401              SUBB    A,#01H
80FE0D 4005              JC      ?C0020?KEY
  117: 				ZhkKeyBufPtr = sizeof( ZhkKeyBuf );
80FE0F 7401              MOV     A,#01H
80FE11 F0                MOVX    @DPTR,A
80FE12 8014              SJMP    ?C0022?KEY
80FE14         ?C0020?KEY:
  118: 			else
  119: 				ZhkKeyBuf[ ZhkKeyBufPtr ++ ] = KeyValue;
80FE14 902DF5            MOV     DPTR,#ZhkKeyBufPtr
80FE17 E0                MOVX    A,@DPTR
80FE18 FF                MOV     R7,A
80FE19 04                INC     A
80FE1A F0                MOVX    @DPTR,A
80FE1B 74F6              MOV     A,#LOW ZhkKeyBuf
80FE1D 2F                ADD     A,R7
80FE1E F582              MOV     DPL,A
80FE20 E4                CLR     A
80FE21 342D              ADDC    A,#HIGH ZhkKeyBuf
80FE23 F583              MOV     DPH,A
80FE25 E549              MOV     A,KeyValue
80FE27 F0                MOVX    @DPTR,A
  120: 		}
  121: 	}
  122: 	
  123: }
80FE28         ?C0022?KEY:
80FE28 D0D0              POP     PSW
80FE2A A522              ERET    
----- FUNCTION ZhkKeyScanIsr (END) -------


----- FUNCTION ScanSPCoin (BEGIN) -----
 FILE: 'IOInput.c'
  301: 	void ScanSPCoin( void )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 652


  302: 	{
  303: 		static uchar xdata PinLowCount;
  304: 		static bit PinLow,PinPulse;
  305: 		if( HardIsCoinIn() )
80FE2C 20B320            JB      PinCoinIn,?C0019?IOINPUT
  306: 		{
  307: 			if ( PinLow )
80FE2F 300919            JNB     PinLow,?C0020?IOINPUT
  308: 			{
  309: 				if ( PinLowCount < 250 ) PinLowCount ++;
80FE32 902DD0            MOV     DPTR,#PinLowCount
80FE35 E0                MOVX    A,@DPTR
80FE36 C3                CLR     C
80FE37 94FA              SUBB    A,#0FAH
80FE39 5003              JNC     ?C0021?IOINPUT
80FE3B E0                MOVX    A,@DPTR
80FE3C 04                INC     A
80FE3D F0                MOVX    @DPTR,A
80FE3E         ?C0021?IOINPUT:
  310: 				if ( PinLowCount >= 3 ) PinPulse = 1;
80FE3E 902DD0            MOV     DPTR,#PinLowCount
80FE41 E0                MOVX    A,@DPTR
80FE42 C3                CLR     C
80FE43 9403              SUBB    A,#03H
80FE45 4030              JC      ?C0024?IOINPUT
80FE47 D20A              SETB    PinPulse
  311: 			}
80FE49 802C              SJMP    ?C0024?IOINPUT
80FE4B         ?C0020?IOINPUT:
  312: 			else
  313: 			{
  314: 				PinLow   = 1;
80FE4B D209              SETB    PinLow
  315: 				PinPulse = 0;
  316: 				PinLowCount = 0;
  317: 			}
  318: 			
  319: 		}
80FE4D 8021              SJMP    ?C0134?IOINPUT
80FE4F         ?C0019?IOINPUT:
  320: 		else
  321: 		{
  322: 			if ( PinLow )
80FE4F 300909            JNB     PinLow,?C0025?IOINPUT
  323: 			{
  324: 				PinLowCount = 0;
80FE52 E4                CLR     A
80FE53 902DD0            MOV     DPTR,#PinLowCount
80FE56 F0                MOVX    @DPTR,A
  325: 				PinLow      = 0;
80FE57 C209              CLR     PinLow
  326: 			}	
80FE59 801C              SJMP    ?C0024?IOINPUT
80FE5B         ?C0025?IOINPUT:
  327: 			else
  328: 			{
  329: 				PinLowCount ++;
80FE5B 902DD0            MOV     DPTR,#PinLowCount
80FE5E E0                MOVX    A,@DPTR
80FE5F 04                INC     A
80FE60 F0                MOVX    @DPTR,A
  330: 				if ( PinLowCount >= 3 && PinPulse )
80FE61 E0                MOVX    A,@DPTR
80FE62 C3                CLR     C
80FE63 9403              SUBB    A,#03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 653


80FE65 4010              JC      ?C0024?IOINPUT
80FE67 300A0D            JNB     PinPulse,?C0024?IOINPUT
  331: 				{
  332: 					ZhkCoiner.Count ++;
80FE6A 902DD9            MOV     DPTR,#ZhkCoiner+01H
80FE6D E0                MOVX    A,@DPTR
80FE6E 04                INC     A
80FE6F F0                MOVX    @DPTR,A
  333: 					PinPulse = 0;
80FE70         
80FE70 C20A              CLR     PinPulse
  334: 					PinLowCount = 0;
80FE72 E4                CLR     A
80FE73 902DD0            MOV     DPTR,#PinLowCount
80FE76 F0                MOVX    @DPTR,A
  335: 				}
  336: 			}
  337: 		}
80FE77         ?C0024?IOINPUT:
  338: 		if ( PinLowCount >= 250 ) 
80FE77 902DD0            MOV     DPTR,#PinLowCount
80FE7A E0                MOVX    A,@DPTR
80FE7B C3                CLR     C
80FE7C 94FA              SUBB    A,#0FAH
80FE7E 902DD8            MOV     DPTR,#ZhkCoiner
80FE81 E0                MOVX    A,@DPTR
80FE82 4005              JC      ?C0028?IOINPUT
  339: 			ZhkCoiner.State |= 1 << 6;
80FE84 4440              ORL     A,#040H
80FE86 F0                MOVX    @DPTR,A
80FE87 8003              SJMP    ?C0030?IOINPUT
80FE89         ?C0028?IOINPUT:
  340: 		else
  341: 			ZhkCoiner.State &= ~( 1 << 6 );
80FE89 54BF              ANL     A,#0BFH
80FE8B F0                MOVX    @DPTR,A
  342: 	}
80FE8C         ?C0030?IOINPUT:
80FE8C A522              ERET    
----- FUNCTION ScanSPCoin (END) -------


----- FUNCTION SchedulerInit (BEGIN) -----
 FILE: 'scheduler.c'
  111: uchar SchedulerInit( void )
  112: {
  113: 	uchar data i;
  114: 
  115: 	Hopper1.Id            = ID_HOPPER1;
80FE8E E4                CLR     A
80FE8F 90237E            MOV     DPTR,#Hopper1
80FE92 F0                MOVX    @DPTR,A
  116: 	Hopper1.Sn            = 0;
80FE93 A3                INC     DPTR
80FE94 F0                MOVX    @DPTR,A
  117: 	Hopper1.CommState     = 0;
80FE95 A3                INC     DPTR
80FE96 F0                MOVX    @DPTR,A
  118: 	Hopper1.State         = 0;
80FE97 A3                INC     DPTR
80FE98 F0                MOVX    @DPTR,A
  119: 	memset( Hopper1.ExtState, 0, sizeof( Hopper1.ExtState ) );
80FE99 FE                MOV     R6,A
80FE9A 7F11              MOV     R7,#011H
80FE9C FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 654


80FE9D 7B00              MOV     R3,#?C?XDATASEG
80FE9F 7A23              MOV     R2,#HIGH Hopper1+04H
80FEA1 7982              MOV     R1,#LOW Hopper1+04H
80FEA3 A5128008A6        ECALL   ?C?MEMSET
  120: //	Hopper1.ExtState[ 0 ] = 0;
  121: //	Hopper1.ExtState[ 1 ] = 0;
  122: 
  123: 	Hopper2.Id            = ID_HOPPER2;
80FEA8 902393            MOV     DPTR,#Hopper2
80FEAB 7401              MOV     A,#01H
80FEAD F0                MOVX    @DPTR,A
  124: 	Hopper2.Sn            = 0;
80FEAE E4                CLR     A
80FEAF A3                INC     DPTR
80FEB0 F0                MOVX    @DPTR,A
  125: 	Hopper2.CommState     = 0;
80FEB1 A3                INC     DPTR
80FEB2 F0                MOVX    @DPTR,A
  126: 	Hopper2.State         = 0;
80FEB3 A3                INC     DPTR
80FEB4 F0                MOVX    @DPTR,A
  127: 	memset( Hopper2.ExtState, 0, sizeof( Hopper2.ExtState ) );
80FEB5 FE                MOV     R6,A
80FEB6 7F11              MOV     R7,#011H
80FEB8 FD                MOV     R5,A
80FEB9 7B00              MOV     R3,#?C?XDATASEG
80FEBB 7A23              MOV     R2,#HIGH Hopper2+04H
80FEBD 7997              MOV     R1,#LOW Hopper2+04H
80FEBF A5128008A6        ECALL   ?C?MEMSET
  128: //	Hopper2.ExtState[ 0 ] = 0;
  129: //	Hopper2.ExtState[ 1 ] = 0;
  130: 
  131: 	Hopper3.Id            = ID_HOPPER3;
80FEC4 9023A8            MOV     DPTR,#Hopper3
80FEC7 7402              MOV     A,#02H
80FEC9 F0                MOVX    @DPTR,A
  132: 	Hopper3.Sn            = 0;
80FECA E4                CLR     A
80FECB A3                INC     DPTR
80FECC F0                MOVX    @DPTR,A
  133: 	Hopper3.CommState     = 0;
80FECD A3                INC     DPTR
80FECE F0                MOVX    @DPTR,A
  134: 	Hopper3.State         = 0;
80FECF A3                INC     DPTR
80FED0 F0                MOVX    @DPTR,A
  135: 	memset( Hopper3.ExtState, 0, sizeof( Hopper3.ExtState ) );
80FED1 FE                MOV     R6,A
80FED2 7F11              MOV     R7,#011H
80FED4 FD                MOV     R5,A
80FED5 7B00              MOV     R3,#?C?XDATASEG
80FED7 7A23              MOV     R2,#HIGH Hopper3+04H
80FED9 79AC              MOV     R1,#LOW Hopper3+04H
80FEDB A5128008A6        ECALL   ?C?MEMSET
  136: //	Hopper3.ExtState[ 0 ] = 0;
  137: //	Hopper3.ExtState[ 1 ] = 0;
  138: 			
  139: 	Lcd.Id            = ID_LCD;
80FEE0 902369            MOV     DPTR,#Lcd
80FEE3 7409              MOV     A,#09H
80FEE5 F0                MOVX    @DPTR,A
  140: 	Lcd.Sn            = 1;
80FEE6 A3                INC     DPTR
80FEE7 7401              MOV     A,#01H
80FEE9 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 655


  141: 	Lcd.CommState     = 0;
80FEEA E4                CLR     A
80FEEB A3                INC     DPTR
80FEEC F0                MOVX    @DPTR,A
  142: 	Lcd.State         = 0;
80FEED A3                INC     DPTR
80FEEE F0                MOVX    @DPTR,A
  143: 	memset( Lcd.ExtState, 0, sizeof( Lcd.ExtState ) );
80FEEF FE                MOV     R6,A
80FEF0 7F11              MOV     R7,#011H
80FEF2 FD                MOV     R5,A
80FEF3 7B00              MOV     R3,#?C?XDATASEG
80FEF5 7A23              MOV     R2,#HIGH Lcd+04H
80FEF7 796D              MOV     R1,#LOW Lcd+04H
80FEF9 A5128008A6        ECALL   ?C?MEMSET
  144: //	Lcd.ExtState[ 0 ] = 0;
  145: //	Lcd.ExtState[ 1 ] = 0;
  146: 	
  147: 	Casher.Id            = ID_CASHER;
80FEFE 9023D4            MOV     DPTR,#Casher
80FF01 740D              MOV     A,#0DH
80FF03 F0                MOVX    @DPTR,A
  148: 	Casher.Sn            = 1;
80FF04 A3                INC     DPTR
80FF05 7401              MOV     A,#01H
80FF07 F0                MOVX    @DPTR,A
  149: 	Casher.CommState     = 0;
80FF08 E4                CLR     A
80FF09 A3                INC     DPTR
80FF0A F0                MOVX    @DPTR,A
  150: 	Casher.State         = 0;
80FF0B A3                INC     DPTR
80FF0C F0                MOVX    @DPTR,A
  151: 	memset( Casher.ExtState, 0, sizeof( Casher.ExtState ) );
80FF0D FE                MOV     R6,A
80FF0E 7F11              MOV     R7,#011H
80FF10 FD                MOV     R5,A
80FF11 7B00              MOV     R3,#?C?XDATASEG
80FF13 7A23              MOV     R2,#HIGH Casher+04H
80FF15 79D8              MOV     R1,#LOW Casher+04H
80FF17 A5128008A6        ECALL   ?C?MEMSET
  152: //	Casher.ExtState[ 0 ] = 0;
  153: //	Casher.ExtState[ 1 ] = 0;
  154: 
  155: //	Coiner.Id            = ID_COINER1;
  156: //	Coiner.Sn            = 1;
  157: //	Coiner.CommState     = 0;
  158: //	Coiner.State         = 0;
  159: //	memset( Coiner.ExtState, 0, sizeof( Coiner.ExtState ) );
  160: //	Coiner.ExtState[ 0 ] = 0;
  161: //	Coiner.ExtState[ 1 ] = 0;
  162: 
  163: //	Hub.Id            = ID_HUB;
  164: //	Hub.Sn            = 1;
  165: //	Hub.CommState     = 0;
  166: //	Hub.State         = 0;
  167: //	memset( Hub.ExtState, 0, sizeof( Hub.ExtState ) );
  168: //	Hub.ExtState[ 0 ] = 0;
  169: //	Hub.ExtState[ 1 ] = 0;
  170: 
  171: 	Channel.Id            = ID_CHANNEL;
80FF1C 9023BE            MOV     DPTR,#Channel
80FF1F 7415              MOV     A,#015H
80FF21 F0                MOVX    @DPTR,A
  172: 	Channel.Sn            = 1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 656


80FF22 A3                INC     DPTR
80FF23 7401              MOV     A,#01H
80FF25 F0                MOVX    @DPTR,A
  173: 	Channel.CommState     = 0;
80FF26 E4                CLR     A
80FF27 A3                INC     DPTR
80FF28 F0                MOVX    @DPTR,A
  174: 	Channel.State         = 0;
80FF29 A3                INC     DPTR
80FF2A F0                MOVX    @DPTR,A
  175: 	memset( Channel.ExtState, 0, sizeof( Channel.ExtState ) );
80FF2B FE                MOV     R6,A
80FF2C 7F11              MOV     R7,#011H
80FF2E FD                MOV     R5,A
80FF2F 7B00              MOV     R3,#?C?XDATASEG
80FF31 7A23              MOV     R2,#HIGH Channel+04H
80FF33 79C2              MOV     R1,#LOW Channel+04H
80FF35 A5128008A6        ECALL   ?C?MEMSET
  176: //	Channel.ExtState[ 0 ] = 0;
  177: //	Channel.ExtState[ 1 ] = 0;
  178: 
  179: 	memset( ZhkAutoTaskPermission, 0, sizeof( ZhkAutoTaskPermission ) );
80FF3A 7E00              MOV     R6,#00H
80FF3C 7F02              MOV     R7,#02H
80FF3E 7D00              MOV     R5,#00H
80FF40 7B00              MOV     R3,#?C?XDATASEG
80FF42 7A23              MOV     R2,#HIGH ZhkAutoTaskPermission
80FF44 7966              MOV     R1,#LOW ZhkAutoTaskPermission
80FF46 A5128008A6        ECALL   ?C?MEMSET
  180: 	ZhkCasherStatus = CASHER_STATUS_NULL;
80FF4B E4                CLR     A
80FF4C 902368            MOV     DPTR,#ZhkCasherStatus
80FF4F F0                MOVX    @DPTR,A
  181: 	
  182: //	AlarmTimer = 90;
  183: //	AlarmFlag = 0;
  184: 	MaintFlag = 0;
80FF50 9028AD            MOV     DPTR,#MaintFlag
80FF53 F0                MOVX    @DPTR,A
  185: 
  186: 	ZhkSchedulerId = ID_NULL;
80FF54 902365            MOV     DPTR,#ZhkSchedulerId
80FF57 74FF              MOV     A,#0FFH
80FF59 F0                MOVX    @DPTR,A
  187: 	ZhkSchedulerState = TASK_NULL;	
80FF5A E4                CLR     A
80FF5B 9023D3            MOV     DPTR,#ZhkSchedulerState
80FF5E F0                MOVX    @DPTR,A
  188: 	for( i = 0 ; i < sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) ; i ++ )			
80FF5F F527              MOV     i,A
80FF61         ?C0001?SCHEDULER:
  189: 		memset( &ZhkReadyTaskList[ i ] , 0xFF , sizeof( struct COMMTASK ) );
80FF61 900026            MOV     DPTR,#026H
80FF64 7DFF              MOV     R5,#0FFH
80FF66 E527              MOV     A,i
80FF68 75F026            MOV     B,#026H
80FF6B A4                MUL     AB
80FF6C 24E9              ADD     A,#LOW ZhkReadyTaskList
80FF6E F9                MOV     R1,A
80FF6F 7423              MOV     A,#HIGH ZhkReadyTaskList
80FF71 35F0              ADDC    A,B
80FF73 FA                MOV     R2,A
80FF74 7B00              MOV     R3,#?C?XDATASEG
80FF76 AE83              MOV     R6,DPH
80FF78 AF82              MOV     R7,DPL
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 657


80FF7A A5128008A6        ECALL   ?C?MEMSET
80FF7F 0527              INC     i
80FF81 E527              MOV     A,i
80FF83 B420DB            CJNE    A,#020H,?C0001?SCHEDULER
80FF86         ?C0002?SCHEDULER:
  190: 
  191: #ifndef _DEBUG_NO_MOBILE
  192: 	ZhkMobileInit();
80FF86 A5128136C8        ECALL   ZhkMobileInit
  193: #endif // _DEBUG_NO_MOBILE
  194: 
  195: 	return 1;
80FF8B 7F01              MOV     R7,#01H
  196: }
80FF8D         ?C0004?SCHEDULER:
80FF8D A522              ERET    
----- FUNCTION SchedulerInit (END) -------


----- FUNCTION _ZhkSchedulerIsTaskNull (BEGIN) -----
 FILE: 'scheduler.c'
  349: bit ZhkSchedulerIsTaskNull( uchar TaskNum )
  350: {
;---- Variable 'TaskNum' assigned to Register 'R7' ----
  351: 	if ( TaskNum >= sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) )
  352: 		return 0;
80FF8F EF                MOV     A,R7
80FF90 C3                CLR     C
80FF91 9420              SUBB    A,#020H
80FF93 4002              JC      ?C0045?SCHEDULER
  353: 	return ZhkReadyTaskList[ TaskNum ].Id == ID_NULL;
80FF95 8014              SJMP    ?C0046?SCHEDULER
80FF97         ?C0045?SCHEDULER:
  354: 	
80FF97 75F026            MOV     B,#026H
80FF9A EF                MOV     A,R7
80FF9B 9023EA            MOV     DPTR,#ZhkReadyTaskList+01H
80FF9E A51280079F        ECALL   ?C?OFFXADD
80FFA3 E0                MOVX    A,@DPTR
80FFA4 B4FF03            CJNE    A,#0FFH,?C0047?SCHEDULER
80FFA7 D3                SETB    C
80FFA8 8001              SJMP    ?C0048?SCHEDULER
80FFAA         ?C0047?SCHEDULER:
80FFAA C3                CLR     C
80FFAB         ?C0048?SCHEDULER:
  355: }
80FFAB         ?C0046?SCHEDULER:
80FFAB A522              ERET    
----- FUNCTION _ZhkSchedulerIsTaskNull (END) -------


----- FUNCTION ZhkGetSchedulerClock (BEGIN) -----
 FILE: 'scheduler.c'
  357: uchar ZhkGetSchedulerClock( void )
  358: {
  359: 	uchar data ch;
  360: 	EA = 0;
80FFAD C2AF              CLR     EA
  361: 	ch = ZhkSchedulerClock;
80FFAF 851A2E            MOV     ch,ZhkSchedulerClock
  362: 	ZhkSchedulerClock = 0;
80FFB2 E4                CLR     A
80FFB3 F51A              MOV     ZhkSchedulerClock,A
  363: 	EA = 1;
80FFB5 D2AF              SETB    EA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 658


  364: 	return ch;
80FFB7 AF2E              MOV     R7,ch
  365: }
80FFB9         ?C0049?SCHEDULER:
80FFB9 A522              ERET    
----- FUNCTION ZhkGetSchedulerClock (END) -------


----- FUNCTION ?L?COM0035 (BEGIN) -----
80FFBB 901852            MOV     DPTR,#TaskTemp
80FFBE E0                MOVX    A,@DPTR
80FFBF FE                MOV     R6,A
80FFC0 A3                INC     DPTR
80FFC1 E0                MOVX    A,@DPTR
80FFC2 FF                MOV     R7,A
----- FUNCTION _ZhkHopperTxMsg (BEGIN) -----
 FILE: 'scheduler.c'
  608: bit ZhkHopperTxMsg( struct COMMTASK xdata* NewTask )
  609: {
;---- Variable 'NewTask' assigned to Register 'R6/R7' ----
  610: 	uchar data HopperNum;
  611: 	struct DEVICE xdata* data CurrentHopper;
  612: 	
  613: 	// 选择出币机构
  614: 	HopperNum = NewTask->Id - ID_HOPPER1;
80FFC3 8F82              MOV     DPL,R7
80FFC5 8E83              MOV     DPH,R6
80FFC7 A3                INC     DPTR
80FFC8 E0                MOVX    A,@DPTR
80FFC9 F52B              MOV     HopperNum,A
  615: 	switch( HopperNum )
80FFCB 14                DEC     A
80FFCC 600F              JZ      ?C0123?SCHEDULER
80FFCE 14                DEC     A
80FFCF 6014              JZ      ?C0124?SCHEDULER
80FFD1 2402              ADD     A,#02H
80FFD3 7018              JNZ     ?C0125?SCHEDULER
  616: 	{
  617: 	case 0:
80FFD5         ?C0122?SCHEDULER:
  618: 		CurrentHopper = &Hopper1;
80FFD5 752C23            MOV     CurrentHopper,#HIGH Hopper1
80FFD8 752D7E            MOV     CurrentHopper+01H,#LOW Hopper1
  619: 	/*	if( Hopper1.Sn < 255 )
  620: 			Hopper1.Sn++;
  621: 		else
  622: 			Hopper1.Sn = 0;*/
  623: 		break;
80FFDB 8013              SJMP    ?C0121?SCHEDULER
  624: 	case 1:
80FFDD         ?C0123?SCHEDULER:
  625: 	//	Trace("\n ZhkHopperTxMsg HopperOutput2");
  626: 		CurrentHopper = &Hopper2;
80FFDD 752C23            MOV     CurrentHopper,#HIGH Hopper2
80FFE0 752D93            MOV     CurrentHopper+01H,#LOW Hopper2
  627: 	/*	if( Hopper2.Sn < 255 )
  628: 			Hopper2.Sn++;
  629: 		else
  630: 			Hopper2.Sn = 0;*/
  631: 		break;
80FFE3 800B              SJMP    ?C0121?SCHEDULER
  632: 	case 2:
80FFE5         ?C0124?SCHEDULER:
  633: 		CurrentHopper = &Hopper3;
80FFE5 752C23            MOV     CurrentHopper,#HIGH Hopper3
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 659


80FFE8 752DA8            MOV     CurrentHopper+01H,#LOW Hopper3
  634: 	/*	if( Hopper3.Sn < 255 )
  635: 			Hopper3.Sn++;
  636: 		else
  637: 			Hopper3.Sn = 0;*/
  638: 		break;
80FFEB 8003              SJMP    ?C0121?SCHEDULER
  639: 	default:
80FFED         ?C0125?SCHEDULER:
  640: 		return 0;
80FFED C3                CLR     C
80FFEE 8006              SJMP    ?C0126?SCHEDULER
  641: 	}
80FFF0         ?C0121?SCHEDULER:
  642: //	Trace("\n ZhkHopperTxMsg" );
  643: 	ZhkBusTxMsg( NewTask );		
80FFF0 A5128127C2        ECALL   _ZhkBusTxMsg
  644: 	return 1;	
80FFF5 D3                SETB    C
  645: }
80FFF6         ?C0126?SCHEDULER:
80FFF6 A522              ERET    
----- FUNCTION _ZhkHopperTxMsg (END) -------


----- FUNCTION _ReadWriteSysParam (BEGIN) -----
 FILE: 'SysParamSet.c'
   95: void ReadWriteSysParam( u_char Num,u_char xdata *OutStr,u_char xdata *InStr ,u_char xdata *len, bit OutInFlag )
   96: {	
810000 901756            MOV     DPTR,#OutStr
810003 EC                MOV     A,R4
810004 F0                MOVX    @DPTR,A
810005 A3                INC     DPTR
810006 ED                MOV     A,R5
810007 F0                MOVX    @DPTR,A
810008 A3                INC     DPTR
810009 EA                MOV     A,R2
81000A F0                MOVX    @DPTR,A
81000B A3                INC     DPTR
81000C EB                MOV     A,R3
81000D F0                MOVX    @DPTR,A
;---- Variable 'Num' assigned to Register 'R7' ----
   97: 	u_char  xdata j = 0;	
   98: 	u_char	xdata  i;
81000E E4                CLR     A
81000F 90175C            MOV     DPTR,#j
810012 F0                MOVX    @DPTR,A
   99: 	uint	xdata temp = 0;		
810013 90175E            MOV     DPTR,#temp
810016 F0                MOVX    @DPTR,A
810017 A3                INC     DPTR
810018 F0                MOVX    @DPTR,A
  100: 
  101: 	i = 0;
810019 90175D            MOV     DPTR,#i
81001C F0                MOVX    @DPTR,A
  102: 	switch( Num )
81001D EF                MOV     A,R7
81001E A5128007CD        ECALL   ?C?CCASEX
810023 007E              DW      ?C0002?SYSPARAMSET
810025 00                DB      00H
810026 01A2              DW      ?C0014?SYSPARAMSET
810028 01                DB      01H
810029 02F7              DW      ?C0026?SYSPARAMSET
81002B 02                DB      02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 660


81002C 044C              DW      ?C0038?SYSPARAMSET
81002E 03                DB      03H
81002F 04E3              DW      ?C0048?SYSPARAMSET
810031 04                DB      04H
810032 056D              DW      ?C0057?SYSPARAMSET
810034 05                DB      05H
810035 05F7              DW      ?C0066?SYSPARAMSET
810037 06                DB      06H
810038 065B              DW      ?C0071?SYSPARAMSET
81003A 07                DB      07H
81003B 07B0              DW      ?C0083?SYSPARAMSET
81003D 08                DB      08H
81003E 0911              DW      ?C0096?SYSPARAMSET
810040 09                DB      09H
810041 0A2B              DW      ?C0106?SYSPARAMSET
810043 0A                DB      0AH
810044 0B09              DW      ?C0116?SYSPARAMSET
810046 0B                DB      0BH
810047 0CD6              DW      ?C0131?SYSPARAMSET
810049 0C                DB      0CH
81004A 0DF0              DW      ?C0141?SYSPARAMSET
81004C 0D                DB      0DH
81004D 0EBE              DW      ?C0158?SYSPARAMSET
81004F 0E                DB      0EH
810050 104F              DW      ?C0171?SYSPARAMSET
810052 0F                DB      0FH
810053 11E0              DW      ?C0184?SYSPARAMSET
810055 10                DB      010H
810056 1371              DW      ?C0197?SYSPARAMSET
810058 11                DB      011H
810059 1502              DW      ?C0210?SYSPARAMSET
81005B 12                DB      012H
81005C 1693              DW      ?C0223?SYSPARAMSET
81005E 13                DB      013H
81005F 1824              DW      ?C0236?SYSPARAMSET
810061 14                DB      014H
810062 19B5              DW      ?C0249?SYSPARAMSET
810064 15                DB      015H
810065 1B46              DW      ?C0262?SYSPARAMSET
810067 16                DB      016H
810068 1CD7              DW      ?C0275?SYSPARAMSET
81006A 17                DB      017H
81006B 1E68              DW      ?C0288?SYSPARAMSET
81006D 18                DB      018H
81006E 1FF9              DW      ?C0301?SYSPARAMSET
810070 19                DB      019H
810071 218A              DW      ?C0314?SYSPARAMSET
810073 1A                DB      01AH
810074 231B              DW      ?C0327?SYSPARAMSET
810076 1B                DB      01BH
810077 24C4              DW      ?C0340?SYSPARAMSET
810079 1C                DB      01CH
81007A 0000              DW      00H
81007C 256F              DW      ?C0351?SYSPARAMSET
  103: 	{
  104: 		case 0://#1硬币面值			
81007E         ?C0002?SYSPARAMSET:
  105: 			if( OutInFlag == 0 )
81007E 301A03            JNB     OutInFlag,$ + 6H
810081 02012D            LJMP    ?C0003?SYSPARAMSET
  106: 			{				
  107: 				switch( SystemParameter.curUnit )
810084 900468            MOV     DPTR,#SystemParameter+048H
810087 E0                MOVX    A,@DPTR
810088 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 661


810089 A3                INC     DPTR
81008A E0                MOVX    A,@DPTR
81008B FF                MOV     R7,A
81008C EE                MOV     A,R6
81008D 6003              JZ      $ + 5H
81008F 02256F            LJMP    ?C0351?SYSPARAMSET
810092 EF                MOV     A,R7
810093 24F6              ADD     A,#0F6H
810095 6031              JZ      ?C0006?SYSPARAMSET
810097 24A6              ADD     A,#0A6H
810099 6047              JZ      ?C0007?SYSPARAMSET
81009B 2463              ADD     A,#063H
81009D 6003              JZ      $ + 5H
81009F 02256F            LJMP    ?C0351?SYSPARAMSET
  108: 				{
  109: 					case 1:
8100A2         ?C0005?SYSPARAMSET:
  110: 						*len = sprintf( OutStr, "%u", SystemParameter.HopperCoinPrice1 );
8100A2 901756            MOV     DPTR,#OutStr
8100A5 E0                MOVX    A,@DPTR
8100A6 FE                MOV     R6,A
8100A7 A3                INC     DPTR
8100A8 E0                MOVX    A,@DPTR
8100A9 AA06              MOV     R2,AR6
8100AB F9                MOV     R1,A
8100AC 7B00              MOV     R3,#?C?XDATASEG
8100AE C003              PUSH    AR3
8100B0 C002              PUSH    AR2
8100B2 C001              PUSH    AR1
8100B4 7B80              MOV     R3,#BYTE2 0801098H
8100B6 7A10              MOV     R2,#HIGH 0801098H
8100B8 7998              MOV     R1,#LOW 0801098H
8100BA 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8100BD A5128007B6        ECALL   ?C?PSTXDATA
8100C2 900421            MOV     DPTR,#SystemParameter+01H
  111: 					break;				
8100C5 020F08            LJMP    ?C0439?SYSPARAMSET
  112: 					case 10:
8100C8         ?C0006?SYSPARAMSET:
  113: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.HopperCoinPrice1/SystemParameter.curUnit,SystemParameter.H
>> opperCoinPrice1%SystemParameter.curUnit );
8100C8 901756            MOV     DPTR,#OutStr
8100CB E0                MOVX    A,@DPTR
8100CC FE                MOV     R6,A
8100CD A3                INC     DPTR
8100CE E0                MOVX    A,@DPTR
8100CF AA06              MOV     R2,AR6
8100D1 F9                MOV     R1,A
8100D2 7B00              MOV     R3,#?C?XDATASEG
8100D4 C003              PUSH    AR3
8100D6 C002              PUSH    AR2
8100D8 C001              PUSH    AR1
8100DA 7B80              MOV     R3,#BYTE2 080109BH
8100DC 7A10              MOV     R2,#HIGH 080109BH
8100DE 799B              MOV     R1,#LOW 080109BH
  114: 					break;
8100E0 8018              SJMP    ?C0417?SYSPARAMSET
  115: 					case 100:
8100E2         ?C0007?SYSPARAMSET:
  116: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.HopperCoinPrice1/SystemParameter.curUnit,SystemParameter
>> .HopperCoinPrice1%SystemParameter.curUnit );
8100E2 901756            MOV     DPTR,#OutStr
8100E5 E0                MOVX    A,@DPTR
8100E6 FE                MOV     R6,A
8100E7 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 662


8100E8 E0                MOVX    A,@DPTR
8100E9 AA06              MOV     R2,AR6
8100EB F9                MOV     R1,A
8100EC 7B00              MOV     R3,#?C?XDATASEG
8100EE C003              PUSH    AR3
8100F0 C002              PUSH    AR2
8100F2 C001              PUSH    AR1
8100F4 7B80              MOV     R3,#BYTE2 08010A1H
8100F6 7A10              MOV     R2,#HIGH 08010A1H
8100F8 79A1              MOV     R1,#LOW 08010A1H
8100FA         
8100FA 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8100FD A5128007B6        ECALL   ?C?PSTXDATA
810102 900468            MOV     DPTR,#SystemParameter+048H
810105 E0                MOVX    A,@DPTR
810106 FC                MOV     R4,A
810107 A3                INC     DPTR
810108 E0                MOVX    A,@DPTR
810109 FD                MOV     R5,A
81010A 900421            MOV     DPTR,#SystemParameter+01H
81010D E0                MOVX    A,@DPTR
81010E FE                MOV     R6,A
81010F A3                INC     DPTR
810110 E0                MOVX    A,@DPTR
810111 FF                MOV     R7,A
810112 A51280056C        ECALL   ?C?UIDIV
810117 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81011A EE                MOV     A,R6
81011B F0                MOVX    @DPTR,A
81011C A3                INC     DPTR
81011D EF                MOV     A,R7
81011E F0                MOVX    @DPTR,A
81011F 900468            MOV     DPTR,#SystemParameter+048H
810122 E0                MOVX    A,@DPTR
810123 FC                MOV     R4,A
810124 A3                INC     DPTR
810125 E0                MOVX    A,@DPTR
810126 FD                MOV     R5,A
810127 900421            MOV     DPTR,#SystemParameter+01H
  117: 					break;					
81012A 020F5E            LJMP    ?C0441?SYSPARAMSET
  118: 				}				
  119: 			}
81012D         ?C0003?SYSPARAMSET:
  120: 			else
  121: 			{				
  122: 				//Trace( "\n set IP val \n");
  123: 				j = *len;											
81012D 90175A            MOV     DPTR,#len
810130 E0                MOVX    A,@DPTR
810131 FE                MOV     R6,A
810132 A3                INC     DPTR
810133 E0                MOVX    A,@DPTR
810134 F582              MOV     DPL,A
810136 8E83              MOV     DPH,R6
810138 E0                MOVX    A,@DPTR
810139 90175C            MOV     DPTR,#j
81013C F0                MOVX    @DPTR,A
  124: 				if( j == 0 )
81013D 7003              JNZ     $ + 5H
81013F 02256F            LJMP    ?C0351?SYSPARAMSET
  125: 					break;
810142         ?C0009?SYSPARAMSET:
  126: 				SystemParameter.HopperCoinPrice1 = 0;	
810142 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 663


810143 900421            MOV     DPTR,#SystemParameter+01H
810146 F0                MOVX    @DPTR,A
810147 A3                INC     DPTR
810148 F0                MOVX    @DPTR,A
  127: 				for( i = 0; i < j; i ++ )
810149 90175D            MOV     DPTR,#i
81014C F0                MOVX    @DPTR,A
81014D         ?C0010?SYSPARAMSET:
81014D 90175C            MOV     DPTR,#j
810150 E0                MOVX    A,@DPTR
810151 FF                MOV     R7,A
810152 A3                INC     DPTR
810153 E0                MOVX    A,@DPTR
810154 FE                MOV     R6,A
810155 C3                CLR     C
810156 9F                SUBB    A,R7
810157 5044              JNC     ?C0011?SYSPARAMSET
  128: 				{
  129: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
810159 901758            MOV     DPTR,#InStr
81015C E0                MOVX    A,@DPTR
81015D FC                MOV     R4,A
81015E A3                INC     DPTR
81015F E0                MOVX    A,@DPTR
810160 2E                ADD     A,R6
810161 F582              MOV     DPL,A
810163 E4                CLR     A
810164 3C                ADDC    A,R4
810165 F583              MOV     DPH,A
810167 E0                MOVX    A,@DPTR
810168 FF                MOV     R7,A
810169 C3                CLR     C
81016A 9400              SUBB    A,#00H
81016C 4027              JC      ?C0012?SYSPARAMSET
81016E EF                MOV     A,R7
81016F D3                SETB    C
810170 9409              SUBB    A,#09H
810172 5021              JNC     ?C0012?SYSPARAMSET
  130: 						SystemParameter.HopperCoinPrice1 = SystemParameter.HopperCoinPrice1*10 + *( InStr + i );						
810174 EF                MOV     A,R7
810175 FB                MOV     R3,A
810176 7A00              MOV     R2,#00H
810178 900421            MOV     DPTR,#SystemParameter+01H
81017B E0                MOVX    A,@DPTR
81017C FE                MOV     R6,A
81017D A3                INC     DPTR
81017E E0                MOVX    A,@DPTR
81017F FF                MOV     R7,A
810180 7C00              MOV     R4,#00H
810182 7D0A              MOV     R5,#0AH
810184 A512800559        ECALL   ?C?IMUL
810189 EF                MOV     A,R7
81018A 2B                ADD     A,R3
81018B FF                MOV     R7,A
81018C EA                MOV     A,R2
81018D 3E                ADDC    A,R6
81018E 900421            MOV     DPTR,#SystemParameter+01H
810191 F0                MOVX    @DPTR,A
810192 A3                INC     DPTR
810193 EF                MOV     A,R7
810194 F0                MOVX    @DPTR,A
  131: 				}			
810195         ?C0012?SYSPARAMSET:
810195 90175D            MOV     DPTR,#i
810198 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 664


810199 04                INC     A
81019A F0                MOVX    @DPTR,A
81019B 80B0              SJMP    ?C0010?SYSPARAMSET
81019D         ?C0011?SYSPARAMSET:
  132: 				SystemSave = 1;
81019D D22E              SETB    SystemSave
  133: 			}			
  134: 		break;		
81019F 02256F            LJMP    ?C0351?SYSPARAMSET
  135: 		case 1://#2硬币面值			
8101A2         ?C0014?SYSPARAMSET:
  136: 			if( OutInFlag == 0 )
8101A2 301A03            JNB     OutInFlag,$ + 6H
8101A5 020282            LJMP    ?C0015?SYSPARAMSET
  137: 			{					
  138: 				switch( SystemParameter.curUnit )
8101A8 900468            MOV     DPTR,#SystemParameter+048H
8101AB E0                MOVX    A,@DPTR
8101AC FE                MOV     R6,A
8101AD A3                INC     DPTR
8101AE E0                MOVX    A,@DPTR
8101AF FF                MOV     R7,A
8101B0 EE                MOV     A,R6
8101B1 6003              JZ      $ + 5H
8101B3 02256F            LJMP    ?C0351?SYSPARAMSET
8101B6 EF                MOV     A,R7
8101B7 24F6              ADD     A,#0F6H
8101B9 6031              JZ      ?C0018?SYSPARAMSET
8101BB 24A6              ADD     A,#0A6H
8101BD 6078              JZ      ?C0019?SYSPARAMSET
8101BF 2463              ADD     A,#063H
8101C1 6003              JZ      $ + 5H
8101C3 02256F            LJMP    ?C0351?SYSPARAMSET
  139: 				{
  140: 					case 1:
8101C6         ?C0017?SYSPARAMSET:
  141: 						*len = sprintf( OutStr, "%u", SystemParameter.HopperCoinPrice2 );
8101C6 901756            MOV     DPTR,#OutStr
8101C9 E0                MOVX    A,@DPTR
8101CA FE                MOV     R6,A
8101CB A3                INC     DPTR
8101CC E0                MOVX    A,@DPTR
8101CD AA06              MOV     R2,AR6
8101CF F9                MOV     R1,A
8101D0 7B00              MOV     R3,#?C?XDATASEG
8101D2 C003              PUSH    AR3
8101D4 C002              PUSH    AR2
8101D6 C001              PUSH    AR1
8101D8 7B80              MOV     R3,#BYTE2 0801098H
8101DA 7A10              MOV     R2,#HIGH 0801098H
8101DC 7998              MOV     R1,#LOW 0801098H
8101DE 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8101E1 A5128007B6        ECALL   ?C?PSTXDATA
8101E6 900423            MOV     DPTR,#SystemParameter+03H
8101E9         
  142: 					break;				
8101E9 020F08            LJMP    ?C0439?SYSPARAMSET
  143: 					case 10:
8101EC         ?C0018?SYSPARAMSET:
  144: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.HopperCoinPrice2/SystemParameter.curUnit,SystemParameter.H
>> opperCoinPrice2%SystemParameter.curUnit );
8101EC 901756            MOV     DPTR,#OutStr
8101EF E0                MOVX    A,@DPTR
8101F0 FE                MOV     R6,A
8101F1 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 665


8101F2 E0                MOVX    A,@DPTR
8101F3 AA06              MOV     R2,AR6
8101F5 F9                MOV     R1,A
8101F6 7B00              MOV     R3,#?C?XDATASEG
8101F8 C003              PUSH    AR3
8101FA C002              PUSH    AR2
8101FC C001              PUSH    AR1
8101FE 7B80              MOV     R3,#BYTE2 080109BH
810200 7A10              MOV     R2,#HIGH 080109BH
810202 799B              MOV     R1,#LOW 080109BH
810204 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810207 A5128007B6        ECALL   ?C?PSTXDATA
81020C 900468            MOV     DPTR,#SystemParameter+048H
81020F E0                MOVX    A,@DPTR
810210 FC                MOV     R4,A
810211 A3                INC     DPTR
810212 E0                MOVX    A,@DPTR
810213 FD                MOV     R5,A
810214 900423            MOV     DPTR,#SystemParameter+03H
810217 E0                MOVX    A,@DPTR
810218 FE                MOV     R6,A
810219 A3                INC     DPTR
81021A E0                MOVX    A,@DPTR
81021B FF                MOV     R7,A
81021C A51280056C        ECALL   ?C?UIDIV
810221 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810224 EE                MOV     A,R6
810225 F0                MOVX    @DPTR,A
810226 A3                INC     DPTR
810227 EF                MOV     A,R7
810228 F0                MOVX    @DPTR,A
810229 900468            MOV     DPTR,#SystemParameter+048H
81022C E0                MOVX    A,@DPTR
81022D FC                MOV     R4,A
81022E A3                INC     DPTR
81022F E0                MOVX    A,@DPTR
810230 FD                MOV     R5,A
810231 900423            MOV     DPTR,#SystemParameter+03H
810234         
  145: 					break;
810234 020F5E            LJMP    ?C0441?SYSPARAMSET
  146: 					case 100:
810237         ?C0019?SYSPARAMSET:
  147: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.HopperCoinPrice2/SystemParameter.curUnit,SystemParameter
>> .HopperCoinPrice2%SystemParameter.curUnit );
810237 901756            MOV     DPTR,#OutStr
81023A E0                MOVX    A,@DPTR
81023B FE                MOV     R6,A
81023C A3                INC     DPTR
81023D E0                MOVX    A,@DPTR
81023E AA06              MOV     R2,AR6
810240 F9                MOV     R1,A
810241 7B00              MOV     R3,#?C?XDATASEG
810243 C003              PUSH    AR3
810245 C002              PUSH    AR2
810247 C001              PUSH    AR1
810249 7B80              MOV     R3,#BYTE2 08010A1H
81024B 7A10              MOV     R2,#HIGH 08010A1H
81024D 79A1              MOV     R1,#LOW 08010A1H
81024F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810252 A5128007B6        ECALL   ?C?PSTXDATA
810257 900468            MOV     DPTR,#SystemParameter+048H
81025A E0                MOVX    A,@DPTR
81025B FC                MOV     R4,A
81025C A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 666


81025D E0                MOVX    A,@DPTR
81025E FD                MOV     R5,A
81025F 900423            MOV     DPTR,#SystemParameter+03H
810262 E0                MOVX    A,@DPTR
810263 FE                MOV     R6,A
810264 A3                INC     DPTR
810265 E0                MOVX    A,@DPTR
810266 FF                MOV     R7,A
810267 A51280056C        ECALL   ?C?UIDIV
81026C 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81026F EE                MOV     A,R6
810270 F0                MOVX    @DPTR,A
810271 A3                INC     DPTR
810272 EF                MOV     A,R7
810273 F0                MOVX    @DPTR,A
810274 900468            MOV     DPTR,#SystemParameter+048H
810277 E0                MOVX    A,@DPTR
810278 FC                MOV     R4,A
810279 A3                INC     DPTR
81027A E0                MOVX    A,@DPTR
81027B FD                MOV     R5,A
81027C 900423            MOV     DPTR,#SystemParameter+03H
81027F         
  148: 					break;					
81027F 020F5E            LJMP    ?C0441?SYSPARAMSET
  149: 				}				
  150: 			}
810282         ?C0015?SYSPARAMSET:
  151: 			else
  152: 			{				
  153: 				//Trace( "\n set IP val \n");
  154: 				j = *len;											
810282 90175A            MOV     DPTR,#len
810285 E0                MOVX    A,@DPTR
810286 FE                MOV     R6,A
810287 A3                INC     DPTR
810288 E0                MOVX    A,@DPTR
810289 F582              MOV     DPL,A
81028B 8E83              MOV     DPH,R6
81028D E0                MOVX    A,@DPTR
81028E 90175C            MOV     DPTR,#j
810291 F0                MOVX    @DPTR,A
  155: 				if( j == 0 )
810292 7003              JNZ     $ + 5H
810294 02256F            LJMP    ?C0351?SYSPARAMSET
  156: 					break;
810297         ?C0021?SYSPARAMSET:
  157: 				SystemParameter.HopperCoinPrice2 = 0;	
810297 E4                CLR     A
810298 900423            MOV     DPTR,#SystemParameter+03H
81029B F0                MOVX    @DPTR,A
81029C A3                INC     DPTR
81029D F0                MOVX    @DPTR,A
  158: 				for( i = 0; i < j; i ++ )
81029E 90175D            MOV     DPTR,#i
8102A1 F0                MOVX    @DPTR,A
8102A2         ?C0022?SYSPARAMSET:
8102A2 90175C            MOV     DPTR,#j
8102A5 E0                MOVX    A,@DPTR
8102A6 FF                MOV     R7,A
8102A7 A3                INC     DPTR
8102A8 E0                MOVX    A,@DPTR
8102A9 FE                MOV     R6,A
8102AA C3                CLR     C
8102AB 9F                SUBB    A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 667


8102AC 5044              JNC     ?C0023?SYSPARAMSET
  159: 				{
  160: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
8102AE 901758            MOV     DPTR,#InStr
8102B1 E0                MOVX    A,@DPTR
8102B2 FC                MOV     R4,A
8102B3 A3                INC     DPTR
8102B4 E0                MOVX    A,@DPTR
8102B5 2E                ADD     A,R6
8102B6 F582              MOV     DPL,A
8102B8 E4                CLR     A
8102B9 3C                ADDC    A,R4
8102BA F583              MOV     DPH,A
8102BC E0                MOVX    A,@DPTR
8102BD FF                MOV     R7,A
8102BE C3                CLR     C
8102BF 9400              SUBB    A,#00H
8102C1 4027              JC      ?C0024?SYSPARAMSET
8102C3 EF                MOV     A,R7
8102C4 D3                SETB    C
8102C5 9409              SUBB    A,#09H
8102C7 5021              JNC     ?C0024?SYSPARAMSET
  161: 						SystemParameter.HopperCoinPrice2 = SystemParameter.HopperCoinPrice2*10 + *( InStr + i );						
8102C9 EF                MOV     A,R7
8102CA FB                MOV     R3,A
8102CB 7A00              MOV     R2,#00H
8102CD 900423            MOV     DPTR,#SystemParameter+03H
8102D0 E0                MOVX    A,@DPTR
8102D1 FE                MOV     R6,A
8102D2 A3                INC     DPTR
8102D3 E0                MOVX    A,@DPTR
8102D4 FF                MOV     R7,A
8102D5 7C00              MOV     R4,#00H
8102D7 7D0A              MOV     R5,#0AH
8102D9 A512800559        ECALL   ?C?IMUL
8102DE EF                MOV     A,R7
8102DF 2B                ADD     A,R3
8102E0 FF                MOV     R7,A
8102E1 EA                MOV     A,R2
8102E2 3E                ADDC    A,R6
8102E3 900423            MOV     DPTR,#SystemParameter+03H
8102E6 F0                MOVX    @DPTR,A
8102E7 A3                INC     DPTR
8102E8 EF                MOV     A,R7
8102E9 F0                MOVX    @DPTR,A
  162: 				}			
8102EA         ?C0024?SYSPARAMSET:
8102EA 90175D            MOV     DPTR,#i
8102ED E0                MOVX    A,@DPTR
8102EE 04                INC     A
8102EF F0                MOVX    @DPTR,A
8102F0 80B0              SJMP    ?C0022?SYSPARAMSET
8102F2         ?C0023?SYSPARAMSET:
  163: 				SystemSave = 1;
8102F2 D22E              SETB    SystemSave
  164: 			}			
  165: 		break;		
8102F4 02256F            LJMP    ?C0351?SYSPARAMSET
  166: 		case 2://#3硬币面值			
8102F7         ?C0026?SYSPARAMSET:
  167: 			if( OutInFlag == 0 )
8102F7 301A03            JNB     OutInFlag,$ + 6H
8102FA 0203D7            LJMP    ?C0027?SYSPARAMSET
  168: 			{													
  169: 				switch( SystemParameter.curUnit )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 668


8102FD 900468            MOV     DPTR,#SystemParameter+048H
810300 E0                MOVX    A,@DPTR
810301 FE                MOV     R6,A
810302 A3                INC     DPTR
810303 E0                MOVX    A,@DPTR
810304 FF                MOV     R7,A
810305 EE                MOV     A,R6
810306 6003              JZ      $ + 5H
810308 02256F            LJMP    ?C0351?SYSPARAMSET
81030B EF                MOV     A,R7
81030C 24F6              ADD     A,#0F6H
81030E 6031              JZ      ?C0030?SYSPARAMSET
810310 24A6              ADD     A,#0A6H
810312 6078              JZ      ?C0031?SYSPARAMSET
810314 2463              ADD     A,#063H
810316 6003              JZ      $ + 5H
810318 02256F            LJMP    ?C0351?SYSPARAMSET
  170: 				{
  171: 					case 1:
81031B         ?C0029?SYSPARAMSET:
  172: 						*len = sprintf( OutStr, "%u", SystemParameter.HopperCoinPrice3 );
81031B 901756            MOV     DPTR,#OutStr
81031E E0                MOVX    A,@DPTR
81031F FE                MOV     R6,A
810320 A3                INC     DPTR
810321 E0                MOVX    A,@DPTR
810322 AA06              MOV     R2,AR6
810324 F9                MOV     R1,A
810325 7B00              MOV     R3,#?C?XDATASEG
810327 C003              PUSH    AR3
810329 C002              PUSH    AR2
81032B C001              PUSH    AR1
81032D 7B80              MOV     R3,#BYTE2 0801098H
81032F 7A10              MOV     R2,#HIGH 0801098H
810331 7998              MOV     R1,#LOW 0801098H
810333 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810336 A5128007B6        ECALL   ?C?PSTXDATA
81033B 900425            MOV     DPTR,#SystemParameter+05H
81033E         
  173: 					break;				
81033E 020F08            LJMP    ?C0439?SYSPARAMSET
  174: 					case 10:
810341         ?C0030?SYSPARAMSET:
  175: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.HopperCoinPrice3/SystemParameter.curUnit,SystemParameter.H
>> opperCoinPrice3%SystemParameter.curUnit );
810341 901756            MOV     DPTR,#OutStr
810344 E0                MOVX    A,@DPTR
810345 FE                MOV     R6,A
810346 A3                INC     DPTR
810347 E0                MOVX    A,@DPTR
810348 AA06              MOV     R2,AR6
81034A F9                MOV     R1,A
81034B 7B00              MOV     R3,#?C?XDATASEG
81034D C003              PUSH    AR3
81034F C002              PUSH    AR2
810351 C001              PUSH    AR1
810353 7B80              MOV     R3,#BYTE2 080109BH
810355 7A10              MOV     R2,#HIGH 080109BH
810357 799B              MOV     R1,#LOW 080109BH
810359 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81035C A5128007B6        ECALL   ?C?PSTXDATA
810361 900468            MOV     DPTR,#SystemParameter+048H
810364 E0                MOVX    A,@DPTR
810365 FC                MOV     R4,A
810366 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 669


810367 E0                MOVX    A,@DPTR
810368 FD                MOV     R5,A
810369 900425            MOV     DPTR,#SystemParameter+05H
81036C E0                MOVX    A,@DPTR
81036D FE                MOV     R6,A
81036E A3                INC     DPTR
81036F E0                MOVX    A,@DPTR
810370 FF                MOV     R7,A
810371 A51280056C        ECALL   ?C?UIDIV
810376 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810379 EE                MOV     A,R6
81037A F0                MOVX    @DPTR,A
81037B A3                INC     DPTR
81037C EF                MOV     A,R7
81037D F0                MOVX    @DPTR,A
81037E 900468            MOV     DPTR,#SystemParameter+048H
810381 E0                MOVX    A,@DPTR
810382 FC                MOV     R4,A
810383 A3                INC     DPTR
810384 E0                MOVX    A,@DPTR
810385 FD                MOV     R5,A
810386 900425            MOV     DPTR,#SystemParameter+05H
810389         
  176: 					break;
810389 020F5E            LJMP    ?C0441?SYSPARAMSET
  177: 					case 100:
81038C         ?C0031?SYSPARAMSET:
  178: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.HopperCoinPrice3/SystemParameter.curUnit,SystemParameter
>> .HopperCoinPrice3%SystemParameter.curUnit );
81038C 901756            MOV     DPTR,#OutStr
81038F E0                MOVX    A,@DPTR
810390 FE                MOV     R6,A
810391 A3                INC     DPTR
810392 E0                MOVX    A,@DPTR
810393 AA06              MOV     R2,AR6
810395 F9                MOV     R1,A
810396 7B00              MOV     R3,#?C?XDATASEG
810398 C003              PUSH    AR3
81039A C002              PUSH    AR2
81039C C001              PUSH    AR1
81039E 7B80              MOV     R3,#BYTE2 08010A1H
8103A0 7A10              MOV     R2,#HIGH 08010A1H
8103A2 79A1              MOV     R1,#LOW 08010A1H
8103A4 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8103A7 A5128007B6        ECALL   ?C?PSTXDATA
8103AC 900468            MOV     DPTR,#SystemParameter+048H
8103AF E0                MOVX    A,@DPTR
8103B0 FC                MOV     R4,A
8103B1 A3                INC     DPTR
8103B2 E0                MOVX    A,@DPTR
8103B3 FD                MOV     R5,A
8103B4 900425            MOV     DPTR,#SystemParameter+05H
8103B7 E0                MOVX    A,@DPTR
8103B8 FE                MOV     R6,A
8103B9 A3                INC     DPTR
8103BA E0                MOVX    A,@DPTR
8103BB FF                MOV     R7,A
8103BC A51280056C        ECALL   ?C?UIDIV
8103C1 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8103C4 EE                MOV     A,R6
8103C5 F0                MOVX    @DPTR,A
8103C6 A3                INC     DPTR
8103C7 EF                MOV     A,R7
8103C8 F0                MOVX    @DPTR,A
8103C9 900468            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 670


8103CC E0                MOVX    A,@DPTR
8103CD FC                MOV     R4,A
8103CE A3                INC     DPTR
8103CF E0                MOVX    A,@DPTR
8103D0 FD                MOV     R5,A
8103D1 900425            MOV     DPTR,#SystemParameter+05H
8103D4         
  179: 					break;					
8103D4 020F5E            LJMP    ?C0441?SYSPARAMSET
  180: 				}
  181: 			}
8103D7         ?C0027?SYSPARAMSET:
  182: 			else
  183: 			{				
  184: 				//Trace( "\n set IP val \n");
  185: 				j = *len;											
8103D7 90175A            MOV     DPTR,#len
8103DA E0                MOVX    A,@DPTR
8103DB FE                MOV     R6,A
8103DC A3                INC     DPTR
8103DD E0                MOVX    A,@DPTR
8103DE F582              MOV     DPL,A
8103E0 8E83              MOV     DPH,R6
8103E2 E0                MOVX    A,@DPTR
8103E3 90175C            MOV     DPTR,#j
8103E6 F0                MOVX    @DPTR,A
  186: 				if( j == 0 )
8103E7 7003              JNZ     $ + 5H
8103E9 02256F            LJMP    ?C0351?SYSPARAMSET
  187: 					break;
8103EC         ?C0033?SYSPARAMSET:
  188: 				SystemParameter.HopperCoinPrice3 = 0;	
8103EC E4                CLR     A
8103ED 900425            MOV     DPTR,#SystemParameter+05H
8103F0 F0                MOVX    @DPTR,A
8103F1 A3                INC     DPTR
8103F2 F0                MOVX    @DPTR,A
  189: 				for( i = 0; i < j; i ++ )
8103F3 90175D            MOV     DPTR,#i
8103F6 F0                MOVX    @DPTR,A
8103F7         ?C0034?SYSPARAMSET:
8103F7 90175C            MOV     DPTR,#j
8103FA E0                MOVX    A,@DPTR
8103FB FF                MOV     R7,A
8103FC A3                INC     DPTR
8103FD E0                MOVX    A,@DPTR
8103FE FE                MOV     R6,A
8103FF C3                CLR     C
810400 9F                SUBB    A,R7
810401 5044              JNC     ?C0035?SYSPARAMSET
  190: 				{
  191: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
810403 901758            MOV     DPTR,#InStr
810406 E0                MOVX    A,@DPTR
810407 FC                MOV     R4,A
810408 A3                INC     DPTR
810409 E0                MOVX    A,@DPTR
81040A 2E                ADD     A,R6
81040B F582              MOV     DPL,A
81040D E4                CLR     A
81040E 3C                ADDC    A,R4
81040F F583              MOV     DPH,A
810411 E0                MOVX    A,@DPTR
810412 FF                MOV     R7,A
810413 C3                CLR     C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 671


810414 9400              SUBB    A,#00H
810416 4027              JC      ?C0036?SYSPARAMSET
810418 EF                MOV     A,R7
810419 D3                SETB    C
81041A 9409              SUBB    A,#09H
81041C 5021              JNC     ?C0036?SYSPARAMSET
  192: 						SystemParameter.HopperCoinPrice3 = SystemParameter.HopperCoinPrice3*10 + *( InStr + i );						
81041E EF                MOV     A,R7
81041F FB                MOV     R3,A
810420 7A00              MOV     R2,#00H
810422 900425            MOV     DPTR,#SystemParameter+05H
810425 E0                MOVX    A,@DPTR
810426 FE                MOV     R6,A
810427 A3                INC     DPTR
810428 E0                MOVX    A,@DPTR
810429 FF                MOV     R7,A
81042A 7C00              MOV     R4,#00H
81042C 7D0A              MOV     R5,#0AH
81042E A512800559        ECALL   ?C?IMUL
810433 EF                MOV     A,R7
810434 2B                ADD     A,R3
810435 FF                MOV     R7,A
810436 EA                MOV     A,R2
810437 3E                ADDC    A,R6
810438 900425            MOV     DPTR,#SystemParameter+05H
81043B F0                MOVX    @DPTR,A
81043C A3                INC     DPTR
81043D EF                MOV     A,R7
81043E F0                MOVX    @DPTR,A
  193: 				}										
81043F         ?C0036?SYSPARAMSET:
81043F 90175D            MOV     DPTR,#i
810442 E0                MOVX    A,@DPTR
810443 04                INC     A
810444 F0                MOVX    @DPTR,A
810445 80B0              SJMP    ?C0034?SYSPARAMSET
810447         ?C0035?SYSPARAMSET:
  194: 				SystemSave = 1;
810447 D22E              SETB    SystemSave
  195: 			}			
  196: 		break;		
810449 02256F            LJMP    ?C0351?SYSPARAMSET
  197: 		case 3://允许多次购买	
81044C         ?C0038?SYSPARAMSET:
  198: 			if( OutInFlag == 0 )
81044C 201A26            JB      OutInFlag,?C0039?SYSPARAMSET
  199: 			{				
  200: 				sprintf( OutStr, "%bu", SystemParameter.IsMuliVerd );			
81044F 901756            MOV     DPTR,#OutStr
810452 E0                MOVX    A,@DPTR
810453 FE                MOV     R6,A
810454 A3                INC     DPTR
810455 E0                MOVX    A,@DPTR
810456 AA06              MOV     R2,AR6
810458 F9                MOV     R1,A
810459 7B00              MOV     R3,#?C?XDATASEG
81045B C003              PUSH    AR3
81045D C002              PUSH    AR2
81045F C001              PUSH    AR1
810461 7B80              MOV     R3,#BYTE2 08010A9H
810463 7A10              MOV     R2,#HIGH 08010A9H
810465 79A9              MOV     R1,#LOW 08010A9H
810467 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81046A A5128007B6        ECALL   ?C?PSTXDATA
81046F 900428            MOV     DPTR,#SystemParameter+08H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 672


  201: 				*len = 1;
  202: 			}
810472 0224EA            LJMP    ?C0428?SYSPARAMSET
810475         ?C0039?SYSPARAMSET:
  203: 			else
  204: 			{
  205: 				j = *len;
810475 90175A            MOV     DPTR,#len
810478 E0                MOVX    A,@DPTR
810479 FE                MOV     R6,A
81047A A3                INC     DPTR
81047B E0                MOVX    A,@DPTR
81047C F582              MOV     DPL,A
81047E 8E83              MOV     DPH,R6
810480 E0                MOVX    A,@DPTR
810481 90175C            MOV     DPTR,#j
810484 F0                MOVX    @DPTR,A
  206: 				if( j == 0 )
810485 7003              JNZ     $ + 5H
810487 02256F            LJMP    ?C0351?SYSPARAMSET
  207: 					break;
81048A         ?C0041?SYSPARAMSET:
  208: 				if( j > 1 )
81048A 90175C            MOV     DPTR,#j
81048D E0                MOVX    A,@DPTR
81048E D3                SETB    C
81048F 9401              SUBB    A,#01H
810491 4003              JC      ?C0042?SYSPARAMSET
  209: 					j = 1;
810493 7401              MOV     A,#01H
810495 F0                MOVX    @DPTR,A
810496         ?C0042?SYSPARAMSET:
  210: 				for( i = 0; i < j; i ++ )
810496 E4                CLR     A
810497 90175D            MOV     DPTR,#i
81049A F0                MOVX    @DPTR,A
81049B         ?C0043?SYSPARAMSET:
81049B 90175C            MOV     DPTR,#j
81049E E0                MOVX    A,@DPTR
81049F FF                MOV     R7,A
8104A0 A3                INC     DPTR
8104A1 E0                MOVX    A,@DPTR
8104A2 FE                MOV     R6,A
8104A3 C3                CLR     C
8104A4 9F                SUBB    A,R7
8104A5 502A              JNC     ?C0044?SYSPARAMSET
  211: 				{
  212: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
8104A7 901758            MOV     DPTR,#InStr
8104AA E0                MOVX    A,@DPTR
8104AB FC                MOV     R4,A
8104AC A3                INC     DPTR
8104AD E0                MOVX    A,@DPTR
8104AE 2E                ADD     A,R6
8104AF F582              MOV     DPL,A
8104B1 E4                CLR     A
8104B2 3C                ADDC    A,R4
8104B3 F583              MOV     DPH,A
8104B5 E0                MOVX    A,@DPTR
8104B6 FF                MOV     R7,A
8104B7 C3                CLR     C
8104B8 9400              SUBB    A,#00H
8104BA 400D              JC      ?C0045?SYSPARAMSET
8104BC EF                MOV     A,R7
8104BD D3                SETB    C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 673


8104BE 9409              SUBB    A,#09H
8104C0 5007              JNC     ?C0045?SYSPARAMSET
  213: 					{
  214: 						SystemParameter.IsMuliVerd = *( InStr + i );
8104C2 900428            MOV     DPTR,#SystemParameter+08H
8104C5 EF                MOV     A,R7
8104C6 F0                MOVX    @DPTR,A
  215: 						break;
8104C7 8008              SJMP    ?C0044?SYSPARAMSET
  216: 					}
  217: 				}
8104C9         ?C0045?SYSPARAMSET:
8104C9 90175D            MOV     DPTR,#i
8104CC E0                MOVX    A,@DPTR
8104CD 04                INC     A
8104CE F0                MOVX    @DPTR,A
8104CF 80CA              SJMP    ?C0043?SYSPARAMSET
8104D1         ?C0044?SYSPARAMSET:
  218: 				if( SystemParameter.IsMuliVerd != 1 )
8104D1 900428            MOV     DPTR,#SystemParameter+08H
8104D4 E0                MOVX    A,@DPTR
8104D5 6401              XRL     A,#01H
8104D7 6005              JZ      ?C0047?SYSPARAMSET
  219: 					SystemParameter.Min = 0;	
8104D9 E4                CLR     A
8104DA A3                INC     DPTR
8104DB F0                MOVX    @DPTR,A
8104DC A3                INC     DPTR
8104DD F0                MOVX    @DPTR,A
8104DE         ?C0047?SYSPARAMSET:
  220: 				SystemSave = 1;
8104DE D22E              SETB    SystemSave
  221: 			}
  222: 		break;
8104E0 02256F            LJMP    ?C0351?SYSPARAMSET
  223: 		case 4://允许退币	
8104E3         ?C0048?SYSPARAMSET:
  224: 			if( OutInFlag == 0 )
8104E3 201A26            JB      OutInFlag,?C0049?SYSPARAMSET
  225: 			{				
  226: 				sprintf( OutStr, "%bu", SystemParameter.RefundPermission );			
8104E6 901756            MOV     DPTR,#OutStr
8104E9 E0                MOVX    A,@DPTR
8104EA FE                MOV     R6,A
8104EB A3                INC     DPTR
8104EC E0                MOVX    A,@DPTR
8104ED AA06              MOV     R2,AR6
8104EF F9                MOV     R1,A
8104F0 7B00              MOV     R3,#?C?XDATASEG
8104F2 C003              PUSH    AR3
8104F4 C002              PUSH    AR2
8104F6 C001              PUSH    AR1
8104F8 7B80              MOV     R3,#BYTE2 08010A9H
8104FA 7A10              MOV     R2,#HIGH 08010A9H
8104FC 79A9              MOV     R1,#LOW 08010A9H
8104FE 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810501 A5128007B6        ECALL   ?C?PSTXDATA
810506 900420            MOV     DPTR,#SystemParameter
810509         
  227: 				*len = 1;
  228: 			}
810509 0224EA            LJMP    ?C0428?SYSPARAMSET
81050C         ?C0049?SYSPARAMSET:
  229: 			else
  230: 			{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 674


  231: 				j = *len;
81050C 90175A            MOV     DPTR,#len
81050F E0                MOVX    A,@DPTR
810510 FE                MOV     R6,A
810511 A3                INC     DPTR
810512 E0                MOVX    A,@DPTR
810513 F582              MOV     DPL,A
810515 8E83              MOV     DPH,R6
810517 E0                MOVX    A,@DPTR
810518 90175C            MOV     DPTR,#j
81051B F0                MOVX    @DPTR,A
  232: 				if( j == 0 )
81051C 7003              JNZ     $ + 5H
81051E 02256F            LJMP    ?C0351?SYSPARAMSET
  233: 					break;
810521         ?C0051?SYSPARAMSET:
  234: 				if( j > 1 )
810521 90175C            MOV     DPTR,#j
810524 E0                MOVX    A,@DPTR
810525 D3                SETB    C
810526 9401              SUBB    A,#01H
810528 4003              JC      ?C0052?SYSPARAMSET
  235: 					j = 1;
81052A 7401              MOV     A,#01H
81052C F0                MOVX    @DPTR,A
81052D         ?C0052?SYSPARAMSET:
  236: 				for( i = 0; i < j; i ++ )
81052D E4                CLR     A
81052E 90175D            MOV     DPTR,#i
810531 F0                MOVX    @DPTR,A
810532         ?C0053?SYSPARAMSET:
810532 90175C            MOV     DPTR,#j
810535 E0                MOVX    A,@DPTR
810536 FF                MOV     R7,A
810537 A3                INC     DPTR
810538 E0                MOVX    A,@DPTR
810539 FE                MOV     R6,A
81053A C3                CLR     C
81053B 9F                SUBB    A,R7
81053C 502A              JNC     ?C0054?SYSPARAMSET
  237: 				{
  238: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
81053E 901758            MOV     DPTR,#InStr
810541 E0                MOVX    A,@DPTR
810542 FC                MOV     R4,A
810543 A3                INC     DPTR
810544 E0                MOVX    A,@DPTR
810545 2E                ADD     A,R6
810546 F582              MOV     DPL,A
810548 E4                CLR     A
810549 3C                ADDC    A,R4
81054A F583              MOV     DPH,A
81054C E0                MOVX    A,@DPTR
81054D FF                MOV     R7,A
81054E C3                CLR     C
81054F 9400              SUBB    A,#00H
810551 400D              JC      ?C0055?SYSPARAMSET
810553 EF                MOV     A,R7
810554 D3                SETB    C
810555 9409              SUBB    A,#09H
810557 5007              JNC     ?C0055?SYSPARAMSET
  239: 					{
  240: 						SystemParameter.RefundPermission = *( InStr + i );
810559 900420            MOV     DPTR,#SystemParameter
81055C EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 675


81055D F0                MOVX    @DPTR,A
  241: 						break;
81055E 8008              SJMP    ?C0054?SYSPARAMSET
  242: 					}
  243: 				}		
810560         ?C0055?SYSPARAMSET:
810560 90175D            MOV     DPTR,#i
810563 E0                MOVX    A,@DPTR
810564 04                INC     A
810565 F0                MOVX    @DPTR,A
810566 80CA              SJMP    ?C0053?SYSPARAMSET
810568         ?C0054?SYSPARAMSET:
  244: 				SystemSave = 1;
810568 D22E              SETB    SystemSave
  245: 			}
  246: 		break;
81056A 02256F            LJMP    ?C0351?SYSPARAMSET
  247: 		case 5://是否允许开启纸币器	
81056D         ?C0057?SYSPARAMSET:
  248: 			if( OutInFlag == 0 )
81056D 201A26            JB      OutInFlag,?C0058?SYSPARAMSET
  249: 			{				
  250: 				sprintf( OutStr, "%bu", SystemParameter.BillNo );			
810570 901756            MOV     DPTR,#OutStr
810573 E0                MOVX    A,@DPTR
810574 FE                MOV     R6,A
810575 A3                INC     DPTR
810576 E0                MOVX    A,@DPTR
810577 AA06              MOV     R2,AR6
810579 F9                MOV     R1,A
81057A 7B00              MOV     R3,#?C?XDATASEG
81057C C003              PUSH    AR3
81057E C002              PUSH    AR2
810580 C001              PUSH    AR1
810582 7B80              MOV     R3,#BYTE2 08010A9H
810584 7A10              MOV     R2,#HIGH 08010A9H
810586 79A9              MOV     R1,#LOW 08010A9H
810588 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81058B A5128007B6        ECALL   ?C?PSTXDATA
810590 900427            MOV     DPTR,#SystemParameter+07H
810593         
  251: 				*len = 1;
  252: 			}
810593 0224EA            LJMP    ?C0428?SYSPARAMSET
810596         ?C0058?SYSPARAMSET:
  253: 			else
  254: 			{
  255: 				j = *len;
810596 90175A            MOV     DPTR,#len
810599 E0                MOVX    A,@DPTR
81059A FE                MOV     R6,A
81059B A3                INC     DPTR
81059C E0                MOVX    A,@DPTR
81059D F582              MOV     DPL,A
81059F 8E83              MOV     DPH,R6
8105A1 E0                MOVX    A,@DPTR
8105A2 90175C            MOV     DPTR,#j
8105A5 F0                MOVX    @DPTR,A
  256: 				if( j == 0 )
8105A6 7003              JNZ     $ + 5H
8105A8 02256F            LJMP    ?C0351?SYSPARAMSET
  257: 					break;
8105AB         ?C0060?SYSPARAMSET:
  258: 				if( j > 1 )
8105AB 90175C            MOV     DPTR,#j
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 676


8105AE E0                MOVX    A,@DPTR
8105AF D3                SETB    C
8105B0 9401              SUBB    A,#01H
8105B2 4003              JC      ?C0061?SYSPARAMSET
  259: 					j = 1;
8105B4 7401              MOV     A,#01H
8105B6 F0                MOVX    @DPTR,A
8105B7         ?C0061?SYSPARAMSET:
  260: 				for( i = 0; i < j; i ++ )
8105B7 E4                CLR     A
8105B8 90175D            MOV     DPTR,#i
8105BB F0                MOVX    @DPTR,A
8105BC         ?C0062?SYSPARAMSET:
8105BC 90175C            MOV     DPTR,#j
8105BF E0                MOVX    A,@DPTR
8105C0 FF                MOV     R7,A
8105C1 A3                INC     DPTR
8105C2 E0                MOVX    A,@DPTR
8105C3 FE                MOV     R6,A
8105C4 C3                CLR     C
8105C5 9F                SUBB    A,R7
8105C6 502A              JNC     ?C0063?SYSPARAMSET
  261: 				{
  262: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
8105C8 901758            MOV     DPTR,#InStr
8105CB E0                MOVX    A,@DPTR
8105CC FC                MOV     R4,A
8105CD A3                INC     DPTR
8105CE E0                MOVX    A,@DPTR
8105CF 2E                ADD     A,R6
8105D0 F582              MOV     DPL,A
8105D2 E4                CLR     A
8105D3 3C                ADDC    A,R4
8105D4 F583              MOV     DPH,A
8105D6 E0                MOVX    A,@DPTR
8105D7 FF                MOV     R7,A
8105D8 C3                CLR     C
8105D9 9400              SUBB    A,#00H
8105DB 400D              JC      ?C0064?SYSPARAMSET
8105DD EF                MOV     A,R7
8105DE D3                SETB    C
8105DF 9409              SUBB    A,#09H
8105E1 5007              JNC     ?C0064?SYSPARAMSET
  263: 					{
  264: 						SystemParameter.BillNo = *( InStr + i );
8105E3 900427            MOV     DPTR,#SystemParameter+07H
8105E6 EF                MOV     A,R7
8105E7 F0                MOVX    @DPTR,A
  265: 						break;
8105E8 8008              SJMP    ?C0063?SYSPARAMSET
  266: 					}
  267: 				}		
8105EA         ?C0064?SYSPARAMSET:
8105EA 90175D            MOV     DPTR,#i
8105ED E0                MOVX    A,@DPTR
8105EE 04                INC     A
8105EF F0                MOVX    @DPTR,A
8105F0 80CA              SJMP    ?C0062?SYSPARAMSET
8105F2         ?C0063?SYSPARAMSET:
  268: 				SystemSave = 1;
8105F2 D22E              SETB    SystemSave
  269: 			}
  270: 		break;
8105F4 02256F            LJMP    ?C0351?SYSPARAMSET
  271: 		case 6://是否开启手机模块	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 677


8105F7         ?C0066?SYSPARAMSET:
  272: 			if( OutInFlag == 0 )
8105F7 201A26            JB      OutInFlag,?C0067?SYSPARAMSET
  273: 			{				
  274: 				sprintf( OutStr, "%bu", SystemParameter.MobileON );			
8105FA 901756            MOV     DPTR,#OutStr
8105FD E0                MOVX    A,@DPTR
8105FE FE                MOV     R6,A
8105FF A3                INC     DPTR
810600 E0                MOVX    A,@DPTR
810601 AA06              MOV     R2,AR6
810603 F9                MOV     R1,A
810604 7B00              MOV     R3,#?C?XDATASEG
810606 C003              PUSH    AR3
810608 C002              PUSH    AR2
81060A C001              PUSH    AR1
81060C 7B80              MOV     R3,#BYTE2 08010A9H
81060E 7A10              MOV     R2,#HIGH 08010A9H
810610 79A9              MOV     R1,#LOW 08010A9H
810612 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810615 A5128007B6        ECALL   ?C?PSTXDATA
81061A 900446            MOV     DPTR,#SystemParameter+026H
81061D         
  275: 				*len = 1;
  276: 			}
81061D 0224EA            LJMP    ?C0428?SYSPARAMSET
810620         ?C0067?SYSPARAMSET:
  277: 			else
  278: 			{
  279: 				j = *len;
810620 90175A            MOV     DPTR,#len
810623 E0                MOVX    A,@DPTR
810624 FE                MOV     R6,A
810625 A3                INC     DPTR
810626 E0                MOVX    A,@DPTR
810627 F582              MOV     DPL,A
810629 8E83              MOV     DPH,R6
81062B E0                MOVX    A,@DPTR
81062C 90175C            MOV     DPTR,#j
81062F F0                MOVX    @DPTR,A
  280: 				if( j == 0 )
810630 7003              JNZ     $ + 5H
810632 02256F            LJMP    ?C0351?SYSPARAMSET
  281: 					break;
810635         ?C0069?SYSPARAMSET:
  282: 				if( j > 1 )
810635 90175C            MOV     DPTR,#j
810638 E0                MOVX    A,@DPTR
810639 D3                SETB    C
81063A 9401              SUBB    A,#01H
81063C 4003              JC      ?C0070?SYSPARAMSET
  283: 					j = 1;				
81063E 7401              MOV     A,#01H
810640 F0                MOVX    @DPTR,A
810641         ?C0070?SYSPARAMSET:
  284: 				SystemParameter.MobileON = *( InStr + i );				
810641 90175D            MOV     DPTR,#i
810644 E0                MOVX    A,@DPTR
810645 FF                MOV     R7,A
810646 901758            MOV     DPTR,#InStr
810649 E0                MOVX    A,@DPTR
81064A FC                MOV     R4,A
81064B A3                INC     DPTR
81064C E0                MOVX    A,@DPTR
81064D 2F                ADD     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 678


81064E F582              MOV     DPL,A
810650 E4                CLR     A
810651 3C                ADDC    A,R4
810652 F583              MOV     DPH,A
810654 E0                MOVX    A,@DPTR
810655 900446            MOV     DPTR,#SystemParameter+026H
  285: 				SystemSave = 1;
  286: 			}
  287: 		break;
810658 020CD0            LJMP    ?C0429?SYSPARAMSET
  288: 		case 7://再交易低限额
81065B         ?C0071?SYSPARAMSET:
  289: 			if( OutInFlag == 0 )
81065B 301A03            JNB     OutInFlag,$ + 6H
81065E 02073B            LJMP    ?C0072?SYSPARAMSET
  290: 			{				
  291: 				switch( SystemParameter.curUnit )
810661 900468            MOV     DPTR,#SystemParameter+048H
810664 E0                MOVX    A,@DPTR
810665 FE                MOV     R6,A
810666 A3                INC     DPTR
810667 E0                MOVX    A,@DPTR
810668 FF                MOV     R7,A
810669 EE                MOV     A,R6
81066A 6003              JZ      $ + 5H
81066C 02256F            LJMP    ?C0351?SYSPARAMSET
81066F EF                MOV     A,R7
810670 24F6              ADD     A,#0F6H
810672 6031              JZ      ?C0075?SYSPARAMSET
810674 24A6              ADD     A,#0A6H
810676 6078              JZ      ?C0076?SYSPARAMSET
810678 2463              ADD     A,#063H
81067A 6003              JZ      $ + 5H
81067C 02256F            LJMP    ?C0351?SYSPARAMSET
  292: 				{
  293: 					case 1:
81067F         ?C0074?SYSPARAMSET:
  294: 						*len = sprintf( OutStr, "%u", SystemParameter.Min );
81067F 901756            MOV     DPTR,#OutStr
810682 E0                MOVX    A,@DPTR
810683 FE                MOV     R6,A
810684 A3                INC     DPTR
810685 E0                MOVX    A,@DPTR
810686 AA06              MOV     R2,AR6
810688 F9                MOV     R1,A
810689 7B00              MOV     R3,#?C?XDATASEG
81068B C003              PUSH    AR3
81068D C002              PUSH    AR2
81068F C001              PUSH    AR1
810691 7B80              MOV     R3,#BYTE2 0801098H
810693 7A10              MOV     R2,#HIGH 0801098H
810695 7998              MOV     R1,#LOW 0801098H
810697 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81069A A5128007B6        ECALL   ?C?PSTXDATA
81069F 900429            MOV     DPTR,#SystemParameter+09H
8106A2         
  295: 					break;				
8106A2 020F08            LJMP    ?C0439?SYSPARAMSET
  296: 					case 10:
8106A5         ?C0075?SYSPARAMSET:
  297: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.Min/SystemParameter.curUnit,SystemParameter.Min%SystemPara
>> meter.curUnit);
8106A5 901756            MOV     DPTR,#OutStr
8106A8 E0                MOVX    A,@DPTR
8106A9 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 679


8106AA A3                INC     DPTR
8106AB E0                MOVX    A,@DPTR
8106AC AA06              MOV     R2,AR6
8106AE F9                MOV     R1,A
8106AF 7B00              MOV     R3,#?C?XDATASEG
8106B1 C003              PUSH    AR3
8106B3 C002              PUSH    AR2
8106B5 C001              PUSH    AR1
8106B7 7B80              MOV     R3,#BYTE2 080109BH
8106B9 7A10              MOV     R2,#HIGH 080109BH
8106BB 799B              MOV     R1,#LOW 080109BH
8106BD 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8106C0 A5128007B6        ECALL   ?C?PSTXDATA
8106C5 900468            MOV     DPTR,#SystemParameter+048H
8106C8 E0                MOVX    A,@DPTR
8106C9 FC                MOV     R4,A
8106CA A3                INC     DPTR
8106CB E0                MOVX    A,@DPTR
8106CC FD                MOV     R5,A
8106CD 900429            MOV     DPTR,#SystemParameter+09H
8106D0 E0                MOVX    A,@DPTR
8106D1 FE                MOV     R6,A
8106D2 A3                INC     DPTR
8106D3 E0                MOVX    A,@DPTR
8106D4 FF                MOV     R7,A
8106D5 A51280056C        ECALL   ?C?UIDIV
8106DA 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8106DD EE                MOV     A,R6
8106DE F0                MOVX    @DPTR,A
8106DF A3                INC     DPTR
8106E0 EF                MOV     A,R7
8106E1 F0                MOVX    @DPTR,A
8106E2 900468            MOV     DPTR,#SystemParameter+048H
8106E5 E0                MOVX    A,@DPTR
8106E6 FC                MOV     R4,A
8106E7 A3                INC     DPTR
8106E8 E0                MOVX    A,@DPTR
8106E9 FD                MOV     R5,A
8106EA 900429            MOV     DPTR,#SystemParameter+09H
8106ED         
  298: 					break;
8106ED 020F5E            LJMP    ?C0441?SYSPARAMSET
  299: 					case 100:
8106F0         ?C0076?SYSPARAMSET:
  300: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.Min/SystemParameter.curUnit,SystemParameter.Min%SystemPa
>> rameter.curUnit);
8106F0 901756            MOV     DPTR,#OutStr
8106F3 E0                MOVX    A,@DPTR
8106F4 FE                MOV     R6,A
8106F5 A3                INC     DPTR
8106F6 E0                MOVX    A,@DPTR
8106F7 AA06              MOV     R2,AR6
8106F9 F9                MOV     R1,A
8106FA 7B00              MOV     R3,#?C?XDATASEG
8106FC C003              PUSH    AR3
8106FE C002              PUSH    AR2
810700 C001              PUSH    AR1
810702 7B80              MOV     R3,#BYTE2 08010A1H
810704 7A10              MOV     R2,#HIGH 08010A1H
810706 79A1              MOV     R1,#LOW 08010A1H
810708 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81070B A5128007B6        ECALL   ?C?PSTXDATA
810710 900468            MOV     DPTR,#SystemParameter+048H
810713 E0                MOVX    A,@DPTR
810714 FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 680


810715 A3                INC     DPTR
810716 E0                MOVX    A,@DPTR
810717 FD                MOV     R5,A
810718 900429            MOV     DPTR,#SystemParameter+09H
81071B E0                MOVX    A,@DPTR
81071C FE                MOV     R6,A
81071D A3                INC     DPTR
81071E E0                MOVX    A,@DPTR
81071F FF                MOV     R7,A
810720 A51280056C        ECALL   ?C?UIDIV
810725 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810728 EE                MOV     A,R6
810729 F0                MOVX    @DPTR,A
81072A A3                INC     DPTR
81072B EF                MOV     A,R7
81072C F0                MOVX    @DPTR,A
81072D 900468            MOV     DPTR,#SystemParameter+048H
810730 E0                MOVX    A,@DPTR
810731 FC                MOV     R4,A
810732 A3                INC     DPTR
810733 E0                MOVX    A,@DPTR
810734 FD                MOV     R5,A
810735 900429            MOV     DPTR,#SystemParameter+09H
810738         
  301: 					break;					
810738 020F5E            LJMP    ?C0441?SYSPARAMSET
  302: 				}
  303: 			}
81073B         ?C0072?SYSPARAMSET:
  304: 			else
  305: 			{				
  306: 				//Trace( "\n set IP val \n");
  307: 				j = *len;											
81073B 90175A            MOV     DPTR,#len
81073E E0                MOVX    A,@DPTR
81073F FE                MOV     R6,A
810740 A3                INC     DPTR
810741 E0                MOVX    A,@DPTR
810742 F582              MOV     DPL,A
810744 8E83              MOV     DPH,R6
810746 E0                MOVX    A,@DPTR
810747 90175C            MOV     DPTR,#j
81074A F0                MOVX    @DPTR,A
  308: 				if( j == 0 )
81074B 7003              JNZ     $ + 5H
81074D 02256F            LJMP    ?C0351?SYSPARAMSET
  309: 					break;
810750         ?C0078?SYSPARAMSET:
  310: 				SystemParameter.Min = 0;	
810750 E4                CLR     A
810751 900429            MOV     DPTR,#SystemParameter+09H
810754 F0                MOVX    @DPTR,A
810755 A3                INC     DPTR
810756 F0                MOVX    @DPTR,A
  311: 				for( i = 0; i < j; i ++ )
810757 90175D            MOV     DPTR,#i
81075A F0                MOVX    @DPTR,A
81075B         ?C0079?SYSPARAMSET:
81075B 90175C            MOV     DPTR,#j
81075E E0                MOVX    A,@DPTR
81075F FF                MOV     R7,A
810760 A3                INC     DPTR
810761 E0                MOVX    A,@DPTR
810762 FE                MOV     R6,A
810763 C3                CLR     C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 681


810764 9F                SUBB    A,R7
810765 5044              JNC     ?C0080?SYSPARAMSET
  312: 				{
  313: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
810767 901758            MOV     DPTR,#InStr
81076A E0                MOVX    A,@DPTR
81076B FC                MOV     R4,A
81076C A3                INC     DPTR
81076D E0                MOVX    A,@DPTR
81076E 2E                ADD     A,R6
81076F F582              MOV     DPL,A
810771 E4                CLR     A
810772 3C                ADDC    A,R4
810773 F583              MOV     DPH,A
810775 E0                MOVX    A,@DPTR
810776 FF                MOV     R7,A
810777 C3                CLR     C
810778 9400              SUBB    A,#00H
81077A 4027              JC      ?C0081?SYSPARAMSET
81077C EF                MOV     A,R7
81077D D3                SETB    C
81077E 9409              SUBB    A,#09H
810780 5021              JNC     ?C0081?SYSPARAMSET
  314: 						SystemParameter.Min = SystemParameter.Min*10 + *( InStr + i );						
810782 EF                MOV     A,R7
810783 FB                MOV     R3,A
810784 7A00              MOV     R2,#00H
810786 900429            MOV     DPTR,#SystemParameter+09H
810789 E0                MOVX    A,@DPTR
81078A FE                MOV     R6,A
81078B A3                INC     DPTR
81078C E0                MOVX    A,@DPTR
81078D FF                MOV     R7,A
81078E 7C00              MOV     R4,#00H
810790 7D0A              MOV     R5,#0AH
810792 A512800559        ECALL   ?C?IMUL
810797 EF                MOV     A,R7
810798 2B                ADD     A,R3
810799 FF                MOV     R7,A
81079A EA                MOV     A,R2
81079B 3E                ADDC    A,R6
81079C 900429            MOV     DPTR,#SystemParameter+09H
81079F F0                MOVX    @DPTR,A
8107A0 A3                INC     DPTR
8107A1 EF                MOV     A,R7
8107A2 F0                MOVX    @DPTR,A
  315: 				}			
8107A3         ?C0081?SYSPARAMSET:
8107A3 90175D            MOV     DPTR,#i
8107A6 E0                MOVX    A,@DPTR
8107A7 04                INC     A
8107A8 F0                MOVX    @DPTR,A
8107A9 80B0              SJMP    ?C0079?SYSPARAMSET
8107AB         ?C0080?SYSPARAMSET:
  316: 				SystemSave = 1;
8107AB D22E              SETB    SystemSave
  317: 			}	
  318: 		break;	
8107AD 02256F            LJMP    ?C0351?SYSPARAMSET
  319: 		case 8://允许接收的最多钱数
8107B0         ?C0083?SYSPARAMSET:
  320: 			if( OutInFlag == 0 )
8107B0 301A03            JNB     OutInFlag,$ + 6H
8107B3 020890            LJMP    ?C0084?SYSPARAMSET
  321: 			{				
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 682


  322: 				switch( SystemParameter.curUnit )
8107B6 900468            MOV     DPTR,#SystemParameter+048H
8107B9 E0                MOVX    A,@DPTR
8107BA FE                MOV     R6,A
8107BB A3                INC     DPTR
8107BC E0                MOVX    A,@DPTR
8107BD FF                MOV     R7,A
8107BE EE                MOV     A,R6
8107BF 6003              JZ      $ + 5H
8107C1 02256F            LJMP    ?C0351?SYSPARAMSET
8107C4 EF                MOV     A,R7
8107C5 24F6              ADD     A,#0F6H
8107C7 6031              JZ      ?C0087?SYSPARAMSET
8107C9 24A6              ADD     A,#0A6H
8107CB 6078              JZ      ?C0088?SYSPARAMSET
8107CD 2463              ADD     A,#063H
8107CF 6003              JZ      $ + 5H
8107D1 02256F            LJMP    ?C0351?SYSPARAMSET
  323: 				{
  324: 					case 1:
8107D4         ?C0086?SYSPARAMSET:
  325: 						*len = sprintf( OutStr, "%u", SystemParameter.BanknoteMax );
8107D4 901756            MOV     DPTR,#OutStr
8107D7 E0                MOVX    A,@DPTR
8107D8 FE                MOV     R6,A
8107D9 A3                INC     DPTR
8107DA E0                MOVX    A,@DPTR
8107DB AA06              MOV     R2,AR6
8107DD F9                MOV     R1,A
8107DE 7B00              MOV     R3,#?C?XDATASEG
8107E0 C003              PUSH    AR3
8107E2 C002              PUSH    AR2
8107E4 C001              PUSH    AR1
8107E6 7B80              MOV     R3,#BYTE2 0801098H
8107E8 7A10              MOV     R2,#HIGH 0801098H
8107EA 7998              MOV     R1,#LOW 0801098H
8107EC 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8107EF A5128007B6        ECALL   ?C?PSTXDATA
8107F4 90042B            MOV     DPTR,#SystemParameter+0BH
8107F7         
  326: 					break;				
8107F7 020F08            LJMP    ?C0439?SYSPARAMSET
  327: 					case 10:
8107FA         ?C0087?SYSPARAMSET:
  328: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.BanknoteMax/SystemParameter.curUnit,SystemParameter.Bankno
>> teMax%SystemParameter.curUnit);
8107FA 901756            MOV     DPTR,#OutStr
8107FD E0                MOVX    A,@DPTR
8107FE FE                MOV     R6,A
8107FF A3                INC     DPTR
810800 E0                MOVX    A,@DPTR
810801 AA06              MOV     R2,AR6
810803 F9                MOV     R1,A
810804 7B00              MOV     R3,#?C?XDATASEG
810806 C003              PUSH    AR3
810808 C002              PUSH    AR2
81080A C001              PUSH    AR1
81080C 7B80              MOV     R3,#BYTE2 080109BH
81080E 7A10              MOV     R2,#HIGH 080109BH
810810 799B              MOV     R1,#LOW 080109BH
810812 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810815 A5128007B6        ECALL   ?C?PSTXDATA
81081A 900468            MOV     DPTR,#SystemParameter+048H
81081D E0                MOVX    A,@DPTR
81081E FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 683


81081F A3                INC     DPTR
810820 E0                MOVX    A,@DPTR
810821 FD                MOV     R5,A
810822 90042B            MOV     DPTR,#SystemParameter+0BH
810825 E0                MOVX    A,@DPTR
810826 FE                MOV     R6,A
810827 A3                INC     DPTR
810828 E0                MOVX    A,@DPTR
810829 FF                MOV     R7,A
81082A A51280056C        ECALL   ?C?UIDIV
81082F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810832 EE                MOV     A,R6
810833 F0                MOVX    @DPTR,A
810834 A3                INC     DPTR
810835 EF                MOV     A,R7
810836 F0                MOVX    @DPTR,A
810837 900468            MOV     DPTR,#SystemParameter+048H
81083A E0                MOVX    A,@DPTR
81083B FC                MOV     R4,A
81083C A3                INC     DPTR
81083D E0                MOVX    A,@DPTR
81083E FD                MOV     R5,A
81083F 90042B            MOV     DPTR,#SystemParameter+0BH
810842         
  329: 					break;
810842 020F5E            LJMP    ?C0441?SYSPARAMSET
  330: 					case 100:
810845         ?C0088?SYSPARAMSET:
  331: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.BanknoteMax/SystemParameter.curUnit,SystemParameter.Bank
>> noteMax%SystemParameter.curUnit);
810845 901756            MOV     DPTR,#OutStr
810848 E0                MOVX    A,@DPTR
810849 FE                MOV     R6,A
81084A A3                INC     DPTR
81084B E0                MOVX    A,@DPTR
81084C AA06              MOV     R2,AR6
81084E F9                MOV     R1,A
81084F 7B00              MOV     R3,#?C?XDATASEG
810851 C003              PUSH    AR3
810853 C002              PUSH    AR2
810855 C001              PUSH    AR1
810857 7B80              MOV     R3,#BYTE2 08010A1H
810859 7A10              MOV     R2,#HIGH 08010A1H
81085B 79A1              MOV     R1,#LOW 08010A1H
81085D 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810860 A5128007B6        ECALL   ?C?PSTXDATA
810865 900468            MOV     DPTR,#SystemParameter+048H
810868 E0                MOVX    A,@DPTR
810869 FC                MOV     R4,A
81086A A3                INC     DPTR
81086B E0                MOVX    A,@DPTR
81086C FD                MOV     R5,A
81086D 90042B            MOV     DPTR,#SystemParameter+0BH
810870 E0                MOVX    A,@DPTR
810871 FE                MOV     R6,A
810872 A3                INC     DPTR
810873 E0                MOVX    A,@DPTR
810874 FF                MOV     R7,A
810875 A51280056C        ECALL   ?C?UIDIV
81087A 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81087D EE                MOV     A,R6
81087E F0                MOVX    @DPTR,A
81087F A3                INC     DPTR
810880 EF                MOV     A,R7
810881 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 684


810882 900468            MOV     DPTR,#SystemParameter+048H
810885 E0                MOVX    A,@DPTR
810886 FC                MOV     R4,A
810887 A3                INC     DPTR
810888 E0                MOVX    A,@DPTR
810889 FD                MOV     R5,A
81088A 90042B            MOV     DPTR,#SystemParameter+0BH
81088D         
  332: 					break;					
81088D 020F5E            LJMP    ?C0441?SYSPARAMSET
  333: 				}
  334: 			}
810890         ?C0084?SYSPARAMSET:
  335: 			else
  336: 			{
  337: 				j = *len;
810890 90175A            MOV     DPTR,#len
810893 E0                MOVX    A,@DPTR
810894 FE                MOV     R6,A
810895 A3                INC     DPTR
810896 E0                MOVX    A,@DPTR
810897 F582              MOV     DPL,A
810899 8E83              MOV     DPH,R6
81089B E0                MOVX    A,@DPTR
81089C 90175C            MOV     DPTR,#j
81089F F0                MOVX    @DPTR,A
  338: 				if( j == 0 )
8108A0 7003              JNZ     $ + 5H
8108A2 02256F            LJMP    ?C0351?SYSPARAMSET
  339: 					break;
8108A5         ?C0090?SYSPARAMSET:
  340: 				if( j > 5 )
8108A5 90175C            MOV     DPTR,#j
8108A8 E0                MOVX    A,@DPTR
8108A9 D3                SETB    C
8108AA 9405              SUBB    A,#05H
8108AC 4003              JC      ?C0091?SYSPARAMSET
  341: 					j = 5;
8108AE 7405              MOV     A,#05H
8108B0 F0                MOVX    @DPTR,A
8108B1         ?C0091?SYSPARAMSET:
  342: 				SystemParameter.BanknoteMax = 0;
8108B1 E4                CLR     A
8108B2 90042B            MOV     DPTR,#SystemParameter+0BH
8108B5 F0                MOVX    @DPTR,A
8108B6 A3                INC     DPTR
8108B7 F0                MOVX    @DPTR,A
  343: 				for( i = 0; i < j; i ++ )
8108B8 90175D            MOV     DPTR,#i
8108BB F0                MOVX    @DPTR,A
8108BC         ?C0092?SYSPARAMSET:
8108BC 90175C            MOV     DPTR,#j
8108BF E0                MOVX    A,@DPTR
8108C0 FF                MOV     R7,A
8108C1 A3                INC     DPTR
8108C2 E0                MOVX    A,@DPTR
8108C3 FE                MOV     R6,A
8108C4 C3                CLR     C
8108C5 9F                SUBB    A,R7
8108C6 5044              JNC     ?C0093?SYSPARAMSET
  344: 				{
  345: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
8108C8 901758            MOV     DPTR,#InStr
8108CB E0                MOVX    A,@DPTR
8108CC FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 685


8108CD A3                INC     DPTR
8108CE E0                MOVX    A,@DPTR
8108CF 2E                ADD     A,R6
8108D0 F582              MOV     DPL,A
8108D2 E4                CLR     A
8108D3 3C                ADDC    A,R4
8108D4 F583              MOV     DPH,A
8108D6 E0                MOVX    A,@DPTR
8108D7 FF                MOV     R7,A
8108D8 C3                CLR     C
8108D9 9400              SUBB    A,#00H
8108DB 4027              JC      ?C0094?SYSPARAMSET
8108DD EF                MOV     A,R7
8108DE D3                SETB    C
8108DF 9409              SUBB    A,#09H
8108E1 5021              JNC     ?C0094?SYSPARAMSET
  346: 						SystemParameter.BanknoteMax = SystemParameter.BanknoteMax * 10 + *( InStr + i );					
8108E3 EF                MOV     A,R7
8108E4 FB                MOV     R3,A
8108E5 7A00              MOV     R2,#00H
8108E7 90042B            MOV     DPTR,#SystemParameter+0BH
8108EA E0                MOVX    A,@DPTR
8108EB FE                MOV     R6,A
8108EC A3                INC     DPTR
8108ED E0                MOVX    A,@DPTR
8108EE FF                MOV     R7,A
8108EF 7C00              MOV     R4,#00H
8108F1 7D0A              MOV     R5,#0AH
8108F3 A512800559        ECALL   ?C?IMUL
8108F8 EF                MOV     A,R7
8108F9 2B                ADD     A,R3
8108FA FF                MOV     R7,A
8108FB EA                MOV     A,R2
8108FC 3E                ADDC    A,R6
8108FD 90042B            MOV     DPTR,#SystemParameter+0BH
810900 F0                MOVX    @DPTR,A
810901 A3                INC     DPTR
810902 EF                MOV     A,R7
810903 F0                MOVX    @DPTR,A
  347: 				}
810904         ?C0094?SYSPARAMSET:
810904 90175D            MOV     DPTR,#i
810907 E0                MOVX    A,@DPTR
810908 04                INC     A
810909 F0                MOVX    @DPTR,A
81090A 80B0              SJMP    ?C0092?SYSPARAMSET
81090C         ?C0093?SYSPARAMSET:
  348: 				SystemSave = 1;
81090C D22E              SETB    SystemSave
  349: 			}			
  350: 		break;
81090E 02256F            LJMP    ?C0351?SYSPARAMSET
  351: 		case 9://疑问金额
810911         ?C0096?SYSPARAMSET:
  352: 			if( OutInFlag == 0 )
810911 301A03            JNB     OutInFlag,$ + 6H
810914 0209F1            LJMP    ?C0097?SYSPARAMSET
  353: 			{				
  354: 				switch( SystemParameter.curUnit )
810917 900468            MOV     DPTR,#SystemParameter+048H
81091A E0                MOVX    A,@DPTR
81091B FE                MOV     R6,A
81091C A3                INC     DPTR
81091D E0                MOVX    A,@DPTR
81091E FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 686


81091F EE                MOV     A,R6
810920 6003              JZ      $ + 5H
810922 02256F            LJMP    ?C0351?SYSPARAMSET
810925 EF                MOV     A,R7
810926 24F6              ADD     A,#0F6H
810928 6031              JZ      ?C0100?SYSPARAMSET
81092A 24A6              ADD     A,#0A6H
81092C 6078              JZ      ?C0101?SYSPARAMSET
81092E 2463              ADD     A,#063H
810930 6003              JZ      $ + 5H
810932 02256F            LJMP    ?C0351?SYSPARAMSET
  355: 				{
  356: 					case 1:
810935         ?C0099?SYSPARAMSET:
  357: 						*len = sprintf( OutStr, "%u", SystemParameter.DoubtCash );
810935 901756            MOV     DPTR,#OutStr
810938 E0                MOVX    A,@DPTR
810939 FE                MOV     R6,A
81093A A3                INC     DPTR
81093B E0                MOVX    A,@DPTR
81093C AA06              MOV     R2,AR6
81093E F9                MOV     R1,A
81093F 7B00              MOV     R3,#?C?XDATASEG
810941 C003              PUSH    AR3
810943 C002              PUSH    AR2
810945 C001              PUSH    AR1
810947 7B80              MOV     R3,#BYTE2 0801098H
810949 7A10              MOV     R2,#HIGH 0801098H
81094B 7998              MOV     R1,#LOW 0801098H
81094D 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810950 A5128007B6        ECALL   ?C?PSTXDATA
810955 90042D            MOV     DPTR,#SystemParameter+0DH
810958         
  358: 					break;				
810958 020F08            LJMP    ?C0439?SYSPARAMSET
  359: 					case 10:
81095B         ?C0100?SYSPARAMSET:
  360: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.DoubtCash/SystemParameter.curUnit,SystemParameter.DoubtCas
>> h%SystemParameter.curUnit);
81095B 901756            MOV     DPTR,#OutStr
81095E E0                MOVX    A,@DPTR
81095F FE                MOV     R6,A
810960 A3                INC     DPTR
810961 E0                MOVX    A,@DPTR
810962 AA06              MOV     R2,AR6
810964 F9                MOV     R1,A
810965 7B00              MOV     R3,#?C?XDATASEG
810967 C003              PUSH    AR3
810969 C002              PUSH    AR2
81096B C001              PUSH    AR1
81096D 7B80              MOV     R3,#BYTE2 080109BH
81096F 7A10              MOV     R2,#HIGH 080109BH
810971 799B              MOV     R1,#LOW 080109BH
810973 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810976 A5128007B6        ECALL   ?C?PSTXDATA
81097B 900468            MOV     DPTR,#SystemParameter+048H
81097E E0                MOVX    A,@DPTR
81097F FC                MOV     R4,A
810980 A3                INC     DPTR
810981 E0                MOVX    A,@DPTR
810982 FD                MOV     R5,A
810983 90042D            MOV     DPTR,#SystemParameter+0DH
810986 E0                MOVX    A,@DPTR
810987 FE                MOV     R6,A
810988 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 687


810989 E0                MOVX    A,@DPTR
81098A FF                MOV     R7,A
81098B A51280056C        ECALL   ?C?UIDIV
810990 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810993 EE                MOV     A,R6
810994 F0                MOVX    @DPTR,A
810995 A3                INC     DPTR
810996 EF                MOV     A,R7
810997 F0                MOVX    @DPTR,A
810998 900468            MOV     DPTR,#SystemParameter+048H
81099B E0                MOVX    A,@DPTR
81099C FC                MOV     R4,A
81099D A3                INC     DPTR
81099E E0                MOVX    A,@DPTR
81099F FD                MOV     R5,A
8109A0 90042D            MOV     DPTR,#SystemParameter+0DH
8109A3         
  361: 					break;
8109A3 020F5E            LJMP    ?C0441?SYSPARAMSET
  362: 					case 100:
8109A6         ?C0101?SYSPARAMSET:
  363: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.DoubtCash/SystemParameter.curUnit,SystemParameter.DoubtC
>> ash%SystemParameter.curUnit);
8109A6 901756            MOV     DPTR,#OutStr
8109A9 E0                MOVX    A,@DPTR
8109AA FE                MOV     R6,A
8109AB A3                INC     DPTR
8109AC E0                MOVX    A,@DPTR
8109AD AA06              MOV     R2,AR6
8109AF F9                MOV     R1,A
8109B0 7B00              MOV     R3,#?C?XDATASEG
8109B2 C003              PUSH    AR3
8109B4 C002              PUSH    AR2
8109B6 C001              PUSH    AR1
8109B8 7B80              MOV     R3,#BYTE2 08010A1H
8109BA 7A10              MOV     R2,#HIGH 08010A1H
8109BC 79A1              MOV     R1,#LOW 08010A1H
8109BE 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8109C1 A5128007B6        ECALL   ?C?PSTXDATA
8109C6 900468            MOV     DPTR,#SystemParameter+048H
8109C9 E0                MOVX    A,@DPTR
8109CA FC                MOV     R4,A
8109CB A3                INC     DPTR
8109CC E0                MOVX    A,@DPTR
8109CD FD                MOV     R5,A
8109CE 90042D            MOV     DPTR,#SystemParameter+0DH
8109D1 E0                MOVX    A,@DPTR
8109D2 FE                MOV     R6,A
8109D3 A3                INC     DPTR
8109D4 E0                MOVX    A,@DPTR
8109D5 FF                MOV     R7,A
8109D6 A51280056C        ECALL   ?C?UIDIV
8109DB 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8109DE EE                MOV     A,R6
8109DF F0                MOVX    @DPTR,A
8109E0 A3                INC     DPTR
8109E1 EF                MOV     A,R7
8109E2 F0                MOVX    @DPTR,A
8109E3 900468            MOV     DPTR,#SystemParameter+048H
8109E6 E0                MOVX    A,@DPTR
8109E7 FC                MOV     R4,A
8109E8 A3                INC     DPTR
8109E9 E0                MOVX    A,@DPTR
8109EA FD                MOV     R5,A
8109EB 90042D            MOV     DPTR,#SystemParameter+0DH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 688


8109EE         
  364: 					break;					
8109EE 020F5E            LJMP    ?C0441?SYSPARAMSET
  365: 				}
  366: 			}
8109F1         ?C0097?SYSPARAMSET:
  367: 			else
  368: 			{
  369: 				j = *len;
8109F1 90175A            MOV     DPTR,#len
8109F4 E0                MOVX    A,@DPTR
8109F5 FE                MOV     R6,A
8109F6 A3                INC     DPTR
8109F7 E0                MOVX    A,@DPTR
8109F8 F582              MOV     DPL,A
8109FA 8E83              MOV     DPH,R6
8109FC E0                MOVX    A,@DPTR
8109FD 90175C            MOV     DPTR,#j
810A00 F0                MOVX    @DPTR,A
  370: 				if( j == 0 )
810A01 7003              JNZ     $ + 5H
810A03 02256F            LJMP    ?C0351?SYSPARAMSET
  371: 					break;
810A06         ?C0103?SYSPARAMSET:
  372: 				if( j > 1 )
810A06 90175C            MOV     DPTR,#j
810A09 E0                MOVX    A,@DPTR
810A0A D3                SETB    C
810A0B 9401              SUBB    A,#01H
810A0D 4003              JC      ?C0104?SYSPARAMSET
  373: 					j = 1;			
810A0F 7401              MOV     A,#01H
810A11 F0                MOVX    @DPTR,A
810A12         ?C0104?SYSPARAMSET:
  374: 				if( *( InStr ) == 0 ) 					
810A12 901758            MOV     DPTR,#InStr
810A15 E0                MOVX    A,@DPTR
810A16 FE                MOV     R6,A
810A17 A3                INC     DPTR
810A18 E0                MOVX    A,@DPTR
810A19 F582              MOV     DPL,A
810A1B 8E83              MOV     DPH,R6
810A1D E0                MOVX    A,@DPTR
810A1E 7006              JNZ     ?C0105?SYSPARAMSET
  375: 					SystemParameter.DoubtCash = 0;				
810A20 90042D            MOV     DPTR,#SystemParameter+0DH
810A23 F0                MOVX    @DPTR,A
810A24 A3                INC     DPTR
810A25 F0                MOVX    @DPTR,A
810A26         ?C0105?SYSPARAMSET:
  376: 				SystemSave = 1;
810A26 D22E              SETB    SystemSave
  377: 			}			
  378: 		break;
810A28 02256F            LJMP    ?C0351?SYSPARAMSET
  379: 		case 10://取本机ID号码				
810A2B         ?C0106?SYSPARAMSET:
  380: 			if(  OutInFlag == 0 )
810A2B 201A6A            JB      OutInFlag,?C0107?SYSPARAMSET
  381: 			{
  382: 				for( i = 0; i < 5; i++ )
810A2E E4                CLR     A
810A2F 90175D            MOV     DPTR,#i
810A32 F0                MOVX    @DPTR,A
810A33         ?C0108?SYSPARAMSET:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 689


810A33 90175D            MOV     DPTR,#i
810A36 E0                MOVX    A,@DPTR
810A37 FF                MOV     R7,A
810A38 C3                CLR     C
810A39 9405              SUBB    A,#05H
810A3B 4003              JC      $ + 5H
810A3D 02256F            LJMP    ?C0351?SYSPARAMSET
  383: 					*len += sprintf( OutStr + i, "%bu", SystemParameter.VmID[i] );
810A40 901757            MOV     DPTR,#OutStr+01H
810A43 E0                MOVX    A,@DPTR
810A44 2F                ADD     A,R7
810A45 FF                MOV     R7,A
810A46 901756            MOV     DPTR,#OutStr
810A49 E0                MOVX    A,@DPTR
810A4A 3400              ADDC    A,#00H
810A4C FA                MOV     R2,A
810A4D A907              MOV     R1,AR7
810A4F 7B00              MOV     R3,#?C?XDATASEG
810A51 C003              PUSH    AR3
810A53 C002              PUSH    AR2
810A55 C001              PUSH    AR1
810A57 7B80              MOV     R3,#BYTE2 08010A9H
810A59 7A10              MOV     R2,#HIGH 08010A9H
810A5B 79A9              MOV     R1,#LOW 08010A9H
810A5D 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810A60 A5128007B6        ECALL   ?C?PSTXDATA
810A65 90175D            MOV     DPTR,#i
810A68 E0                MOVX    A,@DPTR
810A69 2431              ADD     A,#LOW SystemParameter+011H
810A6B F582              MOV     DPL,A
810A6D E4                CLR     A
810A6E 3404              ADDC    A,#HIGH SystemParameter+011H
810A70 F583              MOV     DPH,A
810A72 E0                MOVX    A,@DPTR
810A73 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810A76 F0                MOVX    @DPTR,A
810A77 D001              POP     AR1
810A79 D002              POP     AR2
810A7B D003              POP     AR3
810A7D A512800949        ECALL   _sprintf
810A82 90175A            MOV     DPTR,#len
810A85 E0                MOVX    A,@DPTR
810A86 FC                MOV     R4,A
810A87 A3                INC     DPTR
810A88 E0                MOVX    A,@DPTR
810A89 F582              MOV     DPL,A
810A8B 8C83              MOV     DPH,R4
810A8D E0                MOVX    A,@DPTR
810A8E 2F                ADD     A,R7
810A8F F0                MOVX    @DPTR,A
810A90 90175D            MOV     DPTR,#i
810A93 E0                MOVX    A,@DPTR
810A94 04                INC     A
810A95 F0                MOVX    @DPTR,A
810A96 809B              SJMP    ?C0108?SYSPARAMSET
  384: 			}			
810A98         ?C0107?SYSPARAMSET:
  385: 			else//存入
  386: 			{		
  387: 				j = *len;
810A98 90175A            MOV     DPTR,#len
810A9B E0                MOVX    A,@DPTR
810A9C FE                MOV     R6,A
810A9D A3                INC     DPTR
810A9E E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 690


810A9F F582              MOV     DPL,A
810AA1 8E83              MOV     DPH,R6
810AA3 E0                MOVX    A,@DPTR
810AA4 90175C            MOV     DPTR,#j
810AA7 F0                MOVX    @DPTR,A
  388: 				memset( SystemParameter.VmID, 0, sizeof( SystemParameter.VmID ) );				
810AA8 7E00              MOV     R6,#00H
810AAA 7F05              MOV     R7,#05H
810AAC 7D00              MOV     R5,#00H
810AAE 7B00              MOV     R3,#?C?XDATASEG
810AB0 7A04              MOV     R2,#HIGH SystemParameter+011H
810AB2 7931              MOV     R1,#LOW SystemParameter+011H
810AB4 A5128008A6        ECALL   ?C?MEMSET
  389: 				for( i = 0; i < j; i ++ )
810AB9 E4                CLR     A
810ABA 90175D            MOV     DPTR,#i
810ABD F0                MOVX    @DPTR,A
810ABE         ?C0112?SYSPARAMSET:
810ABE 90175C            MOV     DPTR,#j
810AC1 E0                MOVX    A,@DPTR
810AC2 FF                MOV     R7,A
810AC3 A3                INC     DPTR
810AC4 E0                MOVX    A,@DPTR
810AC5 FE                MOV     R6,A
810AC6 C3                CLR     C
810AC7 9F                SUBB    A,R7
810AC8 503A              JNC     ?C0113?SYSPARAMSET
  390: 				{
  391: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
810ACA 901758            MOV     DPTR,#InStr
810ACD E0                MOVX    A,@DPTR
810ACE FC                MOV     R4,A
810ACF A3                INC     DPTR
810AD0 E0                MOVX    A,@DPTR
810AD1 FD                MOV     R5,A
810AD2 2E                ADD     A,R6
810AD3 F582              MOV     DPL,A
810AD5 E4                CLR     A
810AD6 3C                ADDC    A,R4
810AD7 F583              MOV     DPH,A
810AD9 E0                MOVX    A,@DPTR
810ADA FF                MOV     R7,A
810ADB C3                CLR     C
810ADC 9400              SUBB    A,#00H
810ADE 401C              JC      ?C0114?SYSPARAMSET
810AE0 EF                MOV     A,R7
810AE1 D3                SETB    C
810AE2 9409              SUBB    A,#09H
810AE4 5016              JNC     ?C0114?SYSPARAMSET
  392: 						SystemParameter.VmID[i] = *( InStr + i );					
810AE6 ED                MOV     A,R5
810AE7 2E                ADD     A,R6
810AE8 F582              MOV     DPL,A
810AEA E4                CLR     A
810AEB 3C                ADDC    A,R4
810AEC F583              MOV     DPH,A
810AEE E0                MOVX    A,@DPTR
810AEF FF                MOV     R7,A
810AF0 7431              MOV     A,#LOW SystemParameter+011H
810AF2 2E                ADD     A,R6
810AF3 F582              MOV     DPL,A
810AF5 E4                CLR     A
810AF6 3404              ADDC    A,#HIGH SystemParameter+011H
810AF8 F583              MOV     DPH,A
810AFA EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 691


810AFB F0                MOVX    @DPTR,A
  393: 				}
810AFC         ?C0114?SYSPARAMSET:
810AFC 90175D            MOV     DPTR,#i
810AFF E0                MOVX    A,@DPTR
810B00 04                INC     A
810B01 F0                MOVX    @DPTR,A
810B02 80BA              SJMP    ?C0112?SYSPARAMSET
810B04         ?C0113?SYSPARAMSET:
  394: 				SystemSave = 1;
810B04 D22E              SETB    SystemSave
  395: 			}						
  396: 		break;
810B06 02256F            LJMP    ?C0351?SYSPARAMSET
  397: 		case 11://GSM模块号码
810B09         ?C0116?SYSPARAMSET:
  398: 			if( OutInFlag == 0 )
810B09 301A03            JNB     OutInFlag,$ + 6H
810B0C 020C10            LJMP    ?C0117?SYSPARAMSET
  399: 			{
  400: 				for( i = 0; i < 15; i++ )
810B0F E4                CLR     A
810B10 90175D            MOV     DPTR,#i
810B13 F0                MOVX    @DPTR,A
810B14         ?C0118?SYSPARAMSET:
810B14 90175D            MOV     DPTR,#i
810B17 E0                MOVX    A,@DPTR
810B18 FF                MOV     R7,A
810B19 C3                CLR     C
810B1A 940F              SUBB    A,#0FH
810B1C 4003              JC      $ + 5H
810B1E 020BF0            LJMP    ?C0119?SYSPARAMSET
  401: 				{
  402: 					if( SystemParameter.GSMNO[i] != 0xff )
810B21 7436              MOV     A,#LOW SystemParameter+016H
810B23 2F                ADD     A,R7
810B24 F582              MOV     DPL,A
810B26 E4                CLR     A
810B27 3404              ADDC    A,#HIGH SystemParameter+016H
810B29 F583              MOV     DPH,A
810B2B E0                MOVX    A,@DPTR
810B2C F4                CPL     A
810B2D 7003              JNZ     $ + 5H
810B2F 020BF0            LJMP    ?C0119?SYSPARAMSET
  403: 					{
  404: 						if( SystemParameter.GSMNO[i] >= 0x10 )
810B32 90175D            MOV     DPTR,#i
810B35 E0                MOVX    A,@DPTR
810B36 2436              ADD     A,#LOW SystemParameter+016H
810B38 F582              MOV     DPL,A
810B3A E4                CLR     A
810B3B 3404              ADDC    A,#HIGH SystemParameter+016H
810B3D F583              MOV     DPH,A
810B3F E0                MOVX    A,@DPTR
810B40 C3                CLR     C
810B41 9410              SUBB    A,#010H
810B43 4025              JC      ?C0122?SYSPARAMSET
  405: 							*len += sprintf( OutStr + 2*i, "%2bx", SystemParameter.GSMNO[i] );	
810B45 EF                MOV     A,R7
810B46 75F002            MOV     B,#02H
810B49 A4                MUL     AB
810B4A FF                MOV     R7,A
810B4B 901757            MOV     DPTR,#OutStr+01H
810B4E E0                MOVX    A,@DPTR
810B4F 2F                ADD     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 692


810B50 FF                MOV     R7,A
810B51 901756            MOV     DPTR,#OutStr
810B54 E0                MOVX    A,@DPTR
810B55 35F0              ADDC    A,B
810B57 FA                MOV     R2,A
810B58 A907              MOV     R1,AR7
810B5A 7B00              MOV     R3,#?C?XDATASEG
810B5C C003              PUSH    AR3
810B5E C002              PUSH    AR2
810B60 C001              PUSH    AR1
810B62 7B80              MOV     R3,#BYTE2 08010ADH
810B64 7A10              MOV     R2,#HIGH 08010ADH
810B66 79AD              MOV     R1,#LOW 08010ADH
810B68 8026              SJMP    ?C0415?SYSPARAMSET
810B6A         ?C0122?SYSPARAMSET:
  406: 						else
  407: 							*len += sprintf( OutStr + 2*i, "%02bx", SystemParameter.GSMNO[i] );	
810B6A 90175D            MOV     DPTR,#i
810B6D E0                MOVX    A,@DPTR
810B6E 75F002            MOV     B,#02H
810B71 A4                MUL     AB
810B72 FF                MOV     R7,A
810B73 901757            MOV     DPTR,#OutStr+01H
810B76 E0                MOVX    A,@DPTR
810B77 2F                ADD     A,R7
810B78 FF                MOV     R7,A
810B79 901756            MOV     DPTR,#OutStr
810B7C E0                MOVX    A,@DPTR
810B7D 35F0              ADDC    A,B
810B7F FA                MOV     R2,A
810B80 A907              MOV     R1,AR7
810B82 7B00              MOV     R3,#?C?XDATASEG
810B84 C003              PUSH    AR3
810B86 C002              PUSH    AR2
810B88 C001              PUSH    AR1
810B8A 7B80              MOV     R3,#BYTE2 08010B2H
810B8C 7A10              MOV     R2,#HIGH 08010B2H
810B8E 79B2              MOV     R1,#LOW 08010B2H
810B90         
810B90 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810B93 A5128007B6        ECALL   ?C?PSTXDATA
810B98 90175D            MOV     DPTR,#i
810B9B E0                MOVX    A,@DPTR
810B9C 2436              ADD     A,#LOW SystemParameter+016H
810B9E F582              MOV     DPL,A
810BA0 E4                CLR     A
810BA1 3404              ADDC    A,#HIGH SystemParameter+016H
810BA3 F583              MOV     DPH,A
810BA5 E0                MOVX    A,@DPTR
810BA6 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810BA9 F0                MOVX    @DPTR,A
810BAA D001              POP     AR1
810BAC D002              POP     AR2
810BAE D003              POP     AR3
810BB0 A512800949        ECALL   _sprintf
810BB5 90175A            MOV     DPTR,#len
810BB8 E0                MOVX    A,@DPTR
810BB9 FC                MOV     R4,A
810BBA A3                INC     DPTR
810BBB E0                MOVX    A,@DPTR
810BBC F582              MOV     DPL,A
810BBE 8C83              MOV     DPH,R4
810BC0 E0                MOVX    A,@DPTR
810BC1 2F                ADD     A,R7
810BC2 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 693


810BC3         ?C0123?SYSPARAMSET:
  408: 						if( ( SystemParameter.GSMNO[i] & 0x0f ) == 0x0f )
810BC3 90175D            MOV     DPTR,#i
810BC6 E0                MOVX    A,@DPTR
810BC7 2436              ADD     A,#LOW SystemParameter+016H
810BC9 F582              MOV     DPL,A
810BCB E4                CLR     A
810BCC 3404              ADDC    A,#HIGH SystemParameter+016H
810BCE F583              MOV     DPH,A
810BD0 E0                MOVX    A,@DPTR
810BD1 540F              ANL     A,#0FH
810BD3 FF                MOV     R7,A
810BD4 BF0F10            CJNE    R7,#0FH,?C0120?SYSPARAMSET
  409: 						{
  410: 							(*len)--;
810BD7 90175A            MOV     DPTR,#len
810BDA E0                MOVX    A,@DPTR
810BDB FE                MOV     R6,A
810BDC A3                INC     DPTR
810BDD E0                MOVX    A,@DPTR
810BDE F582              MOV     DPL,A
810BE0 8E83              MOV     DPH,R6
810BE2 E0                MOVX    A,@DPTR
810BE3 14                DEC     A
810BE4 F0                MOVX    @DPTR,A
  411: 							break;
810BE5 8009              SJMP    ?C0119?SYSPARAMSET
  412: 						}
  413: 					}
  414: 					else
  415: 						break;				
  416: 				}
810BE7         ?C0120?SYSPARAMSET:
810BE7 90175D            MOV     DPTR,#i
810BEA E0                MOVX    A,@DPTR
810BEB 04                INC     A
810BEC F0                MOVX    @DPTR,A
810BED 020B14            LJMP    ?C0118?SYSPARAMSET
810BF0         ?C0119?SYSPARAMSET:
  417: 				OutStr[(*len)] = 0x00;
810BF0 90175A            MOV     DPTR,#len
810BF3 E0                MOVX    A,@DPTR
810BF4 FE                MOV     R6,A
810BF5 A3                INC     DPTR
810BF6 E0                MOVX    A,@DPTR
810BF7 F582              MOV     DPL,A
810BF9 8E83              MOV     DPH,R6
810BFB E0                MOVX    A,@DPTR
810BFC FF                MOV     R7,A
810BFD 901756            MOV     DPTR,#OutStr
810C00 E0                MOVX    A,@DPTR
810C01 FC                MOV     R4,A
810C02 A3                INC     DPTR
810C03 E0                MOVX    A,@DPTR
810C04 2F                ADD     A,R7
810C05 F582              MOV     DPL,A
810C07 E4                CLR     A
810C08 3C                ADDC    A,R4
810C09 F583              MOV     DPH,A
810C0B E4                CLR     A
810C0C F0                MOVX    @DPTR,A
  418: 			}
810C0D 02256F            LJMP    ?C0351?SYSPARAMSET
810C10         ?C0117?SYSPARAMSET:
  419: 			else
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 694


  420: 			{
  421: 				j = *len;
810C10 90175A            MOV     DPTR,#len
810C13 E0                MOVX    A,@DPTR
810C14 FE                MOV     R6,A
810C15 A3                INC     DPTR
810C16 E0                MOVX    A,@DPTR
810C17 F582              MOV     DPL,A
810C19 8E83              MOV     DPH,R6
810C1B E0                MOVX    A,@DPTR
810C1C 90175C            MOV     DPTR,#j
810C1F F0                MOVX    @DPTR,A
  422: 				memset( SystemParameter.GSMNO, 0, sizeof( SystemParameter.GSMNO ) );				
810C20 7E00              MOV     R6,#00H
810C22 7F10              MOV     R7,#010H
810C24 7D00              MOV     R5,#00H
810C26 7B00              MOV     R3,#?C?XDATASEG
810C28 7A04              MOV     R2,#HIGH SystemParameter+016H
810C2A 7936              MOV     R1,#LOW SystemParameter+016H
810C2C A5128008A6        ECALL   ?C?MEMSET
  423: 				for( i = 0; i < j/2; i ++ )									
810C31 E4                CLR     A
810C32 90175D            MOV     DPTR,#i
810C35 F0                MOVX    @DPTR,A
810C36         ?C0127?SYSPARAMSET:
810C36 90175C            MOV     DPTR,#j
810C39 E0                MOVX    A,@DPTR
810C3A FF                MOV     R7,A
810C3B C3                CLR     C
810C3C 13                RRC     A
810C3D FE                MOV     R6,A
810C3E A3                INC     DPTR
810C3F E0                MOVX    A,@DPTR
810C40 FD                MOV     R5,A
810C41 C3                CLR     C
810C42 9E                SUBB    A,R6
810C43 5042              JNC     ?C0128?SYSPARAMSET
  424: 					SystemParameter.GSMNO[i] = *( InStr + 2*i ) * 16 + *( InStr + 2*i + 1 );				
810C45 901758            MOV     DPTR,#InStr
810C48 E0                MOVX    A,@DPTR
810C49 FA                MOV     R2,A
810C4A A3                INC     DPTR
810C4B E0                MOVX    A,@DPTR
810C4C FB                MOV     R3,A
810C4D F582              MOV     DPL,A
810C4F 8A83              MOV     DPH,R2
810C51 75F002            MOV     B,#02H
810C54 ED                MOV     A,R5
810C55 A51280079F        ECALL   ?C?OFFXADD
810C5A E0                MOVX    A,@DPTR
810C5B C4                SWAP    A
810C5C 54F0              ANL     A,#0F0H
810C5E FE                MOV     R6,A
810C5F 8B82              MOV     DPL,R3
810C61 8A83              MOV     DPH,R2
810C63 75F002            MOV     B,#02H
810C66 ED                MOV     A,R5
810C67 A51280079F        ECALL   ?C?OFFXADD
810C6C A3                INC     DPTR
810C6D E0                MOVX    A,@DPTR
810C6E 2E                ADD     A,R6
810C6F FE                MOV     R6,A
810C70 90175D            MOV     DPTR,#i
810C73 E0                MOVX    A,@DPTR
810C74 2436              ADD     A,#LOW SystemParameter+016H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 695


810C76 F582              MOV     DPL,A
810C78 E4                CLR     A
810C79 3404              ADDC    A,#HIGH SystemParameter+016H
810C7B F583              MOV     DPH,A
810C7D EE                MOV     A,R6
810C7E F0                MOVX    @DPTR,A
810C7F 90175D            MOV     DPTR,#i
810C82 E0                MOVX    A,@DPTR
810C83 04                INC     A
810C84 F0                MOVX    @DPTR,A
810C85 80AF              SJMP    ?C0127?SYSPARAMSET
810C87         ?C0128?SYSPARAMSET:
  425: 				if( ( j%2 ) == 1 )//奇数个数字		
810C87 EF                MOV     A,R7
810C88 30E033            JNB     ACC.0,?C0130?SYSPARAMSET
  426: 					SystemParameter.GSMNO[i] = *( InStr + 2*i )*16 + 0x0f;
810C8B 901758            MOV     DPTR,#InStr
810C8E E0                MOVX    A,@DPTR
810C8F FE                MOV     R6,A
810C90 A3                INC     DPTR
810C91 E0                MOVX    A,@DPTR
810C92 F582              MOV     DPL,A
810C94 8E83              MOV     DPH,R6
810C96 C083              PUSH    DPH
810C98 C082              PUSH    DPL
810C9A 90175D            MOV     DPTR,#i
810C9D E0                MOVX    A,@DPTR
810C9E FF                MOV     R7,A
810C9F D082              POP     DPL
810CA1 D083              POP     DPH
810CA3 75F002            MOV     B,#02H
810CA6 A51280079F        ECALL   ?C?OFFXADD
810CAB E0                MOVX    A,@DPTR
810CAC C4                SWAP    A
810CAD 54F0              ANL     A,#0F0H
810CAF 240F              ADD     A,#0FH
810CB1 FE                MOV     R6,A
810CB2 7436              MOV     A,#LOW SystemParameter+016H
810CB4 2F                ADD     A,R7
810CB5 F582              MOV     DPL,A
810CB7 E4                CLR     A
810CB8 3404              ADDC    A,#HIGH SystemParameter+016H
810CBA F583              MOV     DPH,A
810CBC EE                MOV     A,R6
810CBD F0                MOVX    @DPTR,A
810CBE         ?C0130?SYSPARAMSET:
  427: 				i++;
810CBE 90175D            MOV     DPTR,#i
810CC1 E0                MOVX    A,@DPTR
810CC2 04                INC     A
810CC3 F0                MOVX    @DPTR,A
  428: 				SystemParameter.GSMNO[i] = 0xff;
810CC4 E0                MOVX    A,@DPTR
810CC5 2436              ADD     A,#LOW SystemParameter+016H
810CC7 F582              MOV     DPL,A
810CC9 E4                CLR     A
810CCA 3404              ADDC    A,#HIGH SystemParameter+016H
810CCC F583              MOV     DPH,A
810CCE 74FF              MOV     A,#0FFH
810CD0         
810CD0 F0                MOVX    @DPTR,A
  429: 				SystemSave = 1;
810CD1 D22E              SETB    SystemSave
  430: 			}
  431: 		break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 696


810CD3 02256F            LJMP    ?C0351?SYSPARAMSET
  432: 		case 12://欠客户的钱
810CD6         ?C0131?SYSPARAMSET:
  433: 			if( OutInFlag == 0 )
810CD6 301A03            JNB     OutInFlag,$ + 6H
810CD9 020DB6            LJMP    ?C0132?SYSPARAMSET
  434: 			{				
  435: 				switch( SystemParameter.curUnit )
810CDC 900468            MOV     DPTR,#SystemParameter+048H
810CDF E0                MOVX    A,@DPTR
810CE0 FE                MOV     R6,A
810CE1 A3                INC     DPTR
810CE2 E0                MOVX    A,@DPTR
810CE3 FF                MOV     R7,A
810CE4 EE                MOV     A,R6
810CE5 6003              JZ      $ + 5H
810CE7 02256F            LJMP    ?C0351?SYSPARAMSET
810CEA EF                MOV     A,R7
810CEB 24F6              ADD     A,#0F6H
810CED 6031              JZ      ?C0135?SYSPARAMSET
810CEF 24A6              ADD     A,#0A6H
810CF1 6078              JZ      ?C0136?SYSPARAMSET
810CF3 2463              ADD     A,#063H
810CF5 6003              JZ      $ + 5H
810CF7 02256F            LJMP    ?C0351?SYSPARAMSET
  436: 				{
  437: 					case 1:
810CFA         ?C0134?SYSPARAMSET:
  438: 						*len = sprintf( OutStr, "%u", SystemParameter.NotOutMax );
810CFA 901756            MOV     DPTR,#OutStr
810CFD E0                MOVX    A,@DPTR
810CFE FE                MOV     R6,A
810CFF A3                INC     DPTR
810D00 E0                MOVX    A,@DPTR
810D01 AA06              MOV     R2,AR6
810D03 F9                MOV     R1,A
810D04 7B00              MOV     R3,#?C?XDATASEG
810D06 C003              PUSH    AR3
810D08 C002              PUSH    AR2
810D0A C001              PUSH    AR1
810D0C 7B80              MOV     R3,#BYTE2 0801098H
810D0E 7A10              MOV     R2,#HIGH 0801098H
810D10 7998              MOV     R1,#LOW 0801098H
810D12 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810D15 A5128007B6        ECALL   ?C?PSTXDATA
810D1A 90042F            MOV     DPTR,#SystemParameter+0FH
810D1D         
  439: 					break;				
810D1D 020F08            LJMP    ?C0439?SYSPARAMSET
  440: 					case 10:
810D20         ?C0135?SYSPARAMSET:
  441: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.NotOutMax/SystemParameter.curUnit,SystemParameter.NotOutMa
>> x%SystemParameter.curUnit);
810D20 901756            MOV     DPTR,#OutStr
810D23 E0                MOVX    A,@DPTR
810D24 FE                MOV     R6,A
810D25 A3                INC     DPTR
810D26 E0                MOVX    A,@DPTR
810D27 AA06              MOV     R2,AR6
810D29 F9                MOV     R1,A
810D2A 7B00              MOV     R3,#?C?XDATASEG
810D2C C003              PUSH    AR3
810D2E C002              PUSH    AR2
810D30 C001              PUSH    AR1
810D32 7B80              MOV     R3,#BYTE2 080109BH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 697


810D34 7A10              MOV     R2,#HIGH 080109BH
810D36 799B              MOV     R1,#LOW 080109BH
810D38 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810D3B A5128007B6        ECALL   ?C?PSTXDATA
810D40 900468            MOV     DPTR,#SystemParameter+048H
810D43 E0                MOVX    A,@DPTR
810D44 FC                MOV     R4,A
810D45 A3                INC     DPTR
810D46 E0                MOVX    A,@DPTR
810D47 FD                MOV     R5,A
810D48 90042F            MOV     DPTR,#SystemParameter+0FH
810D4B E0                MOVX    A,@DPTR
810D4C FE                MOV     R6,A
810D4D A3                INC     DPTR
810D4E E0                MOVX    A,@DPTR
810D4F FF                MOV     R7,A
810D50 A51280056C        ECALL   ?C?UIDIV
810D55 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810D58 EE                MOV     A,R6
810D59 F0                MOVX    @DPTR,A
810D5A A3                INC     DPTR
810D5B EF                MOV     A,R7
810D5C F0                MOVX    @DPTR,A
810D5D 900468            MOV     DPTR,#SystemParameter+048H
810D60 E0                MOVX    A,@DPTR
810D61 FC                MOV     R4,A
810D62 A3                INC     DPTR
810D63 E0                MOVX    A,@DPTR
810D64 FD                MOV     R5,A
810D65 90042F            MOV     DPTR,#SystemParameter+0FH
810D68         
  442: 					break;
810D68 020F5E            LJMP    ?C0441?SYSPARAMSET
  443: 					case 100:
810D6B         ?C0136?SYSPARAMSET:
  444: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.NotOutMax/SystemParameter.curUnit,SystemParameter.NotOut
>> Max%SystemParameter.curUnit);
810D6B 901756            MOV     DPTR,#OutStr
810D6E E0                MOVX    A,@DPTR
810D6F FE                MOV     R6,A
810D70 A3                INC     DPTR
810D71 E0                MOVX    A,@DPTR
810D72 AA06              MOV     R2,AR6
810D74 F9                MOV     R1,A
810D75 7B00              MOV     R3,#?C?XDATASEG
810D77 C003              PUSH    AR3
810D79 C002              PUSH    AR2
810D7B C001              PUSH    AR1
810D7D 7B80              MOV     R3,#BYTE2 08010A1H
810D7F 7A10              MOV     R2,#HIGH 08010A1H
810D81 79A1              MOV     R1,#LOW 08010A1H
810D83 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810D86 A5128007B6        ECALL   ?C?PSTXDATA
810D8B 900468            MOV     DPTR,#SystemParameter+048H
810D8E E0                MOVX    A,@DPTR
810D8F FC                MOV     R4,A
810D90 A3                INC     DPTR
810D91 E0                MOVX    A,@DPTR
810D92 FD                MOV     R5,A
810D93 90042F            MOV     DPTR,#SystemParameter+0FH
810D96 E0                MOVX    A,@DPTR
810D97 FE                MOV     R6,A
810D98 A3                INC     DPTR
810D99 E0                MOVX    A,@DPTR
810D9A FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 698


810D9B A51280056C        ECALL   ?C?UIDIV
810DA0 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810DA3 EE                MOV     A,R6
810DA4 F0                MOVX    @DPTR,A
810DA5 A3                INC     DPTR
810DA6 EF                MOV     A,R7
810DA7 F0                MOVX    @DPTR,A
810DA8 900468            MOV     DPTR,#SystemParameter+048H
810DAB E0                MOVX    A,@DPTR
810DAC FC                MOV     R4,A
810DAD A3                INC     DPTR
810DAE E0                MOVX    A,@DPTR
810DAF FD                MOV     R5,A
810DB0 90042F            MOV     DPTR,#SystemParameter+0FH
810DB3         
  445: 					break;					
810DB3 020F5E            LJMP    ?C0441?SYSPARAMSET
  446: 				}
  447: 			}
810DB6         ?C0132?SYSPARAMSET:
  448: 			else
  449: 			{
  450: 				j = *len;
810DB6 90175A            MOV     DPTR,#len
810DB9 E0                MOVX    A,@DPTR
810DBA FE                MOV     R6,A
810DBB A3                INC     DPTR
810DBC E0                MOVX    A,@DPTR
810DBD F582              MOV     DPL,A
810DBF 8E83              MOV     DPH,R6
810DC1 E0                MOVX    A,@DPTR
810DC2 90175C            MOV     DPTR,#j
810DC5 F0                MOVX    @DPTR,A
  451: 				if( j == 0 )
810DC6 7003              JNZ     $ + 5H
810DC8 02256F            LJMP    ?C0351?SYSPARAMSET
  452: 					break;
810DCB         ?C0138?SYSPARAMSET:
  453: 				if( j > 1 )
810DCB 90175C            MOV     DPTR,#j
810DCE E0                MOVX    A,@DPTR
810DCF D3                SETB    C
810DD0 9401              SUBB    A,#01H
810DD2 4003              JC      ?C0139?SYSPARAMSET
  454: 					j = 1;			
810DD4 7401              MOV     A,#01H
810DD6 F0                MOVX    @DPTR,A
810DD7         ?C0139?SYSPARAMSET:
  455: 				if( *( InStr ) == 0 ) 					
810DD7 901758            MOV     DPTR,#InStr
810DDA E0                MOVX    A,@DPTR
810DDB FE                MOV     R6,A
810DDC A3                INC     DPTR
810DDD E0                MOVX    A,@DPTR
810DDE F582              MOV     DPL,A
810DE0 8E83              MOV     DPH,R6
810DE2 E0                MOVX    A,@DPTR
810DE3 7006              JNZ     ?C0140?SYSPARAMSET
  456: 					SystemParameter.NotOutMax = 0;				
810DE5 90042F            MOV     DPTR,#SystemParameter+0FH
810DE8 F0                MOVX    @DPTR,A
810DE9 A3                INC     DPTR
810DEA F0                MOVX    @DPTR,A
810DEB         ?C0140?SYSPARAMSET:
  457: 				SystemSave = 1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 699


810DEB D22E              SETB    SystemSave
  458: 			}			
  459: 		break;
810DED 02256F            LJMP    ?C0351?SYSPARAMSET
  460: 		//----------------------------------------------------------------------------------------------------
  461:         case 13:
810DF0         ?C0141?SYSPARAMSET:
  462: 			if( OutInFlag == 0 )
810DF0 201A2A            JB      OutInFlag,?C0142?SYSPARAMSET
  463: 			{					
  464: 					*len = sprintf( OutStr, "%bu", SystemParameter.decimal );  //u--->"0-1", "1-256", "2-512"; bu
810DF3 901756            MOV     DPTR,#OutStr
810DF6 E0                MOVX    A,@DPTR
810DF7 FE                MOV     R6,A
810DF8 A3                INC     DPTR
810DF9 E0                MOVX    A,@DPTR
810DFA AA06              MOV     R2,AR6
810DFC F9                MOV     R1,A
810DFD 7B00              MOV     R3,#?C?XDATASEG
810DFF C003              PUSH    AR3
810E01 C002              PUSH    AR2
810E03 C001              PUSH    AR1
810E05 7B80              MOV     R3,#BYTE2 08010A9H
810E07 7A10              MOV     R2,#HIGH 08010A9H
810E09 79A9              MOV     R1,#LOW 08010A9H
810E0B 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810E0E A5128007B6        ECALL   ?C?PSTXDATA
810E13 900467            MOV     DPTR,#SystemParameter+047H
810E16 E0                MOVX    A,@DPTR
810E17 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
  465: 			}
810E1A 022427            LJMP    ?C0483?SYSPARAMSET
810E1D         ?C0142?SYSPARAMSET:
  466: 			else
  467: 			{
  468: 				j = *len;
810E1D 90175A            MOV     DPTR,#len
810E20 E0                MOVX    A,@DPTR
810E21 FE                MOV     R6,A
810E22 A3                INC     DPTR
810E23 E0                MOVX    A,@DPTR
810E24 F582              MOV     DPL,A
810E26 8E83              MOV     DPH,R6
810E28 E0                MOVX    A,@DPTR
810E29 90175C            MOV     DPTR,#j
810E2C F0                MOVX    @DPTR,A
  469: 				if( j == 0 )
810E2D 7003              JNZ     $ + 5H
810E2F 02256F            LJMP    ?C0351?SYSPARAMSET
  470: 					break;
810E32         ?C0144?SYSPARAMSET:
  471: 				if( j > 1 )
810E32 90175C            MOV     DPTR,#j
810E35 E0                MOVX    A,@DPTR
810E36 D3                SETB    C
810E37 9401              SUBB    A,#01H
810E39 4003              JC      ?C0145?SYSPARAMSET
  472: 					j = 1;
810E3B 7401              MOV     A,#01H
810E3D F0                MOVX    @DPTR,A
810E3E         ?C0145?SYSPARAMSET:
  473: 				SystemParameter.decimal = 0;
810E3E E4                CLR     A
810E3F 900467            MOV     DPTR,#SystemParameter+047H
810E42 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 700


  474: 				for( i = 0; i < j; i ++ )
810E43 90175D            MOV     DPTR,#i
810E46 F0                MOVX    @DPTR,A
810E47         ?C0146?SYSPARAMSET:
810E47 90175C            MOV     DPTR,#j
810E4A E0                MOVX    A,@DPTR
810E4B FF                MOV     R7,A
810E4C A3                INC     DPTR
810E4D E0                MOVX    A,@DPTR
810E4E FE                MOV     R6,A
810E4F C3                CLR     C
810E50 9F                SUBB    A,R7
810E51 5028              JNC     ?C0147?SYSPARAMSET
  475: 				{
  476: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
810E53 901758            MOV     DPTR,#InStr
810E56 E0                MOVX    A,@DPTR
810E57 FC                MOV     R4,A
810E58 A3                INC     DPTR
810E59 E0                MOVX    A,@DPTR
810E5A 2E                ADD     A,R6
810E5B F582              MOV     DPL,A
810E5D E4                CLR     A
810E5E 3C                ADDC    A,R4
810E5F F583              MOV     DPH,A
810E61 E0                MOVX    A,@DPTR
810E62 FF                MOV     R7,A
810E63 C3                CLR     C
810E64 9400              SUBB    A,#00H
810E66 400B              JC      ?C0148?SYSPARAMSET
810E68 EF                MOV     A,R7
810E69 D3                SETB    C
810E6A 9409              SUBB    A,#09H
810E6C 5005              JNC     ?C0148?SYSPARAMSET
  477: 						SystemParameter.decimal = *( InStr + i );
810E6E 900467            MOV     DPTR,#SystemParameter+047H
810E71 EF                MOV     A,R7
810E72 F0                MOVX    @DPTR,A
  478: 				}
810E73         ?C0148?SYSPARAMSET:
810E73 90175D            MOV     DPTR,#i
810E76 E0                MOVX    A,@DPTR
810E77 04                INC     A
810E78 F0                MOVX    @DPTR,A
810E79 80CC              SJMP    ?C0146?SYSPARAMSET
810E7B         ?C0147?SYSPARAMSET:
  479: 
  480: 				if( !( SystemParameter.decimal <= 2) )
810E7B 900467            MOV     DPTR,#SystemParameter+047H
810E7E E0                MOVX    A,@DPTR
810E7F D3                SETB    C
810E80 9402              SUBB    A,#02H
810E82 5002              JNC     ?C0151?SYSPARAMSET
810E84 8001              SJMP    ?C0152?SYSPARAMSET
810E86         ?C0151?SYSPARAMSET:
810E86 C3                CLR     C
810E87         ?C0152?SYSPARAMSET:
810E87 4005              JC      ?C0150?SYSPARAMSET
  481: 				{
  482: 					SystemParameter.decimal = 0;
810E89 E4                CLR     A
810E8A 900467            MOV     DPTR,#SystemParameter+047H
810E8D F0                MOVX    @DPTR,A
  483: 				}
810E8E         ?C0150?SYSPARAMSET:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 701


  484: 
  485: 				if( SystemParameter.decimal == 0 )
810E8E 900467            MOV     DPTR,#SystemParameter+047H
810E91 E0                MOVX    A,@DPTR
810E92 7007              JNZ     ?C0153?SYSPARAMSET
  486: 				    SystemParameter.curUnit = 1;
810E94 A3                INC     DPTR
810E95 F0                MOVX    @DPTR,A
810E96 A3                INC     DPTR
810E97 04                INC     A
810E98 F0                MOVX    @DPTR,A
810E99 801E              SJMP    ?C0154?SYSPARAMSET
810E9B         ?C0153?SYSPARAMSET:
  487: 				else if( SystemParameter.decimal == 1 )
810E9B 900467            MOV     DPTR,#SystemParameter+047H
810E9E E0                MOVX    A,@DPTR
810E9F B40109            CJNE    A,#01H,?C0155?SYSPARAMSET
  488: 				    SystemParameter.curUnit = 10;
810EA2 A3                INC     DPTR
810EA3 E4                CLR     A
810EA4 F0                MOVX    @DPTR,A
810EA5 A3                INC     DPTR
810EA6 740A              MOV     A,#0AH
810EA8 F0                MOVX    @DPTR,A
810EA9 800E              SJMP    ?C0154?SYSPARAMSET
810EAB         ?C0155?SYSPARAMSET:
  489: 				else if( SystemParameter.decimal == 2 )
810EAB 900467            MOV     DPTR,#SystemParameter+047H
810EAE E0                MOVX    A,@DPTR
810EAF B40207            CJNE    A,#02H,?C0154?SYSPARAMSET
  490: 				    SystemParameter.curUnit = 100;
810EB2 A3                INC     DPTR
810EB3 E4                CLR     A
810EB4 F0                MOVX    @DPTR,A
810EB5 A3                INC     DPTR
810EB6 7464              MOV     A,#064H
810EB8 F0                MOVX    @DPTR,A
810EB9         ?C0154?SYSPARAMSET:
  491: 				SystemSave = 1;
810EB9 D22E              SETB    SystemSave
  492: 			}			
  493: 			break;
810EBB 02256F            LJMP    ?C0351?SYSPARAMSET
  494:         case 14: //# 1 note
810EBE         ?C0158?SYSPARAMSET:
  495:         if( OutInFlag == 0 )
810EBE 301A03            JNB     OutInFlag,$ + 6H
810EC1 020FCE            LJMP    ?C0159?SYSPARAMSET
  496: 			{			
  497: 				switch( SystemParameter.curUnit )
810EC4 900468            MOV     DPTR,#SystemParameter+048H
810EC7 E0                MOVX    A,@DPTR
810EC8 FE                MOV     R6,A
810EC9 A3                INC     DPTR
810ECA E0                MOVX    A,@DPTR
810ECB FF                MOV     R7,A
810ECC EE                MOV     A,R6
810ECD 6003              JZ      $ + 5H
810ECF 02256F            LJMP    ?C0351?SYSPARAMSET
810ED2 EF                MOV     A,R7
810ED3 24F6              ADD     A,#0F6H
810ED5 603F              JZ      ?C0162?SYSPARAMSET
810ED7 24A6              ADD     A,#0A6H
810ED9 7003              JNZ     $ + 5H
810EDB 020F72            LJMP    ?C0163?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 702


810EDE 2463              ADD     A,#063H
810EE0 6003              JZ      $ + 5H
810EE2 02256F            LJMP    ?C0351?SYSPARAMSET
  498: 				{
  499: 					case 1:
810EE5         ?C0161?SYSPARAMSET:
  500: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[0] );
810EE5 901756            MOV     DPTR,#OutStr
810EE8 E0                MOVX    A,@DPTR
810EE9 FE                MOV     R6,A
810EEA A3                INC     DPTR
810EEB E0                MOVX    A,@DPTR
810EEC AA06              MOV     R2,AR6
810EEE F9                MOV     R1,A
810EEF 7B00              MOV     R3,#?C?XDATASEG
810EF1 C003              PUSH    AR3
810EF3 C002              PUSH    AR2
810EF5 C001              PUSH    AR1
810EF7 7B80              MOV     R3,#BYTE2 0801098H
810EF9 7A10              MOV     R2,#HIGH 0801098H
810EFB 7998              MOV     R1,#LOW 0801098H
810EFD 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810F00 A5128007B6        ECALL   ?C?PSTXDATA
810F05 900449            MOV     DPTR,#SystemParameter+029H
810F08         
810F08 E0                MOVX    A,@DPTR
810F09 FF                MOV     R7,A
810F0A A3                INC     DPTR
810F0B E0                MOVX    A,@DPTR
810F0C 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810F0F CF                XCH     A,R7
810F10 F0                MOVX    @DPTR,A
810F11 A3                INC     DPTR
810F12 EF                MOV     A,R7
810F13         
  501: 					break;				
810F13 022427            LJMP    ?C0483?SYSPARAMSET
  502: 					case 10:
810F16         ?C0162?SYSPARAMSET:
  503: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[0]/SystemParameter.curUnit,SystemParameter.billV
>> alue[0]%SystemParameter.curUnit );
810F16 901756            MOV     DPTR,#OutStr
810F19 E0                MOVX    A,@DPTR
810F1A FE                MOV     R6,A
810F1B A3                INC     DPTR
810F1C E0                MOVX    A,@DPTR
810F1D AA06              MOV     R2,AR6
810F1F F9                MOV     R1,A
810F20 7B00              MOV     R3,#?C?XDATASEG
810F22 C003              PUSH    AR3
810F24 C002              PUSH    AR2
810F26 C001              PUSH    AR1
810F28 7B80              MOV     R3,#BYTE2 080109BH
810F2A 7A10              MOV     R2,#HIGH 080109BH
810F2C 799B              MOV     R1,#LOW 080109BH
810F2E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810F31 A5128007B6        ECALL   ?C?PSTXDATA
810F36 900468            MOV     DPTR,#SystemParameter+048H
810F39 E0                MOVX    A,@DPTR
810F3A FC                MOV     R4,A
810F3B A3                INC     DPTR
810F3C E0                MOVX    A,@DPTR
810F3D FD                MOV     R5,A
810F3E 900449            MOV     DPTR,#SystemParameter+029H
810F41 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 703


810F42 FE                MOV     R6,A
810F43 A3                INC     DPTR
810F44 E0                MOVX    A,@DPTR
810F45 FF                MOV     R7,A
810F46 A51280056C        ECALL   ?C?UIDIV
810F4B 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810F4E EE                MOV     A,R6
810F4F F0                MOVX    @DPTR,A
810F50 A3                INC     DPTR
810F51 EF                MOV     A,R7
810F52 F0                MOVX    @DPTR,A
810F53 900468            MOV     DPTR,#SystemParameter+048H
810F56 E0                MOVX    A,@DPTR
810F57 FC                MOV     R4,A
810F58 A3                INC     DPTR
810F59 E0                MOVX    A,@DPTR
810F5A FD                MOV     R5,A
810F5B 900449            MOV     DPTR,#SystemParameter+029H
810F5E         
810F5E E0                MOVX    A,@DPTR
810F5F FE                MOV     R6,A
810F60 A3                INC     DPTR
810F61 E0                MOVX    A,@DPTR
810F62 FF                MOV     R7,A
810F63 A51280056C        ECALL   ?C?UIDIV
810F68 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
810F6B EC                MOV     A,R4
810F6C F0                MOVX    @DPTR,A
810F6D A3                INC     DPTR
810F6E ED                MOV     A,R5
810F6F         
  504: 					break;
810F6F 022427            LJMP    ?C0483?SYSPARAMSET
  505: 					case 100:
810F72         ?C0163?SYSPARAMSET:
  506: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[0]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[0]%SystemParameter.curUnit );
810F72 901756            MOV     DPTR,#OutStr
810F75 E0                MOVX    A,@DPTR
810F76 FE                MOV     R6,A
810F77 A3                INC     DPTR
810F78 E0                MOVX    A,@DPTR
810F79 AA06              MOV     R2,AR6
810F7B F9                MOV     R1,A
810F7C 7B00              MOV     R3,#?C?XDATASEG
810F7E C003              PUSH    AR3
810F80 C002              PUSH    AR2
810F82 C001              PUSH    AR1
810F84 7B80              MOV     R3,#BYTE2 08010A1H
810F86 7A10              MOV     R2,#HIGH 08010A1H
810F88 79A1              MOV     R1,#LOW 08010A1H
810F8A 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
810F8D A5128007B6        ECALL   ?C?PSTXDATA
810F92 900468            MOV     DPTR,#SystemParameter+048H
810F95 E0                MOVX    A,@DPTR
810F96 FC                MOV     R4,A
810F97 A3                INC     DPTR
810F98 E0                MOVX    A,@DPTR
810F99 FD                MOV     R5,A
810F9A 900449            MOV     DPTR,#SystemParameter+029H
810F9D E0                MOVX    A,@DPTR
810F9E FE                MOV     R6,A
810F9F A3                INC     DPTR
810FA0 E0                MOVX    A,@DPTR
810FA1 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 704


810FA2 A51280056C        ECALL   ?C?UIDIV
810FA7 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
810FAA EE                MOV     A,R6
810FAB F0                MOVX    @DPTR,A
810FAC A3                INC     DPTR
810FAD EF                MOV     A,R7
810FAE F0                MOVX    @DPTR,A
810FAF 900468            MOV     DPTR,#SystemParameter+048H
810FB2 E0                MOVX    A,@DPTR
810FB3 FC                MOV     R4,A
810FB4 A3                INC     DPTR
810FB5 E0                MOVX    A,@DPTR
810FB6 FD                MOV     R5,A
810FB7 900449            MOV     DPTR,#SystemParameter+029H
810FBA E0                MOVX    A,@DPTR
810FBB FE                MOV     R6,A
810FBC A3                INC     DPTR
810FBD E0                MOVX    A,@DPTR
810FBE FF                MOV     R7,A
810FBF A51280056C        ECALL   ?C?UIDIV
810FC4 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
810FC7 EC                MOV     A,R4
810FC8 F0                MOVX    @DPTR,A
810FC9 A3                INC     DPTR
810FCA ED                MOV     A,R5
810FCB         
  507: 					break;					
810FCB 022427            LJMP    ?C0483?SYSPARAMSET
  508: 				}				
  509: 			}
810FCE         ?C0159?SYSPARAMSET:
  510: 			else
  511: 			{				
  512: 				//Trace( "\n set IP val \n");
  513: 				j = *len;											
810FCE 90175A            MOV     DPTR,#len
810FD1 E0                MOVX    A,@DPTR
810FD2 FE                MOV     R6,A
810FD3 A3                INC     DPTR
810FD4 E0                MOVX    A,@DPTR
810FD5 F582              MOV     DPL,A
810FD7 8E83              MOV     DPH,R6
810FD9 E0                MOVX    A,@DPTR
810FDA 90175C            MOV     DPTR,#j
810FDD F0                MOVX    @DPTR,A
  514: 				if( j == 0 )
810FDE 7003              JNZ     $ + 5H
810FE0 02256F            LJMP    ?C0351?SYSPARAMSET
  515: 					break;
810FE3         ?C0165?SYSPARAMSET:
  516: 				if( j > 5 )
810FE3 90175C            MOV     DPTR,#j
810FE6 E0                MOVX    A,@DPTR
810FE7 D3                SETB    C
810FE8 9405              SUBB    A,#05H
810FEA 4003              JC      ?C0166?SYSPARAMSET
  517: 					j = 5;
810FEC 7405              MOV     A,#05H
810FEE F0                MOVX    @DPTR,A
810FEF         ?C0166?SYSPARAMSET:
  518: 				SystemParameter.billValue[0] = 0;	
810FEF E4                CLR     A
810FF0 900449            MOV     DPTR,#SystemParameter+029H
810FF3 F0                MOVX    @DPTR,A
810FF4 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 705


810FF5 F0                MOVX    @DPTR,A
  519: 				for( i = 0; i < j; i ++ )
810FF6 90175D            MOV     DPTR,#i
810FF9 F0                MOVX    @DPTR,A
810FFA         ?C0167?SYSPARAMSET:
810FFA 90175C            MOV     DPTR,#j
810FFD E0                MOVX    A,@DPTR
810FFE FF                MOV     R7,A
810FFF A3                INC     DPTR
811000 E0                MOVX    A,@DPTR
811001 FE                MOV     R6,A
811002 C3                CLR     C
811003 9F                SUBB    A,R7
811004 5044              JNC     ?C0168?SYSPARAMSET
  520: 				{
  521: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
811006 901758            MOV     DPTR,#InStr
811009 E0                MOVX    A,@DPTR
81100A FC                MOV     R4,A
81100B A3                INC     DPTR
81100C E0                MOVX    A,@DPTR
81100D 2E                ADD     A,R6
81100E F582              MOV     DPL,A
811010 E4                CLR     A
811011 3C                ADDC    A,R4
811012 F583              MOV     DPH,A
811014 E0                MOVX    A,@DPTR
811015 FF                MOV     R7,A
811016 C3                CLR     C
811017 9400              SUBB    A,#00H
811019 4027              JC      ?C0169?SYSPARAMSET
81101B EF                MOV     A,R7
81101C D3                SETB    C
81101D 9409              SUBB    A,#09H
81101F 5021              JNC     ?C0169?SYSPARAMSET
  522: 						SystemParameter.billValue[0] = SystemParameter.billValue[0]*10 + *( InStr + i );						
811021 EF                MOV     A,R7
811022 FB                MOV     R3,A
811023 7A00              MOV     R2,#00H
811025 900449            MOV     DPTR,#SystemParameter+029H
811028 E0                MOVX    A,@DPTR
811029 FE                MOV     R6,A
81102A A3                INC     DPTR
81102B E0                MOVX    A,@DPTR
81102C FF                MOV     R7,A
81102D 7C00              MOV     R4,#00H
81102F 7D0A              MOV     R5,#0AH
811031 A512800559        ECALL   ?C?IMUL
811036 EF                MOV     A,R7
811037 2B                ADD     A,R3
811038 FF                MOV     R7,A
811039 EA                MOV     A,R2
81103A 3E                ADDC    A,R6
81103B 900449            MOV     DPTR,#SystemParameter+029H
81103E F0                MOVX    @DPTR,A
81103F A3                INC     DPTR
811040 EF                MOV     A,R7
811041 F0                MOVX    @DPTR,A
  523: 				}	
811042         ?C0169?SYSPARAMSET:
811042 90175D            MOV     DPTR,#i
811045 E0                MOVX    A,@DPTR
811046 04                INC     A
811047 F0                MOVX    @DPTR,A
811048 80B0              SJMP    ?C0167?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 706


81104A         ?C0168?SYSPARAMSET:
  524: 				SystemSave = 1;
81104A D22E              SETB    SystemSave
  525: 			}			
  526: 		break;
81104C 02256F            LJMP    ?C0351?SYSPARAMSET
  527: 		case 15: //# 2 note
81104F         ?C0171?SYSPARAMSET:
  528:         if( OutInFlag == 0 )
81104F 301A03            JNB     OutInFlag,$ + 6H
811052 02115F            LJMP    ?C0172?SYSPARAMSET
  529: 			{			
  530: 				switch( SystemParameter.curUnit )
811055 900468            MOV     DPTR,#SystemParameter+048H
811058 E0                MOVX    A,@DPTR
811059 FE                MOV     R6,A
81105A A3                INC     DPTR
81105B E0                MOVX    A,@DPTR
81105C FF                MOV     R7,A
81105D EE                MOV     A,R6
81105E 6003              JZ      $ + 5H
811060 02256F            LJMP    ?C0351?SYSPARAMSET
811063 EF                MOV     A,R7
811064 24F6              ADD     A,#0F6H
811066 603F              JZ      ?C0175?SYSPARAMSET
811068 24A6              ADD     A,#0A6H
81106A 7003              JNZ     $ + 5H
81106C 021103            LJMP    ?C0176?SYSPARAMSET
81106F 2463              ADD     A,#063H
811071 6003              JZ      $ + 5H
811073 02256F            LJMP    ?C0351?SYSPARAMSET
  531: 				{
  532: 					case 1:
811076         ?C0174?SYSPARAMSET:
  533: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[1] );
811076 901756            MOV     DPTR,#OutStr
811079 E0                MOVX    A,@DPTR
81107A FE                MOV     R6,A
81107B A3                INC     DPTR
81107C E0                MOVX    A,@DPTR
81107D AA06              MOV     R2,AR6
81107F F9                MOV     R1,A
811080 7B00              MOV     R3,#?C?XDATASEG
811082 C003              PUSH    AR3
811084 C002              PUSH    AR2
811086 C001              PUSH    AR1
811088 7B80              MOV     R3,#BYTE2 0801098H
81108A 7A10              MOV     R2,#HIGH 0801098H
81108C 7998              MOV     R1,#LOW 0801098H
81108E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811091 A5128007B6        ECALL   ?C?PSTXDATA
811096 90044B            MOV     DPTR,#SystemParameter+02BH
811099 E0                MOVX    A,@DPTR
81109A FF                MOV     R7,A
81109B A3                INC     DPTR
81109C E0                MOVX    A,@DPTR
81109D 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8110A0 CF                XCH     A,R7
8110A1 F0                MOVX    @DPTR,A
8110A2 A3                INC     DPTR
8110A3 EF                MOV     A,R7
8110A4         
  534: 					break;				
8110A4 022427            LJMP    ?C0483?SYSPARAMSET
  535: 					case 10:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 707


8110A7         ?C0175?SYSPARAMSET:
  536: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[1]/SystemParameter.curUnit,SystemParameter.billV
>> alue[1]%SystemParameter.curUnit );
8110A7 901756            MOV     DPTR,#OutStr
8110AA E0                MOVX    A,@DPTR
8110AB FE                MOV     R6,A
8110AC A3                INC     DPTR
8110AD E0                MOVX    A,@DPTR
8110AE AA06              MOV     R2,AR6
8110B0 F9                MOV     R1,A
8110B1 7B00              MOV     R3,#?C?XDATASEG
8110B3 C003              PUSH    AR3
8110B5 C002              PUSH    AR2
8110B7 C001              PUSH    AR1
8110B9 7B80              MOV     R3,#BYTE2 080109BH
8110BB 7A10              MOV     R2,#HIGH 080109BH
8110BD 799B              MOV     R1,#LOW 080109BH
8110BF 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8110C2 A5128007B6        ECALL   ?C?PSTXDATA
8110C7 900468            MOV     DPTR,#SystemParameter+048H
8110CA E0                MOVX    A,@DPTR
8110CB FC                MOV     R4,A
8110CC A3                INC     DPTR
8110CD E0                MOVX    A,@DPTR
8110CE FD                MOV     R5,A
8110CF 90044B            MOV     DPTR,#SystemParameter+02BH
8110D2 E0                MOVX    A,@DPTR
8110D3 FE                MOV     R6,A
8110D4 A3                INC     DPTR
8110D5 E0                MOVX    A,@DPTR
8110D6 FF                MOV     R7,A
8110D7 A51280056C        ECALL   ?C?UIDIV
8110DC 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8110DF EE                MOV     A,R6
8110E0 F0                MOVX    @DPTR,A
8110E1 A3                INC     DPTR
8110E2 EF                MOV     A,R7
8110E3 F0                MOVX    @DPTR,A
8110E4 900468            MOV     DPTR,#SystemParameter+048H
8110E7 E0                MOVX    A,@DPTR
8110E8 FC                MOV     R4,A
8110E9 A3                INC     DPTR
8110EA E0                MOVX    A,@DPTR
8110EB FD                MOV     R5,A
8110EC 90044B            MOV     DPTR,#SystemParameter+02BH
8110EF E0                MOVX    A,@DPTR
8110F0 FE                MOV     R6,A
8110F1 A3                INC     DPTR
8110F2 E0                MOVX    A,@DPTR
8110F3 FF                MOV     R7,A
8110F4 A51280056C        ECALL   ?C?UIDIV
8110F9 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8110FC EC                MOV     A,R4
8110FD F0                MOVX    @DPTR,A
8110FE A3                INC     DPTR
8110FF ED                MOV     A,R5
811100         
  537: 					break;
811100 022427            LJMP    ?C0483?SYSPARAMSET
  538: 					case 100:
811103         ?C0176?SYSPARAMSET:
  539: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[1]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[1]%SystemParameter.curUnit );
811103 901756            MOV     DPTR,#OutStr
811106 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 708


811107 FE                MOV     R6,A
811108 A3                INC     DPTR
811109 E0                MOVX    A,@DPTR
81110A AA06              MOV     R2,AR6
81110C F9                MOV     R1,A
81110D 7B00              MOV     R3,#?C?XDATASEG
81110F C003              PUSH    AR3
811111 C002              PUSH    AR2
811113 C001              PUSH    AR1
811115 7B80              MOV     R3,#BYTE2 08010A1H
811117 7A10              MOV     R2,#HIGH 08010A1H
811119 79A1              MOV     R1,#LOW 08010A1H
81111B 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81111E A5128007B6        ECALL   ?C?PSTXDATA
811123 900468            MOV     DPTR,#SystemParameter+048H
811126 E0                MOVX    A,@DPTR
811127 FC                MOV     R4,A
811128 A3                INC     DPTR
811129 E0                MOVX    A,@DPTR
81112A FD                MOV     R5,A
81112B 90044B            MOV     DPTR,#SystemParameter+02BH
81112E E0                MOVX    A,@DPTR
81112F FE                MOV     R6,A
811130 A3                INC     DPTR
811131 E0                MOVX    A,@DPTR
811132 FF                MOV     R7,A
811133 A51280056C        ECALL   ?C?UIDIV
811138 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81113B EE                MOV     A,R6
81113C F0                MOVX    @DPTR,A
81113D A3                INC     DPTR
81113E EF                MOV     A,R7
81113F F0                MOVX    @DPTR,A
811140 900468            MOV     DPTR,#SystemParameter+048H
811143 E0                MOVX    A,@DPTR
811144 FC                MOV     R4,A
811145 A3                INC     DPTR
811146 E0                MOVX    A,@DPTR
811147 FD                MOV     R5,A
811148 90044B            MOV     DPTR,#SystemParameter+02BH
81114B E0                MOVX    A,@DPTR
81114C FE                MOV     R6,A
81114D A3                INC     DPTR
81114E E0                MOVX    A,@DPTR
81114F FF                MOV     R7,A
811150 A51280056C        ECALL   ?C?UIDIV
811155 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811158 EC                MOV     A,R4
811159 F0                MOVX    @DPTR,A
81115A A3                INC     DPTR
81115B ED                MOV     A,R5
81115C         
  540: 					break;					
81115C 022427            LJMP    ?C0483?SYSPARAMSET
  541: 				}				
  542: 			}
81115F         ?C0172?SYSPARAMSET:
  543: 			else
  544: 			{				
  545: 				//Trace( "\n set IP val \n");
  546: 				j = *len;											
81115F 90175A            MOV     DPTR,#len
811162 E0                MOVX    A,@DPTR
811163 FE                MOV     R6,A
811164 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 709


811165 E0                MOVX    A,@DPTR
811166 F582              MOV     DPL,A
811168 8E83              MOV     DPH,R6
81116A E0                MOVX    A,@DPTR
81116B 90175C            MOV     DPTR,#j
81116E F0                MOVX    @DPTR,A
  547: 				if( j == 0 )
81116F 7003              JNZ     $ + 5H
811171 02256F            LJMP    ?C0351?SYSPARAMSET
  548: 					break;
811174         ?C0178?SYSPARAMSET:
  549: 				if( j > 5 )
811174 90175C            MOV     DPTR,#j
811177 E0                MOVX    A,@DPTR
811178 D3                SETB    C
811179 9405              SUBB    A,#05H
81117B 4003              JC      ?C0179?SYSPARAMSET
  550: 					j = 5;
81117D 7405              MOV     A,#05H
81117F F0                MOVX    @DPTR,A
811180         ?C0179?SYSPARAMSET:
  551: 				SystemParameter.billValue[1] = 0;	
811180 E4                CLR     A
811181 90044B            MOV     DPTR,#SystemParameter+02BH
811184 F0                MOVX    @DPTR,A
811185 A3                INC     DPTR
811186 F0                MOVX    @DPTR,A
  552: 				for( i = 0; i < j; i ++ )
811187 90175D            MOV     DPTR,#i
81118A F0                MOVX    @DPTR,A
81118B         ?C0180?SYSPARAMSET:
81118B 90175C            MOV     DPTR,#j
81118E E0                MOVX    A,@DPTR
81118F FF                MOV     R7,A
811190 A3                INC     DPTR
811191 E0                MOVX    A,@DPTR
811192 FE                MOV     R6,A
811193 C3                CLR     C
811194 9F                SUBB    A,R7
811195 5044              JNC     ?C0181?SYSPARAMSET
  553: 				{
  554: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
811197 901758            MOV     DPTR,#InStr
81119A E0                MOVX    A,@DPTR
81119B FC                MOV     R4,A
81119C A3                INC     DPTR
81119D E0                MOVX    A,@DPTR
81119E 2E                ADD     A,R6
81119F F582              MOV     DPL,A
8111A1 E4                CLR     A
8111A2 3C                ADDC    A,R4
8111A3 F583              MOV     DPH,A
8111A5 E0                MOVX    A,@DPTR
8111A6 FF                MOV     R7,A
8111A7 C3                CLR     C
8111A8 9400              SUBB    A,#00H
8111AA 4027              JC      ?C0182?SYSPARAMSET
8111AC EF                MOV     A,R7
8111AD D3                SETB    C
8111AE 9409              SUBB    A,#09H
8111B0 5021              JNC     ?C0182?SYSPARAMSET
  555: 						SystemParameter.billValue[1] = SystemParameter.billValue[1]*10 + *( InStr + i );						
8111B2 EF                MOV     A,R7
8111B3 FB                MOV     R3,A
8111B4 7A00              MOV     R2,#00H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 710


8111B6 90044B            MOV     DPTR,#SystemParameter+02BH
8111B9 E0                MOVX    A,@DPTR
8111BA FE                MOV     R6,A
8111BB A3                INC     DPTR
8111BC E0                MOVX    A,@DPTR
8111BD FF                MOV     R7,A
8111BE 7C00              MOV     R4,#00H
8111C0 7D0A              MOV     R5,#0AH
8111C2 A512800559        ECALL   ?C?IMUL
8111C7 EF                MOV     A,R7
8111C8 2B                ADD     A,R3
8111C9 FF                MOV     R7,A
8111CA EA                MOV     A,R2
8111CB 3E                ADDC    A,R6
8111CC 90044B            MOV     DPTR,#SystemParameter+02BH
8111CF F0                MOVX    @DPTR,A
8111D0 A3                INC     DPTR
8111D1 EF                MOV     A,R7
8111D2 F0                MOVX    @DPTR,A
  556: 				}	
8111D3         ?C0182?SYSPARAMSET:
8111D3 90175D            MOV     DPTR,#i
8111D6 E0                MOVX    A,@DPTR
8111D7 04                INC     A
8111D8 F0                MOVX    @DPTR,A
8111D9 80B0              SJMP    ?C0180?SYSPARAMSET
8111DB         ?C0181?SYSPARAMSET:
  557: 				SystemSave = 1;
8111DB D22E              SETB    SystemSave
  558: 			}			
  559: 		break;
8111DD 02256F            LJMP    ?C0351?SYSPARAMSET
  560:         case 16: //# 3 note
8111E0         ?C0184?SYSPARAMSET:
  561:         if( OutInFlag == 0 )
8111E0 301A03            JNB     OutInFlag,$ + 6H
8111E3 0212F0            LJMP    ?C0185?SYSPARAMSET
  562: 			{			
  563: 				switch( SystemParameter.curUnit )
8111E6 900468            MOV     DPTR,#SystemParameter+048H
8111E9 E0                MOVX    A,@DPTR
8111EA FE                MOV     R6,A
8111EB A3                INC     DPTR
8111EC E0                MOVX    A,@DPTR
8111ED FF                MOV     R7,A
8111EE EE                MOV     A,R6
8111EF 6003              JZ      $ + 5H
8111F1 02256F            LJMP    ?C0351?SYSPARAMSET
8111F4 EF                MOV     A,R7
8111F5 24F6              ADD     A,#0F6H
8111F7 603F              JZ      ?C0188?SYSPARAMSET
8111F9 24A6              ADD     A,#0A6H
8111FB 7003              JNZ     $ + 5H
8111FD 021294            LJMP    ?C0189?SYSPARAMSET
811200 2463              ADD     A,#063H
811202 6003              JZ      $ + 5H
811204 02256F            LJMP    ?C0351?SYSPARAMSET
  564: 				{
  565: 					case 1:
811207         ?C0187?SYSPARAMSET:
  566: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[2] );
811207 901756            MOV     DPTR,#OutStr
81120A E0                MOVX    A,@DPTR
81120B FE                MOV     R6,A
81120C A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 711


81120D E0                MOVX    A,@DPTR
81120E AA06              MOV     R2,AR6
811210 F9                MOV     R1,A
811211 7B00              MOV     R3,#?C?XDATASEG
811213 C003              PUSH    AR3
811215 C002              PUSH    AR2
811217 C001              PUSH    AR1
811219 7B80              MOV     R3,#BYTE2 0801098H
81121B 7A10              MOV     R2,#HIGH 0801098H
81121D 7998              MOV     R1,#LOW 0801098H
81121F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811222 A5128007B6        ECALL   ?C?PSTXDATA
811227 90044D            MOV     DPTR,#SystemParameter+02DH
81122A E0                MOVX    A,@DPTR
81122B FF                MOV     R7,A
81122C A3                INC     DPTR
81122D E0                MOVX    A,@DPTR
81122E 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811231 CF                XCH     A,R7
811232 F0                MOVX    @DPTR,A
811233 A3                INC     DPTR
811234 EF                MOV     A,R7
811235         
  567: 					break;				
811235 022427            LJMP    ?C0483?SYSPARAMSET
  568: 					case 10:
811238         ?C0188?SYSPARAMSET:
  569: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[2]/SystemParameter.curUnit,SystemParameter.billV
>> alue[2]%SystemParameter.curUnit );
811238 901756            MOV     DPTR,#OutStr
81123B E0                MOVX    A,@DPTR
81123C FE                MOV     R6,A
81123D A3                INC     DPTR
81123E E0                MOVX    A,@DPTR
81123F AA06              MOV     R2,AR6
811241 F9                MOV     R1,A
811242 7B00              MOV     R3,#?C?XDATASEG
811244 C003              PUSH    AR3
811246 C002              PUSH    AR2
811248 C001              PUSH    AR1
81124A 7B80              MOV     R3,#BYTE2 080109BH
81124C 7A10              MOV     R2,#HIGH 080109BH
81124E 799B              MOV     R1,#LOW 080109BH
811250 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811253 A5128007B6        ECALL   ?C?PSTXDATA
811258 900468            MOV     DPTR,#SystemParameter+048H
81125B E0                MOVX    A,@DPTR
81125C FC                MOV     R4,A
81125D A3                INC     DPTR
81125E E0                MOVX    A,@DPTR
81125F FD                MOV     R5,A
811260 90044D            MOV     DPTR,#SystemParameter+02DH
811263 E0                MOVX    A,@DPTR
811264 FE                MOV     R6,A
811265 A3                INC     DPTR
811266 E0                MOVX    A,@DPTR
811267 FF                MOV     R7,A
811268 A51280056C        ECALL   ?C?UIDIV
81126D 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811270 EE                MOV     A,R6
811271 F0                MOVX    @DPTR,A
811272 A3                INC     DPTR
811273 EF                MOV     A,R7
811274 F0                MOVX    @DPTR,A
811275 900468            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 712


811278 E0                MOVX    A,@DPTR
811279 FC                MOV     R4,A
81127A A3                INC     DPTR
81127B E0                MOVX    A,@DPTR
81127C FD                MOV     R5,A
81127D 90044D            MOV     DPTR,#SystemParameter+02DH
811280 E0                MOVX    A,@DPTR
811281 FE                MOV     R6,A
811282 A3                INC     DPTR
811283 E0                MOVX    A,@DPTR
811284 FF                MOV     R7,A
811285 A51280056C        ECALL   ?C?UIDIV
81128A 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
81128D EC                MOV     A,R4
81128E F0                MOVX    @DPTR,A
81128F A3                INC     DPTR
811290 ED                MOV     A,R5
811291         
  570: 					break;
811291 022427            LJMP    ?C0483?SYSPARAMSET
  571: 					case 100:
811294         ?C0189?SYSPARAMSET:
  572: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[2]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[2]%SystemParameter.curUnit );
811294 901756            MOV     DPTR,#OutStr
811297 E0                MOVX    A,@DPTR
811298 FE                MOV     R6,A
811299 A3                INC     DPTR
81129A E0                MOVX    A,@DPTR
81129B AA06              MOV     R2,AR6
81129D F9                MOV     R1,A
81129E 7B00              MOV     R3,#?C?XDATASEG
8112A0 C003              PUSH    AR3
8112A2 C002              PUSH    AR2
8112A4 C001              PUSH    AR1
8112A6 7B80              MOV     R3,#BYTE2 08010A1H
8112A8 7A10              MOV     R2,#HIGH 08010A1H
8112AA 79A1              MOV     R1,#LOW 08010A1H
8112AC 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8112AF A5128007B6        ECALL   ?C?PSTXDATA
8112B4 900468            MOV     DPTR,#SystemParameter+048H
8112B7 E0                MOVX    A,@DPTR
8112B8 FC                MOV     R4,A
8112B9 A3                INC     DPTR
8112BA E0                MOVX    A,@DPTR
8112BB FD                MOV     R5,A
8112BC 90044D            MOV     DPTR,#SystemParameter+02DH
8112BF E0                MOVX    A,@DPTR
8112C0 FE                MOV     R6,A
8112C1 A3                INC     DPTR
8112C2 E0                MOVX    A,@DPTR
8112C3 FF                MOV     R7,A
8112C4 A51280056C        ECALL   ?C?UIDIV
8112C9 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8112CC EE                MOV     A,R6
8112CD F0                MOVX    @DPTR,A
8112CE A3                INC     DPTR
8112CF EF                MOV     A,R7
8112D0 F0                MOVX    @DPTR,A
8112D1 900468            MOV     DPTR,#SystemParameter+048H
8112D4 E0                MOVX    A,@DPTR
8112D5 FC                MOV     R4,A
8112D6 A3                INC     DPTR
8112D7 E0                MOVX    A,@DPTR
8112D8 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 713


8112D9 90044D            MOV     DPTR,#SystemParameter+02DH
8112DC E0                MOVX    A,@DPTR
8112DD FE                MOV     R6,A
8112DE A3                INC     DPTR
8112DF E0                MOVX    A,@DPTR
8112E0 FF                MOV     R7,A
8112E1 A51280056C        ECALL   ?C?UIDIV
8112E6 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8112E9 EC                MOV     A,R4
8112EA F0                MOVX    @DPTR,A
8112EB A3                INC     DPTR
8112EC ED                MOV     A,R5
8112ED         
  573: 					break;					
8112ED 022427            LJMP    ?C0483?SYSPARAMSET
  574: 				}				
  575: 			}
8112F0         ?C0185?SYSPARAMSET:
  576: 			else
  577: 			{				
  578: 				//Trace( "\n set IP val \n");
  579: 				j = *len;											
8112F0 90175A            MOV     DPTR,#len
8112F3 E0                MOVX    A,@DPTR
8112F4 FE                MOV     R6,A
8112F5 A3                INC     DPTR
8112F6 E0                MOVX    A,@DPTR
8112F7 F582              MOV     DPL,A
8112F9 8E83              MOV     DPH,R6
8112FB E0                MOVX    A,@DPTR
8112FC 90175C            MOV     DPTR,#j
8112FF F0                MOVX    @DPTR,A
  580: 				if( j == 0 )
811300 7003              JNZ     $ + 5H
811302 02256F            LJMP    ?C0351?SYSPARAMSET
  581: 					break;
811305         ?C0191?SYSPARAMSET:
  582: 				if( j > 5 )
811305 90175C            MOV     DPTR,#j
811308 E0                MOVX    A,@DPTR
811309 D3                SETB    C
81130A 9405              SUBB    A,#05H
81130C 4003              JC      ?C0192?SYSPARAMSET
  583: 					j = 5;
81130E 7405              MOV     A,#05H
811310 F0                MOVX    @DPTR,A
811311         ?C0192?SYSPARAMSET:
  584: 				SystemParameter.billValue[2] = 0;	
811311 E4                CLR     A
811312 90044D            MOV     DPTR,#SystemParameter+02DH
811315 F0                MOVX    @DPTR,A
811316 A3                INC     DPTR
811317 F0                MOVX    @DPTR,A
  585: 				for( i = 0; i < j; i ++ )
811318 90175D            MOV     DPTR,#i
81131B F0                MOVX    @DPTR,A
81131C         ?C0193?SYSPARAMSET:
81131C 90175C            MOV     DPTR,#j
81131F E0                MOVX    A,@DPTR
811320 FF                MOV     R7,A
811321 A3                INC     DPTR
811322 E0                MOVX    A,@DPTR
811323 FE                MOV     R6,A
811324 C3                CLR     C
811325 9F                SUBB    A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 714


811326 5044              JNC     ?C0194?SYSPARAMSET
  586: 				{
  587: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
811328 901758            MOV     DPTR,#InStr
81132B E0                MOVX    A,@DPTR
81132C FC                MOV     R4,A
81132D A3                INC     DPTR
81132E E0                MOVX    A,@DPTR
81132F 2E                ADD     A,R6
811330 F582              MOV     DPL,A
811332 E4                CLR     A
811333 3C                ADDC    A,R4
811334 F583              MOV     DPH,A
811336 E0                MOVX    A,@DPTR
811337 FF                MOV     R7,A
811338 C3                CLR     C
811339 9400              SUBB    A,#00H
81133B 4027              JC      ?C0195?SYSPARAMSET
81133D EF                MOV     A,R7
81133E D3                SETB    C
81133F 9409              SUBB    A,#09H
811341 5021              JNC     ?C0195?SYSPARAMSET
  588: 						SystemParameter.billValue[2] = SystemParameter.billValue[2]*10 + *( InStr + i );						
811343 EF                MOV     A,R7
811344 FB                MOV     R3,A
811345 7A00              MOV     R2,#00H
811347 90044D            MOV     DPTR,#SystemParameter+02DH
81134A E0                MOVX    A,@DPTR
81134B FE                MOV     R6,A
81134C A3                INC     DPTR
81134D E0                MOVX    A,@DPTR
81134E FF                MOV     R7,A
81134F 7C00              MOV     R4,#00H
811351 7D0A              MOV     R5,#0AH
811353 A512800559        ECALL   ?C?IMUL
811358 EF                MOV     A,R7
811359 2B                ADD     A,R3
81135A FF                MOV     R7,A
81135B EA                MOV     A,R2
81135C 3E                ADDC    A,R6
81135D 90044D            MOV     DPTR,#SystemParameter+02DH
811360 F0                MOVX    @DPTR,A
811361 A3                INC     DPTR
811362 EF                MOV     A,R7
811363 F0                MOVX    @DPTR,A
  589: 				}	
811364         ?C0195?SYSPARAMSET:
811364 90175D            MOV     DPTR,#i
811367 E0                MOVX    A,@DPTR
811368 04                INC     A
811369 F0                MOVX    @DPTR,A
81136A 80B0              SJMP    ?C0193?SYSPARAMSET
81136C         ?C0194?SYSPARAMSET:
  590: 				SystemSave = 1;
81136C D22E              SETB    SystemSave
  591: 			}			
  592: 		break;
81136E 02256F            LJMP    ?C0351?SYSPARAMSET
  593: 		case 17: //# 4 note
811371         ?C0197?SYSPARAMSET:
  594:         if( OutInFlag == 0 )
811371 301A03            JNB     OutInFlag,$ + 6H
811374 021481            LJMP    ?C0198?SYSPARAMSET
  595: 			{			
  596: 				switch( SystemParameter.curUnit )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 715


811377 900468            MOV     DPTR,#SystemParameter+048H
81137A E0                MOVX    A,@DPTR
81137B FE                MOV     R6,A
81137C A3                INC     DPTR
81137D E0                MOVX    A,@DPTR
81137E FF                MOV     R7,A
81137F EE                MOV     A,R6
811380 6003              JZ      $ + 5H
811382 02256F            LJMP    ?C0351?SYSPARAMSET
811385 EF                MOV     A,R7
811386 24F6              ADD     A,#0F6H
811388 603F              JZ      ?C0201?SYSPARAMSET
81138A 24A6              ADD     A,#0A6H
81138C 7003              JNZ     $ + 5H
81138E 021425            LJMP    ?C0202?SYSPARAMSET
811391 2463              ADD     A,#063H
811393 6003              JZ      $ + 5H
811395 02256F            LJMP    ?C0351?SYSPARAMSET
  597: 				{
  598: 					case 1:
811398         ?C0200?SYSPARAMSET:
  599: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[3] );
811398 901756            MOV     DPTR,#OutStr
81139B E0                MOVX    A,@DPTR
81139C FE                MOV     R6,A
81139D A3                INC     DPTR
81139E E0                MOVX    A,@DPTR
81139F AA06              MOV     R2,AR6
8113A1 F9                MOV     R1,A
8113A2 7B00              MOV     R3,#?C?XDATASEG
8113A4 C003              PUSH    AR3
8113A6 C002              PUSH    AR2
8113A8 C001              PUSH    AR1
8113AA 7B80              MOV     R3,#BYTE2 0801098H
8113AC 7A10              MOV     R2,#HIGH 0801098H
8113AE 7998              MOV     R1,#LOW 0801098H
8113B0 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8113B3 A5128007B6        ECALL   ?C?PSTXDATA
8113B8 90044F            MOV     DPTR,#SystemParameter+02FH
8113BB E0                MOVX    A,@DPTR
8113BC FF                MOV     R7,A
8113BD A3                INC     DPTR
8113BE E0                MOVX    A,@DPTR
8113BF 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8113C2 CF                XCH     A,R7
8113C3 F0                MOVX    @DPTR,A
8113C4 A3                INC     DPTR
8113C5 EF                MOV     A,R7
8113C6         
  600: 					break;				
8113C6 022427            LJMP    ?C0483?SYSPARAMSET
  601: 					case 10:
8113C9         ?C0201?SYSPARAMSET:
  602: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[3]/SystemParameter.curUnit,SystemParameter.billV
>> alue[3]%SystemParameter.curUnit );
8113C9 901756            MOV     DPTR,#OutStr
8113CC E0                MOVX    A,@DPTR
8113CD FE                MOV     R6,A
8113CE A3                INC     DPTR
8113CF E0                MOVX    A,@DPTR
8113D0 AA06              MOV     R2,AR6
8113D2 F9                MOV     R1,A
8113D3 7B00              MOV     R3,#?C?XDATASEG
8113D5 C003              PUSH    AR3
8113D7 C002              PUSH    AR2
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 716


8113D9 C001              PUSH    AR1
8113DB 7B80              MOV     R3,#BYTE2 080109BH
8113DD 7A10              MOV     R2,#HIGH 080109BH
8113DF 799B              MOV     R1,#LOW 080109BH
8113E1 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8113E4 A5128007B6        ECALL   ?C?PSTXDATA
8113E9 900468            MOV     DPTR,#SystemParameter+048H
8113EC E0                MOVX    A,@DPTR
8113ED FC                MOV     R4,A
8113EE A3                INC     DPTR
8113EF E0                MOVX    A,@DPTR
8113F0 FD                MOV     R5,A
8113F1 90044F            MOV     DPTR,#SystemParameter+02FH
8113F4 E0                MOVX    A,@DPTR
8113F5 FE                MOV     R6,A
8113F6 A3                INC     DPTR
8113F7 E0                MOVX    A,@DPTR
8113F8 FF                MOV     R7,A
8113F9 A51280056C        ECALL   ?C?UIDIV
8113FE 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811401 EE                MOV     A,R6
811402 F0                MOVX    @DPTR,A
811403 A3                INC     DPTR
811404 EF                MOV     A,R7
811405 F0                MOVX    @DPTR,A
811406 900468            MOV     DPTR,#SystemParameter+048H
811409 E0                MOVX    A,@DPTR
81140A FC                MOV     R4,A
81140B A3                INC     DPTR
81140C E0                MOVX    A,@DPTR
81140D FD                MOV     R5,A
81140E 90044F            MOV     DPTR,#SystemParameter+02FH
811411 E0                MOVX    A,@DPTR
811412 FE                MOV     R6,A
811413 A3                INC     DPTR
811414 E0                MOVX    A,@DPTR
811415 FF                MOV     R7,A
811416 A51280056C        ECALL   ?C?UIDIV
81141B 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
81141E EC                MOV     A,R4
81141F F0                MOVX    @DPTR,A
811420 A3                INC     DPTR
811421 ED                MOV     A,R5
811422         
  603: 					break;
811422 022427            LJMP    ?C0483?SYSPARAMSET
  604: 					case 100:
811425         ?C0202?SYSPARAMSET:
  605: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[3]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[3]%SystemParameter.curUnit );
811425 901756            MOV     DPTR,#OutStr
811428 E0                MOVX    A,@DPTR
811429 FE                MOV     R6,A
81142A A3                INC     DPTR
81142B E0                MOVX    A,@DPTR
81142C AA06              MOV     R2,AR6
81142E F9                MOV     R1,A
81142F 7B00              MOV     R3,#?C?XDATASEG
811431 C003              PUSH    AR3
811433 C002              PUSH    AR2
811435 C001              PUSH    AR1
811437 7B80              MOV     R3,#BYTE2 08010A1H
811439 7A10              MOV     R2,#HIGH 08010A1H
81143B 79A1              MOV     R1,#LOW 08010A1H
81143D 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 717


811440 A5128007B6        ECALL   ?C?PSTXDATA
811445 900468            MOV     DPTR,#SystemParameter+048H
811448 E0                MOVX    A,@DPTR
811449 FC                MOV     R4,A
81144A A3                INC     DPTR
81144B E0                MOVX    A,@DPTR
81144C FD                MOV     R5,A
81144D 90044F            MOV     DPTR,#SystemParameter+02FH
811450 E0                MOVX    A,@DPTR
811451 FE                MOV     R6,A
811452 A3                INC     DPTR
811453 E0                MOVX    A,@DPTR
811454 FF                MOV     R7,A
811455 A51280056C        ECALL   ?C?UIDIV
81145A 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81145D EE                MOV     A,R6
81145E F0                MOVX    @DPTR,A
81145F A3                INC     DPTR
811460 EF                MOV     A,R7
811461 F0                MOVX    @DPTR,A
811462 900468            MOV     DPTR,#SystemParameter+048H
811465 E0                MOVX    A,@DPTR
811466 FC                MOV     R4,A
811467 A3                INC     DPTR
811468 E0                MOVX    A,@DPTR
811469 FD                MOV     R5,A
81146A 90044F            MOV     DPTR,#SystemParameter+02FH
81146D E0                MOVX    A,@DPTR
81146E FE                MOV     R6,A
81146F A3                INC     DPTR
811470 E0                MOVX    A,@DPTR
811471 FF                MOV     R7,A
811472 A51280056C        ECALL   ?C?UIDIV
811477 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
81147A EC                MOV     A,R4
81147B F0                MOVX    @DPTR,A
81147C A3                INC     DPTR
81147D ED                MOV     A,R5
81147E         
  606: 					break;					
81147E 022427            LJMP    ?C0483?SYSPARAMSET
  607: 				}				
  608: 			}
811481         ?C0198?SYSPARAMSET:
  609: 			else
  610: 			{				
  611: 				//Trace( "\n set IP val \n");
  612: 				j = *len;											
811481 90175A            MOV     DPTR,#len
811484 E0                MOVX    A,@DPTR
811485 FE                MOV     R6,A
811486 A3                INC     DPTR
811487 E0                MOVX    A,@DPTR
811488 F582              MOV     DPL,A
81148A 8E83              MOV     DPH,R6
81148C E0                MOVX    A,@DPTR
81148D 90175C            MOV     DPTR,#j
811490 F0                MOVX    @DPTR,A
  613: 				if( j == 0 )
811491 7003              JNZ     $ + 5H
811493 02256F            LJMP    ?C0351?SYSPARAMSET
  614: 					break;
811496         ?C0204?SYSPARAMSET:
  615: 				if( j > 5 )
811496 90175C            MOV     DPTR,#j
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 718


811499 E0                MOVX    A,@DPTR
81149A D3                SETB    C
81149B 9405              SUBB    A,#05H
81149D 4003              JC      ?C0205?SYSPARAMSET
  616: 					j = 5;
81149F 7405              MOV     A,#05H
8114A1 F0                MOVX    @DPTR,A
8114A2         ?C0205?SYSPARAMSET:
  617: 				SystemParameter.billValue[3] = 0;	
8114A2 E4                CLR     A
8114A3 90044F            MOV     DPTR,#SystemParameter+02FH
8114A6 F0                MOVX    @DPTR,A
8114A7 A3                INC     DPTR
8114A8 F0                MOVX    @DPTR,A
  618: 				for( i = 0; i < j; i ++ )
8114A9 90175D            MOV     DPTR,#i
8114AC F0                MOVX    @DPTR,A
8114AD         ?C0206?SYSPARAMSET:
8114AD 90175C            MOV     DPTR,#j
8114B0 E0                MOVX    A,@DPTR
8114B1 FF                MOV     R7,A
8114B2 A3                INC     DPTR
8114B3 E0                MOVX    A,@DPTR
8114B4 FE                MOV     R6,A
8114B5 C3                CLR     C
8114B6 9F                SUBB    A,R7
8114B7 5044              JNC     ?C0207?SYSPARAMSET
  619: 				{
  620: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
8114B9 901758            MOV     DPTR,#InStr
8114BC E0                MOVX    A,@DPTR
8114BD FC                MOV     R4,A
8114BE A3                INC     DPTR
8114BF E0                MOVX    A,@DPTR
8114C0 2E                ADD     A,R6
8114C1 F582              MOV     DPL,A
8114C3 E4                CLR     A
8114C4 3C                ADDC    A,R4
8114C5 F583              MOV     DPH,A
8114C7 E0                MOVX    A,@DPTR
8114C8 FF                MOV     R7,A
8114C9 C3                CLR     C
8114CA 9400              SUBB    A,#00H
8114CC 4027              JC      ?C0208?SYSPARAMSET
8114CE EF                MOV     A,R7
8114CF D3                SETB    C
8114D0 9409              SUBB    A,#09H
8114D2 5021              JNC     ?C0208?SYSPARAMSET
  621: 						SystemParameter.billValue[3] = SystemParameter.billValue[3]*10 + *( InStr + i );						
8114D4 EF                MOV     A,R7
8114D5 FB                MOV     R3,A
8114D6 7A00              MOV     R2,#00H
8114D8 90044F            MOV     DPTR,#SystemParameter+02FH
8114DB E0                MOVX    A,@DPTR
8114DC FE                MOV     R6,A
8114DD A3                INC     DPTR
8114DE E0                MOVX    A,@DPTR
8114DF FF                MOV     R7,A
8114E0 7C00              MOV     R4,#00H
8114E2 7D0A              MOV     R5,#0AH
8114E4 A512800559        ECALL   ?C?IMUL
8114E9 EF                MOV     A,R7
8114EA 2B                ADD     A,R3
8114EB FF                MOV     R7,A
8114EC EA                MOV     A,R2
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 719


8114ED 3E                ADDC    A,R6
8114EE 90044F            MOV     DPTR,#SystemParameter+02FH
8114F1 F0                MOVX    @DPTR,A
8114F2 A3                INC     DPTR
8114F3 EF                MOV     A,R7
8114F4 F0                MOVX    @DPTR,A
  622: 				}	
8114F5         ?C0208?SYSPARAMSET:
8114F5 90175D            MOV     DPTR,#i
8114F8 E0                MOVX    A,@DPTR
8114F9 04                INC     A
8114FA F0                MOVX    @DPTR,A
8114FB 80B0              SJMP    ?C0206?SYSPARAMSET
8114FD         ?C0207?SYSPARAMSET:
  623: 				SystemSave = 1;
8114FD D22E              SETB    SystemSave
  624: 			}			
  625: 		break;
8114FF 02256F            LJMP    ?C0351?SYSPARAMSET
  626:         case 18: //# 5 note
811502         ?C0210?SYSPARAMSET:
  627:         if( OutInFlag == 0 )
811502 301A03            JNB     OutInFlag,$ + 6H
811505 021612            LJMP    ?C0211?SYSPARAMSET
  628: 			{			
  629: 				switch( SystemParameter.curUnit )
811508 900468            MOV     DPTR,#SystemParameter+048H
81150B E0                MOVX    A,@DPTR
81150C FE                MOV     R6,A
81150D A3                INC     DPTR
81150E E0                MOVX    A,@DPTR
81150F FF                MOV     R7,A
811510 EE                MOV     A,R6
811511 6003              JZ      $ + 5H
811513 02256F            LJMP    ?C0351?SYSPARAMSET
811516 EF                MOV     A,R7
811517 24F6              ADD     A,#0F6H
811519 603F              JZ      ?C0214?SYSPARAMSET
81151B 24A6              ADD     A,#0A6H
81151D 7003              JNZ     $ + 5H
81151F 0215B6            LJMP    ?C0215?SYSPARAMSET
811522 2463              ADD     A,#063H
811524 6003              JZ      $ + 5H
811526 02256F            LJMP    ?C0351?SYSPARAMSET
  630: 				{
  631: 					case 1:
811529         ?C0213?SYSPARAMSET:
  632: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[4] );
811529 901756            MOV     DPTR,#OutStr
81152C E0                MOVX    A,@DPTR
81152D FE                MOV     R6,A
81152E A3                INC     DPTR
81152F E0                MOVX    A,@DPTR
811530 AA06              MOV     R2,AR6
811532 F9                MOV     R1,A
811533 7B00              MOV     R3,#?C?XDATASEG
811535 C003              PUSH    AR3
811537 C002              PUSH    AR2
811539 C001              PUSH    AR1
81153B 7B80              MOV     R3,#BYTE2 0801098H
81153D 7A10              MOV     R2,#HIGH 0801098H
81153F 7998              MOV     R1,#LOW 0801098H
811541 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811544 A5128007B6        ECALL   ?C?PSTXDATA
811549 900451            MOV     DPTR,#SystemParameter+031H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 720


81154C E0                MOVX    A,@DPTR
81154D FF                MOV     R7,A
81154E A3                INC     DPTR
81154F E0                MOVX    A,@DPTR
811550 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811553 CF                XCH     A,R7
811554 F0                MOVX    @DPTR,A
811555 A3                INC     DPTR
811556 EF                MOV     A,R7
811557         
  633: 					break;				
811557 022427            LJMP    ?C0483?SYSPARAMSET
  634: 					case 10:
81155A         ?C0214?SYSPARAMSET:
  635: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[4]/SystemParameter.curUnit,SystemParameter.billV
>> alue[4]%SystemParameter.curUnit );
81155A 901756            MOV     DPTR,#OutStr
81155D E0                MOVX    A,@DPTR
81155E FE                MOV     R6,A
81155F A3                INC     DPTR
811560 E0                MOVX    A,@DPTR
811561 AA06              MOV     R2,AR6
811563 F9                MOV     R1,A
811564 7B00              MOV     R3,#?C?XDATASEG
811566 C003              PUSH    AR3
811568 C002              PUSH    AR2
81156A C001              PUSH    AR1
81156C 7B80              MOV     R3,#BYTE2 080109BH
81156E 7A10              MOV     R2,#HIGH 080109BH
811570 799B              MOV     R1,#LOW 080109BH
811572 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811575 A5128007B6        ECALL   ?C?PSTXDATA
81157A 900468            MOV     DPTR,#SystemParameter+048H
81157D E0                MOVX    A,@DPTR
81157E FC                MOV     R4,A
81157F A3                INC     DPTR
811580 E0                MOVX    A,@DPTR
811581 FD                MOV     R5,A
811582 900451            MOV     DPTR,#SystemParameter+031H
811585 E0                MOVX    A,@DPTR
811586 FE                MOV     R6,A
811587 A3                INC     DPTR
811588 E0                MOVX    A,@DPTR
811589 FF                MOV     R7,A
81158A A51280056C        ECALL   ?C?UIDIV
81158F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811592 EE                MOV     A,R6
811593 F0                MOVX    @DPTR,A
811594 A3                INC     DPTR
811595 EF                MOV     A,R7
811596 F0                MOVX    @DPTR,A
811597 900468            MOV     DPTR,#SystemParameter+048H
81159A E0                MOVX    A,@DPTR
81159B FC                MOV     R4,A
81159C A3                INC     DPTR
81159D E0                MOVX    A,@DPTR
81159E FD                MOV     R5,A
81159F 900451            MOV     DPTR,#SystemParameter+031H
8115A2 E0                MOVX    A,@DPTR
8115A3 FE                MOV     R6,A
8115A4 A3                INC     DPTR
8115A5 E0                MOVX    A,@DPTR
8115A6 FF                MOV     R7,A
8115A7 A51280056C        ECALL   ?C?UIDIV
8115AC 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 721


8115AF EC                MOV     A,R4
8115B0 F0                MOVX    @DPTR,A
8115B1 A3                INC     DPTR
8115B2 ED                MOV     A,R5
8115B3         
  636: 					break;
8115B3 022427            LJMP    ?C0483?SYSPARAMSET
  637: 					case 100:
8115B6         ?C0215?SYSPARAMSET:
  638: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[4]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[4]%SystemParameter.curUnit );
8115B6 901756            MOV     DPTR,#OutStr
8115B9 E0                MOVX    A,@DPTR
8115BA FE                MOV     R6,A
8115BB A3                INC     DPTR
8115BC E0                MOVX    A,@DPTR
8115BD AA06              MOV     R2,AR6
8115BF F9                MOV     R1,A
8115C0 7B00              MOV     R3,#?C?XDATASEG
8115C2 C003              PUSH    AR3
8115C4 C002              PUSH    AR2
8115C6 C001              PUSH    AR1
8115C8 7B80              MOV     R3,#BYTE2 08010A1H
8115CA 7A10              MOV     R2,#HIGH 08010A1H
8115CC 79A1              MOV     R1,#LOW 08010A1H
8115CE 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8115D1 A5128007B6        ECALL   ?C?PSTXDATA
8115D6 900468            MOV     DPTR,#SystemParameter+048H
8115D9 E0                MOVX    A,@DPTR
8115DA FC                MOV     R4,A
8115DB A3                INC     DPTR
8115DC E0                MOVX    A,@DPTR
8115DD FD                MOV     R5,A
8115DE 900451            MOV     DPTR,#SystemParameter+031H
8115E1 E0                MOVX    A,@DPTR
8115E2 FE                MOV     R6,A
8115E3 A3                INC     DPTR
8115E4 E0                MOVX    A,@DPTR
8115E5 FF                MOV     R7,A
8115E6 A51280056C        ECALL   ?C?UIDIV
8115EB 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8115EE EE                MOV     A,R6
8115EF F0                MOVX    @DPTR,A
8115F0 A3                INC     DPTR
8115F1 EF                MOV     A,R7
8115F2 F0                MOVX    @DPTR,A
8115F3 900468            MOV     DPTR,#SystemParameter+048H
8115F6 E0                MOVX    A,@DPTR
8115F7 FC                MOV     R4,A
8115F8 A3                INC     DPTR
8115F9 E0                MOVX    A,@DPTR
8115FA FD                MOV     R5,A
8115FB 900451            MOV     DPTR,#SystemParameter+031H
8115FE E0                MOVX    A,@DPTR
8115FF FE                MOV     R6,A
811600 A3                INC     DPTR
811601 E0                MOVX    A,@DPTR
811602 FF                MOV     R7,A
811603 A51280056C        ECALL   ?C?UIDIV
811608 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
81160B EC                MOV     A,R4
81160C F0                MOVX    @DPTR,A
81160D A3                INC     DPTR
81160E ED                MOV     A,R5
81160F         
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 722


  639: 					break;					
81160F 022427            LJMP    ?C0483?SYSPARAMSET
  640: 				}				
  641: 			}
811612         ?C0211?SYSPARAMSET:
  642: 			else
  643: 			{				
  644: 				//Trace( "\n set IP val \n");
  645: 				j = *len;											
811612 90175A            MOV     DPTR,#len
811615 E0                MOVX    A,@DPTR
811616 FE                MOV     R6,A
811617 A3                INC     DPTR
811618 E0                MOVX    A,@DPTR
811619 F582              MOV     DPL,A
81161B 8E83              MOV     DPH,R6
81161D E0                MOVX    A,@DPTR
81161E 90175C            MOV     DPTR,#j
811621 F0                MOVX    @DPTR,A
  646: 				if( j == 0 )
811622 7003              JNZ     $ + 5H
811624 02256F            LJMP    ?C0351?SYSPARAMSET
  647: 					break;
811627         ?C0217?SYSPARAMSET:
  648: 				if( j > 5 )
811627 90175C            MOV     DPTR,#j
81162A E0                MOVX    A,@DPTR
81162B D3                SETB    C
81162C 9405              SUBB    A,#05H
81162E 4003              JC      ?C0218?SYSPARAMSET
  649: 					j = 5;
811630 7405              MOV     A,#05H
811632 F0                MOVX    @DPTR,A
811633         ?C0218?SYSPARAMSET:
  650: 				SystemParameter.billValue[4] = 0;	
811633 E4                CLR     A
811634 900451            MOV     DPTR,#SystemParameter+031H
811637 F0                MOVX    @DPTR,A
811638 A3                INC     DPTR
811639 F0                MOVX    @DPTR,A
  651: 				for( i = 0; i < j; i ++ )
81163A 90175D            MOV     DPTR,#i
81163D F0                MOVX    @DPTR,A
81163E         ?C0219?SYSPARAMSET:
81163E 90175C            MOV     DPTR,#j
811641 E0                MOVX    A,@DPTR
811642 FF                MOV     R7,A
811643 A3                INC     DPTR
811644 E0                MOVX    A,@DPTR
811645 FE                MOV     R6,A
811646 C3                CLR     C
811647 9F                SUBB    A,R7
811648 5044              JNC     ?C0220?SYSPARAMSET
  652: 				{
  653: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
81164A 901758            MOV     DPTR,#InStr
81164D E0                MOVX    A,@DPTR
81164E FC                MOV     R4,A
81164F A3                INC     DPTR
811650 E0                MOVX    A,@DPTR
811651 2E                ADD     A,R6
811652 F582              MOV     DPL,A
811654 E4                CLR     A
811655 3C                ADDC    A,R4
811656 F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 723


811658 E0                MOVX    A,@DPTR
811659 FF                MOV     R7,A
81165A C3                CLR     C
81165B 9400              SUBB    A,#00H
81165D 4027              JC      ?C0221?SYSPARAMSET
81165F EF                MOV     A,R7
811660 D3                SETB    C
811661 9409              SUBB    A,#09H
811663 5021              JNC     ?C0221?SYSPARAMSET
  654: 						SystemParameter.billValue[4] = SystemParameter.billValue[4]*10 + *( InStr + i );						
811665 EF                MOV     A,R7
811666 FB                MOV     R3,A
811667 7A00              MOV     R2,#00H
811669 900451            MOV     DPTR,#SystemParameter+031H
81166C E0                MOVX    A,@DPTR
81166D FE                MOV     R6,A
81166E A3                INC     DPTR
81166F E0                MOVX    A,@DPTR
811670 FF                MOV     R7,A
811671 7C00              MOV     R4,#00H
811673 7D0A              MOV     R5,#0AH
811675 A512800559        ECALL   ?C?IMUL
81167A EF                MOV     A,R7
81167B 2B                ADD     A,R3
81167C FF                MOV     R7,A
81167D EA                MOV     A,R2
81167E 3E                ADDC    A,R6
81167F 900451            MOV     DPTR,#SystemParameter+031H
811682 F0                MOVX    @DPTR,A
811683 A3                INC     DPTR
811684 EF                MOV     A,R7
811685 F0                MOVX    @DPTR,A
  655: 				}	
811686         ?C0221?SYSPARAMSET:
811686 90175D            MOV     DPTR,#i
811689 E0                MOVX    A,@DPTR
81168A 04                INC     A
81168B F0                MOVX    @DPTR,A
81168C 80B0              SJMP    ?C0219?SYSPARAMSET
81168E         ?C0220?SYSPARAMSET:
  656: 				SystemSave = 1;
81168E D22E              SETB    SystemSave
  657: 			}			
  658: 		break;
811690 02256F            LJMP    ?C0351?SYSPARAMSET
  659:         case 19: //# 6 note
811693         ?C0223?SYSPARAMSET:
  660:         if( OutInFlag == 0 )
811693 301A03            JNB     OutInFlag,$ + 6H
811696 0217A3            LJMP    ?C0224?SYSPARAMSET
  661: 			{			
  662: 				switch( SystemParameter.curUnit )
811699 900468            MOV     DPTR,#SystemParameter+048H
81169C E0                MOVX    A,@DPTR
81169D FE                MOV     R6,A
81169E A3                INC     DPTR
81169F E0                MOVX    A,@DPTR
8116A0 FF                MOV     R7,A
8116A1 EE                MOV     A,R6
8116A2 6003              JZ      $ + 5H
8116A4 02256F            LJMP    ?C0351?SYSPARAMSET
8116A7 EF                MOV     A,R7
8116A8 24F6              ADD     A,#0F6H
8116AA 603F              JZ      ?C0227?SYSPARAMSET
8116AC 24A6              ADD     A,#0A6H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 724


8116AE 7003              JNZ     $ + 5H
8116B0 021747            LJMP    ?C0228?SYSPARAMSET
8116B3 2463              ADD     A,#063H
8116B5 6003              JZ      $ + 5H
8116B7 02256F            LJMP    ?C0351?SYSPARAMSET
  663: 				{
  664: 					case 1:
8116BA         ?C0226?SYSPARAMSET:
  665: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[5] );
8116BA 901756            MOV     DPTR,#OutStr
8116BD E0                MOVX    A,@DPTR
8116BE FE                MOV     R6,A
8116BF A3                INC     DPTR
8116C0 E0                MOVX    A,@DPTR
8116C1 AA06              MOV     R2,AR6
8116C3 F9                MOV     R1,A
8116C4 7B00              MOV     R3,#?C?XDATASEG
8116C6 C003              PUSH    AR3
8116C8 C002              PUSH    AR2
8116CA C001              PUSH    AR1
8116CC 7B80              MOV     R3,#BYTE2 0801098H
8116CE 7A10              MOV     R2,#HIGH 0801098H
8116D0 7998              MOV     R1,#LOW 0801098H
8116D2 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8116D5 A5128007B6        ECALL   ?C?PSTXDATA
8116DA 900453            MOV     DPTR,#SystemParameter+033H
8116DD E0                MOVX    A,@DPTR
8116DE FF                MOV     R7,A
8116DF A3                INC     DPTR
8116E0 E0                MOVX    A,@DPTR
8116E1 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8116E4 CF                XCH     A,R7
8116E5 F0                MOVX    @DPTR,A
8116E6 A3                INC     DPTR
8116E7 EF                MOV     A,R7
8116E8         
  666: 					break;				
8116E8 022427            LJMP    ?C0483?SYSPARAMSET
  667: 					case 10:
8116EB         ?C0227?SYSPARAMSET:
  668: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[5]/SystemParameter.curUnit,SystemParameter.billV
>> alue[5]%SystemParameter.curUnit );
8116EB 901756            MOV     DPTR,#OutStr
8116EE E0                MOVX    A,@DPTR
8116EF FE                MOV     R6,A
8116F0 A3                INC     DPTR
8116F1 E0                MOVX    A,@DPTR
8116F2 AA06              MOV     R2,AR6
8116F4 F9                MOV     R1,A
8116F5 7B00              MOV     R3,#?C?XDATASEG
8116F7 C003              PUSH    AR3
8116F9 C002              PUSH    AR2
8116FB C001              PUSH    AR1
8116FD 7B80              MOV     R3,#BYTE2 080109BH
8116FF 7A10              MOV     R2,#HIGH 080109BH
811701 799B              MOV     R1,#LOW 080109BH
811703 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811706 A5128007B6        ECALL   ?C?PSTXDATA
81170B 900468            MOV     DPTR,#SystemParameter+048H
81170E E0                MOVX    A,@DPTR
81170F FC                MOV     R4,A
811710 A3                INC     DPTR
811711 E0                MOVX    A,@DPTR
811712 FD                MOV     R5,A
811713 900453            MOV     DPTR,#SystemParameter+033H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 725


811716 E0                MOVX    A,@DPTR
811717 FE                MOV     R6,A
811718 A3                INC     DPTR
811719 E0                MOVX    A,@DPTR
81171A FF                MOV     R7,A
81171B A51280056C        ECALL   ?C?UIDIV
811720 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811723 EE                MOV     A,R6
811724 F0                MOVX    @DPTR,A
811725 A3                INC     DPTR
811726 EF                MOV     A,R7
811727 F0                MOVX    @DPTR,A
811728 900468            MOV     DPTR,#SystemParameter+048H
81172B E0                MOVX    A,@DPTR
81172C FC                MOV     R4,A
81172D A3                INC     DPTR
81172E E0                MOVX    A,@DPTR
81172F FD                MOV     R5,A
811730 900453            MOV     DPTR,#SystemParameter+033H
811733 E0                MOVX    A,@DPTR
811734 FE                MOV     R6,A
811735 A3                INC     DPTR
811736 E0                MOVX    A,@DPTR
811737 FF                MOV     R7,A
811738 A51280056C        ECALL   ?C?UIDIV
81173D 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811740 EC                MOV     A,R4
811741 F0                MOVX    @DPTR,A
811742 A3                INC     DPTR
811743 ED                MOV     A,R5
811744         
  669: 					break;
811744 022427            LJMP    ?C0483?SYSPARAMSET
  670: 					case 100:
811747         ?C0228?SYSPARAMSET:
  671: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[5]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[5]%SystemParameter.curUnit );
811747 901756            MOV     DPTR,#OutStr
81174A E0                MOVX    A,@DPTR
81174B FE                MOV     R6,A
81174C A3                INC     DPTR
81174D E0                MOVX    A,@DPTR
81174E AA06              MOV     R2,AR6
811750 F9                MOV     R1,A
811751 7B00              MOV     R3,#?C?XDATASEG
811753 C003              PUSH    AR3
811755 C002              PUSH    AR2
811757 C001              PUSH    AR1
811759 7B80              MOV     R3,#BYTE2 08010A1H
81175B 7A10              MOV     R2,#HIGH 08010A1H
81175D 79A1              MOV     R1,#LOW 08010A1H
81175F 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811762 A5128007B6        ECALL   ?C?PSTXDATA
811767 900468            MOV     DPTR,#SystemParameter+048H
81176A E0                MOVX    A,@DPTR
81176B FC                MOV     R4,A
81176C A3                INC     DPTR
81176D E0                MOVX    A,@DPTR
81176E FD                MOV     R5,A
81176F 900453            MOV     DPTR,#SystemParameter+033H
811772 E0                MOVX    A,@DPTR
811773 FE                MOV     R6,A
811774 A3                INC     DPTR
811775 E0                MOVX    A,@DPTR
811776 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 726


811777 A51280056C        ECALL   ?C?UIDIV
81177C 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81177F EE                MOV     A,R6
811780 F0                MOVX    @DPTR,A
811781 A3                INC     DPTR
811782 EF                MOV     A,R7
811783 F0                MOVX    @DPTR,A
811784 900468            MOV     DPTR,#SystemParameter+048H
811787 E0                MOVX    A,@DPTR
811788 FC                MOV     R4,A
811789 A3                INC     DPTR
81178A E0                MOVX    A,@DPTR
81178B FD                MOV     R5,A
81178C 900453            MOV     DPTR,#SystemParameter+033H
81178F E0                MOVX    A,@DPTR
811790 FE                MOV     R6,A
811791 A3                INC     DPTR
811792 E0                MOVX    A,@DPTR
811793 FF                MOV     R7,A
811794 A51280056C        ECALL   ?C?UIDIV
811799 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
81179C EC                MOV     A,R4
81179D F0                MOVX    @DPTR,A
81179E A3                INC     DPTR
81179F ED                MOV     A,R5
8117A0         
  672: 					break;					
8117A0 022427            LJMP    ?C0483?SYSPARAMSET
  673: 				}				
  674: 			}
8117A3         ?C0224?SYSPARAMSET:
  675: 			else
  676: 			{				
  677: 				//Trace( "\n set IP val \n");
  678: 				j = *len;											
8117A3 90175A            MOV     DPTR,#len
8117A6 E0                MOVX    A,@DPTR
8117A7 FE                MOV     R6,A
8117A8 A3                INC     DPTR
8117A9 E0                MOVX    A,@DPTR
8117AA F582              MOV     DPL,A
8117AC 8E83              MOV     DPH,R6
8117AE E0                MOVX    A,@DPTR
8117AF 90175C            MOV     DPTR,#j
8117B2 F0                MOVX    @DPTR,A
  679: 				if( j == 0 )
8117B3 7003              JNZ     $ + 5H
8117B5 02256F            LJMP    ?C0351?SYSPARAMSET
  680: 					break;
8117B8         ?C0230?SYSPARAMSET:
  681: 				if( j > 5 )
8117B8 90175C            MOV     DPTR,#j
8117BB E0                MOVX    A,@DPTR
8117BC D3                SETB    C
8117BD 9405              SUBB    A,#05H
8117BF 4003              JC      ?C0231?SYSPARAMSET
  682: 					j = 5;
8117C1 7405              MOV     A,#05H
8117C3 F0                MOVX    @DPTR,A
8117C4         ?C0231?SYSPARAMSET:
  683: 				SystemParameter.billValue[5] = 0;	
8117C4 E4                CLR     A
8117C5 900453            MOV     DPTR,#SystemParameter+033H
8117C8 F0                MOVX    @DPTR,A
8117C9 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 727


8117CA F0                MOVX    @DPTR,A
  684: 				for( i = 0; i < j; i ++ )
8117CB 90175D            MOV     DPTR,#i
8117CE F0                MOVX    @DPTR,A
8117CF         ?C0232?SYSPARAMSET:
8117CF 90175C            MOV     DPTR,#j
8117D2 E0                MOVX    A,@DPTR
8117D3 FF                MOV     R7,A
8117D4 A3                INC     DPTR
8117D5 E0                MOVX    A,@DPTR
8117D6 FE                MOV     R6,A
8117D7 C3                CLR     C
8117D8 9F                SUBB    A,R7
8117D9 5044              JNC     ?C0233?SYSPARAMSET
  685: 				{
  686: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
8117DB 901758            MOV     DPTR,#InStr
8117DE E0                MOVX    A,@DPTR
8117DF FC                MOV     R4,A
8117E0 A3                INC     DPTR
8117E1 E0                MOVX    A,@DPTR
8117E2 2E                ADD     A,R6
8117E3 F582              MOV     DPL,A
8117E5 E4                CLR     A
8117E6 3C                ADDC    A,R4
8117E7 F583              MOV     DPH,A
8117E9 E0                MOVX    A,@DPTR
8117EA FF                MOV     R7,A
8117EB C3                CLR     C
8117EC 9400              SUBB    A,#00H
8117EE 4027              JC      ?C0234?SYSPARAMSET
8117F0 EF                MOV     A,R7
8117F1 D3                SETB    C
8117F2 9409              SUBB    A,#09H
8117F4 5021              JNC     ?C0234?SYSPARAMSET
  687: 						SystemParameter.billValue[5] = SystemParameter.billValue[5]*10 + *( InStr + i );						
8117F6 EF                MOV     A,R7
8117F7 FB                MOV     R3,A
8117F8 7A00              MOV     R2,#00H
8117FA 900453            MOV     DPTR,#SystemParameter+033H
8117FD E0                MOVX    A,@DPTR
8117FE FE                MOV     R6,A
8117FF A3                INC     DPTR
811800 E0                MOVX    A,@DPTR
811801 FF                MOV     R7,A
811802 7C00              MOV     R4,#00H
811804 7D0A              MOV     R5,#0AH
811806 A512800559        ECALL   ?C?IMUL
81180B EF                MOV     A,R7
81180C 2B                ADD     A,R3
81180D FF                MOV     R7,A
81180E EA                MOV     A,R2
81180F 3E                ADDC    A,R6
811810 900453            MOV     DPTR,#SystemParameter+033H
811813 F0                MOVX    @DPTR,A
811814 A3                INC     DPTR
811815 EF                MOV     A,R7
811816 F0                MOVX    @DPTR,A
  688: 				}	
811817         ?C0234?SYSPARAMSET:
811817 90175D            MOV     DPTR,#i
81181A E0                MOVX    A,@DPTR
81181B 04                INC     A
81181C F0                MOVX    @DPTR,A
81181D 80B0              SJMP    ?C0232?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 728


81181F         ?C0233?SYSPARAMSET:
  689: 				SystemSave = 1;
81181F D22E              SETB    SystemSave
  690: 			}			
  691: 		break;
811821 02256F            LJMP    ?C0351?SYSPARAMSET
  692:         case 20: //# 7 note
811824         ?C0236?SYSPARAMSET:
  693:         if( OutInFlag == 0 )
811824 301A03            JNB     OutInFlag,$ + 6H
811827 021934            LJMP    ?C0237?SYSPARAMSET
  694: 			{			
  695: 				switch( SystemParameter.curUnit )
81182A 900468            MOV     DPTR,#SystemParameter+048H
81182D E0                MOVX    A,@DPTR
81182E FE                MOV     R6,A
81182F A3                INC     DPTR
811830 E0                MOVX    A,@DPTR
811831 FF                MOV     R7,A
811832 EE                MOV     A,R6
811833 6003              JZ      $ + 5H
811835 02256F            LJMP    ?C0351?SYSPARAMSET
811838 EF                MOV     A,R7
811839 24F6              ADD     A,#0F6H
81183B 603F              JZ      ?C0240?SYSPARAMSET
81183D 24A6              ADD     A,#0A6H
81183F 7003              JNZ     $ + 5H
811841 0218D8            LJMP    ?C0241?SYSPARAMSET
811844 2463              ADD     A,#063H
811846 6003              JZ      $ + 5H
811848 02256F            LJMP    ?C0351?SYSPARAMSET
  696: 				{
  697: 					case 1:
81184B         ?C0239?SYSPARAMSET:
  698: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[6] );
81184B 901756            MOV     DPTR,#OutStr
81184E E0                MOVX    A,@DPTR
81184F FE                MOV     R6,A
811850 A3                INC     DPTR
811851 E0                MOVX    A,@DPTR
811852 AA06              MOV     R2,AR6
811854 F9                MOV     R1,A
811855 7B00              MOV     R3,#?C?XDATASEG
811857 C003              PUSH    AR3
811859 C002              PUSH    AR2
81185B C001              PUSH    AR1
81185D 7B80              MOV     R3,#BYTE2 0801098H
81185F 7A10              MOV     R2,#HIGH 0801098H
811861 7998              MOV     R1,#LOW 0801098H
811863 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811866 A5128007B6        ECALL   ?C?PSTXDATA
81186B 900455            MOV     DPTR,#SystemParameter+035H
81186E E0                MOVX    A,@DPTR
81186F FF                MOV     R7,A
811870 A3                INC     DPTR
811871 E0                MOVX    A,@DPTR
811872 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811875 CF                XCH     A,R7
811876 F0                MOVX    @DPTR,A
811877 A3                INC     DPTR
811878 EF                MOV     A,R7
811879         
  699: 					break;				
811879 022427            LJMP    ?C0483?SYSPARAMSET
  700: 					case 10:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 729


81187C         ?C0240?SYSPARAMSET:
  701: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[6]/SystemParameter.curUnit,SystemParameter.billV
>> alue[6]%SystemParameter.curUnit );
81187C 901756            MOV     DPTR,#OutStr
81187F E0                MOVX    A,@DPTR
811880 FE                MOV     R6,A
811881 A3                INC     DPTR
811882 E0                MOVX    A,@DPTR
811883 AA06              MOV     R2,AR6
811885 F9                MOV     R1,A
811886 7B00              MOV     R3,#?C?XDATASEG
811888 C003              PUSH    AR3
81188A C002              PUSH    AR2
81188C C001              PUSH    AR1
81188E 7B80              MOV     R3,#BYTE2 080109BH
811890 7A10              MOV     R2,#HIGH 080109BH
811892 799B              MOV     R1,#LOW 080109BH
811894 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811897 A5128007B6        ECALL   ?C?PSTXDATA
81189C 900468            MOV     DPTR,#SystemParameter+048H
81189F E0                MOVX    A,@DPTR
8118A0 FC                MOV     R4,A
8118A1 A3                INC     DPTR
8118A2 E0                MOVX    A,@DPTR
8118A3 FD                MOV     R5,A
8118A4 900455            MOV     DPTR,#SystemParameter+035H
8118A7 E0                MOVX    A,@DPTR
8118A8 FE                MOV     R6,A
8118A9 A3                INC     DPTR
8118AA E0                MOVX    A,@DPTR
8118AB FF                MOV     R7,A
8118AC A51280056C        ECALL   ?C?UIDIV
8118B1 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8118B4 EE                MOV     A,R6
8118B5 F0                MOVX    @DPTR,A
8118B6 A3                INC     DPTR
8118B7 EF                MOV     A,R7
8118B8 F0                MOVX    @DPTR,A
8118B9 900468            MOV     DPTR,#SystemParameter+048H
8118BC E0                MOVX    A,@DPTR
8118BD FC                MOV     R4,A
8118BE A3                INC     DPTR
8118BF E0                MOVX    A,@DPTR
8118C0 FD                MOV     R5,A
8118C1 900455            MOV     DPTR,#SystemParameter+035H
8118C4 E0                MOVX    A,@DPTR
8118C5 FE                MOV     R6,A
8118C6 A3                INC     DPTR
8118C7 E0                MOVX    A,@DPTR
8118C8 FF                MOV     R7,A
8118C9 A51280056C        ECALL   ?C?UIDIV
8118CE 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8118D1 EC                MOV     A,R4
8118D2 F0                MOVX    @DPTR,A
8118D3 A3                INC     DPTR
8118D4 ED                MOV     A,R5
8118D5         
  702: 					break;
8118D5 022427            LJMP    ?C0483?SYSPARAMSET
  703: 					case 100:
8118D8         ?C0241?SYSPARAMSET:
  704: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[6]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[6]%SystemParameter.curUnit );
8118D8 901756            MOV     DPTR,#OutStr
8118DB E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 730


8118DC FE                MOV     R6,A
8118DD A3                INC     DPTR
8118DE E0                MOVX    A,@DPTR
8118DF AA06              MOV     R2,AR6
8118E1 F9                MOV     R1,A
8118E2 7B00              MOV     R3,#?C?XDATASEG
8118E4 C003              PUSH    AR3
8118E6 C002              PUSH    AR2
8118E8 C001              PUSH    AR1
8118EA 7B80              MOV     R3,#BYTE2 08010A1H
8118EC 7A10              MOV     R2,#HIGH 08010A1H
8118EE 79A1              MOV     R1,#LOW 08010A1H
8118F0 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8118F3 A5128007B6        ECALL   ?C?PSTXDATA
8118F8 900468            MOV     DPTR,#SystemParameter+048H
8118FB E0                MOVX    A,@DPTR
8118FC FC                MOV     R4,A
8118FD A3                INC     DPTR
8118FE E0                MOVX    A,@DPTR
8118FF FD                MOV     R5,A
811900 900455            MOV     DPTR,#SystemParameter+035H
811903 E0                MOVX    A,@DPTR
811904 FE                MOV     R6,A
811905 A3                INC     DPTR
811906 E0                MOVX    A,@DPTR
811907 FF                MOV     R7,A
811908 A51280056C        ECALL   ?C?UIDIV
81190D 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811910 EE                MOV     A,R6
811911 F0                MOVX    @DPTR,A
811912 A3                INC     DPTR
811913 EF                MOV     A,R7
811914 F0                MOVX    @DPTR,A
811915 900468            MOV     DPTR,#SystemParameter+048H
811918 E0                MOVX    A,@DPTR
811919 FC                MOV     R4,A
81191A A3                INC     DPTR
81191B E0                MOVX    A,@DPTR
81191C FD                MOV     R5,A
81191D 900455            MOV     DPTR,#SystemParameter+035H
811920 E0                MOVX    A,@DPTR
811921 FE                MOV     R6,A
811922 A3                INC     DPTR
811923 E0                MOVX    A,@DPTR
811924 FF                MOV     R7,A
811925 A51280056C        ECALL   ?C?UIDIV
81192A 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
81192D EC                MOV     A,R4
81192E F0                MOVX    @DPTR,A
81192F A3                INC     DPTR
811930 ED                MOV     A,R5
811931         
  705: 					break;					
811931 022427            LJMP    ?C0483?SYSPARAMSET
  706: 				}				
  707: 			}
811934         ?C0237?SYSPARAMSET:
  708: 			else
  709: 			{				
  710: 				//Trace( "\n set IP val \n");
  711: 				j = *len;											
811934 90175A            MOV     DPTR,#len
811937 E0                MOVX    A,@DPTR
811938 FE                MOV     R6,A
811939 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 731


81193A E0                MOVX    A,@DPTR
81193B F582              MOV     DPL,A
81193D 8E83              MOV     DPH,R6
81193F E0                MOVX    A,@DPTR
811940 90175C            MOV     DPTR,#j
811943 F0                MOVX    @DPTR,A
  712: 				if( j == 0 )
811944 7003              JNZ     $ + 5H
811946 02256F            LJMP    ?C0351?SYSPARAMSET
  713: 					break;
811949         ?C0243?SYSPARAMSET:
  714: 				if( j > 5 )
811949 90175C            MOV     DPTR,#j
81194C E0                MOVX    A,@DPTR
81194D D3                SETB    C
81194E 9405              SUBB    A,#05H
811950 4003              JC      ?C0244?SYSPARAMSET
  715: 					j = 5;
811952 7405              MOV     A,#05H
811954 F0                MOVX    @DPTR,A
811955         ?C0244?SYSPARAMSET:
  716: 				SystemParameter.billValue[6] = 0;	
811955 E4                CLR     A
811956 900455            MOV     DPTR,#SystemParameter+035H
811959 F0                MOVX    @DPTR,A
81195A A3                INC     DPTR
81195B F0                MOVX    @DPTR,A
  717: 				for( i = 0; i < j; i ++ )
81195C 90175D            MOV     DPTR,#i
81195F F0                MOVX    @DPTR,A
811960         ?C0245?SYSPARAMSET:
811960 90175C            MOV     DPTR,#j
811963 E0                MOVX    A,@DPTR
811964 FF                MOV     R7,A
811965 A3                INC     DPTR
811966 E0                MOVX    A,@DPTR
811967 FE                MOV     R6,A
811968 C3                CLR     C
811969 9F                SUBB    A,R7
81196A 5044              JNC     ?C0246?SYSPARAMSET
  718: 				{
  719: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
81196C 901758            MOV     DPTR,#InStr
81196F E0                MOVX    A,@DPTR
811970 FC                MOV     R4,A
811971 A3                INC     DPTR
811972 E0                MOVX    A,@DPTR
811973 2E                ADD     A,R6
811974 F582              MOV     DPL,A
811976 E4                CLR     A
811977 3C                ADDC    A,R4
811978 F583              MOV     DPH,A
81197A E0                MOVX    A,@DPTR
81197B FF                MOV     R7,A
81197C C3                CLR     C
81197D 9400              SUBB    A,#00H
81197F 4027              JC      ?C0247?SYSPARAMSET
811981 EF                MOV     A,R7
811982 D3                SETB    C
811983 9409              SUBB    A,#09H
811985 5021              JNC     ?C0247?SYSPARAMSET
  720: 						SystemParameter.billValue[6] = SystemParameter.billValue[6]*10 + *( InStr + i );						
811987 EF                MOV     A,R7
811988 FB                MOV     R3,A
811989 7A00              MOV     R2,#00H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 732


81198B 900455            MOV     DPTR,#SystemParameter+035H
81198E E0                MOVX    A,@DPTR
81198F FE                MOV     R6,A
811990 A3                INC     DPTR
811991 E0                MOVX    A,@DPTR
811992 FF                MOV     R7,A
811993 7C00              MOV     R4,#00H
811995 7D0A              MOV     R5,#0AH
811997 A512800559        ECALL   ?C?IMUL
81199C EF                MOV     A,R7
81199D 2B                ADD     A,R3
81199E FF                MOV     R7,A
81199F EA                MOV     A,R2
8119A0 3E                ADDC    A,R6
8119A1 900455            MOV     DPTR,#SystemParameter+035H
8119A4 F0                MOVX    @DPTR,A
8119A5 A3                INC     DPTR
8119A6 EF                MOV     A,R7
8119A7 F0                MOVX    @DPTR,A
  721: 				}	
8119A8         ?C0247?SYSPARAMSET:
8119A8 90175D            MOV     DPTR,#i
8119AB E0                MOVX    A,@DPTR
8119AC 04                INC     A
8119AD F0                MOVX    @DPTR,A
8119AE 80B0              SJMP    ?C0245?SYSPARAMSET
8119B0         ?C0246?SYSPARAMSET:
  722: 				SystemSave = 1;
8119B0 D22E              SETB    SystemSave
  723: 			}			
  724: 		break;
8119B2 02256F            LJMP    ?C0351?SYSPARAMSET
  725:         case 21: //# 8 note
8119B5         ?C0249?SYSPARAMSET:
  726:         if( OutInFlag == 0 )
8119B5 301A03            JNB     OutInFlag,$ + 6H
8119B8 021AC5            LJMP    ?C0250?SYSPARAMSET
  727: 			{			
  728: 				switch( SystemParameter.curUnit )
8119BB 900468            MOV     DPTR,#SystemParameter+048H
8119BE E0                MOVX    A,@DPTR
8119BF FE                MOV     R6,A
8119C0 A3                INC     DPTR
8119C1 E0                MOVX    A,@DPTR
8119C2 FF                MOV     R7,A
8119C3 EE                MOV     A,R6
8119C4 6003              JZ      $ + 5H
8119C6 02256F            LJMP    ?C0351?SYSPARAMSET
8119C9 EF                MOV     A,R7
8119CA 24F6              ADD     A,#0F6H
8119CC 603F              JZ      ?C0253?SYSPARAMSET
8119CE 24A6              ADD     A,#0A6H
8119D0 7003              JNZ     $ + 5H
8119D2 021A69            LJMP    ?C0254?SYSPARAMSET
8119D5 2463              ADD     A,#063H
8119D7 6003              JZ      $ + 5H
8119D9 02256F            LJMP    ?C0351?SYSPARAMSET
  729: 				{
  730: 					case 1:
8119DC         ?C0252?SYSPARAMSET:
  731: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[7] );
8119DC 901756            MOV     DPTR,#OutStr
8119DF E0                MOVX    A,@DPTR
8119E0 FE                MOV     R6,A
8119E1 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 733


8119E2 E0                MOVX    A,@DPTR
8119E3 AA06              MOV     R2,AR6
8119E5 F9                MOV     R1,A
8119E6 7B00              MOV     R3,#?C?XDATASEG
8119E8 C003              PUSH    AR3
8119EA C002              PUSH    AR2
8119EC C001              PUSH    AR1
8119EE 7B80              MOV     R3,#BYTE2 0801098H
8119F0 7A10              MOV     R2,#HIGH 0801098H
8119F2 7998              MOV     R1,#LOW 0801098H
8119F4 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8119F7 A5128007B6        ECALL   ?C?PSTXDATA
8119FC 900457            MOV     DPTR,#SystemParameter+037H
8119FF E0                MOVX    A,@DPTR
811A00 FF                MOV     R7,A
811A01 A3                INC     DPTR
811A02 E0                MOVX    A,@DPTR
811A03 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811A06 CF                XCH     A,R7
811A07 F0                MOVX    @DPTR,A
811A08 A3                INC     DPTR
811A09 EF                MOV     A,R7
811A0A         
  732: 					break;				
811A0A 022427            LJMP    ?C0483?SYSPARAMSET
  733: 					case 10:
811A0D         ?C0253?SYSPARAMSET:
  734: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[7]/SystemParameter.curUnit,SystemParameter.billV
>> alue[7]%SystemParameter.curUnit );
811A0D 901756            MOV     DPTR,#OutStr
811A10 E0                MOVX    A,@DPTR
811A11 FE                MOV     R6,A
811A12 A3                INC     DPTR
811A13 E0                MOVX    A,@DPTR
811A14 AA06              MOV     R2,AR6
811A16 F9                MOV     R1,A
811A17 7B00              MOV     R3,#?C?XDATASEG
811A19 C003              PUSH    AR3
811A1B C002              PUSH    AR2
811A1D C001              PUSH    AR1
811A1F 7B80              MOV     R3,#BYTE2 080109BH
811A21 7A10              MOV     R2,#HIGH 080109BH
811A23 799B              MOV     R1,#LOW 080109BH
811A25 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811A28 A5128007B6        ECALL   ?C?PSTXDATA
811A2D 900468            MOV     DPTR,#SystemParameter+048H
811A30 E0                MOVX    A,@DPTR
811A31 FC                MOV     R4,A
811A32 A3                INC     DPTR
811A33 E0                MOVX    A,@DPTR
811A34 FD                MOV     R5,A
811A35 900457            MOV     DPTR,#SystemParameter+037H
811A38 E0                MOVX    A,@DPTR
811A39 FE                MOV     R6,A
811A3A A3                INC     DPTR
811A3B E0                MOVX    A,@DPTR
811A3C FF                MOV     R7,A
811A3D A51280056C        ECALL   ?C?UIDIV
811A42 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811A45 EE                MOV     A,R6
811A46 F0                MOVX    @DPTR,A
811A47 A3                INC     DPTR
811A48 EF                MOV     A,R7
811A49 F0                MOVX    @DPTR,A
811A4A 900468            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 734


811A4D E0                MOVX    A,@DPTR
811A4E FC                MOV     R4,A
811A4F A3                INC     DPTR
811A50 E0                MOVX    A,@DPTR
811A51 FD                MOV     R5,A
811A52 900457            MOV     DPTR,#SystemParameter+037H
811A55 E0                MOVX    A,@DPTR
811A56 FE                MOV     R6,A
811A57 A3                INC     DPTR
811A58 E0                MOVX    A,@DPTR
811A59 FF                MOV     R7,A
811A5A A51280056C        ECALL   ?C?UIDIV
811A5F 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811A62 EC                MOV     A,R4
811A63 F0                MOVX    @DPTR,A
811A64 A3                INC     DPTR
811A65 ED                MOV     A,R5
811A66         
  735: 					break;
811A66 022427            LJMP    ?C0483?SYSPARAMSET
  736: 					case 100:
811A69         ?C0254?SYSPARAMSET:
  737: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[7]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[7]%SystemParameter.curUnit );
811A69 901756            MOV     DPTR,#OutStr
811A6C E0                MOVX    A,@DPTR
811A6D FE                MOV     R6,A
811A6E A3                INC     DPTR
811A6F E0                MOVX    A,@DPTR
811A70 AA06              MOV     R2,AR6
811A72 F9                MOV     R1,A
811A73 7B00              MOV     R3,#?C?XDATASEG
811A75 C003              PUSH    AR3
811A77 C002              PUSH    AR2
811A79 C001              PUSH    AR1
811A7B 7B80              MOV     R3,#BYTE2 08010A1H
811A7D 7A10              MOV     R2,#HIGH 08010A1H
811A7F 79A1              MOV     R1,#LOW 08010A1H
811A81 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811A84 A5128007B6        ECALL   ?C?PSTXDATA
811A89 900468            MOV     DPTR,#SystemParameter+048H
811A8C E0                MOVX    A,@DPTR
811A8D FC                MOV     R4,A
811A8E A3                INC     DPTR
811A8F E0                MOVX    A,@DPTR
811A90 FD                MOV     R5,A
811A91 900457            MOV     DPTR,#SystemParameter+037H
811A94 E0                MOVX    A,@DPTR
811A95 FE                MOV     R6,A
811A96 A3                INC     DPTR
811A97 E0                MOVX    A,@DPTR
811A98 FF                MOV     R7,A
811A99 A51280056C        ECALL   ?C?UIDIV
811A9E 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811AA1 EE                MOV     A,R6
811AA2 F0                MOVX    @DPTR,A
811AA3 A3                INC     DPTR
811AA4 EF                MOV     A,R7
811AA5 F0                MOVX    @DPTR,A
811AA6 900468            MOV     DPTR,#SystemParameter+048H
811AA9 E0                MOVX    A,@DPTR
811AAA FC                MOV     R4,A
811AAB A3                INC     DPTR
811AAC E0                MOVX    A,@DPTR
811AAD FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 735


811AAE 900457            MOV     DPTR,#SystemParameter+037H
811AB1 E0                MOVX    A,@DPTR
811AB2 FE                MOV     R6,A
811AB3 A3                INC     DPTR
811AB4 E0                MOVX    A,@DPTR
811AB5 FF                MOV     R7,A
811AB6 A51280056C        ECALL   ?C?UIDIV
811ABB 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811ABE EC                MOV     A,R4
811ABF F0                MOVX    @DPTR,A
811AC0 A3                INC     DPTR
811AC1 ED                MOV     A,R5
811AC2         
  738: 					break;					
811AC2 022427            LJMP    ?C0483?SYSPARAMSET
  739: 				}				
  740: 			}
811AC5         ?C0250?SYSPARAMSET:
  741: 			else
  742: 			{				
  743: 				//Trace( "\n set IP val \n");
  744: 				j = *len;											
811AC5 90175A            MOV     DPTR,#len
811AC8 E0                MOVX    A,@DPTR
811AC9 FE                MOV     R6,A
811ACA A3                INC     DPTR
811ACB E0                MOVX    A,@DPTR
811ACC F582              MOV     DPL,A
811ACE 8E83              MOV     DPH,R6
811AD0 E0                MOVX    A,@DPTR
811AD1 90175C            MOV     DPTR,#j
811AD4 F0                MOVX    @DPTR,A
  745: 				if( j == 0 )
811AD5 7003              JNZ     $ + 5H
811AD7 02256F            LJMP    ?C0351?SYSPARAMSET
  746: 					break;
811ADA         ?C0256?SYSPARAMSET:
  747: 				if( j > 5 )
811ADA 90175C            MOV     DPTR,#j
811ADD E0                MOVX    A,@DPTR
811ADE D3                SETB    C
811ADF 9405              SUBB    A,#05H
811AE1 4003              JC      ?C0257?SYSPARAMSET
  748: 					j = 5;
811AE3 7405              MOV     A,#05H
811AE5 F0                MOVX    @DPTR,A
811AE6         ?C0257?SYSPARAMSET:
  749: 				SystemParameter.billValue[7] = 0;	
811AE6 E4                CLR     A
811AE7 900457            MOV     DPTR,#SystemParameter+037H
811AEA F0                MOVX    @DPTR,A
811AEB A3                INC     DPTR
811AEC F0                MOVX    @DPTR,A
  750: 				for( i = 0; i < j; i ++ )
811AED 90175D            MOV     DPTR,#i
811AF0 F0                MOVX    @DPTR,A
811AF1         ?C0258?SYSPARAMSET:
811AF1 90175C            MOV     DPTR,#j
811AF4 E0                MOVX    A,@DPTR
811AF5 FF                MOV     R7,A
811AF6 A3                INC     DPTR
811AF7 E0                MOVX    A,@DPTR
811AF8 FE                MOV     R6,A
811AF9 C3                CLR     C
811AFA 9F                SUBB    A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 736


811AFB 5044              JNC     ?C0259?SYSPARAMSET
  751: 				{
  752: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
811AFD 901758            MOV     DPTR,#InStr
811B00 E0                MOVX    A,@DPTR
811B01 FC                MOV     R4,A
811B02 A3                INC     DPTR
811B03 E0                MOVX    A,@DPTR
811B04 2E                ADD     A,R6
811B05 F582              MOV     DPL,A
811B07 E4                CLR     A
811B08 3C                ADDC    A,R4
811B09 F583              MOV     DPH,A
811B0B E0                MOVX    A,@DPTR
811B0C FF                MOV     R7,A
811B0D C3                CLR     C
811B0E 9400              SUBB    A,#00H
811B10 4027              JC      ?C0260?SYSPARAMSET
811B12 EF                MOV     A,R7
811B13 D3                SETB    C
811B14 9409              SUBB    A,#09H
811B16 5021              JNC     ?C0260?SYSPARAMSET
  753: 						SystemParameter.billValue[7] = SystemParameter.billValue[7]*10 + *( InStr + i );						
811B18 EF                MOV     A,R7
811B19 FB                MOV     R3,A
811B1A 7A00              MOV     R2,#00H
811B1C 900457            MOV     DPTR,#SystemParameter+037H
811B1F E0                MOVX    A,@DPTR
811B20 FE                MOV     R6,A
811B21 A3                INC     DPTR
811B22 E0                MOVX    A,@DPTR
811B23 FF                MOV     R7,A
811B24 7C00              MOV     R4,#00H
811B26 7D0A              MOV     R5,#0AH
811B28 A512800559        ECALL   ?C?IMUL
811B2D EF                MOV     A,R7
811B2E 2B                ADD     A,R3
811B2F FF                MOV     R7,A
811B30 EA                MOV     A,R2
811B31 3E                ADDC    A,R6
811B32 900457            MOV     DPTR,#SystemParameter+037H
811B35 F0                MOVX    @DPTR,A
811B36 A3                INC     DPTR
811B37 EF                MOV     A,R7
811B38 F0                MOVX    @DPTR,A
  754: 				}	
811B39         ?C0260?SYSPARAMSET:
811B39 90175D            MOV     DPTR,#i
811B3C E0                MOVX    A,@DPTR
811B3D 04                INC     A
811B3E F0                MOVX    @DPTR,A
811B3F 80B0              SJMP    ?C0258?SYSPARAMSET
811B41         ?C0259?SYSPARAMSET:
  755: 				SystemSave = 1;
811B41 D22E              SETB    SystemSave
  756: 			}			
  757: 		break;
811B43 02256F            LJMP    ?C0351?SYSPARAMSET
  758:         // Coin value begin with 22
  759:         case 22: //# 1 coin
811B46         ?C0262?SYSPARAMSET:
  760:         if( OutInFlag == 0 )
811B46 301A03            JNB     OutInFlag,$ + 6H
811B49 021C56            LJMP    ?C0263?SYSPARAMSET
  761: 			{			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 737


  762: 				switch( SystemParameter.curUnit )
811B4C 900468            MOV     DPTR,#SystemParameter+048H
811B4F E0                MOVX    A,@DPTR
811B50 FE                MOV     R6,A
811B51 A3                INC     DPTR
811B52 E0                MOVX    A,@DPTR
811B53 FF                MOV     R7,A
811B54 EE                MOV     A,R6
811B55 6003              JZ      $ + 5H
811B57 02256F            LJMP    ?C0351?SYSPARAMSET
811B5A EF                MOV     A,R7
811B5B 24F6              ADD     A,#0F6H
811B5D 603F              JZ      ?C0266?SYSPARAMSET
811B5F 24A6              ADD     A,#0A6H
811B61 7003              JNZ     $ + 5H
811B63 021BFA            LJMP    ?C0267?SYSPARAMSET
811B66 2463              ADD     A,#063H
811B68 6003              JZ      $ + 5H
811B6A 02256F            LJMP    ?C0351?SYSPARAMSET
  763: 				{
  764: 					case 1:
811B6D         ?C0265?SYSPARAMSET:
  765: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[0] );
811B6D 901756            MOV     DPTR,#OutStr
811B70 E0                MOVX    A,@DPTR
811B71 FE                MOV     R6,A
811B72 A3                INC     DPTR
811B73 E0                MOVX    A,@DPTR
811B74 AA06              MOV     R2,AR6
811B76 F9                MOV     R1,A
811B77 7B00              MOV     R3,#?C?XDATASEG
811B79 C003              PUSH    AR3
811B7B C002              PUSH    AR2
811B7D C001              PUSH    AR1
811B7F 7B80              MOV     R3,#BYTE2 0801098H
811B81 7A10              MOV     R2,#HIGH 0801098H
811B83 7998              MOV     R1,#LOW 0801098H
811B85 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811B88 A5128007B6        ECALL   ?C?PSTXDATA
811B8D 900459            MOV     DPTR,#SystemParameter+039H
811B90 E0                MOVX    A,@DPTR
811B91 FF                MOV     R7,A
811B92 A3                INC     DPTR
811B93 E0                MOVX    A,@DPTR
811B94 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811B97 CF                XCH     A,R7
811B98 F0                MOVX    @DPTR,A
811B99 A3                INC     DPTR
811B9A EF                MOV     A,R7
811B9B         
  766: 					break;				
811B9B 022427            LJMP    ?C0483?SYSPARAMSET
  767: 					case 10:
811B9E         ?C0266?SYSPARAMSET:
  768: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[0]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[0]%SystemParameter.curUnit );
811B9E 901756            MOV     DPTR,#OutStr
811BA1 E0                MOVX    A,@DPTR
811BA2 FE                MOV     R6,A
811BA3 A3                INC     DPTR
811BA4 E0                MOVX    A,@DPTR
811BA5 AA06              MOV     R2,AR6
811BA7 F9                MOV     R1,A
811BA8 7B00              MOV     R3,#?C?XDATASEG
811BAA C003              PUSH    AR3
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 738


811BAC C002              PUSH    AR2
811BAE C001              PUSH    AR1
811BB0 7B80              MOV     R3,#BYTE2 080109BH
811BB2 7A10              MOV     R2,#HIGH 080109BH
811BB4 799B              MOV     R1,#LOW 080109BH
811BB6 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811BB9 A5128007B6        ECALL   ?C?PSTXDATA
811BBE 900468            MOV     DPTR,#SystemParameter+048H
811BC1 E0                MOVX    A,@DPTR
811BC2 FC                MOV     R4,A
811BC3 A3                INC     DPTR
811BC4 E0                MOVX    A,@DPTR
811BC5 FD                MOV     R5,A
811BC6 900459            MOV     DPTR,#SystemParameter+039H
811BC9 E0                MOVX    A,@DPTR
811BCA FE                MOV     R6,A
811BCB A3                INC     DPTR
811BCC E0                MOVX    A,@DPTR
811BCD FF                MOV     R7,A
811BCE A51280056C        ECALL   ?C?UIDIV
811BD3 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811BD6 EE                MOV     A,R6
811BD7 F0                MOVX    @DPTR,A
811BD8 A3                INC     DPTR
811BD9 EF                MOV     A,R7
811BDA F0                MOVX    @DPTR,A
811BDB 900468            MOV     DPTR,#SystemParameter+048H
811BDE E0                MOVX    A,@DPTR
811BDF FC                MOV     R4,A
811BE0 A3                INC     DPTR
811BE1 E0                MOVX    A,@DPTR
811BE2 FD                MOV     R5,A
811BE3 900459            MOV     DPTR,#SystemParameter+039H
811BE6 E0                MOVX    A,@DPTR
811BE7 FE                MOV     R6,A
811BE8 A3                INC     DPTR
811BE9 E0                MOVX    A,@DPTR
811BEA FF                MOV     R7,A
811BEB A51280056C        ECALL   ?C?UIDIV
811BF0 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811BF3 EC                MOV     A,R4
811BF4 F0                MOVX    @DPTR,A
811BF5 A3                INC     DPTR
811BF6 ED                MOV     A,R5
811BF7         
  769: 					break;
811BF7 022427            LJMP    ?C0483?SYSPARAMSET
  770: 					case 100:
811BFA         ?C0267?SYSPARAMSET:
  771: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[0]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[0]%SystemParameter.curUnit );
811BFA 901756            MOV     DPTR,#OutStr
811BFD E0                MOVX    A,@DPTR
811BFE FE                MOV     R6,A
811BFF A3                INC     DPTR
811C00 E0                MOVX    A,@DPTR
811C01 AA06              MOV     R2,AR6
811C03 F9                MOV     R1,A
811C04 7B00              MOV     R3,#?C?XDATASEG
811C06 C003              PUSH    AR3
811C08 C002              PUSH    AR2
811C0A C001              PUSH    AR1
811C0C 7B80              MOV     R3,#BYTE2 08010A1H
811C0E 7A10              MOV     R2,#HIGH 08010A1H
811C10 79A1              MOV     R1,#LOW 08010A1H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 739


811C12 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811C15 A5128007B6        ECALL   ?C?PSTXDATA
811C1A 900468            MOV     DPTR,#SystemParameter+048H
811C1D E0                MOVX    A,@DPTR
811C1E FC                MOV     R4,A
811C1F A3                INC     DPTR
811C20 E0                MOVX    A,@DPTR
811C21 FD                MOV     R5,A
811C22 900459            MOV     DPTR,#SystemParameter+039H
811C25 E0                MOVX    A,@DPTR
811C26 FE                MOV     R6,A
811C27 A3                INC     DPTR
811C28 E0                MOVX    A,@DPTR
811C29 FF                MOV     R7,A
811C2A A51280056C        ECALL   ?C?UIDIV
811C2F 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811C32 EE                MOV     A,R6
811C33 F0                MOVX    @DPTR,A
811C34 A3                INC     DPTR
811C35 EF                MOV     A,R7
811C36 F0                MOVX    @DPTR,A
811C37 900468            MOV     DPTR,#SystemParameter+048H
811C3A E0                MOVX    A,@DPTR
811C3B FC                MOV     R4,A
811C3C A3                INC     DPTR
811C3D E0                MOVX    A,@DPTR
811C3E FD                MOV     R5,A
811C3F 900459            MOV     DPTR,#SystemParameter+039H
811C42 E0                MOVX    A,@DPTR
811C43 FE                MOV     R6,A
811C44 A3                INC     DPTR
811C45 E0                MOVX    A,@DPTR
811C46 FF                MOV     R7,A
811C47 A51280056C        ECALL   ?C?UIDIV
811C4C 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811C4F EC                MOV     A,R4
811C50 F0                MOVX    @DPTR,A
811C51 A3                INC     DPTR
811C52 ED                MOV     A,R5
811C53         
  772: 					break;					
811C53 022427            LJMP    ?C0483?SYSPARAMSET
  773: 				}				
  774: 			}
811C56         ?C0263?SYSPARAMSET:
  775: 			else
  776: 			{				
  777: 				//Trace( "\n set IP val \n");
  778: 				j = *len;											
811C56 90175A            MOV     DPTR,#len
811C59 E0                MOVX    A,@DPTR
811C5A FE                MOV     R6,A
811C5B A3                INC     DPTR
811C5C E0                MOVX    A,@DPTR
811C5D F582              MOV     DPL,A
811C5F 8E83              MOV     DPH,R6
811C61 E0                MOVX    A,@DPTR
811C62 90175C            MOV     DPTR,#j
811C65 F0                MOVX    @DPTR,A
  779: 				if( j == 0 )
811C66 7003              JNZ     $ + 5H
811C68 02256F            LJMP    ?C0351?SYSPARAMSET
  780: 					break;
811C6B         ?C0269?SYSPARAMSET:
  781: 				if( j > 5 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 740


811C6B 90175C            MOV     DPTR,#j
811C6E E0                MOVX    A,@DPTR
811C6F D3                SETB    C
811C70 9405              SUBB    A,#05H
811C72 4003              JC      ?C0270?SYSPARAMSET
  782: 					j = 5;
811C74 7405              MOV     A,#05H
811C76 F0                MOVX    @DPTR,A
811C77         ?C0270?SYSPARAMSET:
  783: 				SystemParameter.coinValue[0] = 0;	
811C77 E4                CLR     A
811C78 900459            MOV     DPTR,#SystemParameter+039H
811C7B F0                MOVX    @DPTR,A
811C7C A3                INC     DPTR
811C7D F0                MOVX    @DPTR,A
  784: 				for( i = 0; i < j; i ++ )
811C7E 90175D            MOV     DPTR,#i
811C81 F0                MOVX    @DPTR,A
811C82         ?C0271?SYSPARAMSET:
811C82 90175C            MOV     DPTR,#j
811C85 E0                MOVX    A,@DPTR
811C86 FF                MOV     R7,A
811C87 A3                INC     DPTR
811C88 E0                MOVX    A,@DPTR
811C89 FE                MOV     R6,A
811C8A C3                CLR     C
811C8B 9F                SUBB    A,R7
811C8C 5044              JNC     ?C0272?SYSPARAMSET
  785: 				{
  786: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
811C8E 901758            MOV     DPTR,#InStr
811C91 E0                MOVX    A,@DPTR
811C92 FC                MOV     R4,A
811C93 A3                INC     DPTR
811C94 E0                MOVX    A,@DPTR
811C95 2E                ADD     A,R6
811C96 F582              MOV     DPL,A
811C98 E4                CLR     A
811C99 3C                ADDC    A,R4
811C9A F583              MOV     DPH,A
811C9C E0                MOVX    A,@DPTR
811C9D FF                MOV     R7,A
811C9E C3                CLR     C
811C9F 9400              SUBB    A,#00H
811CA1 4027              JC      ?C0273?SYSPARAMSET
811CA3 EF                MOV     A,R7
811CA4 D3                SETB    C
811CA5 9409              SUBB    A,#09H
811CA7 5021              JNC     ?C0273?SYSPARAMSET
  787: 						SystemParameter.coinValue[0] = SystemParameter.coinValue[0]*10 + *( InStr + i );						
811CA9 EF                MOV     A,R7
811CAA FB                MOV     R3,A
811CAB 7A00              MOV     R2,#00H
811CAD 900459            MOV     DPTR,#SystemParameter+039H
811CB0 E0                MOVX    A,@DPTR
811CB1 FE                MOV     R6,A
811CB2 A3                INC     DPTR
811CB3 E0                MOVX    A,@DPTR
811CB4 FF                MOV     R7,A
811CB5 7C00              MOV     R4,#00H
811CB7 7D0A              MOV     R5,#0AH
811CB9 A512800559        ECALL   ?C?IMUL
811CBE EF                MOV     A,R7
811CBF 2B                ADD     A,R3
811CC0 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 741


811CC1 EA                MOV     A,R2
811CC2 3E                ADDC    A,R6
811CC3 900459            MOV     DPTR,#SystemParameter+039H
811CC6 F0                MOVX    @DPTR,A
811CC7 A3                INC     DPTR
811CC8 EF                MOV     A,R7
811CC9 F0                MOVX    @DPTR,A
  788: 				}	
811CCA         ?C0273?SYSPARAMSET:
811CCA 90175D            MOV     DPTR,#i
811CCD E0                MOVX    A,@DPTR
811CCE 04                INC     A
811CCF F0                MOVX    @DPTR,A
811CD0 80B0              SJMP    ?C0271?SYSPARAMSET
811CD2         ?C0272?SYSPARAMSET:
  789: 				SystemSave = 1;
811CD2 D22E              SETB    SystemSave
  790: 			}			
  791: 		break;
811CD4 02256F            LJMP    ?C0351?SYSPARAMSET
  792: 		case 23: //# 2 coin
811CD7         ?C0275?SYSPARAMSET:
  793:         if( OutInFlag == 0 )
811CD7 301A03            JNB     OutInFlag,$ + 6H
811CDA 021DE7            LJMP    ?C0276?SYSPARAMSET
  794: 			{			
  795: 				switch( SystemParameter.curUnit )
811CDD 900468            MOV     DPTR,#SystemParameter+048H
811CE0 E0                MOVX    A,@DPTR
811CE1 FE                MOV     R6,A
811CE2 A3                INC     DPTR
811CE3 E0                MOVX    A,@DPTR
811CE4 FF                MOV     R7,A
811CE5 EE                MOV     A,R6
811CE6 6003              JZ      $ + 5H
811CE8 02256F            LJMP    ?C0351?SYSPARAMSET
811CEB EF                MOV     A,R7
811CEC 24F6              ADD     A,#0F6H
811CEE 603F              JZ      ?C0279?SYSPARAMSET
811CF0 24A6              ADD     A,#0A6H
811CF2 7003              JNZ     $ + 5H
811CF4 021D8B            LJMP    ?C0280?SYSPARAMSET
811CF7 2463              ADD     A,#063H
811CF9 6003              JZ      $ + 5H
811CFB 02256F            LJMP    ?C0351?SYSPARAMSET
  796: 				{
  797: 					case 1:
811CFE         ?C0278?SYSPARAMSET:
  798: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[1] );
811CFE 901756            MOV     DPTR,#OutStr
811D01 E0                MOVX    A,@DPTR
811D02 FE                MOV     R6,A
811D03 A3                INC     DPTR
811D04 E0                MOVX    A,@DPTR
811D05 AA06              MOV     R2,AR6
811D07 F9                MOV     R1,A
811D08 7B00              MOV     R3,#?C?XDATASEG
811D0A C003              PUSH    AR3
811D0C C002              PUSH    AR2
811D0E C001              PUSH    AR1
811D10 7B80              MOV     R3,#BYTE2 0801098H
811D12 7A10              MOV     R2,#HIGH 0801098H
811D14 7998              MOV     R1,#LOW 0801098H
811D16 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811D19 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 742


811D1E 90045B            MOV     DPTR,#SystemParameter+03BH
811D21 E0                MOVX    A,@DPTR
811D22 FF                MOV     R7,A
811D23 A3                INC     DPTR
811D24 E0                MOVX    A,@DPTR
811D25 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811D28 CF                XCH     A,R7
811D29 F0                MOVX    @DPTR,A
811D2A A3                INC     DPTR
811D2B EF                MOV     A,R7
811D2C         
  799: 					break;				
811D2C 022427            LJMP    ?C0483?SYSPARAMSET
  800: 					case 10:
811D2F         ?C0279?SYSPARAMSET:
  801: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[1]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[1]%SystemParameter.curUnit );
811D2F 901756            MOV     DPTR,#OutStr
811D32 E0                MOVX    A,@DPTR
811D33 FE                MOV     R6,A
811D34 A3                INC     DPTR
811D35 E0                MOVX    A,@DPTR
811D36 AA06              MOV     R2,AR6
811D38 F9                MOV     R1,A
811D39 7B00              MOV     R3,#?C?XDATASEG
811D3B C003              PUSH    AR3
811D3D C002              PUSH    AR2
811D3F C001              PUSH    AR1
811D41 7B80              MOV     R3,#BYTE2 080109BH
811D43 7A10              MOV     R2,#HIGH 080109BH
811D45 799B              MOV     R1,#LOW 080109BH
811D47 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811D4A A5128007B6        ECALL   ?C?PSTXDATA
811D4F 900468            MOV     DPTR,#SystemParameter+048H
811D52 E0                MOVX    A,@DPTR
811D53 FC                MOV     R4,A
811D54 A3                INC     DPTR
811D55 E0                MOVX    A,@DPTR
811D56 FD                MOV     R5,A
811D57 90045B            MOV     DPTR,#SystemParameter+03BH
811D5A E0                MOVX    A,@DPTR
811D5B FE                MOV     R6,A
811D5C A3                INC     DPTR
811D5D E0                MOVX    A,@DPTR
811D5E FF                MOV     R7,A
811D5F A51280056C        ECALL   ?C?UIDIV
811D64 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811D67 EE                MOV     A,R6
811D68 F0                MOVX    @DPTR,A
811D69 A3                INC     DPTR
811D6A EF                MOV     A,R7
811D6B F0                MOVX    @DPTR,A
811D6C 900468            MOV     DPTR,#SystemParameter+048H
811D6F E0                MOVX    A,@DPTR
811D70 FC                MOV     R4,A
811D71 A3                INC     DPTR
811D72 E0                MOVX    A,@DPTR
811D73 FD                MOV     R5,A
811D74 90045B            MOV     DPTR,#SystemParameter+03BH
811D77 E0                MOVX    A,@DPTR
811D78 FE                MOV     R6,A
811D79 A3                INC     DPTR
811D7A E0                MOVX    A,@DPTR
811D7B FF                MOV     R7,A
811D7C A51280056C        ECALL   ?C?UIDIV
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 743


811D81 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811D84 EC                MOV     A,R4
811D85 F0                MOVX    @DPTR,A
811D86 A3                INC     DPTR
811D87 ED                MOV     A,R5
811D88         
  802: 					break;
811D88 022427            LJMP    ?C0483?SYSPARAMSET
  803: 					case 100:
811D8B         ?C0280?SYSPARAMSET:
  804: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[1]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[1]%SystemParameter.curUnit );
811D8B 901756            MOV     DPTR,#OutStr
811D8E E0                MOVX    A,@DPTR
811D8F FE                MOV     R6,A
811D90 A3                INC     DPTR
811D91 E0                MOVX    A,@DPTR
811D92 AA06              MOV     R2,AR6
811D94 F9                MOV     R1,A
811D95 7B00              MOV     R3,#?C?XDATASEG
811D97 C003              PUSH    AR3
811D99 C002              PUSH    AR2
811D9B C001              PUSH    AR1
811D9D 7B80              MOV     R3,#BYTE2 08010A1H
811D9F 7A10              MOV     R2,#HIGH 08010A1H
811DA1 79A1              MOV     R1,#LOW 08010A1H
811DA3 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811DA6 A5128007B6        ECALL   ?C?PSTXDATA
811DAB 900468            MOV     DPTR,#SystemParameter+048H
811DAE E0                MOVX    A,@DPTR
811DAF FC                MOV     R4,A
811DB0 A3                INC     DPTR
811DB1 E0                MOVX    A,@DPTR
811DB2 FD                MOV     R5,A
811DB3 90045B            MOV     DPTR,#SystemParameter+03BH
811DB6 E0                MOVX    A,@DPTR
811DB7 FE                MOV     R6,A
811DB8 A3                INC     DPTR
811DB9 E0                MOVX    A,@DPTR
811DBA FF                MOV     R7,A
811DBB A51280056C        ECALL   ?C?UIDIV
811DC0 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811DC3 EE                MOV     A,R6
811DC4 F0                MOVX    @DPTR,A
811DC5 A3                INC     DPTR
811DC6 EF                MOV     A,R7
811DC7 F0                MOVX    @DPTR,A
811DC8 900468            MOV     DPTR,#SystemParameter+048H
811DCB E0                MOVX    A,@DPTR
811DCC FC                MOV     R4,A
811DCD A3                INC     DPTR
811DCE E0                MOVX    A,@DPTR
811DCF FD                MOV     R5,A
811DD0 90045B            MOV     DPTR,#SystemParameter+03BH
811DD3 E0                MOVX    A,@DPTR
811DD4 FE                MOV     R6,A
811DD5 A3                INC     DPTR
811DD6 E0                MOVX    A,@DPTR
811DD7 FF                MOV     R7,A
811DD8 A51280056C        ECALL   ?C?UIDIV
811DDD 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811DE0 EC                MOV     A,R4
811DE1 F0                MOVX    @DPTR,A
811DE2 A3                INC     DPTR
811DE3 ED                MOV     A,R5
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 744


811DE4         
  805: 					break;					
811DE4 022427            LJMP    ?C0483?SYSPARAMSET
  806: 				}				
  807: 			}
811DE7         ?C0276?SYSPARAMSET:
  808: 			else
  809: 			{				
  810: 				//Trace( "\n set IP val \n");
  811: 				j = *len;											
811DE7 90175A            MOV     DPTR,#len
811DEA E0                MOVX    A,@DPTR
811DEB FE                MOV     R6,A
811DEC A3                INC     DPTR
811DED E0                MOVX    A,@DPTR
811DEE F582              MOV     DPL,A
811DF0 8E83              MOV     DPH,R6
811DF2 E0                MOVX    A,@DPTR
811DF3 90175C            MOV     DPTR,#j
811DF6 F0                MOVX    @DPTR,A
  812: 				if( j == 0 )
811DF7 7003              JNZ     $ + 5H
811DF9 02256F            LJMP    ?C0351?SYSPARAMSET
  813: 					break;
811DFC         ?C0282?SYSPARAMSET:
  814: 				if( j > 5 )
811DFC 90175C            MOV     DPTR,#j
811DFF E0                MOVX    A,@DPTR
811E00 D3                SETB    C
811E01 9405              SUBB    A,#05H
811E03 4003              JC      ?C0283?SYSPARAMSET
  815: 					j = 5;
811E05 7405              MOV     A,#05H
811E07 F0                MOVX    @DPTR,A
811E08         ?C0283?SYSPARAMSET:
  816: 				SystemParameter.coinValue[1] = 0;	
811E08 E4                CLR     A
811E09 90045B            MOV     DPTR,#SystemParameter+03BH
811E0C F0                MOVX    @DPTR,A
811E0D A3                INC     DPTR
811E0E F0                MOVX    @DPTR,A
  817: 				for( i = 0; i < j; i ++ )
811E0F 90175D            MOV     DPTR,#i
811E12 F0                MOVX    @DPTR,A
811E13         ?C0284?SYSPARAMSET:
811E13 90175C            MOV     DPTR,#j
811E16 E0                MOVX    A,@DPTR
811E17 FF                MOV     R7,A
811E18 A3                INC     DPTR
811E19 E0                MOVX    A,@DPTR
811E1A FE                MOV     R6,A
811E1B C3                CLR     C
811E1C 9F                SUBB    A,R7
811E1D 5044              JNC     ?C0285?SYSPARAMSET
  818: 				{
  819: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
811E1F 901758            MOV     DPTR,#InStr
811E22 E0                MOVX    A,@DPTR
811E23 FC                MOV     R4,A
811E24 A3                INC     DPTR
811E25 E0                MOVX    A,@DPTR
811E26 2E                ADD     A,R6
811E27 F582              MOV     DPL,A
811E29 E4                CLR     A
811E2A 3C                ADDC    A,R4
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 745


811E2B F583              MOV     DPH,A
811E2D E0                MOVX    A,@DPTR
811E2E FF                MOV     R7,A
811E2F C3                CLR     C
811E30 9400              SUBB    A,#00H
811E32 4027              JC      ?C0286?SYSPARAMSET
811E34 EF                MOV     A,R7
811E35 D3                SETB    C
811E36 9409              SUBB    A,#09H
811E38 5021              JNC     ?C0286?SYSPARAMSET
  820: 						SystemParameter.coinValue[1] = SystemParameter.coinValue[1]*10 + *( InStr + i );						
811E3A EF                MOV     A,R7
811E3B FB                MOV     R3,A
811E3C 7A00              MOV     R2,#00H
811E3E 90045B            MOV     DPTR,#SystemParameter+03BH
811E41 E0                MOVX    A,@DPTR
811E42 FE                MOV     R6,A
811E43 A3                INC     DPTR
811E44 E0                MOVX    A,@DPTR
811E45 FF                MOV     R7,A
811E46 7C00              MOV     R4,#00H
811E48 7D0A              MOV     R5,#0AH
811E4A A512800559        ECALL   ?C?IMUL
811E4F EF                MOV     A,R7
811E50 2B                ADD     A,R3
811E51 FF                MOV     R7,A
811E52 EA                MOV     A,R2
811E53 3E                ADDC    A,R6
811E54 90045B            MOV     DPTR,#SystemParameter+03BH
811E57 F0                MOVX    @DPTR,A
811E58 A3                INC     DPTR
811E59 EF                MOV     A,R7
811E5A F0                MOVX    @DPTR,A
  821: 				}	
811E5B         ?C0286?SYSPARAMSET:
811E5B 90175D            MOV     DPTR,#i
811E5E E0                MOVX    A,@DPTR
811E5F 04                INC     A
811E60 F0                MOVX    @DPTR,A
811E61 80B0              SJMP    ?C0284?SYSPARAMSET
811E63         ?C0285?SYSPARAMSET:
  822: 				SystemSave = 1;
811E63 D22E              SETB    SystemSave
  823: 			}			
  824: 		break;
811E65 02256F            LJMP    ?C0351?SYSPARAMSET
  825:         case 24: //# 3 coin
811E68         ?C0288?SYSPARAMSET:
  826:         if( OutInFlag == 0 )
811E68 301A03            JNB     OutInFlag,$ + 6H
811E6B 021F78            LJMP    ?C0289?SYSPARAMSET
  827: 			{			
  828: 				switch( SystemParameter.curUnit )
811E6E 900468            MOV     DPTR,#SystemParameter+048H
811E71 E0                MOVX    A,@DPTR
811E72 FE                MOV     R6,A
811E73 A3                INC     DPTR
811E74 E0                MOVX    A,@DPTR
811E75 FF                MOV     R7,A
811E76 EE                MOV     A,R6
811E77 6003              JZ      $ + 5H
811E79 02256F            LJMP    ?C0351?SYSPARAMSET
811E7C EF                MOV     A,R7
811E7D 24F6              ADD     A,#0F6H
811E7F 603F              JZ      ?C0292?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 746


811E81 24A6              ADD     A,#0A6H
811E83 7003              JNZ     $ + 5H
811E85 021F1C            LJMP    ?C0293?SYSPARAMSET
811E88 2463              ADD     A,#063H
811E8A 6003              JZ      $ + 5H
811E8C 02256F            LJMP    ?C0351?SYSPARAMSET
  829: 				{
  830: 					case 1:
811E8F         ?C0291?SYSPARAMSET:
  831: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[2] );
811E8F 901756            MOV     DPTR,#OutStr
811E92 E0                MOVX    A,@DPTR
811E93 FE                MOV     R6,A
811E94 A3                INC     DPTR
811E95 E0                MOVX    A,@DPTR
811E96 AA06              MOV     R2,AR6
811E98 F9                MOV     R1,A
811E99 7B00              MOV     R3,#?C?XDATASEG
811E9B C003              PUSH    AR3
811E9D C002              PUSH    AR2
811E9F C001              PUSH    AR1
811EA1 7B80              MOV     R3,#BYTE2 0801098H
811EA3 7A10              MOV     R2,#HIGH 0801098H
811EA5 7998              MOV     R1,#LOW 0801098H
811EA7 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811EAA A5128007B6        ECALL   ?C?PSTXDATA
811EAF 90045D            MOV     DPTR,#SystemParameter+03DH
811EB2 E0                MOVX    A,@DPTR
811EB3 FF                MOV     R7,A
811EB4 A3                INC     DPTR
811EB5 E0                MOVX    A,@DPTR
811EB6 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811EB9 CF                XCH     A,R7
811EBA F0                MOVX    @DPTR,A
811EBB A3                INC     DPTR
811EBC EF                MOV     A,R7
811EBD         
  832: 					break;				
811EBD 022427            LJMP    ?C0483?SYSPARAMSET
  833: 					case 10:
811EC0         ?C0292?SYSPARAMSET:
  834: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[2]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[2]%SystemParameter.curUnit );
811EC0 901756            MOV     DPTR,#OutStr
811EC3 E0                MOVX    A,@DPTR
811EC4 FE                MOV     R6,A
811EC5 A3                INC     DPTR
811EC6 E0                MOVX    A,@DPTR
811EC7 AA06              MOV     R2,AR6
811EC9 F9                MOV     R1,A
811ECA 7B00              MOV     R3,#?C?XDATASEG
811ECC C003              PUSH    AR3
811ECE C002              PUSH    AR2
811ED0 C001              PUSH    AR1
811ED2 7B80              MOV     R3,#BYTE2 080109BH
811ED4 7A10              MOV     R2,#HIGH 080109BH
811ED6 799B              MOV     R1,#LOW 080109BH
811ED8 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811EDB A5128007B6        ECALL   ?C?PSTXDATA
811EE0 900468            MOV     DPTR,#SystemParameter+048H
811EE3 E0                MOVX    A,@DPTR
811EE4 FC                MOV     R4,A
811EE5 A3                INC     DPTR
811EE6 E0                MOVX    A,@DPTR
811EE7 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 747


811EE8 90045D            MOV     DPTR,#SystemParameter+03DH
811EEB E0                MOVX    A,@DPTR
811EEC FE                MOV     R6,A
811EED A3                INC     DPTR
811EEE E0                MOVX    A,@DPTR
811EEF FF                MOV     R7,A
811EF0 A51280056C        ECALL   ?C?UIDIV
811EF5 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811EF8 EE                MOV     A,R6
811EF9 F0                MOVX    @DPTR,A
811EFA A3                INC     DPTR
811EFB EF                MOV     A,R7
811EFC F0                MOVX    @DPTR,A
811EFD 900468            MOV     DPTR,#SystemParameter+048H
811F00 E0                MOVX    A,@DPTR
811F01 FC                MOV     R4,A
811F02 A3                INC     DPTR
811F03 E0                MOVX    A,@DPTR
811F04 FD                MOV     R5,A
811F05 90045D            MOV     DPTR,#SystemParameter+03DH
811F08 E0                MOVX    A,@DPTR
811F09 FE                MOV     R6,A
811F0A A3                INC     DPTR
811F0B E0                MOVX    A,@DPTR
811F0C FF                MOV     R7,A
811F0D A51280056C        ECALL   ?C?UIDIV
811F12 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811F15 EC                MOV     A,R4
811F16 F0                MOVX    @DPTR,A
811F17 A3                INC     DPTR
811F18 ED                MOV     A,R5
811F19         
  835: 					break;
811F19 022427            LJMP    ?C0483?SYSPARAMSET
  836: 					case 100:
811F1C         ?C0293?SYSPARAMSET:
  837: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[2]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[2]%SystemParameter.curUnit );
811F1C 901756            MOV     DPTR,#OutStr
811F1F E0                MOVX    A,@DPTR
811F20 FE                MOV     R6,A
811F21 A3                INC     DPTR
811F22 E0                MOVX    A,@DPTR
811F23 AA06              MOV     R2,AR6
811F25 F9                MOV     R1,A
811F26 7B00              MOV     R3,#?C?XDATASEG
811F28 C003              PUSH    AR3
811F2A C002              PUSH    AR2
811F2C C001              PUSH    AR1
811F2E 7B80              MOV     R3,#BYTE2 08010A1H
811F30 7A10              MOV     R2,#HIGH 08010A1H
811F32 79A1              MOV     R1,#LOW 08010A1H
811F34 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
811F37 A5128007B6        ECALL   ?C?PSTXDATA
811F3C 900468            MOV     DPTR,#SystemParameter+048H
811F3F E0                MOVX    A,@DPTR
811F40 FC                MOV     R4,A
811F41 A3                INC     DPTR
811F42 E0                MOVX    A,@DPTR
811F43 FD                MOV     R5,A
811F44 90045D            MOV     DPTR,#SystemParameter+03DH
811F47 E0                MOVX    A,@DPTR
811F48 FE                MOV     R6,A
811F49 A3                INC     DPTR
811F4A E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 748


811F4B FF                MOV     R7,A
811F4C A51280056C        ECALL   ?C?UIDIV
811F51 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
811F54 EE                MOV     A,R6
811F55 F0                MOVX    @DPTR,A
811F56 A3                INC     DPTR
811F57 EF                MOV     A,R7
811F58 F0                MOVX    @DPTR,A
811F59 900468            MOV     DPTR,#SystemParameter+048H
811F5C E0                MOVX    A,@DPTR
811F5D FC                MOV     R4,A
811F5E A3                INC     DPTR
811F5F E0                MOVX    A,@DPTR
811F60 FD                MOV     R5,A
811F61 90045D            MOV     DPTR,#SystemParameter+03DH
811F64 E0                MOVX    A,@DPTR
811F65 FE                MOV     R6,A
811F66 A3                INC     DPTR
811F67 E0                MOVX    A,@DPTR
811F68 FF                MOV     R7,A
811F69 A51280056C        ECALL   ?C?UIDIV
811F6E 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
811F71 EC                MOV     A,R4
811F72 F0                MOVX    @DPTR,A
811F73 A3                INC     DPTR
811F74 ED                MOV     A,R5
811F75         
  838: 					break;					
811F75 022427            LJMP    ?C0483?SYSPARAMSET
  839: 				}				
  840: 			}
811F78         ?C0289?SYSPARAMSET:
  841: 			else
  842: 			{				
  843: 				//Trace( "\n set IP val \n");
  844: 				j = *len;											
811F78 90175A            MOV     DPTR,#len
811F7B E0                MOVX    A,@DPTR
811F7C FE                MOV     R6,A
811F7D A3                INC     DPTR
811F7E E0                MOVX    A,@DPTR
811F7F F582              MOV     DPL,A
811F81 8E83              MOV     DPH,R6
811F83 E0                MOVX    A,@DPTR
811F84 90175C            MOV     DPTR,#j
811F87 F0                MOVX    @DPTR,A
  845: 				if( j == 0 )
811F88 7003              JNZ     $ + 5H
811F8A 02256F            LJMP    ?C0351?SYSPARAMSET
  846: 					break;
811F8D         ?C0295?SYSPARAMSET:
  847: 				if( j > 5 )
811F8D 90175C            MOV     DPTR,#j
811F90 E0                MOVX    A,@DPTR
811F91 D3                SETB    C
811F92 9405              SUBB    A,#05H
811F94 4003              JC      ?C0296?SYSPARAMSET
  848: 					j = 5;
811F96 7405              MOV     A,#05H
811F98 F0                MOVX    @DPTR,A
811F99         ?C0296?SYSPARAMSET:
  849: 				SystemParameter.coinValue[2] = 0;	
811F99 E4                CLR     A
811F9A 90045D            MOV     DPTR,#SystemParameter+03DH
811F9D F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 749


811F9E A3                INC     DPTR
811F9F F0                MOVX    @DPTR,A
  850: 				for( i = 0; i < j; i ++ )
811FA0 90175D            MOV     DPTR,#i
811FA3 F0                MOVX    @DPTR,A
811FA4         ?C0297?SYSPARAMSET:
811FA4 90175C            MOV     DPTR,#j
811FA7 E0                MOVX    A,@DPTR
811FA8 FF                MOV     R7,A
811FA9 A3                INC     DPTR
811FAA E0                MOVX    A,@DPTR
811FAB FE                MOV     R6,A
811FAC C3                CLR     C
811FAD 9F                SUBB    A,R7
811FAE 5044              JNC     ?C0298?SYSPARAMSET
  851: 				{
  852: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
811FB0 901758            MOV     DPTR,#InStr
811FB3 E0                MOVX    A,@DPTR
811FB4 FC                MOV     R4,A
811FB5 A3                INC     DPTR
811FB6 E0                MOVX    A,@DPTR
811FB7 2E                ADD     A,R6
811FB8 F582              MOV     DPL,A
811FBA E4                CLR     A
811FBB 3C                ADDC    A,R4
811FBC F583              MOV     DPH,A
811FBE E0                MOVX    A,@DPTR
811FBF FF                MOV     R7,A
811FC0 C3                CLR     C
811FC1 9400              SUBB    A,#00H
811FC3 4027              JC      ?C0299?SYSPARAMSET
811FC5 EF                MOV     A,R7
811FC6 D3                SETB    C
811FC7 9409              SUBB    A,#09H
811FC9 5021              JNC     ?C0299?SYSPARAMSET
  853: 						SystemParameter.coinValue[2] = SystemParameter.coinValue[2]*10 + *( InStr + i );						
811FCB EF                MOV     A,R7
811FCC FB                MOV     R3,A
811FCD 7A00              MOV     R2,#00H
811FCF 90045D            MOV     DPTR,#SystemParameter+03DH
811FD2 E0                MOVX    A,@DPTR
811FD3 FE                MOV     R6,A
811FD4 A3                INC     DPTR
811FD5 E0                MOVX    A,@DPTR
811FD6 FF                MOV     R7,A
811FD7 7C00              MOV     R4,#00H
811FD9 7D0A              MOV     R5,#0AH
811FDB A512800559        ECALL   ?C?IMUL
811FE0 EF                MOV     A,R7
811FE1 2B                ADD     A,R3
811FE2 FF                MOV     R7,A
811FE3 EA                MOV     A,R2
811FE4 3E                ADDC    A,R6
811FE5 90045D            MOV     DPTR,#SystemParameter+03DH
811FE8 F0                MOVX    @DPTR,A
811FE9 A3                INC     DPTR
811FEA EF                MOV     A,R7
811FEB F0                MOVX    @DPTR,A
  854: 				}	
811FEC         ?C0299?SYSPARAMSET:
811FEC 90175D            MOV     DPTR,#i
811FEF E0                MOVX    A,@DPTR
811FF0 04                INC     A
811FF1 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 750


811FF2 80B0              SJMP    ?C0297?SYSPARAMSET
811FF4         ?C0298?SYSPARAMSET:
  855: 				SystemSave = 1;
811FF4 D22E              SETB    SystemSave
  856: 			}			
  857: 		break;
811FF6 02256F            LJMP    ?C0351?SYSPARAMSET
  858: 		case 25: //# 4 coin
811FF9         ?C0301?SYSPARAMSET:
  859:         if( OutInFlag == 0 )
811FF9 301A03            JNB     OutInFlag,$ + 6H
811FFC 022109            LJMP    ?C0302?SYSPARAMSET
  860: 			{			
  861: 				switch( SystemParameter.curUnit )
811FFF 900468            MOV     DPTR,#SystemParameter+048H
812002 E0                MOVX    A,@DPTR
812003 FE                MOV     R6,A
812004 A3                INC     DPTR
812005 E0                MOVX    A,@DPTR
812006 FF                MOV     R7,A
812007 EE                MOV     A,R6
812008 6003              JZ      $ + 5H
81200A 02256F            LJMP    ?C0351?SYSPARAMSET
81200D EF                MOV     A,R7
81200E 24F6              ADD     A,#0F6H
812010 603F              JZ      ?C0305?SYSPARAMSET
812012 24A6              ADD     A,#0A6H
812014 7003              JNZ     $ + 5H
812016 0220AD            LJMP    ?C0306?SYSPARAMSET
812019 2463              ADD     A,#063H
81201B 6003              JZ      $ + 5H
81201D 02256F            LJMP    ?C0351?SYSPARAMSET
  862: 				{
  863: 					case 1:
812020         ?C0304?SYSPARAMSET:
  864: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[3] );
812020 901756            MOV     DPTR,#OutStr
812023 E0                MOVX    A,@DPTR
812024 FE                MOV     R6,A
812025 A3                INC     DPTR
812026 E0                MOVX    A,@DPTR
812027 AA06              MOV     R2,AR6
812029 F9                MOV     R1,A
81202A 7B00              MOV     R3,#?C?XDATASEG
81202C C003              PUSH    AR3
81202E C002              PUSH    AR2
812030 C001              PUSH    AR1
812032 7B80              MOV     R3,#BYTE2 0801098H
812034 7A10              MOV     R2,#HIGH 0801098H
812036 7998              MOV     R1,#LOW 0801098H
812038 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81203B A5128007B6        ECALL   ?C?PSTXDATA
812040 90045F            MOV     DPTR,#SystemParameter+03FH
812043 E0                MOVX    A,@DPTR
812044 FF                MOV     R7,A
812045 A3                INC     DPTR
812046 E0                MOVX    A,@DPTR
812047 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81204A CF                XCH     A,R7
81204B F0                MOVX    @DPTR,A
81204C A3                INC     DPTR
81204D EF                MOV     A,R7
81204E         
  865: 					break;				
81204E 022427            LJMP    ?C0483?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 751


  866: 					case 10:
812051         ?C0305?SYSPARAMSET:
  867: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[3]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[3]%SystemParameter.curUnit );
812051 901756            MOV     DPTR,#OutStr
812054 E0                MOVX    A,@DPTR
812055 FE                MOV     R6,A
812056 A3                INC     DPTR
812057 E0                MOVX    A,@DPTR
812058 AA06              MOV     R2,AR6
81205A F9                MOV     R1,A
81205B 7B00              MOV     R3,#?C?XDATASEG
81205D C003              PUSH    AR3
81205F C002              PUSH    AR2
812061 C001              PUSH    AR1
812063 7B80              MOV     R3,#BYTE2 080109BH
812065 7A10              MOV     R2,#HIGH 080109BH
812067 799B              MOV     R1,#LOW 080109BH
812069 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81206C A5128007B6        ECALL   ?C?PSTXDATA
812071 900468            MOV     DPTR,#SystemParameter+048H
812074 E0                MOVX    A,@DPTR
812075 FC                MOV     R4,A
812076 A3                INC     DPTR
812077 E0                MOVX    A,@DPTR
812078 FD                MOV     R5,A
812079 90045F            MOV     DPTR,#SystemParameter+03FH
81207C E0                MOVX    A,@DPTR
81207D FE                MOV     R6,A
81207E A3                INC     DPTR
81207F E0                MOVX    A,@DPTR
812080 FF                MOV     R7,A
812081 A51280056C        ECALL   ?C?UIDIV
812086 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
812089 EE                MOV     A,R6
81208A F0                MOVX    @DPTR,A
81208B A3                INC     DPTR
81208C EF                MOV     A,R7
81208D F0                MOVX    @DPTR,A
81208E 900468            MOV     DPTR,#SystemParameter+048H
812091 E0                MOVX    A,@DPTR
812092 FC                MOV     R4,A
812093 A3                INC     DPTR
812094 E0                MOVX    A,@DPTR
812095 FD                MOV     R5,A
812096 90045F            MOV     DPTR,#SystemParameter+03FH
812099 E0                MOVX    A,@DPTR
81209A FE                MOV     R6,A
81209B A3                INC     DPTR
81209C E0                MOVX    A,@DPTR
81209D FF                MOV     R7,A
81209E A51280056C        ECALL   ?C?UIDIV
8120A3 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8120A6 EC                MOV     A,R4
8120A7 F0                MOVX    @DPTR,A
8120A8 A3                INC     DPTR
8120A9 ED                MOV     A,R5
8120AA         
  868: 					break;
8120AA 022427            LJMP    ?C0483?SYSPARAMSET
  869: 					case 100:
8120AD         ?C0306?SYSPARAMSET:
  870: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[3]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[3]%SystemParameter.curUnit );
8120AD 901756            MOV     DPTR,#OutStr
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 752


8120B0 E0                MOVX    A,@DPTR
8120B1 FE                MOV     R6,A
8120B2 A3                INC     DPTR
8120B3 E0                MOVX    A,@DPTR
8120B4 AA06              MOV     R2,AR6
8120B6 F9                MOV     R1,A
8120B7 7B00              MOV     R3,#?C?XDATASEG
8120B9 C003              PUSH    AR3
8120BB C002              PUSH    AR2
8120BD C001              PUSH    AR1
8120BF 7B80              MOV     R3,#BYTE2 08010A1H
8120C1 7A10              MOV     R2,#HIGH 08010A1H
8120C3 79A1              MOV     R1,#LOW 08010A1H
8120C5 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8120C8 A5128007B6        ECALL   ?C?PSTXDATA
8120CD 900468            MOV     DPTR,#SystemParameter+048H
8120D0 E0                MOVX    A,@DPTR
8120D1 FC                MOV     R4,A
8120D2 A3                INC     DPTR
8120D3 E0                MOVX    A,@DPTR
8120D4 FD                MOV     R5,A
8120D5 90045F            MOV     DPTR,#SystemParameter+03FH
8120D8 E0                MOVX    A,@DPTR
8120D9 FE                MOV     R6,A
8120DA A3                INC     DPTR
8120DB E0                MOVX    A,@DPTR
8120DC FF                MOV     R7,A
8120DD A51280056C        ECALL   ?C?UIDIV
8120E2 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8120E5 EE                MOV     A,R6
8120E6 F0                MOVX    @DPTR,A
8120E7 A3                INC     DPTR
8120E8 EF                MOV     A,R7
8120E9 F0                MOVX    @DPTR,A
8120EA 900468            MOV     DPTR,#SystemParameter+048H
8120ED E0                MOVX    A,@DPTR
8120EE FC                MOV     R4,A
8120EF A3                INC     DPTR
8120F0 E0                MOVX    A,@DPTR
8120F1 FD                MOV     R5,A
8120F2 90045F            MOV     DPTR,#SystemParameter+03FH
8120F5 E0                MOVX    A,@DPTR
8120F6 FE                MOV     R6,A
8120F7 A3                INC     DPTR
8120F8 E0                MOVX    A,@DPTR
8120F9 FF                MOV     R7,A
8120FA A51280056C        ECALL   ?C?UIDIV
8120FF 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
812102 EC                MOV     A,R4
812103 F0                MOVX    @DPTR,A
812104 A3                INC     DPTR
812105 ED                MOV     A,R5
812106         
  871: 					break;					
812106 022427            LJMP    ?C0483?SYSPARAMSET
  872: 				}				
  873: 			}
812109         ?C0302?SYSPARAMSET:
  874: 			else
  875: 			{				
  876: 				//Trace( "\n set IP val \n");
  877: 				j = *len;											
812109 90175A            MOV     DPTR,#len
81210C E0                MOVX    A,@DPTR
81210D FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 753


81210E A3                INC     DPTR
81210F E0                MOVX    A,@DPTR
812110 F582              MOV     DPL,A
812112 8E83              MOV     DPH,R6
812114 E0                MOVX    A,@DPTR
812115 90175C            MOV     DPTR,#j
812118 F0                MOVX    @DPTR,A
  878: 				if( j == 0 )
812119 7003              JNZ     $ + 5H
81211B 02256F            LJMP    ?C0351?SYSPARAMSET
  879: 					break;
81211E         ?C0308?SYSPARAMSET:
  880: 				if( j > 5 )
81211E 90175C            MOV     DPTR,#j
812121 E0                MOVX    A,@DPTR
812122 D3                SETB    C
812123 9405              SUBB    A,#05H
812125 4003              JC      ?C0309?SYSPARAMSET
  881: 					j = 5;
812127 7405              MOV     A,#05H
812129 F0                MOVX    @DPTR,A
81212A         ?C0309?SYSPARAMSET:
  882: 				SystemParameter.coinValue[3] = 0;	
81212A E4                CLR     A
81212B 90045F            MOV     DPTR,#SystemParameter+03FH
81212E F0                MOVX    @DPTR,A
81212F A3                INC     DPTR
812130 F0                MOVX    @DPTR,A
  883: 				for( i = 0; i < j; i ++ )
812131 90175D            MOV     DPTR,#i
812134 F0                MOVX    @DPTR,A
812135         ?C0310?SYSPARAMSET:
812135 90175C            MOV     DPTR,#j
812138 E0                MOVX    A,@DPTR
812139 FF                MOV     R7,A
81213A A3                INC     DPTR
81213B E0                MOVX    A,@DPTR
81213C FE                MOV     R6,A
81213D C3                CLR     C
81213E 9F                SUBB    A,R7
81213F 5044              JNC     ?C0311?SYSPARAMSET
  884: 				{
  885: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
812141 901758            MOV     DPTR,#InStr
812144 E0                MOVX    A,@DPTR
812145 FC                MOV     R4,A
812146 A3                INC     DPTR
812147 E0                MOVX    A,@DPTR
812148 2E                ADD     A,R6
812149 F582              MOV     DPL,A
81214B E4                CLR     A
81214C 3C                ADDC    A,R4
81214D F583              MOV     DPH,A
81214F E0                MOVX    A,@DPTR
812150 FF                MOV     R7,A
812151 C3                CLR     C
812152 9400              SUBB    A,#00H
812154 4027              JC      ?C0312?SYSPARAMSET
812156 EF                MOV     A,R7
812157 D3                SETB    C
812158 9409              SUBB    A,#09H
81215A 5021              JNC     ?C0312?SYSPARAMSET
  886: 						SystemParameter.coinValue[3] = SystemParameter.coinValue[3]*10 + *( InStr + i );						
81215C EF                MOV     A,R7
81215D FB                MOV     R3,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 754


81215E 7A00              MOV     R2,#00H
812160 90045F            MOV     DPTR,#SystemParameter+03FH
812163 E0                MOVX    A,@DPTR
812164 FE                MOV     R6,A
812165 A3                INC     DPTR
812166 E0                MOVX    A,@DPTR
812167 FF                MOV     R7,A
812168 7C00              MOV     R4,#00H
81216A 7D0A              MOV     R5,#0AH
81216C A512800559        ECALL   ?C?IMUL
812171 EF                MOV     A,R7
812172 2B                ADD     A,R3
812173 FF                MOV     R7,A
812174 EA                MOV     A,R2
812175 3E                ADDC    A,R6
812176 90045F            MOV     DPTR,#SystemParameter+03FH
812179 F0                MOVX    @DPTR,A
81217A A3                INC     DPTR
81217B EF                MOV     A,R7
81217C F0                MOVX    @DPTR,A
  887: 				}	
81217D         ?C0312?SYSPARAMSET:
81217D 90175D            MOV     DPTR,#i
812180 E0                MOVX    A,@DPTR
812181 04                INC     A
812182 F0                MOVX    @DPTR,A
812183 80B0              SJMP    ?C0310?SYSPARAMSET
812185         ?C0311?SYSPARAMSET:
  888: 				SystemSave = 1;
812185 D22E              SETB    SystemSave
  889: 			}			
  890: 		break;
812187 02256F            LJMP    ?C0351?SYSPARAMSET
  891:         case 26: //# 5 coin
81218A         ?C0314?SYSPARAMSET:
  892:         if( OutInFlag == 0 )
81218A 301A03            JNB     OutInFlag,$ + 6H
81218D 02229A            LJMP    ?C0315?SYSPARAMSET
  893: 			{			
  894: 				switch( SystemParameter.curUnit )
812190 900468            MOV     DPTR,#SystemParameter+048H
812193 E0                MOVX    A,@DPTR
812194 FE                MOV     R6,A
812195 A3                INC     DPTR
812196 E0                MOVX    A,@DPTR
812197 FF                MOV     R7,A
812198 EE                MOV     A,R6
812199 6003              JZ      $ + 5H
81219B 02256F            LJMP    ?C0351?SYSPARAMSET
81219E EF                MOV     A,R7
81219F 24F6              ADD     A,#0F6H
8121A1 603F              JZ      ?C0318?SYSPARAMSET
8121A3 24A6              ADD     A,#0A6H
8121A5 7003              JNZ     $ + 5H
8121A7 02223E            LJMP    ?C0319?SYSPARAMSET
8121AA 2463              ADD     A,#063H
8121AC 6003              JZ      $ + 5H
8121AE 02256F            LJMP    ?C0351?SYSPARAMSET
  895: 				{
  896: 					case 1:
8121B1         ?C0317?SYSPARAMSET:
  897: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[4] );
8121B1 901756            MOV     DPTR,#OutStr
8121B4 E0                MOVX    A,@DPTR
8121B5 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 755


8121B6 A3                INC     DPTR
8121B7 E0                MOVX    A,@DPTR
8121B8 AA06              MOV     R2,AR6
8121BA F9                MOV     R1,A
8121BB 7B00              MOV     R3,#?C?XDATASEG
8121BD C003              PUSH    AR3
8121BF C002              PUSH    AR2
8121C1 C001              PUSH    AR1
8121C3 7B80              MOV     R3,#BYTE2 0801098H
8121C5 7A10              MOV     R2,#HIGH 0801098H
8121C7 7998              MOV     R1,#LOW 0801098H
8121C9 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8121CC A5128007B6        ECALL   ?C?PSTXDATA
8121D1 900461            MOV     DPTR,#SystemParameter+041H
8121D4 E0                MOVX    A,@DPTR
8121D5 FF                MOV     R7,A
8121D6 A3                INC     DPTR
8121D7 E0                MOVX    A,@DPTR
8121D8 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8121DB CF                XCH     A,R7
8121DC F0                MOVX    @DPTR,A
8121DD A3                INC     DPTR
8121DE EF                MOV     A,R7
8121DF         
  898: 					break;				
8121DF 022427            LJMP    ?C0483?SYSPARAMSET
  899: 					case 10:
8121E2         ?C0318?SYSPARAMSET:
  900: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[4]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[4]%SystemParameter.curUnit );
8121E2 901756            MOV     DPTR,#OutStr
8121E5 E0                MOVX    A,@DPTR
8121E6 FE                MOV     R6,A
8121E7 A3                INC     DPTR
8121E8 E0                MOVX    A,@DPTR
8121E9 AA06              MOV     R2,AR6
8121EB F9                MOV     R1,A
8121EC 7B00              MOV     R3,#?C?XDATASEG
8121EE C003              PUSH    AR3
8121F0 C002              PUSH    AR2
8121F2 C001              PUSH    AR1
8121F4 7B80              MOV     R3,#BYTE2 080109BH
8121F6 7A10              MOV     R2,#HIGH 080109BH
8121F8 799B              MOV     R1,#LOW 080109BH
8121FA 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8121FD A5128007B6        ECALL   ?C?PSTXDATA
812202 900468            MOV     DPTR,#SystemParameter+048H
812205 E0                MOVX    A,@DPTR
812206 FC                MOV     R4,A
812207 A3                INC     DPTR
812208 E0                MOVX    A,@DPTR
812209 FD                MOV     R5,A
81220A 900461            MOV     DPTR,#SystemParameter+041H
81220D E0                MOVX    A,@DPTR
81220E FE                MOV     R6,A
81220F A3                INC     DPTR
812210 E0                MOVX    A,@DPTR
812211 FF                MOV     R7,A
812212 A51280056C        ECALL   ?C?UIDIV
812217 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81221A EE                MOV     A,R6
81221B F0                MOVX    @DPTR,A
81221C A3                INC     DPTR
81221D EF                MOV     A,R7
81221E F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 756


81221F 900468            MOV     DPTR,#SystemParameter+048H
812222 E0                MOVX    A,@DPTR
812223 FC                MOV     R4,A
812224 A3                INC     DPTR
812225 E0                MOVX    A,@DPTR
812226 FD                MOV     R5,A
812227 900461            MOV     DPTR,#SystemParameter+041H
81222A E0                MOVX    A,@DPTR
81222B FE                MOV     R6,A
81222C A3                INC     DPTR
81222D E0                MOVX    A,@DPTR
81222E FF                MOV     R7,A
81222F A51280056C        ECALL   ?C?UIDIV
812234 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
812237 EC                MOV     A,R4
812238 F0                MOVX    @DPTR,A
812239 A3                INC     DPTR
81223A ED                MOV     A,R5
81223B         
  901: 					break;
81223B 022427            LJMP    ?C0483?SYSPARAMSET
  902: 					case 100:
81223E         ?C0319?SYSPARAMSET:
  903: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[4]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[4]%SystemParameter.curUnit );
81223E 901756            MOV     DPTR,#OutStr
812241 E0                MOVX    A,@DPTR
812242 FE                MOV     R6,A
812243 A3                INC     DPTR
812244 E0                MOVX    A,@DPTR
812245 AA06              MOV     R2,AR6
812247 F9                MOV     R1,A
812248 7B00              MOV     R3,#?C?XDATASEG
81224A C003              PUSH    AR3
81224C C002              PUSH    AR2
81224E C001              PUSH    AR1
812250 7B80              MOV     R3,#BYTE2 08010A1H
812252 7A10              MOV     R2,#HIGH 08010A1H
812254 79A1              MOV     R1,#LOW 08010A1H
812256 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
812259 A5128007B6        ECALL   ?C?PSTXDATA
81225E 900468            MOV     DPTR,#SystemParameter+048H
812261 E0                MOVX    A,@DPTR
812262 FC                MOV     R4,A
812263 A3                INC     DPTR
812264 E0                MOVX    A,@DPTR
812265 FD                MOV     R5,A
812266 900461            MOV     DPTR,#SystemParameter+041H
812269 E0                MOVX    A,@DPTR
81226A FE                MOV     R6,A
81226B A3                INC     DPTR
81226C E0                MOVX    A,@DPTR
81226D FF                MOV     R7,A
81226E A51280056C        ECALL   ?C?UIDIV
812273 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
812276 EE                MOV     A,R6
812277 F0                MOVX    @DPTR,A
812278 A3                INC     DPTR
812279 EF                MOV     A,R7
81227A F0                MOVX    @DPTR,A
81227B 900468            MOV     DPTR,#SystemParameter+048H
81227E E0                MOVX    A,@DPTR
81227F FC                MOV     R4,A
812280 A3                INC     DPTR
812281 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 757


812282 FD                MOV     R5,A
812283 900461            MOV     DPTR,#SystemParameter+041H
812286 E0                MOVX    A,@DPTR
812287 FE                MOV     R6,A
812288 A3                INC     DPTR
812289 E0                MOVX    A,@DPTR
81228A FF                MOV     R7,A
81228B A51280056C        ECALL   ?C?UIDIV
812290 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
812293 EC                MOV     A,R4
812294 F0                MOVX    @DPTR,A
812295 A3                INC     DPTR
812296 ED                MOV     A,R5
812297         
  904: 					break;					
812297 022427            LJMP    ?C0483?SYSPARAMSET
  905: 				}				
  906: 			}
81229A         ?C0315?SYSPARAMSET:
  907: 			else
  908: 			{				
  909: 				//Trace( "\n set IP val \n");
  910: 				j = *len;											
81229A 90175A            MOV     DPTR,#len
81229D E0                MOVX    A,@DPTR
81229E FE                MOV     R6,A
81229F A3                INC     DPTR
8122A0 E0                MOVX    A,@DPTR
8122A1 F582              MOV     DPL,A
8122A3 8E83              MOV     DPH,R6
8122A5 E0                MOVX    A,@DPTR
8122A6 90175C            MOV     DPTR,#j
8122A9 F0                MOVX    @DPTR,A
  911: 				if( j == 0 )
8122AA 7003              JNZ     $ + 5H
8122AC 02256F            LJMP    ?C0351?SYSPARAMSET
  912: 					break;
8122AF         ?C0321?SYSPARAMSET:
  913: 				if( j > 5 )
8122AF 90175C            MOV     DPTR,#j
8122B2 E0                MOVX    A,@DPTR
8122B3 D3                SETB    C
8122B4 9405              SUBB    A,#05H
8122B6 4003              JC      ?C0322?SYSPARAMSET
  914: 					j = 5;
8122B8 7405              MOV     A,#05H
8122BA F0                MOVX    @DPTR,A
8122BB         ?C0322?SYSPARAMSET:
  915: 				SystemParameter.coinValue[4] = 0;	
8122BB E4                CLR     A
8122BC 900461            MOV     DPTR,#SystemParameter+041H
8122BF F0                MOVX    @DPTR,A
8122C0 A3                INC     DPTR
8122C1 F0                MOVX    @DPTR,A
  916: 				for( i = 0; i < j; i ++ )
8122C2 90175D            MOV     DPTR,#i
8122C5 F0                MOVX    @DPTR,A
8122C6         ?C0323?SYSPARAMSET:
8122C6 90175C            MOV     DPTR,#j
8122C9 E0                MOVX    A,@DPTR
8122CA FF                MOV     R7,A
8122CB A3                INC     DPTR
8122CC E0                MOVX    A,@DPTR
8122CD FE                MOV     R6,A
8122CE C3                CLR     C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 758


8122CF 9F                SUBB    A,R7
8122D0 5044              JNC     ?C0324?SYSPARAMSET
  917: 				{
  918: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
8122D2 901758            MOV     DPTR,#InStr
8122D5 E0                MOVX    A,@DPTR
8122D6 FC                MOV     R4,A
8122D7 A3                INC     DPTR
8122D8 E0                MOVX    A,@DPTR
8122D9 2E                ADD     A,R6
8122DA F582              MOV     DPL,A
8122DC E4                CLR     A
8122DD 3C                ADDC    A,R4
8122DE F583              MOV     DPH,A
8122E0 E0                MOVX    A,@DPTR
8122E1 FF                MOV     R7,A
8122E2 C3                CLR     C
8122E3 9400              SUBB    A,#00H
8122E5 4027              JC      ?C0325?SYSPARAMSET
8122E7 EF                MOV     A,R7
8122E8 D3                SETB    C
8122E9 9409              SUBB    A,#09H
8122EB 5021              JNC     ?C0325?SYSPARAMSET
  919: 						SystemParameter.coinValue[4] = SystemParameter.coinValue[4]*10 + *( InStr + i );						
8122ED EF                MOV     A,R7
8122EE FB                MOV     R3,A
8122EF 7A00              MOV     R2,#00H
8122F1 900461            MOV     DPTR,#SystemParameter+041H
8122F4 E0                MOVX    A,@DPTR
8122F5 FE                MOV     R6,A
8122F6 A3                INC     DPTR
8122F7 E0                MOVX    A,@DPTR
8122F8 FF                MOV     R7,A
8122F9 7C00              MOV     R4,#00H
8122FB 7D0A              MOV     R5,#0AH
8122FD A512800559        ECALL   ?C?IMUL
812302 EF                MOV     A,R7
812303 2B                ADD     A,R3
812304 FF                MOV     R7,A
812305 EA                MOV     A,R2
812306 3E                ADDC    A,R6
812307 900461            MOV     DPTR,#SystemParameter+041H
81230A F0                MOVX    @DPTR,A
81230B A3                INC     DPTR
81230C EF                MOV     A,R7
81230D F0                MOVX    @DPTR,A
  920: 				}	
81230E         ?C0325?SYSPARAMSET:
81230E 90175D            MOV     DPTR,#i
812311 E0                MOVX    A,@DPTR
812312 04                INC     A
812313 F0                MOVX    @DPTR,A
812314 80B0              SJMP    ?C0323?SYSPARAMSET
812316         ?C0324?SYSPARAMSET:
  921: 				SystemSave = 1;
812316 D22E              SETB    SystemSave
  922: 			}			
  923: 		break;
812318 02256F            LJMP    ?C0351?SYSPARAMSET
  924:         case 27: //# 6 coin
81231B         ?C0327?SYSPARAMSET:
  925:         if( OutInFlag == 0 )
81231B 301A03            JNB     OutInFlag,$ + 6H
81231E 022443            LJMP    ?C0328?SYSPARAMSET
  926: 			{			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 759


  927: 				switch( SystemParameter.curUnit )
812321 900468            MOV     DPTR,#SystemParameter+048H
812324 E0                MOVX    A,@DPTR
812325 FE                MOV     R6,A
812326 A3                INC     DPTR
812327 E0                MOVX    A,@DPTR
812328 FF                MOV     R7,A
812329 EE                MOV     A,R6
81232A 6003              JZ      $ + 5H
81232C 02256F            LJMP    ?C0351?SYSPARAMSET
81232F EF                MOV     A,R7
812330 24F6              ADD     A,#0F6H
812332 603F              JZ      ?C0331?SYSPARAMSET
812334 24A6              ADD     A,#0A6H
812336 7003              JNZ     $ + 5H
812338 0223CE            LJMP    ?C0332?SYSPARAMSET
81233B 2463              ADD     A,#063H
81233D 6003              JZ      $ + 5H
81233F 02256F            LJMP    ?C0351?SYSPARAMSET
  928: 				{
  929: 					case 1:
812342         ?C0330?SYSPARAMSET:
  930: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[5] );
812342 901756            MOV     DPTR,#OutStr
812345 E0                MOVX    A,@DPTR
812346 FE                MOV     R6,A
812347 A3                INC     DPTR
812348 E0                MOVX    A,@DPTR
812349 AA06              MOV     R2,AR6
81234B F9                MOV     R1,A
81234C 7B00              MOV     R3,#?C?XDATASEG
81234E C003              PUSH    AR3
812350 C002              PUSH    AR2
812352 C001              PUSH    AR1
812354 7B80              MOV     R3,#BYTE2 0801098H
812356 7A10              MOV     R2,#HIGH 0801098H
812358 7998              MOV     R1,#LOW 0801098H
81235A 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81235D A5128007B6        ECALL   ?C?PSTXDATA
812362 900463            MOV     DPTR,#SystemParameter+043H
812365 E0                MOVX    A,@DPTR
812366 FF                MOV     R7,A
812367 A3                INC     DPTR
812368 E0                MOVX    A,@DPTR
812369 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81236C CF                XCH     A,R7
81236D F0                MOVX    @DPTR,A
81236E A3                INC     DPTR
81236F EF                MOV     A,R7
812370         
  931: 					break;				
812370 022427            LJMP    ?C0483?SYSPARAMSET
  932: 					case 10:
812373         ?C0331?SYSPARAMSET:
  933: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[5]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[5]%SystemParameter.curUnit );
812373 901756            MOV     DPTR,#OutStr
812376 E0                MOVX    A,@DPTR
812377 FE                MOV     R6,A
812378 A3                INC     DPTR
812379 E0                MOVX    A,@DPTR
81237A AA06              MOV     R2,AR6
81237C F9                MOV     R1,A
81237D 7B00              MOV     R3,#?C?XDATASEG
81237F C003              PUSH    AR3
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 760


812381 C002              PUSH    AR2
812383 C001              PUSH    AR1
812385 7B80              MOV     R3,#BYTE2 080109BH
812387 7A10              MOV     R2,#HIGH 080109BH
812389 799B              MOV     R1,#LOW 080109BH
81238B 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
81238E A5128007B6        ECALL   ?C?PSTXDATA
812393 900468            MOV     DPTR,#SystemParameter+048H
812396 E0                MOVX    A,@DPTR
812397 FC                MOV     R4,A
812398 A3                INC     DPTR
812399 E0                MOVX    A,@DPTR
81239A FD                MOV     R5,A
81239B 900463            MOV     DPTR,#SystemParameter+043H
81239E E0                MOVX    A,@DPTR
81239F FE                MOV     R6,A
8123A0 A3                INC     DPTR
8123A1 E0                MOVX    A,@DPTR
8123A2 FF                MOV     R7,A
8123A3 A51280056C        ECALL   ?C?UIDIV
8123A8 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8123AB EE                MOV     A,R6
8123AC F0                MOVX    @DPTR,A
8123AD A3                INC     DPTR
8123AE EF                MOV     A,R7
8123AF F0                MOVX    @DPTR,A
8123B0 900468            MOV     DPTR,#SystemParameter+048H
8123B3 E0                MOVX    A,@DPTR
8123B4 FC                MOV     R4,A
8123B5 A3                INC     DPTR
8123B6 E0                MOVX    A,@DPTR
8123B7 FD                MOV     R5,A
8123B8 900463            MOV     DPTR,#SystemParameter+043H
8123BB E0                MOVX    A,@DPTR
8123BC FE                MOV     R6,A
8123BD A3                INC     DPTR
8123BE E0                MOVX    A,@DPTR
8123BF FF                MOV     R7,A
8123C0 A51280056C        ECALL   ?C?UIDIV
8123C5 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
8123C8 EC                MOV     A,R4
8123C9 F0                MOVX    @DPTR,A
8123CA A3                INC     DPTR
8123CB ED                MOV     A,R5
8123CC         
  934: 					break;
8123CC 8059              SJMP    ?C0483?SYSPARAMSET
  935: 					case 100:
8123CE         ?C0332?SYSPARAMSET:
  936: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[5]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[5]%SystemParameter.curUnit );
8123CE 901756            MOV     DPTR,#OutStr
8123D1 E0                MOVX    A,@DPTR
8123D2 FE                MOV     R6,A
8123D3 A3                INC     DPTR
8123D4 E0                MOVX    A,@DPTR
8123D5 AA06              MOV     R2,AR6
8123D7 F9                MOV     R1,A
8123D8 7B00              MOV     R3,#?C?XDATASEG
8123DA C003              PUSH    AR3
8123DC C002              PUSH    AR2
8123DE C001              PUSH    AR1
8123E0 7B80              MOV     R3,#BYTE2 08010A1H
8123E2 7A10              MOV     R2,#HIGH 08010A1H
8123E4 79A1              MOV     R1,#LOW 08010A1H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 761


8123E6 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8123E9 A5128007B6        ECALL   ?C?PSTXDATA
8123EE 900468            MOV     DPTR,#SystemParameter+048H
8123F1 E0                MOVX    A,@DPTR
8123F2 FC                MOV     R4,A
8123F3 A3                INC     DPTR
8123F4 E0                MOVX    A,@DPTR
8123F5 FD                MOV     R5,A
8123F6 900463            MOV     DPTR,#SystemParameter+043H
8123F9 E0                MOVX    A,@DPTR
8123FA FE                MOV     R6,A
8123FB A3                INC     DPTR
8123FC E0                MOVX    A,@DPTR
8123FD FF                MOV     R7,A
8123FE A51280056C        ECALL   ?C?UIDIV
812403 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
812406 EE                MOV     A,R6
812407 F0                MOVX    @DPTR,A
812408 A3                INC     DPTR
812409 EF                MOV     A,R7
81240A F0                MOVX    @DPTR,A
81240B 900468            MOV     DPTR,#SystemParameter+048H
81240E E0                MOVX    A,@DPTR
81240F FC                MOV     R4,A
812410 A3                INC     DPTR
812411 E0                MOVX    A,@DPTR
812412 FD                MOV     R5,A
812413 900463            MOV     DPTR,#SystemParameter+043H
812416 E0                MOVX    A,@DPTR
812417 FE                MOV     R6,A
812418 A3                INC     DPTR
812419 E0                MOVX    A,@DPTR
81241A FF                MOV     R7,A
81241B A51280056C        ECALL   ?C?UIDIV
812420 901B8E            MOV     DPTR,#?_sprintf?BYTE+08H
812423 EC                MOV     A,R4
812424 F0                MOVX    @DPTR,A
812425 A3                INC     DPTR
812426 ED                MOV     A,R5
812427         
812427 F0                MOVX    @DPTR,A
812428 D001              POP     AR1
81242A D002              POP     AR2
81242C D003              POP     AR3
81242E A512800949        ECALL   _sprintf
812433 90175A            MOV     DPTR,#len
812436 E0                MOVX    A,@DPTR
812437 FC                MOV     R4,A
812438 A3                INC     DPTR
812439 E0                MOVX    A,@DPTR
81243A F582              MOV     DPL,A
81243C 8C83              MOV     DPH,R4
81243E EF                MOV     A,R7
81243F F0                MOVX    @DPTR,A
  937: 					break;					
812440 02256F            LJMP    ?C0351?SYSPARAMSET
  938: 				}				
  939: 			}
812443         ?C0328?SYSPARAMSET:
  940: 			else
  941: 			{				
  942: 				//Trace( "\n set IP val \n");
  943: 				j = *len;											
812443 90175A            MOV     DPTR,#len
812446 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 762


812447 FE                MOV     R6,A
812448 A3                INC     DPTR
812449 E0                MOVX    A,@DPTR
81244A F582              MOV     DPL,A
81244C 8E83              MOV     DPH,R6
81244E E0                MOVX    A,@DPTR
81244F 90175C            MOV     DPTR,#j
812452 F0                MOVX    @DPTR,A
  944: 				if( j == 0 )
812453 7003              JNZ     $ + 5H
812455 02256F            LJMP    ?C0351?SYSPARAMSET
  945: 					break;
812458         ?C0334?SYSPARAMSET:
  946: 				if( j > 5 )
812458 90175C            MOV     DPTR,#j
81245B E0                MOVX    A,@DPTR
81245C D3                SETB    C
81245D 9405              SUBB    A,#05H
81245F 4003              JC      ?C0335?SYSPARAMSET
  947: 					j = 5;
812461 7405              MOV     A,#05H
812463 F0                MOVX    @DPTR,A
812464         ?C0335?SYSPARAMSET:
  948: 				SystemParameter.coinValue[5] = 0;	
812464 E4                CLR     A
812465 900463            MOV     DPTR,#SystemParameter+043H
812468 F0                MOVX    @DPTR,A
812469 A3                INC     DPTR
81246A F0                MOVX    @DPTR,A
  949: 				for( i = 0; i < j; i ++ )
81246B 90175D            MOV     DPTR,#i
81246E F0                MOVX    @DPTR,A
81246F         ?C0336?SYSPARAMSET:
81246F 90175C            MOV     DPTR,#j
812472 E0                MOVX    A,@DPTR
812473 FF                MOV     R7,A
812474 A3                INC     DPTR
812475 E0                MOVX    A,@DPTR
812476 FE                MOV     R6,A
812477 C3                CLR     C
812478 9F                SUBB    A,R7
812479 5044              JNC     ?C0337?SYSPARAMSET
  950: 				{
  951: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
81247B 901758            MOV     DPTR,#InStr
81247E E0                MOVX    A,@DPTR
81247F FC                MOV     R4,A
812480 A3                INC     DPTR
812481 E0                MOVX    A,@DPTR
812482 2E                ADD     A,R6
812483 F582              MOV     DPL,A
812485 E4                CLR     A
812486 3C                ADDC    A,R4
812487 F583              MOV     DPH,A
812489 E0                MOVX    A,@DPTR
81248A FF                MOV     R7,A
81248B C3                CLR     C
81248C 9400              SUBB    A,#00H
81248E 4027              JC      ?C0338?SYSPARAMSET
812490 EF                MOV     A,R7
812491 D3                SETB    C
812492 9409              SUBB    A,#09H
812494 5021              JNC     ?C0338?SYSPARAMSET
  952: 						SystemParameter.coinValue[5] = SystemParameter.coinValue[5]*10 + *( InStr + i );						
812496 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 763


812497 FB                MOV     R3,A
812498 7A00              MOV     R2,#00H
81249A 900463            MOV     DPTR,#SystemParameter+043H
81249D E0                MOVX    A,@DPTR
81249E FE                MOV     R6,A
81249F A3                INC     DPTR
8124A0 E0                MOVX    A,@DPTR
8124A1 FF                MOV     R7,A
8124A2 7C00              MOV     R4,#00H
8124A4 7D0A              MOV     R5,#0AH
8124A6 A512800559        ECALL   ?C?IMUL
8124AB EF                MOV     A,R7
8124AC 2B                ADD     A,R3
8124AD FF                MOV     R7,A
8124AE EA                MOV     A,R2
8124AF 3E                ADDC    A,R6
8124B0 900463            MOV     DPTR,#SystemParameter+043H
8124B3 F0                MOVX    @DPTR,A
8124B4 A3                INC     DPTR
8124B5 EF                MOV     A,R7
8124B6 F0                MOVX    @DPTR,A
  953: 				}	
8124B7         ?C0338?SYSPARAMSET:
8124B7 90175D            MOV     DPTR,#i
8124BA E0                MOVX    A,@DPTR
8124BB 04                INC     A
8124BC F0                MOVX    @DPTR,A
8124BD 80B0              SJMP    ?C0336?SYSPARAMSET
8124BF         ?C0337?SYSPARAMSET:
  954: 				SystemSave = 1;
8124BF D22E              SETB    SystemSave
  955: 			}			
  956: 		break;
8124C1 02256F            LJMP    ?C0351?SYSPARAMSET
  957: 		case 28:  //GOC device on
8124C4         ?C0340?SYSPARAMSET:
  958: 			if( OutInFlag == 0 )
8124C4 201A43            JB      OutInFlag,?C0341?SYSPARAMSET
  959: 			{				
  960: 				sprintf( OutStr, "%bu", SystemParameter.GOCOn );			
8124C7 901756            MOV     DPTR,#OutStr
8124CA E0                MOVX    A,@DPTR
8124CB FE                MOV     R6,A
8124CC A3                INC     DPTR
8124CD E0                MOVX    A,@DPTR
8124CE AA06              MOV     R2,AR6
8124D0 F9                MOV     R1,A
8124D1 7B00              MOV     R3,#?C?XDATASEG
8124D3 C003              PUSH    AR3
8124D5 C002              PUSH    AR2
8124D7 C001              PUSH    AR1
8124D9 7B80              MOV     R3,#BYTE2 08010A9H
8124DB 7A10              MOV     R2,#HIGH 08010A9H
8124DD 79A9              MOV     R1,#LOW 08010A9H
8124DF 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
8124E2 A5128007B6        ECALL   ?C?PSTXDATA
8124E7 90046B            MOV     DPTR,#SystemParameter+04BH
8124EA         
8124EA E0                MOVX    A,@DPTR
8124EB 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
8124EE F0                MOVX    @DPTR,A
8124EF D001              POP     AR1
8124F1 D002              POP     AR2
8124F3 D003              POP     AR3
8124F5 A512800949        ECALL   _sprintf
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 764


  961: 				*len = 1;
8124FA 90175A            MOV     DPTR,#len
8124FD E0                MOVX    A,@DPTR
8124FE FE                MOV     R6,A
8124FF A3                INC     DPTR
812500 E0                MOVX    A,@DPTR
812501 F582              MOV     DPL,A
812503 8E83              MOV     DPH,R6
812505 7401              MOV     A,#01H
812507 F0                MOVX    @DPTR,A
  962: 			}
812508 8065              SJMP    ?C0351?SYSPARAMSET
81250A         ?C0341?SYSPARAMSET:
  963: 			else
  964: 			{
  965: 				j = *len;
81250A 90175A            MOV     DPTR,#len
81250D E0                MOVX    A,@DPTR
81250E FE                MOV     R6,A
81250F A3                INC     DPTR
812510 E0                MOVX    A,@DPTR
812511 F582              MOV     DPL,A
812513 8E83              MOV     DPH,R6
812515 E0                MOVX    A,@DPTR
812516 90175C            MOV     DPTR,#j
812519 F0                MOVX    @DPTR,A
  966: 				if( j == 0 )
81251A 6053              JZ      ?C0351?SYSPARAMSET
  967: 					break;
81251C         ?C0343?SYSPARAMSET:
  968: 				if( j > 1 )
81251C 90175C            MOV     DPTR,#j
81251F E0                MOVX    A,@DPTR
812520 D3                SETB    C
812521 9401              SUBB    A,#01H
812523 4003              JC      ?C0344?SYSPARAMSET
  969: 					j = 1;
812525 7401              MOV     A,#01H
812527 F0                MOVX    @DPTR,A
812528         ?C0344?SYSPARAMSET:
  970: 				for( i = 0; i < j; i ++ )
812528 E4                CLR     A
812529 90175D            MOV     DPTR,#i
81252C F0                MOVX    @DPTR,A
81252D         ?C0345?SYSPARAMSET:
81252D 90175C            MOV     DPTR,#j
812530 E0                MOVX    A,@DPTR
812531 FF                MOV     R7,A
812532 A3                INC     DPTR
812533 E0                MOVX    A,@DPTR
812534 FE                MOV     R6,A
812535 C3                CLR     C
812536 9F                SUBB    A,R7
812537 502A              JNC     ?C0346?SYSPARAMSET
  971: 				{
  972: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
812539 901758            MOV     DPTR,#InStr
81253C E0                MOVX    A,@DPTR
81253D FC                MOV     R4,A
81253E A3                INC     DPTR
81253F E0                MOVX    A,@DPTR
812540 2E                ADD     A,R6
812541 F582              MOV     DPL,A
812543 E4                CLR     A
812544 3C                ADDC    A,R4
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 765


812545 F583              MOV     DPH,A
812547 E0                MOVX    A,@DPTR
812548 FF                MOV     R7,A
812549 C3                CLR     C
81254A 9400              SUBB    A,#00H
81254C 400D              JC      ?C0347?SYSPARAMSET
81254E EF                MOV     A,R7
81254F D3                SETB    C
812550 9409              SUBB    A,#09H
812552 5007              JNC     ?C0347?SYSPARAMSET
  973: 					{
  974: 						SystemParameter.GOCOn = *( InStr + i );
812554 90046B            MOV     DPTR,#SystemParameter+04BH
812557 EF                MOV     A,R7
812558 F0                MOVX    @DPTR,A
  975: 						break;
812559 8008              SJMP    ?C0346?SYSPARAMSET
  976: 					}
  977: 				}
81255B         ?C0347?SYSPARAMSET:
81255B 90175D            MOV     DPTR,#i
81255E E0                MOVX    A,@DPTR
81255F 04                INC     A
812560 F0                MOVX    @DPTR,A
812561 80CA              SJMP    ?C0345?SYSPARAMSET
812563         ?C0346?SYSPARAMSET:
  978: 				if( SystemParameter.GOCOn != 1 )
812563 90046B            MOV     DPTR,#SystemParameter+04BH
812566 E0                MOVX    A,@DPTR
812567 6401              XRL     A,#01H
812569 6002              JZ      ?C0349?SYSPARAMSET
  979: 					SystemParameter.GOCOn = 0;	
81256B E4                CLR     A
81256C F0                MOVX    @DPTR,A
81256D         ?C0349?SYSPARAMSET:
  980: 				SystemSave = 1;
81256D D22E              SETB    SystemSave
  981: 			}
  982: 		break;
  983: 		/*
  984: 		case 29:  //If service, when GOC error
  985: 			if( OutInFlag == 0 )
  986: 			{				
  987: 				sprintf( OutStr, "%bu", SystemParameter.SVC_GOCErr );			
  988: 				*len = 1;
  989: 			}
  990: 			else
  991: 			{
  992: 				j = *len;
  993: 				if( j == 0 )
  994: 					break;
  995: 				if( j > 1 )
  996: 					j = 1;
  997: 				for( i = 0; i < j; i ++ )
  998: 				{
  999: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
 1000: 					{
 1001: 						SystemParameter.SVC_GOCErr = *( InStr + i );
 1002: 						break;
 1003: 					}
 1004: 				}
 1005: 				if( SystemParameter.SVC_GOCErr != 1 )
 1006: 					SystemParameter.SVC_GOCErr = 0;	
 1007: 				SystemSave = 1;
 1008: 			}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 766


 1009: 		break;
 1010: 		*/
 1011: 		//====================================================================================================
 1012: 		default: break;
 1013: 	}
 1014: }
81256F         ?C0351?SYSPARAMSET:
81256F A522              ERET    
----- FUNCTION _ReadWriteSysParam (END) -------


----- FUNCTION _ZhkHopperTask (BEGIN) -----
 FILE: 'scheduler.c'
  430: bit ZhkHopperTask( struct COMMTASK xdata* TaskTemp )
  431: {
812571 901852            MOV     DPTR,#TaskTemp
812574 EE                MOV     A,R6
812575 F0                MOVX    @DPTR,A
812576 A3                INC     DPTR
812577 EF                MOV     A,R7
812578 F0                MOVX    @DPTR,A
  432: 	uchar data StateTemp;
  433: 	
  434: 	switch( ZhkSchedulerState )
812579 9023D3            MOV     DPTR,#ZhkSchedulerState
81257C E0                MOVX    A,@DPTR
81257D 7003              JNZ     $ + 5H
81257F 0226C2            LJMP    ?C0069?SCHEDULER
812582 24FE              ADD     A,#0FEH
812584 6065              JZ      ?C0079?SCHEDULER
812586 14                DEC     A
812587 7003              JNZ     $ + 5H
812589 02263B            LJMP    ?C0087?SCHEDULER
81258C 14                DEC     A
81258D 7003              JNZ     $ + 5H
81258F 02265D            LJMP    ?C0090?SCHEDULER
812592 14                DEC     A
812593 7003              JNZ     $ + 5H
812595 02268D            LJMP    ?C0096?SCHEDULER
812598 2404              ADD     A,#04H
81259A 6003              JZ      $ + 5H
81259C 0226BD            LJMP    ?C0102?SCHEDULER
  435: 	{
  436: 	case TASK_NULL:
  437: 		break;
  438: 	case TASK_REDAY:
81259F         ?C0071?SCHEDULER:
  439:         //Trace( "ZhkHopperTaskBegin\n" );
  440: 		ZhkChannelSwitch( EQUIP_HOPPER );
81259F 7F08              MOV     R7,#08H
8125A1 A512807E2B        ECALL   _ZhkChannelSwitch
  441: 		if( ZhkHopperTxMsg( TaskTemp ) )
8125A6 A51280FFBB        ECALL   ?L?COM0035
8125AB 9023D3            MOV     DPTR,#ZhkSchedulerState
8125AE 5005              JNC     ?C0072?SCHEDULER
  442: 			ZhkSchedulerState = TASK_WAIT;
8125B0 7402              MOV     A,#02H
8125B2 F0                MOVX    @DPTR,A
8125B3 8003              SJMP    ?C0073?SCHEDULER
8125B5         ?C0072?SCHEDULER:
  443: 		else
  444: 			ZhkSchedulerState = TASK_FINISH;
8125B5 7404              MOV     A,#04H
8125B7 F0                MOVX    @DPTR,A
8125B8         ?C0073?SCHEDULER:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 767


  445: 	    //Trace( "\n ZhkHopperTxMsgOK" );		
  446: 		ZhkDownMsgAckTimer  = 80;
8125B8 751100            MOV     ZhkDownMsgAckTimer,#00H
8125BB 751250            MOV     ZhkDownMsgAckTimer+01H,#050H
  447: 		switch( TaskTemp->Id - ID_HOPPER1 )
8125BE 901852            MOV     DPTR,#TaskTemp
8125C1 E0                MOVX    A,@DPTR
8125C2 FE                MOV     R6,A
8125C3 A3                INC     DPTR
8125C4 E0                MOVX    A,@DPTR
8125C5 F582              MOV     DPL,A
8125C7 8E83              MOV     DPH,R6
8125C9 A3                INC     DPTR
8125CA E0                MOVX    A,@DPTR
8125CB 14                DEC     A
8125CC 600F              JZ      ?C0076?SCHEDULER
8125CE 14                DEC     A
8125CF 6011              JZ      ?C0077?SCHEDULER
8125D1 2402              ADD     A,#02H
8125D3 6003              JZ      $ + 5H
8125D5 0226BD            LJMP    ?C0338?SCHEDULER
  448: 		{
  449: 		case 0:
8125D8         ?C0075?SCHEDULER:
  450: 			Hopper1.CommState = COMM_BUZY;
8125D8 902380            MOV     DPTR,#Hopper1+02H
  451: 			break;
8125DB 8008              SJMP    ?C0329?SCHEDULER
  452: 		case 1:
8125DD         ?C0076?SCHEDULER:
  453: 			Hopper2.CommState = COMM_BUZY;
8125DD 902395            MOV     DPTR,#Hopper2+02H
8125E0         
  454: 			break;
8125E0 8003              SJMP    ?C0329?SCHEDULER
  455: 		case 2:
8125E2         ?C0077?SCHEDULER:
  456: 			Hopper3.CommState = COMM_BUZY;
8125E2 9023AA            MOV     DPTR,#Hopper3+02H
8125E5         
8125E5 7401              MOV     A,#01H
8125E7 F0                MOVX    @DPTR,A
  457: 			break;
8125E8 0226C2            LJMP    ?C0069?SCHEDULER
  458: 		default:
  459: 			ZhkSchedulerState = TASK_NULL; 
  460: 		}
  461: 		break;
  462: 	case TASK_WAIT:
8125EB         ?C0079?SCHEDULER:
  463:         //Trace( "\n HOPPERTASK_WAIT" );
  464: 		StateTemp = ZhkHopperMsgProcess();
8125EB A5128128E9        ECALL   ZhkHopperMsgProcess
8125F0 8F2A              MOV     StateTemp,R7
  465: 	    //Trace( "\n StateTemp = %bu", StateTemp );
  466: 		if ( StateTemp == 1 )
8125F2 E52A              MOV     A,StateTemp
8125F4 B40102            CJNE    A,#01H,?C0080?SCHEDULER
  467: 		{
  468: 			ZhkSchedulerState = TASK_FINISH;
  469: 			break;
8125F7 804E              SJMP    ?C0331?SCHEDULER
  470: 		}
8125F9         ?C0080?SCHEDULER:
  471: 		if( ZhkDownMsgAckTimer == 0 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 768


8125F9 E512              MOV     A,ZhkDownMsgAckTimer+01H
8125FB 4511              ORL     A,ZhkDownMsgAckTimer
8125FD 6003              JZ      $ + 5H
8125FF 0226C2            LJMP    ?C0069?SCHEDULER
  472: 		{
  473:             //Trace( "\n HOPPERTASK_WAIT" );	
  474: 			//发送			
  475: 			if ( ZhkHopperTxMsg( TaskTemp ) )
812602 A51280FFBB        ECALL   ?L?COM0035
812607 9023D3            MOV     DPTR,#ZhkSchedulerState
81260A 5005              JNC     ?C0082?SCHEDULER
  476: 				ZhkSchedulerState = TASK_REWAIT;
81260C 7403              MOV     A,#03H
81260E F0                MOVX    @DPTR,A
81260F 8003              SJMP    ?C0083?SCHEDULER
812611         ?C0082?SCHEDULER:
  477: 			else
  478: 				ZhkSchedulerState = TASK_FINISH;
812611 7404              MOV     A,#04H
812613 F0                MOVX    @DPTR,A
812614         ?C0083?SCHEDULER:
  479: 			
  480: 			if( TaskTemp->Cmd == HOPPER_OUTPUT )
812614 901852            MOV     DPTR,#TaskTemp
812617 E0                MOVX    A,@DPTR
812618 FE                MOV     R6,A
812619 A3                INC     DPTR
81261A E0                MOVX    A,@DPTR
81261B F582              MOV     DPL,A
81261D 8E83              MOV     DPH,R6
81261F A3                INC     DPTR
812620 A3                INC     DPTR
812621 E0                MOVX    A,@DPTR
812622 FF                MOV     R7,A
812623 B45005            CJNE    A,#050H,?C0084?SCHEDULER
  481: 				ZhkDownMsgAckTimer  = 80;           //DOWNMSGACKTIMEOUT;
812626 751100            MOV     ZhkDownMsgAckTimer,#00H
812629 800A              SJMP    ?C0332?SCHEDULER
81262B         ?C0084?SCHEDULER:
  482: 			else if( TaskTemp->Cmd == HOPPER_QUERY )
81262B EF                MOV     A,R7
81262C 6451              XRL     A,#051H
81262E 6003              JZ      $ + 5H
812630 0226C2            LJMP    ?C0069?SCHEDULER
  483: 				ZhkDownMsgAckTimer  = 80;
812633 F511              MOV     ZhkDownMsgAckTimer,A
812635         
812635 751250            MOV     ZhkDownMsgAckTimer+01H,#050H
  484: 		}		
  485: 		break;
812638 0226C2            LJMP    ?C0069?SCHEDULER
  486: 	case TASK_REWAIT:
81263B         ?C0087?SCHEDULER:
  487: 	    //Trace( "\n HOPPER RETASK_WAIT" );
  488: 		StateTemp = ZhkHopperMsgProcess();
81263B A5128128E9        ECALL   ZhkHopperMsgProcess
812640 8F2A              MOV     StateTemp,R7
  489: 		if ( StateTemp == 1 )
812642 E52A              MOV     A,StateTemp
812644 B40108            CJNE    A,#01H,?C0088?SCHEDULER
  490: 		{
  491: 			ZhkSchedulerState = TASK_FINISH;
812647         
812647 9023D3            MOV     DPTR,#ZhkSchedulerState
81264A 7404              MOV     A,#04H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 769


81264C F0                MOVX    @DPTR,A
  492: 			break;
81264D 8073              SJMP    ?C0069?SCHEDULER
  493: 		}
81264F         ?C0088?SCHEDULER:
  494: 		if ( ZhkDownMsgAckTimer == 0 )
81264F E512              MOV     A,ZhkDownMsgAckTimer+01H
812651 4511              ORL     A,ZhkDownMsgAckTimer
812653 706D              JNZ     ?C0069?SCHEDULER
  495: 		{
  496: 			ZhkSchedulerState = TASK_ERROR;
812655 9023D3            MOV     DPTR,#ZhkSchedulerState
812658 7405              MOV     A,#05H
81265A F0                MOVX    @DPTR,A
  497: 		}
  498: 		break;
81265B 8065              SJMP    ?C0069?SCHEDULER
  499: 	case TASK_FINISH:
81265D         ?C0090?SCHEDULER:
  500:         //Trace( "\n HOPPER TASK_FINISH" );		
  501: 		switch( TaskTemp->Id - ID_HOPPER1 )
81265D 901852            MOV     DPTR,#TaskTemp
812660 E0                MOVX    A,@DPTR
812661 FE                MOV     R6,A
812662 A3                INC     DPTR
812663 E0                MOVX    A,@DPTR
812664 F582              MOV     DPL,A
812666 8E83              MOV     DPH,R6
812668 A3                INC     DPTR
812669 E0                MOVX    A,@DPTR
81266A 14                DEC     A
81266B 600C              JZ      ?C0093?SCHEDULER
81266D 14                DEC     A
81266E 600E              JZ      ?C0094?SCHEDULER
812670 2402              ADD     A,#02H
812672 7012              JNZ     ?C0095?SCHEDULER
  502: 		{
  503: 		case 0:
812674         ?C0092?SCHEDULER:
  504: 			Hopper1.CommState = COMM_COMMOK;
812674 902380            MOV     DPTR,#Hopper1+02H
  505: 			break;
812677 8008              SJMP    ?C0334?SCHEDULER
  506: 		case 1:
812679         ?C0093?SCHEDULER:
  507: 			Hopper2.CommState = COMM_COMMOK;
812679 902395            MOV     DPTR,#Hopper2+02H
81267C         
  508: 			break;
81267C 8003              SJMP    ?C0334?SCHEDULER
  509: 		case 2:
81267E         ?C0094?SCHEDULER:
  510: 			Hopper3.CommState = COMM_COMMOK;
81267E 9023AA            MOV     DPTR,#Hopper3+02H
812681         
812681 7404              MOV     A,#04H
812683 F0                MOVX    @DPTR,A
  511: 			break;
812684 8005              SJMP    ?C0091?SCHEDULER
  512: 		default:
812686         ?C0095?SCHEDULER:
  513: 			ZhkSchedulerState = TASK_NULL; 
812686 E4                CLR     A
812687 9023D3            MOV     DPTR,#ZhkSchedulerState
81268A F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 770


  514: 		}
81268B         ?C0091?SCHEDULER:
  515: 		ZhkSchedulerState = TASK_NULL; 
81268B         
  516: 		break;
81268B 8030              SJMP    ?C0338?SCHEDULER
  517: 	case TASK_ERROR:
81268D         ?C0096?SCHEDULER:
  518: 		switch( TaskTemp->Id - ID_HOPPER1 )
81268D 901852            MOV     DPTR,#TaskTemp
812690 E0                MOVX    A,@DPTR
812691 FE                MOV     R6,A
812692 A3                INC     DPTR
812693 E0                MOVX    A,@DPTR
812694 F582              MOV     DPL,A
812696 8E83              MOV     DPH,R6
812698 A3                INC     DPTR
812699 E0                MOVX    A,@DPTR
81269A 14                DEC     A
81269B 600C              JZ      ?C0099?SCHEDULER
81269D 14                DEC     A
81269E 600E              JZ      ?C0100?SCHEDULER
8126A0 2402              ADD     A,#02H
8126A2 7012              JNZ     ?C0101?SCHEDULER
  519: 		{
  520: 		case 0:
8126A4         ?C0098?SCHEDULER:
  521: 			Hopper1.CommState = COMM_TIMEOUT ;//| COMM_COMMOK;
8126A4 902380            MOV     DPTR,#Hopper1+02H
  522: 			break;
8126A7 8008              SJMP    ?C0337?SCHEDULER
  523: 		case 1:
8126A9         ?C0099?SCHEDULER:
  524: 			Hopper2.CommState = COMM_TIMEOUT ;//| COMM_COMMOK;
8126A9 902395            MOV     DPTR,#Hopper2+02H
8126AC         
  525: 			break;
8126AC 8003              SJMP    ?C0337?SCHEDULER
  526: 		case 2:
8126AE         ?C0100?SCHEDULER:
  527: 			Hopper3.CommState = COMM_TIMEOUT ;//| COMM_COMMOK;
8126AE 9023AA            MOV     DPTR,#Hopper3+02H
8126B1         
8126B1 7402              MOV     A,#02H
8126B3 F0                MOVX    @DPTR,A
  528: 			break;
8126B4 8005              SJMP    ?C0097?SCHEDULER
  529: 		default:
8126B6         ?C0101?SCHEDULER:
  530: 			ZhkSchedulerState = TASK_NULL; 
8126B6 E4                CLR     A
8126B7 9023D3            MOV     DPTR,#ZhkSchedulerState
8126BA F0                MOVX    @DPTR,A
  531: 		}
8126BB         ?C0097?SCHEDULER:
  532: 		ZhkSchedulerState = TASK_NULL; 
8126BB         
  533: 		break;
8126BB 8000              SJMP    ?C0338?SCHEDULER
  534: 	default:
8126BD         ?C0102?SCHEDULER:
  535: 		ZhkSchedulerState = TASK_NULL;
8126BD         
8126BD E4                CLR     A
8126BE 9023D3            MOV     DPTR,#ZhkSchedulerState
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 771


8126C1 F0                MOVX    @DPTR,A
  536: 	}
8126C2         ?C0069?SCHEDULER:
  537: 	return 1;
8126C2 D3                SETB    C
  538: }
8126C3         ?C0103?SCHEDULER:
8126C3 A522              ERET    
----- FUNCTION _ZhkHopperTask (END) -------


----- FUNCTION _ZhkLcdTask (BEGIN) -----
 FILE: 'scheduler.c'
  540: bit ZhkLcdTask( struct COMMTASK xdata* TaskTemp )
  541: {
8126C5 901852            MOV     DPTR,#TaskTemp
8126C8 EE                MOV     A,R6
8126C9 F0                MOVX    @DPTR,A
8126CA A3                INC     DPTR
8126CB EF                MOV     A,R7
8126CC F0                MOVX    @DPTR,A
  542: 	uchar data StateTemp;
  543: 	
  544: 	switch( ZhkSchedulerState )
8126CD 9023D3            MOV     DPTR,#ZhkSchedulerState
8126D0 E0                MOVX    A,@DPTR
8126D1 7003              JNZ     $ + 5H
8126D3 022797            LJMP    ?C0104?SCHEDULER
8126D6 24FE              ADD     A,#0FEH
8126D8 603E              JZ      ?C0109?SCHEDULER
8126DA 14                DEC     A
8126DB 606F              JZ      ?C0114?SCHEDULER
8126DD 14                DEC     A
8126DE 7003              JNZ     $ + 5H
8126E0 02276E            LJMP    ?C0117?SCHEDULER
8126E3 14                DEC     A
8126E4 7003              JNZ     $ + 5H
8126E6 022780            LJMP    ?C0118?SCHEDULER
8126E9 2404              ADD     A,#04H
8126EB 6003              JZ      $ + 5H
8126ED 022792            LJMP    ?C0119?SCHEDULER
  545: 	{
  546: 	case TASK_NULL:
  547: 		break;
  548: 	case TASK_REDAY:
8126F0         ?C0106?SCHEDULER:
  549: 		ZhkChannelSwitch( EQUIP_LCD );
8126F0 7F07              MOV     R7,#07H
8126F2 A512807E2B        ECALL   _ZhkChannelSwitch
  550: 		if ( ZhkLcdTxMsg( TaskTemp ) )
8126F7 A51281279A        ECALL   ?L?COM0034
8126FC 9023D3            MOV     DPTR,#ZhkSchedulerState
8126FF 5005              JNC     ?C0107?SCHEDULER
  551: 			ZhkSchedulerState = TASK_WAIT;
812701 7402              MOV     A,#02H
812703 F0                MOVX    @DPTR,A
812704 8003              SJMP    ?C0108?SCHEDULER
812706         ?C0107?SCHEDULER:
  552: 		else
  553: 			ZhkSchedulerState = TASK_FINISH;
812706 7404              MOV     A,#04H
812708 F0                MOVX    @DPTR,A
812709         ?C0108?SCHEDULER:
  554: 		ZhkDownMsgAckTimer = 60;
812709 751100            MOV     ZhkDownMsgAckTimer,#00H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 772


81270C 75123C            MOV     ZhkDownMsgAckTimer+01H,#03CH
  555: 		Lcd.CommState   = COMM_BUZY;
81270F 90236B            MOV     DPTR,#Lcd+02H
812712 7401              MOV     A,#01H
812714 F0                MOVX    @DPTR,A
  556: 		break;
812715 022797            LJMP    ?C0104?SCHEDULER
  557: 	case TASK_WAIT:
812718         ?C0109?SCHEDULER:
  558: 		StateTemp = ZhkLcdMsgProcess();
812718 A512812BC5        ECALL   ZhkLcdMsgProcess
81271D 8F2A              MOV     StateTemp,R7
  559: 		if ( StateTemp == 1 )
81271F E52A              MOV     A,StateTemp
812721 B40102            CJNE    A,#01H,?C0110?SCHEDULER
  560: 		{		
  561: 			ZhkSchedulerState = TASK_FINISH;
  562: 			break;
812724 8032              SJMP    ?C0339?SCHEDULER
  563: 		}
812726         ?C0110?SCHEDULER:
  564: 		if ( ZhkDownMsgAckTimer == 0 )
812726 E512              MOV     A,ZhkDownMsgAckTimer+01H
812728 4511              ORL     A,ZhkDownMsgAckTimer
81272A 706B              JNZ     ?C0104?SCHEDULER
  565: 		{
  566: 			Lcd.Sn --;
81272C 90236A            MOV     DPTR,#Lcd+01H
81272F E0                MOVX    A,@DPTR
812730 14                DEC     A
812731 F0                MOVX    @DPTR,A
  567: 			if ( ZhkLcdTxMsg( TaskTemp ) )							
812732 A51281279A        ECALL   ?L?COM0034
812737 9023D3            MOV     DPTR,#ZhkSchedulerState
81273A 5005              JNC     ?C0112?SCHEDULER
  568: 				ZhkSchedulerState = TASK_REWAIT;
81273C 7403              MOV     A,#03H
81273E F0                MOVX    @DPTR,A
81273F 8003              SJMP    ?C0113?SCHEDULER
812741         ?C0112?SCHEDULER:
  569: 		
  570: 			else			
  571: 				ZhkSchedulerState = TASK_FINISH;			
812741 7404              MOV     A,#04H
812743 F0                MOVX    @DPTR,A
812744         ?C0113?SCHEDULER:
  572: 			ZhkDownMsgAckTimer = DOWNMSGACKTIMEOUT;
812744 751100            MOV     ZhkDownMsgAckTimer,#00H
812747 75121E            MOV     ZhkDownMsgAckTimer+01H,#01EH
  573: 		}
  574: 		
  575: 		break;
81274A 804B              SJMP    ?C0104?SCHEDULER
  576: 	case TASK_REWAIT:		
81274C         ?C0114?SCHEDULER:
  577: 		StateTemp = ZhkLcdMsgProcess();
81274C A512812BC5        ECALL   ZhkLcdMsgProcess
812751 8F2A              MOV     StateTemp,R7
  578: 		if ( StateTemp == 1 )
812753 E52A              MOV     A,StateTemp
812755 B40108            CJNE    A,#01H,?C0115?SCHEDULER
  579: 		{
  580: 			ZhkSchedulerState = TASK_FINISH;
812758         
812758 9023D3            MOV     DPTR,#ZhkSchedulerState
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 773


81275B 7404              MOV     A,#04H
81275D F0                MOVX    @DPTR,A
  581: 			break;
81275E 8037              SJMP    ?C0104?SCHEDULER
  582: 		}
812760         ?C0115?SCHEDULER:
  583: 		if ( ZhkDownMsgAckTimer == 0 )
812760 E512              MOV     A,ZhkDownMsgAckTimer+01H
812762 4511              ORL     A,ZhkDownMsgAckTimer
812764 7031              JNZ     ?C0104?SCHEDULER
  584: 		{
  585: 			ZhkSchedulerState = TASK_ERROR;
812766 9023D3            MOV     DPTR,#ZhkSchedulerState
812769 7405              MOV     A,#05H
81276B F0                MOVX    @DPTR,A
  586: 		}
  587: 		break;
81276C 8029              SJMP    ?C0104?SCHEDULER
  588: 	case TASK_FINISH:		
81276E         ?C0117?SCHEDULER:
  589: 		ZhkSchedulerState = TASK_NULL; 
81276E E4                CLR     A
81276F 9023D3            MOV     DPTR,#ZhkSchedulerState
812772 F0                MOVX    @DPTR,A
  590: 		Lcd.CommState     = COMM_COMMOK;
812773 90236B            MOV     DPTR,#Lcd+02H
812776 7404              MOV     A,#04H
812778 F0                MOVX    @DPTR,A
  591: 		Lcd.ExtState[1] = 0;
812779 E4                CLR     A
81277A 90236E            MOV     DPTR,#Lcd+05H
81277D F0                MOVX    @DPTR,A
  592: 		break;
81277E 8017              SJMP    ?C0104?SCHEDULER
  593: 	case TASK_ERROR:
812780         ?C0118?SCHEDULER:
  594: 		Lcd.CommState  = COMM_TIMEOUT;// | COMM_COMMOK;
812780 90236B            MOV     DPTR,#Lcd+02H
812783 7402              MOV     A,#02H
812785 F0                MOVX    @DPTR,A
  595: 		ZhkSchedulerState = TASK_NULL; 
812786 E4                CLR     A
812787 9023D3            MOV     DPTR,#ZhkSchedulerState
81278A F0                MOVX    @DPTR,A
  596: 		Lcd.ExtState[1] = 1;
81278B 90236E            MOV     DPTR,#Lcd+05H
81278E 04                INC     A
81278F F0                MOVX    @DPTR,A
  597: 		break;
812790 8005              SJMP    ?C0104?SCHEDULER
  598: 	default:
812792         ?C0119?SCHEDULER:
  599: 		ZhkSchedulerState = TASK_NULL;
812792 E4                CLR     A
812793 9023D3            MOV     DPTR,#ZhkSchedulerState
812796 F0                MOVX    @DPTR,A
  600: 	}
812797         ?C0104?SCHEDULER:
  601: 	return 1;
812797 D3                SETB    C
  602: }
812798         ?C0120?SCHEDULER:
812798 A522              ERET    
----- FUNCTION _ZhkLcdTask (END) -------

LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 774



----- FUNCTION ?L?COM0034 (BEGIN) -----
81279A 901852            MOV     DPTR,#TaskTemp
81279D E0                MOVX    A,@DPTR
81279E FE                MOV     R6,A
81279F A3                INC     DPTR
8127A0 E0                MOVX    A,@DPTR
8127A1 FF                MOV     R7,A
----- FUNCTION _ZhkLcdTxMsg (BEGIN) -----
 FILE: 'scheduler.c'
  647: bit ZhkLcdTxMsg( struct COMMTASK xdata* NewTask )
  648: {
;---- Variable 'NewTask' assigned to Register 'R6/R7' ----
  649: 	// 更新sn计数
  650: 	Lcd.Sn ++;
8127A2 90236A            MOV     DPTR,#Lcd+01H
8127A5 E0                MOVX    A,@DPTR
8127A6 04                INC     A
8127A7 F0                MOVX    @DPTR,A
  651: 	if ( Lcd.Sn == 0 ) Lcd.Sn ++;
8127A8 E0                MOVX    A,@DPTR
8127A9 7003              JNZ     ?C0127?SCHEDULER
8127AB E0                MOVX    A,@DPTR
8127AC 04                INC     A
8127AD F0                MOVX    @DPTR,A
8127AE         ?C0127?SCHEDULER:
  652: 	NewTask->Sn = Lcd.Sn;
8127AE 90236A            MOV     DPTR,#Lcd+01H
8127B1 E0                MOVX    A,@DPTR
8127B2 8F82              MOV     DPL,R7
8127B4 8E83              MOV     DPH,R6
8127B6 A3                INC     DPTR
8127B7 A3                INC     DPTR
8127B8 A3                INC     DPTR
8127B9 F0                MOVX    @DPTR,A
  653: 	ZhkBusTxMsg( NewTask );	
8127BA A5128127C2        ECALL   _ZhkBusTxMsg
  654: 	
  655: 	return 1;
8127BF D3                SETB    C
  656: }
8127C0         ?C0128?SCHEDULER:
8127C0 A522              ERET    
----- FUNCTION _ZhkLcdTxMsg (END) -------


----- FUNCTION _ZhkBusTxMsg (BEGIN) -----
 FILE: 'procotol.c'
   63: unsigned char ZhkBusTxMsg( struct COMMTASK xdata* Task )
   64: {
;---- Variable 'Task' assigned to Register 'R6/R7' ----
   65: 	unsigned char  data i;
   66: 	unsigned char  data len;
   67: 	unsigned char  data sum;
   68: 	unsigned char xdata DataString[ 64 ];
   69: 	
   70: //	Trace( "\n ZhkBusTxMsg" );
   71: 	len = Task->ParamLen + 6;
8127C2 EF                MOV     A,R7
8127C3 2405              ADD     A,#05H
8127C5 F582              MOV     DPL,A
8127C7 E4                CLR     A
8127C8 3E                ADDC    A,R6
8127C9 F583              MOV     DPH,A
8127CB E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 775


8127CC 2406              ADD     A,#06H
8127CE F52F              MOV     len,A
   72: 	DataString[ 0 ] = CMDHEAD;
8127D0 901854            MOV     DPTR,#DataString
8127D3 74ED              MOV     A,#0EDH
8127D5 F0                MOVX    @DPTR,A
   73: 	DataString[ 1 ] = len;
8127D6 A3                INC     DPTR
8127D7 E52F              MOV     A,len
8127D9 F0                MOVX    @DPTR,A
   74: 	DataString[ 2 ] = Task->Sn;
8127DA 8F82              MOV     DPL,R7
8127DC 8E83              MOV     DPH,R6
8127DE A3                INC     DPTR
8127DF A3                INC     DPTR
8127E0 A3                INC     DPTR
8127E1 E0                MOVX    A,@DPTR
8127E2 901856            MOV     DPTR,#DataString+02H
8127E5 F0                MOVX    @DPTR,A
   75: //	Trace( "\n Task->Sn = %bu", Task->Sn );
   76: 	DataString[ 3 ] = Task->Cmd;
8127E6 8F82              MOV     DPL,R7
8127E8 8E83              MOV     DPH,R6
8127EA A3                INC     DPTR
8127EB A3                INC     DPTR
8127EC E0                MOVX    A,@DPTR
8127ED 901857            MOV     DPTR,#DataString+03H
8127F0 F0                MOVX    @DPTR,A
   77: 	DataString[ 4 ] = Task->Id;
8127F1 8F82              MOV     DPL,R7
8127F3 8E83              MOV     DPH,R6
8127F5 A3                INC     DPTR
8127F6 E0                MOVX    A,@DPTR
8127F7 901858            MOV     DPTR,#DataString+04H
8127FA F0                MOVX    @DPTR,A
   78: 	for( i = 0 ; i <= len - 6 ; i ++ )
8127FB E4                CLR     A
8127FC F52E              MOV     i,A
8127FE         ?C0005?PROCOTOL:
8127FE E52F              MOV     A,len
812800 24FA              ADD     A,#0FAH
812802 FD                MOV     R5,A
812803 E52E              MOV     A,i
812805 D3                SETB    C
812806 9D                SUBB    A,R5
812807 5027              JNC     ?C0006?PROCOTOL
   79: 		DataString[ 5 + i ] = Task->Param[ i ];	
812809 EF                MOV     A,R7
81280A 2406              ADD     A,#06H
81280C F582              MOV     DPL,A
81280E E4                CLR     A
81280F 3E                ADDC    A,R6
812810 F583              MOV     DPH,A
812812 E582              MOV     A,DPL
812814 252E              ADD     A,i
812816 F582              MOV     DPL,A
812818 E4                CLR     A
812819 3583              ADDC    A,DPH
81281B F583              MOV     DPH,A
81281D E0                MOVX    A,@DPTR
81281E FD                MOV     R5,A
81281F 7459              MOV     A,#LOW DataString+05H
812821 252E              ADD     A,i
812823 F582              MOV     DPL,A
812825 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 776


812826 3418              ADDC    A,#HIGH DataString+05H
812828 F583              MOV     DPH,A
81282A ED                MOV     A,R5
81282B F0                MOVX    @DPTR,A
81282C 052E              INC     i
81282E 80CE              SJMP    ?C0005?PROCOTOL
812830         ?C0006?PROCOTOL:
   80: 	sum = 0;
812830 E4                CLR     A
812831 F530              MOV     sum,A
   81: 	for( i = 0 ; i < DataString[ 1 ] - 1 ; i ++ )
812833 F52E              MOV     i,A
812835         ?C0008?PROCOTOL:
812835 901855            MOV     DPTR,#DataString+01H
812838 E0                MOVX    A,@DPTR
812839 14                DEC     A
81283A FF                MOV     R7,A
81283B E52E              MOV     A,i
81283D C3                CLR     C
81283E 9F                SUBB    A,R7
81283F 5012              JNC     ?C0009?PROCOTOL
   82: 	{
   83: 		sum ^= DataString[ i ];
812841 7454              MOV     A,#LOW DataString
812843 252E              ADD     A,i
812845 F582              MOV     DPL,A
812847 E4                CLR     A
812848 3418              ADDC    A,#HIGH DataString
81284A F583              MOV     DPH,A
81284C E0                MOVX    A,@DPTR
81284D 6230              XRL     sum,A
   84: 	}
81284F 052E              INC     i
812851 80E2              SJMP    ?C0008?PROCOTOL
812853         ?C0009?PROCOTOL:
   85: 	DataString[ len - 1 ] = sum;	
812853 7453              MOV     A,#LOW DataString-01H
812855 252F              ADD     A,len
812857 F582              MOV     DPL,A
812859 E4                CLR     A
81285A 3418              ADDC    A,#HIGH DataString-01H
81285C F583              MOV     DPH,A
81285E E530              MOV     A,sum
812860 F0                MOVX    @DPTR,A
   86: 	for( i = 0 ; i < len ; i ++ )		
812861 E4                CLR     A
812862 F52E              MOV     i,A
812864         ?C0011?PROCOTOL:
812864 E52E              MOV     A,i
812866 C3                CLR     C
812867 952F              SUBB    A,len
812869 5012              JNC     ?C0012?PROCOTOL
   87: 		ZhkSerial1PutCh( DataString[ i ] );			
81286B 7454              MOV     A,#LOW DataString
81286D 252E              ADD     A,i
81286F F582              MOV     DPL,A
812871 E4                CLR     A
812872 3418              ADDC    A,#HIGH DataString
812874 A51280F0F8        ECALL   ?L?COM001A
812879 052E              INC     i
81287B 80E7              SJMP    ?C0011?PROCOTOL
81287D         ?C0012?PROCOTOL:
   88: 	
   89: #ifdef _DEBUG_TRACE
   90: 	if( Task->Id == ID_CHANNEL )//ID_HOPPER2
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 777


   91: 	{
   92: 		Trace( "\n Bus Snd str ");	
   93: 		for( i = 0 ; i < len ; i ++ )
   94: 			Trace( " %02bx,",DataString[ i ] );
   95: 		Trace( "\n" );
   96: 	}
   97: #endif	
   98: 
   99: 	return 1;
81287D 7F01              MOV     R7,#01H
  100: }
81287F         ?C0014?PROCOTOL:
81287F A522              ERET    
----- FUNCTION _ZhkBusTxMsg (END) -------


----- FUNCTION ZhkHopper1Query (BEGIN) -----
 FILE: 'scheduler.c'
  661: bit ZhkHopper1Query( void )
  662: {
  663: 	struct COMMTASK xdata TaskTemp;
  664: 
  665: 	TaskTemp.Id 		= ID_HOPPER1;
812881 E4                CLR     A
812882 90174E            MOV     DPTR,#TaskTemp+01H
812885 F0                MOVX    @DPTR,A
  666: 	TaskTemp.Cmd 		= HOPPER_QUERY;
812886 A3                INC     DPTR
812887 7451              MOV     A,#051H
812889 F0                MOVX    @DPTR,A
  667: 	TaskTemp.Sn		= Hopper1.Sn;
81288A 90237F            MOV     DPTR,#Hopper1+01H
81288D A512809751        ECALL   ?L?COM0015
812892 EF                MOV     A,R7
812893 24FF              ADD     A,#0FFH
  668: 	TaskTemp.Priority       = PRIORITY_NORMAL;
  669: 	TaskTemp.ParamLen	= 2;
  670: 	TaskTemp.Param[ 0 ] 	= 0;
  671: 	TaskTemp.Param[ 1 ] 	= 0;
  672: 	return ZhkSchedulerAddTask( &TaskTemp );	
  673: }
812895         ?C0129?SCHEDULER:
812895 A522              ERET    
----- FUNCTION ZhkHopper1Query (END) -------


----- FUNCTION _HopperQuery (BEGIN) -----
 FILE: 'scheduler.c'
  836: bit HopperQuery( uchar HopperNum )
  837: {
;---- Variable 'HopperNum' assigned to Register 'R7' ----
  838: 	switch( HopperNum )
  839: 	{
812897 EF                MOV     A,R7
812898 24FE              ADD     A,#0FEH
81289A 600E              JZ      ?C0173?SCHEDULER
81289C 14                DEC     A
81289D 6012              JZ      ?C0174?SCHEDULER
81289F 2402              ADD     A,#02H
8128A1 7015              JNZ     ?C0170?SCHEDULER
  840: 	case 1:
  841: 		return ZhkHopper1Query();
8128A3         ?C0171?SCHEDULER:
  842: 		break;
8128A3 A512812881        ECALL   ZhkHopper1Query
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 778


8128A8 800F              SJMP    ?C0172?SCHEDULER
  843: 	case 2:
  844: 		return ZhkHopper2Query();
8128AA         ?C0173?SCHEDULER:
  845: 		break;
8128AA A5128128BB        ECALL   ZhkHopper2Query
8128AF 8008              SJMP    ?C0172?SCHEDULER
  846: 	 case 3:
  847: 		return ZhkHopper3Query();	
8128B1         ?C0174?SCHEDULER:
  848: 		break;
8128B1 A5128128D2        ECALL   ZhkHopper3Query
8128B6 8001              SJMP    ?C0172?SCHEDULER
  849: 	}
  850: 	return 1;
8128B8         ?C0170?SCHEDULER:
  851: }
8128B8 D3                SETB    C
  852: 
8128B9         ?C0172?SCHEDULER:
8128B9 A522              ERET    
----- FUNCTION _HopperQuery (END) -------


----- FUNCTION ZhkHopper2Query (BEGIN) -----
 FILE: 'scheduler.c'
  675: bit ZhkHopper2Query( void )
  676: {
  677: 	struct COMMTASK xdata TaskTemp;
  678: 
  679: 	TaskTemp.Id 		= ID_HOPPER2;
8128BB 90174E            MOV     DPTR,#TaskTemp+01H
8128BE 7401              MOV     A,#01H
8128C0 F0                MOVX    @DPTR,A
  680: 	TaskTemp.Cmd 		= HOPPER_QUERY;
8128C1 A3                INC     DPTR
8128C2 7451              MOV     A,#051H
8128C4 F0                MOVX    @DPTR,A
  681: 	TaskTemp.Sn		= Hopper2.Sn;
8128C5 902394            MOV     DPTR,#Hopper2+01H
8128C8 A512809751        ECALL   ?L?COM0015
8128CD EF                MOV     A,R7
8128CE 24FF              ADD     A,#0FFH
  682: 	TaskTemp.Priority = PRIORITY_NORMAL;
  683: 	TaskTemp.ParamLen	= 2;
  684: 	TaskTemp.Param[ 0 ] 	= 0;
  685: 	TaskTemp.Param[ 1 ] 	= 0;
  686: 	return ZhkSchedulerAddTask( &TaskTemp );	
  687: }
8128D0         ?C0130?SCHEDULER:
8128D0 A522              ERET    
----- FUNCTION ZhkHopper2Query (END) -------


----- FUNCTION ZhkHopper3Query (BEGIN) -----
 FILE: 'scheduler.c'
  689: bit ZhkHopper3Query( void )
  690: {
  691: 	struct COMMTASK xdata TaskTemp;
  692: 
  693: 	TaskTemp.Id 		= ID_HOPPER3;
8128D2 90174E            MOV     DPTR,#TaskTemp+01H
8128D5 7402              MOV     A,#02H
8128D7 F0                MOVX    @DPTR,A
  694: 	TaskTemp.Cmd 		= HOPPER_QUERY;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 779


8128D8 A3                INC     DPTR
8128D9 7451              MOV     A,#051H
8128DB F0                MOVX    @DPTR,A
  695: 	TaskTemp.Sn		= Hopper3.Sn;
8128DC 9023A9            MOV     DPTR,#Hopper3+01H
8128DF A512809751        ECALL   ?L?COM0015
8128E4 EF                MOV     A,R7
8128E5 24FF              ADD     A,#0FFH
  696: 	TaskTemp.Priority = PRIORITY_NORMAL;
  697: 	TaskTemp.ParamLen	= 2;
  698: 	TaskTemp.Param[ 0 ] 	= 0;
  699: 	TaskTemp.Param[ 1 ] 	= 0;
  700: 	return ZhkSchedulerAddTask( &TaskTemp );	
  701: }
8128E7         ?C0131?SCHEDULER:
8128E7 A522              ERET    
----- FUNCTION ZhkHopper3Query (END) -------


----- FUNCTION ZhkHopperMsgProcess (BEGIN) -----
 FILE: 'scheduler.c'
  705: uchar ZhkHopperMsgProcess( void )
  706: {
  707: 	struct COMMTASK xdata AckTask;
  708: 
  709: 	memset( &AckTask, 0, sizeof( struct COMMTASK ) );
8128E9 7E00              MOV     R6,#00H
8128EB 7F26              MOV     R7,#026H
8128ED 7D00              MOV     R5,#00H
8128EF 7B00              MOV     R3,#?C?XDATASEG
8128F1 7A18              MOV     R2,#HIGH AckTask
8128F3 7954              MOV     R1,#LOW AckTask
8128F5 A5128008A6        ECALL   ?C?MEMSET
  710: 	memcpy( &AckTask, &CurrentTask, sizeof( struct COMMTASK ) );
8128FA 7854              MOV     R0,#LOW AckTask
8128FC 7C18              MOV     R4,#HIGH AckTask
8128FE 7D00              MOV     R5,#?C?XDATASEG
812900 7B00              MOV     R3,#?C?XDATASEG
812902 7A28              MOV     R2,#HIGH CurrentTask
812904 79AE              MOV     R1,#LOW CurrentTask
812906 7E00              MOV     R6,#00H
812908 7F26              MOV     R7,#026H
81290A A51280052D        ECALL   ?C?COPY
  711: //	Trace( "\n AckTask.Sn = %bu", AckTask.Sn );
  712: 	if ( ZhkBusFrameUnPack( &AckTask ) == 0 )
81290F A5128129A9        ECALL   ?L?COM0041
812914 EF                MOV     A,R7
812915 7004              JNZ     ?C0132?SCHEDULER
  713: 	{
  714: 		return 0;	
812917 FF                MOV     R7,A
812918 0229A7            LJMP    ?C0133?SCHEDULER
  715: 	}
81291B         ?C0132?SCHEDULER:
  716: 	switch( CurrentTask.Id - ID_HOPPER1 )
81291B 9028AF            MOV     DPTR,#CurrentTask+01H
81291E E0                MOVX    A,@DPTR
81291F FF                MOV     R7,A
812920 14                DEC     A
812921 6016              JZ      ?C0136?SCHEDULER
812923 14                DEC     A
812924 6022              JZ      ?C0137?SCHEDULER
812926 2402              ADD     A,#02H
812928 702B              JNZ     ?C0134?SCHEDULER
  717: 	{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 780


  718: 	case 0:
81292A         ?C0135?SCHEDULER:
  719: //		Trace( "\n AckTask.State = %02bx", AckTask.State );
  720: 		Hopper1.State = 0;
81292A E4                CLR     A
81292B 902381            MOV     DPTR,#Hopper1+03H
81292E F0                MOVX    @DPTR,A
  721: 		Hopper1.State = AckTask.State;		
81292F 901858            MOV     DPTR,#AckTask+04H
812932 E0                MOVX    A,@DPTR
812933 902381            MOV     DPTR,#Hopper1+03H
812936 F0                MOVX    @DPTR,A
  722: 		break;
812937 801C              SJMP    ?C0134?SCHEDULER
  723: 	case 1:
812939         ?C0136?SCHEDULER:
  724: 		Hopper2.State = 0;
812939 E4                CLR     A
81293A 902396            MOV     DPTR,#Hopper2+03H
81293D F0                MOVX    @DPTR,A
  725: 		Hopper2.State = AckTask.State;
81293E 901858            MOV     DPTR,#AckTask+04H
812941 E0                MOVX    A,@DPTR
812942 902396            MOV     DPTR,#Hopper2+03H
812945 F0                MOVX    @DPTR,A
  726: 		break;
812946 800D              SJMP    ?C0134?SCHEDULER
  727: 	case 2:
812948         ?C0137?SCHEDULER:
  728: 		Hopper3.State = 0;
812948 E4                CLR     A
812949 9023AB            MOV     DPTR,#Hopper3+03H
81294C F0                MOVX    @DPTR,A
  729: 		Hopper3.State = AckTask.State;
81294D 901858            MOV     DPTR,#AckTask+04H
812950 E0                MOVX    A,@DPTR
812951 9023AB            MOV     DPTR,#Hopper3+03H
812954 F0                MOVX    @DPTR,A
  730: 		break;
  731: 	}
812955         ?C0134?SCHEDULER:
  732: 	
  733: //	Trace( "\n ZhkHopperMsgProcess OK");
  734: 	switch( CurrentTask.Cmd  )
812955 9028B0            MOV     DPTR,#CurrentTask+02H
812958 E0                MOVX    A,@DPTR
812959 24B0              ADD     A,#0B0H
81295B 6048              JZ      ?C0138?SCHEDULER
81295D 14                DEC     A
81295E 7041              JNZ     ?C0145?SCHEDULER
  735: 	{
  736: 		case HOPPER_OUTPUT:		
  737: 			break;
  738: 		case HOPPER_QUERY:
812960         ?C0140?SCHEDULER:
  739: 			switch( CurrentTask.Id - ID_HOPPER1 )
812960 EF                MOV     A,R7
812961 14                DEC     A
812962 6019              JZ      ?C0143?SCHEDULER
812964 14                DEC     A
812965 6028              JZ      ?C0144?SCHEDULER
812967 2402              ADD     A,#02H
812969 703A              JNZ     ?C0138?SCHEDULER
  740: 			{
  741: 			case 0:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 781


81296B         ?C0142?SCHEDULER:
  742: 				Hopper1.ExtState[ 0 ] = AckTask.Param[ 0 ];
81296B 90185A            MOV     DPTR,#AckTask+06H
81296E E0                MOVX    A,@DPTR
81296F 902382            MOV     DPTR,#Hopper1+04H
812972 F0                MOVX    @DPTR,A
  743: 				Hopper1.ExtState[ 1 ] = AckTask.Param[ 1 ];
812973 90185B            MOV     DPTR,#AckTask+07H
812976 E0                MOVX    A,@DPTR
812977 902383            MOV     DPTR,#Hopper1+05H
81297A F0                MOVX    @DPTR,A
  744: 				break;
81297B 8028              SJMP    ?C0138?SCHEDULER
  745: 			case 1:
81297D         ?C0143?SCHEDULER:
  746: 				Hopper2.ExtState[ 0 ] = AckTask.Param[ 0 ];
81297D 90185A            MOV     DPTR,#AckTask+06H
812980 E0                MOVX    A,@DPTR
812981 902397            MOV     DPTR,#Hopper2+04H
812984 F0                MOVX    @DPTR,A
  747: 				Hopper2.ExtState[ 1 ] = AckTask.Param[ 1 ];
812985 90185B            MOV     DPTR,#AckTask+07H
812988 E0                MOVX    A,@DPTR
812989 902398            MOV     DPTR,#Hopper2+05H
81298C F0                MOVX    @DPTR,A
  748: 				break;
81298D 8016              SJMP    ?C0138?SCHEDULER
  749: 			case 2:
81298F         ?C0144?SCHEDULER:
  750: 				Hopper3.ExtState[ 0 ] = AckTask.Param[ 0 ];
81298F 90185A            MOV     DPTR,#AckTask+06H
812992 E0                MOVX    A,@DPTR
812993 9023AC            MOV     DPTR,#Hopper3+04H
812996 F0                MOVX    @DPTR,A
  751: 				Hopper3.ExtState[ 1 ] = AckTask.Param[ 1 ];
812997 90185B            MOV     DPTR,#AckTask+07H
81299A E0                MOVX    A,@DPTR
81299B 9023AD            MOV     DPTR,#Hopper3+05H
81299E F0                MOVX    @DPTR,A
  752: 				break;
81299F 8004              SJMP    ?C0138?SCHEDULER
  753: 			}
  754: 			break;
  755: 		default:
8129A1         ?C0145?SCHEDULER:
  756: 			return 0;
8129A1 7F00              MOV     R7,#00H
8129A3 8002              SJMP    ?C0133?SCHEDULER
  757: 	}
8129A5         ?C0138?SCHEDULER:
  758: //	Trace( "ZhkHopperMsgProcessOver\n" );
  759: 	return 1;	
8129A5 7F01              MOV     R7,#01H
  760: }
8129A7         ?C0133?SCHEDULER:
8129A7 A522              ERET    
----- FUNCTION ZhkHopperMsgProcess (END) -------


----- FUNCTION ?L?COM0041 (BEGIN) -----
8129A9 7E18              MOV     R6,#HIGH AckTask
8129AB 7F54              MOV     R7,#LOW AckTask
----- FUNCTION _ZhkBusFrameUnPack (BEGIN) -----
 FILE: 'procotol.c'
  102: unsigned char ZhkBusFrameUnPack( struct COMMTASK xdata* Result  )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 782


  103: {
8129AD 90187A            MOV     DPTR,#Result
8129B0 EE                MOV     A,R6
8129B1 F0                MOVX    @DPTR,A
8129B2 A3                INC     DPTR
8129B3 EF                MOV     A,R7
8129B4 F0                MOVX    @DPTR,A
  104: 	unsigned char data i,j;
  105: 	unsigned char data len;
  106: 	unsigned char data sum;
  107: 	
  108: 
  109: 	j = 0;
8129B5 E4                CLR     A
8129B6 F52C              MOV     j,A
8129B8         ?C0015?PROCOTOL:
  110: 	while( ! ZhkSerial1IsRxBufNull() )
8129B8 A51280F69E        ECALL   ZhkSerial1IsRxBufNull
8129BD EF                MOV     A,R7
8129BE 702F              JNZ     ?C0016?PROCOTOL
  111: 	{
  112: 		for( i = 0 ; i < sizeof( DownMsgBuf ) - 1 ; i ++ )
8129C0 F52B              MOV     i,A
8129C2         ?C0017?PROCOTOL:
  113: 			DownMsgBuf[ i ] = DownMsgBuf[ i + 1 ];
8129C2 7463              MOV     A,#LOW DownMsgBuf+01H
8129C4 252B              ADD     A,i
8129C6 F582              MOV     DPL,A
8129C8 E4                CLR     A
8129C9 342D              ADDC    A,#HIGH DownMsgBuf+01H
8129CB F583              MOV     DPH,A
8129CD E0                MOVX    A,@DPTR
8129CE FF                MOV     R7,A
8129CF 7462              MOV     A,#LOW DownMsgBuf
8129D1 252B              ADD     A,i
8129D3 F582              MOV     DPL,A
8129D5 E4                CLR     A
8129D6 342D              ADDC    A,#HIGH DownMsgBuf
8129D8 F583              MOV     DPH,A
8129DA EF                MOV     A,R7
8129DB F0                MOVX    @DPTR,A
8129DC 052B              INC     i
8129DE E52B              MOV     A,i
8129E0 B43FDF            CJNE    A,#03FH,?C0017?PROCOTOL
8129E3         ?C0018?PROCOTOL:
  114: 		DownMsgBuf[ sizeof( DownMsgBuf ) - 1 ] = ZhkSerial1GetCh();
8129E3 A51280F739        ECALL   ZhkSerial1GetCh
8129E8 902DA1            MOV     DPTR,#DownMsgBuf+03FH
8129EB EF                MOV     A,R7
8129EC F0                MOVX    @DPTR,A
  115: #ifdef _DEBUG_TRACE
  116: 		j ++ ;
  117: #endif
  118: 	}
8129ED 80C9              SJMP    ?C0015?PROCOTOL
8129EF         ?C0016?PROCOTOL:
  119: /*
  120: #ifdef _DEBUG_TRACE
  121: 	if( j )
  122: 	{
  123: 		Trace( "\n Bus Return Str = ");
  124: 		for( j = 0; j < 32; j++ )
  125: 			Trace( " %02bx", DownMsgBuf[32+j] );
  126: 		j = 0;
  127: 	}
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 783


  128: #endif
  129: */
  130: 	for( i = 0 ; i <= sizeof( DownMsgBuf ) - 6 ; i ++ )
8129EF E4                CLR     A
8129F0 F52B              MOV     i,A
8129F2         ?C0020?PROCOTOL:
  131: 	{
  132: 		if ( DownMsgBuf[ i ] != ACKHEAD ) 
8129F2 7462              MOV     A,#LOW DownMsgBuf
8129F4 252B              ADD     A,i
8129F6 F582              MOV     DPL,A
8129F8 E4                CLR     A
8129F9 342D              ADDC    A,#HIGH DownMsgBuf
8129FB F583              MOV     DPH,A
8129FD E0                MOVX    A,@DPTR
8129FE 64FD              XRL     A,#0FDH
812A00 6003              JZ      $ + 5H
812A02 022BB6            LJMP    ?C0022?PROCOTOL
  133: 			continue;	
812A05         ?C0023?PROCOTOL:
  134: 		len = DownMsgBuf[ i + 1 ];	
812A05 7463              MOV     A,#LOW DownMsgBuf+01H
812A07 252B              ADD     A,i
812A09 F582              MOV     DPL,A
812A0B E4                CLR     A
812A0C 342D              ADDC    A,#HIGH DownMsgBuf+01H
812A0E F583              MOV     DPH,A
812A10 E0                MOVX    A,@DPTR
812A11 F52D              MOV     len,A
  135: 		if ( i + len > sizeof( DownMsgBuf ) )
812A13 252B              ADD     A,i
812A15 FF                MOV     R7,A
812A16 E4                CLR     A
812A17 33                RLC     A
812A18 FE                MOV     R6,A
812A19 D3                SETB    C
812A1A EF                MOV     A,R7
812A1B 9440              SUBB    A,#040H
812A1D EE                MOV     A,R6
812A1E 6480              XRL     A,#080H
812A20 9480              SUBB    A,#080H
812A22 4003              JC      $ + 5H
812A24 022BC1            LJMP    ?C0021?PROCOTOL
  136: 			break;	 
812A27         ?C0024?PROCOTOL:
  137: 		sum = 0;
812A27 E4                CLR     A
812A28 F52E              MOV     sum,A
  138: 		for( j = i ; j < i + len ; j ++ )		
812A2A 852B2C            MOV     j,i
812A2D         ?C0025?PROCOTOL:
812A2D E52B              MOV     A,i
812A2F 252D              ADD     A,len
812A31 FF                MOV     R7,A
812A32 E4                CLR     A
812A33 33                RLC     A
812A34 FE                MOV     R6,A
812A35 C3                CLR     C
812A36 E52C              MOV     A,j
812A38 9F                SUBB    A,R7
812A39 EE                MOV     A,R6
812A3A 6480              XRL     A,#080H
812A3C F8                MOV     R0,A
812A3D 7480              MOV     A,#080H
812A3F 98                SUBB    A,R0
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 784


812A40 5012              JNC     ?C0026?PROCOTOL
  139: 		{
  140: 			sum ^= DownMsgBuf[ j ];		
812A42 7462              MOV     A,#LOW DownMsgBuf
812A44 252C              ADD     A,j
812A46 F582              MOV     DPL,A
812A48 E4                CLR     A
812A49 342D              ADDC    A,#HIGH DownMsgBuf
812A4B F583              MOV     DPH,A
812A4D E0                MOVX    A,@DPTR
812A4E 622E              XRL     sum,A
  141: 		}
812A50 052C              INC     j
812A52 80D9              SJMP    ?C0025?PROCOTOL
812A54         ?C0026?PROCOTOL:
  142: 		if ( sum != 0 )		
812A54 E52E              MOV     A,sum
812A56 6003              JZ      $ + 5H
812A58 022BB6            LJMP    ?C0022?PROCOTOL
  143: 			continue;
812A5B         ?C0028?PROCOTOL:
  144: 	
  145: 		//完整的数据包
  146: 		if( ( DownMsgBuf[ i + 4 ] == ID_HOPPER1 ) || ( DownMsgBuf[ i + 4 ] == ID_HOPPER2 ) || ( DownMsgBuf[ i + 4 ] == 
>> ID_HOPPER3 ) )
812A5B 7466              MOV     A,#LOW DownMsgBuf+04H
812A5D 252B              ADD     A,i
812A5F F582              MOV     DPL,A
812A61 E4                CLR     A
812A62 342D              ADDC    A,#HIGH DownMsgBuf+04H
812A64 F583              MOV     DPH,A
812A66 E0                MOVX    A,@DPTR
812A67 FF                MOV     R7,A
812A68 6009              JZ      ?C0030?PROCOTOL
812A6A 6401              XRL     A,#01H
812A6C 6005              JZ      ?C0030?PROCOTOL
812A6E EF                MOV     A,R7
812A6F 6402              XRL     A,#02H
812A71 706C              JNZ     ?C0029?PROCOTOL
812A73         ?C0030?PROCOTOL:
  147: 		{
  148: 			if( Result->Sn != DownMsgBuf[ i+2 ] )
812A73 90187A            MOV     DPTR,#Result
812A76 E0                MOVX    A,@DPTR
812A77 FE                MOV     R6,A
812A78 A3                INC     DPTR
812A79 E0                MOVX    A,@DPTR
812A7A FF                MOV     R7,A
812A7B F582              MOV     DPL,A
812A7D 8E83              MOV     DPH,R6
812A7F A3                INC     DPTR
812A80 A3                INC     DPTR
812A81 A3                INC     DPTR
812A82 E0                MOVX    A,@DPTR
812A83 FD                MOV     R5,A
812A84 7464              MOV     A,#LOW DownMsgBuf+02H
812A86 252B              ADD     A,i
812A88 F582              MOV     DPL,A
812A8A E4                CLR     A
812A8B 342D              ADDC    A,#HIGH DownMsgBuf+02H
812A8D F583              MOV     DPH,A
812A8F E0                MOVX    A,@DPTR
812A90 FC                MOV     R4,A
812A91 ED                MOV     A,R5
812A92 6C                XRL     A,R4
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 785


812A93 604A              JZ      ?C0029?PROCOTOL
  149: 			{
  150: 			#ifdef _DEBUG_TRACE						
  151: 				Trace( "\n Bus Return Unpack SN is error = ");
  152: 				for( j = i; j < i + len; j++ )
  153: 					Trace( " %02bx", DownMsgBuf[j] );					
  154: 			#endif	
  155: 				memset( Result, 0, sizeof( Result ) );
812A95 7C00              MOV     R4,#00H
812A97 7D02              MOV     R5,#02H
812A99 C004              PUSH    AR4
812A9B C005              PUSH    AR5
812A9D 7D00              MOV     R5,#00H
812A9F AA06              MOV     R2,AR6
812AA1 A907              MOV     R1,AR7
812AA3 7B00              MOV     R3,#?C?XDATASEG
812AA5 D007              POP     AR7
812AA7 D006              POP     AR6
812AA9 A5128008A6        ECALL   ?C?MEMSET
  156: 				sum = 0;
812AAE E4                CLR     A
812AAF F52E              MOV     sum,A
  157: 				for( sum = i; sum < i + len; sum ++ )
812AB1 852B2E            MOV     sum,i
812AB4         ?C0032?PROCOTOL:
812AB4 E52B              MOV     A,i
812AB6 252D              ADD     A,len
812AB8 FF                MOV     R7,A
812AB9 E4                CLR     A
812ABA 33                RLC     A
812ABB FE                MOV     R6,A
812ABC C3                CLR     C
812ABD E52E              MOV     A,sum
812ABF 9F                SUBB    A,R7
812AC0 EE                MOV     A,R6
812AC1 6480              XRL     A,#080H
812AC3 F8                MOV     R0,A
812AC4 7480              MOV     A,#080H
812AC6 98                SUBB    A,R0
812AC7 5011              JNC     ?C0033?PROCOTOL
  158: 					DownMsgBuf[sum] = 0x00;
812AC9 7462              MOV     A,#LOW DownMsgBuf
812ACB 252E              ADD     A,sum
812ACD F582              MOV     DPL,A
812ACF E4                CLR     A
812AD0 342D              ADDC    A,#HIGH DownMsgBuf
812AD2 F583              MOV     DPH,A
812AD4 E4                CLR     A
812AD5 F0                MOVX    @DPTR,A
812AD6 052E              INC     sum
812AD8 80DA              SJMP    ?C0032?PROCOTOL
812ADA         ?C0033?PROCOTOL:
  159: 				return 0;
812ADA 7F00              MOV     R7,#00H
812ADC 022BC3            LJMP    ?C0035?PROCOTOL
  160: 			}
  161: 		}
812ADF         ?C0029?PROCOTOL:
  162: 		memset( Result, 0, sizeof( Result ) );
812ADF 7E00              MOV     R6,#00H
812AE1 7F02              MOV     R7,#02H
812AE3 7D00              MOV     R5,#00H
812AE5 90187A            MOV     DPTR,#Result
812AE8 E0                MOVX    A,@DPTR
812AE9 FA                MOV     R2,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 786


812AEA A3                INC     DPTR
812AEB E0                MOVX    A,@DPTR
812AEC F9                MOV     R1,A
812AED 7B00              MOV     R3,#?C?XDATASEG
812AEF A5128008A6        ECALL   ?C?MEMSET
  163: 		Result->ParamLen = len - 6;
812AF4 E52D              MOV     A,len
812AF6 24FA              ADD     A,#0FAH
812AF8 FF                MOV     R7,A
812AF9 90187A            MOV     DPTR,#Result
812AFC E0                MOVX    A,@DPTR
812AFD FC                MOV     R4,A
812AFE A3                INC     DPTR
812AFF E0                MOVX    A,@DPTR
812B00 FD                MOV     R5,A
812B01 2405              ADD     A,#05H
812B03 F582              MOV     DPL,A
812B05 E4                CLR     A
812B06 3C                ADDC    A,R4
812B07 F583              MOV     DPH,A
812B09 EF                MOV     A,R7
812B0A F0                MOVX    @DPTR,A
  164: 		Result->Sn       = DownMsgBuf[ i + 2 ];
812B0B 7464              MOV     A,#LOW DownMsgBuf+02H
812B0D 252B              ADD     A,i
812B0F F582              MOV     DPL,A
812B11 E4                CLR     A
812B12 342D              ADDC    A,#HIGH DownMsgBuf+02H
812B14 F583              MOV     DPH,A
812B16 E0                MOVX    A,@DPTR
812B17 8D82              MOV     DPL,R5
812B19 8C83              MOV     DPH,R4
812B1B A3                INC     DPTR
812B1C A3                INC     DPTR
812B1D A3                INC     DPTR
812B1E F0                MOVX    @DPTR,A
  165: 		Result->State    = DownMsgBuf[ i + 3 ];		
812B1F 7465              MOV     A,#LOW DownMsgBuf+03H
812B21 252B              ADD     A,i
812B23 F582              MOV     DPL,A
812B25 E4                CLR     A
812B26 342D              ADDC    A,#HIGH DownMsgBuf+03H
812B28 F583              MOV     DPH,A
812B2A E0                MOVX    A,@DPTR
812B2B FF                MOV     R7,A
812B2C ED                MOV     A,R5
812B2D 2404              ADD     A,#04H
812B2F F582              MOV     DPL,A
812B31 E4                CLR     A
812B32 3C                ADDC    A,R4
812B33 F583              MOV     DPH,A
812B35 EF                MOV     A,R7
812B36 F0                MOVX    @DPTR,A
  166: 		Result->Id       = DownMsgBuf[ i + 4 ];
812B37 7466              MOV     A,#LOW DownMsgBuf+04H
812B39 252B              ADD     A,i
812B3B F582              MOV     DPL,A
812B3D E4                CLR     A
812B3E 342D              ADDC    A,#HIGH DownMsgBuf+04H
812B40 F583              MOV     DPH,A
812B42 E0                MOVX    A,@DPTR
812B43 8D82              MOV     DPL,R5
812B45 8C83              MOV     DPH,R4
812B47 A3                INC     DPTR
812B48 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 787


  167: 
  168: 		for( j = 0 ; j < len - 6 ; j ++ )		
812B49 E4                CLR     A
812B4A F52C              MOV     j,A
812B4C         ?C0036?PROCOTOL:
812B4C E52D              MOV     A,len
812B4E 24FA              ADD     A,#0FAH
812B50 FF                MOV     R7,A
812B51 E52C              MOV     A,j
812B53 C3                CLR     C
812B54 9F                SUBB    A,R7
812B55 502F              JNC     ?C0037?PROCOTOL
  169: 			Result->Param[ j ] = DownMsgBuf[ i + j + 5 ];		
812B57 E52B              MOV     A,i
812B59 252C              ADD     A,j
812B5B 2467              ADD     A,#LOW DownMsgBuf+05H
812B5D F582              MOV     DPL,A
812B5F E4                CLR     A
812B60 342D              ADDC    A,#HIGH DownMsgBuf+05H
812B62 F583              MOV     DPH,A
812B64 E0                MOVX    A,@DPTR
812B65 FF                MOV     R7,A
812B66 90187A            MOV     DPTR,#Result
812B69 E0                MOVX    A,@DPTR
812B6A FC                MOV     R4,A
812B6B A3                INC     DPTR
812B6C E0                MOVX    A,@DPTR
812B6D 2406              ADD     A,#06H
812B6F F582              MOV     DPL,A
812B71 E4                CLR     A
812B72 3C                ADDC    A,R4
812B73 F583              MOV     DPH,A
812B75 E582              MOV     A,DPL
812B77 252C              ADD     A,j
812B79 F582              MOV     DPL,A
812B7B E4                CLR     A
812B7C 3583              ADDC    A,DPH
812B7E F583              MOV     DPH,A
812B80 EF                MOV     A,R7
812B81 F0                MOVX    @DPTR,A
812B82 052C              INC     j
812B84 80C6              SJMP    ?C0036?PROCOTOL
812B86         ?C0037?PROCOTOL:
  170: 		sum = 0;
812B86 E4                CLR     A
812B87 F52E              MOV     sum,A
  171: 		for( sum = i; sum < i + len; sum ++ )
812B89 852B2E            MOV     sum,i
812B8C         ?C0039?PROCOTOL:
812B8C E52B              MOV     A,i
812B8E 252D              ADD     A,len
812B90 FF                MOV     R7,A
812B91 E4                CLR     A
812B92 33                RLC     A
812B93 FE                MOV     R6,A
812B94 C3                CLR     C
812B95 E52E              MOV     A,sum
812B97 9F                SUBB    A,R7
812B98 EE                MOV     A,R6
812B99 6480              XRL     A,#080H
812B9B F8                MOV     R0,A
812B9C 7480              MOV     A,#080H
812B9E 98                SUBB    A,R0
812B9F 5011              JNC     ?C0040?PROCOTOL
  172: 			DownMsgBuf[sum] = 0x00;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 788


812BA1 7462              MOV     A,#LOW DownMsgBuf
812BA3 252E              ADD     A,sum
812BA5 F582              MOV     DPL,A
812BA7 E4                CLR     A
812BA8 342D              ADDC    A,#HIGH DownMsgBuf
812BAA F583              MOV     DPH,A
812BAC E4                CLR     A
812BAD F0                MOVX    @DPTR,A
812BAE 052E              INC     sum
812BB0 80DA              SJMP    ?C0039?PROCOTOL
812BB2         ?C0040?PROCOTOL:
  173: /*
  174: #ifdef _DEBUG_TRACE		
  175: 		Trace( "\n Bus Return Unpack = ");
  176: 		for( j = 0; j < 32; j++ )
  177: 			Trace( " %02bx", DownMsgBuf[32+j] );		
  178: #endif*/
  179: 		return 1;
812BB2 7F01              MOV     R7,#01H
812BB4 800D              SJMP    ?C0035?PROCOTOL
  180: 	}	
812BB6         ?C0022?PROCOTOL:
812BB6 052B              INC     i
812BB8 E52B              MOV     A,i
812BBA 643B              XRL     A,#03BH
812BBC 6003              JZ      $ + 5H
812BBE 0229F2            LJMP    ?C0020?PROCOTOL
812BC1         ?C0021?PROCOTOL:
  181: 	return 0;
812BC1 7F00              MOV     R7,#00H
  182: }
812BC3         ?C0035?PROCOTOL:
812BC3 A522              ERET    
----- FUNCTION _ZhkBusFrameUnPack (END) -------


----- FUNCTION ZhkLcdMsgProcess (BEGIN) -----
 FILE: 'scheduler.c'
  762: uchar ZhkLcdMsgProcess( void )
  763: {
  764: 	struct COMMTASK xdata AckTask;
  765: 	
  766: 	
  767: 	if ( ZhkBusFrameUnPack( &AckTask ) == 0 )
812BC5 A5128129A9        ECALL   ?L?COM0041
812BCA EF                MOV     A,R7
812BCB 7003              JNZ     ?C0146?SCHEDULER
  768: 		return 0;
812BCD FF                MOV     R7,A
812BCE 8053              SJMP    ?C0147?SCHEDULER
812BD0         ?C0146?SCHEDULER:
  769: 	if ( CurrentTask.Id  != AckTask.Id  ) 
812BD0 901855            MOV     DPTR,#AckTask+01H
812BD3 E0                MOVX    A,@DPTR
812BD4 FF                MOV     R7,A
812BD5 9028AF            MOV     DPTR,#CurrentTask+01H
812BD8 E0                MOVX    A,@DPTR
812BD9 6F                XRL     A,R7
812BDA 6004              JZ      ?C0148?SCHEDULER
  770: 		return 0;
812BDC 7F00              MOV     R7,#00H
812BDE 8043              SJMP    ?C0147?SCHEDULER
812BE0         ?C0148?SCHEDULER:
  771: 	if ( CurrentTask.Sn  != AckTask.Sn  ) 
812BE0 901857            MOV     DPTR,#AckTask+03H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 789


812BE3 E0                MOVX    A,@DPTR
812BE4 FF                MOV     R7,A
812BE5 9028B1            MOV     DPTR,#CurrentTask+03H
812BE8 E0                MOVX    A,@DPTR
812BE9 6F                XRL     A,R7
812BEA 6004              JZ      ?C0149?SCHEDULER
  772: 		return 0;
812BEC 7F00              MOV     R7,#00H
812BEE 8033              SJMP    ?C0147?SCHEDULER
812BF0         ?C0149?SCHEDULER:
  773: 	Lcd.State = AckTask.State;
812BF0 901858            MOV     DPTR,#AckTask+04H
812BF3 E0                MOVX    A,@DPTR
812BF4 90236C            MOV     DPTR,#Lcd+03H
812BF7 F0                MOVX    @DPTR,A
  774: 	switch( CurrentTask.Cmd  )
812BF8 9028B0            MOV     DPTR,#CurrentTask+02H
812BFB E0                MOVX    A,@DPTR
812BFC A5128007CD        ECALL   ?C?CCASEX
812C01 2C21              DW      ?C0150?SCHEDULER
812C03 50                DB      050H
812C04 2C21              DW      ?C0150?SCHEDULER
812C06 52                DB      052H
812C07 2C21              DW      ?C0150?SCHEDULER
812C09 54                DB      054H
812C0A 2C21              DW      ?C0150?SCHEDULER
812C0C 57                DB      057H
812C0D 2C21              DW      ?C0150?SCHEDULER
812C0F 58                DB      058H
812C10 2C21              DW      ?C0150?SCHEDULER
812C12 5C                DB      05CH
812C13 2C21              DW      ?C0150?SCHEDULER
812C15 5D                DB      05DH
812C16 2C21              DW      ?C0150?SCHEDULER
812C18 5E                DB      05EH
812C19 0000              DW      00H
812C1B 2C1D              DW      ?C0159?SCHEDULER
  775: 	{
  776: 		case DISPKEY_DISP:		
  777: 		case DISPKEY_DISPS:
  778: 		case DISPKEY_SETCURSOR:
  779: 		case DISPKEY_CURSORSTYLE:
  780: 		case DISPKEY_DENOTE:
  781: 		case DISPKEY_SCROLL:
  782: 		case DISPKEY_CLEAR:
  783: 		case DISPKEY_LANGUAGE:
  784: 			break;		
  785: 		default:
812C1D         ?C0159?SCHEDULER:
  786: 			return 0;
812C1D 7F00              MOV     R7,#00H
812C1F 8002              SJMP    ?C0147?SCHEDULER
  787: 	}
812C21         ?C0150?SCHEDULER:
  788: 	return 1;
812C21 7F01              MOV     R7,#01H
  789: }
812C23         ?C0147?SCHEDULER:
812C23 A522              ERET    
----- FUNCTION ZhkLcdMsgProcess (END) -------


----- FUNCTION _TestDeviceException (BEGIN) -----
 FILE: 'scheduler.c'
  808: uchar TestDeviceException( struct DEVICE xdata* Device )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 790


  809: {
;---- Variable 'Device' assigned to Register 'R6/R7' ----
  810: 	if( ( Device == &Hopper1 ) || ( Device == &Hopper2 ) || ( Device == &Hopper3 ) )
  811: 	{		
812C25 747E              MOV     A,#LOW Hopper1
812C27 6F                XRL     A,R7
812C28 7003              JNZ     ?C0322?SCHEDULER
812C2A 7423              MOV     A,#HIGH Hopper1
812C2C 6E                XRL     A,R6
812C2D         ?C0322?SCHEDULER:
812C2D 6014              JZ      ?C0163?SCHEDULER
812C2F 7493              MOV     A,#LOW Hopper2
812C31 6F                XRL     A,R7
812C32 7003              JNZ     ?C0323?SCHEDULER
812C34 7423              MOV     A,#HIGH Hopper2
812C36 6E                XRL     A,R6
812C37         ?C0323?SCHEDULER:
812C37 600A              JZ      ?C0163?SCHEDULER
812C39 74A8              MOV     A,#LOW Hopper3
812C3B 6F                XRL     A,R7
812C3C 7003              JNZ     ?C0324?SCHEDULER
812C3E 7423              MOV     A,#HIGH Hopper3
812C40 6E                XRL     A,R6
812C41         ?C0324?SCHEDULER:
812C41 7018              JNZ     ?C0162?SCHEDULER
812C43         ?C0163?SCHEDULER:
  812: 		if( ( Device->State & 0x16 ) || ( Device->State == 0 ) )
  813: 			return 0;//正常
812C43 8F82              MOV     DPL,R7
812C45 8E83              MOV     DPH,R6
812C47 A3                INC     DPTR
812C48 A3                INC     DPTR
812C49 A3                INC     DPTR
812C4A E0                MOVX    A,@DPTR
812C4B FD                MOV     R5,A
812C4C 5416              ANL     A,#016H
812C4E 7003              JNZ     ?C0165?SCHEDULER
812C50 ED                MOV     A,R5
812C51 7004              JNZ     ?C0164?SCHEDULER
812C53         ?C0165?SCHEDULER:
  814: 		else
812C53 7F00              MOV     R7,#00H
812C55 800F              SJMP    ?C0166?SCHEDULER
812C57         ?C0164?SCHEDULER:
  815: 			return 1;//故障
812C57 7F01              MOV     R7,#01H
812C59 800B              SJMP    ?C0166?SCHEDULER
  816: 	}
812C5B         ?C0162?SCHEDULER:
  817: 	else
  818: 		return( Device->State & 0x40 );
812C5B 8F82              MOV     DPL,R7
812C5D 8E83              MOV     DPH,R6
812C5F A3                INC     DPTR
812C60 A3                INC     DPTR
812C61 A3                INC     DPTR
812C62 E0                MOVX    A,@DPTR
812C63 5440              ANL     A,#040H
812C65 FF                MOV     R7,A
  819: }
812C66         ?C0166?SCHEDULER:
812C66 A522              ERET    
----- FUNCTION _TestDeviceException (END) -------


LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 791


----- FUNCTION _HopperOutput (BEGIN) -----
 FILE: 'scheduler.c'
  853: bit HopperOutput( uchar HopperNum , uint CoinAmount )
  854: {
812C68 90174C            MOV     DPTR,#CoinAmount
812C6B EC                MOV     A,R4
812C6C F0                MOVX    @DPTR,A
812C6D A3                INC     DPTR
812C6E ED                MOV     A,R5
812C6F F0                MOVX    @DPTR,A
812C70 90174B            MOV     DPTR,#HopperNum
812C73 EF                MOV     A,R7
812C74 F0                MOVX    @DPTR,A
  855: 	struct COMMTASK xdata TaskTemp;
  856: //	Trace("\nHopperOutput");
  857: 	switch( HopperNum )
812C75 24FE              ADD     A,#0FEH
812C77 6042              JZ      ?C0182?SCHEDULER
812C79 14                DEC     A
812C7A 6078              JZ      ?C0187?SCHEDULER
812C7C 2402              ADD     A,#02H
812C7E 6003              JZ      $ + 5H
812C80 022D54            LJMP    ?C0178?SCHEDULER
  858: 	{
  859: 	case 1:
812C83         ?C0176?SCHEDULER:
  860: 		if ( Hopper1.CommState & COMM_BUZY ) 
812C83 902380            MOV     DPTR,#Hopper1+02H
812C86 E0                MOVX    A,@DPTR
812C87 30E004            JNB     ACC.0,?C0177?SCHEDULER
  861: 			return 0;
812C8A C3                CLR     C
812C8B 022D54            LJMP    ?C0178?SCHEDULER
812C8E         ?C0177?SCHEDULER:
  862: 	//	Hopper1.CommState = COMM_BUZY;
  863: 		if ( HopperNum > 8 ) 
812C8E 90174B            MOV     DPTR,#HopperNum
812C91 E0                MOVX    A,@DPTR
812C92 D3                SETB    C
812C93 9408              SUBB    A,#08H
812C95 4003              JC      ?C0179?SCHEDULER
  864: 			return 0;
812C97 022D54            LJMP    ?C0178?SCHEDULER
812C9A         ?C0179?SCHEDULER:
  865: 
  866: 		if( Hopper1.Sn < 255 )
812C9A 90237F            MOV     DPTR,#Hopper1+01H
812C9D E0                MOVX    A,@DPTR
812C9E C3                CLR     C
812C9F 94FF              SUBB    A,#0FFH
812CA1 5005              JNC     ?C0180?SCHEDULER
  867: 			Hopper1.Sn++;
812CA3 E0                MOVX    A,@DPTR
812CA4 04                INC     A
812CA5 F0                MOVX    @DPTR,A
812CA6 8005              SJMP    ?C0181?SCHEDULER
812CA8         ?C0180?SCHEDULER:
  868: 		else
  869: 			Hopper1.Sn = 0;
812CA8 E4                CLR     A
812CA9 90237F            MOV     DPTR,#Hopper1+01H
812CAC F0                MOVX    @DPTR,A
812CAD         ?C0181?SCHEDULER:
  870: 
  871: 		TaskTemp.Id 		= ID_HOPPER1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 792


812CAD E4                CLR     A
812CAE 90174F            MOV     DPTR,#TaskTemp+01H
812CB1 F0                MOVX    @DPTR,A
  872: 		TaskTemp.Cmd 		= HOPPER_OUTPUT ;
812CB2 A3                INC     DPTR
812CB3 7450              MOV     A,#050H
812CB5 F0                MOVX    @DPTR,A
  873: 		TaskTemp.Sn		= Hopper1.Sn;
812CB6 90237F            MOV     DPTR,#Hopper1+01H
  874: 		TaskTemp.Priority       = PRIORITY1;
  875: 		TaskTemp.ParamLen	= 2;
  876: 		TaskTemp.Param[ 0 ] 	= CoinAmount % 256;
  877: 		TaskTemp.Param[ 1 ] 	= CoinAmount / 256;
  878: 
  879: 		return ZhkSchedulerAddTask( &TaskTemp );
812CB9 806E              SJMP    ?C0343?SCHEDULER
  880: 		break;
  881: 	case 2:			
812CBB         ?C0182?SCHEDULER:
  882: 		if ( Hopper2.CommState & COMM_BUZY ) 
812CBB 902395            MOV     DPTR,#Hopper2+02H
812CBE E0                MOVX    A,@DPTR
812CBF 30E004            JNB     ACC.0,?C0183?SCHEDULER
  883: 			return 0;
812CC2 C3                CLR     C
812CC3 022D54            LJMP    ?C0178?SCHEDULER
812CC6         ?C0183?SCHEDULER:
  884: 	//	Hopper2.CommState = COMM_BUZY;
  885: 		if ( HopperNum > 8 ) 
812CC6 90174B            MOV     DPTR,#HopperNum
812CC9 E0                MOVX    A,@DPTR
812CCA D3                SETB    C
812CCB 9408              SUBB    A,#08H
812CCD 4003              JC      ?C0184?SCHEDULER
  886: 			return 0;
812CCF         
812CCF 022D54            LJMP    ?C0178?SCHEDULER
812CD2         ?C0184?SCHEDULER:
  887: 
  888: 		 if( Hopper2.Sn < 255 )
812CD2 902394            MOV     DPTR,#Hopper2+01H
812CD5 E0                MOVX    A,@DPTR
812CD6 C3                CLR     C
812CD7 94FF              SUBB    A,#0FFH
812CD9 5005              JNC     ?C0185?SCHEDULER
  889: 			Hopper2.Sn++;
812CDB E0                MOVX    A,@DPTR
812CDC 04                INC     A
812CDD F0                MOVX    @DPTR,A
812CDE 8005              SJMP    ?C0186?SCHEDULER
812CE0         ?C0185?SCHEDULER:
  890: 		else
  891: 			Hopper2.Sn = 0;
812CE0 E4                CLR     A
812CE1 902394            MOV     DPTR,#Hopper2+01H
812CE4 F0                MOVX    @DPTR,A
812CE5         ?C0186?SCHEDULER:
  892: 
  893: 		TaskTemp.Id 		= ID_HOPPER2;
812CE5 90174F            MOV     DPTR,#TaskTemp+01H
812CE8 7401              MOV     A,#01H
812CEA F0                MOVX    @DPTR,A
  894: 		TaskTemp.Cmd 		= HOPPER_OUTPUT ;
812CEB A3                INC     DPTR
812CEC 7450              MOV     A,#050H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 793


812CEE F0                MOVX    @DPTR,A
  895: 		TaskTemp.Sn		= Hopper2.Sn;
812CEF 902394            MOV     DPTR,#Hopper2+01H
812CF2         
  896: 		TaskTemp.Priority       = PRIORITY1;
  897: 		TaskTemp.ParamLen	= 2;
  898: 		TaskTemp.Param[ 0 ] 	= CoinAmount % 256;
  899: 		TaskTemp.Param[ 1 ] 	= CoinAmount / 256;
  900: 	//	Trace("\n HopperOutput2");
  901: 		return ZhkSchedulerAddTask( &TaskTemp );	
812CF2 8035              SJMP    ?C0343?SCHEDULER
  902: 		break;
  903: 	case 3:
812CF4         ?C0187?SCHEDULER:
  904: 		if ( Hopper3.CommState & COMM_BUZY ) 
812CF4 9023AA            MOV     DPTR,#Hopper3+02H
812CF7 E0                MOVX    A,@DPTR
812CF8 30E003            JNB     ACC.0,?C0188?SCHEDULER
  905: 			return 0;
812CFB C3                CLR     C
812CFC 8056              SJMP    ?C0178?SCHEDULER
812CFE         ?C0188?SCHEDULER:
  906: //		Hopper3.CommState = COMM_BUZY;
  907: 		if ( HopperNum > 8 ) 
812CFE 90174B            MOV     DPTR,#HopperNum
812D01 E0                MOVX    A,@DPTR
812D02 D3                SETB    C
812D03 9408              SUBB    A,#08H
812D05 4002              JC      ?C0189?SCHEDULER
  908: 			return 0;
812D07         
812D07 804B              SJMP    ?C0178?SCHEDULER
812D09         ?C0189?SCHEDULER:
  909: 
  910: 		if( Hopper3.Sn < 255 )
812D09 9023A9            MOV     DPTR,#Hopper3+01H
812D0C E0                MOVX    A,@DPTR
812D0D C3                CLR     C
812D0E 94FF              SUBB    A,#0FFH
812D10 5005              JNC     ?C0190?SCHEDULER
  911: 			Hopper3.Sn++;
812D12 E0                MOVX    A,@DPTR
812D13 04                INC     A
812D14 F0                MOVX    @DPTR,A
812D15 8005              SJMP    ?C0191?SCHEDULER
812D17         ?C0190?SCHEDULER:
  912: 		else
  913: 			Hopper3.Sn = 0;
812D17 E4                CLR     A
812D18 9023A9            MOV     DPTR,#Hopper3+01H
812D1B F0                MOVX    @DPTR,A
812D1C         ?C0191?SCHEDULER:
  914: 
  915: 		TaskTemp.Id 		= ID_HOPPER3;
812D1C 90174F            MOV     DPTR,#TaskTemp+01H
812D1F 7402              MOV     A,#02H
812D21 F0                MOVX    @DPTR,A
  916: 		TaskTemp.Cmd 		= HOPPER_OUTPUT ;
812D22 A3                INC     DPTR
812D23 7450              MOV     A,#050H
812D25 F0                MOVX    @DPTR,A
  917: 		TaskTemp.Sn		= Hopper3.Sn;
812D26 9023A9            MOV     DPTR,#Hopper3+01H
812D29         
812D29 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 794


812D2A 901751            MOV     DPTR,#TaskTemp+03H
812D2D F0                MOVX    @DPTR,A
  918: 		TaskTemp.Priority       = PRIORITY1;
812D2E 90174E            MOV     DPTR,#TaskTemp
812D31 7441              MOV     A,#041H
812D33 F0                MOVX    @DPTR,A
  919: 		TaskTemp.ParamLen	= 2;
812D34 901753            MOV     DPTR,#TaskTemp+05H
812D37 7402              MOV     A,#02H
812D39 F0                MOVX    @DPTR,A
  920: 		TaskTemp.Param[ 0 ] 	= CoinAmount % 256;
812D3A 90174C            MOV     DPTR,#CoinAmount
812D3D E0                MOVX    A,@DPTR
812D3E FE                MOV     R6,A
812D3F A3                INC     DPTR
812D40 E0                MOVX    A,@DPTR
812D41 901754            MOV     DPTR,#TaskTemp+06H
812D44 F0                MOVX    @DPTR,A
  921: 		TaskTemp.Param[ 1 ] 	= CoinAmount / 256;
812D45 EE                MOV     A,R6
812D46 A3                INC     DPTR
812D47 F0                MOVX    @DPTR,A
  922: 		return ZhkSchedulerAddTask( &TaskTemp );	
812D48 7E17              MOV     R6,#HIGH TaskTemp
812D4A 7F4E              MOV     R7,#LOW TaskTemp
812D4C A51280976B        ECALL   _ZhkSchedulerAddTask
812D51 EF                MOV     A,R7
812D52 24FF              ADD     A,#0FFH
  923: 	 	break;
  924: 	}
  925: }
812D54         ?C0178?SCHEDULER:
812D54 A522              ERET    
----- FUNCTION _HopperOutput (END) -------


----- FUNCTION _HopperGetCoinOut (BEGIN) -----
 FILE: 'scheduler.c'
  927: uint HopperGetCoinOut( uchar HopperNum )
  928: {
;---- Variable 'HopperNum' assigned to Register 'R7' ----
  929: 	uint data ch;
  930: 	
  931: 	switch( HopperNum )
812D56 EF                MOV     A,R7
812D57 24FE              ADD     A,#0FEH
812D59 6011              JZ      ?C0194?SCHEDULER
812D5B 14                DEC     A
812D5C 6018              JZ      ?C0195?SCHEDULER
812D5E 2402              ADD     A,#02H
812D60 7027              JNZ     ?C0192?SCHEDULER
  932: 	{
  933: 	case 1:
812D62         ?C0193?SCHEDULER:
  934: 		ch = Hopper1.ExtState[ 1 ] * 256 + Hopper1.ExtState[ 0 ];
812D62 902383            MOV     DPTR,#Hopper1+05H
812D65 E0                MOVX    A,@DPTR
812D66 FE                MOV     R6,A
812D67 902382            MOV     DPTR,#Hopper1+04H
  935: 		break;
812D6A 8012              SJMP    ?C0345?SCHEDULER
  936: 	case 2:
812D6C         ?C0194?SCHEDULER:
  937: 		ch = Hopper2.ExtState[ 1 ] * 256 + Hopper2.ExtState[ 0 ];
812D6C 902398            MOV     DPTR,#Hopper2+05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 795


812D6F E0                MOVX    A,@DPTR
812D70 FE                MOV     R6,A
812D71 902397            MOV     DPTR,#Hopper2+04H
812D74         
  938: 		break;
812D74 8008              SJMP    ?C0345?SCHEDULER
  939: 	case 3:
812D76         ?C0195?SCHEDULER:
  940: 		ch = Hopper3.ExtState[ 1 ] * 256 + Hopper3.ExtState[ 0 ];
812D76 9023AD            MOV     DPTR,#Hopper3+05H
812D79 E0                MOVX    A,@DPTR
812D7A FE                MOV     R6,A
812D7B 9023AC            MOV     DPTR,#Hopper3+04H
812D7E         
812D7E E0                MOVX    A,@DPTR
812D7F 7C00              MOV     R4,#00H
812D81 2400              ADD     A,#00H
812D83 F529              MOV     ch+01H,A
812D85 EC                MOV     A,R4
812D86 3E                ADDC    A,R6
812D87 F528              MOV     ch,A
  941: 		break;
  942: 	}
812D89         ?C0192?SCHEDULER:
  943: 	return ch;
812D89 AE28              MOV     R6,ch
812D8B AF29              MOV     R7,ch+01H
  944: }
812D8D         ?C0196?SCHEDULER:
812D8D A522              ERET    
----- FUNCTION _HopperGetCoinOut (END) -------


----- FUNCTION DisplayClear (BEGIN) -----
 FILE: 'scheduler.c'
 1040: bit DisplayClear( void )
 1041: {
 1042: 	struct COMMTASK xdata TaskTemp;
 1043: 	
 1044: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );	
812D8F 7E00              MOV     R6,#00H
812D91 7F26              MOV     R7,#026H
812D93 7D00              MOV     R5,#00H
812D95 7B00              MOV     R3,#?C?XDATASEG
812D97 7A17              MOV     R2,#HIGH TaskTemp
812D99 792F              MOV     R1,#LOW TaskTemp
812D9B A5128008A6        ECALL   ?C?MEMSET
 1045: 	TaskTemp.Id 		= ID_LCD;
812DA0 901730            MOV     DPTR,#TaskTemp+01H
812DA3 7409              MOV     A,#09H
812DA5 F0                MOVX    @DPTR,A
 1046: 	TaskTemp.Cmd 		= DISPKEY_CLEAR;
812DA6 A3                INC     DPTR
812DA7 745D              MOV     A,#05DH
812DA9 F0                MOVX    @DPTR,A
 1047: 	TaskTemp.Sn		= Lcd.Sn;
812DAA 90236A            MOV     DPTR,#Lcd+01H
812DAD E0                MOVX    A,@DPTR
812DAE 901732            MOV     DPTR,#TaskTemp+03H
812DB1 F0                MOVX    @DPTR,A
 1048: 	TaskTemp.Priority       = PRIORITY_NORMAL;
812DB2 90172F            MOV     DPTR,#TaskTemp
812DB5 7442              MOV     A,#042H
812DB7 F0                MOVX    @DPTR,A
 1049: 	TaskTemp.ParamLen	= 0;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 796


812DB8 E4                CLR     A
812DB9 901734            MOV     DPTR,#TaskTemp+05H
812DBC F0                MOVX    @DPTR,A
 1050: 
 1051: 	return ZhkSchedulerAddTask( &TaskTemp );
812DBD 7E17              MOV     R6,#HIGH TaskTemp
812DBF 7F2F              MOV     R7,#LOW TaskTemp
812DC1 A51280976B        ECALL   _ZhkSchedulerAddTask
812DC6 EF                MOV     A,R7
812DC7 24FF              ADD     A,#0FFH
 1052: 	
 1053: 	
 1054: }
812DC9         ?C0202?SCHEDULER:
812DC9 A522              ERET    
----- FUNCTION DisplayClear (END) -------


----- FUNCTION _DisplayString (BEGIN) -----
 FILE: 'scheduler.c'
 1056: bit DisplayString( uchar * Str , const uchar len )
 1057: {
812DCB 901846            MOV     DPTR,#Str
812DCE A5128007B6        ECALL   ?C?PSTXDATA
812DD3 901849            MOV     DPTR,#len
812DD6 ED                MOV     A,R5
812DD7 F0                MOVX    @DPTR,A
 1058: 	struct COMMTASK xdata TaskTemp;
 1059: 
 1060: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );	
812DD8 7E00              MOV     R6,#00H
812DDA 7F26              MOV     R7,#026H
812DDC 7D00              MOV     R5,#00H
812DDE 7B00              MOV     R3,#?C?XDATASEG
812DE0 7A18              MOV     R2,#HIGH TaskTemp
812DE2 794A              MOV     R1,#LOW TaskTemp
812DE4 A5128008A6        ECALL   ?C?MEMSET
 1061: 	TaskTemp.Id 		= ID_LCD;
812DE9 90184B            MOV     DPTR,#TaskTemp+01H
812DEC 7409              MOV     A,#09H
812DEE F0                MOVX    @DPTR,A
 1062: 	TaskTemp.Cmd 		= DISPKEY_DISP;
812DEF A3                INC     DPTR
812DF0 7450              MOV     A,#050H
812DF2 F0                MOVX    @DPTR,A
 1063: 	TaskTemp.Sn		= Lcd.Sn;
812DF3 90236A            MOV     DPTR,#Lcd+01H
812DF6 E0                MOVX    A,@DPTR
812DF7 90184D            MOV     DPTR,#TaskTemp+03H
812DFA F0                MOVX    @DPTR,A
 1064: 	TaskTemp.Priority       = PRIORITY_NORMAL;
812DFB 90184A            MOV     DPTR,#TaskTemp
812DFE 7442              MOV     A,#042H
812E00 F0                MOVX    @DPTR,A
 1065: 	TaskTemp.ParamLen	= len;
812E01 901849            MOV     DPTR,#len
812E04 E0                MOVX    A,@DPTR
812E05 FF                MOV     R7,A
812E06 90184F            MOV     DPTR,#TaskTemp+05H
812E09 F0                MOVX    @DPTR,A
 1066: 	memcpy( TaskTemp.Param , Str , len );
812E0A 7E00              MOV     R6,#00H
812E0C 7850              MOV     R0,#LOW TaskTemp+06H
812E0E 7C18              MOV     R4,#HIGH TaskTemp+06H
812E10 7D00              MOV     R5,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 797


812E12 901846            MOV     DPTR,#Str
812E15 A5128007AC        ECALL   ?C?PLDXDATA
812E1A A51280052D        ECALL   ?C?COPY
 1067: 
 1068: 	return ZhkSchedulerAddTask( &TaskTemp );
812E1F 7E18              MOV     R6,#HIGH TaskTemp
812E21 7F4A              MOV     R7,#LOW TaskTemp
812E23 A51280976B        ECALL   _ZhkSchedulerAddTask
812E28 EF                MOV     A,R7
812E29 24FF              ADD     A,#0FFH
 1069: 	
 1070: }
812E2B         ?C0203?SCHEDULER:
812E2B A522              ERET    
----- FUNCTION _DisplayString (END) -------


----- FUNCTION _DisplaySetCursorStyle (BEGIN) -----
 FILE: 'scheduler.c'
 1089: bit DisplaySetCursorStyle( uchar style )
 1090: {
812E2D 901796            MOV     DPTR,#style
812E30 EF                MOV     A,R7
812E31 F0                MOVX    @DPTR,A
 1091: 	struct COMMTASK xdata TaskTemp;
 1092: 
 1093: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );	
812E32 7E00              MOV     R6,#00H
812E34 7F26              MOV     R7,#026H
812E36 7D00              MOV     R5,#00H
812E38 7B00              MOV     R3,#?C?XDATASEG
812E3A 7A17              MOV     R2,#HIGH TaskTemp
812E3C 7997              MOV     R1,#LOW TaskTemp
812E3E A5128008A6        ECALL   ?C?MEMSET
 1094: 	TaskTemp.Id 		= ID_LCD;
812E43 901798            MOV     DPTR,#TaskTemp+01H
812E46 7409              MOV     A,#09H
812E48 F0                MOVX    @DPTR,A
 1095: 	TaskTemp.Cmd 		= DISPKEY_CURSORSTYLE;
812E49 A3                INC     DPTR
812E4A 7457              MOV     A,#057H
812E4C F0                MOVX    @DPTR,A
 1096: 	TaskTemp.Sn		= Lcd.Sn;
812E4D 90236A            MOV     DPTR,#Lcd+01H
812E50 E0                MOVX    A,@DPTR
812E51 90179A            MOV     DPTR,#TaskTemp+03H
812E54 F0                MOVX    @DPTR,A
 1097: 	TaskTemp.Priority       = PRIORITY_NORMAL;
812E55 901797            MOV     DPTR,#TaskTemp
812E58 7442              MOV     A,#042H
812E5A F0                MOVX    @DPTR,A
 1098: 	TaskTemp.ParamLen	= 1;
812E5B 90179C            MOV     DPTR,#TaskTemp+05H
812E5E 7401              MOV     A,#01H
812E60 F0                MOVX    @DPTR,A
 1099: 	TaskTemp.Param[ 0 ] 	= style;
812E61 901796            MOV     DPTR,#style
812E64 E0                MOVX    A,@DPTR
812E65 90179D            MOV     DPTR,#TaskTemp+06H
812E68 F0                MOVX    @DPTR,A
 1100: 
 1101: 	return ZhkSchedulerAddTask( &TaskTemp );
812E69 7E17              MOV     R6,#HIGH TaskTemp
812E6B 7F97              MOV     R7,#LOW TaskTemp
812E6D A51280976B        ECALL   _ZhkSchedulerAddTask
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 798


812E72 EF                MOV     A,R7
812E73 24FF              ADD     A,#0FFH
 1102: }
812E75         ?C0205?SCHEDULER:
812E75 A522              ERET    
----- FUNCTION _DisplaySetCursorStyle (END) -------


----- FUNCTION GetDisplayState (BEGIN) -----
 FILE: 'scheduler.c'
 1153: uchar GetDisplayState()
 1154: {
 1155:  	return Lcd.ExtState[1];
 1156: }
812E77 90236E            MOV     DPTR,#Lcd+05H
812E7A E0                MOVX    A,@DPTR
812E7B FF                MOV     R7,A
 1157: 
812E7C         ?C0210?SCHEDULER:
812E7C A522              ERET    
----- FUNCTION GetDisplayState (END) -------


----- FUNCTION _ZhkCasherTask (BEGIN) -----
 FILE: 'scheduler.c'
 1161: bit ZhkCasherTask( struct COMMTASK xdata* TaskTemp )
 1162: {
812E7E 901852            MOV     DPTR,#TaskTemp
812E81 EE                MOV     A,R6
812E82 F0                MOVX    @DPTR,A
812E83 A3                INC     DPTR
812E84 EF                MOV     A,R7
812E85 F0                MOVX    @DPTR,A
 1163: 	uchar xdata StateTemp = 0;
 1164: 	//Trace( "ZhkCasherTask\n" );
812E86 E4                CLR     A
812E87 A3                INC     DPTR
812E88 F0                MOVX    @DPTR,A
 1165: 	//Trace( "ZhkSchedulerState=%d\n",(int)ZhkSchedulerState );
 1166: 	switch( ZhkSchedulerState )
812E89 9023D3            MOV     DPTR,#ZhkSchedulerState
812E8C E0                MOVX    A,@DPTR
812E8D 7003              JNZ     $ + 5H
812E8F 022FD9            LJMP    ?C0211?SCHEDULER
812E92 24FE              ADD     A,#0FEH
812E94 6064              JZ      ?C0218?SCHEDULER
812E96 14                DEC     A
812E97 7003              JNZ     $ + 5H
812E99 022F37            LJMP    ?C0223?SCHEDULER
812E9C 14                DEC     A
812E9D 7003              JNZ     $ + 5H
812E9F 022F5E            LJMP    ?C0226?SCHEDULER
812EA2 14                DEC     A
812EA3 7003              JNZ     $ + 5H
812EA5 022F8A            LJMP    ?C0227?SCHEDULER
812EA8 2404              ADD     A,#04H
812EAA 6003              JZ      $ + 5H
812EAC 022FD4            LJMP    ?C0230?SCHEDULER
 1167: 	{
 1168: 	case TASK_NULL:
 1169: 		break;
 1170: 	case TASK_REDAY:		
812EAF         ?C0213?SCHEDULER:
 1171: 		ZhkChannelSwitch( EQUIP_CASHER );
812EAF 7F02              MOV     R7,#02H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 799


812EB1 A512807E2B        ECALL   _ZhkChannelSwitch
 1172: 		if( Casher.ExtState[ 14 ] == 0 )
812EB6 9023E6            MOV     DPTR,#Casher+012H
812EB9 E0                MOVX    A,@DPTR
812EBA 901852            MOV     DPTR,#TaskTemp
812EBD 7009              JNZ     ?C0214?SCHEDULER
 1173: 			StateTemp = ZhkCasherTxMsg( TaskTemp, 1 );//改换纸币器数据包的ACK
812EBF E0                MOVX    A,@DPTR
812EC0 FE                MOV     R6,A
812EC1 A3                INC     DPTR
812EC2 E0                MOVX    A,@DPTR
812EC3 FF                MOV     R7,A
812EC4 7D01              MOV     R5,#01H
812EC6 8007              SJMP    ?C0346?SCHEDULER
812EC8         ?C0214?SCHEDULER:
 1174: 		else
 1175: 			StateTemp = ZhkCasherTxMsg( TaskTemp, 0 );//不改换纸币器数据包的ACK
812EC8 E0                MOVX    A,@DPTR
812EC9 FE                MOV     R6,A
812ECA A3                INC     DPTR
812ECB E0                MOVX    A,@DPTR
812ECC FF                MOV     R7,A
812ECD E4                CLR     A
812ECE FD                MOV     R5,A
812ECF         
812ECF A51280F6BC        ECALL   _ZhkCasherTxMsg
812ED4 E4                CLR     A
812ED5 33                RLC     A
812ED6 901854            MOV     DPTR,#StateTemp
812ED9 F0                MOVX    @DPTR,A
812EDA         ?C0215?SCHEDULER:
 1176: 		if ( StateTemp )
812EDA 901854            MOV     DPTR,#StateTemp
812EDD E0                MOVX    A,@DPTR
812EDE 9023D3            MOV     DPTR,#ZhkSchedulerState
812EE1 6005              JZ      ?C0216?SCHEDULER
 1177: 			ZhkSchedulerState = TASK_WAIT;
812EE3 7402              MOV     A,#02H
812EE5 F0                MOVX    @DPTR,A
812EE6 8003              SJMP    ?C0217?SCHEDULER
812EE8         ?C0216?SCHEDULER:
 1178: 		else
 1179: 			ZhkSchedulerState = TASK_FINISH;	
812EE8 7404              MOV     A,#04H
812EEA F0                MOVX    @DPTR,A
812EEB         ?C0217?SCHEDULER:
 1180: 		
 1181: 		ZhkDownMsgAckTimer  = 90;//DOWNMSGACKTIMEOUT;
812EEB 751100            MOV     ZhkDownMsgAckTimer,#00H
812EEE 75125A            MOV     ZhkDownMsgAckTimer+01H,#05AH
 1182: 		Casher.CommState = COMM_BUZY;
812EF1 9023D6            MOV     DPTR,#Casher+02H
812EF4 7401              MOV     A,#01H
812EF6 F0                MOVX    @DPTR,A
 1183: 		break;
812EF7 022FD9            LJMP    ?C0211?SCHEDULER
 1184: 	case TASK_WAIT:	
812EFA         ?C0218?SCHEDULER:
 1185: //		Trace( "\n ZhkCasherTask TASK_WAIT" );	
 1186: 		StateTemp = ZhkCasherMsgProcess();
812EFA A512812FDC        ECALL   ZhkCasherMsgProcess
812EFF 901854            MOV     DPTR,#StateTemp
812F02 EF                MOV     A,R7
812F03 F0                MOVX    @DPTR,A
 1187: 		if ( StateTemp == 1 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 800


812F04 BF0102            CJNE    R7,#01H,?C0219?SCHEDULER
 1188: 		{
 1189: 			ZhkSchedulerState = TASK_FINISH;
 1190: 			break;
812F07 803B              SJMP    ?C0347?SCHEDULER
 1191: 		}
812F09         ?C0219?SCHEDULER:
 1192: 		if ( ZhkDownMsgAckTimer == 0 )
812F09 E512              MOV     A,ZhkDownMsgAckTimer+01H
812F0B 4511              ORL     A,ZhkDownMsgAckTimer
812F0D 6003              JZ      $ + 5H
812F0F 022FD9            LJMP    ?C0211?SCHEDULER
 1193: 		{
 1194: 			if ( ZhkCasherTxMsg( TaskTemp, 0 ) )
812F12 901852            MOV     DPTR,#TaskTemp
812F15 E0                MOVX    A,@DPTR
812F16 FE                MOV     R6,A
812F17 A3                INC     DPTR
812F18 E0                MOVX    A,@DPTR
812F19 FF                MOV     R7,A
812F1A E4                CLR     A
812F1B FD                MOV     R5,A
812F1C A51280F6BC        ECALL   _ZhkCasherTxMsg
812F21 9023D3            MOV     DPTR,#ZhkSchedulerState
812F24 5005              JNC     ?C0221?SCHEDULER
 1195: 				ZhkSchedulerState = TASK_REWAIT;
812F26 7403              MOV     A,#03H
812F28 F0                MOVX    @DPTR,A
812F29 8003              SJMP    ?C0222?SCHEDULER
812F2B         ?C0221?SCHEDULER:
 1196: 			else
 1197: 				ZhkSchedulerState = TASK_FINISH;
812F2B 7404              MOV     A,#04H
812F2D F0                MOVX    @DPTR,A
812F2E         ?C0222?SCHEDULER:
 1198: 		//	ZhkSchedulerState  = TASK_REWAIT;
 1199: 			ZhkDownMsgAckTimer = 90; //DOWNMSGACKTIMEOUT;
812F2E 751100            MOV     ZhkDownMsgAckTimer,#00H
812F31 75125A            MOV     ZhkDownMsgAckTimer+01H,#05AH
 1200: 		}		
 1201: 		break;
812F34 022FD9            LJMP    ?C0211?SCHEDULER
 1202: 	case TASK_REWAIT:
812F37         ?C0223?SCHEDULER:
 1203: //		Trace( "\n ZhkCasherTask TASK_REWAIT" );		
 1204: 		StateTemp = ZhkCasherMsgProcess();
812F37 A512812FDC        ECALL   ZhkCasherMsgProcess
812F3C 901854            MOV     DPTR,#StateTemp
812F3F EF                MOV     A,R7
812F40 F0                MOVX    @DPTR,A
 1205: 		if ( StateTemp == 1 )
812F41 BF0109            CJNE    R7,#01H,?C0224?SCHEDULER
 1206: 		{
 1207: 			ZhkSchedulerState = TASK_FINISH;
812F44         
812F44 9023D3            MOV     DPTR,#ZhkSchedulerState
812F47 7404              MOV     A,#04H
812F49 F0                MOVX    @DPTR,A
 1208: 			break;
812F4A 022FD9            LJMP    ?C0211?SCHEDULER
 1209: 		}
812F4D         ?C0224?SCHEDULER:
 1210: 		if ( ZhkDownMsgAckTimer == 0 )
812F4D E512              MOV     A,ZhkDownMsgAckTimer+01H
812F4F 4511              ORL     A,ZhkDownMsgAckTimer
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 801


812F51 6003              JZ      $ + 5H
812F53 022FD9            LJMP    ?C0211?SCHEDULER
 1211: 		{
 1212: 			ZhkSchedulerState = TASK_ERROR;
812F56 9023D3            MOV     DPTR,#ZhkSchedulerState
812F59 7405              MOV     A,#05H
812F5B F0                MOVX    @DPTR,A
 1213: 		}
 1214: 		break;
812F5C 807B              SJMP    ?C0211?SCHEDULER
 1215: 	case TASK_FINISH:	
812F5E         ?C0226?SCHEDULER:
 1216: 		Casher.CommState  = COMM_COMMOK;
812F5E 9023D6            MOV     DPTR,#Casher+02H
812F61 7404              MOV     A,#04H
812F63 F0                MOVX    @DPTR,A
 1217: 		memset( &CurrentTask, 0, sizeof( struct COMMTASK ) );
812F64 7E00              MOV     R6,#00H
812F66 7F26              MOV     R7,#026H
812F68 7D00              MOV     R5,#00H
812F6A 7B00              MOV     R3,#?C?XDATASEG
812F6C 7A28              MOV     R2,#HIGH CurrentTask
812F6E 79AE              MOV     R1,#LOW CurrentTask
812F70 A5128008A6        ECALL   ?C?MEMSET
 1218: 		ZhkSchedulerState = TASK_NULL; 
812F75 E4                CLR     A
812F76 9023D3            MOV     DPTR,#ZhkSchedulerState
812F79 F0                MOVX    @DPTR,A
 1219: 		ZhkCasherStatus = CASHER_STATUS_NULL;
812F7A 902368            MOV     DPTR,#ZhkCasherStatus
812F7D F0                MOVX    @DPTR,A
 1220: 		Casher.ExtState[ 14 ] = 0; 
812F7E 9023E6            MOV     DPTR,#Casher+012H
812F81 F0                MOVX    @DPTR,A
 1221: 		Casher.ExtState[13] = 0;
812F82 9023E5            MOV     DPTR,#Casher+011H
812F85 F0                MOVX    @DPTR,A
 1222: 		QueryCashTimer = 0;
812F86 F515              MOV     QueryCashTimer,A
 1223: 		break;
812F88 804F              SJMP    ?C0211?SCHEDULER
 1224: 	case TASK_ERROR:	
812F8A         ?C0227?SCHEDULER:
 1225: //		Trace( "\n ZhkCasherTask TASK_ERROR" );
 1226: 		Casher.CommState = COMM_TIMEOUT;// | COMM_COMMOK;
812F8A 9023D6            MOV     DPTR,#Casher+02H
812F8D 7402              MOV     A,#02H
812F8F F0                MOVX    @DPTR,A
 1227: 		ZhkSchedulerState   = TASK_NULL; 
812F90 E4                CLR     A
812F91 9023D3            MOV     DPTR,#ZhkSchedulerState
812F94 F0                MOVX    @DPTR,A
 1228: 		ZhkCasherStatus = CASHER_STATUS_NULL;
812F95 902368            MOV     DPTR,#ZhkCasherStatus
812F98 F0                MOVX    @DPTR,A
 1229: 
 1230: 		if( Casher.ExtState[ 14 ] < 240 )
812F99 9023E6            MOV     DPTR,#Casher+012H
812F9C E0                MOVX    A,@DPTR
812F9D C3                CLR     C
812F9E 94F0              SUBB    A,#0F0H
812FA0 5003              JNC     ?C0228?SCHEDULER
 1231: 			Casher.ExtState[ 14 ] ++;
812FA2 E0                MOVX    A,@DPTR
812FA3 04                INC     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 802


812FA4 F0                MOVX    @DPTR,A
812FA5         ?C0228?SCHEDULER:
 1232: 		if( Casher.ExtState[ 14 ] >= 2 )
812FA5 9023E6            MOV     DPTR,#Casher+012H
812FA8 E0                MOVX    A,@DPTR
812FA9 C3                CLR     C
812FAA 9402              SUBB    A,#02H
812FAC 4013              JC      ?C0229?SCHEDULER
 1233: 		{
 1234: 			QueryCashTimer = 120;//定时二分钟
812FAE 751578            MOV     QueryCashTimer,#078H
 1235: 			Casher.ExtState[ 14 ] = 0;
812FB1 E4                CLR     A
812FB2 F0                MOVX    @DPTR,A
 1236: 			CasherDisableCasher();
812FB3 A51280F702        ECALL   CasherDisableCasher
 1237: 			Casher.State	=  0 ;
812FB8 E4                CLR     A
812FB9 9023D7            MOV     DPTR,#Casher+03H
812FBC F0                MOVX    @DPTR,A
 1238: 			Casher.ExtState[ 0 ] = 0;
812FBD A3                INC     DPTR
812FBE F0                MOVX    @DPTR,A
 1239: 			Casher.ExtState[ 1 ] = 0 ;			
812FBF A3                INC     DPTR
812FC0 F0                MOVX    @DPTR,A
 1240: 			Trace( "\n Casher outtime, Close query" );
 1241: 		}
812FC1         ?C0229?SCHEDULER:
 1242: 		memset( &CurrentTask, 0, sizeof( struct COMMTASK ) );
812FC1 7E00              MOV     R6,#00H
812FC3 7F26              MOV     R7,#026H
812FC5 7D00              MOV     R5,#00H
812FC7 7B00              MOV     R3,#?C?XDATASEG
812FC9 7A28              MOV     R2,#HIGH CurrentTask
812FCB 79AE              MOV     R1,#LOW CurrentTask
812FCD A5128008A6        ECALL   ?C?MEMSET
 1243: 		break;
812FD2 8005              SJMP    ?C0211?SCHEDULER
 1244: 	default:
812FD4         ?C0230?SCHEDULER:
 1245: 		ZhkSchedulerState = TASK_NULL;
812FD4 E4                CLR     A
812FD5 9023D3            MOV     DPTR,#ZhkSchedulerState
812FD8 F0                MOVX    @DPTR,A
 1246: 	}	
812FD9         ?C0211?SCHEDULER:
 1247: 	return 1;
812FD9 D3                SETB    C
 1248: }
812FDA         ?C0231?SCHEDULER:
812FDA A522              ERET    
----- FUNCTION _ZhkCasherTask (END) -------


----- FUNCTION ZhkCasherMsgProcess (BEGIN) -----
 FILE: 'scheduler.c'
 1278: uchar ZhkCasherMsgProcess( void )
 1279: {
 1280: 	struct COMMTASK xdata AckTask;
 1281: 	
 1282: 	if ( ZhkCasherFrameUnPack( &AckTask ) == 0 )
812FDC 7E18              MOV     R6,#HIGH AckTask
812FDE 7F55              MOV     R7,#LOW AckTask
812FE0 A51280F765        ECALL   _ZhkCasherFrameUnPack
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 803


812FE5 EF                MOV     A,R7
812FE6 7003              JNZ     ?C0240?SCHEDULER
 1283:  		return 0;
812FE8 FF                MOV     R7,A
812FE9 801A              SJMP    ?C0241?SCHEDULER
812FEB         ?C0240?SCHEDULER:
 1284: 	Casher.State        = AckTask.State;
812FEB 901859            MOV     DPTR,#AckTask+04H
812FEE E0                MOVX    A,@DPTR
812FEF 9023D7            MOV     DPTR,#Casher+03H
812FF2 F0                MOVX    @DPTR,A
 1285: 	Casher.ExtState[ 0 ] = AckTask.Param[ 0 ];
812FF3 90185B            MOV     DPTR,#AckTask+06H
812FF6 E0                MOVX    A,@DPTR
812FF7 9023D8            MOV     DPTR,#Casher+04H
812FFA F0                MOVX    @DPTR,A
 1286: 	Casher.ExtState[ 1 ] = AckTask.Param[ 1 ];
812FFB 90185C            MOV     DPTR,#AckTask+07H
812FFE E0                MOVX    A,@DPTR
812FFF 9023D9            MOV     DPTR,#Casher+05H
813002 F0                MOVX    @DPTR,A
 1287: //	if ( CasherIsCashIn() )
 1288:  //		ZhkCasherStatus = CASHER_STATUS_NULL;
 1289: 	return 1;
813003 7F01              MOV     R7,#01H
 1290: 	
 1291: }
813005         ?C0241?SCHEDULER:
813005 A522              ERET    
----- FUNCTION ZhkCasherMsgProcess (END) -------


----- FUNCTION ZhkCasherQuery (BEGIN) -----
 FILE: 'scheduler.c'
 1293: bit ZhkCasherQuery( void )
 1294: {
 1295: 	struct COMMTASK xdata TaskTemp;
 1296: 
 1297: 	ZhkCasherStatus 	= CASHER_STATUS_QUERY;	
813007 902368            MOV     DPTR,#ZhkCasherStatus
81300A 7405              MOV     A,#05H
81300C F0                MOVX    @DPTR,A
 1298: 	TaskTemp.Id 		= ID_CASHER;
81300D 901853            MOV     DPTR,#TaskTemp+01H
813010 740D              MOV     A,#0DH
813012 F0                MOVX    @DPTR,A
 1299: 	TaskTemp.Cmd 		= CASHER_QUERY;
813013 A3                INC     DPTR
813014 7451              MOV     A,#051H
813016 F0                MOVX    @DPTR,A
 1300: 	TaskTemp.Sn			= Casher.Sn;
813017 9023D5            MOV     DPTR,#Casher+01H
81301A E0                MOVX    A,@DPTR
81301B 901855            MOV     DPTR,#TaskTemp+03H
81301E F0                MOVX    @DPTR,A
 1301: 	TaskTemp.Priority   = PRIORITY4;
81301F 901852            MOV     DPTR,#TaskTemp
813022 7444              MOV     A,#044H
813024 F0                MOVX    @DPTR,A
 1302: 	TaskTemp.ParamLen	= 0;
813025 E4                CLR     A
813026 901857            MOV     DPTR,#TaskTemp+05H
813029 F0                MOVX    @DPTR,A
 1303: //	Trace("\n check CashState");
 1304: 	return ZhkSchedulerAddTask( &TaskTemp );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 804


81302A 7E18              MOV     R6,#HIGH TaskTemp
81302C 7F52              MOV     R7,#LOW TaskTemp
81302E A51280976B        ECALL   _ZhkSchedulerAddTask
813033 EF                MOV     A,R7
813034 24FF              ADD     A,#0FFH
 1305: }
813036         ?C0242?SCHEDULER:
813036 A522              ERET    
----- FUNCTION ZhkCasherQuery (END) -------


----- FUNCTION CasherQuery (BEGIN) -----
 FILE: 'scheduler.c'
 1307: bit CasherQuery( void )
 1308: {	
 1309: //	if ( Casher.CommState == COMM_BUZY ) 
 1310: //		return 0;	
 1311: //	if( ZhkCasherStatus == CASHER_STATUS_NULL )
 1312: //	{			
 1313: 		ZhkCasherQuery();
813038 A512813007        ECALL   ZhkCasherQuery
 1314: 		return 1;
81303D D3                SETB    C
 1315: //	}	
 1316: //	return 0;
 1317: }
81303E         ?C0243?SCHEDULER:
81303E A522              ERET    
----- FUNCTION CasherQuery (END) -------


----- FUNCTION CasherAccept (BEGIN) -----
 FILE: 'scheduler.c'
 1319: bit CasherAccept( void )
 1320: {
 1321: 	struct COMMTASK xdata TaskTemp;
 1322: 
 1323: 	ZhkCasherStatus = CASHER_STATUS_ACCEPT;
813040 902368            MOV     DPTR,#ZhkCasherStatus
813043 7401              MOV     A,#01H
813045 F0                MOVX    @DPTR,A
 1324: 	TaskTemp.Id 		= ID_CASHER;
813046 9015A0            MOV     DPTR,#TaskTemp+01H
813049 740D              MOV     A,#0DH
81304B F0                MOVX    @DPTR,A
 1325: 	TaskTemp.Cmd 		= CASHER_ACCEPT;
81304C A3                INC     DPTR
81304D 7452              MOV     A,#052H
81304F F0                MOVX    @DPTR,A
 1326: 	TaskTemp.Sn		= Casher.Sn;
813050 9023D5            MOV     DPTR,#Casher+01H
813053 E0                MOVX    A,@DPTR
813054 9015A2            MOV     DPTR,#TaskTemp+03H
813057 F0                MOVX    @DPTR,A
 1327: 	TaskTemp.Priority       = PRIORITY_NORMAL;
813058 90159F            MOV     DPTR,#TaskTemp
81305B 7442              MOV     A,#042H
81305D F0                MOVX    @DPTR,A
 1328: 	TaskTemp.ParamLen	= 0;
81305E E4                CLR     A
81305F 9015A4            MOV     DPTR,#TaskTemp+05H
813062 F0                MOVX    @DPTR,A
 1329: 	return ZhkSchedulerAddTask( &TaskTemp );
813063 7E15              MOV     R6,#HIGH TaskTemp
813065 7F9F              MOV     R7,#LOW TaskTemp
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 805


813067 A51280976B        ECALL   _ZhkSchedulerAddTask
81306C EF                MOV     A,R7
81306D 24FF              ADD     A,#0FFH
 1330: }
81306F         ?C0244?SCHEDULER:
81306F A522              ERET    
----- FUNCTION CasherAccept (END) -------


----- FUNCTION CasherIsAcceptOK (BEGIN) -----
 FILE: 'scheduler.c'
 1351: uchar CasherIsAcceptOK( void )
 1352: {
 1353: 	return Casher.State & 0x20;
 1354: }
813071 9023D7            MOV     DPTR,#Casher+03H
813074 E0                MOVX    A,@DPTR
813075 5420              ANL     A,#020H
813077 FF                MOV     R7,A
 1355: 
813078         ?C0247?SCHEDULER:
813078 A522              ERET    
----- FUNCTION CasherIsAcceptOK (END) -------


----- FUNCTION GetComingCash (BEGIN) -----
 FILE: 'scheduler.c'
 1373: uint GetComingCash( void )
 1374: {
 1375: 	uchar data ch = 0;
 1376: 
81307A E4                CLR     A
81307B F528              MOV     ch,A
 1377: 	ch = Casher.ExtState[ 1 ] % 8;
81307D 9023D9            MOV     DPTR,#Casher+05H
813080 E0                MOVX    A,@DPTR
813081 5407              ANL     A,#07H
813083 F528              MOV     ch,A
 1378: 	Casher.ExtState[ 1 ] = 0;
813085 E4                CLR     A
813086 F0                MOVX    @DPTR,A
 1379:     /*
 1380: 	if ( ( ch == 0 ) || ( CashAcceptEnableTable[ch - 1] != 1 ) )
 1381: 		return 0;
 1382: 	return CashAccept[ ch - 1 ];
 1383:     */
 1384:     if ( ch == 0 ) 
813087 E528              MOV     A,ch
813089 7004              JNZ     ?C0251?SCHEDULER
 1385: 		return 0;
81308B FE                MOV     R6,A
81308C FF                MOV     R7,A
81308D 8012              SJMP    ?C0252?SCHEDULER
81308F         ?C0251?SCHEDULER:
 1386: 	return SystemParameter.billValue[ch-1];   //Changed by Andy on 2010.8.17!
81308F E528              MOV     A,ch
813091 25E0              ADD     A,ACC
813093 2447              ADD     A,#LOW SystemParameter+027H
813095 F582              MOV     DPL,A
813097 E4                CLR     A
813098 3404              ADDC    A,#HIGH SystemParameter+027H
81309A F583              MOV     DPH,A
81309C E0                MOVX    A,@DPTR
81309D FE                MOV     R6,A
81309E A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 806


81309F E0                MOVX    A,@DPTR
8130A0 FF                MOV     R7,A
 1387: }
8130A1         ?C0252?SCHEDULER:
8130A1 A522              ERET    
----- FUNCTION GetComingCash (END) -------


----- FUNCTION CasherQueryEnable (BEGIN) -----
 FILE: 'scheduler.c'
 1389: bit CasherQueryEnable( void )
 1390: {
 1391: 	ZhkAutoTaskPermission[ 0 ] = 1;
 1392: 	memset( &Casher, 0, sizeof( Casher ) );
8130A3 902366            MOV     DPTR,#ZhkAutoTaskPermission
8130A6 7401              MOV     A,#01H
8130A8 F0                MOVX    @DPTR,A
 1393: 	return 1;
8130A9 7E00              MOV     R6,#00H
8130AB 7F15              MOV     R7,#015H
8130AD 7D00              MOV     R5,#00H
8130AF 7B00              MOV     R3,#?C?XDATASEG
8130B1 7A23              MOV     R2,#HIGH Casher
8130B3 79D4              MOV     R1,#LOW Casher
8130B5 A5128008A6        ECALL   ?C?MEMSET
 1394: }
8130BA D3                SETB    C
 1395: 
8130BB         ?C0253?SCHEDULER:
8130BB A522              ERET    
----- FUNCTION CasherQueryEnable (END) -------


----- FUNCTION CasherResetOuttime (BEGIN) -----
 FILE: 'scheduler.c'
 1413: void CasherResetOuttime( void )
 1414: {	
 1415: 	Casher.CommState  = COMM_COMMOK;	
 1416: 	QueryCashTimer = 0;
8130BD 9023D6            MOV     DPTR,#Casher+02H
8130C0 7404              MOV     A,#04H
8130C2 F0                MOVX    @DPTR,A
 1417: }
8130C3 E4                CLR     A
8130C4 F515              MOV     QueryCashTimer,A
 1418: 
8130C6 A522              ERET    
----- FUNCTION CasherResetOuttime (END) -------


----- FUNCTION ZhkChannelQuery (BEGIN) -----
 FILE: 'scheduler.c'
 1648: bit ZhkChannelQuery( )
 1649: {
 1650: 	struct COMMTASK xdata TaskTemp;
 1651: 	
 1652: 	Channel.CommState       = COMM_BUZY;
8130C8 9023C0            MOV     DPTR,#Channel+02H
8130CB 7401              MOV     A,#01H
8130CD F0                MOVX    @DPTR,A
 1653: 	TaskTemp.Id 		= ID_CHANNEL;
8130CE 901766            MOV     DPTR,#TaskTemp+01H
8130D1 7415              MOV     A,#015H
8130D3 F0                MOVX    @DPTR,A
 1654: 	TaskTemp.Cmd 		= CHANNEL_QUERY;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 807


8130D4 A3                INC     DPTR
8130D5 7451              MOV     A,#051H
8130D7 F0                MOVX    @DPTR,A
 1655: 	TaskTemp.Sn		= Channel.Sn;
8130D8 9023BF            MOV     DPTR,#Channel+01H
8130DB E0                MOVX    A,@DPTR
8130DC 901768            MOV     DPTR,#TaskTemp+03H
8130DF F0                MOVX    @DPTR,A
 1656: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
8130E0 901765            MOV     DPTR,#TaskTemp
8130E3 7442              MOV     A,#042H
8130E5 F0                MOVX    @DPTR,A
 1657: 	TaskTemp.ParamLen	= 1;
8130E6 90176A            MOV     DPTR,#TaskTemp+05H
8130E9 7401              MOV     A,#01H
8130EB F0                MOVX    @DPTR,A
 1658: 	TaskTemp.Param[ 0 ]     = 0x00;
8130EC E4                CLR     A
8130ED A3                INC     DPTR
8130EE F0                MOVX    @DPTR,A
 1659: 	return ZhkSchedulerAddTask( &TaskTemp );
8130EF 7E17              MOV     R6,#HIGH TaskTemp
8130F1 7F65              MOV     R7,#LOW TaskTemp
8130F3 A51280976B        ECALL   _ZhkSchedulerAddTask
8130F8 EF                MOV     A,R7
8130F9 24FF              ADD     A,#0FFH
 1660: }
8130FB         ?C0300?SCHEDULER:
8130FB A522              ERET    
----- FUNCTION ZhkChannelQuery (END) -------


----- FUNCTION _ZhkChannelExec (BEGIN) -----
 FILE: 'scheduler.c'
 1663: bit ZhkChannelExec( u_char ChannelNum, u_char ReSendFlag )
 1664: {
8130FD 901765            MOV     DPTR,#ChannelNum
813100 EF                MOV     A,R7
813101 F0                MOVX    @DPTR,A
813102 A3                INC     DPTR
813103 ED                MOV     A,R5
813104 F0                MOVX    @DPTR,A
 1665: 	struct COMMTASK xdata TaskTemp;
 1666: 	
 1667: 	memset( &TaskTemp, 0, sizeof( struct COMMTASK ) );
813105 7E00              MOV     R6,#00H
813107 7F26              MOV     R7,#026H
813109 7D00              MOV     R5,#00H
81310B 7B00              MOV     R3,#?C?XDATASEG
81310D 7A17              MOV     R2,#HIGH TaskTemp
81310F 7967              MOV     R1,#LOW TaskTemp
813111 A5128008A6        ECALL   ?C?MEMSET
 1668: 	Channel.CommState       = COMM_BUZY;
813116 9023C0            MOV     DPTR,#Channel+02H
813119 7401              MOV     A,#01H
81311B F0                MOVX    @DPTR,A
 1669: 	TaskTemp.Id 		= ID_CHANNEL;
81311C 901768            MOV     DPTR,#TaskTemp+01H
81311F 7415              MOV     A,#015H
813121 F0                MOVX    @DPTR,A
 1670: 	TaskTemp.Cmd 		= CHANNEL_EXEC;
813122 A3                INC     DPTR
813123 7450              MOV     A,#050H
813125 F0                MOVX    @DPTR,A
 1671: 	TaskTemp.Sn		= Channel.Sn;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 808


813126 9023BF            MOV     DPTR,#Channel+01H
813129 E0                MOVX    A,@DPTR
81312A 90176A            MOV     DPTR,#TaskTemp+03H
81312D F0                MOVX    @DPTR,A
 1672: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
81312E 901767            MOV     DPTR,#TaskTemp
813131 7442              MOV     A,#042H
813133 F0                MOVX    @DPTR,A
 1673: 	TaskTemp.ParamLen	= 2;
813134 90176C            MOV     DPTR,#TaskTemp+05H
813137 7402              MOV     A,#02H
813139 F0                MOVX    @DPTR,A
 1674: 	TaskTemp.Param[ 0 ]     = ChannelNum;
81313A 901765            MOV     DPTR,#ChannelNum
81313D E0                MOVX    A,@DPTR
81313E 90176D            MOV     DPTR,#TaskTemp+06H
813141 F0                MOVX    @DPTR,A
 1675: 	TaskTemp.Param[ 1 ]     = ReSendFlag;
813142 901766            MOV     DPTR,#ReSendFlag
813145 E0                MOVX    A,@DPTR
813146 90176E            MOV     DPTR,#TaskTemp+07H
813149 F0                MOVX    @DPTR,A
 1676: 	return ZhkSchedulerAddTask( &TaskTemp );
81314A 7E17              MOV     R6,#HIGH TaskTemp
81314C 7F67              MOV     R7,#LOW TaskTemp
81314E A51280976B        ECALL   _ZhkSchedulerAddTask
813153 EF                MOV     A,R7
813154 24FF              ADD     A,#0FFH
 1677: }
813156         ?C0301?SCHEDULER:
813156 A522              ERET    
----- FUNCTION _ZhkChannelExec (END) -------


----- FUNCTION ZhkChannelClear (BEGIN) -----
 FILE: 'scheduler.c'
 1680: bit ZhkChannelClear( )
 1681: {
 1682: 	struct COMMTASK xdata TaskTemp;
 1683: 	
 1684: 	Trace("\nZhkChannelClear" );
 1685: 	Channel.CommState       = COMM_BUZY;
813158 9023C0            MOV     DPTR,#Channel+02H
81315B 7401              MOV     A,#01H
81315D F0                MOVX    @DPTR,A
 1686: 	TaskTemp.Id 		= ID_CHANNEL;
81315E 901766            MOV     DPTR,#TaskTemp+01H
813161 7415              MOV     A,#015H
813163 F0                MOVX    @DPTR,A
 1687: 	TaskTemp.Cmd 		= CHANNEL_CLEAR;
813164 A3                INC     DPTR
813165 7453              MOV     A,#053H
813167 F0                MOVX    @DPTR,A
 1688: 	TaskTemp.Sn		= Channel.Sn;
813168 9023BF            MOV     DPTR,#Channel+01H
81316B E0                MOVX    A,@DPTR
81316C 901768            MOV     DPTR,#TaskTemp+03H
81316F F0                MOVX    @DPTR,A
 1689: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
813170 901765            MOV     DPTR,#TaskTemp
813173 7442              MOV     A,#042H
813175 F0                MOVX    @DPTR,A
 1690: 	TaskTemp.ParamLen	= 1;
813176 90176A            MOV     DPTR,#TaskTemp+05H
813179 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 809


81317B F0                MOVX    @DPTR,A
 1691: 	TaskTemp.Param[ 0 ]     = 0x00;
81317C E4                CLR     A
81317D A3                INC     DPTR
81317E F0                MOVX    @DPTR,A
 1692: 	return ZhkSchedulerAddTask( &TaskTemp );
81317F 7E17              MOV     R6,#HIGH TaskTemp
813181 7F65              MOV     R7,#LOW TaskTemp
813183 A51280976B        ECALL   _ZhkSchedulerAddTask
813188 EF                MOV     A,R7
813189 24FF              ADD     A,#0FFH
 1693: }
81318B         ?C0302?SCHEDULER:
81318B A522              ERET    
----- FUNCTION ZhkChannelClear (END) -------


----- FUNCTION _ZhkChannelTest (BEGIN) -----
 FILE: 'scheduler.c'
 1696: bit ZhkChannelTest( u_char ChannelNum )
 1697: {
;---- Variable 'ChannelNum' assigned to Register 'R7' ----
 1698: 	struct COMMTASK xdata TaskTemp;
 1699: 	
 1700: 	Channel.CommState       = COMM_BUZY;
81318D 9023C0            MOV     DPTR,#Channel+02H
813190 7401              MOV     A,#01H
813192 F0                MOVX    @DPTR,A
 1701: 	TaskTemp.Id 		= ID_CHANNEL;
813193 901766            MOV     DPTR,#TaskTemp+01H
813196 7415              MOV     A,#015H
813198 F0                MOVX    @DPTR,A
 1702: 	TaskTemp.Cmd 		= CHANNEL_TEST;
813199 A3                INC     DPTR
81319A 7452              MOV     A,#052H
81319C F0                MOVX    @DPTR,A
 1703: 	TaskTemp.Sn		= Channel.Sn;
81319D 9023BF            MOV     DPTR,#Channel+01H
8131A0 E0                MOVX    A,@DPTR
8131A1 901768            MOV     DPTR,#TaskTemp+03H
8131A4 F0                MOVX    @DPTR,A
 1704: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
8131A5 901765            MOV     DPTR,#TaskTemp
8131A8 7442              MOV     A,#042H
8131AA F0                MOVX    @DPTR,A
 1705: 	TaskTemp.ParamLen	= 1;
8131AB 90176A            MOV     DPTR,#TaskTemp+05H
8131AE 7401              MOV     A,#01H
8131B0 F0                MOVX    @DPTR,A
 1706: 	TaskTemp.Param[ 0 ]     = ChannelNum;
8131B1 A3                INC     DPTR
8131B2 EF                MOV     A,R7
8131B3 F0                MOVX    @DPTR,A
 1707: 	return ZhkSchedulerAddTask( &TaskTemp );
8131B4 7E17              MOV     R6,#HIGH TaskTemp
8131B6 7F65              MOV     R7,#LOW TaskTemp
8131B8 A51280976B        ECALL   _ZhkSchedulerAddTask
8131BD EF                MOV     A,R7
8131BE 24FF              ADD     A,#0FFH
 1708: }
8131C0         ?C0303?SCHEDULER:
8131C0 A522              ERET    
----- FUNCTION _ZhkChannelTest (END) -------


LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 810


----- FUNCTION TestATcommand (BEGIN) -----
 FILE: 'scheduler.c'
 1745: uchar TestATcommand()
 1746: {
 1747: 	uchar temp = 0;
 1748: 	uchar TestTimer = 0;
8131C2 E4                CLR     A
8131C3 901814            MOV     DPTR,#temp
8131C6 F0                MOVX    @DPTR,A
 1749: #ifndef _DEBUG_NO_MOBILE
8131C7 A3                INC     DPTR
8131C8 F0                MOVX    @DPTR,A
 1750: 	IsPressMobile = 0;
8131C9 9023BD            MOV     DPTR,#IsPressMobile
8131CC F0                MOVX    @DPTR,A
8131CD         ?C0304?SCHEDULER:
 1751: 	while( 1 )
 1752: 	{
 1753: 		temp = SendATcommandToMobile();
8131CD A512813218        ECALL   SendATcommandToMobile
8131D2 901814            MOV     DPTR,#temp
8131D5 EF                MOV     A,R7
8131D6 F0                MOVX    @DPTR,A
 1754: 		if( temp == 3 )
8131D7 BF030A            CJNE    R7,#03H,?C0306?SCHEDULER
 1755: 		{
 1756: 			IsPressMobile = 1;
8131DA 9023BD            MOV     DPTR,#IsPressMobile
8131DD 7401              MOV     A,#01H
8131DF F0                MOVX    @DPTR,A
 1757: 			return 3;
8131E0 7F03              MOV     R7,#03H
8131E2 8032              SJMP    ?C0307?SCHEDULER
 1758: 		}
8131E4         ?C0306?SCHEDULER:
 1759: 		if( temp == 2 )
8131E4 901814            MOV     DPTR,#temp
8131E7 E0                MOVX    A,@DPTR
8131E8 B40207            CJNE    A,#02H,?C0308?SCHEDULER
 1760: 		{
 1761: 			SchedulerProcess();
8131EB A5128090B6        ECALL   SchedulerProcess
 1762: 			continue;
8131F0 80DB              SJMP    ?C0304?SCHEDULER
 1763: 		}
8131F2         ?C0308?SCHEDULER:
 1764: 		else
 1765: 		{
 1766: 			if( temp == 0 )
8131F2 901814            MOV     DPTR,#temp
8131F5 E0                MOVX    A,@DPTR
8131F6 7009              JNZ     ?C0310?SCHEDULER
 1767: 			{
 1768: 				IsPressMobile = 1;
8131F8 9023BD            MOV     DPTR,#IsPressMobile
8131FB 04                INC     A
8131FC F0                MOVX    @DPTR,A
 1769: 				return 0;			
8131FD 7F00              MOV     R7,#00H
8131FF 8015              SJMP    ?C0307?SCHEDULER
 1770: 			}
813201         ?C0310?SCHEDULER:
 1771: 	 		if( TestTimer < 1 )
813201 901815            MOV     DPTR,#TestTimer
813204 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 811


813205 C3                CLR     C
813206 9401              SUBB    A,#01H
813208 5005              JNC     ?C0311?SCHEDULER
 1772: 			{
 1773: 				TestTimer++;
81320A E0                MOVX    A,@DPTR
81320B 04                INC     A
81320C F0                MOVX    @DPTR,A
 1774: 				continue;
81320D 80BE              SJMP    ?C0304?SCHEDULER
 1775: 			}
81320F         ?C0311?SCHEDULER:
 1776: 			else
 1777: 			{
 1778: 				IsPressMobile = 1;
81320F 9023BD            MOV     DPTR,#IsPressMobile
813212 7401              MOV     A,#01H
813214 F0                MOVX    @DPTR,A
 1779: 				return 1;		
813215 FF                MOV     R7,A
 1780: 			}
 1781: 		}
 1782: 	}
 1783: 	IsPressMobile = 1;
 1784:  #endif
 1785: }
813216         ?C0307?SCHEDULER:
813216 A522              ERET    
----- FUNCTION TestATcommand (END) -------


----- FUNCTION SendATcommandToMobile (BEGIN) -----
 FILE: 'mobile.c'
  614: uchar SendATcommandToMobile()
  615: {
  616: 	static uchar xdata ATTxStatus = MOBILE_BEGIN;		
  617: 	uchar data temp;
  618: 
  619: 	if( ZhkMobileCurrentTask != MOBILE_NULL )
813218 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
81321B E0                MOVX    A,@DPTR
81321C 6004              JZ      ?C0116?MOBILE
  620: 	{
  621: //		Trace("\n Have other at command");
  622: 		return 3;
81321E 7F03              MOV     R7,#03H
813220 8042              SJMP    ?C0117?MOBILE
  623: 	}
813222         ?C0116?MOBILE:
  624: 	switch( ATTxStatus )
813222 900D2E            MOV     DPTR,#ATTxStatus
813225 E0                MOVX    A,@DPTR
813226 14                DEC     A
813227 6012              JZ      ?C0120?MOBILE
813229 04                INC     A
81322A 7038              JNZ     ?C0117?MOBILE
  625: 	{		
  626: 		ZhkMobileSignalIn();
  627: 		case MOBILE_BEGIN:					
81322C         ?C0119?MOBILE:
  628: //			Trace("\n Send test command1");
  629: 			//发送指令
  630: 			ZhkAtCmd( "ATE0", 1 );
81322C A512813266        ECALL   ?L?COM001E
  631: 			ATTxStatus = MOBILE_STEP1;	
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 812


813231 900D2E            MOV     DPTR,#ATTxStatus
813234 7401              MOV     A,#01H
813236 F0                MOVX    @DPTR,A
  632: 			return 2;
813237 7F02              MOV     R7,#02H
813239 8029              SJMP    ?C0117?MOBILE
  633: 		break;	
  634: 		case MOBILE_STEP1:			// 等待提示符	
81323B         ?C0120?MOBILE:
  635: 			temp = ZhkAtCmdGetErr();
81323B A5128135B1        ECALL   ZhkAtCmdGetErr
813240 8F28              MOV     temp,R7
  636: //			Trace("\n MOBILE_STEP1 temp = %bu", temp );
  637: 			switch( temp )
813242 E528              MOV     A,temp
813244 14                DEC     A
813245 601B              JZ      ?C0121?MOBILE
813247 14                DEC     A
813248 600F              JZ      ?C0125?MOBILE
81324A 14                DEC     A
81324B 6004              JZ      ?C0123?MOBILE
81324D 2403              ADD     A,#03H
81324F 7011              JNZ     ?C0121?MOBILE
  638: 			{
  639: 				case ATCMD_ERR_NULL:
  640: 					// 命令成功
  641: 				case ATCMD_ERR_ERR://手机模块有故障应答
813251         ?C0123?MOBILE:
  642: 					// 命令失败				
  643: 					ATTxStatus = MOBILE_BEGIN;
813251 E4                CLR     A
813252 900D2E            MOV     DPTR,#ATTxStatus
813255 F0                MOVX    @DPTR,A
  644: 					return 0;
813256 FF                MOV     R7,A
813257 800B              SJMP    ?C0117?MOBILE
  645: 					break;
  646: 				case ATCMD_ERR_BLOCK:
  647: 					// 阻塞状态直接返回
  648: 					return 2;
  649: 					break;						
  650: 				case ATCMD_ERR_TIMEOUT:
813259         ?C0125?MOBILE:
  651: 					// 指令超时处理				
  652: 					ATTxStatus = MOBILE_BEGIN;
813259 E4                CLR     A
81325A 900D2E            MOV     DPTR,#ATTxStatus
81325D F0                MOVX    @DPTR,A
  653: 					return 1;			
81325E 7F01              MOV     R7,#01H
813260 8002              SJMP    ?C0117?MOBILE
  654: 			}
813262         ?C0121?MOBILE:
  655: 			return 2;
813262 7F02              MOV     R7,#02H
  656: 		break;			
  657: 	}	
  658: }
813264         ?C0117?MOBILE:
813264 A522              ERET    
----- FUNCTION SendATcommandToMobile (END) -------


----- FUNCTION ?L?COM001E (BEGIN) -----
813266 7B80              MOV     R3,#BYTE2 08016D6H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 813


813268 7A16              MOV     R2,#HIGH 08016D6H
81326A 79D6              MOV     R1,#LOW 08016D6H
81326C 7D01              MOV     R5,#01H
----- FUNCTION _ZhkAtCmd (BEGIN) -----
 FILE: 'mobile.c'
 1670: uchar ZhkAtCmd( uchar* AtCmd, uchar CmdFlag )
 1671: {
81326E 901B86            MOV     DPTR,#AtCmd
813271 A5128007B6        ECALL   ?C?PSTXDATA
813276 901B89            MOV     DPTR,#CmdFlag
813279 ED                MOV     A,R5
81327A F0                MOVX    @DPTR,A
 1672: 	uchar DataTemp[ 384 ];
 1673: 	uint data len;
 1674: 
 1675: 	ZhkAtCmdGetErr();
81327B A5128135B1        ECALL   ZhkAtCmdGetErr
 1676: 	len = strlen( AtCmd );
813280 901B86            MOV     DPTR,#AtCmd
813283 A5128007AC        ECALL   ?C?PLDXDATA
813288 A512800010        ECALL   _strlen
81328D 8E2E              MOV     len,R6
81328F 8F2F              MOV     len+01H,R7
 1677: 	memcpy( DataTemp , AtCmd , len );
813291 788A              MOV     R0,#LOW DataTemp
813293 7C1B              MOV     R4,#HIGH DataTemp
813295 7D00              MOV     R5,#?C?XDATASEG
813297 901B86            MOV     DPTR,#AtCmd
81329A A5128007AC        ECALL   ?C?PLDXDATA
81329F A51280052D        ECALL   ?C?COPY
 1678: 	DataTemp[ len ] = '\r';	
8132A4 748A              MOV     A,#LOW DataTemp
8132A6 252F              ADD     A,len+01H
8132A8 F582              MOV     DPL,A
8132AA 741B              MOV     A,#HIGH DataTemp
8132AC 352E              ADDC    A,len
8132AE F583              MOV     DPH,A
8132B0 740D              MOV     A,#0DH
8132B2 F0                MOVX    @DPTR,A
 1679: 	len++;
8132B3 052F              INC     len+01H
8132B5 E52F              MOV     A,len+01H
8132B7 7002              JNZ     ?C0334?MOBILE
8132B9 052E              INC     len
8132BB         ?C0334?MOBILE:
 1680: //	Trace("\n ZhkAtCmd len = %u", len );
 1681: //	DataTemp[ len ]    = '\0';//ygp change
 1682: 		
 1683: 	ZhkAtCmdErr    	= ATCMD_ERR_BLOCK;
8132BB 900EB9            MOV     DPTR,#ZhkAtCmdErr
8132BE 7401              MOV     A,#01H
8132C0 F0                MOVX    @DPTR,A
 1684: 	SMSErrorCode = 0;
8132C1 E4                CLR     A
8132C2 900EB2            MOV     DPTR,#SMSErrorCode
8132C5 F0                MOVX    @DPTR,A
8132C6 A3                INC     DPTR
8132C7 F0                MOVX    @DPTR,A
 1685: 	ZhkSerialTxMsg( DataTemp , len );	
8132C8 7B00              MOV     R3,#?C?XDATASEG
8132CA 7A1B              MOV     R2,#HIGH DataTemp
8132CC 798A              MOV     R1,#LOW DataTemp
8132CE AD2F              MOV     R5,len+01H
8132D0 AC2E              MOV     R4,len
8132D2 A51281363F        ECALL   _ZhkSerialTxMsg
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 814


 1686: 	if( CmdFlag == 1 )
8132D7 901B89            MOV     DPTR,#CmdFlag
8132DA E0                MOVX    A,@DPTR
8132DB B40105            CJNE    A,#01H,?C0295?MOBILE
 1687: 		ZhkMobileSecTimer = ZHKMOBILE_CMD_ACKTIMEOUT;
8132DE 751732            MOV     ZhkMobileSecTimer,#032H
8132E1 8003              SJMP    ?C0296?MOBILE
8132E3         ?C0295?MOBILE:
 1688: 	else
 1689: 		ZhkMobileSecTimer = ZHKMOBILE_SMS_ACKTIMEOUT;
8132E3 751746            MOV     ZhkMobileSecTimer,#046H
8132E6         ?C0296?MOBILE:
 1690: //	Trace( "\n ZhkAtCmd Cmd: %s", AtCmd );
 1691: 	return 0;
8132E6 7F00              MOV     R7,#00H
 1692: }
8132E8         ?C0297?MOBILE:
8132E8 A522              ERET    
----- FUNCTION _ZhkAtCmd (END) -------


----- FUNCTION MobileInitProcess (BEGIN) -----
 FILE: 'mobile.c'
  147: uchar MobileInitProcess( void )
  148: {
  149: 	static uchar xdata InitStatus = MOBILE_BEGIN;
  150: 	static uchar xdata CmdStatus = ATCMD_ERR_NULL;
  151: 	uchar data temp;
  152: 
  153: //	Trace( "\n MobileInitProcess start" );
  154: 	if( DownMobilePowerFlag == 1 )
8132EA 900EB4            MOV     DPTR,#DownMobilePowerFlag
8132ED E0                MOVX    A,@DPTR
8132EE B4010B            CJNE    A,#01H,?C0005?MOBILE
  155: 	{
  156: 		CmdStatus = ATCMD_ERR_TIMEOUT;
8132F1 900B2B            MOV     DPTR,#CmdStatus
8132F4 7402              MOV     A,#02H
8132F6 F0                MOVX    @DPTR,A
  157: 		DownMobilePowerFlag = 0;
8132F7 E4                CLR     A
8132F8 900EB4            MOV     DPTR,#DownMobilePowerFlag
8132FB F0                MOVX    @DPTR,A
  158: 	}
8132FC         ?C0005?MOBILE:
  159: 	if( CmdStatus == ATCMD_ERR_TIMEOUT )
8132FC 900B2B            MOV     DPTR,#CmdStatus
8132FF E0                MOVX    A,@DPTR
813300 6402              XRL     A,#02H
813302 703D              JNZ     ?C0006?MOBILE
  160: 	{			
  161: 	    if( GPRSModuleDeadFlag == 0 )
813304 202C11            JB      GPRSModuleDeadFlag,?C0007?MOBILE
  162: 		{
  163: 			Trace( "\n WaterKeyDisable");
  164:             GPRSModuleDeadFlag   = 1;
813307 D22C              SETB    GPRSModuleDeadFlag
  165: 		    GPRSModuleResetTimer = GPRSMResetValue;   //120,60
813309 902DF1            MOV     DPTR,#GPRSModuleResetTimer
81330C F0                MOVX    @DPTR,A
81330D A3                INC     DPTR
81330E 745A              MOV     A,#05AH
813310 F0                MOVX    @DPTR,A
  166: 			WaterKeyDisable();
813311 A5128136A7        ECALL   WaterKeyDisable
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 815


  167: 		}
813316 8024              SJMP    ?C0008?MOBILE
813318         ?C0007?MOBILE:
  168: 		else
  169: 		{
  170:             if( GPRSModuleResetTimer == 0 )
813318 902DF1            MOV     DPTR,#GPRSModuleResetTimer
81331B E0                MOVX    A,@DPTR
81331C 7002              JNZ     ?C0303?MOBILE
81331E A3                INC     DPTR
81331F E0                MOVX    A,@DPTR
813320         ?C0303?MOBILE:
813320 701A              JNZ     ?C0008?MOBILE
  171: 			{
  172: 				Trace( "\n WaterKeyEnable");
  173: 			    GPRSModuleDeadFlag = 0;
813322 C22C              CLR     GPRSModuleDeadFlag
  174: 				WaterKeyEnable();
813324 A5128136A3        ECALL   WaterKeyEnable
  175: 				GPRSDeadTimer = 0;
813329 E4                CLR     A
81332A 900EBB            MOV     DPTR,#GPRSDeadTimer
81332D F0                MOVX    @DPTR,A
  176: 				InitStatus = MOBILE_BEGIN;
81332E 900B2A            MOV     DPTR,#InitStatus
813331 F0                MOVX    @DPTR,A
  177: 				CmdStatus = ATCMD_ERR_NULL;
813332 A3                INC     DPTR
813333 F0                MOVX    @DPTR,A
  178: 				//用于下电后延时初始化手机模块
  179: 				GPRSModuleResetTimer = 30;
813334 902DF1            MOV     DPTR,#GPRSModuleResetTimer
813337 F0                MOVX    @DPTR,A
813338 A3                INC     DPTR
813339 741E              MOV     A,#01EH
81333B F0                MOVX    @DPTR,A
  180: 			}
  181: 		}
81333C         ?C0008?MOBILE:
  182: 		return 0;
81333C 7F00              MOV     R7,#00H
81333E 0235AF            LJMP    ?C0010?MOBILE
  183: 	}
813341         ?C0006?MOBILE:
  184: 	else
  185: 	{
  186: 		//用于开机上电时延时初始化手机模块
  187: 		if( GPRSModuleResetTimer != 0 )
813341 902DF1            MOV     DPTR,#GPRSModuleResetTimer
813344 E0                MOVX    A,@DPTR
813345 7002              JNZ     ?C0304?MOBILE
813347 A3                INC     DPTR
813348 E0                MOVX    A,@DPTR
813349         ?C0304?MOBILE:
813349 6005              JZ      ?C0011?MOBILE
  188: 			return 0;
81334B 7F00              MOV     R7,#00H
81334D 0235AF            LJMP    ?C0010?MOBILE
  189: 	}
813350         ?C0011?MOBILE:
  190: 	switch( InitStatus )
813350 900B2A            MOV     DPTR,#InitStatus
813353 E0                MOVX    A,@DPTR
813354 A5128007CD        ECALL   ?C?CCASEX
813359 3372              DW      ?C0014?MOBILE
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 816


81335B 00                DB      00H
81335C 33B8              DW      ?C0015?MOBILE
81335E 01                DB      01H
81335F 340E              DW      ?C0023?MOBILE
813361 02                DB      02H
813362 3459              DW      ?C0031?MOBILE
813364 03                DB      03H
813365 349F              DW      ?C0039?MOBILE
813367 04                DB      04H
813368 34F1              DW      ?C0047?MOBILE
81336A 05                DB      05H
81336B 3557              DW      ?C0057?MOBILE
81336D 06                DB      06H
81336E 0000              DW      00H
813370 35AD              DW      ?C0013?MOBILE
  191: 	{
  192: 		case MOBILE_BEGIN:
813372         ?C0014?MOBILE:
  193: 			ZhkSerialInit();
813372 A5128077D2        ECALL   ZhkSerialInit
  194: 			ZhkGprsStatus     	= GPRS_STATUS_BREAK;		
813377 901186            MOV     DPTR,#ZhkGprsStatus
81337A 7401              MOV     A,#01H
81337C F0                MOVX    @DPTR,A
  195: 		#ifdef _MOBILE_SMS_1
  196: 			ZhkSmsTxNum = 0;			
81337D E4                CLR     A
81337E 901598            MOV     DPTR,#ZhkSmsTxNum
813381 F0                MOVX    @DPTR,A
  197: 			SendSMSTimer = 0;
813382 F510              MOV     SendSMSTimer,A
  198: 			SMSSendTime = 0;
813384 900EB8            MOV     DPTR,#SMSSendTime
813387 F0                MOVX    @DPTR,A
  199: 			ReceiveSMSTimer = 0;			
813388 F519              MOV     ReceiveSMSTimer,A
  200: 			SMSReceiveTime = 0;
81338A 9010D3            MOV     DPTR,#SMSReceiveTime
81338D F0                MOVX    @DPTR,A
  201: 			SMSLastErr	= SMS_ERR_BLOCK;
81338E 900EBC            MOV     DPTR,#SMSLastErr
813391 04                INC     A
813392 F0                MOVX    @DPTR,A
  202: 			ZhkGprsStatus = GPRS_ERR_CONNECTING;
813393 901186            MOV     DPTR,#ZhkGprsStatus
813396 7406              MOV     A,#06H
813398 F0                MOVX    @DPTR,A
  203: 			DownMobilePowerFlag = 0;
813399 E4                CLR     A
81339A 900EB4            MOV     DPTR,#DownMobilePowerFlag
81339D F0                MOVX    @DPTR,A
  204: 		#endif
  205: 			ZhkMobileCurrentTask 	= MOBILE_INIT;			
81339E A3                INC     DPTR
81339F 7409              MOV     A,#09H
8133A1 F0                MOVX    @DPTR,A
  206: 			ZhkAtCmd( "ATZ", 1 );		
8133A2 7B80              MOV     R3,#BYTE2 08016C5H
8133A4 7A16              MOV     R2,#HIGH 08016C5H
8133A6 79C5              MOV     R1,#LOW 08016C5H
8133A8 7D01              MOV     R5,#01H
8133AA A51281326E        ECALL   _ZhkAtCmd
  207: 			InitStatus = MOBILE_STEP1;
8133AF 900B2A            MOV     DPTR,#InitStatus
8133B2 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 817


8133B4 F0                MOVX    @DPTR,A
  208: 		break;
8133B5 0235AD            LJMP    ?C0013?MOBILE
  209: 		case MOBILE_STEP1:
8133B8         ?C0015?MOBILE:
  210: 			temp = ZhkAtCmdGetErr();
8133B8 A5128135B1        ECALL   ZhkAtCmdGetErr
8133BD 8F2B              MOV     temp,R7
  211: 			switch( temp )
8133BF E52B              MOV     A,temp
8133C1 24FE              ADD     A,#0FEH
8133C3 601E              JZ      ?C0019?MOBILE
8133C5 14                DEC     A
8133C6 603D              JZ      ?C0022?MOBILE
8133C8 2403              ADD     A,#03H
8133CA 6003              JZ      $ + 5H
8133CC 0235AD            LJMP    ?C0013?MOBILE
  212: 			{
  213: 				case ATCMD_ERR_NULL:				
8133CF         ?C0017?MOBILE:
  214: 					ZhkAtCmd( "AT+IPR=38400", 1 );				
8133CF 7B80              MOV     R3,#BYTE2 08016C9H
8133D1 7A16              MOV     R2,#HIGH 08016C9H
8133D3 79C9              MOV     R1,#LOW 08016C9H
8133D5 7D01              MOV     R5,#01H
8133D7 A51281326E        ECALL   _ZhkAtCmd
  215: 					InitStatus = MOBILE_STEP2;	
8133DC 900B2A            MOV     DPTR,#InitStatus
8133DF 7402              MOV     A,#02H
  216: 					GPRSDeadTimer = 0;
  217: 				break;
8133E1 804C              SJMP    ?C0337?MOBILE
  218: 				case ATCMD_ERR_BLOCK:
  219: 				break;
  220: 				case ATCMD_ERR_TIMEOUT:
8133E3         ?C0019?MOBILE:
  221: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5					
8133E3 900EBB            MOV     DPTR,#GPRSDeadTimer
8133E6 E0                MOVX    A,@DPTR
8133E7 C3                CLR     C
8133E8 9403              SUBB    A,#03H
8133EA 4003              JC      $ + 5H
8133EC 023547            LJMP    ?C0347?MOBILE
  222: 					{
  223: 						ZhkAtCmd( "ATZ", 1 );		
8133EF 7B80              MOV     R3,#BYTE2 08016C5H
8133F1 7A16              MOV     R2,#HIGH 08016C5H
8133F3 79C5              MOV     R1,#LOW 08016C5H
8133F5 7D01              MOV     R5,#01H
8133F7 A51281326E        ECALL   _ZhkAtCmd
  224: 		                GPRSDeadTimer++;
8133FC 900EBB            MOV     DPTR,#GPRSDeadTimer
8133FF E0                MOVX    A,@DPTR
813400 04                INC     A
813401 F0                MOVX    @DPTR,A
  225:                 	}
813402 0235AD            LJMP    ?C0013?MOBILE
  226: 				    else
  227: 						CmdStatus = ATCMD_ERR_TIMEOUT;
  228: 				break;
  229: 				case ATCMD_ERR_ERR:		
813405         ?C0022?MOBILE:
  230: 					ZhkAtCmd( "ATZ", 1 );
813405 7B80              MOV     R3,#BYTE2 08016C5H
813407 7A16              MOV     R2,#HIGH 08016C5H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 818


813409 79C5              MOV     R1,#LOW 08016C5H
  231: 				break;
81340B 0235A6            LJMP    ?C0352?MOBILE
  232: 			}
  233: 		break;
  234: 		case MOBILE_STEP2:
81340E         ?C0023?MOBILE:
  235: 			temp = ZhkAtCmdGetErr();		
81340E A5128135B1        ECALL   ZhkAtCmdGetErr
813413 8F2B              MOV     temp,R7
  236: 			switch( temp )
813415 E52B              MOV     A,temp
813417 24FE              ADD     A,#0FEH
813419 601D              JZ      ?C0027?MOBILE
81341B 14                DEC     A
81341C 6032              JZ      ?C0030?MOBILE
81341E 2403              ADD     A,#03H
813420 6003              JZ      $ + 5H
813422 0235AD            LJMP    ?C0013?MOBILE
  237: 			{
  238: 				case ATCMD_ERR_NULL:
813425         ?C0025?MOBILE:
  239: 					ZhkAtCmd( "ATE0", 1 );				
813425 A512813266        ECALL   ?L?COM001E
  240: 					InitStatus = MOBILE_STEP3;
81342A 900B2A            MOV     DPTR,#InitStatus
81342D 7403              MOV     A,#03H
81342F         
81342F F0                MOVX    @DPTR,A
  241: 				    GPRSDeadTimer = 0;
813430 E4                CLR     A
813431 900EBB            MOV     DPTR,#GPRSDeadTimer
813434 F0                MOVX    @DPTR,A
  242: 				break;
813435 0235AD            LJMP    ?C0013?MOBILE
  243: 				case ATCMD_ERR_BLOCK:
  244: 				break;
  245: 				case ATCMD_ERR_TIMEOUT:
813438         ?C0027?MOBILE:
  246: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5
813438 900EBB            MOV     DPTR,#GPRSDeadTimer
81343B E0                MOVX    A,@DPTR
81343C C3                CLR     C
81343D 9403              SUBB    A,#03H
81343F 500C              JNC     ?C0028?MOBILE
  247: 					{
  248: 		                GPRSDeadTimer++;
813441 E0                MOVX    A,@DPTR
813442 04                INC     A
813443 F0                MOVX    @DPTR,A
  249: 		                ZhkAtCmd( "AT+IPR=38400", 1 );						
813444 7B80              MOV     R3,#BYTE2 08016C9H
813446 7A16              MOV     R2,#HIGH 08016C9H
813448 79C9              MOV     R1,#LOW 08016C9H
81344A         
  250: 					}
81344A 0235A6            LJMP    ?C0352?MOBILE
81344D         ?C0028?MOBILE:
  251: 					else
  252: 						CmdStatus = ATCMD_ERR_TIMEOUT;
81344D         
  253: 					break;
81344D 023547            LJMP    ?C0347?MOBILE
  254: 				case ATCMD_ERR_ERR:	
813450         ?C0030?MOBILE:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 819


  255: 					ZhkAtCmd( "AT+IPR=38400", 1 );	
813450 7B80              MOV     R3,#BYTE2 08016C9H
813452 7A16              MOV     R2,#HIGH 08016C9H
813454 79C9              MOV     R1,#LOW 08016C9H
813456         
  256: 				break;
813456 0235A6            LJMP    ?C0352?MOBILE
  257: 			}
  258: 		break;
  259: 		case MOBILE_STEP3:
813459         ?C0031?MOBILE:
  260: 			temp = ZhkAtCmdGetErr();
813459 A5128135B1        ECALL   ZhkAtCmdGetErr
81345E 8F2B              MOV     temp,R7
  261: 			switch( temp )
813460 E52B              MOV     A,temp
813462 24FE              ADD     A,#0FEH
813464 6018              JZ      ?C0035?MOBILE
813466 14                DEC     A
813467 602D              JZ      ?C0038?MOBILE
813469 2403              ADD     A,#03H
81346B 6003              JZ      $ + 5H
81346D 0235AD            LJMP    ?C0013?MOBILE
  262: 			{
  263: 				case ATCMD_ERR_NULL:
813470         ?C0033?MOBILE:
  264: 				#ifdef _MOBILE_GPRS		
  265: 					ZhkAtCmd( "AT+CMGF=0", 1 );
  266: 				#endif
  267: 					GPRSDeadTimer = 0;
813470 E4                CLR     A
813471 900EBB            MOV     DPTR,#GPRSDeadTimer
813474 F0                MOVX    @DPTR,A
  268: 					InitStatus = MOBILE_STEP4;
813475 900B2A            MOV     DPTR,#InitStatus
813478 7404              MOV     A,#04H
81347A F0                MOVX    @DPTR,A
  269: 				break;
81347B 0235AD            LJMP    ?C0013?MOBILE
  270: 				case ATCMD_ERR_BLOCK:
  271: 				break;
  272: 				case ATCMD_ERR_TIMEOUT:
81347E         ?C0035?MOBILE:
  273: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5
81347E 900EBB            MOV     DPTR,#GPRSDeadTimer
813481 E0                MOVX    A,@DPTR
813482 C3                CLR     C
813483 9403              SUBB    A,#03H
813485 500C              JNC     ?C0036?MOBILE
  274: 					{
  275: 		                GPRSDeadTimer++;
813487 E0                MOVX    A,@DPTR
813488 04                INC     A
813489 F0                MOVX    @DPTR,A
  276: 		                ZhkAtCmd( "ATE0", 1 );						
81348A 7B80              MOV     R3,#BYTE2 08016D6H
81348C 7A16              MOV     R2,#HIGH 08016D6H
81348E 79D6              MOV     R1,#LOW 08016D6H
813490         
  277: 					}
813490 0235A6            LJMP    ?C0352?MOBILE
813493         ?C0036?MOBILE:
  278: 					else
  279: 						CmdStatus = ATCMD_ERR_TIMEOUT;
813493         
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 820


  280: 					break;
813493 023547            LJMP    ?C0347?MOBILE
  281: 				case ATCMD_ERR_ERR:
813496         ?C0038?MOBILE:
  282: 					ZhkAtCmd( "ATE0", 1 );
813496 7B80              MOV     R3,#BYTE2 08016D6H
813498 7A16              MOV     R2,#HIGH 08016D6H
81349A 79D6              MOV     R1,#LOW 08016D6H
81349C         
  283: 				break;
81349C 0235A6            LJMP    ?C0352?MOBILE
  284: 			}
  285: 		break;
  286: 		case MOBILE_STEP4:
81349F         ?C0039?MOBILE:
  287: 			temp = ZhkAtCmdGetErr();		
81349F A5128135B1        ECALL   ZhkAtCmdGetErr
8134A4 8F2B              MOV     temp,R7
  288: 			switch( temp )
8134A6 E52B              MOV     A,temp
8134A8 24FE              ADD     A,#0FEH
8134AA 6025              JZ      ?C0043?MOBILE
8134AC 14                DEC     A
8134AD 6039              JZ      ?C0046?MOBILE
8134AF 2403              ADD     A,#03H
8134B1 6003              JZ      $ + 5H
8134B3 0235AD            LJMP    ?C0013?MOBILE
  289: 			{
  290: 				case ATCMD_ERR_NULL:				
8134B6         ?C0041?MOBILE:
  291: 				#ifdef _MOBILE_SMS_1	
  292: 					#ifdef SMSENCODE_7_BIT
  293: 						ZhkAtCmd( "AT+CSCS=\"HEX\"", 1 );
8134B6 7B80              MOV     R3,#BYTE2 08016DBH
8134B8 7A16              MOV     R2,#HIGH 08016DBH
8134BA 79DB              MOV     R1,#LOW 08016DBH
8134BC 7D01              MOV     R5,#01H
8134BE A51281326E        ECALL   _ZhkAtCmd
  294: 					#else
  295: 						ZhkAtCmd( "AT+CSCS=\"UCS2\"", 1 );
  296: 					#endif
  297: 				#endif
  298: 					GPRSDeadTimer = 0;
8134C3 E4                CLR     A
8134C4 900EBB            MOV     DPTR,#GPRSDeadTimer
8134C7 F0                MOVX    @DPTR,A
  299: 					InitStatus = MOBILE_STEP5;		
8134C8 900B2A            MOV     DPTR,#InitStatus
8134CB 7405              MOV     A,#05H
8134CD F0                MOVX    @DPTR,A
  300: 				break;
8134CE 0235AD            LJMP    ?C0013?MOBILE
  301: 				case ATCMD_ERR_BLOCK:
  302: 				break;
  303: 				case ATCMD_ERR_TIMEOUT:
8134D1         ?C0043?MOBILE:
  304: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5
8134D1 900EBB            MOV     DPTR,#GPRSDeadTimer
8134D4 E0                MOVX    A,@DPTR
8134D5 C3                CLR     C
8134D6 9403              SUBB    A,#03H
8134D8 500C              JNC     ?C0044?MOBILE
  305: 					{
  306: 		                GPRSDeadTimer++;
8134DA E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 821


8134DB 04                INC     A
8134DC F0                MOVX    @DPTR,A
  307: 		                ZhkAtCmd( "AT+CMGF=0", 1 );						
8134DD 7B80              MOV     R3,#BYTE2 08016E9H
8134DF 7A16              MOV     R2,#HIGH 08016E9H
8134E1 79E9              MOV     R1,#LOW 08016E9H
8134E3         
  308: 					}
8134E3 0235A6            LJMP    ?C0352?MOBILE
8134E6         ?C0044?MOBILE:
  309: 					else
  310: 						CmdStatus = ATCMD_ERR_TIMEOUT;
8134E6         
  311: 					break;
8134E6 805F              SJMP    ?C0347?MOBILE
  312: 				case ATCMD_ERR_ERR:
8134E8         ?C0046?MOBILE:
  313: 					ZhkAtCmd( "AT+CMGF=0", 1 );			
8134E8 7B80              MOV     R3,#BYTE2 08016E9H
8134EA 7A16              MOV     R2,#HIGH 08016E9H
8134EC 79E9              MOV     R1,#LOW 08016E9H
8134EE         
  314: 				break;
8134EE 0235A6            LJMP    ?C0352?MOBILE
  315: 			}
  316: 		break;
  317: 		case MOBILE_STEP5:		
8134F1         ?C0047?MOBILE:
  318: 			temp = ZhkAtCmdGetErr();	
8134F1 A5128135B1        ECALL   ZhkAtCmdGetErr
8134F6 8F2B              MOV     temp,R7
  319: 			switch( temp )
8134F8 E52B              MOV     A,temp
8134FA 24FE              ADD     A,#0FEH
8134FC 6035              JZ      ?C0053?MOBILE
8134FE 14                DEC     A
8134FF 604E              JZ      ?C0056?MOBILE
813501 2403              ADD     A,#03H
813503 6003              JZ      $ + 5H
813505 0235AD            LJMP    ?C0013?MOBILE
  320: 			{
  321: 				case ATCMD_ERR_NULL:
813508         ?C0049?MOBILE:
  322: 					if( LoadPowerDeleAllSMS == 0 )
813508 202D1B            JB      LoadPowerDeleAllSMS,?C0050?MOBILE
  323: 					{
  324: 						ZhkAtCmd( "AT+CMGDA=6", 1 );					
81350B 7B80              MOV     R3,#BYTE2 08016F3H
81350D 7A16              MOV     R2,#HIGH 08016F3H
81350F 79F3              MOV     R1,#LOW 08016F3H
813511 7D01              MOV     R5,#01H
813513 A51281326E        ECALL   _ZhkAtCmd
  325: 						GPRSDeadTimer = 0;
813518 E4                CLR     A
813519 900EBB            MOV     DPTR,#GPRSDeadTimer
81351C F0                MOVX    @DPTR,A
  326: 						InitStatus = MOBILE_STEP6;							
81351D 900B2A            MOV     DPTR,#InitStatus
813520 7406              MOV     A,#06H
813522 F0                MOVX    @DPTR,A
  327: 					}
813523 0235AD            LJMP    ?C0013?MOBILE
813526         ?C0050?MOBILE:
  328: 					else
  329: 					{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 822


  330: 						InitStatus        = MOBILE_BEGIN;
813526 E4                CLR     A
813527 900B2A            MOV     DPTR,#InitStatus
81352A F0                MOVX    @DPTR,A
  331: 						SMSLastErr    = SMS_ERR_NULL;
81352B 900EBC            MOV     DPTR,#SMSLastErr
81352E F0                MOVX    @DPTR,A
  332: 						return MOBILE_FINISH;
81352F 7F10              MOV     R7,#010H
813531 807C              SJMP    ?C0010?MOBILE
  333: 					}
  334: 				break;
  335: 				case ATCMD_ERR_BLOCK:
  336: 				break;
  337: 				case ATCMD_ERR_TIMEOUT:
813533         ?C0053?MOBILE:
  338: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5
813533 900EBB            MOV     DPTR,#GPRSDeadTimer
813536 E0                MOVX    A,@DPTR
813537 C3                CLR     C
813538 9403              SUBB    A,#03H
81353A 500B              JNC     ?C0054?MOBILE
  339: 					{
  340: 		                GPRSDeadTimer++;
81353C E0                MOVX    A,@DPTR
81353D 04                INC     A
81353E F0                MOVX    @DPTR,A
  341: 		            #ifdef SMSENCODE_7_BIT
  342: 						ZhkAtCmd( "AT+CSCS=\"HEX\"", 1 );
81353F 7B80              MOV     R3,#BYTE2 08016DBH
813541 7A16              MOV     R2,#HIGH 08016DBH
813543 79DB              MOV     R1,#LOW 08016DBH
813545         
  343: 					#else
  344: 						ZhkAtCmd( "AT+CSCS=\"UCS2\"", 1 );
  345: 					#endif
  346: 					}
813545 805F              SJMP    ?C0352?MOBILE
813547         ?C0054?MOBILE:
  347: 					else
  348: 						CmdStatus = ATCMD_ERR_TIMEOUT;
813547         
813547 900B2B            MOV     DPTR,#CmdStatus
81354A 7402              MOV     A,#02H
81354C F0                MOVX    @DPTR,A
  349: 				break;
81354D 805E              SJMP    ?C0013?MOBILE
  350: 				case ATCMD_ERR_ERR:
81354F         ?C0056?MOBILE:
  351: 				#ifdef _MOBILE_SMS_1
  352: 					#ifdef SMSENCODE_7_BIT
  353: 						ZhkAtCmd( "AT+CSCS=\"HEX\"", 1 );
81354F 7B80              MOV     R3,#BYTE2 08016DBH
813551 7A16              MOV     R2,#HIGH 08016DBH
813553 79DB              MOV     R1,#LOW 08016DBH
813555         
  354: 					#else
  355: 						ZhkAtCmd( "AT+CSCS=\"UCS2\"", 1 );
  356: 					#endif
  357: 				#endif
  358: 				break;
813555 804F              SJMP    ?C0352?MOBILE
  359: 			}
  360: 		break;	
  361: 		case MOBILE_STEP6:		
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 823


813557         ?C0057?MOBILE:
  362: 			temp = ZhkAtCmdGetErr();	
813557 A5128135B1        ECALL   ZhkAtCmdGetErr
81355C 8F2B              MOV     temp,R7
  363: 			switch( temp )
81355E E52B              MOV     A,temp
813560 24FE              ADD     A,#0FEH
813562 6009              JZ      ?C0061?MOBILE
813564 14                DEC     A
813565 6039              JZ      ?C0064?MOBILE
813567 2403              ADD     A,#03H
813569 7042              JNZ     ?C0013?MOBILE
  364: 			{
  365: 				case ATCMD_ERR_NULL:				
81356B         ?C0059?MOBILE:
  366: 					InitStatus        = MOBILE_BEGIN;
  367: 					SMSLastErr    = SMS_ERR_NULL;
  368: 					LoadPowerDeleAllSMS = 1;
  369: 					memset( NewCommingSmsSit , -1 , sizeof( NewCommingSmsSit ) );
  370: 					return MOBILE_FINISH;			
81356B 8014              SJMP    ?C0351?MOBILE
  371: 				break;
  372: 				case ATCMD_ERR_BLOCK:
  373: 				break;
  374: 				case ATCMD_ERR_TIMEOUT:
81356D         ?C0061?MOBILE:
  375: 					if( GPRSDeadTimer < 3  )  //5
81356D 900EBB            MOV     DPTR,#GPRSDeadTimer
813570 E0                MOVX    A,@DPTR
813571 C3                CLR     C
813572 9403              SUBB    A,#03H
813574 500B              JNC     ?C0062?MOBILE
  376: 					{
  377: 		                GPRSDeadTimer++;
813576 E0                MOVX    A,@DPTR
813577 04                INC     A
813578 F0                MOVX    @DPTR,A
  378: 		            	ZhkAtCmd( "AT+CMGDA=6", 1 );
813579 7B80              MOV     R3,#BYTE2 08016F3H
81357B 7A16              MOV     R2,#HIGH 08016F3H
81357D 79F3              MOV     R1,#LOW 08016F3H
81357F         
  379: 					}
81357F 8025              SJMP    ?C0352?MOBILE
813581         ?C0062?MOBILE:
  380: 					else
  381: 					{
  382: 						InitStatus        = MOBILE_BEGIN;
813581         
813581 E4                CLR     A
813582 900B2A            MOV     DPTR,#InitStatus
813585 F0                MOVX    @DPTR,A
  383: 						SMSLastErr    = SMS_ERR_NULL;
813586 900EBC            MOV     DPTR,#SMSLastErr
813589 F0                MOVX    @DPTR,A
  384: 						LoadPowerDeleAllSMS = 1;
81358A D22D              SETB    LoadPowerDeleAllSMS
  385: 						memset( NewCommingSmsSit , -1 , sizeof( NewCommingSmsSit ) );
81358C FE                MOV     R6,A
81358D 7F10              MOV     R7,#010H
81358F 7DFF              MOV     R5,#0FFH
813591 7B00              MOV     R3,#?C?XDATASEG
813593 7A15              MOV     R2,#HIGH NewCommingSmsSit
813595 7988              MOV     R1,#LOW NewCommingSmsSit
813597 A5128008A6        ECALL   ?C?MEMSET
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 824


  386: 						return MOBILE_FINISH;	
81359C 7F10              MOV     R7,#010H
81359E 800F              SJMP    ?C0010?MOBILE
  387: 					}
  388: 				break;
  389: 				case ATCMD_ERR_ERR:
8135A0         ?C0064?MOBILE:
  390: 					ZhkAtCmd( "AT+CMGDA=6", 1 );
8135A0 7B80              MOV     R3,#BYTE2 08016F3H
8135A2 7A16              MOV     R2,#HIGH 08016F3H
8135A4 79F3              MOV     R1,#LOW 08016F3H
8135A6         
8135A6 7D01              MOV     R5,#01H
8135A8 A51281326E        ECALL   _ZhkAtCmd
  391: 				break;
  392: 			}
  393: 		break;	
  394: 	}
8135AD         ?C0013?MOBILE:
  395: 	return 0;
8135AD 7F00              MOV     R7,#00H
  396: }
8135AF         ?C0010?MOBILE:
8135AF A522              ERET    
----- FUNCTION MobileInitProcess (END) -------


----- FUNCTION ZhkAtCmdGetErr (BEGIN) -----
 FILE: 'mobile.c'
 1693: uchar ZhkAtCmdGetErr( void )
 1694: {
 1695: //	char xdata *p = NULL;
 1696: //	uchar xdata strcode[5];
 1697: //	uchar xdata i = 0;
 1698: //	uchar xdata j = 0;
 1699: 
 1700: 	ZhkMobileSignalIn();
8135B1 A512813953        ECALL   ZhkMobileSignalIn
 1701: 	if ( ! ZhkMobileSecTimer )  
8135B6 E517              MOV     A,ZhkMobileSecTimer
8135B8 700F              JNZ     ?C0298?MOBILE
 1702: 	{
 1703: 		ZhkAtCmdBufWr = 0;
8135BA 901599            MOV     DPTR,#ZhkAtCmdBufWr
8135BD F0                MOVX    @DPTR,A
8135BE A3                INC     DPTR
8135BF F0                MOVX    @DPTR,A
 1704: 		return ZhkAtCmdErr = ATCMD_ERR_TIMEOUT;
8135C0 900EB9            MOV     DPTR,#ZhkAtCmdErr
8135C3 7402              MOV     A,#02H
8135C5 F0                MOVX    @DPTR,A
8135C6 FF                MOV     R7,A
8135C7 8074              SJMP    ?C0299?MOBILE
 1705: 	}
8135C9         ?C0298?MOBILE:
 1706: 	if ( ZhkAtCmdBufWr > 0 )
8135C9 D3                SETB    C
8135CA 90159A            MOV     DPTR,#ZhkAtCmdBufWr+01H
8135CD E0                MOVX    A,@DPTR
8135CE 9400              SUBB    A,#00H
8135D0 901599            MOV     DPTR,#ZhkAtCmdBufWr
8135D3 E0                MOVX    A,@DPTR
8135D4 9400              SUBB    A,#00H
8135D6 4063              JC      ?C0300?MOBILE
 1707: 	{
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 825


 1708: 		ZhkAtCmdBufWr = 0;
8135D8 E4                CLR     A
8135D9 F0                MOVX    @DPTR,A
8135DA A3                INC     DPTR
8135DB F0                MOVX    @DPTR,A
 1709: 		if ( strstr( ZhkAtCmdBuffer , "OK" ) != NULL )
8135DC 7B80              MOV     R3,#BYTE2 0801736H
8135DE 7A17              MOV     R2,#HIGH 0801736H
8135E0 7936              MOV     R1,#LOW 0801736H
8135E2 901D0D            MOV     DPTR,#?_strstr?BYTE+03H
8135E5 A5128007B6        ECALL   ?C?PSTXDATA
8135EA 7B00              MOV     R3,#?C?XDATASEG
8135EC 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
8135EE 7987              MOV     R1,#LOW ZhkAtCmdBuffer
8135F0 A5128018FC        ECALL   _strstr
8135F5 E4                CLR     A
8135F6 F583              MOV     DPH,A
8135F8 F582              MOV     DPL,A
8135FA EB                MOV     A,R3
8135FB 7004              JNZ     ?C0335?MOBILE
8135FD E9                MOV     A,R1
8135FE 7001              JNZ     ?C0335?MOBILE
813600 EA                MOV     A,R2
813601         ?C0335?MOBILE:
813601 6008              JZ      ?C0301?MOBILE
 1710: 		{
 1711: 			return ZhkAtCmdErr = ATCMD_ERR_NULL;
813603 E4                CLR     A
813604 900EB9            MOV     DPTR,#ZhkAtCmdErr
813607 F0                MOVX    @DPTR,A
813608 FF                MOV     R7,A
813609 8032              SJMP    ?C0299?MOBILE
 1712: 		}
81360B         ?C0301?MOBILE:
 1713: 		if ( strstr( ZhkAtCmdBuffer , "ERROR" ) != NULL )
81360B 7B80              MOV     R3,#BYTE2 0801712H
81360D 7A17              MOV     R2,#HIGH 0801712H
81360F 7912              MOV     R1,#LOW 0801712H
813611 901D0D            MOV     DPTR,#?_strstr?BYTE+03H
813614 A5128007B6        ECALL   ?C?PSTXDATA
813619 7B00              MOV     R3,#?C?XDATASEG
81361B 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
81361D 7987              MOV     R1,#LOW ZhkAtCmdBuffer
81361F A5128018FC        ECALL   _strstr
813624 E4                CLR     A
813625 F583              MOV     DPH,A
813627 F582              MOV     DPL,A
813629 EB                MOV     A,R3
81362A 7004              JNZ     ?C0336?MOBILE
81362C E9                MOV     A,R1
81362D 7001              JNZ     ?C0336?MOBILE
81362F EA                MOV     A,R2
813630         ?C0336?MOBILE:
813630 6009              JZ      ?C0300?MOBILE
 1714: 		{
 1715: 			//分析错误码
 1716: /*			if( ( p = strstr( ZhkAtCmdBuffer ,"+CMS ERROR:" ) ) != NULL )
 1717: 			{
 1718: 				memset( strcode, '\0', sizeof( strcode ) );
 1719: 				strcpy( strcode, p + 11 );
 1720: 				i = strlen( strcode ) ;					
 1721: 		//		Trace( "\n strcode = %s", strcode );
 1722: 				for( j = 0; j < i; j++ )
 1723: 				{
 1724: 					if( ( strcode[j] >= 48 ) && ( strcode[j] <=57 ) )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 826


 1725: 						SMSErrorCode = SMSErrorCode * 10 + strcode[j] - 48;								
 1726: 				}
 1727: 		//		Trace( "\n errorcode = %u", SMSErrorCode );
 1728: 			}
 1729: 	*/		return ZhkAtCmdErr = ATCMD_ERR_ERR;
813632 900EB9            MOV     DPTR,#ZhkAtCmdErr
813635 7403              MOV     A,#03H
813637 F0                MOVX    @DPTR,A
813638 FF                MOV     R7,A
813639 8002              SJMP    ?C0299?MOBILE
 1730: 		}
 1731: 	}
81363B         ?C0300?MOBILE:
 1732: 	return ATCMD_ERR_BLOCK;
81363B 7F01              MOV     R7,#01H
 1733: }
81363D         ?C0299?MOBILE:
81363D A522              ERET    
----- FUNCTION ZhkAtCmdGetErr (END) -------


----- FUNCTION _ZhkSerialTxMsg (BEGIN) -----
 FILE: 'serial.c'
  117: uchar ZhkSerialTxMsg( uchar* TxBuf , uint len )
  118: {
81363F 901D0A            MOV     DPTR,#TxBuf
813642 A5128007B6        ECALL   ?C?PSTXDATA
813647 901D0D            MOV     DPTR,#len
81364A EC                MOV     A,R4
81364B F0                MOVX    @DPTR,A
81364C A3                INC     DPTR
81364D ED                MOV     A,R5
81364E F0                MOVX    @DPTR,A
  119: 	if ( len > ZHKSERIALTXBUFLEN ) 
  120: 		return 1;
81364F D3                SETB    C
813650 9480              SUBB    A,#080H
813652 EC                MOV     A,R4
813653 9401              SUBB    A,#01H
813655 4004              JC      ?C0017?SERIAL
  121: 	while ( ! ZhkSerialIsTxBufNull() )
813657 7F01              MOV     R7,#01H
813659 8046              SJMP    ?C0016?SERIAL
81365B         ?C0017?SERIAL:
  122: 			;
81365B A5128136AB        ECALL   ZhkSerialIsTxBufNull
813660 EF                MOV     A,R7
813661 60F8              JZ      ?C0017?SERIAL
813663         ?C0018?SERIAL:
  123: 
  124: //	Trace("\n ZhkSerialTxMsg len = %u", len );
  125: 	memcpy( ZhkSerialTxBuf , TxBuf , len );
813663 901D0D            MOV     DPTR,#len
813666 E0                MOVX    A,@DPTR
813667 FE                MOV     R6,A
813668 A3                INC     DPTR
813669 E0                MOVX    A,@DPTR
81366A FF                MOV     R7,A
81366B 78D4              MOV     R0,#LOW ZhkSerialTxBuf
81366D 7C28              MOV     R4,#HIGH ZhkSerialTxBuf
81366F 7D00              MOV     R5,#?C?XDATASEG
813671 901D0A            MOV     DPTR,#TxBuf
813674 A5128007AC        ECALL   ?C?PLDXDATA
813679 A51280052D        ECALL   ?C?COPY
  126: 	ZhkSerialPutCh( ZhkSerialTxBuf[ 0 ] );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 827


81367E 9028D4            MOV     DPTR,#ZhkSerialTxBuf
813681 E0                MOVX    A,@DPTR
813682 FF                MOV     R7,A
813683 A5128078B5        ECALL   _ZhkSerialPutCh
  127: 	ZhkSerialTxBufRd = 1;
813688 902A56            MOV     DPTR,#ZhkSerialTxBufRd
81368B E4                CLR     A
81368C F0                MOVX    @DPTR,A
81368D A3                INC     DPTR
81368E 04                INC     A
81368F F0                MOVX    @DPTR,A
  128: 	ZhkSerialTxBufWr = len;
813690 901D0D            MOV     DPTR,#len
813693 E0                MOVX    A,@DPTR
813694 FF                MOV     R7,A
813695 A3                INC     DPTR
813696 E0                MOVX    A,@DPTR
813697 902A5A            MOV     DPTR,#ZhkSerialTxBufWr
81369A CF                XCH     A,R7
81369B F0                MOVX    @DPTR,A
81369C A3                INC     DPTR
81369D EF                MOV     A,R7
81369E F0                MOVX    @DPTR,A
  129: 	#ifdef _DEBUG_MOBILE_TRACE
  130: 		for( i = 0 ; i < len ; i ++ )
  131: 			ZhkSerial1PutCh( TxBuf[ i ] );
  132: 	#endif
  133: 	return 0;
81369F 7F00              MOV     R7,#00H
  134: }
8136A1         ?C0016?SERIAL:
8136A1 A522              ERET    
----- FUNCTION _ZhkSerialTxMsg (END) -------


----- FUNCTION WaterKeyEnable (BEGIN) -----
 FILE: 'device.c'
  126: void WaterKeyEnable( void )
  127: {
  128: 	INT0 = 0;
  129: }
8136A3 C2B2              CLR     INT0
  130: 
8136A5 A522              ERET    
----- FUNCTION WaterKeyEnable (END) -------


----- FUNCTION WaterKeyDisable (BEGIN) -----
 FILE: 'device.c'
  132: void WaterKeyDisable( void )
  133: {
  134: 	INT0 = 1;
  135: //	P3 |= 0x04;
8136A7 D2B2              SETB    INT0
  136: }
8136A9 A522              ERET    
----- FUNCTION WaterKeyDisable (END) -------


----- FUNCTION ZhkSerialIsTxBufNull (BEGIN) -----
 FILE: 'serial.c'
  143: uchar ZhkSerialIsTxBufNull( void )
  144: {
  145: 	if  ( ZhkSerialTxBufRd - ZhkSerialTxBufWr == 0 ) 
  146: 		return 1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 828


8136AB 902A5A            MOV     DPTR,#ZhkSerialTxBufWr
8136AE E0                MOVX    A,@DPTR
8136AF FE                MOV     R6,A
8136B0 A3                INC     DPTR
8136B1 E0                MOVX    A,@DPTR
8136B2 FF                MOV     R7,A
8136B3 C3                CLR     C
8136B4 902A57            MOV     DPTR,#ZhkSerialTxBufRd+01H
8136B7 E0                MOVX    A,@DPTR
8136B8 9F                SUBB    A,R7
8136B9 FF                MOV     R7,A
8136BA 902A56            MOV     DPTR,#ZhkSerialTxBufRd
8136BD E0                MOVX    A,@DPTR
8136BE 9E                SUBB    A,R6
8136BF 4F                ORL     A,R7
8136C0 7F00              MOV     R7,#00H
8136C2 7002              JNZ     ?C0021?SERIAL
  147: 	return 0;
8136C4 7F01              MOV     R7,#01H
8136C6         ?C0021?SERIAL:
  148: }
  149: 
8136C6         ?C0022?SERIAL:
8136C6 A522              ERET    
----- FUNCTION ZhkSerialIsTxBufNull (END) -------


----- FUNCTION ZhkMobileInit (BEGIN) -----
 FILE: 'mobile.c'
  580: uchar ZhkMobileInit( void )
  581: {	
  582: 	memset( ZhkAtCmdBuffer, 0, sizeof( ZhkAtCmdBuffer ) );
  583: 	ZhkAtCmdBufWr = 0;
8136C8 7E04              MOV     R6,#04H
8136CA 7F00              MOV     R7,#00H
8136CC 7D00              MOV     R5,#00H
8136CE 7B00              MOV     R3,#?C?XDATASEG
8136D0 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
8136D2 7987              MOV     R1,#LOW ZhkAtCmdBuffer
8136D4 A5128008A6        ECALL   ?C?MEMSET
  584: #ifdef _MOBILE_SMS_1	
8136D9 E4                CLR     A
8136DA 901599            MOV     DPTR,#ZhkAtCmdBufWr
8136DD F0                MOVX    @DPTR,A
8136DE A3                INC     DPTR
8136DF F0                MOVX    @DPTR,A
  585: 	memset( NewCommingSmsSit , -1 , sizeof( NewCommingSmsSit ) );	
8136E0 FE                MOV     R6,A
8136E1 7F10              MOV     R7,#010H
8136E3 7DFF              MOV     R5,#0FFH
8136E5 7B00              MOV     R3,#?C?XDATASEG
8136E7 7A15              MOV     R2,#HIGH NewCommingSmsSit
8136E9 7988              MOV     R1,#LOW NewCommingSmsSit
8136EB A5128008A6        ECALL   ?C?MEMSET
  586: 	ZhkTaskClaim      	= 0;
8136F0 E4                CLR     A
8136F1 900EBA            MOV     DPTR,#ZhkTaskClaim
8136F4 F0                MOVX    @DPTR,A
  587: 	// 短信接收缓冲区
  588: 	memset( &ZhkSmsRxBuf, 0, sizeof( struct SHORTMSG ) * SmsRxMaxNum );
8136F5 7E02              MOV     R6,#02H
8136F7 7F16              MOV     R7,#016H
8136F9 FD                MOV     R5,A
8136FA 7B00              MOV     R3,#?C?XDATASEG
8136FC 7A0E              MOV     R2,#HIGH ZhkSmsRxBuf
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 829


8136FE 79BD              MOV     R1,#LOW ZhkSmsRxBuf
813700 A5128008A6        ECALL   ?C?MEMSET
  589: 	ZhkSmsRxNum = 0;
813705 E4                CLR     A
813706 901587            MOV     DPTR,#ZhkSmsRxNum
813709 F0                MOVX    @DPTR,A
  590: 	
  591: 	// 短信发送缓冲区
  592: 	memset( &ZhkSmsTxBuf, 0, sizeof( struct SHORTMSG ) );
81370A FE                MOV     R6,A
81370B 7FB2              MOV     R7,#0B2H
81370D FD                MOV     R5,A
81370E 7B00              MOV     R3,#?C?XDATASEG
813710 7A10              MOV     R2,#HIGH ZhkSmsTxBuf
813712 79D4              MOV     R1,#LOW ZhkSmsTxBuf
813714 A5128008A6        ECALL   ?C?MEMSET
  593: 	ZhkSmsTxNum = 0;
813719 E4                CLR     A
81371A 901598            MOV     DPTR,#ZhkSmsTxNum
81371D F0                MOVX    @DPTR,A
  594: 	GPRSModuleDeadFlag = 0;
81371E C22C              CLR     GPRSModuleDeadFlag
  595: 	GPRSDeadTimer = 0;
813720 900EBB            MOV     DPTR,#GPRSDeadTimer
813723 F0                MOVX    @DPTR,A
  596: 	ReceiveSMSTimer = 0;			
813724 F519              MOV     ReceiveSMSTimer,A
  597: 	SMSReceiveTime = 0;
813726 9010D3            MOV     DPTR,#SMSReceiveTime
813729 F0                MOVX    @DPTR,A
  598: 	SendSMSTimer = 0;
81372A F510              MOV     SendSMSTimer,A
  599: 	SMSSendTime = 0;
81372C 900EB8            MOV     DPTR,#SMSSendTime
81372F F0                MOVX    @DPTR,A
  600: 	DownMobilePowerFlag = 0;
813730 900EB4            MOV     DPTR,#DownMobilePowerFlag
813733 F0                MOVX    @DPTR,A
  601: 	WaterKeyEnable();
813734 A5128136A3        ECALL   WaterKeyEnable
  602: #endif
  603: 	if( ZhkMobileCurrentTask == MOBILE_NULL )
813739 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
81373C E0                MOVX    A,@DPTR
81373D 7009              JNZ     ?C0114?MOBILE
  604: 	{	
  605: 		ZhkMobileCurrentTask = MOBILE_INIT;	 
81373F 7409              MOV     A,#09H
813741 F0                MOVX    @DPTR,A
  606: 		ZhkGprsLastErr = GPRS_ERR_BLOCK;
813742 900EB7            MOV     DPTR,#ZhkGprsLastErr
813745 7401              MOV     A,#01H
813747 F0                MOVX    @DPTR,A
  607: 	}
813748         ?C0114?MOBILE:
  608: 	//在上电初始化前先等30秒钟
  609: 	GPRSModuleResetTimer = 30;
813748 902DF1            MOV     DPTR,#GPRSModuleResetTimer
81374B E4                CLR     A
81374C F0                MOVX    @DPTR,A
81374D A3                INC     DPTR
81374E 741E              MOV     A,#01EH
813750 F0                MOVX    @DPTR,A
  610: 	LoadPowerDeleAllSMS = 0;
813751 C22D              CLR     LoadPowerDeleAllSMS
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 830


  611: 	return 0;
813753 7F00              MOV     R7,#00H
  612: }
813755         ?C0115?MOBILE:
813755 A522              ERET    
----- FUNCTION ZhkMobileInit (END) -------


----- FUNCTION Ds12887Init (BEGIN) -----
 FILE: 'Ds12887.c'
    5: bit Ds12887Init( void )		small
    6: {
    7: 	XBYTE[ 0x32 ]  = 0x14;
813757 900032            MOV     DPTR,#032H
81375A 7414              MOV     A,#014H
81375C F0                MOVX    @DPTR,A
    8: 	XBYTE[ 0x0B ] |= 0x80;
81375D 90000B            MOV     DPTR,#0BH
813760 E0                MOVX    A,@DPTR
813761 4480              ORL     A,#080H
813763 F0                MOVX    @DPTR,A
    9: 	XBYTE[ 0x01 ]  = 0x00;
813764 900001            MOV     DPTR,#01H
813767 E4                CLR     A
813768 F0                MOVX    @DPTR,A
   10: 	XBYTE[ 0x03 ]  = 0xEF;
813769 900003            MOV     DPTR,#03H
81376C 74EF              MOV     A,#0EFH
81376E F0                MOVX    @DPTR,A
   11: 	XBYTE[ 0x05 ]  = 0xEF;
81376F 900005            MOV     DPTR,#05H
813772 F0                MOVX    @DPTR,A
   12: 	XBYTE[ 0x0B ] &= 0x7F;
813773 90000B            MOV     DPTR,#0BH
813776 E0                MOVX    A,@DPTR
813777 547F              ANL     A,#07FH
813779 F0                MOVX    @DPTR,A
   13: 	XBYTE[ 0x0A ]  = 0x20;
81377A 90000A            MOV     DPTR,#0AH
81377D 7420              MOV     A,#020H
81377F F0                MOVX    @DPTR,A
   14: 	XBYTE[ 0x0B ]  = 0x2A;
813780 A3                INC     DPTR
813781 742A              MOV     A,#02AH
813783 F0                MOVX    @DPTR,A
   15: 	return XBYTE[ 0x0D ] & 0x80;
813784 90000D            MOV     DPTR,#0DH
813787 E0                MOVX    A,@DPTR
813788 33                RLC     A
   16: 	
   17: }
813789         ?C0001?DS12887:
813789 A522              ERET    
----- FUNCTION Ds12887Init (END) -------


----- FUNCTION _ZhkHardSerialSwitch (BEGIN) -----
 FILE: 'device.c'
    9: void ZhkHardSerialSwitch( uchar Route )
   10: {
;---- Variable 'Route' assigned to Register 'R7' ----
   11: //	uchar data P0State;
   12: 	ZhkHardSramSelect();
81378B 759008            MOV     P1,#08H
   13: 	Route              &= 0x07;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 831


81378E EF                MOV     A,R7
81378F 5407              ANL     A,#07H
   14: 	ZhkHardIOOutputReg &= 0xF8;
813791 534EF8            ANL     ZhkHardIOOutputReg,#0F8H
   15: 	ZhkHardIOOutputReg |= Route;
813794 424E              ORL     ZhkHardIOOutputReg,A
   16: 	EA = 0;
813796 C2AF              CLR     EA
   17: 	ZhkHardNullSelect();
813798 759004            MOV     P1,#04H
   18: 	P0 = ZhkHardIOOutputReg;
81379B 854E80            MOV     P0,ZhkHardIOOutputReg
   19: 	ZhkHardIOOutputSelect();
81379E 759014            MOV     P1,#014H
   20: //	P0State = P0;
   21: 	_nop_();
8137A1 00                NOP     
   22: 	_nop_();
8137A2 00                NOP     
   23: 	ZhkHardOutputLock();
8137A3 759008            MOV     P1,#08H
   24: 	EA = 1;
8137A6 D2AF              SETB    EA
   25: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
   26: //	Trace( "P0State=%bxH\n" , P0State );
   27: }
8137A8 A522              ERET    
----- FUNCTION _ZhkHardSerialSwitch (END) -------


----- FUNCTION ZhkHardCoinerDisable (BEGIN) -----
 FILE: 'device.c'
   55: void ZhkHardCoinerDisable( void )
   56: {
   57: 	ZhkHardSramSelect();
   58: 	EA = 0;
8137AA 759008            MOV     P1,#08H
   59: 	ZhkHardIOOutputReg &= ~ BitCoinerEn;
8137AD C2AF              CLR     EA
   60: 	ZhkHardNullSelect();
8137AF 534EEF            ANL     ZhkHardIOOutputReg,#0EFH
   61: 	P0 = ZhkHardIOOutputReg;
8137B2 759004            MOV     P1,#04H
   62: 	ZhkHardIOOutputSelect();
8137B5 854E80            MOV     P0,ZhkHardIOOutputReg
   63: 	ZhkHardOutputLock();
8137B8 759014            MOV     P1,#014H
   64: 	EA = 1;
8137BB 759008            MOV     P1,#08H
   65: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
8137BE D2AF              SETB    EA
   66: //	Trace( "P0State=%bxH\n" , P0State );
   67: 	
   68: }
8137C0 A522              ERET    
----- FUNCTION ZhkHardCoinerDisable (END) -------


----- FUNCTION ZhkHardCoinerEnable (BEGIN) -----
 FILE: 'device.c'
   69: void ZhkHardCoinerEnable( void )
   70: {
   71: 	ZhkHardSramSelect();
   72: 	EA = 0;
8137C2 759008            MOV     P1,#08H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 832


   73: 	ZhkHardIOOutputReg |= BitCoinerEn;
8137C5 C2AF              CLR     EA
   74: 	ZhkHardNullSelect();
8137C7 434E10            ORL     ZhkHardIOOutputReg,#010H
   75: 	P0 = ZhkHardIOOutputReg;
8137CA 759004            MOV     P1,#04H
   76: 	ZhkHardIOOutputSelect();
8137CD 854E80            MOV     P0,ZhkHardIOOutputReg
   77: 	ZhkHardOutputLock();
8137D0 759014            MOV     P1,#014H
   78: 	EA = 1;
8137D3 759008            MOV     P1,#08H
   79: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
8137D6 D2AF              SETB    EA
   80: //	Trace( "P0State=%bxH\n" , P0State );
   81: }
8137D8 A522              ERET    
----- FUNCTION ZhkHardCoinerEnable (END) -------


----- FUNCTION ZhkHardStatusOn (BEGIN) -----
 FILE: 'device.c'
   82: void ZhkHardStatusOn( void )
   83: {
   84: 	ZhkHardSramSelect();
   85: 	EA = 0;
8137DA 759008            MOV     P1,#08H
   86: 	ZhkHardIOOutputReg &= ~ BitStatus;
8137DD C2AF              CLR     EA
   87: 	ZhkHardNullSelect();
8137DF 534EDF            ANL     ZhkHardIOOutputReg,#0DFH
   88: 	P0 = ZhkHardIOOutputReg;
8137E2 759004            MOV     P1,#04H
   89: 	ZhkHardIOOutputSelect();
8137E5 854E80            MOV     P0,ZhkHardIOOutputReg
   90: 	ZhkHardOutputLock();
8137E8 759014            MOV     P1,#014H
   91: 	EA = 1;
8137EB 759008            MOV     P1,#08H
   92: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
8137EE D2AF              SETB    EA
   93: //	Trace( "P0State=%bxH\n" , P0State );
   94: 	
   95: }
8137F0 A522              ERET    
----- FUNCTION ZhkHardStatusOn (END) -------


----- FUNCTION ZhkHardPowerOn (BEGIN) -----
 FILE: 'device.c'
   98: void ZhkHardPowerOn( void )
   99: {
  100: 	ZhkHardSramSelect();
  101: 	EA = 0;
8137F2 759008            MOV     P1,#08H
  102: 	ZhkHardIOOutputReg &= ~ BitPowerCtrl;
8137F5 C2AF              CLR     EA
  103: 	ZhkHardNullSelect();
8137F7 534EBF            ANL     ZhkHardIOOutputReg,#0BFH
  104: 	P0 = ZhkHardIOOutputReg;
8137FA 759004            MOV     P1,#04H
  105: 	ZhkHardIOOutputSelect();
8137FD 854E80            MOV     P0,ZhkHardIOOutputReg
  106: 	ZhkHardOutputLock();
813800 759014            MOV     P1,#014H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 833


  107: 	EA = 1;
813803 759008            MOV     P1,#08H
  108: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
813806 D2AF              SETB    EA
  109: //	Trace( "P0State=%bxH\n" , P0State );
  110: }
813808 A522              ERET    
----- FUNCTION ZhkHardPowerOn (END) -------


----- FUNCTION ZhkHardPowerOff (BEGIN) -----
 FILE: 'device.c'
  112: void ZhkHardPowerOff( void )
  113: {
  114: 	ZhkHardSramSelect();
  115: 	EA = 0;
81380A 759008            MOV     P1,#08H
  116: 	ZhkHardIOOutputReg |= BitPowerCtrl;
81380D C2AF              CLR     EA
  117: 	ZhkHardNullSelect();
81380F 434E40            ORL     ZhkHardIOOutputReg,#040H
  118: 	P0 = ZhkHardIOOutputReg;
813812 759004            MOV     P1,#04H
  119: 	ZhkHardIOOutputSelect();
813815 854E80            MOV     P0,ZhkHardIOOutputReg
  120: 	ZhkHardOutputLock();
813818 759014            MOV     P1,#014H
  121: 	EA = 1;
81381B 759008            MOV     P1,#08H
  122: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
81381E D2AF              SETB    EA
  123: //	Trace( "P0State=%bxH\n" , P0State );
  124: }
813820 A522              ERET    
----- FUNCTION ZhkHardPowerOff (END) -------


----- FUNCTION ZhkSerial1Init (BEGIN) -----
 FILE: 'Serial1.C'
   46: uchar ZhkSerial1Init( void )
   47: {
   48: 	uint data dat;
   49: 	 data ch;
   50: 	S1STAT = 0x20 ; // 区分接收和发送中断
813822 A5758420          MOV     S1STAT,#020H
   51: 	S1CON = 0x00 ; //串口控制寄存器清零
813826 E4                CLR     A
813827 A5F580            MOV     S1CON,A
   52: 	REN_1 = 1 ; //允许接收中断
81382A A5D284            SETB    REN_1
   53: 	{ //进入8 位UART 模式设置
   54: 	SM0_1 = 0 ;
81382D A5C287            CLR     SM0_1
   55: 	SM1_1 = 1 ; //设定串口通讯方式为模式1
813830 A5D286            SETB    SM1_1
   56: 	}
   57: 	if ( ZhkVerifyBit != VERIFY_NULL && ZhkDataBit == 8 )
813833 902D5D            MOV     DPTR,#ZhkSerial1Param+01H
813836 E0                MOVX    A,@DPTR
813837 600A              JZ      ?C0001?SERIAL1
813839 902D5C            MOV     DPTR,#ZhkSerial1Param
81383C E0                MOVX    A,@DPTR
81383D B40803            CJNE    A,#08H,?C0001?SERIAL1
   58: 	{
   59: 		SM0_1 = 1;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 834


813840 A5D287            SETB    SM0_1
   60: 	}
813843         ?C0001?SERIAL1:
   61: 	// ZhkBaudRate 是波特率的 千位数和百位数组成的BCD码 
   62: 	ch       = ZhkBaudRate;
813843 902D60            MOV     DPTR,#ZhkSerial1Param+04H
813846 E0                MOVX    A,@DPTR
813847 752E00            MOV     ch,#00H
81384A F52F              MOV     ch+01H,A
   63: 	if ( ch > 0x99 || ch % 16 > 9 ) return 0 ;
81384C D3                SETB    C
81384D E52F              MOV     A,ch+01H
81384F 9499              SUBB    A,#099H
813851 E52E              MOV     A,ch
813853 6480              XRL     A,#080H
813855 9480              SUBB    A,#080H
813857 5018              JNC     ?C0003?SERIAL1
813859 AE2E              MOV     R6,ch
81385B AF2F              MOV     R7,ch+01H
81385D 7C00              MOV     R4,#00H
81385F 7D10              MOV     R5,#010H
813861 A5128005C5        ECALL   ?C?SIDIV
813866 D3                SETB    C
813867 ED                MOV     A,R5
813868 9409              SUBB    A,#09H
81386A EC                MOV     A,R4
81386B 6480              XRL     A,#080H
81386D 9480              SUBB    A,#080H
81386F 4004              JC      ?C0002?SERIAL1
813871         ?C0003?SERIAL1:
813871 7F00              MOV     R7,#00H
813873 806A              SJMP    ?C0004?SERIAL1
813875         ?C0002?SERIAL1:
   64: 	
   65: 	dat      = ( ch - ch / 16 * 6 ) * 100;
813875 AE2E              MOV     R6,ch
813877 AF2F              MOV     R7,ch+01H
813879 7C00              MOV     R4,#00H
81387B 7D10              MOV     R5,#010H
81387D A5128005C5        ECALL   ?C?SIDIV
813882 7C00              MOV     R4,#00H
813884 7D06              MOV     R5,#06H
813886 A512800559        ECALL   ?C?IMUL
81388B C3                CLR     C
81388C E52F              MOV     A,ch+01H
81388E 9F                SUBB    A,R7
81388F FF                MOV     R7,A
813890 E52E              MOV     A,ch
813892 9E                SUBB    A,R6
813893 FE                MOV     R6,A
813894 7D64              MOV     R5,#064H
813896 A512800559        ECALL   ?C?IMUL
81389B 8E2C              MOV     dat,R6
81389D 8F2D              MOV     dat+01H,R7
   66: 	dat      = OSCRATE / dat - 16;
81389F AB07              MOV     R3,AR7
8138A1 AA06              MOV     R2,AR6
8138A3 E4                CLR     A
8138A4 F9                MOV     R1,A
8138A5 F8                MOV     R0,A
8138A6 FF                MOV     R7,A
8138A7 7EC0              MOV     R6,#0C0H
8138A9 7DA8              MOV     R5,#0A8H
8138AB A512801814        ECALL   ?C?SLDIV
8138B0 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 835


8138B1 24F0              ADD     A,#0F0H
8138B3 F52D              MOV     dat+01H,A
8138B5 EE                MOV     A,R6
8138B6 34FF              ADDC    A,#0FFH
8138B8 F52C              MOV     dat,A
   67: 	BRGCON = 0X00 ; //关闭波特率发生器，从而设置波特率
8138BA E4                CLR     A
8138BB A5F585            MOV     BRGCON,A
   68: 	BRGR1 = dat >> 8 ;
8138BE E52C              MOV     A,dat
8138C0 A5F587            MOV     BRGR1,A
   69: 	BRGR0 = dat & 0x0ff ;
8138C3 E52D              MOV     A,dat+01H
8138C5 A5F586            MOV     BRGR0,A
   70: 	BRGCON = 0X01 ; //开启波特率发生器
8138C8 A5758501          MOV     BRGCON,#01H
   71: 	
   72: 	ES1R = 1 ; // 开放UART1 接收中断
8138CC D2E8              SETB    ES1R
   73: 	TI_1 = 1 ;
8138CE A5D281            SETB    TI_1
   74: 	DelayMs( 3 );
8138D1 7F03              MOV     R7,#03H
8138D3 A512807EAB        ECALL   _DelayMs
   75: 	ZhkSerial1RxBufWd = 0;
8138D8 E4                CLR     A
8138D9 F54C              MOV     ZhkSerial1RxBufWd,A
   76: 	ZhkSerial1RxBufRd = 0;
8138DB F54B              MOV     ZhkSerial1RxBufRd,A
   77: 	return 1;
8138DD 7F01              MOV     R7,#01H
   78: }
8138DF         ?C0004?SERIAL1:
8138DF A522              ERET    
----- FUNCTION ZhkSerial1Init (END) -------


----- FUNCTION ZhkSerial1_Isr (BEGIN) -----
 FILE: 'Serial1.C'
  162: void ZhkSerial1_Isr( void ) interrupt 10 using 1 
8138E1 C0E0              PUSH    ACC
8138E3 C083              PUSH    DPH
8138E5 C082              PUSH    DPL
8138E7 C0D0              PUSH    PSW
  163: {
  164: 	ZhkSaveChipSelect();
8138E9 C090              PUSH    P1
  165: 	ZhkHardSramSelect();
8138EB 759008            MOV     P1,#08H
  166: /*
  167: 	if ( TI_1 )
  168: 	{
  169: 		TI_1 = 0;
  170: 		ZhkSerial1TxdEmpty = 1;
  171: 	}
  172: */
  173: 	if ( RI_1 )
8138EE A530801E          JNB     RI_1,?C0017?SERIAL1
  174: 	{
  175: 		RI_1 = 0;
8138F2 A5C280            CLR     RI_1
  176: 		ZhkSerial1RxBuf[ ZhkSerial1RxBufWd ] = S1BUF;
8138F5 74DC              MOV     A,#LOW ZhkSerial1RxBuf
8138F7 254C              ADD     A,ZhkSerial1RxBufWd
8138F9 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 836


8138FB E4                CLR     A
8138FC 342C              ADDC    A,#HIGH ZhkSerial1RxBuf
8138FE F583              MOV     DPH,A
813900 A5E581            MOV     A,S1BUF
813903 F0                MOVX    @DPTR,A
  177: 		ZhkSerial1RxBufWd ++;
813904 054C              INC     ZhkSerial1RxBufWd
  178: 		if ( ZhkSerial1RxBufWd >= ZHKSERIAL1RXBUFLEN )
813906 E54C              MOV     A,ZhkSerial1RxBufWd
813908 C3                CLR     C
813909 9480              SUBB    A,#080H
81390B 4003              JC      ?C0017?SERIAL1
  179: 			ZhkSerial1RxBufWd = 0;
81390D 754C00            MOV     ZhkSerial1RxBufWd,#00H
  180: 	}
813910         ?C0017?SERIAL1:
  181: 	ZhkLoadChipSelect();
813910 D090              POP     P1
  182: 
  183: }
813912 D0D0              POP     PSW
813914 D082              POP     DPL
813916 D083              POP     DPH
813918 D0E0              POP     ACC
81391A 32                RETI    
----- FUNCTION ZhkSerial1_Isr (END) -------


----- FUNCTION ZhkSerialGetCh (BEGIN) -----
 FILE: 'serial.c'
  107: uchar ZhkSerialGetCh( void )
  108: {
  109: 	uchar data ch;
  110: 	ch = ZhkSerialRxBuf[ ZhkSerialRxBufRd ];
81391B 902A54            MOV     DPTR,#ZhkSerialRxBufRd
81391E E0                MOVX    A,@DPTR
81391F FE                MOV     R6,A
813920 A3                INC     DPTR
813921 E0                MOVX    A,@DPTR
813922 245C              ADD     A,#LOW ZhkSerialRxBuf
813924 F582              MOV     DPL,A
813926 742A              MOV     A,#HIGH ZhkSerialRxBuf
813928 3E                ADDC    A,R6
813929 F583              MOV     DPH,A
81392B E0                MOVX    A,@DPTR
81392C F532              MOV     ch,A
  111: 	ZhkSerialRxBufRd ++;
81392E 902A54            MOV     DPTR,#ZhkSerialRxBufRd
813931 E4                CLR     A
813932 75F001            MOV     B,#01H
813935 A512800600        ECALL   ?C?IILDX
  112: 	if ( ZhkSerialRxBufRd >= ZHKSERIALRXBUFLEN ) ZhkSerialRxBufRd = 0;
81393A C3                CLR     C
81393B 902A55            MOV     DPTR,#ZhkSerialRxBufRd+01H
81393E E0                MOVX    A,@DPTR
81393F 9480              SUBB    A,#080H
813941 902A54            MOV     DPTR,#ZhkSerialRxBufRd
813944 E0                MOVX    A,@DPTR
813945 9401              SUBB    A,#01H
813947 4004              JC      ?C0013?SERIAL
813949 E4                CLR     A
81394A F0                MOVX    @DPTR,A
81394B A3                INC     DPTR
81394C F0                MOVX    @DPTR,A
81394D         ?C0013?SERIAL:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 837


  113: 	ZhkHardSetRTS();
81394D C2B4              CLR     PinRTS
  114: 	return ch;
81394F AF32              MOV     R7,ch
  115: 	
  116: }
813951         ?C0014?SERIAL:
813951 A522              ERET    
----- FUNCTION ZhkSerialGetCh (END) -------


----- FUNCTION ZhkMobileSignalIn (BEGIN) -----
 FILE: 'mobile.c'
  506: void ZhkMobileSignalIn( void )
  507: {
  508: 	#define SMSHEAD  "+CMTI:"			
  509: 	#define GPRSHEAD "+IPD"
  510: 	#define GPRSCLOSE "CLOSED"
  511: 	
  512: //	static uint  xdata CommingMsglen      = 0;
  513: //	static uchar xdata CommingMsgAccepter = 0;
  514: 	// 0 表示无
  515: 	// 1 表示即将受到信息为gprs信息 
  516: 	
  517: 	static uchar MobileMsgTemp[ 512 ];
813953         ?C0095?MOBILE:
  518: 	static uint  i = 0;
  519: 	uchar data j;
  520: 	uchar data num;
  521: //	if ( CommingMsgAccepter == 0 )
  522: 	{
  523: 		while( ! ZhkSerialIsRxBufNull() )
813953 A512813E05        ECALL   ZhkSerialIsRxBufNull
813958 EF                MOV     A,R7
813959 6003              JZ      $ + 5H
81395B 023B2A            LJMP    ?C0112?MOBILE
  524: 		{
  525: 			if ( i >= sizeof( MobileMsgTemp ) )
81395E C3                CLR     C
81395F 900D2C            MOV     DPTR,#i
813962 E0                MOVX    A,@DPTR
813963 9402              SUBB    A,#02H
813965 4004              JC      ?C0097?MOBILE
  526: 		 		i = 0;
813967 E4                CLR     A
813968 F0                MOVX    @DPTR,A
813969 A3                INC     DPTR
81396A F0                MOVX    @DPTR,A
81396B         ?C0097?MOBILE:
  527: 			MobileMsgTemp[ i ++ ] = ZhkSerialGetCh();
81396B A51281391B        ECALL   ZhkSerialGetCh
813970 900D2C            MOV     DPTR,#i
813973 E4                CLR     A
813974 75F001            MOV     B,#01H
813977 A512800617        ECALL   ?C?ILDIX
81397C FC                MOV     R4,A
81397D 742C              MOV     A,#LOW MobileMsgTemp
81397F 25F0              ADD     A,B
813981 F582              MOV     DPL,A
813983 740B              MOV     A,#HIGH MobileMsgTemp
813985 3C                ADDC    A,R4
813986 F583              MOV     DPH,A
813988 EF                MOV     A,R7
813989 F0                MOVX    @DPTR,A
  528: 			MobileMsgTemp[ i ] = '\0';
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 838


81398A 900D2C            MOV     DPTR,#i
81398D E0                MOVX    A,@DPTR
81398E FE                MOV     R6,A
81398F A3                INC     DPTR
813990 E0                MOVX    A,@DPTR
813991 FF                MOV     R7,A
813992 242C              ADD     A,#LOW MobileMsgTemp
813994 F582              MOV     DPL,A
813996 740B              MOV     A,#HIGH MobileMsgTemp
813998 3E                ADDC    A,R6
813999 F583              MOV     DPH,A
81399B E4                CLR     A
81399C F0                MOVX    @DPTR,A
  529: 			if ( ( i >= 2 ) && ( MobileMsgTemp[ i - 2 ] == '\r') && ( MobileMsgTemp[ i - 1 ] == '\n' ) )
81399D C3                CLR     C
81399E EF                MOV     A,R7
81399F 9402              SUBB    A,#02H
8139A1 EE                MOV     A,R6
8139A2 9400              SUBB    A,#00H
8139A4 5003              JNC     $ + 5H
8139A6 023AFB            LJMP    ?C0098?MOBILE
8139A9 742A              MOV     A,#LOW MobileMsgTemp-02H
8139AB 2F                ADD     A,R7
8139AC F582              MOV     DPL,A
8139AE 740B              MOV     A,#HIGH MobileMsgTemp-02H
8139B0 3E                ADDC    A,R6
8139B1 F583              MOV     DPH,A
8139B3 E0                MOVX    A,@DPTR
8139B4 640D              XRL     A,#0DH
8139B6 6003              JZ      $ + 5H
8139B8 023AFB            LJMP    ?C0098?MOBILE
8139BB 900D2C            MOV     DPTR,#i
8139BE E0                MOVX    A,@DPTR
8139BF FE                MOV     R6,A
8139C0 A3                INC     DPTR
8139C1 E0                MOVX    A,@DPTR
8139C2 242B              ADD     A,#LOW MobileMsgTemp-01H
8139C4 F582              MOV     DPL,A
8139C6 740B              MOV     A,#HIGH MobileMsgTemp-01H
8139C8 3E                ADDC    A,R6
8139C9 F583              MOV     DPH,A
8139CB E0                MOVX    A,@DPTR
8139CC 640A              XRL     A,#0AH
8139CE 6003              JZ      $ + 5H
8139D0 023AFB            LJMP    ?C0098?MOBILE
  530: 			{		
  531: 				Trace( "\n rx1: pack = %s ", MobileMsgTemp  );
  532: 				i -= 2;							
8139D3 900D2C            MOV     DPTR,#i
8139D6 74FF              MOV     A,#0FFH
8139D8 75F0FE            MOV     B,#0FEH
8139DB A512800600        ECALL   ?C?IILDX
  533: 				if( ( i > strlen( SMSHEAD )) && ( memcmp( SMSHEAD, MobileMsgTemp, strlen( SMSHEAD ) ) == 0 ))
8139E0 7B80              MOV     R3,#BYTE2 08016FEH
8139E2 7A16              MOV     R2,#HIGH 08016FEH
8139E4 79FE              MOV     R1,#LOW 08016FEH
8139E6 A512800010        ECALL   _strlen
8139EB D3                SETB    C
8139EC 900D2D            MOV     DPTR,#i+01H
8139EF E0                MOVX    A,@DPTR
8139F0 9F                SUBB    A,R7
8139F1 900D2C            MOV     DPTR,#i
8139F4 E0                MOVX    A,@DPTR
8139F5 9E                SUBB    A,R6
8139F6 5003              JNC     $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 839


8139F8 023AB4            LJMP    ?C0099?MOBILE
8139FB 7B80              MOV     R3,#BYTE2 08016FEH
8139FD 7A16              MOV     R2,#HIGH 08016FEH
8139FF 79FE              MOV     R1,#LOW 08016FEH
813A01 A512800010        ECALL   _strlen
813A06 78FE              MOV     R0,#LOW 08016FEH
813A08 7C16              MOV     R4,#HIGH 08016FEH
813A0A 7D80              MOV     R5,#BYTE2 08016FEH
813A0C 7B00              MOV     R3,#?C?XDATASEG
813A0E 7A0B              MOV     R2,#HIGH MobileMsgTemp
813A10 792C              MOV     R1,#LOW MobileMsgTemp
813A12 A51280086D        ECALL   ?C?MEMCMP
813A17 EF                MOV     A,R7
813A18 6003              JZ      $ + 5H
813A1A 023AB4            LJMP    ?C0099?MOBILE
  534: 				{
  535: 		//			Trace( "\n rx1: Find SMSHEAD"  );
  536: 					for( j = sizeof( SMSHEAD ) ; j < i ; j ++ )
813A1D 753007            MOV     j,#07H
813A20         ?C0100?MOBILE:
813A20 D3                SETB    C
813A21 900D2D            MOV     DPTR,#i+01H
813A24 E0                MOVX    A,@DPTR
813A25 9530              SUBB    A,j
813A27 900D2C            MOV     DPTR,#i
813A2A E0                MOVX    A,@DPTR
813A2B 9400              SUBB    A,#00H
813A2D 4018              JC      ?C0101?MOBILE
  537: 						if ( isdigit( MobileMsgTemp[ j ] ) )
813A2F 742C              MOV     A,#LOW MobileMsgTemp
813A31 2530              ADD     A,j
813A33 F582              MOV     DPL,A
813A35 E4                CLR     A
813A36 340B              ADDC    A,#HIGH MobileMsgTemp
813A38 F583              MOV     DPH,A
813A3A E0                MOVX    A,@DPTR
813A3B FF                MOV     R7,A
813A3C A5128019CD        ECALL   _isdigit
813A41 4004              JC      ?C0101?MOBILE
  538: 					 		break;
813A43         ?C0102?MOBILE:
813A43 0530              INC     j
813A45 80D9              SJMP    ?C0100?MOBILE
813A47         ?C0101?MOBILE:
  539: 					num = 0;
813A47 E4                CLR     A
813A48 F531              MOV     num,A
  540: 					for( ; j < i ; j ++ )
813A4A         ?C0104?MOBILE:
813A4A D3                SETB    C
813A4B 900D2D            MOV     DPTR,#i+01H
813A4E E0                MOVX    A,@DPTR
813A4F 9530              SUBB    A,j
813A51 900D2C            MOV     DPTR,#i
813A54 E0                MOVX    A,@DPTR
813A55 9400              SUBB    A,#00H
813A57 4032              JC      ?C0105?MOBILE
  541: 					{
  542: 						if ( ! isdigit( MobileMsgTemp[ j ] ) ) 
813A59 742C              MOV     A,#LOW MobileMsgTemp
813A5B 2530              ADD     A,j
813A5D F582              MOV     DPL,A
813A5F E4                CLR     A
813A60 340B              ADDC    A,#HIGH MobileMsgTemp
813A62 F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 840


813A64 E0                MOVX    A,@DPTR
813A65 FF                MOV     R7,A
813A66 A5128019CD        ECALL   _isdigit
813A6B 501A              JNC     ?C0106?MOBILE
  543: 							continue;					
813A6D         ?C0107?MOBILE:
  544: 						num = num * 10 + MobileMsgTemp[ j ] - '0';
813A6D 742C              MOV     A,#LOW MobileMsgTemp
813A6F 2530              ADD     A,j
813A71 F582              MOV     DPL,A
813A73 E4                CLR     A
813A74 340B              ADDC    A,#HIGH MobileMsgTemp
813A76 F583              MOV     DPH,A
813A78 E0                MOVX    A,@DPTR
813A79 FF                MOV     R7,A
813A7A E531              MOV     A,num
813A7C 75F00A            MOV     B,#0AH
813A7F A4                MUL     AB
813A80 FE                MOV     R6,A
813A81 EF                MOV     A,R7
813A82 2E                ADD     A,R6
813A83 24D0              ADD     A,#0D0H
813A85 F531              MOV     num,A
  545: 					}
813A87         ?C0106?MOBILE:
813A87 0530              INC     j
813A89 80BF              SJMP    ?C0104?MOBILE
813A8B         ?C0105?MOBILE:
  546: 		//			Trace( "\n rx1: num = %bu ", num );
  547: 					for( j = 0 ; j < sizeof( NewCommingSmsSit ) ; j ++ ) 
813A8B E4                CLR     A
813A8C F530              MOV     j,A
813A8E         ?C0108?MOBILE:
  548: 					{
  549: 						if ( NewCommingSmsSit[ j ] == -1 )
813A8E 7488              MOV     A,#LOW NewCommingSmsSit
813A90 2530              ADD     A,j
813A92 F582              MOV     DPL,A
813A94 E4                CLR     A
813A95 3415              ADDC    A,#HIGH NewCommingSmsSit
813A97 F583              MOV     DPH,A
813A99 E0                MOVX    A,@DPTR
813A9A B4FF10            CJNE    A,#0FFH,?C0110?MOBILE
  550: 						{
  551: 							NewCommingSmsSit[ j ] = num;
813A9D 7488              MOV     A,#LOW NewCommingSmsSit
813A9F 2530              ADD     A,j
813AA1 F582              MOV     DPL,A
813AA3 E4                CLR     A
813AA4 3415              ADDC    A,#HIGH NewCommingSmsSit
813AA6 F583              MOV     DPH,A
813AA8 E531              MOV     A,num
813AAA F0                MOVX    @DPTR,A
  552: 			//				Trace( "\n rx1:NewCommingSmsSit[ %bu ] = %bu" , j, NewCommingSmsSit[ j ] );
  553: 				 			break;
813AAB 8007              SJMP    ?C0099?MOBILE
  554: 						}
  555: 					}
813AAD         ?C0110?MOBILE:
813AAD 0530              INC     j
813AAF E530              MOV     A,j
813AB1 B410DA            CJNE    A,#010H,?C0108?MOBILE
  556: 				}				
813AB4         ?C0099?MOBILE:
  557: 				memcpy( ZhkAtCmdBuffer , MobileMsgTemp , i );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 841


813AB4 900D2C            MOV     DPTR,#i
813AB7 E0                MOVX    A,@DPTR
813AB8 FE                MOV     R6,A
813AB9 A3                INC     DPTR
813ABA E0                MOVX    A,@DPTR
813ABB FF                MOV     R7,A
813ABC 7887              MOV     R0,#LOW ZhkAtCmdBuffer
813ABE 7C11              MOV     R4,#HIGH ZhkAtCmdBuffer
813AC0 7D00              MOV     R5,#?C?XDATASEG
813AC2 7B00              MOV     R3,#?C?XDATASEG
813AC4 7A0B              MOV     R2,#HIGH MobileMsgTemp
813AC6 792C              MOV     R1,#LOW MobileMsgTemp
813AC8 A51280052D        ECALL   ?C?COPY
  558: 				ZhkAtCmdBuffer[ i ] = '\0';
813ACD 900D2C            MOV     DPTR,#i
813AD0 E0                MOVX    A,@DPTR
813AD1 FE                MOV     R6,A
813AD2 A3                INC     DPTR
813AD3 E0                MOVX    A,@DPTR
813AD4 FF                MOV     R7,A
813AD5 2487              ADD     A,#LOW ZhkAtCmdBuffer
813AD7 F582              MOV     DPL,A
813AD9 7411              MOV     A,#HIGH ZhkAtCmdBuffer
813ADB 3E                ADDC    A,R6
813ADC F583              MOV     DPH,A
813ADE E4                CLR     A
813ADF F0                MOVX    @DPTR,A
  559: 				ZhkAtCmdBufWr = i;
813AE0 901599            MOV     DPTR,#ZhkAtCmdBufWr
813AE3 EE                MOV     A,R6
813AE4 F0                MOVX    @DPTR,A
813AE5 A3                INC     DPTR
813AE6 EF                MOV     A,R7
813AE7 F0                MOVX    @DPTR,A
  560: 	//			Trace( "\n rx1:%s" , MobileMsgTemp );
  561: 				memset( MobileMsgTemp, 0, sizeof( MobileMsgTemp ) );
813AE8 7E02              MOV     R6,#02H
813AEA 7F00              MOV     R7,#00H
813AEC 7D00              MOV     R5,#00H
813AEE 7B00              MOV     R3,#?C?XDATASEG
813AF0 7A0B              MOV     R2,#HIGH MobileMsgTemp
813AF2 792C              MOV     R1,#LOW MobileMsgTemp
813AF4 A5128008A6        ECALL   ?C?MEMSET
  562: 				i = 0;				
813AF9 8028              SJMP    ?C0357?MOBILE
  563: 				return;				
  564: 			}			
813AFB         ?C0098?MOBILE:
  565: 			if ( MobileMsgTemp[ i - 1 ] == '>' )
813AFB 900D2C            MOV     DPTR,#i
813AFE E0                MOVX    A,@DPTR
813AFF FE                MOV     R6,A
813B00 A3                INC     DPTR
813B01 E0                MOVX    A,@DPTR
813B02 242B              ADD     A,#LOW MobileMsgTemp-01H
813B04 F582              MOV     DPL,A
813B06 740B              MOV     A,#HIGH MobileMsgTemp-01H
813B08 3E                ADDC    A,R6
813B09 F583              MOV     DPH,A
813B0B E0                MOVX    A,@DPTR
813B0C 643E              XRL     A,#03EH
813B0E 6003              JZ      $ + 5H
813B10 023953            LJMP    ?C0095?MOBILE
  566: 			{
  567: 				
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 842


  568: 				ZhkAtCmdBuffer[ 0 ] = '>';
813B13 901187            MOV     DPTR,#ZhkAtCmdBuffer
813B16 743E              MOV     A,#03EH
813B18 F0                MOVX    @DPTR,A
  569: 				ZhkAtCmdBuffer[ 1 ] = '\0';
813B19 E4                CLR     A
813B1A A3                INC     DPTR
813B1B F0                MOVX    @DPTR,A
  570: 				ZhkAtCmdBufWr = 1;
813B1C 901599            MOV     DPTR,#ZhkAtCmdBufWr
813B1F F0                MOVX    @DPTR,A
813B20 A3                INC     DPTR
813B21 04                INC     A
813B22 F0                MOVX    @DPTR,A
  571: 				i = 0;
813B23         
813B23 E4                CLR     A
813B24 900D2C            MOV     DPTR,#i
813B27 F0                MOVX    @DPTR,A
813B28 A3                INC     DPTR
813B29 F0                MOVX    @DPTR,A
  572: 				Trace( "\n rx2: %s" , ZhkAtCmdBuffer );
  573: 				return;
  574: 			} 
  575: 		}
  576: 	}	
  577: }
813B2A         ?C0112?MOBILE:
813B2A A522              ERET    
----- FUNCTION ZhkMobileSignalIn (END) -------


----- FUNCTION ZhkMobileProcess (BEGIN) -----
 FILE: 'mobile.c'
  400: uchar ZhkMobileProcess( void )
  401: {	
  402: 	uchar data i;
  403: 
  404: 	ZhkMobileSignalIn();
813B2C A512813953        ECALL   ZhkMobileSignalIn
  405: 	switch( ZhkMobileCurrentTask )
813B31 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813B34 E0                MOVX    A,@DPTR
813B35 6020              JZ      ?C0071?MOBILE
813B37 24FB              ADD     A,#0FBH
813B39 6024              JZ      ?C0072?MOBILE
813B3B 14                DEC     A
813B3C 6050              JZ      ?C0077?MOBILE
813B3E 24FD              ADD     A,#0FDH
813B40 6003              JZ      $ + 5H
813B42 023C25            LJMP    ?C0091?MOBILE
  406: 	{
  407: 		case MOBILE_INIT:			
813B45         ?C0066?MOBILE:
  408: 			switch( MobileInitProcess() ) 
813B45 A5128132EA        ECALL   MobileInitProcess
813B4A EF                MOV     A,R7
813B4B 24F0              ADD     A,#0F0H
813B4D 24FD              ADD     A,#0FDH
813B4F 5003              JNC     ?C0070?MOBILE
813B51 023C2E            LJMP    ?C0065?MOBILE
  409: 			{
  410: 				Trace( "\n MobileInitProcess end" );
  411: 				case MOBILE_FINISH:					
  412: 				case MOBILE_TIMEOUT:			
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 843


  413: 				case MOBILE_ERROR:
813B54         ?C0070?MOBILE:
  414: 					ZhkMobileCurrentTask = MOBILE_NULL;
  415: 				break;
813B54 023C1E            LJMP    ?C0355?MOBILE
  416: 			}
  417: 		break;
  418: 		case MOBILE_NULL:
813B57         ?C0071?MOBILE:
  419: 			ZhkMobileNullProcess();
813B57 A512813E58        ECALL   ZhkMobileNullProcess
  420: 		break;
813B5C 023C2E            LJMP    ?C0065?MOBILE
  421: 	#ifdef _MOBILE_SMS_1
  422: 		case MOBILE_TXSHORTMSG:
813B5F         ?C0072?MOBILE:
  423: 			switch( ZhkMobileSmsTxProcess() ) 
813B5F A512813C32        ECALL   ZhkMobileSmsTxProcess
813B64 EF                MOV     A,R7
813B65 24EF              ADD     A,#0EFH
813B67 600D              JZ      ?C0075?MOBILE
813B69 14                DEC     A
813B6A 601F              JZ      ?C0076?MOBILE
813B6C 2402              ADD     A,#02H
813B6E 6003              JZ      $ + 5H
813B70 023C2E            LJMP    ?C0065?MOBILE
  424: 			{			
  425: 				case MOBILE_FINISH:
813B73         ?C0074?MOBILE:
  426: 					ZhkMobileCurrentTask = MOBILE_NULL;
813B73         
  427: 				break;
813B73 023C1E            LJMP    ?C0355?MOBILE
  428: 				case MOBILE_TIMEOUT:	
813B76         ?C0075?MOBILE:
  429: 					ZhkSerialPutCh( 0x1A );
813B76 7F1A              MOV     R7,#01AH
813B78 A5128078B5        ECALL   _ZhkSerialPutCh
  430: 					ZhkSerialPutCh( 0x0D );
813B7D 7F0D              MOV     R7,#0DH
813B7F A5128078B5        ECALL   _ZhkSerialPutCh
  431: 					ZhkSerialPutCh( 0x0A );			
813B84 7F0A              MOV     R7,#0AH
813B86 A5128078B5        ECALL   _ZhkSerialPutCh
  432: 			//		Trace("\n MOBILE_TIMEOUT");
  433: 				case MOBILE_ERROR:
813B8B         ?C0076?MOBILE:
  434: 			//		Trace("\n MOBILE_ERROR");									
  435: 					ZhkMobileCurrentTask = MOBILE_NULL;					
813B8B         
  436: 				break;
813B8B 023C1E            LJMP    ?C0355?MOBILE
  437: 			}
  438: 		break;
  439: 		case MOBILE_RXSHORTMSG:
813B8E         ?C0077?MOBILE:
  440: 			if( ReceiveSMSTimer !=  0 )
813B8E E519              MOV     A,ReceiveSMSTimer
813B90 6003              JZ      $ + 5H
813B92 023C2E            LJMP    ?C0065?MOBILE
  441: 				break;
813B95         ?C0078?MOBILE:
  442: 			switch( ZhkMobileSmsRxProcess() ) 
813B95 A512814610        ECALL   ZhkMobileSmsRxProcess
813B9A EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 844


813B9B 24EF              ADD     A,#0EFH
813B9D 603D              JZ      ?C0085?MOBILE
813B9F 14                DEC     A
813BA0 603A              JZ      ?C0085?MOBILE
813BA2 2402              ADD     A,#02H
813BA4 6003              JZ      $ + 5H
813BA6 023C2E            LJMP    ?C0065?MOBILE
  443: 			{
  444: 				case MOBILE_FINISH:	
813BA9         ?C0080?MOBILE:
  445: 					{
  446: 						Trace("\n ZhkMobileProcess SMSIndex OK " );
  447: 						//去掉这条短信标志
  448: 						for( i = 0 ; i < sizeof( NewCommingSmsSit ) - 1 ; i ++ )
813BA9 E4                CLR     A
813BAA F52A              MOV     i,A
813BAC         ?C0081?MOBILE:
  449: 						{
  450: 							NewCommingSmsSit[ i ] = NewCommingSmsSit[ i + 1 ];
813BAC 7489              MOV     A,#LOW NewCommingSmsSit+01H
813BAE 252A              ADD     A,i
813BB0 F582              MOV     DPL,A
813BB2 E4                CLR     A
813BB3 3415              ADDC    A,#HIGH NewCommingSmsSit+01H
813BB5 F583              MOV     DPH,A
813BB7 E0                MOVX    A,@DPTR
813BB8 FF                MOV     R7,A
813BB9 7488              MOV     A,#LOW NewCommingSmsSit
813BBB 252A              ADD     A,i
813BBD F582              MOV     DPL,A
813BBF E4                CLR     A
813BC0 3415              ADDC    A,#HIGH NewCommingSmsSit
813BC2 F583              MOV     DPH,A
813BC4 EF                MOV     A,R7
813BC5 F0                MOVX    @DPTR,A
  451: 						}
813BC6 052A              INC     i
813BC8 E52A              MOV     A,i
813BCA B40FDF            CJNE    A,#0FH,?C0081?MOBILE
813BCD         ?C0082?MOBILE:
  452: 						NewCommingSmsSit[ sizeof( NewCommingSmsSit ) - 1 ] = -1;
813BCD 901597            MOV     DPTR,#NewCommingSmsSit+0FH
813BD0 74FF              MOV     A,#0FFH
813BD2 F0                MOVX    @DPTR,A
  453: 						ReceiveSMSTimer = 0;			
813BD3 E4                CLR     A
813BD4 F519              MOV     ReceiveSMSTimer,A
  454: 						SMSReceiveTime = 0;
813BD6 9010D3            MOV     DPTR,#SMSReceiveTime
813BD9 F0                MOVX    @DPTR,A
  455: 					}
  456: 					ZhkMobileCurrentTask = MOBILE_NULL;			
  457: 				break;	
813BDA 8043              SJMP    ?C0356?MOBILE
  458: 				case MOBILE_TIMEOUT:			
  459: 				case MOBILE_ERROR:					
813BDC         ?C0085?MOBILE:
  460: 					{
  461: 						Trace("\n ZhkMobileProcess  Fail " );
  462: 						Trace("\n ZhkMobileProcess SMSReceiveTime = %bu ", SMSReceiveTime );
  463: 						if( SMSReceiveTime < RETRYTIME )
813BDC 9010D3            MOV     DPTR,#SMSReceiveTime
813BDF E0                MOVX    A,@DPTR
813BE0 C3                CLR     C
813BE1 9405              SUBB    A,#05H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 845


813BE3 5008              JNC     ?C0086?MOBILE
  464: 						{
  465: 							SMSReceiveTime++;
813BE5 E0                MOVX    A,@DPTR
813BE6 04                INC     A
813BE7 F0                MOVX    @DPTR,A
  466: 							ReceiveSMSTimer = INTERVAL_TIME;
813BE8 75191E            MOV     ReceiveSMSTimer,#01EH
  467: 							Trace("\n ZhkMobileProcess ReRead SMS " );
  468: 						}
813BEB 8031              SJMP    ?C0087?MOBILE
813BED         ?C0086?MOBILE:
  469: 						else
  470: 						{
  471: 							//不再重试读取此条短信了
  472: 							for( i = 0 ; i < sizeof( NewCommingSmsSit ) - 1 ; i ++ )							
813BED E4                CLR     A
813BEE F52A              MOV     i,A
813BF0         ?C0088?MOBILE:
  473: 								NewCommingSmsSit[ i ] = NewCommingSmsSit[ i + 1 ];							
813BF0 7489              MOV     A,#LOW NewCommingSmsSit+01H
813BF2 252A              ADD     A,i
813BF4 F582              MOV     DPL,A
813BF6 E4                CLR     A
813BF7 3415              ADDC    A,#HIGH NewCommingSmsSit+01H
813BF9 F583              MOV     DPH,A
813BFB E0                MOVX    A,@DPTR
813BFC FF                MOV     R7,A
813BFD 7488              MOV     A,#LOW NewCommingSmsSit
813BFF 252A              ADD     A,i
813C01 F582              MOV     DPL,A
813C03 E4                CLR     A
813C04 3415              ADDC    A,#HIGH NewCommingSmsSit
813C06 F583              MOV     DPH,A
813C08 EF                MOV     A,R7
813C09 F0                MOVX    @DPTR,A
813C0A 052A              INC     i
813C0C E52A              MOV     A,i
813C0E B40FDF            CJNE    A,#0FH,?C0088?MOBILE
813C11         ?C0089?MOBILE:
  474: 							NewCommingSmsSit[ sizeof( NewCommingSmsSit ) - 1 ] = -1;
813C11 901597            MOV     DPTR,#NewCommingSmsSit+0FH
813C14 74FF              MOV     A,#0FFH
813C16 F0                MOVX    @DPTR,A
  475: 							ReceiveSMSTimer = 0;			
813C17 E4                CLR     A
813C18 F519              MOV     ReceiveSMSTimer,A
  476: 							SMSReceiveTime = 0;	
813C1A 9010D3            MOV     DPTR,#SMSReceiveTime
813C1D F0                MOVX    @DPTR,A
  477: 							Trace("\n ZhkMobileProcess Not Read SMS " );
  478: 						}
813C1E         ?C0087?MOBILE:
  479: 					}
  480: 					ZhkMobileCurrentTask = MOBILE_NULL;
813C1E         
813C1E E4                CLR     A
813C1F         
813C1F 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813C22 F0                MOVX    @DPTR,A
  481: 				break;
813C23 8009              SJMP    ?C0065?MOBILE
  482: 			}
  483: 		break;
  484: 	#endif
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 846


  485: 		default:
813C25         ?C0091?MOBILE:
  486: 			ZhkMobileCurrentTask = MOBILE_NULL;
813C25 E4                CLR     A
813C26 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813C29 F0                MOVX    @DPTR,A
  487: 		return MOBILE_ERROR;
813C2A 7F12              MOV     R7,#012H
813C2C 8002              SJMP    ?C0092?MOBILE
  488: 	}
813C2E         ?C0065?MOBILE:
  489: 	return 0;
813C2E 7F00              MOV     R7,#00H
  490: }
813C30         ?C0092?MOBILE:
813C30 A522              ERET    
----- FUNCTION ZhkMobileProcess (END) -------


----- FUNCTION ZhkMobileSmsTxProcess (BEGIN) -----
 FILE: 'mobile.c'
  736: 	uchar ZhkMobileSmsTxProcess( void )
  737: 	{
  738: 		// AT+CMGS=<length><cr><lf>
  739: 		// waitfor '>'
  740: 		// SendMsg
  741: 		// <^Z><cr><lf>
  742: 		// waitfor OK
  743: 		
  744: 		static uchar xdata MsgTxStatus = MOBILE_BEGIN;
  745: 		static uchar xdata DataTemp[ 384 ];
  746: 		
  747: 		struct SHORTMSG xdata SmsTemp;
  748: 		uchar xdata CmdStr[ 64 ];
  749: 		
  750: 		uchar data temp;
  751: 		uint data len;
  752: 		uchar xdata *p = NULL;
813C32 E4                CLR     A
813C33 901944            MOV     DPTR,#p
813C36 F0                MOVX    @DPTR,A
813C37 A3                INC     DPTR
813C38 F0                MOVX    @DPTR,A
  753: 		
  754: 		switch( MsgTxStatus )
813C39 900D2F            MOV     DPTR,#MsgTxStatus
813C3C E0                MOVX    A,@DPTR
813C3D 14                DEC     A
813C3E 7003              JNZ     $ + 5H
813C40 023CD4            LJMP    ?C0154?MOBILE
813C43 14                DEC     A
813C44 7003              JNZ     $ + 5H
813C46 023D85            LJMP    ?C0161?MOBILE
813C49 2402              ADD     A,#02H
813C4B 6003              JZ      $ + 5H
813C4D 023DF5            LJMP    ?C0167?MOBILE
  755: 		{
  756: 		case MOBILE_BEGIN:			
813C50         ?C0150?MOBILE:
  757: 			if ( ZhkMobileSmsGetTxMsg( &SmsTemp ) )
813C50 7B00              MOV     R3,#?C?XDATASEG
813C52 7A18              MOV     R2,#HIGH SmsTemp
813C54 7952              MOV     R1,#LOW SmsTemp
813C56 A512813E25        ECALL   _ZhkMobileSmsGetTxMsg
813C5B EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 847


813C5C 6007              JZ      ?C0151?MOBILE
  758: 			{
  759: 				ZhkMobileCurrentTask = MOBILE_NULL;
813C5E E4                CLR     A
813C5F 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
  760: 				return MOBILE_FINISH;
813C62 023DAD            LJMP    ?C0360?MOBILE
  761: 			}	
813C65         ?C0151?MOBILE:
  762: 			memset( DataTemp, 0, sizeof( DataTemp ) );
813C65 7E01              MOV     R6,#01H
813C67 7F80              MOV     R7,#080H
813C69 7D00              MOV     R5,#00H
813C6B 7B00              MOV     R3,#?C?XDATASEG
813C6D 7A0D              MOV     R2,#HIGH DataTemp
813C6F 7930              MOV     R1,#LOW DataTemp
813C71 A5128008A6        ECALL   ?C?MEMSET
  763: 			len = ZhkMobileSmsPack( &SmsTemp , DataTemp );	
813C76 7E18              MOV     R6,#HIGH SmsTemp
813C78 7F52              MOV     R7,#LOW SmsTemp
813C7A 7C0D              MOV     R4,#HIGH DataTemp
813C7C 7D30              MOV     R5,#LOW DataTemp
813C7E A5128079BC        ECALL   _ZhkMobileSmsPack
813C83 8E2C              MOV     len,R6
813C85 8F2D              MOV     len+01H,R7
  764: 			if ( len == 0 )
813C87 E52D              MOV     A,len+01H
813C89 452C              ORL     A,len
813C8B 700A              JNZ     ?C0153?MOBILE
  765: 			{
  766: 				ZhkMobileCurrentTask = MOBILE_NULL;
813C8D 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813C90 F0                MOVX    @DPTR,A
  767: 				SMSLastErr = SMS_ERR_NULL;
813C91 900EBC            MOV     DPTR,#SMSLastErr
813C94         
  768: 				return MOBILE_FINISH;
813C94 023DAD            LJMP    ?C0360?MOBILE
  769: 			}
813C97         ?C0153?MOBILE:
  770: 			//发送“发送信息”指令
  771: 			len = sprintf( CmdStr , "AT+CMGS=%d" , len );
813C97 7B80              MOV     R3,#BYTE2 0801705H
813C99 7A17              MOV     R2,#HIGH 0801705H
813C9B 7905              MOV     R1,#LOW 0801705H
813C9D 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
813CA0 A5128007B6        ECALL   ?C?PSTXDATA
813CA5 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
813CA8 E52C              MOV     A,len
813CAA F0                MOVX    @DPTR,A
813CAB A3                INC     DPTR
813CAC E52D              MOV     A,len+01H
813CAE F0                MOVX    @DPTR,A
813CAF 7B00              MOV     R3,#?C?XDATASEG
813CB1 7A19              MOV     R2,#HIGH CmdStr
813CB3 7904              MOV     R1,#LOW CmdStr
813CB5 A512800949        ECALL   _sprintf
813CBA 8E2C              MOV     len,R6
813CBC 8F2D              MOV     len+01H,R7
  772: 			ZhkAtCmd( CmdStr, 1 );
813CBE 7B00              MOV     R3,#?C?XDATASEG
813CC0 7A19              MOV     R2,#HIGH CmdStr
813CC2 7904              MOV     R1,#LOW CmdStr
813CC4 7D01              MOV     R5,#01H
813CC6 A51281326E        ECALL   _ZhkAtCmd
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 848


  773: 			MsgTxStatus       = MOBILE_STEP1;			
813CCB 900D2F            MOV     DPTR,#MsgTxStatus
813CCE 7401              MOV     A,#01H
813CD0 F0                MOVX    @DPTR,A
  774: 			break;	
813CD1 023DFE            LJMP    ?C0149?MOBILE
  775: 		case MOBILE_STEP1:			// 等待提示符	
813CD4         ?C0154?MOBILE:
  776: 			// 阻塞状态直接返回		
  777: 			ZhkMobileSignalIn();
813CD4 A512813953        ECALL   ZhkMobileSignalIn
  778: 			if ( ZhkMobileSecTimer == 0 ) 
813CD9 E517              MOV     A,ZhkMobileSecTimer
813CDB 7023              JNZ     ?C0155?MOBILE
  779: 			{
  780: 				if( ZhkAtCmdBufWr == 0 )
813CDD 901599            MOV     DPTR,#ZhkAtCmdBufWr
813CE0 E0                MOVX    A,@DPTR
813CE1 7002              JNZ     ?C0305?MOBILE
813CE3 A3                INC     DPTR
813CE4 E0                MOVX    A,@DPTR
813CE5         ?C0305?MOBILE:
813CE5 7026              JNZ     ?C0157?MOBILE
  781: 				{
  782: 					MsgTxStatus = MOBILE_BEGIN;					
813CE7 900D2F            MOV     DPTR,#MsgTxStatus
813CEA F0                MOVX    @DPTR,A
  783: 					SMSLastErr  = SMS_ERR_TIMEOUT;
813CEB 900EBC            MOV     DPTR,#SMSLastErr
813CEE 7403              MOV     A,#03H
813CF0 F0                MOVX    @DPTR,A
  784: 					ZhkGprsStatus     = GPRS_STATUS_BREAK;
813CF1 901186            MOV     DPTR,#ZhkGprsStatus
813CF4 7401              MOV     A,#01H
813CF6 F0                MOVX    @DPTR,A
  785: 					Trace("\n ZhkMobileSmsTxProcess MOBILE_STEP1 TIMEOUT ");
  786: 					ZhkAtCmdBufWr = 0;
813CF7 E4                CLR     A
813CF8 901599            MOV     DPTR,#ZhkAtCmdBufWr
813CFB F0                MOVX    @DPTR,A
813CFC A3                INC     DPTR
  787: 					return MOBILE_TIMEOUT;
813CFD 023DCF            LJMP    ?C0361?MOBILE
  788: 				}
  789: 			}
813D00         ?C0155?MOBILE:
  790: 			else if( ZhkAtCmdBufWr == 0 )
813D00 901599            MOV     DPTR,#ZhkAtCmdBufWr
813D03 E0                MOVX    A,@DPTR
813D04 7002              JNZ     ?C0306?MOBILE
813D06 A3                INC     DPTR
813D07 E0                MOVX    A,@DPTR
813D08         ?C0306?MOBILE:
813D08 7003              JNZ     $ + 5H
813D0A 023DFE            LJMP    ?C0149?MOBILE
  791: 				break;
813D0D         ?C0157?MOBILE:
  792: 			ZhkAtCmdBufWr = 0;
813D0D E4                CLR     A
813D0E 901599            MOV     DPTR,#ZhkAtCmdBufWr
813D11 F0                MOVX    @DPTR,A
813D12 A3                INC     DPTR
813D13 F0                MOVX    @DPTR,A
  793: 			// 手机模块正确接受到指令准备接收数据
  794: 			if ( strcmp( ZhkAtCmdBuffer , ">" ) == 0 )
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 849


813D14 7887              MOV     R0,#LOW ZhkAtCmdBuffer
813D16 7C11              MOV     R4,#HIGH ZhkAtCmdBuffer
813D18 7D00              MOV     R5,#?C?XDATASEG
813D1A 7B80              MOV     R3,#BYTE2 0801710H
813D1C 7A17              MOV     R2,#HIGH 0801710H
813D1E 7910              MOV     R1,#LOW 0801710H
813D20 A51280082C        ECALL   ?C?STRCMP
813D25 EF                MOV     A,R7
813D26 7018              JNZ     ?C0159?MOBILE
  795: 			{
  796: 				// 收到提示符，发送短信内容			
  797: 				ZhkAtCmd( DataTemp, 0 );
813D28 7B00              MOV     R3,#?C?XDATASEG
813D2A 7A0D              MOV     R2,#HIGH DataTemp
813D2C 7930              MOV     R1,#LOW DataTemp
813D2E FD                MOV     R5,A
813D2F A51281326E        ECALL   _ZhkAtCmd
  798: 				ZhkMobileSecTimer = ZHKMOBILE_SMS_ACKTIMEOUT;
813D34 751746            MOV     ZhkMobileSecTimer,#046H
  799: 				MsgTxStatus       = MOBILE_STEP2;
813D37 900D2F            MOV     DPTR,#MsgTxStatus
813D3A 7402              MOV     A,#02H
813D3C F0                MOVX    @DPTR,A
  800: 				break;
813D3D 023DFE            LJMP    ?C0149?MOBILE
  801: 			}
813D40         ?C0159?MOBILE:
  802: 			// 指令接受错误
  803: 			if ( strstr( ZhkAtCmdBuffer , "ERROR" ) != NULL )
813D40 7B80              MOV     R3,#BYTE2 0801712H
813D42 7A17              MOV     R2,#HIGH 0801712H
813D44 7912              MOV     R1,#LOW 0801712H
813D46 901D0D            MOV     DPTR,#?_strstr?BYTE+03H
813D49 A5128007B6        ECALL   ?C?PSTXDATA
813D4E 7B00              MOV     R3,#?C?XDATASEG
813D50 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
813D52 7987              MOV     R1,#LOW ZhkAtCmdBuffer
813D54 A5128018FC        ECALL   _strstr
813D59 E4                CLR     A
813D5A F583              MOV     DPH,A
813D5C F582              MOV     DPL,A
813D5E EB                MOV     A,R3
813D5F 7004              JNZ     ?C0307?MOBILE
813D61 E9                MOV     A,R1
813D62 7001              JNZ     ?C0307?MOBILE
813D64 EA                MOV     A,R2
813D65         ?C0307?MOBILE:
813D65 7003              JNZ     $ + 5H
813D67 023DFE            LJMP    ?C0149?MOBILE
  804: 			{
  805: 				ZhkAtCmdGetErr();
813D6A A5128135B1        ECALL   ZhkAtCmdGetErr
  806: 				MsgTxStatus     = MOBILE_BEGIN;				
813D6F E4                CLR     A
813D70 900D2F            MOV     DPTR,#MsgTxStatus
813D73 F0                MOVX    @DPTR,A
  807: 				SMSLastErr    	= SMS_ERR_SENDFAIL;	
813D74 900EBC            MOV     DPTR,#SMSLastErr
813D77 7404              MOV     A,#04H
813D79 F0                MOVX    @DPTR,A
  808: 				ZhkMobileCurrentTask = MOBILE_NULL;
813D7A E4                CLR     A
813D7B 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813D7E F0                MOVX    @DPTR,A
  809: 				ZhkGprsStatus     = GPRS_STATUS_BREAK;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 850


813D7F 901186            MOV     DPTR,#ZhkGprsStatus
813D82 04                INC     A
  810: 				ZhkSmsTxNum --;
  811: 				//分解错误码				
  812: 		/*		if( ( p = strstr( ZhkAtCmdBuffer ,"ERROR:" ) ) != NULL )
  813: 				{					
  814: 					memset( CmdStr, '\0', sizeof( CmdStr ) );
  815: 					strcpy( CmdStr, p + 6 );
  816: 					temp = strlen( CmdStr );	
  817: 					for( len = 0; len < temp; len++ )
  818: 					{
  819: 						if( ( CmdStr[len] >= '0' ) && ( CmdStr[len] <= '9' ) )					
  820: 							SMSErrorCode = SMSErrorCode * 10 + ( CmdStr[len] - '0' );						
  821: 					}
  822: 					Trace( "\n SMSErrorCode1 = %u", SMSErrorCode );
  823: 					if( ( SMSErrorCode == 193 ) || ( SMSErrorCode == 515 ) )
  824: 					{
  825: 						ZhkMobileCurrentTask = MOBILE_NULL;
  826: 						MsgTxStatus       = MOBILE_BEGIN;				
  827: 						SMSLastErr  = SMS_ERR_TIMEOUT;
  828: 						ZhkGprsStatus     = GPRS_STATUS_BREAK;
  829: 						return MOBILE_TIMEOUT;
  830: 					}
  831: 				}*/
  832: 				return MOBILE_ERROR;
813D83 8068              SJMP    ?C0362?MOBILE
  833: 			}			
  834: 			break;	
  835: 		case MOBILE_STEP2:			// 等待OK
813D85         ?C0161?MOBILE:
  836: 			temp = ZhkAtCmdGetErr();
813D85 A5128135B1        ECALL   ZhkAtCmdGetErr
813D8A 8F2B              MOV     temp,R7
  837: 			switch( temp )
813D8C E52B              MOV     A,temp
813D8E 24FE              ADD     A,#0FEH
813D90 6020              JZ      ?C0165?MOBILE
813D92 14                DEC     A
813D93 603F              JZ      ?C0166?MOBILE
813D95 2403              ADD     A,#03H
813D97 7065              JNZ     ?C0149?MOBILE
  838: 			{
  839: 			case ATCMD_ERR_NULL:
813D99         ?C0163?MOBILE:
  840: 				// 发送成功
  841: 				MsgTxStatus       = MOBILE_BEGIN;
813D99 E4                CLR     A
813D9A 900D2F            MOV     DPTR,#MsgTxStatus
813D9D F0                MOVX    @DPTR,A
  842: 				ZhkMobileCurrentTask = MOBILE_NULL;
813D9E 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813DA1 F0                MOVX    @DPTR,A
  843: 				SMSLastErr    	= SMS_ERR_SEND_SUCCEED;
813DA2 900EBC            MOV     DPTR,#SMSLastErr
813DA5 7407              MOV     A,#07H
813DA7 F0                MOVX    @DPTR,A
  844: 				ZhkSmsTxNum --;
813DA8 901598            MOV     DPTR,#ZhkSmsTxNum
813DAB E0                MOVX    A,@DPTR
813DAC 14                DEC     A
813DAD         
813DAD F0                MOVX    @DPTR,A
  845: 				return MOBILE_FINISH;
813DAE 7F10              MOV     R7,#010H
813DB0 8051              SJMP    ?C0152?MOBILE
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 851


  846: 			case ATCMD_ERR_BLOCK:
  847: 				// 阻塞状态直接返回
  848: 				break;						
  849: 			case ATCMD_ERR_TIMEOUT:
813DB2         ?C0165?MOBILE:
  850: 				// 短信超时处理
  851: 				ZhkMobileCurrentTask = MOBILE_NULL;
813DB2 E4                CLR     A
813DB3 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813DB6 F0                MOVX    @DPTR,A
  852: 				MsgTxStatus       = MOBILE_BEGIN;				
813DB7 900D2F            MOV     DPTR,#MsgTxStatus
813DBA F0                MOVX    @DPTR,A
  853: 				SMSLastErr  = SMS_ERR_TIMEOUT;
813DBB 900EBC            MOV     DPTR,#SMSLastErr
813DBE 7403              MOV     A,#03H
813DC0 F0                MOVX    @DPTR,A
  854: 				ZhkGprsStatus     = GPRS_STATUS_BREAK;
813DC1 901186            MOV     DPTR,#ZhkGprsStatus
813DC4 7401              MOV     A,#01H
813DC6 F0                MOVX    @DPTR,A
  855: 				SMSErrorCode = 60;
813DC7 900EB2            MOV     DPTR,#SMSErrorCode
813DCA E4                CLR     A
813DCB F0                MOVX    @DPTR,A
813DCC A3                INC     DPTR
813DCD 743C              MOV     A,#03CH
813DCF         
813DCF F0                MOVX    @DPTR,A
  856: 				Trace("\n MOBILE_STEP2 TIMEOUT ");
  857: 				return MOBILE_TIMEOUT;
813DD0 7F11              MOV     R7,#011H
813DD2 802F              SJMP    ?C0152?MOBILE
  858: 			case ATCMD_ERR_ERR:
813DD4         ?C0166?MOBILE:
  859: 				// 发送失败
  860: 				////////////////////////////
  861: 				//分解错误码				
  862: 			/*	if( ( p = strstr( ZhkAtCmdBuffer ,"ERROR:" ) ) != NULL )
  863: 				{					
  864: 					memset( CmdStr, '\0', sizeof( CmdStr ) );
  865: 					strcpy( CmdStr, p + 6 );
  866: 					temp = strlen( CmdStr );	
  867: 					for( len = 0; len < temp; len++ )
  868: 					{
  869: 						if( ( CmdStr[len] >= '0' ) && ( CmdStr[len] <= '9' ) )					
  870: 							SMSErrorCode = SMSErrorCode * 10 + ( CmdStr[len] - '0' );						
  871: 					}
  872: 					Trace( "\n SMSErrorCode2 = %u", SMSErrorCode );
  873: 					if( ( SMSErrorCode == 193 ) || ( SMSErrorCode == 515 ) )
  874: 					{
  875: 						ZhkMobileCurrentTask = MOBILE_NULL;
  876: 						MsgTxStatus       = MOBILE_BEGIN;				
  877: 						SMSLastErr  = SMS_ERR_TIMEOUT;
  878: 						ZhkGprsStatus     = GPRS_STATUS_BREAK;
  879: 						return MOBILE_TIMEOUT;
  880: 					}
  881: 				}*/
  882: 				/////////////////////////////
  883: 				ZhkAtCmdGetErr();
813DD4 A5128135B1        ECALL   ZhkAtCmdGetErr
  884: 				ZhkMobileCurrentTask = MOBILE_NULL;
813DD9 E4                CLR     A
813DDA 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813DDD F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 852


  885: 				MsgTxStatus     = MOBILE_BEGIN;					
813DDE 900D2F            MOV     DPTR,#MsgTxStatus
813DE1 F0                MOVX    @DPTR,A
  886: 				SMSLastErr    	= SMS_ERR_SENDFAIL;	
813DE2 900EBC            MOV     DPTR,#SMSLastErr
813DE5 7404              MOV     A,#04H
813DE7 F0                MOVX    @DPTR,A
  887: 				ZhkGprsStatus     = GPRS_STATUS_BREAK;
813DE8 901186            MOV     DPTR,#ZhkGprsStatus
813DEB 7401              MOV     A,#01H
813DED         
813DED F0                MOVX    @DPTR,A
  888: 				ZhkSmsTxNum --;
813DEE 901598            MOV     DPTR,#ZhkSmsTxNum
813DF1 E0                MOVX    A,@DPTR
813DF2 14                DEC     A
  889: 				return MOBILE_ERROR;
813DF3 8004              SJMP    ?C0363?MOBILE
  890: 			}
  891: 			break;	
  892: 		default:
813DF5         ?C0167?MOBILE:
  893: 			MsgTxStatus       = MOBILE_BEGIN;
813DF5 E4                CLR     A
813DF6 900D2F            MOV     DPTR,#MsgTxStatus
813DF9         
813DF9 F0                MOVX    @DPTR,A
  894: 			return MOBILE_ERROR;
813DFA 7F12              MOV     R7,#012H
813DFC 8005              SJMP    ?C0152?MOBILE
  895: 		}
813DFE         ?C0149?MOBILE:
  896: 		return MsgTxStatus;
813DFE 900D2F            MOV     DPTR,#MsgTxStatus
813E01 E0                MOVX    A,@DPTR
813E02 FF                MOV     R7,A
  897: 	}
813E03         ?C0152?MOBILE:
813E03 A522              ERET    
----- FUNCTION ZhkMobileSmsTxProcess (END) -------


----- FUNCTION ZhkSerialIsRxBufNull (BEGIN) -----
 FILE: 'serial.c'
  136: uchar ZhkSerialIsRxBufNull( void )
  137: {
  138: 	if ( ZhkSerialRxBufRd - ZhkSerialRxBufWr == 0 ) 
  139: 		return 1;
813E05 902A58            MOV     DPTR,#ZhkSerialRxBufWr
813E08 E0                MOVX    A,@DPTR
813E09 FE                MOV     R6,A
813E0A A3                INC     DPTR
813E0B E0                MOVX    A,@DPTR
813E0C FF                MOV     R7,A
813E0D C3                CLR     C
813E0E 902A55            MOV     DPTR,#ZhkSerialRxBufRd+01H
813E11 E0                MOVX    A,@DPTR
813E12 9F                SUBB    A,R7
813E13 FF                MOV     R7,A
813E14 902A54            MOV     DPTR,#ZhkSerialRxBufRd
813E17 E0                MOVX    A,@DPTR
813E18 9E                SUBB    A,R6
813E19 4F                ORL     A,R7
813E1A 7004              JNZ     ?C0019?SERIAL
  140: 	_nop_();
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 853


813E1C 7F01              MOV     R7,#01H
813E1E 8003              SJMP    ?C0020?SERIAL
813E20         ?C0019?SERIAL:
  141: 	return 0;
813E20 00                NOP     
  142: }
813E21 7F00              MOV     R7,#00H
  143: uchar ZhkSerialIsTxBufNull( void )
813E23         ?C0020?SERIAL:
813E23 A522              ERET    
----- FUNCTION ZhkSerialIsRxBufNull (END) -------


----- FUNCTION _ZhkMobileSmsGetTxMsg (BEGIN) -----
 FILE: 'mobile.c'
 1108: 	uchar ZhkMobileSmsGetTxMsg( struct SHORTMSG* Msg )
 1109: 	{
813E25 901946            MOV     DPTR,#Msg
813E28 A5128007B6        ECALL   ?C?PSTXDATA
 1110: 		if ( ZhkSmsTxNum == 0) 
 1111: 			return 1;
813E2D 901598            MOV     DPTR,#ZhkSmsTxNum
813E30 E0                MOVX    A,@DPTR
813E31 7004              JNZ     ?C0217?MOBILE
 1112: 		memcpy( Msg , &ZhkSmsTxBuf, sizeof( struct SHORTMSG ) );
813E33 7F01              MOV     R7,#01H
813E35 801F              SJMP    ?C0218?MOBILE
813E37         ?C0217?MOBILE:
 1113: 	//	ZhkSmsTxNum --;
813E37 901946            MOV     DPTR,#Msg
813E3A A5128007AC        ECALL   ?C?PLDXDATA
813E3F A801              MOV     R0,AR1
813E41 AC02              MOV     R4,AR2
813E43 AD03              MOV     R5,AR3
813E45 7B00              MOV     R3,#?C?XDATASEG
813E47 7A10              MOV     R2,#HIGH ZhkSmsTxBuf
813E49 79D4              MOV     R1,#LOW ZhkSmsTxBuf
813E4B 7E00              MOV     R6,#00H
813E4D 7FB2              MOV     R7,#0B2H
813E4F A51280052D        ECALL   ?C?COPY
 1114: 		return 0;
813E54 7F00              MOV     R7,#00H
 1115: 	}
813E56         ?C0218?MOBILE:
813E56 A522              ERET    
----- FUNCTION _ZhkMobileSmsGetTxMsg (END) -------


----- FUNCTION ZhkMobileNullProcess (BEGIN) -----
 FILE: 'mobile.c'
  123: uchar ZhkMobileNullProcess( void )
  124: {
  125: 	if ( ZhkTaskClaim & ZHKTASKCLAIM_TXSMSG )
  126: 	{
813E58 900EBA            MOV     DPTR,#ZhkTaskClaim
813E5B E0                MOVX    A,@DPTR
813E5C FF                MOV     R7,A
813E5D 30E416            JNB     ACC.4,?C0001?MOBILE
  127: 		ZhkMobileCurrentTask  = MOBILE_TXSHORTMSG;
  128: 		ZhkTaskClaim   &= ~ZHKTASKCLAIM_TXSMSG;		
813E60 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813E63 7405              MOV     A,#05H
813E65 F0                MOVX    @DPTR,A
  129: 		SMSLastErr = SMS_ERR_NULL;
813E66 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 854


813E67 54EF              ANL     A,#0EFH
813E69 900EBA            MOV     DPTR,#ZhkTaskClaim
813E6C F0                MOVX    @DPTR,A
  130: 		return ZhkMobileCurrentTask;
813E6D E4                CLR     A
813E6E 900EBC            MOV     DPTR,#SMSLastErr
813E71 F0                MOVX    @DPTR,A
  131: 	}
813E72 7F05              MOV     R7,#05H
813E74 8023              SJMP    ?C0002?MOBILE
  132: 
813E76         ?C0001?MOBILE:
  133: 	if( ( NewCommingSmsSit[ 0 ] != -1 ) && ( ZhkSmsRxNum < SmsRxMaxNum ) )
813E76 901588            MOV     DPTR,#NewCommingSmsSit
813E79 E0                MOVX    A,@DPTR
813E7A F4                CPL     A
813E7B 601A              JZ      ?C0003?MOBILE
813E7D 901587            MOV     DPTR,#ZhkSmsRxNum
813E80 E0                MOVX    A,@DPTR
813E81 C3                CLR     C
813E82 9403              SUBB    A,#03H
813E84 5011              JNC     ?C0003?MOBILE
  134: 	{
  135: 		Trace("\n ZhkMobileNullProcess ZhkSmsRxNum = %bu", ZhkSmsRxNum ); 		
  136: 		if( ReceiveSMSTimer != 0  )
813E86 E519              MOV     A,ReceiveSMSTimer
813E88 6004              JZ      ?C0004?MOBILE
  137: 			return 0;
813E8A 7F00              MOV     R7,#00H
813E8C 800B              SJMP    ?C0002?MOBILE
813E8E         ?C0004?MOBILE:
  138: 		Trace("\n ZhkMobileNullProcess = MOBILE_RXSHORTMSG ");
  139: 		ZhkMobileCurrentTask  = MOBILE_RXSHORTMSG;		
813E8E 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
813E91 7406              MOV     A,#06H
813E93 F0                MOVX    @DPTR,A
  140: 		return ZhkMobileCurrentTask;
813E94 FF                MOV     R7,A
813E95 8002              SJMP    ?C0002?MOBILE
  141: 	}
813E97         ?C0003?MOBILE:
  142: 	return 0;
813E97 7F00              MOV     R7,#00H
  143: }
813E99         ?C0002?MOBILE:
813E99 A522              ERET    
----- FUNCTION ZhkMobileNullProcess (END) -------


----- FUNCTION _ZhkChkAddr (BEGIN) -----
 FILE: 'procotol.c'
  536: unsigned char ZhkChkAddr( unsigned char Addr )
  537: {
;---- Variable 'Addr' assigned to Register 'R7' ----
  538: 	switch( Addr )
  539: 	{
813E9B EF                MOV     A,R7
813E9C A5128007CD        ECALL   ?C?CCASEX
813EA1 3EE1              DW      ?C0096?PROCOTOL
813EA3 00                DB      00H
813EA4 3EE1              DW      ?C0096?PROCOTOL
813EA6 01                DB      01H
813EA7 3EE1              DW      ?C0096?PROCOTOL
813EA9 02                DB      02H
813EAA 3EE1              DW      ?C0096?PROCOTOL
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 855


813EAC 03                DB      03H
813EAD 3EE1              DW      ?C0096?PROCOTOL
813EAF 04                DB      04H
813EB0 3EE1              DW      ?C0096?PROCOTOL
813EB2 05                DB      05H
813EB3 3EE1              DW      ?C0096?PROCOTOL
813EB5 06                DB      06H
813EB6 3EE1              DW      ?C0096?PROCOTOL
813EB8 07                DB      07H
813EB9 3EE5              DW      ?C0098?PROCOTOL
813EBB 09                DB      09H
813EBC 3EE9              DW      ?C0099?PROCOTOL
813EBE 0A                DB      0AH
813EBF 3EED              DW      ?C0100?PROCOTOL
813EC1 0B                DB      0BH
813EC2 3EF1              DW      ?C0101?PROCOTOL
813EC4 0C                DB      0CH
813EC5 3EF5              DW      ?C0102?PROCOTOL
813EC7 0D                DB      0DH
813EC8 3EF9              DW      ?C0106?PROCOTOL
813ECA 10                DB      010H
813ECB 3EF9              DW      ?C0106?PROCOTOL
813ECD 11                DB      011H
813ECE 3EF9              DW      ?C0106?PROCOTOL
813ED0 12                DB      012H
813ED1 3EF9              DW      ?C0106?PROCOTOL
813ED3 13                DB      013H
813ED4 3F05              DW      ?C0109?PROCOTOL
813ED6 15                DB      015H
813ED7 3EFD              DW      ?C0107?PROCOTOL
813ED9 7E                DB      07EH
813EDA 3F01              DW      ?C0108?PROCOTOL
813EDC 7F                DB      07FH
813EDD 0000              DW      00H
813EDF 3F09              DW      ?C0111?PROCOTOL
  540: 	case ID_HOPPER1:
  541: 	case ID_HOPPER2:
  542: 	case ID_HOPPER3:
  543: 	case ID_HOPPER4:
  544: 	case ID_HOPPER5:
  545: 	case ID_HOPPER6:
  546: 	case ID_HOPPER7:
  547: 	case ID_HOPPER8:
  548: 		return EQUIP_HOPPER;
813EE1         ?C0096?PROCOTOL:
  549: //	case ID_HUB:
813EE1 7F08              MOV     R7,#08H
813EE3 8026              SJMP    ?C0097?PROCOTOL
  550: //		return EQUIP_HUB;
  551: 	case ID_LCD:
813EE5         ?C0098?PROCOTOL:
  552: 		return EQUIP_LCD;
813EE5 7F07              MOV     R7,#07H
813EE7 8022              SJMP    ?C0097?PROCOTOL
  553: 	case ID_POWER:
813EE9         ?C0099?PROCOTOL:
  554: 		return EQUIP_POWER;
813EE9 7F04              MOV     R7,#04H
813EEB 801E              SJMP    ?C0097?PROCOTOL
  555: 	case ID_MODE:
813EED         ?C0100?PROCOTOL:
  556: 		return EQUIP_MODE;
813EED 7F05              MOV     R7,#05H
813EEF 801A              SJMP    ?C0097?PROCOTOL
  557: 	case ID_PRN:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 856


813EF1         ?C0101?PROCOTOL:
  558: 		return EQUIP_PRN;
813EF1 7F06              MOV     R7,#06H
813EF3 8016              SJMP    ?C0097?PROCOTOL
  559: 	case ID_CASHER:
813EF5         ?C0102?PROCOTOL:
  560: 		return EQUIP_CASHER;
813EF5 7F02              MOV     R7,#02H
813EF7 8012              SJMP    ?C0097?PROCOTOL
  561: 	case ID_COINER1:
  562: 	case ID_COINER2:
  563: 	case ID_COINER3:
  564: 	case ID_COINER4:
813EF9         ?C0106?PROCOTOL:
  565: 		return EQUIP_COINER;
813EF9 7F03              MOV     R7,#03H
813EFB 800E              SJMP    ?C0097?PROCOTOL
  566: 	case ID_MESSAGER:
813EFD         ?C0107?PROCOTOL:
  567: 		return EQUIP_MESSAGER;
813EFD 7F0B              MOV     R7,#0BH
813EFF 800A              SJMP    ?C0097?PROCOTOL
  568: 	case ID_SERVER:
813F01         ?C0108?PROCOTOL:
  569: 		return EQUIP_SEVER;
813F01 7F0A              MOV     R7,#0AH
813F03 8006              SJMP    ?C0097?PROCOTOL
  570: 	case ID_CHANNEL:
813F05         ?C0109?PROCOTOL:
  571: 		return EQUIP_CHANNEL;
813F05 7F0D              MOV     R7,#0DH
813F07 8002              SJMP    ?C0097?PROCOTOL
  572: //	case ID_LEDSCR:
  573: //		return EQUIP_LEDSCR;
  574: 	case ID_NULL:
  575: 	default:
813F09         ?C0111?PROCOTOL:
  576: 		return EQUIP_NULL;
813F09 7F00              MOV     R7,#00H
  577: 	}
  578: }
813F0B         ?C0097?PROCOTOL:
813F0B A522              ERET    
----- FUNCTION _ZhkChkAddr (END) -------


----- FUNCTION DoCommunication (BEGIN) -----
 FILE: 'CommModule.c'
   19: void DoCommunication()
   20: {		
   21: 	switch( g_byCommRunningStatus )
   22: 	{
813F0D E54F              MOV     A,g_byCommRunningStatus
813F0F 14                DEC     A
813F10 6011              JZ      ?C0003?COMMMODULE
813F12 24F0              ADD     A,#0F0H
813F14 6016              JZ      ?C0004?COMMMODULE
813F16 2411              ADD     A,#011H
813F18 7019              JNZ     ?C0001?COMMMODULE
   23: 	case STA_COMM_MODULE_INIT:
   24: 		g_byCommRunningStatus = staCommModuleInit();
813F1A         ?C0002?COMMMODULE:
   25: 		break;
813F1A A51281403F        ECALL   staCommModuleInit
813F1F 8F4F              MOV     g_byCommRunningStatus,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 857


   26: 	//检查通讯状态
813F21 8010              SJMP    ?C0001?COMMMODULE
   27: 	case STA_CHECK_COMM_STATUS:
813F23         ?C0003?COMMMODULE:
   28: 		g_byCommRunningStatus = staCheckCommStatus();
813F23 A51281416B        ECALL   staCheckCommStatus
813F28 8F4F              MOV     g_byCommRunningStatus,R7
   29: 		break;	
813F2A 8007              SJMP    ?C0001?COMMMODULE
   30: 	//检查发送结果
   31: 	case STA_CHECK_SMS_SEND_RESULT:
813F2C         ?C0004?COMMMODULE:
   32: 		g_byCommRunningStatus = staCheckSMSSendResult();
813F2C A512814082        ECALL   staCheckSMSSendResult
813F31 8F4F              MOV     g_byCommRunningStatus,R7
   33: 		break;
   34: 	}
813F33         ?C0001?COMMMODULE:
   35: #ifdef PRINT_TRACE
   36: 	ZhkSerial1Printf( "DoCommunication -> %bd\n", g_byCommRunningStatus );
   37: #endif
   38: 	commDoSendSMS();
813F33 A502813F38        EJMP    commDoSendSMS
----- FUNCTION DoCommunication (END) -------


----- FUNCTION commDoSendSMS (BEGIN) -----
 FILE: 'CommModule.c'
  297: 	void commDoSendSMS()
  298: 	{
  299: 		struct SHORTMSG xdata struSMS;	
  300: 
  301: 		if( g_SMSCommModuleInfo.m_byCommStatus != COMM_STATUS_OK )
813F38 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813F3B E0                MOVX    A,@DPTR
813F3C 6404              XRL     A,#04H
813F3E 6003              JZ      $ + 5H
813F40 023FCB            LJMP    ?C0055?COMMMODULE
  302: 		{
  303: 		//	Trace("\n commDoSendSMS SENDING");
  304: 			return;
  305: 		}	
813F43         ?C0054?COMMMODULE:
  306: 
  307: 		if( !g_SMSCommModuleInfo.m_SMSBuffer.m_byCount || !SystemParameter.GSMNO[ 0 ] )		
813F43 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
813F46 E0                MOVX    A,@DPTR
813F47 7003              JNZ     $ + 5H
813F49 023FCB            LJMP    ?C0055?COMMMODULE
813F4C 900436            MOV     DPTR,#SystemParameter+016H
813F4F E0                MOVX    A,@DPTR
813F50 6079              JZ      ?C0055?COMMMODULE
813F52         ?C0056?COMMMODULE:
  308: 			return;		
  309: 		
  310: 		if( IsMessagerBuzy() )		
813F52 A512814216        ECALL   IsMessagerBuzy
813F57 4072              JC      ?C0055?COMMMODULE
813F59         ?C0058?COMMMODULE:
  311: 			return ;		
  312: 
  313: 		if( SendSMSTimer != 0 )
813F59 E510              MOV     A,SendSMSTimer
813F5B 706E              JNZ     ?C0055?COMMMODULE
813F5D         ?C0059?COMMMODULE:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 858


  314: 			return;
  315: 
  316: 		Trace("\n commDoSendSMS Add Msg To Send ");
  317: 		memcpy( struSMS.phone, SystemParameter.GSMNO, sizeof(struSMS.phone) );
813F5D 7852              MOV     R0,#LOW struSMS
813F5F 7C18              MOV     R4,#HIGH struSMS
813F61 7D00              MOV     R5,#?C?XDATASEG
813F63 7B00              MOV     R3,#?C?XDATASEG
813F65 7A04              MOV     R2,#HIGH SystemParameter+016H
813F67 7936              MOV     R1,#LOW SystemParameter+016H
813F69 7E00              MOV     R6,#00H
813F6B 7F10              MOV     R7,#010H
813F6D A51280052D        ECALL   ?C?COPY
  318: 		struSMS.len = g_SMSCommModuleInfo.m_SMSBuffer.m_byLens[ g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex ];
813F72 902361            MOV     DPTR,#g_SMSCommModuleInfo+064AH
813F75 E0                MOVX    A,@DPTR
813F76 FF                MOV     R7,A
813F77 2457              ADD     A,#LOW g_SMSCommModuleInfo+0640H
813F79 F582              MOV     DPL,A
813F7B E4                CLR     A
813F7C 3423              ADDC    A,#HIGH g_SMSCommModuleInfo+0640H
813F7E F583              MOV     DPH,A
813F80 E0                MOVX    A,@DPTR
813F81 FD                MOV     R5,A
813F82 901862            MOV     DPTR,#struSMS+010H
813F85 E4                CLR     A
813F86 F0                MOVX    @DPTR,A
813F87 A3                INC     DPTR
813F88 ED                MOV     A,R5
813F89 F0                MOVX    @DPTR,A
  319: 		memcpy( struSMS.msg
813F8A 901862            MOV     DPTR,#struSMS+010H
813F8D E0                MOVX    A,@DPTR
813F8E F8                MOV     R0,A
813F8F A3                INC     DPTR
813F90 E0                MOVX    A,@DPTR
813F91 F582              MOV     DPL,A
813F93 8883              MOV     DPH,R0
813F95 C083              PUSH    DPH
813F97 C082              PUSH    DPL
813F99 EF                MOV     A,R7
813F9A 75F0A0            MOV     B,#0A0H
813F9D A4                MUL     AB
813F9E 2417              ADD     A,#LOW g_SMSCommModuleInfo
813FA0 F9                MOV     R1,A
813FA1 741D              MOV     A,#HIGH g_SMSCommModuleInfo
813FA3 35F0              ADDC    A,B
813FA5 FA                MOV     R2,A
813FA6 7B00              MOV     R3,#?C?XDATASEG
813FA8 7864              MOV     R0,#LOW struSMS+012H
813FAA 7C18              MOV     R4,#HIGH struSMS+012H
813FAC 7D00              MOV     R5,#?C?XDATASEG
813FAE D007              POP     AR7
813FB0 D006              POP     AR6
813FB2 A51280052D        ECALL   ?C?COPY
  320: 			, g_SMSCommModuleInfo.m_SMSBuffer.m_bySMSs[ g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex ]
  321: 			, struSMS.len );		
  322: 		PutShortMsg( &struSMS );
813FB7 7B00              MOV     R3,#?C?XDATASEG
813FB9 7A18              MOV     R2,#HIGH struSMS
813FBB 7952              MOV     R1,#LOW struSMS
813FBD A512813FCD        ECALL   _PutShortMsg
  323: 		g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_SMS_SENDING;
813FC2 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813FC5 7408              MOV     A,#08H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 859


813FC7 F0                MOVX    @DPTR,A
  324: 
  325: 		g_byCommRunningStatus = STA_CHECK_SMS_SEND_RESULT;
813FC8 754F11            MOV     g_byCommRunningStatus,#011H
  326: 
  327: 		return ;
  328: 	}
813FCB         ?C0055?COMMMODULE:
813FCB A522              ERET    
----- FUNCTION commDoSendSMS (END) -------


----- FUNCTION _PutShortMsg (BEGIN) -----
 FILE: 'mobile.c'
  698: 	uchar PutShortMsg( struct SHORTMSG* Msg )
  699: 	{
;---- Variable 'Msg' assigned to Register 'R1/R2/R3' ----
  700: 		ZhkTaskClaim |= ZHKTASKCLAIM_TXSMSG;
  701: 	//	Trace( "\n PutShortMsg( %d )" , (int)Msg->len );
813FCD 900EBA            MOV     DPTR,#ZhkTaskClaim
813FD0 E0                MOVX    A,@DPTR
813FD1 4410              ORL     A,#010H
813FD3 F0                MOVX    @DPTR,A
  702: 	//	Trace( "\n ZhkSmsTxNum = %bu" , ZhkSmsTxNum );
  703: 		if ( ZhkSmsTxNum > 0 ) 
813FD4 901598            MOV     DPTR,#ZhkSmsTxNum
813FD7 E0                MOVX    A,@DPTR
813FD8 D3                SETB    C
813FD9 9400              SUBB    A,#00H
813FDB 4004              JC      ?C0139?MOBILE
  704: 			return 1;
813FDD 7F01              MOV     R7,#01H
813FDF 8030              SJMP    ?C0140?MOBILE
813FE1         ?C0139?MOBILE:
  705: 		memcpy( &ZhkSmsTxBuf, Msg , sizeof( struct SHORTMSG ) );
813FE1 78D4              MOV     R0,#LOW ZhkSmsTxBuf
813FE3 7C10              MOV     R4,#HIGH ZhkSmsTxBuf
813FE5 7D00              MOV     R5,#?C?XDATASEG
813FE7 7E00              MOV     R6,#00H
813FE9 7FB2              MOV     R7,#0B2H
813FEB A51280052D        ECALL   ?C?COPY
  706: 		ZhkSmsTxNum ++;
813FF0 901598            MOV     DPTR,#ZhkSmsTxNum
813FF3 E0                MOVX    A,@DPTR
813FF4 04                INC     A
813FF5 F0                MOVX    @DPTR,A
  707: 		if ( ZhkSmsTxBuf.len > MAX_SMS_LEN ) 
813FF6 D3                SETB    C
813FF7 9010E5            MOV     DPTR,#ZhkSmsTxBuf+011H
813FFA E0                MOVX    A,@DPTR
813FFB 94A0              SUBB    A,#0A0H
813FFD 9010E4            MOV     DPTR,#ZhkSmsTxBuf+010H
814000 E0                MOVX    A,@DPTR
814001 9400              SUBB    A,#00H
814003 4006              JC      ?C0141?MOBILE
  708: 			ZhkSmsTxBuf.len = MAX_SMS_LEN;	
814005 E4                CLR     A
814006 F0                MOVX    @DPTR,A
814007 A3                INC     DPTR
814008 74A0              MOV     A,#0A0H
81400A F0                MOVX    @DPTR,A
81400B         ?C0141?MOBILE:
  709: 		return ZhkSmsTxBuf.len;
81400B 9010E4            MOV     DPTR,#ZhkSmsTxBuf+010H
81400E A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 860


81400F E0                MOVX    A,@DPTR
814010 FF                MOV     R7,A
  710: 	}
814011         ?C0140?MOBILE:
814011 A522              ERET    
----- FUNCTION _PutShortMsg (END) -------


----- FUNCTION _TestSMSSend (BEGIN) -----
 FILE: 'CommModule.c'
  124: 	unsigned char TestSMSSend( struct SHORTMSG* Msg )
  125: 	{		
;---- Variable 'Msg' assigned to Register 'R1/R2/R3' ----
  126: 		if( g_SMSCommModuleInfo.m_byCommStatus != COMM_STATUS_OK )
  127: 			return 1;
814013 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
814016 E0                MOVX    A,@DPTR
814017 6404              XRL     A,#04H
814019 6004              JZ      ?C0019?COMMMODULE
  128: 		Trace("\n TestSMSSend");
81401B 7F01              MOV     R7,#01H
81401D 801E              SJMP    ?C0020?COMMMODULE
81401F         ?C0019?COMMMODULE:
  129: 		if( PutShortMsg( Msg) == 1 )
81401F A512813FCD        ECALL   _PutShortMsg
814024 BF0104            CJNE    R7,#01H,?C0021?COMMMODULE
  130: 			return 1;
814027 7F01              MOV     R7,#01H
814029 8012              SJMP    ?C0020?COMMMODULE
81402B         ?C0021?COMMMODULE:
  131: 		Trace("\n TestSMSSend Sending");
  132: 		g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_SMS_SENDING;
81402B 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
81402E 7408              MOV     A,#08H
814030 F0                MOVX    @DPTR,A
  133: 		g_byCommRunningStatus = STA_CHECK_SMS_SEND_RESULT;
814031 754F11            MOV     g_byCommRunningStatus,#011H
  134: 		RunFlag |= 0x01;
814034 901D16            MOV     DPTR,#RunFlag
814037 E0                MOVX    A,@DPTR
814038 4401              ORL     A,#01H
81403A F0                MOVX    @DPTR,A
  135: 		return 0;
81403B 7F00              MOV     R7,#00H
  136: 	}
81403D         ?C0020?COMMMODULE:
81403D A522              ERET    
----- FUNCTION _TestSMSSend (END) -------


----- FUNCTION staCommModuleInit (BEGIN) -----
 FILE: 'CommModule.c'
   42: unsigned char staCommModuleInit()
   43: {
   44: 	Trace("\n staCommModuleInit " );
   45: #ifdef _MOBILE_SMS_1
   46: 	memset( &g_SMSCommModuleInfo, 0, sizeof(g_SMSCommModuleInfo) );
81403F 7E06              MOV     R6,#06H
814041 7F4E              MOV     R7,#04EH
814043 7D00              MOV     R5,#00H
814045 7B00              MOV     R3,#?C?XDATASEG
814047 7A1D              MOV     R2,#HIGH g_SMSCommModuleInfo
814049 7917              MOV     R1,#LOW g_SMSCommModuleInfo
81404B A5128008A6        ECALL   ?C?MEMSET
   47: 	ReTryTime = 0;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 861


814050 E4                CLR     A
814051 900EB6            MOV     DPTR,#ReTryTime
814054 F0                MOVX    @DPTR,A
   48: 	g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_INITING;
814055 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
814058 7407              MOV     A,#07H
81405A F0                MOVX    @DPTR,A
   49: #endif		
   50: 	return STA_CHECK_COMM_STATUS;
81405B 7F01              MOV     R7,#01H
   51: }
81405D         ?C0006?COMMMODULE:
81405D A522              ERET    
----- FUNCTION staCommModuleInit (END) -------


----- FUNCTION ?L?COM0027 (BEGIN) -----
81405F 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
814062 E0                MOVX    A,@DPTR
814063 14                DEC     A
814064 F0                MOVX    @DPTR,A
814065 75101E            MOV     SendSMSTimer,#01EH
814068 E4                CLR     A
814069 900EB8            MOV     DPTR,#SMSSendTime
81406C F0                MOVX    @DPTR,A
81406D 900EB4            MOV     DPTR,#DownMobilePowerFlag
814070 04                INC     A
814071 F0                MOVX    @DPTR,A
----- FUNCTION commInitGPRS (BEGIN) -----
 FILE: 'CommModule.c'
   53: void commInitGPRS()
   54: {
   55: 	Trace("\n commInitGPRS " );
   56: 	if( GprsInit() )
814072 A5128141B7        ECALL   GprsInit
814077 EF                MOV     A,R7
814078 6006              JZ      ?C0008?COMMMODULE
   57: 		g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_INITING;
81407A 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
81407D 7407              MOV     A,#07H
81407F F0                MOVX    @DPTR,A
   58: }
814080         ?C0008?COMMMODULE:
814080 A522              ERET    
----- FUNCTION commInitGPRS (END) -------


----- FUNCTION staCheckSMSSendResult (BEGIN) -----
 FILE: 'CommModule.c'
  164: 	unsigned char staCheckSMSSendResult()
  165: 	{	
  166: 		switch( SMSGetLastErr() )
  167: 		{			
814082 A51281419A        ECALL   SMSGetLastErr
814087 EF                MOV     A,R7
814088 7003              JNZ     $ + 5H
81408A 024126            LJMP    ?C0041?COMMMODULE
81408D 14                DEC     A
81408E 7003              JNZ     $ + 5H
814090 024126            LJMP    ?C0041?COMMMODULE
814093 24FE              ADD     A,#0FEH
814095 7003              JNZ     $ + 5H
814097 02412A            LJMP    ?C0042?COMMMODULE
81409A 14                DEC     A
81409B 603E              JZ      ?C0033?COMMMODULE
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 862


81409D 14                DEC     A
81409E 607C              JZ      ?C0039?COMMMODULE
8140A0 24FE              ADD     A,#0FEH
8140A2 6003              JZ      $ + 5H
8140A4 024169            LJMP    ?C0030?COMMMODULE
  168: 			case SMS_ERR_SEND_SUCCEED:
  169: 				g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_OK;
8140A7         ?C0028?COMMMODULE:
  170: 				//短信发送成功,清空原来的短信
8140A7 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
8140AA 7404              MOV     A,#04H
8140AC F0                MOVX    @DPTR,A
  171: 				if( ( RunFlag & 0x01 ) == 0x01 )
8140AD 901D16            MOV     DPTR,#RunFlag
8140B0 E0                MOVX    A,@DPTR
8140B1 FF                MOV     R7,A
8140B2 30E004            JNB     ACC.0,?C0029?COMMMODULE
  172: 				{
  173: 					RunFlag = RunFlag & 0xFC; //清空测试标志，同时置bit2为0,表示发送成功	
8140B5 54FC              ANL     A,#0FCH
  174: 					Trace("\n TestSMSSend succeed" );
  175: 					return STA_CHECK_COMM_STATUS;			
8140B7 8068              SJMP    ?C0060?COMMMODULE
  176: 				}
8140B9         ?C0029?COMMMODULE:
  177: 				if( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount > 0 )
8140B9 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
8140BC E0                MOVX    A,@DPTR
8140BD D3                SETB    C
8140BE 9400              SUBB    A,#00H
8140C0 4011              JC      ?C0031?COMMMODULE
  178: 				{
  179: 					if( ++g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex == MAX_BUFFERED_SMS_COUNT )				
8140C2 902361            MOV     DPTR,#g_SMSCommModuleInfo+064AH
8140C5 E0                MOVX    A,@DPTR
8140C6 04                INC     A
8140C7 F0                MOVX    @DPTR,A
8140C8 B40A02            CJNE    A,#0AH,?C0032?COMMMODULE
  180: 						g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex = 0;
8140CB E4                CLR     A
8140CC F0                MOVX    @DPTR,A
8140CD         ?C0032?COMMMODULE:
  181: 					--g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;										
8140CD 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
8140D0 E0                MOVX    A,@DPTR
8140D1 14                DEC     A
8140D2 F0                MOVX    @DPTR,A
  182: 				}	
8140D3         ?C0031?COMMMODULE:
  183: 				ReTryTime = 0;				
8140D3 E4                CLR     A
8140D4 900EB6            MOV     DPTR,#ReTryTime
8140D7 F0                MOVX    @DPTR,A
  184: 				break;
8140D8 024169            LJMP    ?C0030?COMMMODULE
  185: 			case SMS_ERR_SENDFAIL://如果明确知道发送失败，也要清空	
8140DB         ?C0033?COMMMODULE:
  186: 				if( ( RunFlag & 0x01 ) == 0x01 )	
8140DB 901D16            MOV     DPTR,#RunFlag
8140DE E0                MOVX    A,@DPTR
8140DF FF                MOV     R7,A
8140E0 30E008            JNB     ACC.0,?C0034?COMMMODULE
  187: 				{
  188: 					RunFlag &= 0xFE; //清空测试标志,
8140E3 54FE              ANL     A,#0FEH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 863


8140E5 F0                MOVX    @DPTR,A
  189: 					RunFlag |= 0x02; //置发送失败标志
8140E6 4402              ORL     A,#02H
8140E8 F0                MOVX    @DPTR,A
  190: 					Trace("\n TestSMSSend fail" );
  191: 				}
8140E9 802D              SJMP    ?C0035?COMMMODULE
8140EB         ?C0034?COMMMODULE:
  192: 				else
  193: 				{
  194: 					Trace("\n Send SMS Fail SMSSendTime = %bu", SMSSendTime );
  195: 					if( ( SMSSendTime >= RETRYTIME ) &&	( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount > 0 ) )
8140EB 900EB8            MOV     DPTR,#SMSSendTime
8140EE E0                MOVX    A,@DPTR
8140EF C3                CLR     C
8140F0 9405              SUBB    A,#05H
8140F2 401B              JC      ?C0036?COMMMODULE
8140F4 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
8140F7 E0                MOVX    A,@DPTR
8140F8 D3                SETB    C
8140F9 9400              SUBB    A,#00H
8140FB 4012              JC      ?C0036?COMMMODULE
  196: 					{
  197: 						if( ++g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex == MAX_BUFFERED_SMS_COUNT )				
8140FD 902361            MOV     DPTR,#g_SMSCommModuleInfo+064AH
814100 E0                MOVX    A,@DPTR
814101 04                INC     A
814102 F0                MOVX    @DPTR,A
814103 B40A02            CJNE    A,#0AH,?C0037?COMMMODULE
  198: 							g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex = 0;
814106 E4                CLR     A
814107 F0                MOVX    @DPTR,A
814108         ?C0037?COMMMODULE:
  199: 						--g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;						
814108 A51281405F        ECALL   ?L?COM0027
  200: 					//	SendSMSTimer = 0;
  201: 						SendSMSTimer = INTERVAL_TIME;
  202: 						SMSSendTime = 0;
  203: 						Trace("\n Not ReSend SMS SMSSendTime = %bu", SMSSendTime );
  204: 						//当重发指定次数后还是失败，则重启手机模块
  205: 						DownMobilePowerFlag = 1;
  206: 						commInitGPRS();
  207: 					}
81410D 8009              SJMP    ?C0035?COMMMODULE
81410F         ?C0036?COMMMODULE:
  208: 					else
  209: 					{
  210: 						SMSSendTime += 1;
81410F 900EB8            MOV     DPTR,#SMSSendTime
814112 E0                MOVX    A,@DPTR
814113 04                INC     A
814114 F0                MOVX    @DPTR,A
  211: 						SendSMSTimer = INTERVAL_TIME;
814115 75101E            MOV     SendSMSTimer,#01EH
  212: 						Trace("\n ReSend SMS SMSSendTime = %bu", SMSSendTime );
  213: 					}
  214: 				}
814118         ?C0035?COMMMODULE:
  215: 				return STA_CHECK_COMM_STATUS;
814118 7F01              MOV     R7,#01H
81411A 804D              SJMP    ?C0030?COMMMODULE
  216: 				break;
  217: 	//		case SMS_ERR_NULL://主控板与手机模块的通讯是正常的
  218: 			case SMS_ERR_READFAIL:			
81411C         ?C0039?COMMMODULE:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 864


  219: 				g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_OK;
81411C 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
81411F 7404              MOV     A,#04H
814121         
814121 F0                MOVX    @DPTR,A
  220: 				return STA_CHECK_COMM_STATUS;			
814122 7F01              MOV     R7,#01H
814124 8043              SJMP    ?C0030?COMMMODULE
  221: 				break;
  222: 			case SMS_ERR_BLOCK:
  223: 			case SMS_ERR_NULL:
814126         ?C0041?COMMMODULE:
  224: 				return STA_CHECK_SMS_SEND_RESULT;
814126 7F11              MOV     R7,#011H
814128 803F              SJMP    ?C0030?COMMMODULE
  225: 				break;
  226: 			case SMS_ERR_TIMEOUT:						
81412A         ?C0042?COMMMODULE:
  227: 	//		case GPRS_ERR_CONNECTING:
  228: 	//		case GPRS_ERR_CONNECTBREAK:
  229: 				if( ( RunFlag & 0x01 ) == 0x01 )	
81412A 901D16            MOV     DPTR,#RunFlag
81412D E0                MOVX    A,@DPTR
81412E FF                MOV     R7,A
81412F 30E008            JNB     ACC.0,?C0043?COMMMODULE
  230: 				{
  231: 					RunFlag &= 0xFE; //清空测试标志,
814132 54FE              ANL     A,#0FEH
814134 F0                MOVX    @DPTR,A
  232: 					RunFlag |= 0x02; //置发送失败标志
814135 4402              ORL     A,#02H
814137 F0                MOVX    @DPTR,A
  233: 					Trace("\n TestSMSSend timeout" );
  234: 				}
814138 802D              SJMP    ?C0044?COMMMODULE
81413A         ?C0043?COMMMODULE:
  235: 				else
  236: 				{
  237: 					Trace("\n Send SMS TimeOut SMSSendTime = %bu", SMSSendTime );
  238: 					if( ( SMSSendTime >= RETRYTIME ) &&	( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount > 0 ) )
81413A 900EB8            MOV     DPTR,#SMSSendTime
81413D E0                MOVX    A,@DPTR
81413E C3                CLR     C
81413F 9405              SUBB    A,#05H
814141 401B              JC      ?C0045?COMMMODULE
814143 902362            MOV     DPTR,#g_SMSCommModuleInfo+064BH
814146 E0                MOVX    A,@DPTR
814147 D3                SETB    C
814148 9400              SUBB    A,#00H
81414A 4012              JC      ?C0045?COMMMODULE
  239: 					{						
  240: 						if( ++g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex == MAX_BUFFERED_SMS_COUNT )				
81414C 902361            MOV     DPTR,#g_SMSCommModuleInfo+064AH
81414F E0                MOVX    A,@DPTR
814150 04                INC     A
814151 F0                MOVX    @DPTR,A
814152 B40A02            CJNE    A,#0AH,?C0046?COMMMODULE
  241: 							g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex = 0;
814155 E4                CLR     A
814156 F0                MOVX    @DPTR,A
814157         ?C0046?COMMMODULE:
  242: 						--g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;						
814157 A51281405F        ECALL   ?L?COM0027
  243: 					//	SendSMSTimer = 0;
  244: 						SendSMSTimer = INTERVAL_TIME;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 865


  245: 						SMSSendTime = 0;
  246: 						//当重发指定次数后还是失败，则重启手机模块
  247: 						DownMobilePowerFlag = 1;
  248: 						commInitGPRS();
  249: 						Trace("\n Send SMS TimeOut SMSSendTime = %bu", SMSSendTime );
  250: 					}
81415C 8009              SJMP    ?C0044?COMMMODULE
81415E         ?C0045?COMMMODULE:
  251: 					else
  252: 					{
  253: 						SMSSendTime += 1;
81415E 900EB8            MOV     DPTR,#SMSSendTime
814161 E0                MOVX    A,@DPTR
814162 04                INC     A
814163 F0                MOVX    @DPTR,A
  254: 						SendSMSTimer = INTERVAL_TIME;
814164 75101E            MOV     SendSMSTimer,#01EH
  255: 						Trace("\n TimeOut, ReSend SMS SMSSendTime = %bu", SMSSendTime );
  256: 					}
  257: 				}
814167         ?C0044?COMMMODULE:
  258: 				return STA_CHECK_COMM_STATUS;
814167 7F01              MOV     R7,#01H
  259: 				break;
  260: 		}						
  261: 	}
814169         ?C0030?COMMMODULE:
814169 A522              ERET    
----- FUNCTION staCheckSMSSendResult (END) -------


----- FUNCTION staCheckCommStatus (BEGIN) -----
 FILE: 'CommModule.c'
   61: unsigned char staCheckCommStatus()
   62: {
   63: //	Trace( "\n staCheckCommStatus" );
   64: 	switch( SMSGetLastErr() )
81416B A51281419A        ECALL   SMSGetLastErr
814170 EF                MOV     A,R7
814171 14                DEC     A
814172 6019              JZ      ?C0015?COMMMODULE
814174 24FD              ADD     A,#0FDH
814176 600B              JZ      ?C0013?COMMMODULE
814178 14                DEC     A
814179 6008              JZ      ?C0013?COMMMODULE
81417B 24FE              ADD     A,#0FEH
81417D 6004              JZ      ?C0013?COMMMODULE
81417F 2407              ADD     A,#07H
814181 700E              JNZ     ?C0017?COMMMODULE
   65: 	{	
   66: 		case SMS_ERR_NULL:
   67: 			Trace( "\n staCheckCommStatus SMS_ERR_NULL " );
   68: 		case SMS_ERR_SEND_SUCCEED:
   69: 			Trace( "\n staCheckCommStatus SMS_ERR_SEND_SUCCEED " );
   70: 		case SMS_ERR_SENDFAIL:
   71: 			Trace( "\n staCheckCommStatus SMS_ERR_SENDFAIL " );
   72: 		case SMS_ERR_READFAIL:		
814183         ?C0013?COMMMODULE:
   73: 			g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_OK;			
814183 902364            MOV     DPTR,#g_SMSCommModuleInfo+064DH
814186 7404              MOV     A,#04H
814188 F0                MOVX    @DPTR,A
   74: 			return	STA_SMS_NULL;
814189 7F12              MOV     R7,#012H
81418B 800B              SJMP    ?C0014?COMMMODULE
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 866


   75: 			break;
   76: 		case SMS_ERR_BLOCK:		
81418D         ?C0015?COMMMODULE:
   77: 	//		Trace( "\n staCheckCommStatus SMS_ERR_BLOCK" );			
   78: 			return STA_CHECK_COMM_STATUS;	
81418D 7F01              MOV     R7,#01H
81418F 8007              SJMP    ?C0014?COMMMODULE
   79: 			break;
   80: 		case SMS_ERR_TIMEOUT:		
   81: 		default:
814191         ?C0017?COMMMODULE:
   82: 			Trace( "\n staCheckCommStatus  SMS_ERR_TIMEOUT " );
   83: 			commInitGPRS();	
814191 A512814072        ECALL   commInitGPRS
   84: 			return STA_CHECK_COMM_STATUS;	
814196 7F01              MOV     R7,#01H
   85: 		break;
   86: 	}	
   87: }
814198         ?C0014?COMMMODULE:
814198 A522              ERET    
----- FUNCTION staCheckCommStatus (END) -------


----- FUNCTION SMSGetLastErr (BEGIN) -----
 FILE: 'mobile.c'
  712: 	uchar SMSGetLastErr( void )
  713: 	{
  714: 		switch( SMSLastErr )
  715: 		{
81419A 900EBC            MOV     DPTR,#SMSLastErr
81419D E0                MOVX    A,@DPTR
81419E FF                MOV     R7,A
81419F 14                DEC     A
8141A0 600A              JZ      ?C0144?MOBILE
8141A2 24FE              ADD     A,#0FEH
8141A4 24FD              ADD     A,#0FDH
8141A6 5006              JNC     ?C0148?MOBILE
8141A8 2406              ADD     A,#06H
8141AA 7004              JNZ     ?C0142?MOBILE
  716: 			case SMS_ERR_NULL:
  717: 			case SMS_ERR_BLOCK:
  718: 			return SMSLastErr;
8141AC         ?C0144?MOBILE:
  719: 				break; 
8141AC 8007              SJMP    ?C0145?MOBILE
  720: 			case SMS_ERR_TIMEOUT:
  721: 			case SMS_ERR_SENDFAIL:
  722: 			case SMS_ERR_READFAIL:						
  723: 		//		switch( ZhkGprsStatus )
8141AE         ?C0148?MOBILE:
  724: 		//		{
  725: 		//			case GPRS_STATUS_BREAK:
  726: 		//				return GPRS_ERR_CONNECTBREAK;				
  727: 		//			case GPRS_STATUS_CONNECTING:
  728: 		//				return GPRS_ERR_CONNECTING;
  729: 		//		}
  730: 			return SMSLastErr;
8141AE         
8141AE 8005              SJMP    ?C0145?MOBILE
  731: 			break;
  732: 		}
8141B0         ?C0142?MOBILE:
  733: 		return SMSLastErr;
8141B0 900EBC            MOV     DPTR,#SMSLastErr
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 867


8141B3 E0                MOVX    A,@DPTR
8141B4 FF                MOV     R7,A
  734: 	}	
8141B5         ?C0145?MOBILE:
8141B5 A522              ERET    
----- FUNCTION SMSGetLastErr (END) -------


----- FUNCTION GprsInit (BEGIN) -----
 FILE: 'mobile.c'
  492: uchar GprsInit( void )
  493: {
  494: //	Trace("Init1 GPRS" );
  495: 	if( ZhkMobileCurrentTask == MOBILE_NULL )
8141B7 900EB5            MOV     DPTR,#ZhkMobileCurrentTask
8141BA E0                MOVX    A,@DPTR
8141BB 700C              JNZ     ?C0093?MOBILE
  496: 	{
  497: //		Trace("Init2 GPRS" );
  498: 		ZhkMobileCurrentTask = MOBILE_INIT;
8141BD 7409              MOV     A,#09H
8141BF F0                MOVX    @DPTR,A
  499: 		ZhkGprsLastErr = GPRS_ERR_BLOCK;
8141C0 900EB7            MOV     DPTR,#ZhkGprsLastErr
8141C3 7401              MOV     A,#01H
8141C5 F0                MOVX    @DPTR,A
  500: 		return 1;
8141C6 FF                MOV     R7,A
8141C7 8002              SJMP    ?C0094?MOBILE
  501: 	}
8141C9         ?C0093?MOBILE:
  502: 	return 0;
8141C9 7F00              MOV     R7,#00H
  503: }
8141CB         ?C0094?MOBILE:
8141CB A522              ERET    
----- FUNCTION GprsInit (END) -------


----- FUNCTION GetTestSMSSendResult (BEGIN) -----
 FILE: 'CommModule.c'
  140: 	unsigned char GetTestSMSSendResult(  )
  141: 	{
  142: 		Trace("\n GetTestSMSSendResult RunFlag = %bu", RunFlag );
  143: 		if( ( RunFlag & 0x01 ) == 0x01 )
8141CD 901D16            MOV     DPTR,#RunFlag
8141D0 E0                MOVX    A,@DPTR
8141D1 FE                MOV     R6,A
8141D2 30E004            JNB     ACC.0,?C0022?COMMMODULE
  144: 			return 2; 
8141D5 7F02              MOV     R7,#02H
8141D7 8015              SJMP    ?C0023?COMMMODULE
8141D9         ?C0022?COMMMODULE:
  145: 		if( ( RunFlag & 0x02 ) == 0x02 )
8141D9 EE                MOV     A,R6
8141DA 901D16            MOV     DPTR,#RunFlag
8141DD 30E108            JNB     ACC.1,?C0024?COMMMODULE
  146: 		{ 
  147: 			RunFlag &= 0xfb; //清除bit0和bit1，置为0
8141E0 E0                MOVX    A,@DPTR
8141E1 54FB              ANL     A,#0FBH
8141E3 F0                MOVX    @DPTR,A
  148: 			return 1;
8141E4 7F01              MOV     R7,#01H
8141E6 8006              SJMP    ?C0023?COMMMODULE
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 868


  149: 		}
8141E8         ?C0024?COMMMODULE:
  150: 		else
  151: 		{
  152: 			RunFlag &= 0xfb; //清除bit0和bit1，置为0
8141E8 E0                MOVX    A,@DPTR
8141E9 54FB              ANL     A,#0FBH
8141EB F0                MOVX    @DPTR,A
  153: 			return 0;
8141EC 7F00              MOV     R7,#00H
  154: 		}
  155: 	}
8141EE         ?C0023?COMMMODULE:
8141EE A522              ERET    
----- FUNCTION GetTestSMSSendResult (END) -------


----- FUNCTION GetATCMDResult (BEGIN) -----
 FILE: 'CommModule.c'
  158: 	unsigned int  GetATCMDResult()
  159: 	{
  160: 		return SMSErrorCode;
  161: 	}
8141F0 900EB2            MOV     DPTR,#SMSErrorCode
8141F3 E0                MOVX    A,@DPTR
8141F4 FE                MOV     R6,A
8141F5 A3                INC     DPTR
8141F6 E0                MOVX    A,@DPTR
8141F7 FF                MOV     R7,A
  162: 
8141F8         ?C0026?COMMMODULE:
8141F8 A522              ERET    
----- FUNCTION GetATCMDResult (END) -------


----- FUNCTION ClearAllSMSInSMSBuffer (BEGIN) -----
 FILE: 'communication.c'
   11: 	void ClearAllSMSInSMSBuffer()
   12: 	{
   13: 		memset( &g_SMSCommModuleInfo.m_SMSBuffer, 0, sizeof(g_SMSCommModuleInfo.m_SMSBuffer) );
   14: 	}
8141FA 7E06              MOV     R6,#06H
8141FC 7F4C              MOV     R7,#04CH
8141FE 7D00              MOV     R5,#00H
814200 7B00              MOV     R3,#?C?XDATASEG
814202 7A1D              MOV     R2,#HIGH g_SMSCommModuleInfo
814204 7917              MOV     R1,#LOW g_SMSCommModuleInfo
814206 A5028008A6        EJMP    ?C?MEMSET
----- FUNCTION ClearAllSMSInSMSBuffer (END) -------


----- FUNCTION IsShortMsgIn (BEGIN) -----
 FILE: 'mobile.c'
  662: 	bit IsShortMsgIn( void )
  663: 	{
  664: 	//	Trace("\n IsShortMsgIn");
  665: 		return ! ( ZhkSmsRxNum == 0 );
81420B 901587            MOV     DPTR,#ZhkSmsRxNum
81420E E0                MOVX    A,@DPTR
81420F C3                CLR     C
814210 7001              JNZ     ?C0126?MOBILE
814212 D3                SETB    C
814213         ?C0126?MOBILE:
814213         ?C0127?MOBILE:
814213 B3                CPL     C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 869


  666: 	}
814214         ?C0128?MOBILE:
814214 A522              ERET    
----- FUNCTION IsShortMsgIn (END) -------


----- FUNCTION IsMessagerBuzy (BEGIN) -----
 FILE: 'mobile.c'
  667: 	bit IsMessagerBuzy( void )
  668: 	{
  669: 		return ZhkSmsTxNum;
  670: 	}
814216 901598            MOV     DPTR,#ZhkSmsTxNum
814219 E0                MOVX    A,@DPTR
81421A 24FF              ADD     A,#0FFH
  671: 	
81421C         ?C0129?MOBILE:
81421C A522              ERET    
----- FUNCTION IsMessagerBuzy (END) -------


----- FUNCTION ?L?COM0039 (BEGIN) -----
81421E 3E                ADDC    A,R6
81421F F583              MOV     DPH,A
814221 E0                MOVX    A,@DPTR
814222 FF                MOV     R7,A
----- FUNCTION _ASCToInt (BEGIN) -----
 FILE: 'mobile.c'
  899: 	uchar ASCToInt( uchar val )
  900: 	{
;---- Variable 'val' assigned to Register 'R7' ----
  901: 		if ((val >= '0') && (val <= '9'))
  902:         	return  val - '0';
814223 EF                MOV     A,R7
814224 C3                CLR     C
814225 9430              SUBB    A,#030H
814227 400C              JC      ?C0168?MOBILE
814229 EF                MOV     A,R7
81422A D3                SETB    C
81422B 9439              SUBB    A,#039H
81422D 5006              JNC     ?C0168?MOBILE
  903:         else
81422F EF                MOV     A,R7
814230 24D0              ADD     A,#0D0H
814232 FF                MOV     R7,A
814233 8026              SJMP    ?C0169?MOBILE
814235         ?C0168?MOBILE:
  904:         {
  905:             if ((val >= 'A') && (val <= 'Z'))
814235 EF                MOV     A,R7
814236 C3                CLR     C
814237 9441              SUBB    A,#041H
814239 400C              JC      ?C0171?MOBILE
81423B EF                MOV     A,R7
81423C D3                SETB    C
81423D 945A              SUBB    A,#05AH
81423F 5006              JNC     ?C0171?MOBILE
  906:                 return val - 'A' + 10;
814241 EF                MOV     A,R7
814242 24C9              ADD     A,#0C9H
814244 FF                MOV     R7,A
814245 8014              SJMP    ?C0169?MOBILE
814247         ?C0171?MOBILE:
  907:             if ((val >= 'a') && (val <= 'z'))
814247 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 870


814248 C3                CLR     C
814249 9461              SUBB    A,#061H
81424B 400C              JC      ?C0170?MOBILE
81424D EF                MOV     A,R7
81424E D3                SETB    C
81424F 947A              SUBB    A,#07AH
814251 5006              JNC     ?C0170?MOBILE
  908:                 return val - 'a' + 10;
814253 EF                MOV     A,R7
814254 24A9              ADD     A,#0A9H
814256 FF                MOV     R7,A
814257 8002              SJMP    ?C0169?MOBILE
  909:         }
814259         ?C0170?MOBILE:
  910:         return 0;
814259 7F00              MOV     R7,#00H
  911: 	}
81425B         ?C0169?MOBILE:
81425B A522              ERET    
----- FUNCTION _ASCToInt (END) -------


----- FUNCTION _ZhkMobileSmsUnpack (BEGIN) -----
 FILE: 'mobile.c'
 1336: 	uint ZhkMobileSmsUnpack( struct SHORTMSG xdata* Msg, uchar xdata* DataBuf, uint DataLen ) 
 1337: 	{	
81425D 901B86            MOV     DPTR,#Msg
814260 EE                MOV     A,R6
814261 F0                MOVX    @DPTR,A
814262 A3                INC     DPTR
814263 EF                MOV     A,R7
814264 F0                MOVX    @DPTR,A
814265 A3                INC     DPTR
814266 EC                MOV     A,R4
814267 F0                MOVX    @DPTR,A
814268 A3                INC     DPTR
814269 ED                MOV     A,R5
81426A F0                MOVX    @DPTR,A
81426B A3                INC     DPTR
81426C EA                MOV     A,R2
81426D F0                MOVX    @DPTR,A
81426E A3                INC     DPTR
81426F EB                MOV     A,R3
814270 F0                MOVX    @DPTR,A
 1338: 		uchar xdata TempBuf[ 256 ];
 1339: 		uint xdata i;
 1340: 		uchar xdata ch;
 1341: 		uchar xdata* data p;
 1342: 	//	uchar VpfTemp;	
 1343: 	
 1344: 		memset( TempBuf,0,sizeof(TempBuf) );
814271 7E01              MOV     R6,#01H
814273 7F00              MOV     R7,#00H
814275 7D00              MOV     R5,#00H
814277 7B00              MOV     R3,#?C?XDATASEG
814279 7A1B              MOV     R2,#HIGH TempBuf
81427B 798C              MOV     R1,#LOW TempBuf
81427D A5128008A6        ECALL   ?C?MEMSET
 1345: 		//字符串转化为字节数组
 1346: 		for( i = 0 ; i < DataLen / 2 ; i ++ )
814282 E4                CLR     A
814283 901C8C            MOV     DPTR,#i
814286 F0                MOVX    @DPTR,A
814287 A3                INC     DPTR
814288 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 871


814289         ?C0272?MOBILE:
814289 901B8A            MOV     DPTR,#DataLen
81428C E0                MOVX    A,@DPTR
81428D C3                CLR     C
81428E 13                RRC     A
81428F FE                MOV     R6,A
814290 A3                INC     DPTR
814291 E0                MOVX    A,@DPTR
814292 13                RRC     A
814293 FF                MOV     R7,A
814294 901C8C            MOV     DPTR,#i
814297 E0                MOVX    A,@DPTR
814298 FC                MOV     R4,A
814299 A3                INC     DPTR
81429A E0                MOVX    A,@DPTR
81429B FD                MOV     R5,A
81429C C3                CLR     C
81429D 9F                SUBB    A,R7
81429E EC                MOV     A,R4
81429F 9E                SUBB    A,R6
8142A0 5061              JNC     ?C0273?MOBILE
 1347: 		{
 1348: 			TempBuf[ i ] = ASCToInt( DataBuf[ 2 * i ] ) * 16 + ASCToInt( DataBuf[ 2 * i + 1 ] );	
8142A2 ED                MOV     A,R5
8142A3 25E0              ADD     A,ACC
8142A5 FF                MOV     R7,A
8142A6 EC                MOV     A,R4
8142A7 33                RLC     A
8142A8 FE                MOV     R6,A
8142A9 EF                MOV     A,R7
8142AA 2401              ADD     A,#01H
8142AC FF                MOV     R7,A
8142AD E4                CLR     A
8142AE 3E                ADDC    A,R6
8142AF FE                MOV     R6,A
8142B0 901B88            MOV     DPTR,#DataBuf
8142B3 E0                MOVX    A,@DPTR
8142B4 FC                MOV     R4,A
8142B5 A3                INC     DPTR
8142B6 E0                MOVX    A,@DPTR
8142B7 2F                ADD     A,R7
8142B8 F582              MOV     DPL,A
8142BA EC                MOV     A,R4
8142BB A51281421E        ECALL   ?L?COM0039
8142C0 AD07              MOV     R5,AR7
8142C2 901C8D            MOV     DPTR,#i+01H
8142C5 E0                MOVX    A,@DPTR
8142C6 25E0              ADD     A,ACC
8142C8 FF                MOV     R7,A
8142C9 901C8C            MOV     DPTR,#i
8142CC E0                MOVX    A,@DPTR
8142CD 33                RLC     A
8142CE FE                MOV     R6,A
8142CF 901B88            MOV     DPTR,#DataBuf
8142D2 E0                MOVX    A,@DPTR
8142D3 FA                MOV     R2,A
8142D4 A3                INC     DPTR
8142D5 E0                MOVX    A,@DPTR
8142D6 2F                ADD     A,R7
8142D7 F582              MOV     DPL,A
8142D9 EA                MOV     A,R2
8142DA A51281421E        ECALL   ?L?COM0039
8142DF EF                MOV     A,R7
8142E0 C4                SWAP    A
8142E1 54F0              ANL     A,#0F0H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 872


8142E3 2D                ADD     A,R5
8142E4 FF                MOV     R7,A
8142E5 901C8C            MOV     DPTR,#i
8142E8 A3                INC     DPTR
8142E9 E0                MOVX    A,@DPTR
8142EA 248C              ADD     A,#LOW TempBuf
8142EC F582              MOV     DPL,A
8142EE E4                CLR     A
8142EF 341B              ADDC    A,#HIGH TempBuf
8142F1 F583              MOV     DPH,A
8142F3 EF                MOV     A,R7
8142F4 F0                MOVX    @DPTR,A
 1349: 		}
8142F5 901C8C            MOV     DPTR,#i
8142F8 E4                CLR     A
8142F9 75F001            MOV     B,#01H
8142FC A512800600        ECALL   ?C?IILDX
814301 8086              SJMP    ?C0272?MOBILE
814303         ?C0273?MOBILE:
 1350: 		if( TempBuf[0] == 0x08 )
814303 901B8C            MOV     DPTR,#TempBuf
814306 E0                MOVX    A,@DPTR
814307 FF                MOV     R7,A
814308 B40808            CJNE    A,#08H,?C0275?MOBILE
 1351: 		{
 1352: 			//PDU模式的短信结构,有短信中心号码
 1353: 			// 取手机号码长度		
 1354: 			p  = TempBuf + 10;	
81430B 752B1B            MOV     p,#HIGH TempBuf+0AH
81430E 752C96            MOV     p+01H,#LOW TempBuf+0AH
 1355: 		}
814311 8009              SJMP    ?C0276?MOBILE
814313         ?C0275?MOBILE:
 1356: 		else if( TempBuf[0] == 0x00 )
814313 EF                MOV     A,R7
814314 7006              JNZ     ?C0276?MOBILE
 1357: 		{
 1358: 			//PDU模式的短信结构,无短信中心号码
 1359: 			// 取手机号码长度		
 1360: 			p  = TempBuf + 1;	
814316 752B1B            MOV     p,#HIGH TempBuf+01H
814319 752C8D            MOV     p+01H,#LOW TempBuf+01H
 1361: 		}	
81431C         ?C0276?MOBILE:
 1362: 
 1363: 		//取源手机号码长度
 1364: 		ch = *p;		
81431C 852C82            MOV     DPL,p+01H
81431F 852B83            MOV     DPH,p
814322 E0                MOVX    A,@DPTR
814323 901C8E            MOV     DPTR,#ch
814326 F0                MOVX    @DPTR,A
 1365: 		// 取手机号码
 1366: 		p += 2;	
814327 7402              MOV     A,#02H
814329 252C              ADD     A,p+01H
81432B F52C              MOV     p+01H,A
81432D E4                CLR     A
81432E 352B              ADDC    A,p
814330 F52B              MOV     p,A
 1367: 		for( i = 0 ; i < ( ch + 1 ) / 2 ; i ++ )
814332 E4                CLR     A
814333 901C8C            MOV     DPTR,#i
814336 F0                MOVX    @DPTR,A
814337 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 873


814338 F0                MOVX    @DPTR,A
814339         ?C0278?MOBILE:
814339 901C8E            MOV     DPTR,#ch
81433C E0                MOVX    A,@DPTR
81433D 04                INC     A
81433E C3                CLR     C
81433F 13                RRC     A
814340 FF                MOV     R7,A
814341 901C8C            MOV     DPTR,#i
814344 E0                MOVX    A,@DPTR
814345 FC                MOV     R4,A
814346 A3                INC     DPTR
814347 E0                MOVX    A,@DPTR
814348 FD                MOV     R5,A
814349 C3                CLR     C
81434A 9F                SUBB    A,R7
81434B EC                MOV     A,R4
81434C 9400              SUBB    A,#00H
81434E 5038              JNC     ?C0279?MOBILE
 1368: 		{		
 1369: 			Msg->phone[ i ] = ( p[ i ] & 0x0F ) * 16 + ( ( p[ i ] &0xF0 )>> 4 );	
814350 E52C              MOV     A,p+01H
814352 2D                ADD     A,R5
814353 F582              MOV     DPL,A
814355 E52B              MOV     A,p
814357 3C                ADDC    A,R4
814358 F583              MOV     DPH,A
81435A E0                MOVX    A,@DPTR
81435B FF                MOV     R7,A
81435C 54F0              ANL     A,#0F0H
81435E C4                SWAP    A
81435F 540F              ANL     A,#0FH
814361 FE                MOV     R6,A
814362 EF                MOV     A,R7
814363 540F              ANL     A,#0FH
814365 C4                SWAP    A
814366 54F0              ANL     A,#0F0H
814368 2E                ADD     A,R6
814369 FF                MOV     R7,A
81436A 901B86            MOV     DPTR,#Msg
81436D E0                MOVX    A,@DPTR
81436E FA                MOV     R2,A
81436F A3                INC     DPTR
814370 E0                MOVX    A,@DPTR
814371 2D                ADD     A,R5
814372 F582              MOV     DPL,A
814374 EA                MOV     A,R2
814375 3C                ADDC    A,R4
814376 F583              MOV     DPH,A
814378 EF                MOV     A,R7
814379 F0                MOVX    @DPTR,A
 1370: 		}	
81437A 901C8C            MOV     DPTR,#i
81437D E4                CLR     A
81437E 75F001            MOV     B,#01H
814381 A512800600        ECALL   ?C?IILDX
814386 80B1              SJMP    ?C0278?MOBILE
814388         ?C0279?MOBILE:
 1371: 		Msg->phone[ i ] = 0xFF;
814388 901C8C            MOV     DPTR,#i
81438B E0                MOVX    A,@DPTR
81438C FE                MOV     R6,A
81438D A3                INC     DPTR
81438E E0                MOVX    A,@DPTR
81438F FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 874


814390 901B86            MOV     DPTR,#Msg
814393 E0                MOVX    A,@DPTR
814394 FC                MOV     R4,A
814395 A3                INC     DPTR
814396 E0                MOVX    A,@DPTR
814397 FD                MOV     R5,A
814398 2F                ADD     A,R7
814399 F582              MOV     DPL,A
81439B EC                MOV     A,R4
81439C 3E                ADDC    A,R6
81439D F583              MOV     DPH,A
81439F 74FF              MOV     A,#0FFH
8143A1 F0                MOVX    @DPTR,A
 1372: 				
 1373: 		// 取DCS
 1374: 		p += i + 1;	
8143A2 EF                MOV     A,R7
8143A3 2401              ADD     A,#01H
8143A5 FF                MOV     R7,A
8143A6 E4                CLR     A
8143A7 3E                ADDC    A,R6
8143A8 FE                MOV     R6,A
8143A9 EF                MOV     A,R7
8143AA 252C              ADD     A,p+01H
8143AC F52C              MOV     p+01H,A
8143AE EE                MOV     A,R6
8143AF 352B              ADDC    A,p
8143B1 F52B              MOV     p,A
 1375: 		ch = *p;	
8143B3 852C82            MOV     DPL,p+01H
8143B6 F583              MOV     DPH,A
8143B8 E0                MOVX    A,@DPTR
8143B9 901C8E            MOV     DPTR,#ch
8143BC F0                MOVX    @DPTR,A
 1376: 		// 根据信息的编码方式处理
 1377: 		if ( ch == 0 )
8143BD 702B              JNZ     ?C0281?MOBILE
 1378: 		{ 	
 1379: 			//7位编号			
 1380: 			// 取短信长度
 1381: 			p += 8;
8143BF 7408              MOV     A,#08H
8143C1 252C              ADD     A,p+01H
8143C3 F52C              MOV     p+01H,A
8143C5 E4                CLR     A
8143C6 352B              ADDC    A,p
8143C8 F52B              MOV     p,A
 1382: 			Msg->len = *p;	
8143CA 852C82            MOV     DPL,p+01H
8143CD F583              MOV     DPH,A
8143CF E0                MOVX    A,@DPTR
8143D0 FF                MOV     R7,A
8143D1 ED                MOV     A,R5
8143D2 2410              ADD     A,#010H
8143D4 F582              MOV     DPL,A
8143D6 E4                CLR     A
8143D7 3C                ADDC    A,R4
8143D8 F583              MOV     DPH,A
8143DA E4                CLR     A
8143DB F0                MOVX    @DPTR,A
8143DC A3                INC     DPTR
8143DD EF                MOV     A,R7
8143DE F0                MOVX    @DPTR,A
 1383: 			Trace("\n 7bit Msg->len = %u", Msg->len );	
 1384: 			// 取短信
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 875


 1385: 			p ++;
8143DF 052C              INC     p+01H
8143E1 E52C              MOV     A,p+01H
8143E3 7002              JNZ     ?C0330?MOBILE
8143E5 052B              INC     p
8143E7         ?C0330?MOBILE:
 1386: 			return ZhkGSMToAsc( p , Msg->msg , Msg->len );
8143E7 0245EA            LJMP    ?C0369?MOBILE
 1387: 		}
8143EA         ?C0281?MOBILE:
 1388: 		else if( ( ch & 0x04 ) == 0x04 )
8143EA 901C8E            MOV     DPTR,#ch
8143ED E0                MOVX    A,@DPTR
8143EE 30E25D            JNB     ACC.2,?C0284?MOBILE
 1389: 		{
 1390: 			//8位编码			
 1391: 			// 取短信长度		
 1392: 			p += 8;//跳过日期块
8143F1 7408              MOV     A,#08H
8143F3 252C              ADD     A,p+01H
8143F5 F52C              MOV     p+01H,A
8143F7 E4                CLR     A
8143F8 352B              ADDC    A,p
8143FA F52B              MOV     p,A
 1393: 			Msg->len = *p;
8143FC 852C82            MOV     DPL,p+01H
8143FF F583              MOV     DPH,A
814401 E0                MOVX    A,@DPTR
814402 FF                MOV     R7,A
814403 901B86            MOV     DPTR,#Msg
814406 E0                MOVX    A,@DPTR
814407 FC                MOV     R4,A
814408 A3                INC     DPTR
814409 E0                MOVX    A,@DPTR
81440A FD                MOV     R5,A
81440B 2410              ADD     A,#010H
81440D F582              MOV     DPL,A
81440F E4                CLR     A
814410 3C                ADDC    A,R4
814411 F583              MOV     DPH,A
814413 E4                CLR     A
814414 F0                MOVX    @DPTR,A
814415 A3                INC     DPTR
814416 EF                MOV     A,R7
814417 F0                MOVX    @DPTR,A
 1394: 			Trace("\n 8bit Msg->len = %u", Msg->len );	
 1395: 		
 1396: 			// 取短信
 1397: 			p ++;		
814418 052C              INC     p+01H
81441A E52C              MOV     A,p+01H
81441C 7002              JNZ     ?C0331?MOBILE
81441E 052B              INC     p
814420         ?C0331?MOBILE:
 1398: 			memcpy( Msg->msg, p, Msg->len );		
814420 ED                MOV     A,R5
814421 2410              ADD     A,#010H
814423 F582              MOV     DPL,A
814425 E4                CLR     A
814426 3C                ADDC    A,R4
814427 F583              MOV     DPH,A
814429 E0                MOVX    A,@DPTR
81442A FE                MOV     R6,A
81442B A3                INC     DPTR
81442C E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 876


81442D FF                MOV     R7,A
81442E AA2B              MOV     R2,p
814430 A92C              MOV     R1,p+01H
814432 7B00              MOV     R3,#?C?XDATASEG
814434 901B87            MOV     DPTR,#Msg+01H
814437 E0                MOVX    A,@DPTR
814438 2412              ADD     A,#012H
81443A FD                MOV     R5,A
81443B 901B86            MOV     DPTR,#Msg
81443E E0                MOVX    A,@DPTR
81443F 3400              ADDC    A,#00H
814441 A805              MOV     R0,AR5
814443 FC                MOV     R4,A
814444 7D00              MOV     R5,#?C?XDATASEG
814446 A51280052D        ECALL   ?C?COPY
 1399: 			return Msg->len;
81444B 0245A5            LJMP    ?C0370?MOBILE
 1400: 		}
81444E         ?C0284?MOBILE:
 1401: 		else if( ( ch & 0x08 ) == 0x08 )
81444E 901C8E            MOV     DPTR,#ch
814451 E0                MOVX    A,@DPTR
814452 20E303            JB      ACC.3,$ + 6H
814455 0245BB            LJMP    ?C0286?MOBILE
 1402: 		{
 1403: 			//16位编码
 1404: 			// 取短信长度		
 1405: 			p += 8;//跳过日期块					
814458 7408              MOV     A,#08H
81445A 252C              ADD     A,p+01H
81445C F52C              MOV     p+01H,A
81445E E4                CLR     A
81445F 352B              ADDC    A,p
814461 F52B              MOV     p,A
 1406: 			Msg->len = *p;
814463 852C82            MOV     DPL,p+01H
814466 F583              MOV     DPH,A
814468 E0                MOVX    A,@DPTR
814469 FF                MOV     R7,A
81446A 901B86            MOV     DPTR,#Msg
81446D E0                MOVX    A,@DPTR
81446E FC                MOV     R4,A
81446F A3                INC     DPTR
814470 E0                MOVX    A,@DPTR
814471 FD                MOV     R5,A
814472 2410              ADD     A,#010H
814474 F582              MOV     DPL,A
814476 E4                CLR     A
814477 3C                ADDC    A,R4
814478 F583              MOV     DPH,A
81447A E4                CLR     A
81447B F0                MOVX    @DPTR,A
81447C A3                INC     DPTR
81447D EF                MOV     A,R7
81447E F0                MOVX    @DPTR,A
 1407: 			Trace("\n 16bit Msg->len = %u", Msg->len );	
 1408: 		
 1409: 			// 取短信
 1410: 			p ++;		
81447F 052C              INC     p+01H
814481 E52C              MOV     A,p+01H
814483 7002              JNZ     ?C0332?MOBILE
814485 052B              INC     p
814487         ?C0332?MOBILE:
 1411: 			memcpy( Msg->msg, p, Msg->len );
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 877


814487 ED                MOV     A,R5
814488 2410              ADD     A,#010H
81448A F582              MOV     DPL,A
81448C E4                CLR     A
81448D 3C                ADDC    A,R4
81448E F583              MOV     DPH,A
814490 E0                MOVX    A,@DPTR
814491 FE                MOV     R6,A
814492 A3                INC     DPTR
814493 E0                MOVX    A,@DPTR
814494 FF                MOV     R7,A
814495 AA2B              MOV     R2,p
814497 A92C              MOV     R1,p+01H
814499 7B00              MOV     R3,#?C?XDATASEG
81449B 901B87            MOV     DPTR,#Msg+01H
81449E E0                MOVX    A,@DPTR
81449F 2412              ADD     A,#012H
8144A1 FD                MOV     R5,A
8144A2 901B86            MOV     DPTR,#Msg
8144A5 E0                MOVX    A,@DPTR
8144A6 3400              ADDC    A,#00H
8144A8 A805              MOV     R0,AR5
8144AA FC                MOV     R4,A
8144AB 7D00              MOV     R5,#?C?XDATASEG
8144AD A51280052D        ECALL   ?C?COPY
 1412: 			
 1413: 			if( Msg->len > 0 )
8144B2 901B86            MOV     DPTR,#Msg
8144B5 E0                MOVX    A,@DPTR
8144B6 FE                MOV     R6,A
8144B7 A3                INC     DPTR
8144B8 E0                MOVX    A,@DPTR
8144B9 2410              ADD     A,#010H
8144BB F582              MOV     DPL,A
8144BD E4                CLR     A
8144BE 3E                ADDC    A,R6
8144BF F583              MOV     DPH,A
8144C1 E0                MOVX    A,@DPTR
8144C2 FE                MOV     R6,A
8144C3 A3                INC     DPTR
8144C4 E0                MOVX    A,@DPTR
8144C5 D3                SETB    C
8144C6 9400              SUBB    A,#00H
8144C8 EE                MOV     A,R6
8144C9 9400              SUBB    A,#00H
8144CB 5003              JNC     $ + 5H
8144CD 0245A5            LJMP    ?C0287?MOBILE
 1414: 			{
 1415: 				//转化为8位ASC码
 1416: 				for( i = 0; i < ( Msg->len / 2 ); i++ )
8144D0 E4                CLR     A
8144D1 901C8C            MOV     DPTR,#i
8144D4 F0                MOVX    @DPTR,A
8144D5 A3                INC     DPTR
8144D6 F0                MOVX    @DPTR,A
8144D7         ?C0288?MOBILE:
8144D7 901B86            MOV     DPTR,#Msg
8144DA E0                MOVX    A,@DPTR
8144DB FC                MOV     R4,A
8144DC A3                INC     DPTR
8144DD E0                MOVX    A,@DPTR
8144DE FD                MOV     R5,A
8144DF 2410              ADD     A,#010H
8144E1 F582              MOV     DPL,A
8144E3 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 878


8144E4 3C                ADDC    A,R4
8144E5 F583              MOV     DPH,A
8144E7 E0                MOVX    A,@DPTR
8144E8 C3                CLR     C
8144E9 13                RRC     A
8144EA FE                MOV     R6,A
8144EB A3                INC     DPTR
8144EC E0                MOVX    A,@DPTR
8144ED 13                RRC     A
8144EE FF                MOV     R7,A
8144EF 901C8C            MOV     DPTR,#i
8144F2 E0                MOVX    A,@DPTR
8144F3 FA                MOV     R2,A
8144F4 A3                INC     DPTR
8144F5 E0                MOVX    A,@DPTR
8144F6 FB                MOV     R3,A
8144F7 C3                CLR     C
8144F8 9F                SUBB    A,R7
8144F9 EA                MOV     A,R2
8144FA 9E                SUBB    A,R6
8144FB 503B              JNC     ?C0291?MOBILE
 1417: 					Msg->msg[i] = Msg->msg[2*i + 1];
8144FD EB                MOV     A,R3
8144FE 25E0              ADD     A,ACC
814500 FF                MOV     R7,A
814501 EA                MOV     A,R2
814502 33                RLC     A
814503 FE                MOV     R6,A
814504 EF                MOV     A,R7
814505 2413              ADD     A,#013H
814507 FF                MOV     R7,A
814508 E4                CLR     A
814509 3E                ADDC    A,R6
81450A FE                MOV     R6,A
81450B ED                MOV     A,R5
81450C 2F                ADD     A,R7
81450D F582              MOV     DPL,A
81450F EC                MOV     A,R4
814510 3E                ADDC    A,R6
814511 F583              MOV     DPH,A
814513 E0                MOVX    A,@DPTR
814514 FF                MOV     R7,A
814515 ED                MOV     A,R5
814516 2412              ADD     A,#012H
814518 F582              MOV     DPL,A
81451A E4                CLR     A
81451B 3C                ADDC    A,R4
81451C F583              MOV     DPH,A
81451E E582              MOV     A,DPL
814520 2B                ADD     A,R3
814521 F582              MOV     DPL,A
814523 E583              MOV     A,DPH
814525 3A                ADDC    A,R2
814526 F583              MOV     DPH,A
814528 EF                MOV     A,R7
814529 F0                MOVX    @DPTR,A
81452A 901C8C            MOV     DPTR,#i
81452D E4                CLR     A
81452E 75F001            MOV     B,#01H
814531 A512800600        ECALL   ?C?IILDX
814536 809F              SJMP    ?C0288?MOBILE
 1418: 				for( ; i < Msg->len; i++ )
814538         ?C0291?MOBILE:
814538 901B86            MOV     DPTR,#Msg
81453B E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 879


81453C FE                MOV     R6,A
81453D A3                INC     DPTR
81453E E0                MOVX    A,@DPTR
81453F 2410              ADD     A,#010H
814541 F582              MOV     DPL,A
814543 E4                CLR     A
814544 3E                ADDC    A,R6
814545 F583              MOV     DPH,A
814547 E0                MOVX    A,@DPTR
814548 FE                MOV     R6,A
814549 A3                INC     DPTR
81454A E0                MOVX    A,@DPTR
81454B FF                MOV     R7,A
81454C 901C8C            MOV     DPTR,#i
81454F E0                MOVX    A,@DPTR
814550 FC                MOV     R4,A
814551 A3                INC     DPTR
814552 E0                MOVX    A,@DPTR
814553 FD                MOV     R5,A
814554 C3                CLR     C
814555 9F                SUBB    A,R7
814556 EC                MOV     A,R4
814557 9E                SUBB    A,R6
814558 5028              JNC     ?C0292?MOBILE
 1419: 					Msg->msg[i] = 0;			
81455A 901B86            MOV     DPTR,#Msg
81455D E0                MOVX    A,@DPTR
81455E FE                MOV     R6,A
81455F A3                INC     DPTR
814560 E0                MOVX    A,@DPTR
814561 2412              ADD     A,#012H
814563 F582              MOV     DPL,A
814565 E4                CLR     A
814566 3E                ADDC    A,R6
814567 F583              MOV     DPH,A
814569 E582              MOV     A,DPL
81456B 2D                ADD     A,R5
81456C F582              MOV     DPL,A
81456E E583              MOV     A,DPH
814570 3C                ADDC    A,R4
814571 F583              MOV     DPH,A
814573 E4                CLR     A
814574 F0                MOVX    @DPTR,A
814575 901C8C            MOV     DPTR,#i
814578 75F001            MOV     B,#01H
81457B A512800600        ECALL   ?C?IILDX
814580 80B6              SJMP    ?C0291?MOBILE
814582         ?C0292?MOBILE:
 1420: 				Msg->len = Msg->len / 2 ;
814582 901B86            MOV     DPTR,#Msg
814585 E0                MOVX    A,@DPTR
814586 FE                MOV     R6,A
814587 A3                INC     DPTR
814588 E0                MOVX    A,@DPTR
814589 2410              ADD     A,#010H
81458B F582              MOV     DPL,A
81458D E4                CLR     A
81458E 3E                ADDC    A,R6
81458F F583              MOV     DPH,A
814591 C083              PUSH    DPH
814593 C082              PUSH    DPL
814595 E0                MOVX    A,@DPTR
814596 C3                CLR     C
814597 13                RRC     A
814598 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 880


814599 A3                INC     DPTR
81459A E0                MOVX    A,@DPTR
81459B 13                RRC     A
81459C D082              POP     DPL
81459E D083              POP     DPH
8145A0 CF                XCH     A,R7
8145A1 F0                MOVX    @DPTR,A
8145A2 A3                INC     DPTR
8145A3 EF                MOV     A,R7
8145A4 F0                MOVX    @DPTR,A
 1421: 			}			
8145A5         ?C0287?MOBILE:
 1422: 			return Msg->len;
8145A5         
8145A5 901B86            MOV     DPTR,#Msg
8145A8 E0                MOVX    A,@DPTR
8145A9 FE                MOV     R6,A
8145AA A3                INC     DPTR
8145AB E0                MOVX    A,@DPTR
8145AC 2410              ADD     A,#010H
8145AE F582              MOV     DPL,A
8145B0 E4                CLR     A
8145B1 3E                ADDC    A,R6
8145B2 F583              MOV     DPH,A
8145B4 E0                MOVX    A,@DPTR
8145B5 FE                MOV     R6,A
8145B6 A3                INC     DPTR
8145B7 E0                MOVX    A,@DPTR
8145B8 FF                MOV     R7,A
8145B9 8053              SJMP    ?C0282?MOBILE
 1423: 		}
8145BB         ?C0286?MOBILE:
 1424: 		else
 1425: 		{
 1426: 			//其它不明确的编码方式都按7位编号			
 1427: 			// 取短信长度
 1428: 			p += 8;
8145BB 7408              MOV     A,#08H
8145BD 252C              ADD     A,p+01H
8145BF F52C              MOV     p+01H,A
8145C1 E4                CLR     A
8145C2 352B              ADDC    A,p
8145C4 F52B              MOV     p,A
 1429: 			Msg->len = *p;		
8145C6 852C82            MOV     DPL,p+01H
8145C9 F583              MOV     DPH,A
8145CB E0                MOVX    A,@DPTR
8145CC FF                MOV     R7,A
8145CD 901B86            MOV     DPTR,#Msg
8145D0 E0                MOVX    A,@DPTR
8145D1 FC                MOV     R4,A
8145D2 A3                INC     DPTR
8145D3 E0                MOVX    A,@DPTR
8145D4 FD                MOV     R5,A
8145D5 2410              ADD     A,#010H
8145D7 F582              MOV     DPL,A
8145D9 E4                CLR     A
8145DA 3C                ADDC    A,R4
8145DB F583              MOV     DPH,A
8145DD E4                CLR     A
8145DE F0                MOVX    @DPTR,A
8145DF A3                INC     DPTR
8145E0 EF                MOV     A,R7
8145E1 F0                MOVX    @DPTR,A
 1430: 			// 取短信
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 881


 1431: 			p ++;
8145E2 052C              INC     p+01H
8145E4 E52C              MOV     A,p+01H
8145E6 7002              JNZ     ?C0333?MOBILE
8145E8 052B              INC     p
8145EA         ?C0333?MOBILE:
 1432: 			return ZhkGSMToAsc( p , Msg->msg , Msg->len );
8145EA         
8145EA ED                MOV     A,R5
8145EB 2412              ADD     A,#012H
8145ED FD                MOV     R5,A
8145EE E4                CLR     A
8145EF 3C                ADDC    A,R4
8145F0 FC                MOV     R4,A
8145F1 901B86            MOV     DPTR,#Msg
8145F4 E0                MOVX    A,@DPTR
8145F5 FE                MOV     R6,A
8145F6 A3                INC     DPTR
8145F7 E0                MOVX    A,@DPTR
8145F8 2410              ADD     A,#010H
8145FA F582              MOV     DPL,A
8145FC E4                CLR     A
8145FD 3E                ADDC    A,R6
8145FE F583              MOV     DPH,A
814600 E0                MOVX    A,@DPTR
814601 FA                MOV     R2,A
814602 A3                INC     DPTR
814603 E0                MOVX    A,@DPTR
814604 FB                MOV     R3,A
814605 AF2C              MOV     R7,p+01H
814607 AE2B              MOV     R6,p
814609 A5128148FC        ECALL   _ZhkGSMToAsc
 1433: 		}
 1434: 	}	
81460E         ?C0282?MOBILE:
81460E A522              ERET    
----- FUNCTION _ZhkMobileSmsUnpack (END) -------


----- FUNCTION ZhkMobileSmsRxProcess (BEGIN) -----
 FILE: 'mobile.c'
  913: 	uchar ZhkMobileSmsRxProcess( void )
  914: 	{
  915: 		// AT+CMGR=n
  916: 		// getline index "+cgml" and 编号n
  917: 		// getline unpack
  918: 		// waitfor ok
  919: 		// AT+CMGD=n
  920: 		// waitfor ok
  921: 		static uchar xdata MsgRxStatus = MOBILE_BEGIN;
  922: 		uchar xdata DataTemp[ 512 ];
  923: 		static uchar xdata MsgNum;
  924: 		struct SHORTMSG xdata SmsTemp;
  925: 		uchar xdata CmdStr[ 128 ];
  926: 		uchar xdata i;
  927: 		uchar xdata temp;
  928: 		uint  xdata len;	
  929: 
  930: 		switch( MsgRxStatus )
814610 900EB0            MOV     DPTR,#MsgRxStatus
814613 E0                MOVX    A,@DPTR
814614 14                DEC     A
814615 6068              JZ      ?C0177?MOBILE
814617 14                DEC     A
814618 7003              JNZ     $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 882


81461A 024723            LJMP    ?C0185?MOBILE
81461D 14                DEC     A
81461E 7003              JNZ     $ + 5H
814620 024882            LJMP    ?C0208?MOBILE
814623 14                DEC     A
814624 7003              JNZ     $ + 5H
814626 0248C2            LJMP    ?C0211?MOBILE
814629 14                DEC     A
81462A 7003              JNZ     $ + 5H
81462C 024863            LJMP    ?C0202?MOBILE
81462F 2405              ADD     A,#05H
814631 6003              JZ      $ + 5H
814633 0248F5            LJMP    ?C0173?MOBILE
  931: 		{
  932: 		case MOBILE_BEGIN:
814636         ?C0174?MOBILE:
  933: 			// 已经有新的短信，准备接收			
  934: 			if ( NewCommingSmsSit[ 0 ] == -1 ) 			
814636 901588            MOV     DPTR,#NewCommingSmsSit
814639 E0                MOVX    A,@DPTR
81463A FE                MOV     R6,A
81463B B4FF05            CJNE    A,#0FFH,?C0175?MOBILE
  935: 				return MOBILE_FINISH;
81463E 7F10              MOV     R7,#010H
814640 0248FA            LJMP    ?C0176?MOBILE
814643         ?C0175?MOBILE:
  936: 
  937: 			MsgNum = NewCommingSmsSit[ 0 ];	
814643 900EB1            MOV     DPTR,#MsgNum
814646 EE                MOV     A,R6
814647 F0                MOVX    @DPTR,A
  938: 			Trace("\n ZhkMobileSmsRxProcess SMSIndex = %bu", MsgNum );
  939: 			sprintf( CmdStr , "AT+CMGR=%bd\0" , MsgNum );			// AT+CMGR=n
814648 7B80              MOV     R3,#BYTE2 0801718H
81464A 7A17              MOV     R2,#HIGH 0801718H
81464C 7918              MOV     R1,#LOW 0801718H
81464E 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
814651 A5128007B6        ECALL   ?C?PSTXDATA
814656 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
814659 EE                MOV     A,R6
81465A F0                MOVX    @DPTR,A
81465B 7B00              MOV     R3,#?C?XDATASEG
81465D 7A1B              MOV     R2,#HIGH CmdStr
81465F 7904              MOV     R1,#LOW CmdStr
814661 A512800949        ECALL   _sprintf
  940: 			ZhkAtCmd( CmdStr, 0 );
814666 7B00              MOV     R3,#?C?XDATASEG
814668 7A1B              MOV     R2,#HIGH CmdStr
81466A 7904              MOV     R1,#LOW CmdStr
81466C E4                CLR     A
81466D FD                MOV     R5,A
81466E A51281326E        ECALL   _ZhkAtCmd
  941: 			ZhkMobileSecTimer = ZHKMOBILE_SMS_ACKTIMEOUT;
814673 751746            MOV     ZhkMobileSecTimer,#046H
  942: 			MsgRxStatus       = MOBILE_STEP1;			
814676 900EB0            MOV     DPTR,#MsgRxStatus
814679 7401              MOV     A,#01H
81467B F0                MOVX    @DPTR,A
  943: 			break;
81467C 0248F5            LJMP    ?C0173?MOBILE
  944: 		case MOBILE_STEP1:
81467F         ?C0177?MOBILE:
  945: 			// 阻塞状态直接返回
  946: 			ZhkMobileSignalIn();
81467F A512813953        ECALL   ZhkMobileSignalIn
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 883


  947: 			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP1" );
  948: 			if ( ZhkMobileSecTimer == 0 ) 
814684 E517              MOV     A,ZhkMobileSecTimer
814686 7015              JNZ     ?C0178?MOBILE
  949: 			{			
  950: 		//		Trace("\n ZhkMobileSmsRxProcess ZhkMobileSecTimer = 0" );
  951: 				if( SMSReceiveTime >= RETRYTIME )
814688 9010D3            MOV     DPTR,#SMSReceiveTime
81468B E0                MOVX    A,@DPTR
81468C C3                CLR     C
81468D 9405              SUBB    A,#05H
81468F 5003              JNC     $ + 5H
814691 024713            LJMP    ?C0365?MOBILE
  952: 				{
  953: 					Trace("\n SMSReceiveTime >= RETRYTIME" );
  954: 					ZhkAtCmdBufWr = 0;
814694 E4                CLR     A
814695 901599            MOV     DPTR,#ZhkAtCmdBufWr
814698 F0                MOVX    @DPTR,A
814699 A3                INC     DPTR
81469A F0                MOVX    @DPTR,A
  955: 					MsgRxStatus       = MOBILE_STEP3;
  956: 					break;
81469B 806D              SJMP    ?C0364?MOBILE
  957: 				}
  958: 				else
  959: 				{
  960: 					MsgRxStatus       = MOBILE_BEGIN;				
  961: 					SMSLastErr    	= SMS_ERR_READFAIL;	
  962: 					return MOBILE_ERROR;
  963: 				}
  964: 			}				
81469D         ?C0178?MOBILE:
  965: 			ZhkAtCmdBufWr = 0;
81469D E4                CLR     A
81469E 901599            MOV     DPTR,#ZhkAtCmdBufWr
8146A1 F0                MOVX    @DPTR,A
8146A2 A3                INC     DPTR
8146A3 F0                MOVX    @DPTR,A
  966: 			// 指令正确接收,进入下一步工作	收到 “+CMGR”	
  967: 			if ( strstr( ZhkAtCmdBuffer , "+CMGR" ) != NULL )
8146A4 7B80              MOV     R3,#BYTE2 0801725H
8146A6 7A17              MOV     R2,#HIGH 0801725H
8146A8 7925              MOV     R1,#LOW 0801725H
8146AA 901D0D            MOV     DPTR,#?_strstr?BYTE+03H
8146AD A5128007B6        ECALL   ?C?PSTXDATA
8146B2 7B00              MOV     R3,#?C?XDATASEG
8146B4 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
8146B6 7987              MOV     R1,#LOW ZhkAtCmdBuffer
8146B8 A5128018FC        ECALL   _strstr
8146BD E4                CLR     A
8146BE F583              MOV     DPH,A
8146C0 F582              MOV     DPL,A
8146C2 EB                MOV     A,R3
8146C3 7004              JNZ     ?C0308?MOBILE
8146C5 E9                MOV     A,R1
8146C6 7001              JNZ     ?C0308?MOBILE
8146C8 EA                MOV     A,R2
8146C9         ?C0308?MOBILE:
8146C9 600C              JZ      ?C0181?MOBILE
  968: 			{	
  969: 				Trace( "\n ZhkMobileSmsRxProcess +CMGR" );
  970: 				ZhkMobileSecTimer = ZHKMOBILE_SMS_ACKTIMEOUT;
8146CB 751746            MOV     ZhkMobileSecTimer,#046H
  971: 				MsgRxStatus       = MOBILE_STEP2;				
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 884


8146CE 900EB0            MOV     DPTR,#MsgRxStatus
8146D1 7402              MOV     A,#02H
8146D3 F0                MOVX    @DPTR,A
  972: 				break;
8146D4 0248F5            LJMP    ?C0173?MOBILE
  973: 			}
8146D7         ?C0181?MOBILE:
  974: 			// 指令错误接收,返回
  975: 			if ( strstr( ZhkAtCmdBuffer , "ERROR" ) != NULL )
8146D7 7B80              MOV     R3,#BYTE2 0801712H
8146D9 7A17              MOV     R2,#HIGH 0801712H
8146DB 7912              MOV     R1,#LOW 0801712H
8146DD 901D0D            MOV     DPTR,#?_strstr?BYTE+03H
8146E0 A5128007B6        ECALL   ?C?PSTXDATA
8146E5 7B00              MOV     R3,#?C?XDATASEG
8146E7 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
8146E9 7987              MOV     R1,#LOW ZhkAtCmdBuffer
8146EB A5128018FC        ECALL   _strstr
8146F0 E4                CLR     A
8146F1 F583              MOV     DPH,A
8146F3 F582              MOV     DPL,A
8146F5 EB                MOV     A,R3
8146F6 7004              JNZ     ?C0309?MOBILE
8146F8 E9                MOV     A,R1
8146F9 7001              JNZ     ?C0309?MOBILE
8146FB EA                MOV     A,R2
8146FC         ?C0309?MOBILE:
8146FC 7003              JNZ     $ + 5H
8146FE 0248F5            LJMP    ?C0173?MOBILE
  976: 			{
  977: 				Trace( "\n ZhkMobileSmsRxProcess ERROR" );
  978: 			
  979: 				if( SMSReceiveTime >= RETRYTIME )
814701 9010D3            MOV     DPTR,#SMSReceiveTime
814704 E0                MOVX    A,@DPTR
814705 C3                CLR     C
814706 9405              SUBB    A,#05H
814708 4009              JC      ?C0183?MOBILE
  980: 				{
  981: 					MsgRxStatus       = MOBILE_STEP3;
81470A         
81470A 900EB0            MOV     DPTR,#MsgRxStatus
81470D 7403              MOV     A,#03H
81470F F0                MOVX    @DPTR,A
  982: 					break;
814710 0248F5            LJMP    ?C0173?MOBILE
  983: 				}
814713         ?C0183?MOBILE:
  984: 				else
  985: 				{
  986: 					MsgRxStatus       = MOBILE_BEGIN;				
814713         
814713 E4                CLR     A
814714 900EB0            MOV     DPTR,#MsgRxStatus
814717 F0                MOVX    @DPTR,A
  987: 					SMSLastErr    	= SMS_ERR_READFAIL;	
814718 900EBC            MOV     DPTR,#SMSLastErr
81471B 7405              MOV     A,#05H
81471D F0                MOVX    @DPTR,A
  988: 					return MOBILE_ERROR;
81471E 7F12              MOV     R7,#012H
814720 0248FA            LJMP    ?C0176?MOBILE
  989: 				}
  990: 			}		
  991: 			break;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 885


  992: 		case MOBILE_STEP2:		
814723         ?C0185?MOBILE:
  993: 			// 接收到短信,解析处理,并且进入下一步工作
  994: //			ZhkMobileSignalIn();
  995: 			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP2" );
  996: 			if ( ZhkAtCmdBufWr == 0 ) 
814723 901599            MOV     DPTR,#ZhkAtCmdBufWr
814726 E0                MOVX    A,@DPTR
814727 7002              JNZ     ?C0310?MOBILE
814729 A3                INC     DPTR
81472A E0                MOVX    A,@DPTR
81472B         ?C0310?MOBILE:
81472B 700A              JNZ     ?C0186?MOBILE
  997: 			{
  998: 				// 操作超时
  999: 				if ( ZhkMobileSecTimer == 0 ) 
81472D E517              MOV     A,ZhkMobileSecTimer
81472F 6003              JZ      $ + 5H
814731 0248F5            LJMP    ?C0173?MOBILE
 1000: 				{
 1001: 					Trace( "\n ZhkMobileSmsRxProcess TIMEOUT1" );
 1002: 					MsgRxStatus       = MOBILE_BEGIN;					
 1003: 					SMSLastErr  = SMS_ERR_TIMEOUT;
 1004: 					ZhkGprsStatus     = GPRS_STATUS_BREAK;
 1005: 					return MOBILE_TIMEOUT;
814734 0248E1            LJMP    ?C0366?MOBILE
 1006: 				}
 1007: 				break;
 1008: 			}		
814737         ?C0186?MOBILE:
 1009: 			// 接收到短信,解析处理,并且进入下一步工作	
 1010: 			memset( DataTemp, 0, sizeof( DataTemp ) );			
814737 7E02              MOV     R6,#02H
814739 7F00              MOV     R7,#00H
81473B 7D00              MOV     R5,#00H
81473D 7B00              MOV     R3,#?C?XDATASEG
81473F 7A18              MOV     R2,#HIGH DataTemp
814741 7952              MOV     R1,#LOW DataTemp
814743 A5128008A6        ECALL   ?C?MEMSET
 1011: 			memset( &SmsTemp, 0, sizeof( struct SHORTMSG ) );			
814748 7E00              MOV     R6,#00H
81474A 7FB2              MOV     R7,#0B2H
81474C 7D00              MOV     R5,#00H
81474E 7B00              MOV     R3,#?C?XDATASEG
814750 7A1A              MOV     R2,#HIGH SmsTemp
814752 7952              MOV     R1,#LOW SmsTemp
814754 A5128008A6        ECALL   ?C?MEMSET
 1012: 			memcpy( DataTemp , ZhkAtCmdBuffer , ZhkAtCmdBufWr );
814759 901599            MOV     DPTR,#ZhkAtCmdBufWr
81475C E0                MOVX    A,@DPTR
81475D FE                MOV     R6,A
81475E A3                INC     DPTR
81475F E0                MOVX    A,@DPTR
814760 FF                MOV     R7,A
814761 7852              MOV     R0,#LOW DataTemp
814763 7C18              MOV     R4,#HIGH DataTemp
814765 7D00              MOV     R5,#?C?XDATASEG
814767 7B00              MOV     R3,#?C?XDATASEG
814769 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
81476B 7987              MOV     R1,#LOW ZhkAtCmdBuffer
81476D A51280052D        ECALL   ?C?COPY
 1013: 			len = ZhkMobileSmsUnpack( &SmsTemp , DataTemp , ZhkAtCmdBufWr );
814772 7E1A              MOV     R6,#HIGH SmsTemp
814774 7F52              MOV     R7,#LOW SmsTemp
814776 7C18              MOV     R4,#HIGH DataTemp
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 886


814778 7D52              MOV     R5,#LOW DataTemp
81477A 901599            MOV     DPTR,#ZhkAtCmdBufWr
81477D E0                MOVX    A,@DPTR
81477E FA                MOV     R2,A
81477F A3                INC     DPTR
814780 E0                MOVX    A,@DPTR
814781 FB                MOV     R3,A
814782 A51281425D        ECALL   _ZhkMobileSmsUnpack
;---- Variable 'len' assigned to Register 'R6/R7' ----
 1014: 			
 1015: 			Trace( "\n SmsTemp.len = %u", SmsTemp.len );
 1016: 			Trace( "\n SmsTemp.msg = %s", SmsTemp.msg );
 1017: 			Trace( "\n SmsTemp.phone =" );
 1018: 			for( i = 0; i < 8; i++ )
814787 E4                CLR     A
814788 901B84            MOV     DPTR,#i
81478B F0                MOVX    @DPTR,A
81478C         ?C0188?MOBILE:
81478C 901B84            MOV     DPTR,#i
81478F E0                MOVX    A,@DPTR
814790 04                INC     A
814791 F0                MOVX    @DPTR,A
814792 E0                MOVX    A,@DPTR
814793 B408F6            CJNE    A,#08H,?C0188?MOBILE
814796         ?C0189?MOBILE:
 1019: 				Trace( "%bx", SmsTemp.phone[i] );
 1020: 			Trace( "\n" );
 1021: 			ZhkAtCmdBufWr = 0;
814796 E4                CLR     A
814797 901599            MOV     DPTR,#ZhkAtCmdBufWr
81479A F0                MOVX    @DPTR,A
81479B A3                INC     DPTR
81479C F0                MOVX    @DPTR,A
 1022: 			if ( len )
81479D EF                MOV     A,R7
81479E 4E                ORL     A,R6
81479F 7003              JNZ     $ + 5H
8147A1 024859            LJMP    ?C0191?MOBILE
 1023: 			{	
 1024: 				i = 0;
8147A4 E4                CLR     A
8147A5 901B84            MOV     DPTR,#i
8147A8 F0                MOVX    @DPTR,A
 1025: 				for( i = 0; i < 15; i ++ )
8147A9 F0                MOVX    @DPTR,A
8147AA         ?C0192?MOBILE:
8147AA 901B84            MOV     DPTR,#i
8147AD E0                MOVX    A,@DPTR
8147AE FF                MOV     R7,A
8147AF C3                CLR     C
8147B0 940F              SUBB    A,#0FH
8147B2 5030              JNC     ?C0193?MOBILE
 1026: 				{					
 1027: 					if( SystemParameter.GSMNO[i] == 0xff )
8147B4 7436              MOV     A,#LOW SystemParameter+016H
8147B6 2F                ADD     A,R7
8147B7 F582              MOV     DPL,A
8147B9 E4                CLR     A
8147BA 3404              ADDC    A,#HIGH SystemParameter+016H
8147BC F583              MOV     DPH,A
8147BE E0                MOVX    A,@DPTR
8147BF FF                MOV     R7,A
8147C0 B4FF08            CJNE    A,#0FFH,?C0195?MOBILE
 1028: 					{					
 1029: 						i = 88;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 887


8147C3 901B84            MOV     DPTR,#i
8147C6 7458              MOV     A,#058H
8147C8 F0                MOVX    @DPTR,A
 1030: 						break;
8147C9 8019              SJMP    ?C0193?MOBILE
 1031: 					}
8147CB         ?C0195?MOBILE:
 1032: 					else
 1033: 					{
 1034: 						if( SystemParameter.GSMNO[i] != SmsTemp.phone[i] )							
8147CB 901B84            MOV     DPTR,#i
8147CE E0                MOVX    A,@DPTR
8147CF 2452              ADD     A,#LOW SmsTemp
8147D1 F582              MOV     DPL,A
8147D3 E4                CLR     A
8147D4 341A              ADDC    A,#HIGH SmsTemp
8147D6 F583              MOV     DPH,A
8147D8 E0                MOVX    A,@DPTR
8147D9 B50708            CJNE    A,AR7,?C0193?MOBILE
 1035: 							break;
 1036: 					}
 1037: 				}
8147DC         ?C0194?MOBILE:
8147DC 901B84            MOV     DPTR,#i
8147DF E0                MOVX    A,@DPTR
8147E0 04                INC     A
8147E1 F0                MOVX    @DPTR,A
8147E2 80C6              SJMP    ?C0192?MOBILE
8147E4         ?C0193?MOBILE:
 1038: 				if( i == 88 )
8147E4 901B84            MOV     DPTR,#i
8147E7 E0                MOVX    A,@DPTR
8147E8 6458              XRL     A,#058H
8147EA 706D              JNZ     ?C0191?MOBILE
 1039: 				{
 1040: 					//认可的短信,保存,不认可的自动丢弃
 1041: 					for( i = 0; i < strlen( SmsTemp.msg ); i++ )
8147EC F0                MOVX    @DPTR,A
8147ED         ?C0199?MOBILE:
8147ED 7B00              MOV     R3,#?C?XDATASEG
8147EF 7A1A              MOV     R2,#HIGH SmsTemp+012H
8147F1 7964              MOV     R1,#LOW SmsTemp+012H
8147F3 A512800010        ECALL   _strlen
8147F8 901B84            MOV     DPTR,#i
8147FB E0                MOVX    A,@DPTR
8147FC FD                MOV     R5,A
8147FD C3                CLR     C
8147FE 9F                SUBB    A,R7
8147FF EE                MOV     A,R6
814800 6480              XRL     A,#080H
814802 F8                MOV     R0,A
814803 7480              MOV     A,#080H
814805 98                SUBB    A,R0
814806 5028              JNC     ?C0200?MOBILE
 1042: 						SmsTemp.msg[i] = toupper(SmsTemp.msg[i]);
814808 7464              MOV     A,#LOW SmsTemp+012H
81480A 2D                ADD     A,R5
81480B F582              MOV     DPL,A
81480D E4                CLR     A
81480E 341A              ADDC    A,#HIGH SmsTemp+012H
814810 F583              MOV     DPH,A
814812 E0                MOVX    A,@DPTR
814813 FF                MOV     R7,A
814814 A5128019BA        ECALL   _toupper
814819 901B84            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 888


81481C E0                MOVX    A,@DPTR
81481D 2464              ADD     A,#LOW SmsTemp+012H
81481F F582              MOV     DPL,A
814821 E4                CLR     A
814822 341A              ADDC    A,#HIGH SmsTemp+012H
814824 F583              MOV     DPH,A
814826 EF                MOV     A,R7
814827 F0                MOVX    @DPTR,A
814828 901B84            MOV     DPTR,#i
81482B E0                MOVX    A,@DPTR
81482C 04                INC     A
81482D F0                MOVX    @DPTR,A
81482E 80BD              SJMP    ?C0199?MOBILE
814830         ?C0200?MOBILE:
 1043: 					memcpy( &ZhkSmsRxBuf[ZhkSmsRxNum], &SmsTemp , sizeof( struct SHORTMSG ) );				
814830 901587            MOV     DPTR,#ZhkSmsRxNum
814833 E0                MOVX    A,@DPTR
814834 75F0B2            MOV     B,#0B2H
814837 A4                MUL     AB
814838 24BD              ADD     A,#LOW ZhkSmsRxBuf
81483A F9                MOV     R1,A
81483B 740E              MOV     A,#HIGH ZhkSmsRxBuf
81483D 35F0              ADDC    A,B
81483F A801              MOV     R0,AR1
814841 FC                MOV     R4,A
814842 7D00              MOV     R5,#?C?XDATASEG
814844 7B00              MOV     R3,#?C?XDATASEG
814846 7A1A              MOV     R2,#HIGH SmsTemp
814848 7952              MOV     R1,#LOW SmsTemp
81484A 7E00              MOV     R6,#00H
81484C 7FB2              MOV     R7,#0B2H
81484E A51280052D        ECALL   ?C?COPY
 1044: 					ZhkSmsRxNum ++ ;					
814853 901587            MOV     DPTR,#ZhkSmsRxNum
814856 E0                MOVX    A,@DPTR
814857 04                INC     A
814858 F0                MOVX    @DPTR,A
 1045: 				}
 1046: 			}			
814859         ?C0191?MOBILE:
 1047: 			MsgRxStatus       = MOBILE_STEP5;
814859 900EB0            MOV     DPTR,#MsgRxStatus
81485C 7405              MOV     A,#05H
81485E F0                MOVX    @DPTR,A
 1048: 			return 	MsgRxStatus;
81485F FF                MOV     R7,A
814860 0248FA            LJMP    ?C0176?MOBILE
 1049: 			break;
 1050: 		case MOBILE_STEP5:
814863         ?C0202?MOBILE:
 1051: 			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP5" );
 1052: 			temp = ZhkAtCmdGetErr();
814863 A5128135B1        ECALL   ZhkAtCmdGetErr
814868 901B85            MOV     DPTR,#temp
81486B EF                MOV     A,R7
81486C F0                MOVX    @DPTR,A
 1053: 			switch( temp )
81486D 24FE              ADD     A,#0FEH
81486F 6007              JZ      ?C0206?MOBILE
814871 14                DEC     A
814872 6004              JZ      ?C0206?MOBILE
814874 2403              ADD     A,#03H
814876 7006              JNZ     ?C0203?MOBILE
 1054: 			{
 1055: 				case ATCMD_ERR_NULL:				
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 889


 1056: 				case ATCMD_ERR_ERR:						
 1057: 				case ATCMD_ERR_TIMEOUT://2
814878         ?C0206?MOBILE:
 1058: 					MsgRxStatus       = MOBILE_STEP3;					
814878 900EB0            MOV     DPTR,#MsgRxStatus
81487B 7403              MOV     A,#03H
81487D F0                MOVX    @DPTR,A
 1059: 					break;
 1060: 				case ATCMD_ERR_BLOCK://1
 1061: 					// 阻塞状态直接返回
 1062: 					break;						
 1063: 			}
81487E         ?C0203?MOBILE:
 1064: 			return 	MOBILE_STEP5;
81487E 7F05              MOV     R7,#05H
814880 8078              SJMP    ?C0176?MOBILE
 1065: 			break;
 1066: 		case MOBILE_STEP3:					// 等待OK
814882         ?C0208?MOBILE:
 1067: 			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP3" );
 1068: 			//删除短讯
 1069: 			if( MsgNum > 0 )
814882 900EB1            MOV     DPTR,#MsgNum
814885 E0                MOVX    A,@DPTR
814886 FF                MOV     R7,A
814887 D3                SETB    C
814888 9400              SUBB    A,#00H
81488A 404B              JC      ?C0367?MOBILE
 1070: 			{
 1071: 				sprintf( CmdStr , "AT+CMGD=%d" , (int)MsgNum );
81488C 7B80              MOV     R3,#BYTE2 080172BH
81488E 7A17              MOV     R2,#HIGH 080172BH
814890 792B              MOV     R1,#LOW 080172BH
814892 901B89            MOV     DPTR,#?_sprintf?BYTE+03H
814895 A5128007B6        ECALL   ?C?PSTXDATA
81489A 901B8C            MOV     DPTR,#?_sprintf?BYTE+06H
81489D E4                CLR     A
81489E F0                MOVX    @DPTR,A
81489F A3                INC     DPTR
8148A0 EF                MOV     A,R7
8148A1 F0                MOVX    @DPTR,A
8148A2 7B00              MOV     R3,#?C?XDATASEG
8148A4 7A1B              MOV     R2,#HIGH CmdStr
8148A6 7904              MOV     R1,#LOW CmdStr
8148A8 A512800949        ECALL   _sprintf
 1072: 				ZhkAtCmd( CmdStr, 0 );		
8148AD 7B00              MOV     R3,#?C?XDATASEG
8148AF 7A1B              MOV     R2,#HIGH CmdStr
8148B1 7904              MOV     R1,#LOW CmdStr
8148B3 E4                CLR     A
8148B4 FD                MOV     R5,A
8148B5 A51281326E        ECALL   _ZhkAtCmd
 1073: 				MsgRxStatus       = MOBILE_STEP4;
8148BA 900EB0            MOV     DPTR,#MsgRxStatus
8148BD 7404              MOV     A,#04H
8148BF F0                MOVX    @DPTR,A
 1074: 				break;
8148C0 8033              SJMP    ?C0173?MOBILE
 1075: 			}
 1076: 			else
 1077: 			{
 1078: 				MsgRxStatus        = MOBILE_BEGIN;
 1079: 				return MOBILE_FINISH;
 1080: 			}
 1081: 		case MOBILE_STEP4:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 890


8148C2         ?C0211?MOBILE:
 1082: //			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP4" );	
 1083: 			temp = ZhkAtCmdGetErr();		
8148C2 A5128135B1        ECALL   ZhkAtCmdGetErr
8148C7 901B85            MOV     DPTR,#temp
8148CA EF                MOV     A,R7
8148CB F0                MOVX    @DPTR,A
 1084: 			switch( temp )
8148CC 24FE              ADD     A,#0FEH
8148CE 6010              JZ      ?C0215?MOBILE
8148D0 14                DEC     A
8148D1 6004              JZ      ?C0214?MOBILE
8148D3 2403              ADD     A,#03H
8148D5 701E              JNZ     ?C0173?MOBILE
 1085: 			{
 1086: 				case ATCMD_ERR_NULL:				
 1087: 				case ATCMD_ERR_ERR:					
8148D7         ?C0214?MOBILE:
 1088: 					MsgRxStatus        = MOBILE_BEGIN;
8148D7         
8148D7 E4                CLR     A
8148D8 900EB0            MOV     DPTR,#MsgRxStatus
8148DB F0                MOVX    @DPTR,A
 1089: 					return MOBILE_FINISH;
8148DC 7F10              MOV     R7,#010H
8148DE 801A              SJMP    ?C0176?MOBILE
 1090: 					break;
 1091: 				case ATCMD_ERR_TIMEOUT://2
8148E0         ?C0215?MOBILE:
 1092: 					Trace( "\n ZhkMobileSmsRxProcess TIMEOUT2" );
 1093: 					MsgRxStatus       = MOBILE_BEGIN;					
8148E0 E4                CLR     A
8148E1         
8148E1 900EB0            MOV     DPTR,#MsgRxStatus
8148E4 F0                MOVX    @DPTR,A
 1094: 					SMSLastErr  = SMS_ERR_TIMEOUT;
8148E5 900EBC            MOV     DPTR,#SMSLastErr
8148E8 7403              MOV     A,#03H
8148EA F0                MOVX    @DPTR,A
 1095: 					ZhkGprsStatus     = GPRS_STATUS_BREAK;
8148EB 901186            MOV     DPTR,#ZhkGprsStatus
8148EE 7401              MOV     A,#01H
8148F0 F0                MOVX    @DPTR,A
 1096: 					return MOBILE_TIMEOUT;
8148F1 7F11              MOV     R7,#011H
8148F3 8005              SJMP    ?C0176?MOBILE
 1097: 					break;
 1098: 				case ATCMD_ERR_BLOCK://1
 1099: 					// 阻塞状态直接返回
 1100: 					break;						
 1101: 			}		
 1102: 		}
8148F5         ?C0173?MOBILE:
 1103: 		return 	MsgRxStatus;
8148F5 900EB0            MOV     DPTR,#MsgRxStatus
8148F8 E0                MOVX    A,@DPTR
8148F9 FF                MOV     R7,A
 1104: 	}
8148FA         ?C0176?MOBILE:
8148FA A522              ERET    
----- FUNCTION ZhkMobileSmsRxProcess (END) -------


----- FUNCTION _ZhkGSMToAsc (BEGIN) -----
 FILE: 'mobile.c'
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 891


 1123: 	uint ZhkGSMToAsc( uchar xdata* GSMCode , uchar xdata* AscCode , uint len )
 1124: 	{
8148FC 901C8F            MOV     DPTR,#GSMCode
8148FF EE                MOV     A,R6
814900 F0                MOVX    @DPTR,A
814901 A3                INC     DPTR
814902 EF                MOV     A,R7
814903 F0                MOVX    @DPTR,A
814904 A3                INC     DPTR
814905 EC                MOV     A,R4
814906 F0                MOVX    @DPTR,A
814907 A3                INC     DPTR
814908 ED                MOV     A,R5
814909 F0                MOVX    @DPTR,A
81490A A3                INC     DPTR
81490B EA                MOV     A,R2
81490C F0                MOVX    @DPTR,A
81490D A3                INC     DPTR
81490E EB                MOV     A,R3
81490F F0                MOVX    @DPTR,A
 1125: 		uint data lentemp;
 1126: 		uchar data i;
 1127: 		uchar xdata GSMTemp[7];
 1128: 		uchar xdata AscTemp[8];
 1129: 	
 1130: 		// 如需考虑西欧字母和符号应在此处未进行查表处理.
 1131: 		lentemp = len - ( len/8 ) ;
814910 901C93            MOV     DPTR,#len
814913 E0                MOVX    A,@DPTR
814914 FC                MOV     R4,A
814915 A3                INC     DPTR
814916 E0                MOVX    A,@DPTR
814917 FD                MOV     R5,A
814918 AE04              MOV     R6,AR4
81491A 7803              MOV     R0,#03H
81491C         ?C0311?MOBILE:
81491C CE                XCH     A,R6
81491D C3                CLR     C
81491E 13                RRC     A
81491F CE                XCH     A,R6
814920 13                RRC     A
814921 D8F9              DJNZ    R0,?C0311?MOBILE
814923 FF                MOV     R7,A
814924 C3                CLR     C
814925 ED                MOV     A,R5
814926 9F                SUBB    A,R7
814927 F52E              MOV     lentemp+01H,A
814929 EC                MOV     A,R4
81492A 9E                SUBB    A,R6
81492B F52D              MOV     lentemp,A
81492D         ?C0219?MOBILE:
 1132: 		while( lentemp )
81492D E52E              MOV     A,lentemp+01H
81492F 452D              ORL     A,lentemp
814931 7003              JNZ     $ + 5H
814933 024BB9            LJMP    ?C0220?MOBILE
 1133: 		{
 1134: 			if( lentemp >= 7 )
814936 C3                CLR     C
814937 E52E              MOV     A,lentemp+01H
814939 9407              SUBB    A,#07H
81493B E52D              MOV     A,lentemp
81493D 9400              SUBB    A,#00H
81493F 5003              JNC     $ + 5H
814941 024A5D            LJMP    ?C0221?MOBILE
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 892


 1135: 			{
 1136: 				for( i = 0 ; ( i < 7 ) && ( i < lentemp ) ; i ++ ) 
814944 E4                CLR     A
814945 F52F              MOV     i,A
814947         ?C0222?MOBILE:
814947 C3                CLR     C
814948 E52F              MOV     A,i
81494A 952E              SUBB    A,lentemp+01H
81494C E4                CLR     A
81494D 952D              SUBB    A,lentemp
81494F 5025              JNC     ?C0223?MOBILE
 1137: 					GSMTemp[ i ] = GSMCode[ i ];				
814951 901C8F            MOV     DPTR,#GSMCode
814954 E0                MOVX    A,@DPTR
814955 FC                MOV     R4,A
814956 A3                INC     DPTR
814957 E0                MOVX    A,@DPTR
814958 252F              ADD     A,i
81495A F582              MOV     DPL,A
81495C E4                CLR     A
81495D 3C                ADDC    A,R4
81495E F583              MOV     DPH,A
814960 E0                MOVX    A,@DPTR
814961 FF                MOV     R7,A
814962 7495              MOV     A,#LOW GSMTemp
814964 252F              ADD     A,i
814966 F582              MOV     DPL,A
814968 E4                CLR     A
814969 341C              ADDC    A,#HIGH GSMTemp
81496B F583              MOV     DPH,A
81496D EF                MOV     A,R7
81496E F0                MOVX    @DPTR,A
81496F 052F              INC     i
814971 E52F              MOV     A,i
814973 B407D1            CJNE    A,#07H,?C0222?MOBILE
814976         ?C0223?MOBILE:
 1138: 				AscTemp[ 0 ] =   GSMTemp[ 0 ] & 0x7F;
814976 901C95            MOV     DPTR,#GSMTemp
814979 E0                MOVX    A,@DPTR
81497A FE                MOV     R6,A
81497B 547F              ANL     A,#07FH
81497D 901C9C            MOV     DPTR,#AscTemp
814980 F0                MOVX    @DPTR,A
 1139: 				AscTemp[ 1 ] = ( GSMTemp[ 0 ] >> 7 ) | ( ( GSMTemp[ 1 ] << 1 ) & 0x7F );
814981 901C96            MOV     DPTR,#GSMTemp+01H
814984 E0                MOVX    A,@DPTR
814985 FC                MOV     R4,A
814986 25E0              ADD     A,ACC
814988 547F              ANL     A,#07FH
81498A FD                MOV     R5,A
81498B EE                MOV     A,R6
81498C C4                SWAP    A
81498D 13                RRC     A
81498E 13                RRC     A
81498F 13                RRC     A
814990 5401              ANL     A,#01H
814992 4D                ORL     A,R5
814993 901C9D            MOV     DPTR,#AscTemp+01H
814996 F0                MOVX    @DPTR,A
 1140: 				AscTemp[ 2 ] = ( GSMTemp[ 1 ] >> 6 ) | ( ( GSMTemp[ 2 ] << 2 ) & 0x7F );
814997 901C97            MOV     DPTR,#GSMTemp+02H
81499A E0                MOVX    A,@DPTR
81499B FB                MOV     R3,A
81499C 25E0              ADD     A,ACC
81499E 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 893


8149A0 547F              ANL     A,#07FH
8149A2 FE                MOV     R6,A
8149A3 EC                MOV     A,R4
8149A4 C4                SWAP    A
8149A5 13                RRC     A
8149A6 13                RRC     A
8149A7 5403              ANL     A,#03H
8149A9 4E                ORL     A,R6
8149AA 901C9E            MOV     DPTR,#AscTemp+02H
8149AD F0                MOVX    @DPTR,A
 1141: 				AscTemp[ 3 ] = ( GSMTemp[ 2 ] >> 5 ) | ( ( GSMTemp[ 3 ] << 3 ) & 0x7F );
8149AE 901C98            MOV     DPTR,#GSMTemp+03H
8149B1 E0                MOVX    A,@DPTR
8149B2 FC                MOV     R4,A
8149B3 33                RLC     A
8149B4 33                RLC     A
8149B5 33                RLC     A
8149B6 5478              ANL     A,#078H
8149B8 FE                MOV     R6,A
8149B9 EB                MOV     A,R3
8149BA C4                SWAP    A
8149BB 13                RRC     A
8149BC 5407              ANL     A,#07H
8149BE 4E                ORL     A,R6
8149BF 901C9F            MOV     DPTR,#AscTemp+03H
8149C2 F0                MOVX    @DPTR,A
 1142: 				AscTemp[ 4 ] = ( GSMTemp[ 3 ] >> 4 ) | ( ( GSMTemp[ 4 ] << 4 ) & 0x7F );
8149C3 901C99            MOV     DPTR,#GSMTemp+04H
8149C6 E0                MOVX    A,@DPTR
8149C7 FB                MOV     R3,A
8149C8 C4                SWAP    A
8149C9 5470              ANL     A,#070H
8149CB FE                MOV     R6,A
8149CC EC                MOV     A,R4
8149CD C4                SWAP    A
8149CE 540F              ANL     A,#0FH
8149D0 4E                ORL     A,R6
8149D1 901CA0            MOV     DPTR,#AscTemp+04H
8149D4 F0                MOVX    @DPTR,A
 1143: 				AscTemp[ 5 ] = ( GSMTemp[ 4 ] >> 3 ) | ( ( GSMTemp[ 5 ] << 5 ) & 0x7F );
8149D5 901C9A            MOV     DPTR,#GSMTemp+05H
8149D8 E0                MOVX    A,@DPTR
8149D9 FC                MOV     R4,A
8149DA C4                SWAP    A
8149DB 33                RLC     A
8149DC 5460              ANL     A,#060H
8149DE FE                MOV     R6,A
8149DF EB                MOV     A,R3
8149E0 13                RRC     A
8149E1 13                RRC     A
8149E2 13                RRC     A
8149E3 541F              ANL     A,#01FH
8149E5 4E                ORL     A,R6
8149E6 901CA1            MOV     DPTR,#AscTemp+05H
8149E9 F0                MOVX    @DPTR,A
 1144: 				AscTemp[ 6 ] = ( GSMTemp[ 5 ] >> 2 ) | ( ( GSMTemp[ 6 ] << 6 ) & 0x7F );
8149EA 901C9B            MOV     DPTR,#GSMTemp+06H
8149ED E0                MOVX    A,@DPTR
8149EE FB                MOV     R3,A
8149EF C4                SWAP    A
8149F0 33                RLC     A
8149F1 33                RLC     A
8149F2 5440              ANL     A,#040H
8149F4 FE                MOV     R6,A
8149F5 EC                MOV     A,R4
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 894


8149F6 13                RRC     A
8149F7 13                RRC     A
8149F8 543F              ANL     A,#03FH
8149FA 4E                ORL     A,R6
8149FB 901CA2            MOV     DPTR,#AscTemp+06H
8149FE F0                MOVX    @DPTR,A
 1145: 				AscTemp[ 7 ] =   GSMTemp[ 6 ] >> 1;
8149FF EB                MOV     A,R3
814A00 C3                CLR     C
814A01 13                RRC     A
814A02 A3                INC     DPTR
814A03 F0                MOVX    @DPTR,A
 1146: 			//	Trace("\n AscCode = ");
 1147: 				for( i = 0 ; i < 8 && i < lentemp ; i ++ )				
814A04 E4                CLR     A
814A05 F52F              MOV     i,A
814A07         ?C0225?MOBILE:
814A07 C3                CLR     C
814A08 E52F              MOV     A,i
814A0A 952E              SUBB    A,lentemp+01H
814A0C E4                CLR     A
814A0D 952D              SUBB    A,lentemp
814A0F 5025              JNC     ?C0226?MOBILE
 1148: 					AscCode[ i ] = AscTemp[ i ];
814A11 749C              MOV     A,#LOW AscTemp
814A13 252F              ADD     A,i
814A15 F582              MOV     DPL,A
814A17 E4                CLR     A
814A18 341C              ADDC    A,#HIGH AscTemp
814A1A F583              MOV     DPH,A
814A1C E0                MOVX    A,@DPTR
814A1D FF                MOV     R7,A
814A1E 901C91            MOV     DPTR,#AscCode
814A21 E0                MOVX    A,@DPTR
814A22 FC                MOV     R4,A
814A23 A3                INC     DPTR
814A24 E0                MOVX    A,@DPTR
814A25 252F              ADD     A,i
814A27 F582              MOV     DPL,A
814A29 E4                CLR     A
814A2A 3C                ADDC    A,R4
814A2B F583              MOV     DPH,A
814A2D EF                MOV     A,R7
814A2E F0                MOVX    @DPTR,A
814A2F 052F              INC     i
814A31 E52F              MOV     A,i
814A33 B408D1            CJNE    A,#08H,?C0225?MOBILE
814A36         ?C0226?MOBILE:
 1149: 			//		Trace(" %02bx", AscCode[i] );				
 1150: 			//	Trace("\n");
 1151: 				AscCode += 8;
814A36 901C91            MOV     DPTR,#AscCode
814A39 E4                CLR     A
814A3A 75F008            MOV     B,#08H
814A3D A512800600        ECALL   ?C?IILDX
 1152: 				GSMCode += 7;				
814A42 901C8F            MOV     DPTR,#GSMCode
814A45 E4                CLR     A
814A46 75F007            MOV     B,#07H
814A49 A512800600        ECALL   ?C?IILDX
 1153: 				lentemp -= 7;
814A4E 74F9              MOV     A,#0F9H
814A50 252E              ADD     A,lentemp+01H
814A52 F52E              MOV     lentemp+01H,A
814A54 74FF              MOV     A,#0FFH
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 895


814A56 352D              ADDC    A,lentemp
814A58 F52D              MOV     lentemp,A
 1154: 			}
814A5A 02492D            LJMP    ?C0219?MOBILE
814A5D         ?C0221?MOBILE:
 1155: 			else
 1156: 			{
 1157: 				for( i = 0 ; ( i < 7 ) && ( i < lentemp ) ; i ++ ) 
814A5D E4                CLR     A
814A5E F52F              MOV     i,A
814A60         ?C0229?MOBILE:
814A60 C3                CLR     C
814A61 E52F              MOV     A,i
814A63 952E              SUBB    A,lentemp+01H
814A65 E4                CLR     A
814A66 952D              SUBB    A,lentemp
814A68 4003              JC      $ + 5H
814A6A 024B67            LJMP    ?C0230?MOBILE
 1158: 				{
 1159: 					GSMTemp[ i ] = GSMCode[ i ];
814A6D 901C8F            MOV     DPTR,#GSMCode
814A70 E0                MOVX    A,@DPTR
814A71 FC                MOV     R4,A
814A72 A3                INC     DPTR
814A73 E0                MOVX    A,@DPTR
814A74 252F              ADD     A,i
814A76 F582              MOV     DPL,A
814A78 E4                CLR     A
814A79 3C                ADDC    A,R4
814A7A F583              MOV     DPH,A
814A7C E0                MOVX    A,@DPTR
814A7D FF                MOV     R7,A
814A7E 7495              MOV     A,#LOW GSMTemp
814A80 252F              ADD     A,i
814A82 F582              MOV     DPL,A
814A84 E4                CLR     A
814A85 341C              ADDC    A,#HIGH GSMTemp
814A87 F583              MOV     DPH,A
814A89 EF                MOV     A,R7
814A8A F0                MOVX    @DPTR,A
 1160: 					switch( i )
814A8B E52F              MOV     A,i
814A8D A5128007CD        ECALL   ?C?CCASEX
814A92 4AAE              DW      ?C0233?MOBILE
814A94 00                DB      00H
814A95 4ABB              DW      ?C0234?MOBILE
814A97 01                DB      01H
814A98 4AD6              DW      ?C0235?MOBILE
814A9A 02                DB      02H
814A9B 4AF1              DW      ?C0236?MOBILE
814A9D 03                DB      03H
814A9E 4B0A              DW      ?C0237?MOBILE
814AA0 04                DB      04H
814AA1 4B20              DW      ?C0238?MOBILE
814AA3 05                DB      05H
814AA4 4B39              DW      ?C0239?MOBILE
814AA6 06                DB      06H
814AA7 4B52              DW      ?C0240?MOBILE
814AA9 07                DB      07H
814AAA 0000              DW      00H
814AAC 4B5C              DW      ?C0231?MOBILE
 1161: 					{
 1162: 						case  0:
814AAE         ?C0233?MOBILE:
 1163: 							AscTemp[ 0 ] =   GSMTemp[ 0 ] & 0x7F;
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 896


814AAE 901C95            MOV     DPTR,#GSMTemp
814AB1 E0                MOVX    A,@DPTR
814AB2 547F              ANL     A,#07FH
814AB4 901C9C            MOV     DPTR,#AscTemp
814AB7 F0                MOVX    @DPTR,A
 1164: 						break;
814AB8 024B5C            LJMP    ?C0231?MOBILE
 1165: 						case 1:
814ABB         ?C0234?MOBILE:
 1166: 							AscTemp[ 1 ] = ( GSMTemp[ 0 ] >> 7 ) | ( ( GSMTemp[ 1 ] << 1 ) & 0x7F );
814ABB 901C96            MOV     DPTR,#GSMTemp+01H
814ABE E0                MOVX    A,@DPTR
814ABF 25E0              ADD     A,ACC
814AC1 547F              ANL     A,#07FH
814AC3 FF                MOV     R7,A
814AC4 901C95            MOV     DPTR,#GSMTemp
814AC7 E0                MOVX    A,@DPTR
814AC8 C4                SWAP    A
814AC9 13                RRC     A
814ACA 13                RRC     A
814ACB 13                RRC     A
814ACC 5401              ANL     A,#01H
814ACE 4F                ORL     A,R7
814ACF 901C9D            MOV     DPTR,#AscTemp+01H
814AD2 F0                MOVX    @DPTR,A
 1167: 						break;
814AD3 024B5C            LJMP    ?C0231?MOBILE
 1168: 						case 2:
814AD6         ?C0235?MOBILE:
 1169: 							AscTemp[ 2 ] = ( GSMTemp[ 1 ] >> 6 ) | ( ( GSMTemp[ 2 ] << 2 ) & 0x7F );
814AD6 901C97            MOV     DPTR,#GSMTemp+02H
814AD9 E0                MOVX    A,@DPTR
814ADA 25E0              ADD     A,ACC
814ADC 25E0              ADD     A,ACC
814ADE 547F              ANL     A,#07FH
814AE0 FF                MOV     R7,A
814AE1 901C96            MOV     DPTR,#GSMTemp+01H
814AE4 E0                MOVX    A,@DPTR
814AE5 C4                SWAP    A
814AE6 13                RRC     A
814AE7 13                RRC     A
814AE8 5403              ANL     A,#03H
814AEA 4F                ORL     A,R7
814AEB 901C9E            MOV     DPTR,#AscTemp+02H
814AEE F0                MOVX    @DPTR,A
 1170: 						break;
814AEF 806B              SJMP    ?C0231?MOBILE
 1171: 						case 3:
814AF1         ?C0236?MOBILE:
 1172: 							AscTemp[ 3 ] = ( GSMTemp[ 2 ] >> 5 ) | ( ( GSMTemp[ 3 ] << 3 ) & 0x7F );
814AF1 901C98            MOV     DPTR,#GSMTemp+03H
814AF4 E0                MOVX    A,@DPTR
814AF5 33                RLC     A
814AF6 33                RLC     A
814AF7 33                RLC     A
814AF8 5478              ANL     A,#078H
814AFA FF                MOV     R7,A
814AFB 901C97            MOV     DPTR,#GSMTemp+02H
814AFE E0                MOVX    A,@DPTR
814AFF C4                SWAP    A
814B00 13                RRC     A
814B01 5407              ANL     A,#07H
814B03 4F                ORL     A,R7
814B04 901C9F            MOV     DPTR,#AscTemp+03H
814B07 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 897


 1173: 						break;						
814B08 8052              SJMP    ?C0231?MOBILE
 1174: 						case 4:
814B0A         ?C0237?MOBILE:
 1175: 							AscTemp[ 4 ] = ( GSMTemp[ 3 ] >> 4 ) | ( ( GSMTemp[ 4 ] << 4 ) & 0x7F );
814B0A 901C99            MOV     DPTR,#GSMTemp+04H
814B0D E0                MOVX    A,@DPTR
814B0E C4                SWAP    A
814B0F 5470              ANL     A,#070H
814B11 FF                MOV     R7,A
814B12 901C98            MOV     DPTR,#GSMTemp+03H
814B15 E0                MOVX    A,@DPTR
814B16 C4                SWAP    A
814B17 540F              ANL     A,#0FH
814B19 4F                ORL     A,R7
814B1A 901CA0            MOV     DPTR,#AscTemp+04H
814B1D F0                MOVX    @DPTR,A
 1176: 						break;
814B1E 803C              SJMP    ?C0231?MOBILE
 1177: 						case 5:
814B20         ?C0238?MOBILE:
 1178: 							AscTemp[ 5 ] = ( GSMTemp[ 4 ] >> 3 ) | ( ( GSMTemp[ 5 ] << 5 ) & 0x7F );
814B20 901C9A            MOV     DPTR,#GSMTemp+05H
814B23 E0                MOVX    A,@DPTR
814B24 C4                SWAP    A
814B25 33                RLC     A
814B26 5460              ANL     A,#060H
814B28 FF                MOV     R7,A
814B29 901C99            MOV     DPTR,#GSMTemp+04H
814B2C E0                MOVX    A,@DPTR
814B2D 13                RRC     A
814B2E 13                RRC     A
814B2F 13                RRC     A
814B30 541F              ANL     A,#01FH
814B32 4F                ORL     A,R7
814B33 901CA1            MOV     DPTR,#AscTemp+05H
814B36 F0                MOVX    @DPTR,A
 1179: 						break;
814B37 8023              SJMP    ?C0231?MOBILE
 1180: 						case 6:
814B39         ?C0239?MOBILE:
 1181: 							AscTemp[ 6 ] = ( GSMTemp[ 5 ] >> 2 ) | ( ( GSMTemp[ 6 ] << 6 ) & 0x7F );
814B39 901C9B            MOV     DPTR,#GSMTemp+06H
814B3C E0                MOVX    A,@DPTR
814B3D C4                SWAP    A
814B3E 33                RLC     A
814B3F 33                RLC     A
814B40 5440              ANL     A,#040H
814B42 FF                MOV     R7,A
814B43 901C9A            MOV     DPTR,#GSMTemp+05H
814B46 E0                MOVX    A,@DPTR
814B47 13                RRC     A
814B48 13                RRC     A
814B49 543F              ANL     A,#03FH
814B4B 4F                ORL     A,R7
814B4C 901CA2            MOV     DPTR,#AscTemp+06H
814B4F F0                MOVX    @DPTR,A
 1182: 						break;
814B50 800A              SJMP    ?C0231?MOBILE
 1183: 						case 7:
814B52         ?C0240?MOBILE:
 1184: 							AscTemp[ 7 ] =   GSMTemp[ 6 ] >> 1;
814B52 901C9B            MOV     DPTR,#GSMTemp+06H
814B55 E0                MOVX    A,@DPTR
814B56 C3                CLR     C
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 898


814B57 13                RRC     A
814B58 901CA3            MOV     DPTR,#AscTemp+07H
814B5B F0                MOVX    @DPTR,A
 1185: 						break;
 1186: 					}
 1187: 				}								
814B5C         ?C0231?MOBILE:
814B5C 052F              INC     i
814B5E E52F              MOV     A,i
814B60 6407              XRL     A,#07H
814B62 6003              JZ      $ + 5H
814B64 024A60            LJMP    ?C0229?MOBILE
814B67         ?C0230?MOBILE:
 1188: 			//	Trace("\n AscCode = ");
 1189: 				for( i = 0 ; ( i < 8 ) && ( i < lentemp ); i ++ )			
814B67 E4                CLR     A
814B68 F52F              MOV     i,A
814B6A         ?C0241?MOBILE:
814B6A C3                CLR     C
814B6B E52F              MOV     A,i
814B6D 952E              SUBB    A,lentemp+01H
814B6F E4                CLR     A
814B70 952D              SUBB    A,lentemp
814B72 5025              JNC     ?C0242?MOBILE
 1190: 					AscCode[ i ] = AscTemp[ i ];
814B74 749C              MOV     A,#LOW AscTemp
814B76 252F              ADD     A,i
814B78 F582              MOV     DPL,A
814B7A E4                CLR     A
814B7B 341C              ADDC    A,#HIGH AscTemp
814B7D F583              MOV     DPH,A
814B7F E0                MOVX    A,@DPTR
814B80 FF                MOV     R7,A
814B81 901C91            MOV     DPTR,#AscCode
814B84 E0                MOVX    A,@DPTR
814B85 FC                MOV     R4,A
814B86 A3                INC     DPTR
814B87 E0                MOVX    A,@DPTR
814B88 252F              ADD     A,i
814B8A F582              MOV     DPL,A
814B8C E4                CLR     A
814B8D 3C                ADDC    A,R4
814B8E F583              MOV     DPH,A
814B90 EF                MOV     A,R7
814B91 F0                MOVX    @DPTR,A
814B92 052F              INC     i
814B94 E52F              MOV     A,i
814B96 B408D1            CJNE    A,#08H,?C0241?MOBILE
814B99         ?C0242?MOBILE:
 1191: 			//		Trace(" %02bx", AscCode[i] );
 1192: 			//	Trace("\n");
 1193: 				AscCode += 8;
814B99 901C91            MOV     DPTR,#AscCode
814B9C E4                CLR     A
814B9D 75F008            MOV     B,#08H
814BA0 A512800600        ECALL   ?C?IILDX
 1194: 				GSMCode += 7;
814BA5 901C8F            MOV     DPTR,#GSMCode
814BA8 E4                CLR     A
814BA9 75F007            MOV     B,#07H
814BAC A512800600        ECALL   ?C?IILDX
 1195: 				lentemp = 0;
814BB1 E4                CLR     A
814BB2 F52D              MOV     lentemp,A
814BB4 F52E              MOV     lentemp+01H,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 899


 1196: 			}
 1197: 		}
814BB6 02492D            LJMP    ?C0219?MOBILE
814BB9         ?C0220?MOBILE:
 1198: 		return len;
814BB9 901C93            MOV     DPTR,#len
814BBC E0                MOVX    A,@DPTR
814BBD FE                MOV     R6,A
814BBE A3                INC     DPTR
814BBF E0                MOVX    A,@DPTR
814BC0 FF                MOV     R7,A
 1199: 	}
814BC1         ?C0244?MOBILE:
814BC1 A522              ERET    
----- FUNCTION _ZhkGSMToAsc (END) -------


----- FUNCTION _ZhkMessageToGSM (BEGIN) -----
 FILE: 'mobile.c'
 1206: 	uint ZhkMessageToGSM( uchar xdata* GSMCode , uchar xdata* MessageCode , uint len )
 1207: 	{
814BC3 901ACA            MOV     DPTR,#GSMCode
814BC6 EE                MOV     A,R6
814BC7 F0                MOVX    @DPTR,A
814BC8 A3                INC     DPTR
814BC9 EF                MOV     A,R7
814BCA F0                MOVX    @DPTR,A
814BCB A3                INC     DPTR
814BCC EC                MOV     A,R4
814BCD F0                MOVX    @DPTR,A
814BCE A3                INC     DPTR
814BCF ED                MOV     A,R5
814BD0 F0                MOVX    @DPTR,A
814BD1 A3                INC     DPTR
814BD2 EA                MOV     A,R2
814BD3 F0                MOVX    @DPTR,A
814BD4 A3                INC     DPTR
814BD5 EB                MOV     A,R3
814BD6 F0                MOVX    @DPTR,A
 1208: 		uint lentemp;
 1209: 		uchar data i;
 1210: 		uchar xdata GSMTemp[7];
 1211: 		uchar xdata AscTemp[8];
 1212: 		
 1213: //		for( i = 0; i < len; i++ )		
 1214: //			sprintf( GSMCode+2*i,"%02bx", MessageCode[i] );
 1215: 
 1216: 		lentemp = len;
;---- Variable 'lentemp' assigned to Register 'R2/R3' ----
814BD7         ?C0245?MOBILE:
 1217: 		while( lentemp )
814BD7 EB                MOV     A,R3
814BD8 4A                ORL     A,R2
814BD9 7003              JNZ     $ + 5H
814BDB 024D34            LJMP    ?C0246?MOBILE
 1218: 		{
 1219: 			for( i = 0 ; i < 8  ; i ++ ) 
814BDE E4                CLR     A
814BDF F532              MOV     i,A
814BE1         ?C0247?MOBILE:
 1220: 				AscTemp[ i ] = 0;
814BE1 74D7              MOV     A,#LOW AscTemp
814BE3 2532              ADD     A,i
814BE5 F582              MOV     DPL,A
814BE7 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 900


814BE8 341A              ADDC    A,#HIGH AscTemp
814BEA F583              MOV     DPH,A
814BEC E4                CLR     A
814BED F0                MOVX    @DPTR,A
814BEE 0532              INC     i
814BF0 E532              MOV     A,i
814BF2 B408EC            CJNE    A,#08H,?C0247?MOBILE
814BF5         ?C0248?MOBILE:
 1221: 			for( i = 0 ; i < 8 && i < lentemp; i ++ ) 
814BF5 E4                CLR     A
814BF6 F532              MOV     i,A
814BF8         ?C0250?MOBILE:
814BF8 C3                CLR     C
814BF9 E532              MOV     A,i
814BFB 9B                SUBB    A,R3
814BFC E4                CLR     A
814BFD 9A                SUBB    A,R2
814BFE 5027              JNC     ?C0251?MOBILE
 1222: 				AscTemp[ i ] = MessageCode[ i ] & 0x7F;
814C00 901ACC            MOV     DPTR,#MessageCode
814C03 E0                MOVX    A,@DPTR
814C04 FC                MOV     R4,A
814C05 A3                INC     DPTR
814C06 E0                MOVX    A,@DPTR
814C07 2532              ADD     A,i
814C09 F582              MOV     DPL,A
814C0B E4                CLR     A
814C0C 3C                ADDC    A,R4
814C0D F583              MOV     DPH,A
814C0F E0                MOVX    A,@DPTR
814C10 547F              ANL     A,#07FH
814C12 FF                MOV     R7,A
814C13 74D7              MOV     A,#LOW AscTemp
814C15 2532              ADD     A,i
814C17 F582              MOV     DPL,A
814C19 E4                CLR     A
814C1A 341A              ADDC    A,#HIGH AscTemp
814C1C F583              MOV     DPH,A
814C1E EF                MOV     A,R7
814C1F F0                MOVX    @DPTR,A
814C20 0532              INC     i
814C22 E532              MOV     A,i
814C24 B408D1            CJNE    A,#08H,?C0250?MOBILE
814C27         ?C0251?MOBILE:
 1223: 			
 1224: 			GSMTemp[ 0 ] =   AscTemp[ 0 ]        | ( AscTemp[ 1 ] << 7 );
814C27 901AD8            MOV     DPTR,#AscTemp+01H
814C2A E0                MOVX    A,@DPTR
814C2B FF                MOV     R7,A
814C2C C4                SWAP    A
814C2D 33                RLC     A
814C2E 33                RLC     A
814C2F 33                RLC     A
814C30 5480              ANL     A,#080H
814C32 FE                MOV     R6,A
814C33 901AD7            MOV     DPTR,#AscTemp
814C36 E0                MOVX    A,@DPTR
814C37 4E                ORL     A,R6
814C38 901AD0            MOV     DPTR,#GSMTemp
814C3B F0                MOVX    @DPTR,A
 1225: 			GSMTemp[ 1 ] = ( AscTemp[ 1 ] >> 1 ) | ( AscTemp[ 2 ] << 6 );
814C3C 901AD9            MOV     DPTR,#AscTemp+02H
814C3F E0                MOVX    A,@DPTR
814C40 FE                MOV     R6,A
814C41 C4                SWAP    A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 901


814C42 33                RLC     A
814C43 33                RLC     A
814C44 54C0              ANL     A,#0C0H
814C46 FD                MOV     R5,A
814C47 EF                MOV     A,R7
814C48 C3                CLR     C
814C49 13                RRC     A
814C4A 4D                ORL     A,R5
814C4B 901AD1            MOV     DPTR,#GSMTemp+01H
814C4E F0                MOVX    @DPTR,A
 1226: 			GSMTemp[ 2 ] = ( AscTemp[ 2 ] >> 2 ) | ( AscTemp[ 3 ] << 5 );
814C4F 901ADA            MOV     DPTR,#AscTemp+03H
814C52 E0                MOVX    A,@DPTR
814C53 FF                MOV     R7,A
814C54 C4                SWAP    A
814C55 33                RLC     A
814C56 54E0              ANL     A,#0E0H
814C58 FD                MOV     R5,A
814C59 EE                MOV     A,R6
814C5A 13                RRC     A
814C5B 13                RRC     A
814C5C 543F              ANL     A,#03FH
814C5E 4D                ORL     A,R5
814C5F 901AD2            MOV     DPTR,#GSMTemp+02H
814C62 F0                MOVX    @DPTR,A
 1227: 			GSMTemp[ 3 ] = ( AscTemp[ 3 ] >> 3 ) | ( AscTemp[ 4 ] << 4 );
814C63 901ADB            MOV     DPTR,#AscTemp+04H
814C66 E0                MOVX    A,@DPTR
814C67 FE                MOV     R6,A
814C68 C4                SWAP    A
814C69 54F0              ANL     A,#0F0H
814C6B FD                MOV     R5,A
814C6C EF                MOV     A,R7
814C6D 13                RRC     A
814C6E 13                RRC     A
814C6F 13                RRC     A
814C70 541F              ANL     A,#01FH
814C72 4D                ORL     A,R5
814C73 901AD3            MOV     DPTR,#GSMTemp+03H
814C76 F0                MOVX    @DPTR,A
 1228: 			GSMTemp[ 4 ] = ( AscTemp[ 4 ] >> 4 ) | ( AscTemp[ 5 ] << 3 );
814C77 901ADC            MOV     DPTR,#AscTemp+05H
814C7A E0                MOVX    A,@DPTR
814C7B FF                MOV     R7,A
814C7C 33                RLC     A
814C7D 33                RLC     A
814C7E 33                RLC     A
814C7F 54F8              ANL     A,#0F8H
814C81 FD                MOV     R5,A
814C82 EE                MOV     A,R6
814C83 C4                SWAP    A
814C84 540F              ANL     A,#0FH
814C86 4D                ORL     A,R5
814C87 901AD4            MOV     DPTR,#GSMTemp+04H
814C8A F0                MOVX    @DPTR,A
 1229: 			GSMTemp[ 5 ] = ( AscTemp[ 5 ] >> 5 ) | ( AscTemp[ 6 ] << 2 );
814C8B 901ADD            MOV     DPTR,#AscTemp+06H
814C8E E0                MOVX    A,@DPTR
814C8F FE                MOV     R6,A
814C90 25E0              ADD     A,ACC
814C92 25E0              ADD     A,ACC
814C94 FD                MOV     R5,A
814C95 EF                MOV     A,R7
814C96 C4                SWAP    A
814C97 13                RRC     A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 902


814C98 5407              ANL     A,#07H
814C9A 4D                ORL     A,R5
814C9B 901AD5            MOV     DPTR,#GSMTemp+05H
814C9E F0                MOVX    @DPTR,A
 1230: 			GSMTemp[ 6 ] = ( AscTemp[ 6 ] >> 6 ) | ( AscTemp[ 7 ] << 1 );
814C9F 901ADE            MOV     DPTR,#AscTemp+07H
814CA2 E0                MOVX    A,@DPTR
814CA3 25E0              ADD     A,ACC
814CA5 FF                MOV     R7,A
814CA6 EE                MOV     A,R6
814CA7 C4                SWAP    A
814CA8 13                RRC     A
814CA9 13                RRC     A
814CAA 5403              ANL     A,#03H
814CAC 4F                ORL     A,R7
814CAD 901AD6            MOV     DPTR,#GSMTemp+06H
814CB0 F0                MOVX    @DPTR,A
 1231: 			
 1232: 			for( i = 0 ; i < 7 && i < ( len * 7 + 7 ) / 8 ; i ++ )
814CB1 E4                CLR     A
814CB2 F532              MOV     i,A
814CB4         ?C0253?MOBILE:
814CB4 901ACE            MOV     DPTR,#len
814CB7 E0                MOVX    A,@DPTR
814CB8 FE                MOV     R6,A
814CB9 A3                INC     DPTR
814CBA E0                MOVX    A,@DPTR
814CBB FF                MOV     R7,A
814CBC 7C00              MOV     R4,#00H
814CBE 7D07              MOV     R5,#07H
814CC0 A512800559        ECALL   ?C?IMUL
814CC5 EF                MOV     A,R7
814CC6 2407              ADD     A,#07H
814CC8 FF                MOV     R7,A
814CC9 E4                CLR     A
814CCA 3E                ADDC    A,R6
814CCB FE                MOV     R6,A
814CCC EF                MOV     A,R7
814CCD 7803              MOV     R0,#03H
814CCF         ?C0312?MOBILE:
814CCF CE                XCH     A,R6
814CD0 C3                CLR     C
814CD1 13                RRC     A
814CD2 CE                XCH     A,R6
814CD3 13                RRC     A
814CD4 D8F9              DJNZ    R0,?C0312?MOBILE
814CD6 FF                MOV     R7,A
814CD7 C3                CLR     C
814CD8 E532              MOV     A,i
814CDA 9F                SUBB    A,R7
814CDB E4                CLR     A
814CDC 9E                SUBB    A,R6
814CDD 5025              JNC     ?C0254?MOBILE
 1233: 				GSMCode[ i ] = GSMTemp[ i ];
814CDF 74D0              MOV     A,#LOW GSMTemp
814CE1 2532              ADD     A,i
814CE3 F582              MOV     DPL,A
814CE5 E4                CLR     A
814CE6 341A              ADDC    A,#HIGH GSMTemp
814CE8 F583              MOV     DPH,A
814CEA E0                MOVX    A,@DPTR
814CEB FF                MOV     R7,A
814CEC 901ACA            MOV     DPTR,#GSMCode
814CEF E0                MOVX    A,@DPTR
814CF0 FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 903


814CF1 A3                INC     DPTR
814CF2 E0                MOVX    A,@DPTR
814CF3 2532              ADD     A,i
814CF5 F582              MOV     DPL,A
814CF7 E4                CLR     A
814CF8 3C                ADDC    A,R4
814CF9 F583              MOV     DPH,A
814CFB EF                MOV     A,R7
814CFC F0                MOVX    @DPTR,A
814CFD 0532              INC     i
814CFF E532              MOV     A,i
814D01 B407B0            CJNE    A,#07H,?C0253?MOBILE
814D04         ?C0254?MOBILE:
 1234: 			if ( lentemp < 8 ) 
814D04 C3                CLR     C
814D05 EB                MOV     A,R3
814D06 9408              SUBB    A,#08H
814D08 EA                MOV     A,R2
814D09 9400              SUBB    A,#00H
814D0B 5004              JNC     ?C0256?MOBILE
 1235: 				lentemp = 8;
814D0D 7A00              MOV     R2,#00H
814D0F 7B08              MOV     R3,#08H
814D11         ?C0256?MOBILE:
 1236: 			MessageCode += 8;
814D11 901ACC            MOV     DPTR,#MessageCode
814D14 E4                CLR     A
814D15 75F008            MOV     B,#08H
814D18 A512800600        ECALL   ?C?IILDX
 1237: 			GSMCode += 7;
814D1D 901ACA            MOV     DPTR,#GSMCode
814D20 E4                CLR     A
814D21 75F007            MOV     B,#07H
814D24 A512800600        ECALL   ?C?IILDX
 1238: 			lentemp -= 8;
814D29 74F8              MOV     A,#0F8H
814D2B 2B                ADD     A,R3
814D2C FB                MOV     R3,A
814D2D 74FF              MOV     A,#0FFH
814D2F 3A                ADDC    A,R2
814D30 FA                MOV     R2,A
 1239: 		}
814D31 024BD7            LJMP    ?C0245?MOBILE
814D34         ?C0246?MOBILE:
 1240: //		Trace("\n 7bit Encode ");
 1241: 		// 如需考虑西欧字母和符号应在此处未进行查表处理.
 1242: 		return ((len * 7 + 7) / 8);
814D34 901ACE            MOV     DPTR,#len
814D37 E0                MOVX    A,@DPTR
814D38 FE                MOV     R6,A
814D39 A3                INC     DPTR
814D3A E0                MOVX    A,@DPTR
814D3B FF                MOV     R7,A
814D3C 7C00              MOV     R4,#00H
814D3E 7D07              MOV     R5,#07H
814D40 A512800559        ECALL   ?C?IMUL
814D45 EF                MOV     A,R7
814D46 2407              ADD     A,#07H
814D48 FF                MOV     R7,A
814D49 E4                CLR     A
814D4A 3E                ADDC    A,R6
814D4B FE                MOV     R6,A
814D4C EF                MOV     A,R7
814D4D 7803              MOV     R0,#03H
814D4F         ?C0313?MOBILE:
LX51 LINKER/LOCATER V3.65b                                                            11/04/2010  11:32:29  PAGE 904


814D4F CE                XCH     A,R6
814D50 C3                CLR     C
814D51 13                RRC     A
814D52 CE                XCH     A,R6
814D53 13                RRC     A
814D54 D8F9              DJNZ    R0,?C0313?MOBILE
814D56 FF                MOV     R7,A
 1243: 	}
814D57         ?C0257?MOBILE:
814D57 A522              ERET    
----- FUNCTION _ZhkMessageToGSM (END) -------


