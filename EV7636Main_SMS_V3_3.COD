LX51 LINKER/LOCATER V3.65b                                                              09/06/2010  14:46:59  PAGE 1





ASSEMBLER CODE PACKING OF MODULE:  EV7636Main_SMS_V3_3 (MAINFLOW)


80000B A50281133C        EJMP    081133CH
800023 A502807241        EJMP    0807241H
800053 A502812FCD        EJMP    0812FCDH
----- FUNCTION ChooseReturn (BEGIN) -----
 FILE: 'mainflow.c'
  351: u_char ChooseReturn( )
  352: {
  353: //	u_char xdata length = 0;
  354: 	u_char xdata pt= 0;
80198F E4                CLR     A
801990 901596            MOV     DPTR,#pt
801993 F0                MOVX    @DPTR,A
  355: 	u_char xdata MyKey = 0;
801994 A3                INC     DPTR
801995 F0                MOVX    @DPTR,A
  356: 
  357: 	ClearKey();	
801996 A5128087A8        ECALL   ClearKey
  358: 	//显示字符	
  359: 	DisplayLine = STR_OK_NOT;	 
80199B 900B21            MOV     DPTR,#DisplayLine
80199E 7405              MOV     A,#05H
8019A0 F0                MOVX    @DPTR,A
  360: 	DisplayStr( 0, __LINE1__ , 1, DispInformationTable[	DisplayLine ].str , DispInformationTable[ DisplayLine ].len 
>> );
8019A1 D21A              SETB    ?_DisplayStr?BIT
8019A3 E0                MOVX    A,@DPTR
8019A4 FF                MOV     R7,A
8019A5 25E0              ADD     A,ACC
8019A7 25E0              ADD     A,ACC
8019A9 2471              ADD     A,#LOW DispInformationTable
8019AB F582              MOV     DPL,A
8019AD E4                CLR     A
8019AE 3404              ADDC    A,#HIGH DispInformationTable
8019B0 F583              MOV     DPH,A
8019B2 A5128007C0        ECALL   ?C?PLDCODE
8019B7 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8019BA A5128007B6        ECALL   ?C?PSTXDATA
8019BF EF                MOV     A,R7
8019C0 25E0              ADD     A,ACC
8019C2 25E0              ADD     A,ACC
8019C4 2474              ADD     A,#LOW DispInformationTable+03H
8019C6 F582              MOV     DPL,A
8019C8 E4                CLR     A
8019C9 3404              ADDC    A,#HIGH DispInformationTable+03H
8019CB F583              MOV     DPH,A
8019CD E4                CLR     A
8019CE 93                MOVC    A,@A+DPTR
8019CF 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8019D2 F0                MOVX    @DPTR,A
8019D3 7D01              MOV     R5,#01H
8019D5 E4                CLR     A
8019D6 FF                MOV     R7,A
8019D7 A512808062        ECALL   _DisplayStr
  361:     
  362: 	//等待选择
  363: 	LzjSecTimer= DEFAULT_PRESSKEY_TIMEOUT;
8019DC 751D0F            MOV     LzjSecTimer,#0FH
8019DF         ?C0070?MAINFLOW:
  364: 	while( LzjSecTimer )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 2


8019DF E51D              MOV     A,LzjSecTimer
8019E1 6026              JZ      ?C0071?MAINFLOW
  365: 	{
  366: 		SchedulerProcess();
8019E3 A512809545        ECALL   SchedulerProcess
  367: 		MyKey = GetKey();
8019E8 A512809275        ECALL   GetKey
8019ED 901597            MOV     DPTR,#MyKey
8019F0 EF                MOV     A,R7
8019F1 F0                MOVX    @DPTR,A
  368: 		if ( MyKey == KEY_NULL ) 
8019F2 F4                CPL     A
8019F3 60EA              JZ      ?C0070?MAINFLOW
  369: 			continue;
8019F5         ?C0072?MAINFLOW:
  370: 		switch ( MyKey )
8019F5 901597            MOV     DPTR,#MyKey
8019F8 E0                MOVX    A,@DPTR
8019F9 24E5              ADD     A,#0E5H
8019FB 6008              JZ      ?C0076?MAINFLOW
8019FD 240E              ADD     A,#0EH
8019FF 70DE              JNZ     ?C0070?MAINFLOW
  371: 	 	{			
  372: 			case 	KEY_SUBMIT:			
801A01         ?C0074?MAINFLOW:
  373: 				return 0 ;			
801A01 7F00              MOV     R7,#00H
801A03 8006              SJMP    ?C0075?MAINFLOW
  374: 			case KEY_CANCEL:				
801A05         ?C0076?MAINFLOW:
  375: 				return 1 ;					
801A05 7F01              MOV     R7,#01H
801A07 8002              SJMP    ?C0075?MAINFLOW
  376: 			default:
  377: 				continue;
  378: 		}	
  379: 	}
801A09         ?C0071?MAINFLOW:
  380: 	return 2;
801A09 7F02              MOV     R7,#02H
  381: }
801A0B         ?C0075?MAINFLOW:
801A0B A522              ERET    
----- FUNCTION ChooseReturn (END) -------


----- FUNCTION CheaperOnePlz (BEGIN) -----
 FILE: 'mainflow.c'
 3309: u_char CheaperOnePlz()
 3310: {
 3311: //	u_char xdata length;
 3312: 	u_char xdata pt= 0;
801A0D E4                CLR     A
801A0E 901595            MOV     DPTR,#pt
801A11 F0                MOVX    @DPTR,A
 3313: //	u_int xdata Unicode_buffer[ MAX_CHAR_NUMBER *2 ];
 3314: 
 3315: //	Trace( "\n CheaperOnePlz");
 3316: 	DisplayLine = STR_CHOICE_CHEAPERONE;
801A12 900B21            MOV     DPTR,#DisplayLine
801A15 740C              MOV     A,#0CH
801A17 A51280802C        ECALL   ?L?COM0003
 3317:   //  length = DispInformationTable[	DisplayLine ].len;
 3318:   //  memcpy( DisplayBuffer , DispInformationTable[ DisplayLine ].str , length );	
 3319: 	DisplayStr( 0, 0, 1, DispInformationTable[	DisplayLine ].str, DispInformationTable[ DisplayLine ].len );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 3


 3320: //	DisplayInfo( __LINE0__ , 0 , DisplayBuffer );
 3321: 
 3322: 	pt = ChooseReturn( );
801A1C A51280198F        ECALL   ChooseReturn
801A21 901595            MOV     DPTR,#pt
801A24 EF                MOV     A,R7
801A25 F0                MOVX    @DPTR,A
 3323: 	if( pt == 0 )//确定
801A26 7009              JNZ     ?C0727?MAINFLOW
 3324: 	{
 3325: 		ClearKey();	
801A28 A5128087A8        ECALL   ClearKey
 3326: 		return 1;
801A2D 7F01              MOV     R7,#01H
801A2F 8028              SJMP    ?C0728?MAINFLOW
 3327: 	}
801A31         ?C0727?MAINFLOW:
 3328: 	if( pt == 1 ) //取消
801A31 901595            MOV     DPTR,#pt
801A34 E0                MOVX    A,@DPTR
801A35 B40104            CJNE    A,#01H,?C0729?MAINFLOW
 3329: 		return 0;
801A38 7F00              MOV     R7,#00H
801A3A 801D              SJMP    ?C0728?MAINFLOW
801A3C         ?C0729?MAINFLOW:
 3330: 	DisplayLine = STR_OPERATION_TIMEOUT;
801A3C 900B21            MOV     DPTR,#DisplayLine
801A3F 741E              MOV     A,#01EH
801A41 A51280802C        ECALL   ?L?COM0003
 3331: 	DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len );
>> 
 3332: 	ClearDisplayLine( 2 );
801A46 7F02              MOV     R7,#02H
801A48 A5128087BB        ECALL   _ClearDisplayLine
 3333: 	WaitForWork( 500 , NULL );
801A4D E4                CLR     A
801A4E 7FF4              MOV     R7,#0F4H
801A50 7E01              MOV     R6,#01H
801A52 A512807B35        ECALL   ?L?COM000D
 3334: 	return 0;
801A57 7F00              MOV     R7,#00H
 3335: }
801A59         ?C0728?MAINFLOW:
801A59 A522              ERET    
----- FUNCTION CheaperOnePlz (END) -------


----- FUNCTION DispInputMoney (BEGIN) -----
 FILE: 'mainflow.c'
 3265: u_char DispInputMoney()
 3266: {
 3267: 	u_char xdata length = 0;
 3268: 	u_char xdata pt= 0;
801A5B E4                CLR     A
801A5C 901595            MOV     DPTR,#length
801A5F F0                MOVX    @DPTR,A
 3269: 
;---- Variable 'pt' assigned to Register 'R7' ----
 3270: 	//先显示钞票不足
 3271: 	DisplayLine = STR_NOT_ENOUGH_NOTE;
801A60 900B21            MOV     DPTR,#DisplayLine
801A63 7413              MOV     A,#013H
801A65 A51280802C        ECALL   ?L?COM0003
 3272: 	DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len );
>> 	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 4


 3273: 	pt = 0;
801A6A E4                CLR     A
801A6B FF                MOV     R7,A
 3274: 	pt = ChooseReturn( );
801A6C A51280198F        ECALL   ChooseReturn
 3275: 	if( pt == 0 )//确定
801A71 EF                MOV     A,R7
801A72 700E              JNZ     ?C0719?MAINFLOW
 3276: 	{
 3277: 		EnableBillDev();
801A74 A512808FFA        ECALL   EnableBillDev
 3278: 		DisplayCurrentMoney( CurrentPayed );
801A79 A512801AB1        ECALL   ?L?COM001F
 3279: 		return 1;
801A7E 7F01              MOV     R7,#01H
801A80 802D              SJMP    ?C0720?MAINFLOW
 3280: 	}
801A82         ?C0719?MAINFLOW:
 3281: 	else //取消或超时
 3282: 	{
 3283: 		memset( DisplayBuffer , 0 , sizeof( DisplayBuffer ));
801A82 7E00              MOV     R6,#00H
801A84 7F14              MOV     R7,#014H
801A86 7D00              MOV     R5,#00H
801A88 7B00              MOV     R3,#?C?XDATASEG
801A8A 7A04              MOV     R2,#HIGH DisplayBuffer
801A8C 796B              MOV     R1,#LOW DisplayBuffer
801A8E A5128008A6        ECALL   ?C?MEMSET
 3284: 		DisplayLine = STR_PLEASE_WAIT;		
801A93 900B21            MOV     DPTR,#DisplayLine
801A96 7412              MOV     A,#012H
801A98 A51280802C        ECALL   ?L?COM0003
 3285: 		DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len )
>> ;
 3286: //		ClearDisplayLine1();
 3287: 		ClearDisplayLine( 2 );
801A9D 7F02              MOV     R7,#02H
801A9F A5128087BB        ECALL   _ClearDisplayLine
 3288: 		WaitForWork( 100 , NULL );
801AA4 E4                CLR     A
801AA5 7F64              MOV     R7,#064H
801AA7 FE                MOV     R6,A
801AA8 A512807B35        ECALL   ?L?COM000D
 3289: 		return 0;
801AAD 7F00              MOV     R7,#00H
 3290: 	}
 3291: }
801AAF         ?C0720?MAINFLOW:
801AAF A522              ERET    
----- FUNCTION DispInputMoney (END) -------


----- FUNCTION ?L?COM001F (BEGIN) -----
801AB1 900B1F            MOV     DPTR,#CurrentPayed
801AB4 E0                MOVX    A,@DPTR
801AB5 FE                MOV     R6,A
801AB6 A3                INC     DPTR
801AB7 E0                MOVX    A,@DPTR
801AB8 FF                MOV     R7,A
----- FUNCTION _DisplayCurrentMoney (BEGIN) -----
 FILE: 'mainflow.c'
  525: u_char DisplayCurrentMoney( u_int Money )
  526: {
801AB9 901599            MOV     DPTR,#Money
801ABC EE                MOV     A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 5


801ABD F0                MOVX    @DPTR,A
801ABE A3                INC     DPTR
801ABF EF                MOV     A,R7
801AC0 F0                MOVX    @DPTR,A
  527: 	u_char xdata length = 0;
  528: 	
801AC1 E4                CLR     A
801AC2 A3                INC     DPTR
801AC3 F0                MOVX    @DPTR,A
  529: 	if( Money <= 0 )
801AC4 D3                SETB    C
801AC5 EF                MOV     A,R7
801AC6 9400              SUBB    A,#00H
801AC8 EE                MOV     A,R6
801AC9 9400              SUBB    A,#00H
801ACB 5005              JNC     ?C0111?MAINFLOW
  530: 		return 0;
801ACD 7F00              MOV     R7,#00H
801ACF 021CAE            LJMP    ?C0112?MAINFLOW
801AD2         ?C0111?MAINFLOW:
  531: 	DisplayLine = STR_CUSTOM_PAYED;
801AD2 900B21            MOV     DPTR,#DisplayLine
801AD5 740B              MOV     A,#0BH
801AD7 F0                MOVX    @DPTR,A
  532: 	memset( DisplayBuffer , 0 , sizeof( DisplayBuffer ));
801AD8 7E00              MOV     R6,#00H
801ADA 7F14              MOV     R7,#014H
801ADC 7D00              MOV     R5,#00H
801ADE 7B00              MOV     R3,#?C?XDATASEG
801AE0 7A04              MOV     R2,#HIGH DisplayBuffer
801AE2 796B              MOV     R1,#LOW DisplayBuffer
801AE4 A5128008A6        ECALL   ?C?MEMSET
  533: 	length = DispInformationTable[DisplayLine].len;
801AE9 900B21            MOV     DPTR,#DisplayLine
801AEC E0                MOVX    A,@DPTR
801AED FF                MOV     R7,A
801AEE 25E0              ADD     A,ACC
801AF0 25E0              ADD     A,ACC
801AF2 2474              ADD     A,#LOW DispInformationTable+03H
801AF4 F582              MOV     DPL,A
801AF6 E4                CLR     A
801AF7 3404              ADDC    A,#HIGH DispInformationTable+03H
801AF9 F583              MOV     DPH,A
801AFB E4                CLR     A
801AFC 93                MOVC    A,@A+DPTR
801AFD 90159B            MOV     DPTR,#length
801B00 F0                MOVX    @DPTR,A
  534: 	memcpy( DisplayBuffer , DispInformationTable[DisplayLine].str , DispInformationTable[DisplayLine].len );
801B01 FD                MOV     R5,A
801B02 7C00              MOV     R4,#00H
801B04 C004              PUSH    AR4
801B06 C005              PUSH    AR5
801B08 EF                MOV     A,R7
801B09 25E0              ADD     A,ACC
801B0B 25E0              ADD     A,ACC
801B0D 2471              ADD     A,#LOW DispInformationTable
801B0F F582              MOV     DPL,A
801B11 E4                CLR     A
801B12 3404              ADDC    A,#HIGH DispInformationTable
801B14 F583              MOV     DPH,A
801B16 A5128007C0        ECALL   ?C?PLDCODE
801B1B 786B              MOV     R0,#LOW DisplayBuffer
801B1D 7C04              MOV     R4,#HIGH DisplayBuffer
801B1F 7D00              MOV     R5,#?C?XDATASEG
801B21 D007              POP     AR7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 6


801B23 D006              POP     AR6
801B25 A51280052D        ECALL   ?C?COPY
  535: 	DisplayBuffer[ length ] = ' ';	
801B2A 90159B            MOV     DPTR,#length
801B2D E0                MOVX    A,@DPTR
801B2E FF                MOV     R7,A
801B2F 246B              ADD     A,#LOW DisplayBuffer
801B31 F582              MOV     DPL,A
801B33 E4                CLR     A
801B34 3404              ADDC    A,#HIGH DisplayBuffer
801B36 F583              MOV     DPH,A
801B38 7420              MOV     A,#020H
801B3A F0                MOVX    @DPTR,A
  536: 	switch( SystemParameter.curUnit )
801B3B 900466            MOV     DPTR,#SystemParameter+048H
801B3E E0                MOVX    A,@DPTR
801B3F FC                MOV     R4,A
801B40 A3                INC     DPTR
801B41 E0                MOVX    A,@DPTR
801B42 FD                MOV     R5,A
801B43 EC                MOV     A,R4
801B44 6003              JZ      $ + 5H
801B46 021C53            LJMP    ?C0113?MAINFLOW
801B49 ED                MOV     A,R5
801B4A 24F6              ADD     A,#0F6H
801B4C 603D              JZ      ?C0115?MAINFLOW
801B4E 24A6              ADD     A,#0A6H
801B50 7003              JNZ     $ + 5H
801B52 021BE7            LJMP    ?C0116?MAINFLOW
801B55 2463              ADD     A,#063H
801B57 6003              JZ      $ + 5H
801B59 021C53            LJMP    ?C0113?MAINFLOW
  537: 	{
  538: 		case 1:
801B5C         ?C0114?MAINFLOW:
  539: 			length += sprintf( DisplayBuffer + length + 1 , "%u" , Money );	
801B5C 746C              MOV     A,#LOW DisplayBuffer+01H
801B5E 2F                ADD     A,R7
801B5F F9                MOV     R1,A
801B60 E4                CLR     A
801B61 3404              ADDC    A,#HIGH DisplayBuffer+01H
801B63 FA                MOV     R2,A
801B64 7B00              MOV     R3,#?C?XDATASEG
801B66 C003              PUSH    AR3
801B68 C002              PUSH    AR2
801B6A C001              PUSH    AR1
801B6C 7B80              MOV     R3,#BYTE2 080030EH
801B6E 7A03              MOV     R2,#HIGH 080030EH
801B70 790E              MOV     R1,#LOW 080030EH
801B72 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
801B75 A5128007B6        ECALL   ?C?PSTXDATA
801B7A 901599            MOV     DPTR,#Money
801B7D E0                MOVX    A,@DPTR
801B7E FF                MOV     R7,A
801B7F A3                INC     DPTR
801B80 E0                MOVX    A,@DPTR
801B81 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
801B84 CF                XCH     A,R7
801B85 F0                MOVX    @DPTR,A
801B86 A3                INC     DPTR
801B87 EF                MOV     A,R7
  540: 		break;				
801B88 021C41            LJMP    ?C1030?MAINFLOW
  541: 		case 10:
801B8B         ?C0115?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 7


  542: 			length += sprintf( DisplayBuffer + length + 1 , "%u.%u" , (Money / SystemParameter.curUnit),( Money %SystemPar
>> ameter.curUnit));	
801B8B 90159B            MOV     DPTR,#length
801B8E E0                MOVX    A,@DPTR
801B8F 246C              ADD     A,#LOW DisplayBuffer+01H
801B91 F9                MOV     R1,A
801B92 E4                CLR     A
801B93 3404              ADDC    A,#HIGH DisplayBuffer+01H
801B95 FA                MOV     R2,A
801B96 7B00              MOV     R3,#?C?XDATASEG
801B98 C003              PUSH    AR3
801B9A C002              PUSH    AR2
801B9C C001              PUSH    AR1
801B9E 7B80              MOV     R3,#BYTE2 0800311H
801BA0 7A03              MOV     R2,#HIGH 0800311H
801BA2 7911              MOV     R1,#LOW 0800311H
801BA4 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
801BA7 A5128007B6        ECALL   ?C?PSTXDATA
801BAC 900466            MOV     DPTR,#SystemParameter+048H
801BAF E0                MOVX    A,@DPTR
801BB0 FA                MOV     R2,A
801BB1 A3                INC     DPTR
801BB2 E0                MOVX    A,@DPTR
801BB3 FB                MOV     R3,A
801BB4 901599            MOV     DPTR,#Money
801BB7 E0                MOVX    A,@DPTR
801BB8 FE                MOV     R6,A
801BB9 A3                INC     DPTR
801BBA E0                MOVX    A,@DPTR
801BBB FF                MOV     R7,A
801BBC AD03              MOV     R5,AR3
801BBE AC02              MOV     R4,AR2
801BC0 A51280056C        ECALL   ?C?UIDIV
801BC5 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
801BC8 EE                MOV     A,R6
801BC9 F0                MOVX    @DPTR,A
801BCA A3                INC     DPTR
801BCB EF                MOV     A,R7
801BCC F0                MOVX    @DPTR,A
801BCD 901599            MOV     DPTR,#Money
801BD0 E0                MOVX    A,@DPTR
801BD1 FE                MOV     R6,A
801BD2 A3                INC     DPTR
801BD3 E0                MOVX    A,@DPTR
801BD4 FF                MOV     R7,A
801BD5 AD03              MOV     R5,AR3
801BD7 AC02              MOV     R4,AR2
801BD9 A51280056C        ECALL   ?C?UIDIV
801BDE 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
801BE1 EC                MOV     A,R4
801BE2 F0                MOVX    @DPTR,A
801BE3 A3                INC     DPTR
801BE4 ED                MOV     A,R5
801BE5         
  543: 		break;
801BE5 805A              SJMP    ?C1030?MAINFLOW
  544: 		case 100:
801BE7         ?C0116?MAINFLOW:
  545: 			length += sprintf( DisplayBuffer + length + 1 , "%u.%02u" , (Money / SystemParameter.curUnit),( Money %SystemP
>> arameter.curUnit));	
801BE7 90159B            MOV     DPTR,#length
801BEA E0                MOVX    A,@DPTR
801BEB 246C              ADD     A,#LOW DisplayBuffer+01H
801BED F9                MOV     R1,A
801BEE E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 8


801BEF 3404              ADDC    A,#HIGH DisplayBuffer+01H
801BF1 FA                MOV     R2,A
801BF2 7B00              MOV     R3,#?C?XDATASEG
801BF4 C003              PUSH    AR3
801BF6 C002              PUSH    AR2
801BF8 C001              PUSH    AR1
801BFA 7B80              MOV     R3,#BYTE2 0800317H
801BFC 7A03              MOV     R2,#HIGH 0800317H
801BFE 7917              MOV     R1,#LOW 0800317H
801C00 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
801C03 A5128007B6        ECALL   ?C?PSTXDATA
801C08 900466            MOV     DPTR,#SystemParameter+048H
801C0B E0                MOVX    A,@DPTR
801C0C FA                MOV     R2,A
801C0D A3                INC     DPTR
801C0E E0                MOVX    A,@DPTR
801C0F FB                MOV     R3,A
801C10 901599            MOV     DPTR,#Money
801C13 E0                MOVX    A,@DPTR
801C14 FE                MOV     R6,A
801C15 A3                INC     DPTR
801C16 E0                MOVX    A,@DPTR
801C17 FF                MOV     R7,A
801C18 AD03              MOV     R5,AR3
801C1A AC02              MOV     R4,AR2
801C1C A51280056C        ECALL   ?C?UIDIV
801C21 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
801C24 EE                MOV     A,R6
801C25 F0                MOVX    @DPTR,A
801C26 A3                INC     DPTR
801C27 EF                MOV     A,R7
801C28 F0                MOVX    @DPTR,A
801C29 901599            MOV     DPTR,#Money
801C2C E0                MOVX    A,@DPTR
801C2D FE                MOV     R6,A
801C2E A3                INC     DPTR
801C2F E0                MOVX    A,@DPTR
801C30 FF                MOV     R7,A
801C31 AD03              MOV     R5,AR3
801C33 AC02              MOV     R4,AR2
801C35 A51280056C        ECALL   ?C?UIDIV
801C3A 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
801C3D EC                MOV     A,R4
801C3E F0                MOVX    @DPTR,A
801C3F A3                INC     DPTR
801C40 ED                MOV     A,R5
801C41         
801C41 F0                MOVX    @DPTR,A
801C42 D001              POP     AR1
801C44 D002              POP     AR2
801C46 D003              POP     AR3
801C48 A512800949        ECALL   _sprintf
801C4D 90159B            MOV     DPTR,#length
801C50 E0                MOVX    A,@DPTR
801C51 2F                ADD     A,R7
801C52 F0                MOVX    @DPTR,A
  546: 		break;		
  547: 	}		
801C53         ?C0113?MAINFLOW:
  548: 	length++;
801C53 90159B            MOV     DPTR,#length
801C56 E0                MOVX    A,@DPTR
801C57 04                INC     A
801C58 F0                MOVX    @DPTR,A
  549: 	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 9


  550: 	DisplayStr( 0, 0, 1, DisplayBuffer, length );
801C59 D21A              SETB    ?_DisplayStr?BIT
801C5B 7B00              MOV     R3,#?C?XDATASEG
801C5D 7A04              MOV     R2,#HIGH DisplayBuffer
801C5F 796B              MOV     R1,#LOW DisplayBuffer
801C61 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
801C64 A5128007B6        ECALL   ?C?PSTXDATA
801C69 90159B            MOV     DPTR,#length
801C6C E0                MOVX    A,@DPTR
801C6D A51280805B        ECALL   ?L?COM0006
  551: 	DisplayStr( 0, 1, 1, DispInformationTable[4].str, DispInformationTable[4].len - 1 );	
801C72 D21A              SETB    ?_DisplayStr?BIT
801C74 900481            MOV     DPTR,#DispInformationTable+010H
801C77 A5128007C0        ECALL   ?C?PLDCODE
801C7C 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
801C7F A5128007B6        ECALL   ?C?PSTXDATA
801C84 900484            MOV     DPTR,#DispInformationTable+013H
801C87 E4                CLR     A
801C88 93                MOVC    A,@A+DPTR
801C89 14                DEC     A
801C8A 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
801C8D F0                MOVX    @DPTR,A
801C8E 7D01              MOV     R5,#01H
801C90 E4                CLR     A
801C91 FF                MOV     R7,A
801C92 A512808062        ECALL   _DisplayStr
  552: 	WaitForWork( 100 , &Lcd );
801C97 E4                CLR     A
801C98 7F64              MOV     R7,#064H
801C9A FE                MOV     R6,A
801C9B FD                MOV     R5,A
801C9C FC                MOV     R4,A
801C9D 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
801CA0 7423              MOV     A,#HIGH Lcd
801CA2 F0                MOVX    @DPTR,A
801CA3 A3                INC     DPTR
801CA4 7460              MOV     A,#LOW Lcd
801CA6 F0                MOVX    @DPTR,A
801CA7 A512807B3D        ECALL   _WaitForWork
  553: 	return( 0 );
801CAC 7F00              MOV     R7,#00H
  554: }
801CAE         ?C0112?MAINFLOW:
801CAE A522              ERET    
----- FUNCTION _DisplayCurrentMoney (END) -------


----- FUNCTION GetBill (BEGIN) -----
 FILE: 'mainflow.c'
 2112: u_char GetBill( )
 2113: {
 2114: 	u_int xdata CurrentDomain = 0;
 2115: 	u_int xdata CoinSum = 0;	
801CB0 E4                CLR     A
801CB1 901595            MOV     DPTR,#CurrentDomain
801CB4 F0                MOVX    @DPTR,A
801CB5 A3                INC     DPTR
801CB6 F0                MOVX    @DPTR,A
 2116: //	Trace( "\n CheckBill");
801CB7 A3                INC     DPTR
801CB8 F0                MOVX    @DPTR,A
801CB9 A3                INC     DPTR
801CBA F0                MOVX    @DPTR,A
 2117: 
 2118: 	CurrentDomain = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 10


801CBB 901595            MOV     DPTR,#CurrentDomain
801CBE F0                MOVX    @DPTR,A
801CBF A3                INC     DPTR
801CC0 F0                MOVX    @DPTR,A
 2119: //	CurrentTransType = 1;//正在交易
 2120: 	if( CurrentPayed > 0 )//确实有钱收入了才是进入了服务状态
801CC1 D3                SETB    C
801CC2 900B20            MOV     DPTR,#CurrentPayed+01H
801CC5 E0                MOVX    A,@DPTR
801CC6 9400              SUBB    A,#00H
801CC8 900B1F            MOV     DPTR,#CurrentPayed
801CCB E0                MOVX    A,@DPTR
801CCC 9400              SUBB    A,#00H
801CCE 4007              JC      ?C0466?MAINFLOW
 2121: 		CasherGetMachineState( 1 );//交易状态
801CD0 7F01              MOV     R7,#01H
801CD2 A51280C01D        ECALL   _CasherGetMachineState
801CD7         ?C0466?MAINFLOW:
 2122: //	ClearDisplayLine( 2 );	
 2123: 	if( KeyLockFlag )
801CD7 302907            JNB     KeyLockFlag,?C0467?MAINFLOW
 2124: 	{
 2125: //		Trace( "\n KeyUnLock");
 2126: 		KeyUnLock(); //打开键盘，让客户按键
801CDA A5128077AE        ECALL   KeyUnLock
 2127: 		KeyLockFlag = 0;		
801CDF C229              CLR     KeyLockFlag
 2128: 	}	
801CE1         ?C0467?MAINFLOW:
 2129: 	
 2130: 	if( QueryFlag == 1 )
801CE1 302776            JNB     QueryFlag,?C1052?MAINFLOW
 2131: 	{
 2132: 		DisplayCursorState( 0, 1, 1, 0, 1 );
801CE4 D21A              SETB    ?_DisplayCursorState?BIT
801CE6 E4                CLR     A
801CE7 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
801CEA F0                MOVX    @DPTR,A
801CEB D21B              SETB    ?_DisplayCursorState?BIT+01H
801CED 7D01              MOV     R5,#01H
801CEF FF                MOV     R7,A
801CF0 A51280817F        ECALL   _DisplayCursorState
 2133: 		QueryFlag = 0;
801CF5 C227              CLR     QueryFlag
 2134: 		QueryTimer = 0;
801CF7 E4                CLR     A
801CF8 F514              MOV     QueryTimer,A
 2135: 		CurrentStockCode = 0;
801CFA 900B22            MOV     DPTR,#CurrentStockCode
801CFD F0                MOVX    @DPTR,A
 2136: 	}
801CFE         ?C0468?MAINFLOW:
 2137: 
 2138: 	/////
 2139: 	CoinSum = GetCoin();
801CFE 805A              SJMP    ?C1052?MAINFLOW
801D00         ?C0469?MAINFLOW:
 2140: 	while ( CoinSum ) 
801D00 901597            MOV     DPTR,#CoinSum
801D03 E0                MOVX    A,@DPTR
801D04 7002              JNZ     ?C1000?MAINFLOW
801D06 A3                INC     DPTR
801D07 E0                MOVX    A,@DPTR
801D08         ?C1000?MAINFLOW:
801D08 605F              JZ      ?C0470?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 11


 2141: 	{	
 2142: 	#ifdef _COIN_INPUT_PARALLEL	
 2143: 		CurrentPayed += CoinSum ;
801D0A 901597            MOV     DPTR,#CoinSum
801D0D E0                MOVX    A,@DPTR
801D0E FE                MOV     R6,A
801D0F A3                INC     DPTR
801D10 E0                MOVX    A,@DPTR
801D11 FF                MOV     R7,A
801D12 900B1F            MOV     DPTR,#CurrentPayed
801D15 EE                MOV     A,R6
801D16 8FF0              MOV     B,R7
801D18 A512800600        ECALL   ?C?IILDX
 2144: 		TradeCounter.TrueCurrencySum += CoinSum;
801D1D 900AEC            MOV     DPTR,#TradeCounter
801D20 A51280073E        ECALL   ?C?LLDXDATA0
801D25 E4                CLR     A
801D26 FC                MOV     R4,A
801D27 FD                MOV     R5,A
801D28 A51280062E        ECALL   ?C?LADD
801D2D 900AEC            MOV     DPTR,#TradeCounter
801D30 A512800792        ECALL   ?C?LSTXDATA
 2145: 		TradeCounter.CoinSum += CoinSum;
801D35 900AF4            MOV     DPTR,#TradeCounter+08H
801D38 A51280073E        ECALL   ?C?LLDXDATA0
801D3D 901597            MOV     DPTR,#CoinSum
801D40 E0                MOVX    A,@DPTR
801D41 FE                MOV     R6,A
801D42 A3                INC     DPTR
801D43 E0                MOVX    A,@DPTR
801D44 FF                MOV     R7,A
801D45 E4                CLR     A
801D46 FC                MOV     R4,A
801D47 FD                MOV     R5,A
801D48 A51280062E        ECALL   ?C?LADD
801D4D 900AF4            MOV     DPTR,#TradeCounter+08H
801D50 A512800792        ECALL   ?C?LSTXDATA
 2146: 	#else
 2147: 		CurrentPayed += CoinSum * COINMULTIPLE ;
 2148: 		TradeCounter.TrueCurrencySum += CoinSum * COINMULTIPLE;
 2149: 		TradeCounter.CoinSum += CoinSum * COINMULTIPLE;
 2150: 	#endif	
 2151: 		SchedulerProcess();
801D55 A512809545        ECALL   SchedulerProcess
 2152: 		CoinSum = GetCoin();	
801D5A         
801D5A A512809344        ECALL   GetCoin
801D5F 901597            MOV     DPTR,#CoinSum
801D62 EE                MOV     A,R6
801D63 F0                MOVX    @DPTR,A
801D64 A3                INC     DPTR
801D65 EF                MOV     A,R7
801D66 F0                MOVX    @DPTR,A
 2153: 	}	
801D67 8097              SJMP    ?C0469?MAINFLOW
801D69         ?C0470?MAINFLOW:
 2154: 
 2155: //	CurrentPayed = 300;
 2156: 
 2157: 	if( SystemParameter.BillNo == 1 )
801D69 900425            MOV     DPTR,#SystemParameter+07H
801D6C E0                MOVX    A,@DPTR
801D6D 6401              XRL     A,#01H
801D6F 6003              JZ      $ + 5H
801D71 021E8B            LJMP    ?C0471?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 12


 2158: 	{
 2159: 		if( CasherIsCashIn() )
801D74 A5128096F1        ECALL   CasherIsCashIn
801D79 EF                MOV     A,R7
801D7A 7003              JNZ     $ + 5H
801D7C 021E8B            LJMP    ?C0471?MAINFLOW
 2160: 		{
 2161: 			CurrentDomain = GetComingCash( );//读取已检测到的纸币面额	
801D7F A512812590        ECALL   GetComingCash
801D84 901595            MOV     DPTR,#CurrentDomain
801D87 EE                MOV     A,R6
801D88 F0                MOVX    @DPTR,A
801D89 A3                INC     DPTR
801D8A EF                MOV     A,R7
801D8B F0                MOVX    @DPTR,A
 2162: 			if( CurrentDomain == 0 )//不可识别的纸币
801D8C 4E                ORL     A,R6
801D8D 7008              JNZ     ?C0473?MAINFLOW
 2163: 			{
 2164: 				Trace( "\n Do not know bill" );		
 2165: 				RejectBill();//退钞				
801D8F A5128087F9        ECALL   RejectBill
 2166: 			}
801D94 021E82            LJMP    ?C0474?MAINFLOW
801D97         ?C0473?MAINFLOW:
 2167: 			else
 2168: 			{
 2169: 				if( CurrentPayed + CurrentDomain*BILLMULTIPLE > SystemParameter.BanknoteMax )
801D97 901595            MOV     DPTR,#CurrentDomain
801D9A E0                MOVX    A,@DPTR
801D9B FE                MOV     R6,A
801D9C A3                INC     DPTR
801D9D E0                MOVX    A,@DPTR
801D9E FF                MOV     R7,A
801D9F 900B20            MOV     DPTR,#CurrentPayed+01H
801DA2 E0                MOVX    A,@DPTR
801DA3 2F                ADD     A,R7
801DA4 FF                MOV     R7,A
801DA5 900B1F            MOV     DPTR,#CurrentPayed
801DA8 E0                MOVX    A,@DPTR
801DA9 3E                ADDC    A,R6
801DAA FE                MOV     R6,A
801DAB C3                CLR     C
801DAC 90042A            MOV     DPTR,#SystemParameter+0CH
801DAF E0                MOVX    A,@DPTR
801DB0 9F                SUBB    A,R7
801DB1 900429            MOV     DPTR,#SystemParameter+0BH
801DB4 E0                MOVX    A,@DPTR
801DB5 9E                SUBB    A,R6
801DB6 5034              JNC     ?C0475?MAINFLOW
 2170: 				{
 2171: 					//收到的钱超出了限制,退出纸币
 2172: 					DisplayLine = STR_DOMAIN_ERROR;
801DB8 900B21            MOV     DPTR,#DisplayLine
801DBB 7403              MOV     A,#03H
801DBD A51280802C        ECALL   ?L?COM0003
 2173: 					DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
>> 
 2174: 					ClearDisplayLine( 2 );
801DC2 7F02              MOV     R7,#02H
801DC4 A5128087BB        ECALL   _ClearDisplayLine
 2175: 					WaitForWork( 1500, NULL );				
801DC9 E4                CLR     A
801DCA 7FDC              MOV     R7,#0DCH
801DCC 7E05              MOV     R6,#05H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 13


801DCE A512807B35        ECALL   ?L?COM000D
 2176: 					RejectBill();//退钞			
801DD3 A5128087F9        ECALL   RejectBill
 2177: 					if( CurrentPayed == 0 )
801DD8 900B1F            MOV     DPTR,#CurrentPayed
801DDB E0                MOVX    A,@DPTR
801DDC FC                MOV     R4,A
801DDD A3                INC     DPTR
801DDE E0                MOVX    A,@DPTR
801DDF FD                MOV     R5,A
801DE0 4C                ORL     A,R4
801DE1 7002              JNZ     ?C0476?MAINFLOW
 2178: 					{
 2179: 						UpdataDisp = 0;
 2180: 						return 2;
801DE3 8049              SJMP    ?C1053?MAINFLOW
 2181: 					}
801DE5         ?C0476?MAINFLOW:
 2182: 					else
 2183: 					{
 2184: 						DisplayCurrentMoney( CurrentPayed );
801DE5 AF05              MOV     R7,AR5
801DE7 AE04              MOV     R6,AR4
 2185: 						return 0;
801DE9 021F4D            LJMP    ?C1054?MAINFLOW
 2186: 					}
 2187: 				}
801DEC         ?C0475?MAINFLOW:
 2188: 				Trace( "\n Have cash in");		
 2189: 				Trace( "\n CurrentPayed = %d",CurrentPayed );		
 2190: 				CasherAccept(); //准备收下		
801DEC A512808FA6        ECALL   CasherAccept
 2191: 				LzjSecTimer = DEFAULT_GET_BILL_TIMEOUT;
801DF1 751D0A            MOV     LzjSecTimer,#0AH
801DF4         ?C0479?MAINFLOW:
 2192: 				while( LzjSecTimer )
801DF4 E51D              MOV     A,LzjSecTimer
801DF6 600F              JZ      ?C0480?MAINFLOW
 2193: 				{
 2194: 					if( CasherIsAcceptOK() )							
801DF8 A512812587        ECALL   CasherIsAcceptOK
801DFD EF                MOV     A,R7
801DFE 7007              JNZ     ?C0480?MAINFLOW
 2195: 						break;			
801E00         ?C0481?MAINFLOW:
 2196: 					SchedulerProcess();
801E00 A512809545        ECALL   SchedulerProcess
 2197: 				}
801E05 80ED              SJMP    ?C0479?MAINFLOW
801E07         ?C0480?MAINFLOW:
 2198: 				if( LzjSecTimer == 0 )
801E07 E51D              MOV     A,LzjSecTimer
801E09 702C              JNZ     ?C0482?MAINFLOW
 2199: 				{
 2200: 					Trace( "\n Out Cash" );
 2201: 					RejectBill();//退钞
801E0B A5128087F9        ECALL   RejectBill
 2202: 					SystemParameter.DoubtCash = CurrentDomain * BILLMULTIPLE;				
801E10 901595            MOV     DPTR,#CurrentDomain
801E13 E0                MOVX    A,@DPTR
801E14 FF                MOV     R7,A
801E15 A3                INC     DPTR
801E16 E0                MOVX    A,@DPTR
801E17 90042B            MOV     DPTR,#SystemParameter+0DH
801E1A CF                XCH     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 14


801E1B F0                MOVX    @DPTR,A
801E1C A3                INC     DPTR
801E1D EF                MOV     A,R7
801E1E F0                MOVX    @DPTR,A
 2203: 					SaveGlobalParam();
801E1F A51280C54C        ECALL   SaveGlobalParam
 2204: 					if( CurrentPayed == 0 )
801E24 900B1F            MOV     DPTR,#CurrentPayed
801E27 E0                MOVX    A,@DPTR
801E28 7002              JNZ     ?C1001?MAINFLOW
801E2A A3                INC     DPTR
801E2B E0                MOVX    A,@DPTR
801E2C         ?C1001?MAINFLOW:
801E2C 7054              JNZ     ?C0474?MAINFLOW
 2205: 					{					
 2206: 						UpdataDisp = 0;
801E2E         
801E2E 900B23            MOV     DPTR,#UpdataDisp
801E31 F0                MOVX    @DPTR,A
 2207: 						return 2;	
801E32 7F02              MOV     R7,#02H
801E34 021F54            LJMP    ?C0477?MAINFLOW
 2208: 					}
 2209: 				}
801E37         ?C0482?MAINFLOW:
 2210: 				else
 2211: 				{
 2212: 					Trace( "\n Get in Cash Ok" );
 2213: 			//		CurrentDomain = GetCash();
 2214: 					Trace( "\n CurrentDomain = %d",CurrentDomain );		
 2215: 					CurrentPayed += CurrentDomain * BILLMULTIPLE;	
801E37 901595            MOV     DPTR,#CurrentDomain
801E3A E0                MOVX    A,@DPTR
801E3B FE                MOV     R6,A
801E3C A3                INC     DPTR
801E3D E0                MOVX    A,@DPTR
801E3E FF                MOV     R7,A
801E3F 900B1F            MOV     DPTR,#CurrentPayed
801E42 EE                MOV     A,R6
801E43 8FF0              MOV     B,R7
801E45 A512800600        ECALL   ?C?IILDX
 2216: 					TradeCounter.TrueCurrencySum += CurrentDomain * BILLMULTIPLE;
801E4A 900AEC            MOV     DPTR,#TradeCounter
801E4D A51280073E        ECALL   ?C?LLDXDATA0
801E52 E4                CLR     A
801E53 FC                MOV     R4,A
801E54 FD                MOV     R5,A
801E55 A51280062E        ECALL   ?C?LADD
801E5A 900AEC            MOV     DPTR,#TradeCounter
801E5D A512800792        ECALL   ?C?LSTXDATA
 2217: 					TradeCounter.CashSum += CurrentDomain * BILLMULTIPLE;
801E62 900AF0            MOV     DPTR,#TradeCounter+04H
801E65 A51280073E        ECALL   ?C?LLDXDATA0
801E6A 901595            MOV     DPTR,#CurrentDomain
801E6D E0                MOVX    A,@DPTR
801E6E FE                MOV     R6,A
801E6F A3                INC     DPTR
801E70 E0                MOVX    A,@DPTR
801E71 FF                MOV     R7,A
801E72 E4                CLR     A
801E73 FC                MOV     R4,A
801E74 FD                MOV     R5,A
801E75 A51280062E        ECALL   ?C?LADD
801E7A 900AF0            MOV     DPTR,#TradeCounter+04H
801E7D A512800792        ECALL   ?C?LSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 15


 2218: 				}			
 2219: 			}	
801E82         ?C0474?MAINFLOW:
 2220: 			WaitForWork( 20, NULL );
801E82 E4                CLR     A
801E83 7F14              MOV     R7,#014H
801E85 FE                MOV     R6,A
801E86 A512807B35        ECALL   ?L?COM000D
 2221: 		}
 2222: 	}	
801E8B         ?C0471?MAINFLOW:
 2223: 
 2224: 	//判断收入的金额
 2225: 	if( CurrentPayed >= SystemParameter.BanknoteMax )
801E8B 900429            MOV     DPTR,#SystemParameter+0BH
801E8E E0                MOVX    A,@DPTR
801E8F FE                MOV     R6,A
801E90 A3                INC     DPTR
801E91 E0                MOVX    A,@DPTR
801E92 FF                MOV     R7,A
801E93 C3                CLR     C
801E94 900B20            MOV     DPTR,#CurrentPayed+01H
801E97 E0                MOVX    A,@DPTR
801E98 9F                SUBB    A,R7
801E99 900B1F            MOV     DPTR,#CurrentPayed
801E9C E0                MOVX    A,@DPTR
801E9D 9E                SUBB    A,R6
801E9E 5003              JNC     $ + 5H
801EA0 021F45            LJMP    ?C0485?MAINFLOW
 2226: 	{		
 2227: 		WaitForWork( 50, NULL );
801EA3 E4                CLR     A
801EA4 7F32              MOV     R7,#032H
801EA6 FE                MOV     R6,A
801EA7 A512807B35        ECALL   ?L?COM000D
 2228: 		LzjMSecTimer = 400;
801EAC 751690            MOV     LzjMSecTimer,#090H
801EAF         ?C0486?MAINFLOW:
 2229: 		while( LzjMSecTimer )
801EAF E516              MOV     A,LzjMSecTimer
801EB1 6052              JZ      ?C0487?MAINFLOW
 2230: 		{
 2231: 			CoinSum = GetCoin();			
801EB3 A512809344        ECALL   GetCoin
801EB8 901597            MOV     DPTR,#CoinSum
801EBB EE                MOV     A,R6
801EBC F0                MOVX    @DPTR,A
801EBD A3                INC     DPTR
801EBE EF                MOV     A,R7
801EBF F0                MOVX    @DPTR,A
 2232: 			if ( CoinSum ) 
801EC0 4E                ORL     A,R6
801EC1 603B              JZ      ?C0488?MAINFLOW
 2233: 			{
 2234: 				Trace( "\n Get CoinSum" );
 2235: 			#ifdef _COIN_INPUT_PARALLEL	
 2236: 				CurrentPayed += CoinSum ;
801EC3 901597            MOV     DPTR,#CoinSum
801EC6 E0                MOVX    A,@DPTR
801EC7 FE                MOV     R6,A
801EC8 A3                INC     DPTR
801EC9 E0                MOVX    A,@DPTR
801ECA FF                MOV     R7,A
801ECB 900B1F            MOV     DPTR,#CurrentPayed
801ECE EE                MOV     A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 16


801ECF 8FF0              MOV     B,R7
801ED1 A512800600        ECALL   ?C?IILDX
 2237: 				TradeCounter.TrueCurrencySum += CoinSum;
801ED6 900AEC            MOV     DPTR,#TradeCounter
801ED9 A51280073E        ECALL   ?C?LLDXDATA0
801EDE E4                CLR     A
801EDF FC                MOV     R4,A
801EE0 FD                MOV     R5,A
801EE1 A51280062E        ECALL   ?C?LADD
801EE6 900AEC            MOV     DPTR,#TradeCounter
801EE9 A512800792        ECALL   ?C?LSTXDATA
 2238: 				TradeCounter.CoinSum += CoinSum;
801EEE 900AF4            MOV     DPTR,#TradeCounter+08H
801EF1 A51280073E        ECALL   ?C?LLDXDATA0
801EF6 901597            MOV     DPTR,#CoinSum
801EF9 A51280952D        ECALL   ?L?COM0020
 2239: 			#else
 2240: 				CurrentPayed += CoinSum * COINMULTIPLE ;
 2241: 				TradeCounter.TrueCurrencySum += CoinSum * COINMULTIPLE;
 2242: 				TradeCounter.CoinSum += CoinSum * COINMULTIPLE;
 2243: 			#endif					
 2244: 				LzjMSecTimer = 400;	
 2245: 				SchedulerProcess();
 2246: 			}
801EFE         ?C0488?MAINFLOW:
 2247: 			SchedulerProcess();
801EFE A512809545        ECALL   SchedulerProcess
 2248: 		}
801F03 80AA              SJMP    ?C0486?MAINFLOW
801F05         ?C0487?MAINFLOW:
 2249: 		DisableBillDev();//禁能纸、硬币品
801F05 A512808FD7        ECALL   DisableBillDev
 2250: 		DisplayCurrentMoney( CurrentPayed );
801F0A A512801AB1        ECALL   ?L?COM001F
 2251: 
 2252: 		if( SystemParameter.BillNo == 1 )
801F0F 900425            MOV     DPTR,#SystemParameter+07H
801F12 E0                MOVX    A,@DPTR
801F13 B40121            CJNE    A,#01H,?C0489?MAINFLOW
 2253: 		{			
 2254: 			LzjSecTimer = 1;
801F16 751D01            MOV     LzjSecTimer,#01H
801F19         ?C0490?MAINFLOW:
 2255: 			while( LzjSecTimer )
801F19 E51D              MOV     A,LzjSecTimer
801F1B 601A              JZ      ?C0489?MAINFLOW
 2256: 			{
 2257: 				if( CasherIsCashIn() )//是否有纸币进入
801F1D A5128096F1        ECALL   CasherIsCashIn
801F22 EF                MOV     A,R7
801F23 6007              JZ      ?C0492?MAINFLOW
 2258: 				{	
 2259: 					RejectBill();//退钞																
801F25 A5128087F9        ECALL   RejectBill
 2260: 					break;
801F2A 800B              SJMP    ?C0489?MAINFLOW
 2261: 				}
801F2C         ?C0492?MAINFLOW:
 2262: 				WaitForWork( 10, NULL );
801F2C E4                CLR     A
801F2D 7F0A              MOV     R7,#0AH
801F2F FE                MOV     R6,A
801F30 A512807B35        ECALL   ?L?COM000D
 2263: 			}
801F35 80E2              SJMP    ?C0490?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 17


 2264: 		}		
801F37         ?C0489?MAINFLOW:
 2265: 		WaitForWork( 500, NULL );
801F37 E4                CLR     A
801F38 7FF4              MOV     R7,#0F4H
801F3A 7E01              MOV     R6,#01H
801F3C A512807B35        ECALL   ?L?COM000D
 2266: 		return 1;		
801F41 7F01              MOV     R7,#01H
801F43 800F              SJMP    ?C0477?MAINFLOW
 2267: 	}	
801F45         ?C0485?MAINFLOW:
 2268: 	else	
 2269: 	{
 2270: 		DisplayCurrentMoney( CurrentPayed );
801F45 900B1F            MOV     DPTR,#CurrentPayed
801F48 E0                MOVX    A,@DPTR
801F49 FE                MOV     R6,A
801F4A A3                INC     DPTR
801F4B E0                MOVX    A,@DPTR
801F4C FF                MOV     R7,A
801F4D         
801F4D A512801AB9        ECALL   _DisplayCurrentMoney
 2271: 		return 0;	
801F52 7F00              MOV     R7,#00H
 2272: 	}
 2273: }
801F54         ?C0477?MAINFLOW:
801F54 A522              ERET    
----- FUNCTION GetBill (END) -------


----- FUNCTION SystemInit (BEGIN) -----
 FILE: 'mainflow.c'
 1438: u_char SystemInit()
 1439: {    
 1440: 	u_char xdata i = 0;  
 1441: 
801F56 E4                CLR     A
801F57 901595            MOV     DPTR,#i
801F5A F0                MOVX    @DPTR,A
 1442: 	memset( &SystemParameter, 0, sizeof( SystemParameter ) );
801F5B FE                MOV     R6,A
801F5C 7F4B              MOV     R7,#04BH
801F5E FD                MOV     R5,A
801F5F 7B00              MOV     R3,#?C?XDATASEG
801F61 7A04              MOV     R2,#HIGH SystemParameter
801F63 791E              MOV     R1,#LOW SystemParameter
801F65 A5128008A6        ECALL   ?C?MEMSET
 1443: 	WaitForWork( 100, NULL );
801F6A E4                CLR     A
801F6B 7F64              MOV     R7,#064H
801F6D FE                MOV     R6,A
801F6E A512807B35        ECALL   ?L?COM000D
 1444: //	Trace( "\n Begin" );
 1445: 
 1446: 	DisplayStr( 0, 0, 1, DispInformationTable[ STR_TYPE_VER ].str, DispInformationTable[ STR_TYPE_VER ].len );	
801F73 D21A              SETB    ?_DisplayStr?BIT
801F75 900501            MOV     DPTR,#DispInformationTable+090H
801F78 A5128007C0        ECALL   ?C?PLDCODE
801F7D 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
801F80 A5128007B6        ECALL   ?C?PSTXDATA
801F85 900504            MOV     DPTR,#DispInformationTable+093H
801F88 A512808059        ECALL   ?L?COM0005
 1447: 	DisplayStr( 0, 1, 1, DispInformationTable[ STR_PLEASE_WAIT ].str, DispInformationTable[ STR_PLEASE_WAIT ].len );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 18


>> 	
801F8D D21A              SETB    ?_DisplayStr?BIT
801F8F 9004B9            MOV     DPTR,#DispInformationTable+048H
801F92 A5128007C0        ECALL   ?C?PLDCODE
801F97 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
801F9A A5128007B6        ECALL   ?C?PSTXDATA
801F9F 9004BC            MOV     DPTR,#DispInformationTable+04BH
801FA2 E4                CLR     A
801FA3 93                MOVC    A,@A+DPTR
801FA4 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
801FA7 F0                MOVX    @DPTR,A
801FA8 7D01              MOV     R5,#01H
801FAA E4                CLR     A
801FAB FF                MOV     R7,A
801FAC A512808062        ECALL   _DisplayStr
 1448: 	WaitForWork( 100, NULL );
801FB1 E4                CLR     A
801FB2 7F64              MOV     R7,#064H
801FB4 FE                MOV     R6,A
801FB5 A512807B35        ECALL   ?L?COM000D
 1449: 	
 1450: 	return 0;
801FBA 7F00              MOV     R7,#00H
 1451: }
801FBC         ?C0321?MAINFLOW:
801FBC A522              ERET    
----- FUNCTION SystemInit (END) -------


----- FUNCTION QueryDisplayInputCode (BEGIN) -----
 FILE: 'mainflow.c'
 1881: u_char QueryDisplayInputCode()
 1882: {
 1883: 	u_char xdata MyKey = 0 ;
 1884: 	u_char xdata len = 0;
801FBE E4                CLR     A
801FBF 901595            MOV     DPTR,#MyKey
801FC2 F0                MOVX    @DPTR,A
 1885: 
801FC3 A3                INC     DPTR
801FC4 F0                MOVX    @DPTR,A
 1886: 	Trace("\n QueryDisplayInputCode" );	
 1887: 	memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );															
801FC5 FE                MOV     R6,A
801FC6 7F14              MOV     R7,#014H
801FC8 FD                MOV     R5,A
801FC9 7B00              MOV     R3,#?C?XDATASEG
801FCB 7A04              MOV     R2,#HIGH DisplayBuffer
801FCD 796B              MOV     R1,#LOW DisplayBuffer
801FCF A5128008A6        ECALL   ?C?MEMSET
 1888: 	DisplayLine = STR_INPUT_GOODS;	
801FD4 900B21            MOV     DPTR,#DisplayLine
801FD7 7404              MOV     A,#04H
801FD9 F0                MOVX    @DPTR,A
 1889: 	if( CurrentStockCode != 0 )
801FDA A3                INC     DPTR
801FDB E0                MOVX    A,@DPTR
801FDC FF                MOV     R7,A
801FDD 7003              JNZ     $ + 5H
801FDF 022078            LJMP    ?C0416?MAINFLOW
 1890: 	{
 1891: 		len = sprintf( DisplayBuffer,"%s%bu", DispInformationTable[DisplayLine].str, CurrentStockCode );		
801FE2 7B80              MOV     R3,#BYTE2 0800404H
801FE4 7A04              MOV     R2,#HIGH 0800404H
801FE6 7904              MOV     R1,#LOW 0800404H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 19


801FE8 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
801FEB A5128007B6        ECALL   ?C?PSTXDATA
801FF0 900B21            MOV     DPTR,#DisplayLine
801FF3 E0                MOVX    A,@DPTR
801FF4 25E0              ADD     A,ACC
801FF6 25E0              ADD     A,ACC
801FF8 2471              ADD     A,#LOW DispInformationTable
801FFA F582              MOV     DPL,A
801FFC E4                CLR     A
801FFD 3404              ADDC    A,#HIGH DispInformationTable
801FFF F583              MOV     DPH,A
802001 A5128007C0        ECALL   ?C?PLDCODE
802006 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802009 A5128007B6        ECALL   ?C?PSTXDATA
80200E 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802011 EF                MOV     A,R7
802012 F0                MOVX    @DPTR,A
802013 7B00              MOV     R3,#?C?XDATASEG
802015 7A04              MOV     R2,#HIGH DisplayBuffer
802017 796B              MOV     R1,#LOW DisplayBuffer
802019 A512800949        ECALL   _sprintf
80201E 901596            MOV     DPTR,#len
802021 EF                MOV     A,R7
802022 F0                MOVX    @DPTR,A
 1892: 		DisplayStr( 0, __LINE0__, 1, DisplayBuffer, len + 1 );
802023 D21A              SETB    ?_DisplayStr?BIT
802025 7B00              MOV     R3,#?C?XDATASEG
802027 7A04              MOV     R2,#HIGH DisplayBuffer
802029 796B              MOV     R1,#LOW DisplayBuffer
80202B 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80202E A5128007B6        ECALL   ?C?PSTXDATA
802033 EF                MOV     A,R7
802034 04                INC     A
802035 A51280805B        ECALL   ?L?COM0006
 1893: 		if( CurrentStockCode < 10 )
80203A 900B22            MOV     DPTR,#CurrentStockCode
80203D E0                MOVX    A,@DPTR
80203E C3                CLR     C
80203F 940A              SUBB    A,#0AH
802041 5022              JNC     ?C0417?MAINFLOW
 1894: 		{
 1895: 			ClearDisplayLine( 2 );
802043 7F02              MOV     R7,#02H
802045 A5128087BB        ECALL   _ClearDisplayLine
 1896: 			DisplayCursorState( len, __LINE0__, 1, 1, 1 );	
80204A 901596            MOV     DPTR,#len
80204D E0                MOVX    A,@DPTR
80204E FF                MOV     R7,A
80204F D21A              SETB    ?_DisplayCursorState?BIT
802051 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
802054 7401              MOV     A,#01H
802056 F0                MOVX    @DPTR,A
802057 D21B              SETB    ?_DisplayCursorState?BIT+01H
802059 E4                CLR     A
80205A FD                MOV     R5,A
80205B A51280817F        ECALL   _DisplayCursorState
 1897: 			return 1;
802060 7F01              MOV     R7,#01H
802062 022113            LJMP    ?C0418?MAINFLOW
 1898: 		}
802065         ?C0417?MAINFLOW:
 1899: 		else
 1900: 			DisplayCursorState( 0, 1, 1, 0, 1 );
802065 D21A              SETB    ?_DisplayCursorState?BIT
802067 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 20


802068 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80206B F0                MOVX    @DPTR,A
80206C D21B              SETB    ?_DisplayCursorState?BIT+01H
80206E 7D01              MOV     R5,#01H
802070 FF                MOV     R7,A
802071 A51280817F        ECALL   _DisplayCursorState
 1901: 	}
802076 8013              SJMP    ?C0420?MAINFLOW
802078         ?C0416?MAINFLOW:
 1902: 	else
 1903: 	{
 1904: 		DisplayCursorState( 0, 1, 1, 0, 1 );
802078 D21A              SETB    ?_DisplayCursorState?BIT
80207A E4                CLR     A
80207B 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80207E F0                MOVX    @DPTR,A
80207F D21B              SETB    ?_DisplayCursorState?BIT+01H
802081 7D01              MOV     R5,#01H
802083 FF                MOV     R7,A
802084 A51280817F        ECALL   _DisplayCursorState
 1905: 		QueryFlag = 0;
 1906: 		QueryTimer = 0;
 1907: 		CurrentStockCode = 0;
 1908: 		UpdataDisp = 6;
 1909: 		return 1;
802089 8075              SJMP    ?C1046?MAINFLOW
 1910: 	}
80208B         ?C0420?MAINFLOW:
 1911: 
 1912: 	ClearKey();
80208B A5128087A8        ECALL   ClearKey
 1913: 	if( ( CurrentStockCode > 99 ) || ( CurrentStockCode <= 0 ) )
802090 900B22            MOV     DPTR,#CurrentStockCode
802093 E0                MOVX    A,@DPTR
802094 FF                MOV     R7,A
802095 D3                SETB    C
802096 9463              SUBB    A,#063H
802098 5005              JNC     ?C0422?MAINFLOW
80209A EF                MOV     A,R7
80209B 9400              SUBB    A,#00H
80209D 500F              JNC     ?C0421?MAINFLOW
80209F         ?C0422?MAINFLOW:
 1914: 	{
 1915: 		DisplayCursorState( 0, 1, 1, 0, 1 );
80209F D21A              SETB    ?_DisplayCursorState?BIT
8020A1 E4                CLR     A
8020A2 A512808019        ECALL   ?L?COM0001
 1916: 		// 客户输入错误 		
 1917: 		DisplayLine = STR_INVAILD_CHOICE;
 1918: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 1919: 		DisplayLine = STR_RE_INPUT_GOODS;
8020A7 A512807AEF        ECALL   ?L?COM0008
 1920: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 1921: 		WaitForWork( 2000 , NULL );
 1922: 		QueryFlag = 0;
8020AC         
 1923: 		QueryTimer = 0;
 1924: 		CurrentStockCode = 0;
 1925: 		UpdataDisp = 6;
 1926: 		return 1 ;
8020AC 8052              SJMP    ?C1046?MAINFLOW
 1927: 	}	
8020AE         ?C0421?MAINFLOW:
 1928: 	//输入规则正确	
 1929: 	MyKey = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 21


8020AE E4                CLR     A
8020AF 901595            MOV     DPTR,#MyKey
8020B2 F0                MOVX    @DPTR,A
 1930: 	for( len = 0; len < GOODSWAYNUM; len ++ )
8020B3 A3                INC     DPTR
8020B4 F0                MOVX    @DPTR,A
8020B5         ?C0423?MAINFLOW:
8020B5 901596            MOV     DPTR,#len
8020B8 E0                MOVX    A,@DPTR
8020B9 FF                MOV     R7,A
8020BA C3                CLR     C
8020BB 9440              SUBB    A,#040H
8020BD 502F              JNC     ?C0424?MAINFLOW
 1931: 	{
 1932: 		if( CurrentStockCode == InputGoodsWayList[len].GoodsWayNo )
8020BF EF                MOV     A,R7
8020C0 25E0              ADD     A,ACC
8020C2 25E0              ADD     A,ACC
8020C4 24D3              ADD     A,#LOW InputGoodsWayList
8020C6 F582              MOV     DPL,A
8020C8 E4                CLR     A
8020C9 342B              ADDC    A,#HIGH InputGoodsWayList
8020CB F583              MOV     DPH,A
8020CD E0                MOVX    A,@DPTR
8020CE FF                MOV     R7,A
8020CF 900B22            MOV     DPTR,#CurrentStockCode
8020D2 E0                MOVX    A,@DPTR
8020D3 B50710            CJNE    A,AR7,?C0425?MAINFLOW
 1933: 		{
 1934: 			CurrentStockCode = len;//InputGoodsWayList[len].SetArrayNo;
8020D6 901596            MOV     DPTR,#len
8020D9 E0                MOVX    A,@DPTR
8020DA 900B22            MOV     DPTR,#CurrentStockCode
8020DD F0                MOVX    @DPTR,A
 1935: 			MyKey = 1;
8020DE 901595            MOV     DPTR,#MyKey
8020E1 7401              MOV     A,#01H
8020E3 F0                MOVX    @DPTR,A
 1936: 			break;
8020E4 8008              SJMP    ?C0424?MAINFLOW
 1937: 		}
 1938: 	}
8020E6         ?C0425?MAINFLOW:
8020E6 901596            MOV     DPTR,#len
8020E9 E0                MOVX    A,@DPTR
8020EA 04                INC     A
8020EB F0                MOVX    @DPTR,A
8020EC 80C7              SJMP    ?C0423?MAINFLOW
8020EE         ?C0424?MAINFLOW:
 1939: 	if( MyKey == 0 )
8020EE 901595            MOV     DPTR,#MyKey
8020F1 E0                MOVX    A,@DPTR
8020F2 701D              JNZ     ?C0427?MAINFLOW
 1940: 	{
 1941: 		DisplayCursorState( 0, 1, 1, 0, 1 );
8020F4 D21A              SETB    ?_DisplayCursorState?BIT
8020F6 A512808019        ECALL   ?L?COM0001
 1942: 		// 客户输入错误 		
 1943: 		DisplayLine = STR_INVAILD_CHOICE;
 1944: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 1945: 		DisplayLine = STR_RE_INPUT_GOODS;
8020FB A512807AEF        ECALL   ?L?COM0008
 1946: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 1947: 		WaitForWork( 2000 , NULL );
 1948: 		QueryFlag = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 22


802100         
802100 C227              CLR     QueryFlag
 1949: 		QueryTimer = 0;
802102 E4                CLR     A
802103 F514              MOV     QueryTimer,A
 1950: 		CurrentStockCode = 0;
802105 900B22            MOV     DPTR,#CurrentStockCode
802108 F0                MOVX    @DPTR,A
 1951: 		UpdataDisp = 6;
802109 A3                INC     DPTR
80210A 7406              MOV     A,#06H
80210C F0                MOVX    @DPTR,A
 1952: 		return 1;
80210D 7F01              MOV     R7,#01H
80210F 8002              SJMP    ?C0418?MAINFLOW
 1953: 	}
802111         ?C0427?MAINFLOW:
 1954: 	Trace( "\n QueryDisplayInputCode CurrentStockCode = %bu", CurrentStockCode );		
 1955: 	return 0 ;
802111 7F00              MOV     R7,#00H
 1956: 
 1957: }
802113         ?C0418?MAINFLOW:
802113 A522              ERET    
----- FUNCTION QueryDisplayInputCode (END) -------


----- FUNCTION DispWelOrOutServ (BEGIN) -----
 FILE: 'mainflow.c'
 2010: u_char DispWelOrOutServ()
 2011: {
 2012: 	u_char xdata j = 0;
 2013: 	//显示欢迎信息或暂停服务
802115 E4                CLR     A
802116 901595            MOV     DPTR,#j
802119 F0                MOVX    @DPTR,A
 2014: 	if( ( QueryFlag == 1 ) && ( QueryTimer != 0 ) )
80211A 302709            JNB     QueryFlag,?C0438?MAINFLOW
80211D E514              MOV     A,QueryTimer
80211F 6005              JZ      ?C0438?MAINFLOW
 2015: 		return 1;
802121 7F01              MOV     R7,#01H
802123 022313            LJMP    ?C0439?MAINFLOW
802126         ?C0438?MAINFLOW:
 2016: 	else
 2017: 		CurrentStockCode = 0;	
802126 E4                CLR     A
802127 900B22            MOV     DPTR,#CurrentStockCode
80212A F0                MOVX    @DPTR,A
80212B         ?C0440?MAINFLOW:
 2018: //	if( KeyLockFlag == 0 )
 2019: //	{
 2020: //		KeyLock(); //锁定键盘，不让客户按键
 2021: //		KeyLockFlag = 1;
 2022: //	}
 2023: //	Trace( "\n DispWelOrOutServ" );
 2024: 	if( HardWareErr == 0 )
80212B 90047F            MOV     DPTR,#HardWareErr
80212E E0                MOVX    A,@DPTR
80212F 7002              JNZ     ?C0999?MAINFLOW
802131 A3                INC     DPTR
802132 E0                MOVX    A,@DPTR
802133         ?C0999?MAINFLOW:
802133 7005              JNZ     ?C0441?MAINFLOW
 2025: 		SystemStatus = 1;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 23


802135 9001C4            MOV     DPTR,#SystemStatus
802138 04                INC     A
802139 F0                MOVX    @DPTR,A
80213A         ?C0441?MAINFLOW:
 2026: 	if ( SystemStatus == 1)
80213A 9001C4            MOV     DPTR,#SystemStatus
80213D E0                MOVX    A,@DPTR
80213E 6401              XRL     A,#01H
802140 6003              JZ      $ + 5H
802142 0222DA            LJMP    ?C0442?MAINFLOW
 2027: 	{				
 2028: 		if( UpdataDisp/6 >= 1 )
802145 900B23            MOV     DPTR,#UpdataDisp
802148 E0                MOVX    A,@DPTR
802149 75F006            MOV     B,#06H
80214C 84                DIV     AB
80214D C3                CLR     C
80214E 9401              SUBB    A,#01H
802150 5003              JNC     $ + 5H
802152 0222F5            LJMP    ?C0463?MAINFLOW
 2029: 		{			
 2030: 			if( SystemParameter.BillNo == 1 )
802155 900425            MOV     DPTR,#SystemParameter+07H
802158 E0                MOVX    A,@DPTR
802159 6401              XRL     A,#01H
80215B 6003              JZ      $ + 5H
80215D 0221FD            LJMP    ?C0444?MAINFLOW
 2031: 			{
 2032: 	/*			if( ( IsCanInCashFlag == 1 ) && ( DeviceStatus.BillAccepter == 0 ) && ( DeviceStatus.CoinAccepter == 0 ) )
 2033: 					DisplayLine = STR_INSERT_BILL_COIN;
 2034: 				else if( DeviceStatus.CoinAccepter == 0 )
 2035: 					DisplayLine = STR_INSERT_COIN;
 2036: 				else if( ( IsCanInCashFlag == 1 ) && ( DeviceStatus.BillAccepter == 0 ) )
 2037: 					DisplayLine = STR_INSERT_BILL;*/
 2038: //				Trace( "\n DeviceStatus.BillAccepter11 = %bu", DeviceStatus.BillAccepter );			
 2039: 				if( IsCanInCashFlag == 1 )
802160 30264C            JNB     IsCanInCashFlag,?C0445?MAINFLOW
 2040: 				{
 2041: 					DisplayLine = STR_WELCOME;
802163 900B21            MOV     DPTR,#DisplayLine
802166 A51280802C        ECALL   ?L?COM0003
 2042: 					DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].le
>> n );
 2043: 					if(  ( DeviceStatus.BillAccepter == 0 ) && ( DeviceStatus.CoinAccepter == 0 ) )
80216B 900B16            MOV     DPTR,#DeviceStatus
80216E E0                MOVX    A,@DPTR
80216F FF                MOV     R7,A
802170 700D              JNZ     ?C0446?MAINFLOW
802172 A3                INC     DPTR
802173 E0                MOVX    A,@DPTR
802174 7009              JNZ     ?C0446?MAINFLOW
 2044: 						DisplayLine = STR_INSERT_BILL_COIN;
802176 900B21            MOV     DPTR,#DisplayLine
802179 740A              MOV     A,#0AH
80217B F0                MOVX    @DPTR,A
80217C 022219            LJMP    ?C0457?MAINFLOW
80217F         ?C0446?MAINFLOW:
 2045: 					else if(  ( DeviceStatus.BillAccepter == 0 ) && ( DeviceStatus.CoinAccepter != 0 ) )
80217F EF                MOV     A,R7
802180 700F              JNZ     ?C0448?MAINFLOW
802182 900B17            MOV     DPTR,#DeviceStatus+01H
802185 E0                MOVX    A,@DPTR
802186 6009              JZ      ?C0448?MAINFLOW
 2046: 						DisplayLine = STR_INSERT_BILL;
802188 900B21            MOV     DPTR,#DisplayLine
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 24


80218B 7422              MOV     A,#022H
80218D F0                MOVX    @DPTR,A
80218E 022219            LJMP    ?C0457?MAINFLOW
802191         ?C0448?MAINFLOW:
 2047: 					else if(  ( DeviceStatus.BillAccepter != 0 ) && ( DeviceStatus.CoinAccepter == 0 ) )
802191 900B16            MOV     DPTR,#DeviceStatus
802194 E0                MOVX    A,@DPTR
802195 6009              JZ      ?C0450?MAINFLOW
802197 A3                INC     DPTR
802198 E0                MOVX    A,@DPTR
802199 7005              JNZ     ?C0450?MAINFLOW
 2048: 						DisplayLine = STR_INSERT_COIN;
80219B 900B21            MOV     DPTR,#DisplayLine
80219E 8071              SJMP    ?C1051?MAINFLOW
8021A0         ?C0450?MAINFLOW:
 2049: 					else
 2050: 					{
 2051: 						HardWareErr |= 0x0001;					
8021A0 900480            MOV     DPTR,#HardWareErr+01H
8021A3 E0                MOVX    A,@DPTR
8021A4 4401              ORL     A,#01H
8021A6 F0                MOVX    @DPTR,A
 2052: 						DisplayLine = STR_OUT_OF_SERVICE;
8021A7 900B21            MOV     DPTR,#DisplayLine
8021AA 7410              MOV     A,#010H
8021AC F0                MOVX    @DPTR,A
 2053: 					}
 2054: 				}
8021AD 806A              SJMP    ?C0457?MAINFLOW
8021AF         ?C0445?MAINFLOW:
 2055: 				else
 2056: 				{
 2057: 					DisplayLine = STR_SHORT_CHANGE;
8021AF 900B21            MOV     DPTR,#DisplayLine
8021B2 7426              MOV     A,#026H
8021B4 A51280802C        ECALL   ?L?COM0003
 2058: 					DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].le
>> n );
 2059: 					DisplayLine = STR_INSERT_MONEY;	
8021B9 900B21            MOV     DPTR,#DisplayLine
8021BC 7423              MOV     A,#023H
8021BE F0                MOVX    @DPTR,A
 2060: 					for( j = 0; j < HOPPERNUM; j ++ )
8021BF E4                CLR     A
8021C0 901595            MOV     DPTR,#j
8021C3 F0                MOVX    @DPTR,A
8021C4         ?C0453?MAINFLOW:
8021C4 901595            MOV     DPTR,#j
8021C7 E0                MOVX    A,@DPTR
8021C8 FF                MOV     R7,A
8021C9 C3                CLR     C
8021CA 9403              SUBB    A,#03H
8021CC 504B              JNC     ?C0457?MAINFLOW
 2061: 					{
 2062: 						if( HopperSetList[j].HopperState != 2 )
8021CE EF                MOV     A,R7
8021CF 25E0              ADD     A,ACC
8021D1 25E0              ADD     A,ACC
8021D3 24E2              ADD     A,#LOW HopperSetList+03H
8021D5 F582              MOV     DPL,A
8021D7 E4                CLR     A
8021D8 340A              ADDC    A,#HIGH HopperSetList+03H
8021DA F583              MOV     DPH,A
8021DC E0                MOVX    A,@DPTR
8021DD 6402              XRL     A,#02H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 25


8021DF 6014              JZ      ?C0455?MAINFLOW
 2063: 							HopperSetList[j].HopperState = 2;	
8021E1 901595            MOV     DPTR,#j
8021E4 E0                MOVX    A,@DPTR
8021E5 25E0              ADD     A,ACC
8021E7 25E0              ADD     A,ACC
8021E9 24E2              ADD     A,#LOW HopperSetList+03H
8021EB F582              MOV     DPL,A
8021ED E4                CLR     A
8021EE 340A              ADDC    A,#HIGH HopperSetList+03H
8021F0 F583              MOV     DPH,A
8021F2 7402              MOV     A,#02H
8021F4 F0                MOVX    @DPTR,A
 2064: 					}					
8021F5         ?C0455?MAINFLOW:
8021F5 901595            MOV     DPTR,#j
8021F8 E0                MOVX    A,@DPTR
8021F9 04                INC     A
8021FA F0                MOVX    @DPTR,A
8021FB 80C7              SJMP    ?C0453?MAINFLOW
 2065: 				}
 2066: 			}
8021FD         ?C0444?MAINFLOW:
 2067: 			else if( DeviceStatus.CoinAccepter == 0 ) 
8021FD 900B17            MOV     DPTR,#DeviceStatus+01H
802200 E0                MOVX    A,@DPTR
802201 7016              JNZ     ?C0457?MAINFLOW
 2068: 			{
 2069: 				DisplayLine = STR_WELCOME;
802203 900B21            MOV     DPTR,#DisplayLine
802206 A51280802C        ECALL   ?L?COM0003
 2070: 				DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len )
>> ;
 2071: 				if ( IsCanInCashFlag == 1 )
80220B 900B21            MOV     DPTR,#DisplayLine
80220E 302605            JNB     IsCanInCashFlag,?C0459?MAINFLOW
 2072: 					DisplayLine = STR_INSERT_COIN;
802211         
802211 7421              MOV     A,#021H
802213 F0                MOVX    @DPTR,A
802214 8003              SJMP    ?C0457?MAINFLOW
802216         ?C0459?MAINFLOW:
 2073: 				else
 2074: 					DisplayLine = STR_INSERT_MONEY;	
802216 7423              MOV     A,#023H
802218 F0                MOVX    @DPTR,A
 2075: 			}
802219         ?C0457?MAINFLOW:
 2076: 	
 2077: 			DisplayStr( 0, __LINE1__ , 1 , DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
>> 
802219 D21A              SETB    ?_DisplayStr?BIT
80221B 900B21            MOV     DPTR,#DisplayLine
80221E E0                MOVX    A,@DPTR
80221F FF                MOV     R7,A
802220 25E0              ADD     A,ACC
802222 25E0              ADD     A,ACC
802224 2471              ADD     A,#LOW DispInformationTable
802226 F582              MOV     DPL,A
802228 E4                CLR     A
802229 3404              ADDC    A,#HIGH DispInformationTable
80222B F583              MOV     DPH,A
80222D A5128007C0        ECALL   ?C?PLDCODE
802232 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
802235 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 26


80223A EF                MOV     A,R7
80223B 25E0              ADD     A,ACC
80223D 25E0              ADD     A,ACC
80223F 2474              ADD     A,#LOW DispInformationTable+03H
802241 F582              MOV     DPL,A
802243 E4                CLR     A
802244 3404              ADDC    A,#HIGH DispInformationTable+03H
802246 F583              MOV     DPH,A
802248 E4                CLR     A
802249 93                MOVC    A,@A+DPTR
80224A 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80224D F0                MOVX    @DPTR,A
80224E 7D01              MOV     R5,#01H
802250 E4                CLR     A
802251 FF                MOV     R7,A
802252 A512808062        ECALL   _DisplayStr
 2078: 			WaitForWork( 800, NULL );          //100-800-(Changed by Andy 20100826),
802257 E4                CLR     A
802258 7F20              MOV     R7,#020H
80225A 7E03              MOV     R6,#03H
80225C A512807B35        ECALL   ?L?COM000D
 2079: 			if( GetDisplayState() == 1 )
802261 A512812228        ECALL   GetDisplayState
802266 EF                MOV     A,R7
802267 6401              XRL     A,#01H
802269 705E              JNZ     ?C0461?MAINFLOW
 2080: 			{
 2081: 				DisplayStr( 0, __LINE1__ , 1 , DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len )
>> ;
80226B D21A              SETB    ?_DisplayStr?BIT
80226D 900B21            MOV     DPTR,#DisplayLine
802270 E0                MOVX    A,@DPTR
802271 FF                MOV     R7,A
802272 25E0              ADD     A,ACC
802274 25E0              ADD     A,ACC
802276 2471              ADD     A,#LOW DispInformationTable
802278 F582              MOV     DPL,A
80227A E4                CLR     A
80227B 3404              ADDC    A,#HIGH DispInformationTable
80227D F583              MOV     DPH,A
80227F A5128007C0        ECALL   ?C?PLDCODE
802284 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
802287 A5128007B6        ECALL   ?C?PSTXDATA
80228C EF                MOV     A,R7
80228D 25E0              ADD     A,ACC
80228F 25E0              ADD     A,ACC
802291 2474              ADD     A,#LOW DispInformationTable+03H
802293 F582              MOV     DPL,A
802295 E4                CLR     A
802296 3404              ADDC    A,#HIGH DispInformationTable+03H
802298 F583              MOV     DPH,A
80229A E4                CLR     A
80229B 93                MOVC    A,@A+DPTR
80229C 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80229F F0                MOVX    @DPTR,A
8022A0 7D01              MOV     R5,#01H
8022A2 E4                CLR     A
8022A3 FF                MOV     R7,A
8022A4 A512808062        ECALL   _DisplayStr
 2082: 				WaitForWork( 800, NULL );      //100-800-(Changed by Andy 20100826),
8022A9 E4                CLR     A
8022AA 7F20              MOV     R7,#020H
8022AC 7E03              MOV     R6,#03H
8022AE A512807B35        ECALL   ?L?COM000D
 2083: 				if( GetDisplayState() == 1 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 27


8022B3 A512812228        ECALL   GetDisplayState
8022B8 BF010E            CJNE    R7,#01H,?C0461?MAINFLOW
 2084: 				{
 2085: 					Trace( "\n LCD OutTime" );	
 2086: 					HardWareErr |= 0x0200;//LCD通讯不通
8022BB 90047F            MOV     DPTR,#HardWareErr
8022BE E0                MOVX    A,@DPTR
8022BF 4402              ORL     A,#02H
8022C1 F0                MOVX    @DPTR,A
8022C2 A3                INC     DPTR
8022C3 E0                MOVX    A,@DPTR
8022C4 F0                MOVX    @DPTR,A
 2087: 					return 1;
8022C5 7F01              MOV     R7,#01H
8022C7 804A              SJMP    ?C0439?MAINFLOW
 2088: 				}
 2089: 			}	 			
8022C9         ?C0461?MAINFLOW:
 2090: 			WaitForWork( 500, NULL );
8022C9 E4                CLR     A
8022CA 7FF4              MOV     R7,#0F4H
8022CC 7E01              MOV     R6,#01H
8022CE A512807B35        ECALL   ?L?COM000D
 2091: 			UpdataDisp = 0;
8022D3 E4                CLR     A
8022D4 900B23            MOV     DPTR,#UpdataDisp
8022D7 F0                MOVX    @DPTR,A
 2092: 		}
 2093: 	}
8022D8 801B              SJMP    ?C0463?MAINFLOW
8022DA         ?C0442?MAINFLOW:
 2094: 	else
 2095: 	{		
 2096: 		DisplayLine = STR_OUT_OF_SERVICE;	
8022DA 900B21            MOV     DPTR,#DisplayLine
8022DD 7410              MOV     A,#010H
8022DF A51280802C        ECALL   ?L?COM0003
 2097: 		DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len )
>> ;
 2098: //		ClearDisplayLine1();
 2099: 		ClearDisplayLine( 2 );
8022E4 7F02              MOV     R7,#02H
8022E6 A5128087BB        ECALL   _ClearDisplayLine
 2100: 		WaitForWork( 500, NULL );		
8022EB E4                CLR     A
8022EC 7FF4              MOV     R7,#0F4H
8022EE 7E01              MOV     R6,#01H
8022F0 A512807B35        ECALL   ?L?COM000D
 2101: 	}
8022F5         ?C0463?MAINFLOW:
 2102: 	UpdataDisp++;
8022F5 900B23            MOV     DPTR,#UpdataDisp
8022F8 E0                MOVX    A,@DPTR
8022F9 04                INC     A
8022FA F0                MOVX    @DPTR,A
 2103: 	if( IsInsertBill() == 1 )
8022FB A512809455        ECALL   IsInsertBill
802300 BF0104            CJNE    R7,#01H,?C0464?MAINFLOW
 2104: 		return 2;
802303 7F02              MOV     R7,#02H
802305 800C              SJMP    ?C0439?MAINFLOW
802307         ?C0464?MAINFLOW:
 2105: 	else
 2106: 	{
 2107: 		WaitForWork( 500, NULL );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 28


802307 E4                CLR     A
802308 7FF4              MOV     R7,#0F4H
80230A 7E01              MOV     R6,#01H
80230C A512807B35        ECALL   ?L?COM000D
 2108: 		return 1;
802311 7F01              MOV     R7,#01H
 2109: 	}
 2110: }
802313         ?C0439?MAINFLOW:
802313 A522              ERET    
----- FUNCTION DispWelOrOutServ (END) -------


----- FUNCTION DisplayInputCode (BEGIN) -----
 FILE: 'mainflow.c'
 2298: u_char DisplayInputCode()
 2299: {
 2300: 	u_char xdata PressKeyCount= 0;
 2301: 	u_char xdata tStockCode[3];
802315 E4                CLR     A
802316 901595            MOV     DPTR,#PressKeyCount
802319 F0                MOVX    @DPTR,A
 2302: 	u_char xdata Temp[20];	
 2303: 	u_char xdata MyKey ;
 2304: 	u_char xdata len = 0;
80231A 9015AE            MOV     DPTR,#len
80231D F0                MOVX    @DPTR,A
 2305: 	u_int  xdata CoinSum = 0;
80231E A3                INC     DPTR
80231F F0                MOVX    @DPTR,A
802320 A3                INC     DPTR
802321 F0                MOVX    @DPTR,A
 2306: 
 2307: //	Trace("\n DisplayInputCode" );
 2308: 	MyKey = 0;
802322 9015AD            MOV     DPTR,#MyKey
802325 F0                MOVX    @DPTR,A
 2309: 	LzjMSecTimer = 400;
802326 751690            MOV     LzjMSecTimer,#090H
802329         ?C0499?MAINFLOW:
 2310: 	while( LzjMSecTimer )
802329 E516              MOV     A,LzjMSecTimer
80232B 6052              JZ      ?C0500?MAINFLOW
 2311: 	{
 2312: 		CoinSum = GetCoin();			
80232D A512809344        ECALL   GetCoin
802332 9015AF            MOV     DPTR,#CoinSum
802335 EE                MOV     A,R6
802336 F0                MOVX    @DPTR,A
802337 A3                INC     DPTR
802338 EF                MOV     A,R7
802339 F0                MOVX    @DPTR,A
 2313: 		if ( CoinSum ) 
80233A 4E                ORL     A,R6
80233B 603B              JZ      ?C0501?MAINFLOW
 2314: 		{
 2315: 			Trace( "\n Get CoinSum" );			
 2316: 		#ifdef _COIN_INPUT_PARALLEL	
 2317: 			CurrentPayed += CoinSum ;
80233D 9015AF            MOV     DPTR,#CoinSum
802340 E0                MOVX    A,@DPTR
802341 FE                MOV     R6,A
802342 A3                INC     DPTR
802343 E0                MOVX    A,@DPTR
802344 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 29


802345 900B1F            MOV     DPTR,#CurrentPayed
802348 EE                MOV     A,R6
802349 8FF0              MOV     B,R7
80234B A512800600        ECALL   ?C?IILDX
 2318: 			TradeCounter.TrueCurrencySum += CoinSum;
802350 900AEC            MOV     DPTR,#TradeCounter
802353 A51280073E        ECALL   ?C?LLDXDATA0
802358 E4                CLR     A
802359 FC                MOV     R4,A
80235A FD                MOV     R5,A
80235B A51280062E        ECALL   ?C?LADD
802360 900AEC            MOV     DPTR,#TradeCounter
802363 A512800792        ECALL   ?C?LSTXDATA
 2319: 			TradeCounter.CoinSum += CoinSum;
802368 900AF4            MOV     DPTR,#TradeCounter+08H
80236B A51280073E        ECALL   ?C?LLDXDATA0
802370 9015AF            MOV     DPTR,#CoinSum
802373 A51280952D        ECALL   ?L?COM0020
 2320: 		#else
 2321: 			CurrentPayed += CoinSum * COINMULTIPLE ;
 2322: 			TradeCounter.TrueCurrencySum += CoinSum * COINMULTIPLE;
 2323: 			TradeCounter.CoinSum += CoinSum * COINMULTIPLE;
 2324: 		#endif	
 2325: 			LzjMSecTimer = 400;				
 2326: 			SchedulerProcess();
 2327: 		}
802378         ?C0501?MAINFLOW:
 2328: 		SchedulerProcess();
802378 A512809545        ECALL   SchedulerProcess
 2329: 	}		
80237D 80AA              SJMP    ?C0499?MAINFLOW
80237F         ?C0500?MAINFLOW:
 2330: 	DisableBillDev();//禁能纸、硬币品
80237F A512808FD7        ECALL   DisableBillDev
 2331: 	//如果没有投入金额，则从头开始
 2332: 	if( CurrentPayed == 0 )
802384 900B1F            MOV     DPTR,#CurrentPayed
802387 E0                MOVX    A,@DPTR
802388 7002              JNZ     ?C1002?MAINFLOW
80238A A3                INC     DPTR
80238B E0                MOVX    A,@DPTR
80238C         ?C1002?MAINFLOW:
80238C 7005              JNZ     ?C0502?MAINFLOW
 2333: 		return 2;
80238E 7F02              MOV     R7,#02H
802390 022640            LJMP    ?C0503?MAINFLOW
802393         ?C0502?MAINFLOW:
 2334: 	memset( tStockCode , 0 , sizeof( tStockCode ));
802393 7E00              MOV     R6,#00H
802395 7F03              MOV     R7,#03H
802397 7D00              MOV     R5,#00H
802399 7B00              MOV     R3,#?C?XDATASEG
80239B 7A15              MOV     R2,#HIGH tStockCode
80239D 7996              MOV     R1,#LOW tStockCode
80239F A5128008A6        ECALL   ?C?MEMSET
 2335: 	PressKeyCount = 0;		
8023A4 E4                CLR     A
8023A5 901595            MOV     DPTR,#PressKeyCount
8023A8 F0                MOVX    @DPTR,A
 2336: 	memset( Temp, 0, sizeof( Temp ) );															
8023A9 FE                MOV     R6,A
8023AA 7F14              MOV     R7,#014H
8023AC FD                MOV     R5,A
8023AD 7B00              MOV     R3,#?C?XDATASEG
8023AF 7A15              MOV     R2,#HIGH Temp
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 30


8023B1 7999              MOV     R1,#LOW Temp
8023B3 A5128008A6        ECALL   ?C?MEMSET
 2337: 	DisplayLine = STR_INPUT_GOODS;
8023B8 900B21            MOV     DPTR,#DisplayLine
8023BB 7404              MOV     A,#04H
8023BD F0                MOVX    @DPTR,A
 2338: 	memcpy( Temp, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
8023BE E0                MOVX    A,@DPTR
8023BF FF                MOV     R7,A
8023C0 25E0              ADD     A,ACC
8023C2 25E0              ADD     A,ACC
8023C4 2474              ADD     A,#LOW DispInformationTable+03H
8023C6 F582              MOV     DPL,A
8023C8 E4                CLR     A
8023C9 3404              ADDC    A,#HIGH DispInformationTable+03H
8023CB F583              MOV     DPH,A
8023CD E4                CLR     A
8023CE 93                MOVC    A,@A+DPTR
8023CF FD                MOV     R5,A
8023D0 7C00              MOV     R4,#00H
8023D2 C004              PUSH    AR4
8023D4 C005              PUSH    AR5
8023D6 EF                MOV     A,R7
8023D7 25E0              ADD     A,ACC
8023D9 25E0              ADD     A,ACC
8023DB 2471              ADD     A,#LOW DispInformationTable
8023DD F582              MOV     DPL,A
8023DF E4                CLR     A
8023E0 3404              ADDC    A,#HIGH DispInformationTable
8023E2 F583              MOV     DPH,A
8023E4 A5128007C0        ECALL   ?C?PLDCODE
8023E9 7899              MOV     R0,#LOW Temp
8023EB 7C15              MOV     R4,#HIGH Temp
8023ED 7D00              MOV     R5,#?C?XDATASEG
8023EF D007              POP     AR7
8023F1 D006              POP     AR6
8023F3 A51280052D        ECALL   ?C?COPY
 2339: 	len = DispInformationTable[DisplayLine].len;
8023F8 900B21            MOV     DPTR,#DisplayLine
8023FB E0                MOVX    A,@DPTR
8023FC 25E0              ADD     A,ACC
8023FE 25E0              ADD     A,ACC
802400 2474              ADD     A,#LOW DispInformationTable+03H
802402 F582              MOV     DPL,A
802404 E4                CLR     A
802405 3404              ADDC    A,#HIGH DispInformationTable+03H
802407 F583              MOV     DPH,A
802409 E4                CLR     A
80240A 93                MOVC    A,@A+DPTR
80240B 9015AE            MOV     DPTR,#len
80240E F0                MOVX    @DPTR,A
 2340: 	if( CurrentStockCode >= 0x30 )
80240F 900B22            MOV     DPTR,#CurrentStockCode
802412 E0                MOVX    A,@DPTR
802413 FF                MOV     R7,A
802414 C3                CLR     C
802415 9430              SUBB    A,#030H
802417 4051              JC      ?C0504?MAINFLOW
 2341: 	{
 2342: 		tStockCode[ 0 ] = CurrentStockCode;
802419 901596            MOV     DPTR,#tStockCode
80241C EF                MOV     A,R7
80241D F0                MOVX    @DPTR,A
 2343: 		CurrentStockCode = CurrentStockCode - 0x30;
80241E 900B22            MOV     DPTR,#CurrentStockCode
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 31


802421 24D0              ADD     A,#0D0H
802423 F0                MOVX    @DPTR,A
 2344: 		PressKeyCount++;
802424 901595            MOV     DPTR,#PressKeyCount
802427 E0                MOVX    A,@DPTR
802428 04                INC     A
802429 F0                MOVX    @DPTR,A
 2345: 		memcpy( Temp + len, tStockCode, 1 );	
80242A 9015AE            MOV     DPTR,#len
80242D E0                MOVX    A,@DPTR
80242E 2499              ADD     A,#LOW Temp
802430 F9                MOV     R1,A
802431 E4                CLR     A
802432 3415              ADDC    A,#HIGH Temp
802434 A801              MOV     R0,AR1
802436 FC                MOV     R4,A
802437 7D00              MOV     R5,#?C?XDATASEG
802439 7B00              MOV     R3,#?C?XDATASEG
80243B 7A15              MOV     R2,#HIGH tStockCode
80243D 7996              MOV     R1,#LOW tStockCode
80243F 7E00              MOV     R6,#00H
802441 7F01              MOV     R7,#01H
802443 A51280052D        ECALL   ?C?COPY
 2346: 		DisplayStr( 0, __LINE0__, 1, Temp, len + 1 );
802448 D21A              SETB    ?_DisplayStr?BIT
80244A 7B00              MOV     R3,#?C?XDATASEG
80244C 7A15              MOV     R2,#HIGH Temp
80244E 7999              MOV     R1,#LOW Temp
802450 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
802453 A5128007B6        ECALL   ?C?PSTXDATA
802458 9015AE            MOV     DPTR,#len
80245B E0                MOVX    A,@DPTR
80245C 04                INC     A
80245D A51280805B        ECALL   ?L?COM0006
 2347: 		len += 1;
802462 9015AE            MOV     DPTR,#len
802465 E0                MOVX    A,@DPTR
802466 04                INC     A
802467 F0                MOVX    @DPTR,A
 2348: 	}
802468 8019              SJMP    ?C0505?MAINFLOW
80246A         ?C0504?MAINFLOW:
 2349: 	else
 2350: 		DisplayStr( 0, __LINE0__, 1, Temp, len );	
80246A D21A              SETB    ?_DisplayStr?BIT
80246C 7B00              MOV     R3,#?C?XDATASEG
80246E 7A15              MOV     R2,#HIGH Temp
802470 7999              MOV     R1,#LOW Temp
802472 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
802475 A5128007B6        ECALL   ?C?PSTXDATA
80247A 9015AE            MOV     DPTR,#len
80247D E0                MOVX    A,@DPTR
80247E A51280805B        ECALL   ?L?COM0006
802483         ?C0505?MAINFLOW:
 2351: 	
 2352: 	DisplayLine = STR_OK_NOT;
802483 900B21            MOV     DPTR,#DisplayLine
802486 7405              MOV     A,#05H
802488 F0                MOVX    @DPTR,A
 2353: 	DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
802489 D21A              SETB    ?_DisplayStr?BIT
80248B E0                MOVX    A,@DPTR
80248C FF                MOV     R7,A
80248D 25E0              ADD     A,ACC
80248F 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 32


802491 2471              ADD     A,#LOW DispInformationTable
802493 F582              MOV     DPL,A
802495 E4                CLR     A
802496 3404              ADDC    A,#HIGH DispInformationTable
802498 F583              MOV     DPH,A
80249A A5128007C0        ECALL   ?C?PLDCODE
80249F 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8024A2 A5128007B6        ECALL   ?C?PSTXDATA
8024A7 EF                MOV     A,R7
8024A8 25E0              ADD     A,ACC
8024AA 25E0              ADD     A,ACC
8024AC 2474              ADD     A,#LOW DispInformationTable+03H
8024AE F582              MOV     DPL,A
8024B0 E4                CLR     A
8024B1 3404              ADDC    A,#HIGH DispInformationTable+03H
8024B3 F583              MOV     DPH,A
8024B5 E4                CLR     A
8024B6 93                MOVC    A,@A+DPTR
8024B7 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8024BA F0                MOVX    @DPTR,A
8024BB 7D01              MOV     R5,#01H
8024BD E4                CLR     A
8024BE FF                MOV     R7,A
8024BF A512808062        ECALL   _DisplayStr
 2354: 
 2355: 	DisplayCursorState( len, __LINE0__, 1, 1, 1 );			
8024C4 9015AE            MOV     DPTR,#len
8024C7 E0                MOVX    A,@DPTR
8024C8 FF                MOV     R7,A
8024C9 D21A              SETB    ?_DisplayCursorState?BIT
8024CB 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8024CE 7401              MOV     A,#01H
8024D0 F0                MOVX    @DPTR,A
8024D1 D21B              SETB    ?_DisplayCursorState?BIT+01H
8024D3 E4                CLR     A
8024D4 FD                MOV     R5,A
8024D5 A5128087A3        ECALL   ?L?COM0013
 2356: 	ClearKey();	
 2357: 	if( SystemParameter.BillNo == 1 )
8024DA 900425            MOV     DPTR,#SystemParameter+07H
8024DD E0                MOVX    A,@DPTR
8024DE B40105            CJNE    A,#01H,?C0507?MAINFLOW
 2358: 		RejectBill();//退钞	
8024E1 A5128087F9        ECALL   RejectBill
8024E6         ?C0507?MAINFLOW:
 2359: 	while( 1 )
 2360: 	{		
 2361: 		MyKey = KEY_NULL;
8024E6 9015AD            MOV     DPTR,#MyKey
8024E9 74FF              MOV     A,#0FFH
8024EB F0                MOVX    @DPTR,A
 2362: 		//Mission( ); 
 2363: 		WaitForWork( 20, NULL );
8024EC E4                CLR     A
8024ED 7F14              MOV     R7,#014H
8024EF FE                MOV     R6,A
8024F0 A512807B35        ECALL   ?L?COM000D
 2364: 		MyKey = GetKey();
8024F5 A512809275        ECALL   GetKey
8024FA 9015AD            MOV     DPTR,#MyKey
8024FD EF                MOV     A,R7
8024FE F0                MOVX    @DPTR,A
 2365: 		if ( MyKey == KEY_NULL ) 
8024FF F4                CPL     A
802500 60E4              JZ      ?C0507?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 33


 2366: 			continue;
802502         ?C0509?MAINFLOW:
 2367: 		switch ( MyKey ) 
802502 9015AD            MOV     DPTR,#MyKey
802505 E0                MOVX    A,@DPTR
802506 FF                MOV     R7,A
802507 24F6              ADD     A,#0F6H
802509 5002              JNC     ?C0520?MAINFLOW
80250B 805F              SJMP    ?C0510?MAINFLOW
 2368: 		{
 2369: 			case 	KEY_0:
 2370: 			case	KEY_1:
 2371: 			case	KEY_2:
 2372: 			case	KEY_3:
 2373: 			case	KEY_4:
 2374: 			case	KEY_5:
 2375: 			case	KEY_6:
 2376: 			case	KEY_7:
 2377: 			case	KEY_8:
 2378: 			case	KEY_9:
80250D         ?C0520?MAINFLOW:
 2379: 				if( PressKeyCount < 2 )
80250D 901595            MOV     DPTR,#PressKeyCount
802510 E0                MOVX    A,@DPTR
802511 FE                MOV     R6,A
802512 C3                CLR     C
802513 9402              SUBB    A,#02H
802515 504F              JNC     ?C0521?MAINFLOW
 2380: 				{					
 2381:           			tStockCode[ PressKeyCount ] = '0' + MyKey - KEY_0;					
802517 EF                MOV     A,R7
802518 2430              ADD     A,#030H
80251A FF                MOV     R7,A
80251B 7496              MOV     A,#LOW tStockCode
80251D 2E                ADD     A,R6
80251E F582              MOV     DPL,A
802520 E4                CLR     A
802521 3415              ADDC    A,#HIGH tStockCode
802523 F583              MOV     DPH,A
802525 EF                MOV     A,R7
802526 F0                MOVX    @DPTR,A
 2382: 					PressKeyCount++;								
802527 901595            MOV     DPTR,#PressKeyCount
80252A E0                MOVX    A,@DPTR
80252B 04                INC     A
80252C F0                MOVX    @DPTR,A
 2383: 					DisplayStr( 0, __LINE0__, 0, tStockCode + (PressKeyCount - 1 ), 1 );						
80252D C21A              CLR     ?_DisplayStr?BIT
80252F E0                MOVX    A,@DPTR
802530 2495              ADD     A,#LOW tStockCode-01H
802532 F9                MOV     R1,A
802533 E4                CLR     A
802534 3415              ADDC    A,#HIGH tStockCode-01H
802536 FA                MOV     R2,A
802537 7B00              MOV     R3,#?C?XDATASEG
802539 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80253C A5128007B6        ECALL   ?C?PSTXDATA
802541 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
802544 7401              MOV     A,#01H
802546 A51280805E        ECALL   ?L?COM0007
 2384: 					CurrentStockCode = CurrentStockCode * 10 + MyKey;
80254B 900B22            MOV     DPTR,#CurrentStockCode
80254E E0                MOVX    A,@DPTR
80254F 75F00A            MOV     B,#0AH
802552 A4                MUL     AB
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 34


802553 FF                MOV     R7,A
802554 9015AD            MOV     DPTR,#MyKey
802557 E0                MOVX    A,@DPTR
802558 2F                ADD     A,R7
802559 900B22            MOV     DPTR,#CurrentStockCode
80255C F0                MOVX    @DPTR,A
 2385: 			//		memcpy( Temp + len, tStockCode, PressKeyCount );
 2386: 			//		DisplayStr( 0, __LINE0__, 1, Temp, len + PressKeyCount );										
 2387: 			//		DisplayCursorState( len + PressKeyCount, __LINE0__, 1, 1, 1 );	
 2388: 					WaitForWork( 20, NULL );
80255D E4                CLR     A
80255E 7F14              MOV     R7,#014H
802560 FE                MOV     R6,A
802561 A512807B35        ECALL   ?L?COM000D
 2389: 				}
802566         ?C0521?MAINFLOW:
 2390: 				MyKey = KEY_NULL ;
802566 9015AD            MOV     DPTR,#MyKey
802569 74FF              MOV     A,#0FFH
80256B F0                MOVX    @DPTR,A
 2391:        			break;			
 2392: 			case	KEY_CANCEL:				
 2393: 			case 	KEY_SUBMIT:
 2394: 				break;
 2395: 			default:
 2396: 				break;
 2397: 		}
80256C         ?C0510?MAINFLOW:
 2398: 		if( ( MyKey == KEY_CANCEL ) || ( MyKey == KEY_SUBMIT ) )
80256C 9015AD            MOV     DPTR,#MyKey
80256F E0                MOVX    A,@DPTR
802570 FF                MOV     R7,A
802571 641B              XRL     A,#01BH
802573 6008              JZ      ?C0508?MAINFLOW
802575 EF                MOV     A,R7
802576 640D              XRL     A,#0DH
802578 6003              JZ      $ + 5H
80257A 0224E6            LJMP    ?C0507?MAINFLOW
 2399: 			break;					
 2400: 	}	
80257D         ?C0508?MAINFLOW:
 2401: 	ClearKey();
80257D A5128087A8        ECALL   ClearKey
 2402: 	DisplayCursorState( 0, 1, 1, 0, 1 );
802582 D21A              SETB    ?_DisplayCursorState?BIT
802584 E4                CLR     A
802585 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
802588 F0                MOVX    @DPTR,A
802589 D21B              SETB    ?_DisplayCursorState?BIT+01H
80258B 7D01              MOV     R5,#01H
80258D FF                MOV     R7,A
80258E A51280817F        ECALL   _DisplayCursorState
 2403: 	if( MyKey == KEY_CANCEL )
802593 9015AD            MOV     DPTR,#MyKey
802596 E0                MOVX    A,@DPTR
802597 B41B03            CJNE    A,#01BH,?C0527?MAINFLOW
 2404: 	{
 2405: 		CurrentStockCode = 0;
 2406: 		return 1;
80259A 022635            LJMP    ?C1057?MAINFLOW
 2407: 	}
80259D         ?C0527?MAINFLOW:
 2408: 	if( ( PressKeyCount > 2 ) || ( PressKeyCount <= 0 ) )
80259D 901595            MOV     DPTR,#PressKeyCount
8025A0 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 35


8025A1 FF                MOV     R7,A
8025A2 D3                SETB    C
8025A3 9402              SUBB    A,#02H
8025A5 5005              JNC     ?C0529?MAINFLOW
8025A7 EF                MOV     A,R7
8025A8 9400              SUBB    A,#00H
8025AA 500C              JNC     ?C0528?MAINFLOW
8025AC         ?C0529?MAINFLOW:
 2409: 	{
 2410: 		// 客户输入错误 		
 2411: 		DisplayLine = STR_INVAILD_CHOICE;
8025AC A512808027        ECALL   ?L?COM0002
 2412: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2413: 		DisplayLine = STR_RE_INPUT_GOODS;
8025B1 A512807AEF        ECALL   ?L?COM0008
 2414: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2415: 		WaitForWork( 2000 , NULL );
 2416: 		//Trace( "\n ChooseItemCode cancel ret 2");
 2417: 		CurrentStockCode = 0;
8025B6         
 2418: 		return 1 ;
8025B6 807D              SJMP    ?C1057?MAINFLOW
 2419: 	}	
8025B8         ?C0528?MAINFLOW:
 2420: 	if( ( PressKeyCount == 2 ) && ( MyKey == KEY_SUBMIT ) )
8025B8 901595            MOV     DPTR,#PressKeyCount
8025BB E0                MOVX    A,@DPTR
8025BC 6402              XRL     A,#02H
8025BE 6003              JZ      $ + 5H
8025C0 022640            LJMP    ?C0503?MAINFLOW
8025C3 9015AD            MOV     DPTR,#MyKey
8025C6 E0                MOVX    A,@DPTR
8025C7 640D              XRL     A,#0DH
8025C9 7075              JNZ     ?C0503?MAINFLOW
 2421: 	{
 2422: 		WaitForWork( 200 , NULL );	
8025CB 7FC8              MOV     R7,#0C8H
8025CD FE                MOV     R6,A
8025CE A512807B35        ECALL   ?L?COM000D
 2423: //		Trace( "\n input CurrentStockCode = %bu", CurrentStockCode );
 2424: 		if( CurrentStockCode == 0 )
8025D3 900B22            MOV     DPTR,#CurrentStockCode
8025D6 E0                MOVX    A,@DPTR
8025D7 700C              JNZ     ?C0531?MAINFLOW
 2425: 		{
 2426: 			// 客户输入错误 		
 2427: 			DisplayLine = STR_INVAILD_CHOICE;
8025D9 A512808027        ECALL   ?L?COM0002
 2428: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2429: 			DisplayLine = STR_RE_INPUT_GOODS;
8025DE A512807AEF        ECALL   ?L?COM0008
 2430: 			DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2431: 			WaitForWork( 2000 , NULL );
 2432: 			CurrentStockCode = 0;
8025E3         
 2433: 			return 1;
8025E3 8050              SJMP    ?C1057?MAINFLOW
 2434: 		}
8025E5         ?C0531?MAINFLOW:
 2435: 		MyKey = 0;
8025E5 E4                CLR     A
8025E6 9015AD            MOV     DPTR,#MyKey
8025E9 F0                MOVX    @DPTR,A
 2436: 		for( len = 0; len < GOODSWAYNUM; len ++ )
8025EA A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 36


8025EB F0                MOVX    @DPTR,A
8025EC         ?C0532?MAINFLOW:
8025EC 9015AE            MOV     DPTR,#len
8025EF E0                MOVX    A,@DPTR
8025F0 FF                MOV     R7,A
8025F1 C3                CLR     C
8025F2 9440              SUBB    A,#040H
8025F4 502F              JNC     ?C0533?MAINFLOW
 2437: 		{
 2438: 			if( CurrentStockCode == InputGoodsWayList[len].GoodsWayNo )
8025F6 EF                MOV     A,R7
8025F7 25E0              ADD     A,ACC
8025F9 25E0              ADD     A,ACC
8025FB 24D3              ADD     A,#LOW InputGoodsWayList
8025FD F582              MOV     DPL,A
8025FF E4                CLR     A
802600 342B              ADDC    A,#HIGH InputGoodsWayList
802602 F583              MOV     DPH,A
802604 E0                MOVX    A,@DPTR
802605 FF                MOV     R7,A
802606 900B22            MOV     DPTR,#CurrentStockCode
802609 E0                MOVX    A,@DPTR
80260A B50710            CJNE    A,AR7,?C0534?MAINFLOW
 2439: 			{
 2440: 				CurrentStockCode = len;//InputGoodsWayList[len].SetArrayNo;
80260D 9015AE            MOV     DPTR,#len
802610 E0                MOVX    A,@DPTR
802611 900B22            MOV     DPTR,#CurrentStockCode
802614 F0                MOVX    @DPTR,A
 2441: 				MyKey = 1;
802615 9015AD            MOV     DPTR,#MyKey
802618 7401              MOV     A,#01H
80261A F0                MOVX    @DPTR,A
 2442: 				break;
80261B 8008              SJMP    ?C0533?MAINFLOW
 2443: 			}
 2444: 		}
80261D         ?C0534?MAINFLOW:
80261D 9015AE            MOV     DPTR,#len
802620 E0                MOVX    A,@DPTR
802621 04                INC     A
802622 F0                MOVX    @DPTR,A
802623 80C7              SJMP    ?C0532?MAINFLOW
802625         ?C0533?MAINFLOW:
 2445: 		if( MyKey == 0 )
802625 9015AD            MOV     DPTR,#MyKey
802628 E0                MOVX    A,@DPTR
802629 7013              JNZ     ?C0536?MAINFLOW
 2446: 		{
 2447: 			// 客户输入错误 		
 2448: 			DisplayLine = STR_INVAILD_CHOICE;
80262B A512808027        ECALL   ?L?COM0002
 2449: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2450: 			DisplayLine = STR_RE_INPUT_GOODS;
802630 A512807AEF        ECALL   ?L?COM0008
 2451: 			DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2452: 			WaitForWork( 2000 , NULL );
 2453: 			CurrentStockCode = 0;
802635         
802635 E4                CLR     A
802636 900B22            MOV     DPTR,#CurrentStockCode
802639 F0                MOVX    @DPTR,A
 2454: 			return 1;
80263A 7F01              MOV     R7,#01H
80263C 8002              SJMP    ?C0503?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 37


 2455: 		}
80263E         ?C0536?MAINFLOW:
 2456: //		Trace( "\n CurrentStockCode = %bu", CurrentStockCode );		
 2457: 		return 0 ;
80263E 7F00              MOV     R7,#00H
 2458: 	}	
 2459: }
802640         ?C0503?MAINFLOW:
802640 A522              ERET    
----- FUNCTION DisplayInputCode (END) -------


----- FUNCTION IsGoodsWay (BEGIN) -----
 FILE: 'mainflow.c'
 2462: u_char IsGoodsWay()
 2463: {
 2464: 	Trace( "\n CurrentStockCode = %bu, GoodsCurrentSum = %bu", CurrentStockCode, GoodsWaySetVal[CurrentStockCode].Go
>> odsCurrentSum );		
 2465: //	Trace( "\n WayState = %bu", GoodsWaySetVal[CurrentStockCode].WayState );		
 2466: 	if( GoodsWaySetVal[CurrentStockCode].GoodsCurrentSum == 0 )
802642 900B22            MOV     DPTR,#CurrentStockCode
802645 E0                MOVX    A,@DPTR
802646 75F005            MOV     B,#05H
802649 900006            MOV     DPTR,#GoodsWaySetVal+04H
80264C A51280079F        ECALL   ?C?OFFXADD
802651 E0                MOVX    A,@DPTR
802652 701D              JNZ     ?C0537?MAINFLOW
 2467: 	{			
 2468: 		DisplayLine = STR_GOODS_SOLDOUT;
802654 900B21            MOV     DPTR,#DisplayLine
802657 740E              MOV     A,#0EH
802659 A51280802C        ECALL   ?L?COM0003
 2469: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2470: 		DisplayLine = STR_INPUT_WAY_NO;
80265E 900B21            MOV     DPTR,#DisplayLine
802661 7419              MOV     A,#019H
802663 A512807AF4        ECALL   ?L?COM0009
 2471: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
 2472: 		WaitForWork( 2000, NULL );
 2473: 		CurrentStockCode = 0;
802668 E4                CLR     A
802669 900B22            MOV     DPTR,#CurrentStockCode
80266C F0                MOVX    @DPTR,A
 2474: 		return 2;
80266D 7F02              MOV     R7,#02H
80266F 8038              SJMP    ?C0538?MAINFLOW
 2475: 	}
802671         ?C0537?MAINFLOW:
 2476: 	//货没有开启或货道故障或单价为0		
 2477: 	if( ( ( GoodsWaySetVal[CurrentStockCode].WayState & 0x01 ) == 0x00 ) || ( ( GoodsWaySetVal[CurrentStockCode].Way
>> State & 0x0A ) != 0x00 ) || ( GoodsWaySetVal[CurrentStockCode].Price == 0 ) )
802671 900B22            MOV     DPTR,#CurrentStockCode
802674 E0                MOVX    A,@DPTR
802675 75F005            MOV     B,#05H
802678 900003            MOV     DPTR,#GoodsWaySetVal+01H
80267B A51280079F        ECALL   ?C?OFFXADD
802680 E0                MOVX    A,@DPTR
802681 30E01A            JNB     ACC.0,?C0540?MAINFLOW
802684 540A              ANL     A,#0AH
802686 7016              JNZ     ?C0540?MAINFLOW
802688 900B22            MOV     DPTR,#CurrentStockCode
80268B E0                MOVX    A,@DPTR
80268C 75F005            MOV     B,#05H
80268F 900004            MOV     DPTR,#GoodsWaySetVal+02H
802692 A51280079F        ECALL   ?C?OFFXADD
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 38


802697 E0                MOVX    A,@DPTR
802698 FE                MOV     R6,A
802699 A3                INC     DPTR
80269A E0                MOVX    A,@DPTR
80269B 4E                ORL     A,R6
80269C 7009              JNZ     ?C0539?MAINFLOW
80269E         ?C0540?MAINFLOW:
 2478: 	{
 2479: 		CurrentStockCode = 0;
80269E E4                CLR     A
80269F 900B22            MOV     DPTR,#CurrentStockCode
8026A2 F0                MOVX    @DPTR,A
 2480: 		return 1;		
8026A3 7F01              MOV     R7,#01H
8026A5 8002              SJMP    ?C0538?MAINFLOW
 2481: 	}
8026A7         ?C0539?MAINFLOW:
 2482: 	return 0;
8026A7 7F00              MOV     R7,#00H
 2483: }
8026A9         ?C0538?MAINFLOW:
8026A9 A522              ERET    
----- FUNCTION IsGoodsWay (END) -------


----- FUNCTION GoodsWayErr (BEGIN) -----
 FILE: 'mainflow.c'
 2498: u_char GoodsWayErr()
 2499: {
 2500: 	u_char xdata MyKey ;
 2501: 	
 2502: //	Trace( "\n GoodsWayErr" );
 2503: 	DisplayLine = STR_GOODS_WAY_ERR1;
8026AB 900B21            MOV     DPTR,#DisplayLine
8026AE 741C              MOV     A,#01CH
8026B0 A51280802C        ECALL   ?L?COM0003
 2504: 	DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2505: //	ClearDisplayLine1( );
 2506: 	ClearDisplayLine( 2 );
8026B5 7F02              MOV     R7,#02H
8026B7 A5128087BB        ECALL   _ClearDisplayLine
 2507: 	WaitForWork( 1500, NULL );	
8026BC E4                CLR     A
8026BD 7FDC              MOV     R7,#0DCH
8026BF 7E05              MOV     R6,#05H
8026C1 A512807B35        ECALL   ?L?COM000D
 2508: 	if( IsCanChange() == 1 )
8026C6 A512809F27        ECALL   IsCanChange
8026CB EF                MOV     A,R7
8026CC 6401              XRL     A,#01H
8026CE 6003              JZ      $ + 5H
8026D0 022836            LJMP    ?C0543?MAINFLOW
 2509: 	{
 2510: 		DisplayLine = STR_GOODS_WAY_ERR2;	
8026D3 900B21            MOV     DPTR,#DisplayLine
8026D6 741D              MOV     A,#01DH
8026D8 A51280802C        ECALL   ?L?COM0003
 2511: 		DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2512: 		DisplayLine = STR_OK_NOT;
8026DD 900B21            MOV     DPTR,#DisplayLine
8026E0 7405              MOV     A,#05H
8026E2 A512807AF4        ECALL   ?L?COM0009
 2513: 		DisplayStr( 0, __LINE1__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2514: 		WaitForWork( 2000, NULL );
 2515: 		ClearKey();
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 39


8026E7 A5128087A8        ECALL   ClearKey
8026EC         ?C0544?MAINFLOW:
 2516: 		while( 1 )
 2517: 		{		
 2518: 			CoreProcessCycle();
8026EC A512807ADC        ECALL   CoreProcessCycle
 2519: 			MyKey = GetKey();
8026F1 A512809275        ECALL   GetKey
8026F6 901595            MOV     DPTR,#MyKey
8026F9 EF                MOV     A,R7
8026FA F0                MOVX    @DPTR,A
 2520: 			if ( MyKey == KEY_NULL ) 
8026FB F4                CPL     A
8026FC 60EE              JZ      ?C0544?MAINFLOW
 2521: 				continue;
8026FE         ?C0546?MAINFLOW:
 2522: 			switch ( MyKey ) 
8026FE 901595            MOV     DPTR,#MyKey
802701 E0                MOVX    A,@DPTR
802702 24E5              ADD     A,#0E5H
802704 6004              JZ      ?C0547?MAINFLOW
802706 240E              ADD     A,#0EH
802708 70E2              JNZ     ?C0544?MAINFLOW
 2523: 			{				
 2524: 				case	KEY_CANCEL:				
 2525: 				case 	KEY_SUBMIT:
 2526: 					break;
 2527: 				default:
 2528: 					continue;
 2529: 			}		
80270A         ?C0547?MAINFLOW:
 2530: 			if( ( MyKey == KEY_CANCEL ) || ( MyKey == KEY_SUBMIT ) )
80270A 901595            MOV     DPTR,#MyKey
80270D E0                MOVX    A,@DPTR
80270E FF                MOV     R7,A
80270F 641B              XRL     A,#01BH
802711 6004              JZ      ?C0545?MAINFLOW
802713 EF                MOV     A,R7
802714 B40DD5            CJNE    A,#0DH,?C0544?MAINFLOW
 2531: 				break;
 2532: 		}
802717         ?C0545?MAINFLOW:
 2533: 		if( MyKey == KEY_CANCEL )
802717 EF                MOV     A,R7
802718 641B              XRL     A,#01BH
80271A 6003              JZ      $ + 5H
80271C 02282C            LJMP    ?C0553?MAINFLOW
 2534: 		{		
 2535: 			//不选其它货,找零
 2536: 			DisplayLine = STR_OUTING_COIN;
80271F 900B21            MOV     DPTR,#DisplayLine
802722 7415              MOV     A,#015H
802724 A51280802C        ECALL   ?L?COM0003
 2537: 			DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len 
>> );	
 2538: 		//	ClearDisplayLine1( );
 2539: 		//	ClearDisplayLine( 2 );
 2540: 			memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );			
802729 7E00              MOV     R6,#00H
80272B 7F14              MOV     R7,#014H
80272D 7D00              MOV     R5,#00H
80272F 7B00              MOV     R3,#?C?XDATASEG
802731 7A04              MOV     R2,#HIGH DisplayBuffer
802733 796B              MOV     R1,#LOW DisplayBuffer
802735 A5128008A6        ECALL   ?C?MEMSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 40


 2541: 			switch( SystemParameter.curUnit )
80273A 900466            MOV     DPTR,#SystemParameter+048H
80273D E0                MOVX    A,@DPTR
80273E FE                MOV     R6,A
80273F A3                INC     DPTR
802740 E0                MOVX    A,@DPTR
802741 FF                MOV     R7,A
802742 EE                MOV     A,R6
802743 6003              JZ      $ + 5H
802745 0227EE            LJMP    ?C0554?MAINFLOW
802748 EF                MOV     A,R7
802749 24F6              ADD     A,#0F6H
80274B 6039              JZ      ?C0556?MAINFLOW
80274D 24A6              ADD     A,#0A6H
80274F 6035              JZ      ?C0556?MAINFLOW
802751 2463              ADD     A,#063H
802753 6003              JZ      $ + 5H
802755 0227EE            LJMP    ?C0554?MAINFLOW
 2542: 			{
 2543: 				case 1:
802758         ?C0555?MAINFLOW:
 2544: 					MyKey = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
802758 7B80              MOV     R3,#BYTE2 0800430H
80275A 7A04              MOV     R2,#HIGH 0800430H
80275C 7930              MOV     R1,#LOW 0800430H
80275E 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802761 A5128007B6        ECALL   ?C?PSTXDATA
802766 90051D            MOV     DPTR,#DispInformationTable+0ACH
802769 A5128007C0        ECALL   ?C?PLDCODE
80276E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802771 A5128007B6        ECALL   ?C?PSTXDATA
802776 900B1F            MOV     DPTR,#CurrentPayed
802779 E0                MOVX    A,@DPTR
80277A FF                MOV     R7,A
80277B A3                INC     DPTR
80277C E0                MOVX    A,@DPTR
80277D 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802780 CF                XCH     A,R7
802781 F0                MOVX    @DPTR,A
802782 A3                INC     DPTR
802783 EF                MOV     A,R7
 2545: 				break;				
802784 8057              SJMP    ?C1059?MAINFLOW
 2546: 				case 10:
802786         ?C0556?MAINFLOW:
 2547: 					MyKey = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
802786 7B80              MOV     R3,#BYTE2 0800435H
802788 7A04              MOV     R2,#HIGH 0800435H
80278A 7935              MOV     R1,#LOW 0800435H
80278C 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80278F A5128007B6        ECALL   ?C?PSTXDATA
802794 90051D            MOV     DPTR,#DispInformationTable+0ACH
802797 A5128007C0        ECALL   ?C?PLDCODE
80279C 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80279F A5128007B6        ECALL   ?C?PSTXDATA
8027A4 900466            MOV     DPTR,#SystemParameter+048H
8027A7 E0                MOVX    A,@DPTR
8027A8 FA                MOV     R2,A
8027A9 A3                INC     DPTR
8027AA E0                MOVX    A,@DPTR
8027AB FB                MOV     R3,A
8027AC 900B1F            MOV     DPTR,#CurrentPayed
8027AF E0                MOVX    A,@DPTR
8027B0 FE                MOV     R6,A
8027B1 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 41


8027B2 E0                MOVX    A,@DPTR
8027B3 FF                MOV     R7,A
8027B4 AD03              MOV     R5,AR3
8027B6 AC02              MOV     R4,AR2
8027B8 A51280056C        ECALL   ?C?UIDIV
8027BD 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
8027C0 EE                MOV     A,R6
8027C1 F0                MOVX    @DPTR,A
8027C2 A3                INC     DPTR
8027C3 EF                MOV     A,R7
8027C4 F0                MOVX    @DPTR,A
8027C5 900B1F            MOV     DPTR,#CurrentPayed
8027C8 E0                MOVX    A,@DPTR
8027C9 FE                MOV     R6,A
8027CA A3                INC     DPTR
8027CB E0                MOVX    A,@DPTR
8027CC FF                MOV     R7,A
8027CD AD03              MOV     R5,AR3
8027CF AC02              MOV     R4,AR2
8027D1 A51280056C        ECALL   ?C?UIDIV
8027D6 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
8027D9 EC                MOV     A,R4
8027DA F0                MOVX    @DPTR,A
8027DB A3                INC     DPTR
8027DC ED                MOV     A,R5
8027DD         
 2548: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2549: 				break;
 2550: 				case 100:
8027DD         
8027DD F0                MOVX    @DPTR,A
8027DE 7B00              MOV     R3,#?C?XDATASEG
8027E0 7A04              MOV     R2,#HIGH DisplayBuffer
8027E2 796B              MOV     R1,#LOW DisplayBuffer
8027E4 A512800949        ECALL   _sprintf
8027E9 901595            MOV     DPTR,#MyKey
8027EC EF                MOV     A,R7
8027ED F0                MOVX    @DPTR,A
 2551: 					MyKey = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
 2552: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2553: 				break;		
 2554: 			}		
8027EE         ?C0554?MAINFLOW:
 2555: 			DisplayStr( 0, __LINE1__, 1, DisplayBuffer, MyKey );
8027EE D21A              SETB    ?_DisplayStr?BIT
8027F0 7B00              MOV     R3,#?C?XDATASEG
8027F2 7A04              MOV     R2,#HIGH DisplayBuffer
8027F4 796B              MOV     R1,#LOW DisplayBuffer
8027F6 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8027F9 A5128007B6        ECALL   ?C?PSTXDATA
8027FE 901595            MOV     DPTR,#MyKey
802801 E0                MOVX    A,@DPTR
802802 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
802805 F0                MOVX    @DPTR,A
802806 7D01              MOV     R5,#01H
802808 E4                CLR     A
802809 FF                MOV     R7,A
80280A A512808062        ECALL   _DisplayStr
 2556: 			WaitForWork( 300, NULL );
80280F E4                CLR     A
802810 7F2C              MOV     R7,#02CH
802812 7E01              MOV     R6,#01H
802814 A512807B35        ECALL   ?L?COM000D
 2557: 			CurrentDispenseCoin = CurrentPayed;	
802819 900B1F            MOV     DPTR,#CurrentPayed
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 42


80281C E0                MOVX    A,@DPTR
80281D FF                MOV     R7,A
80281E A3                INC     DPTR
80281F E0                MOVX    A,@DPTR
802820 900469            MOV     DPTR,#CurrentDispenseCoin
802823 CF                XCH     A,R7
802824 F0                MOVX    @DPTR,A
802825 A3                INC     DPTR
802826 EF                MOV     A,R7
802827 F0                MOVX    @DPTR,A
 2558: 			return 1;
802828 7F01              MOV     R7,#01H
80282A 8054              SJMP    ?C0558?MAINFLOW
 2559: 		}
80282C         ?C0553?MAINFLOW:
 2560: 	 	if( MyKey == KEY_SUBMIT )
80282C 901595            MOV     DPTR,#MyKey
80282F E0                MOVX    A,@DPTR
802830 640D              XRL     A,#0DH
802832 704C              JNZ     ?C0558?MAINFLOW
 2561: 		{
 2562: 			ClearKey();	
 2563: 			CurrentStockCode = 0;
 2564: 			return 0;	
802834 803F              SJMP    ?C1060?MAINFLOW
 2565: 		}
 2566: 	}
802836         ?C0543?MAINFLOW:
 2567: 	else
 2568: 	{
 2569: 		//当不能找零时直接提示选其它商品
 2570: 		DisplayLine = STR_GOODS_WAY_ERR2;
802836 900B21            MOV     DPTR,#DisplayLine
802839 741D              MOV     A,#01DH
80283B F0                MOVX    @DPTR,A
 2571: 		#ifdef _CHINA_
 2572: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len - 3 
>> );
 2573: 		#else
 2574: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len - 1 
>> );
80283C D21A              SETB    ?_DisplayStr?BIT
80283E E0                MOVX    A,@DPTR
80283F FF                MOV     R7,A
802840 25E0              ADD     A,ACC
802842 25E0              ADD     A,ACC
802844 2471              ADD     A,#LOW DispInformationTable
802846 F582              MOV     DPL,A
802848 E4                CLR     A
802849 3404              ADDC    A,#HIGH DispInformationTable
80284B F583              MOV     DPH,A
80284D A5128007C0        ECALL   ?C?PLDCODE
802852 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
802855 A5128007B6        ECALL   ?C?PSTXDATA
80285A EF                MOV     A,R7
80285B 25E0              ADD     A,ACC
80285D 25E0              ADD     A,ACC
80285F 2474              ADD     A,#LOW DispInformationTable+03H
802861 F582              MOV     DPL,A
802863 E4                CLR     A
802864 3404              ADDC    A,#HIGH DispInformationTable+03H
802866 F583              MOV     DPH,A
802868 E4                CLR     A
802869 93                MOVC    A,@A+DPTR
80286A 14                DEC     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 43


80286B A51280805B        ECALL   ?L?COM0006
 2575: 		#endif
 2576: 		WaitForWork( 2000, NULL );
802870 A512807B30        ECALL   ?L?COM000C
 2577: 		ClearKey();	
802875         
802875 A5128087A8        ECALL   ClearKey
 2578: 		CurrentStockCode = 0;
80287A E4                CLR     A
80287B 900B22            MOV     DPTR,#CurrentStockCode
80287E F0                MOVX    @DPTR,A
 2579: 		return 0;
80287F FF                MOV     R7,A
 2580: 	}
 2581: }
802880         ?C0558?MAINFLOW:
802880 A522              ERET    
----- FUNCTION GoodsWayErr (END) -------


----- FUNCTION OutGoods (BEGIN) -----
 FILE: 'mainflow.c'
 2593: u_char OutGoods()
 2594: {
 2595: 	u_char   xdata flag = 0 ;
 2596: 	u_char 	 xdata length = 0;
802882 E4                CLR     A
802883 901595            MOV     DPTR,#flag
802886 F0                MOVX    @DPTR,A
 2597: 	
802887 A3                INC     DPTR
802888 F0                MOVX    @DPTR,A
 2598: //	Trace( "\n OutGoods" );
 2599: 	DisplayLine = STR_TRANCE_ING;
802889 900B21            MOV     DPTR,#DisplayLine
80288C 7414              MOV     A,#014H
80288E A51280802C        ECALL   ?L?COM0003
 2600: 	DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
 2601: 	
 2602: 	memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );	
802893 7E00              MOV     R6,#00H
802895 7F14              MOV     R7,#014H
802897 7D00              MOV     R5,#00H
802899 7B00              MOV     R3,#?C?XDATASEG
80289B 7A04              MOV     R2,#HIGH DisplayBuffer
80289D 796B              MOV     R1,#LOW DisplayBuffer
80289F A5128008A6        ECALL   ?C?MEMSET
 2603: 	switch( SystemParameter.curUnit )
8028A4 900466            MOV     DPTR,#SystemParameter+048H
8028A7 E0                MOVX    A,@DPTR
8028A8 FE                MOV     R6,A
8028A9 A3                INC     DPTR
8028AA E0                MOVX    A,@DPTR
8028AB FF                MOV     R7,A
8028AC EE                MOV     A,R6
8028AD 6003              JZ      $ + 5H
8028AF 0229B5            LJMP    ?C0564?MAINFLOW
8028B2 EF                MOV     A,R7
8028B3 24F6              ADD     A,#0F6H
8028B5 603D              JZ      ?C0566?MAINFLOW
8028B7 24A6              ADD     A,#0A6H
8028B9 7003              JNZ     $ + 5H
8028BB 02294D            LJMP    ?C0567?MAINFLOW
8028BE 2463              ADD     A,#063H
8028C0 6003              JZ      $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 44


8028C2 0229B5            LJMP    ?C0564?MAINFLOW
 2604: 	{
 2605: 		case 1:	
8028C5         ?C0565?MAINFLOW:
 2606: 			length = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_BALANCE].str,CurrentPayed );	
8028C5 7B80              MOV     R3,#BYTE2 0800430H
8028C7 7A04              MOV     R2,#HIGH 0800430H
8028C9 7930              MOV     R1,#LOW 0800430H
8028CB 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8028CE A5128007B6        ECALL   ?C?PSTXDATA
8028D3 900521            MOV     DPTR,#DispInformationTable+0B0H
8028D6 A5128007C0        ECALL   ?C?PLDCODE
8028DB 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8028DE A5128007B6        ECALL   ?C?PSTXDATA
8028E3 900B1F            MOV     DPTR,#CurrentPayed
8028E6 E0                MOVX    A,@DPTR
8028E7 FF                MOV     R7,A
8028E8 A3                INC     DPTR
8028E9 E0                MOVX    A,@DPTR
8028EA 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
8028ED CF                XCH     A,R7
8028EE F0                MOVX    @DPTR,A
8028EF A3                INC     DPTR
8028F0 EF                MOV     A,R7
 2607: 		break;				
8028F1 0229A4            LJMP    ?C1062?MAINFLOW
 2608: 		case 10:
8028F4         ?C0566?MAINFLOW:
 2609: 			length = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_BALANCE].str,
8028F4 7B80              MOV     R3,#BYTE2 080043FH
8028F6 7A04              MOV     R2,#HIGH 080043FH
8028F8 793F              MOV     R1,#LOW 080043FH
8028FA 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8028FD A5128007B6        ECALL   ?C?PSTXDATA
802902 900521            MOV     DPTR,#DispInformationTable+0B0H
802905 A5128007C0        ECALL   ?C?PLDCODE
80290A 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80290D A5128007B6        ECALL   ?C?PSTXDATA
802912 900466            MOV     DPTR,#SystemParameter+048H
802915 E0                MOVX    A,@DPTR
802916 FA                MOV     R2,A
802917 A3                INC     DPTR
802918 E0                MOVX    A,@DPTR
802919 FB                MOV     R3,A
80291A 900B1F            MOV     DPTR,#CurrentPayed
80291D E0                MOVX    A,@DPTR
80291E FE                MOV     R6,A
80291F A3                INC     DPTR
802920 E0                MOVX    A,@DPTR
802921 FF                MOV     R7,A
802922 AD03              MOV     R5,AR3
802924 AC02              MOV     R4,AR2
802926 A51280056C        ECALL   ?C?UIDIV
80292B 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80292E EE                MOV     A,R6
80292F F0                MOVX    @DPTR,A
802930 A3                INC     DPTR
802931 EF                MOV     A,R7
802932 F0                MOVX    @DPTR,A
802933 900B1F            MOV     DPTR,#CurrentPayed
802936 E0                MOVX    A,@DPTR
802937 FE                MOV     R6,A
802938 A3                INC     DPTR
802939 E0                MOVX    A,@DPTR
80293A FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 45


80293B AD03              MOV     R5,AR3
80293D AC02              MOV     R4,AR2
80293F A51280056C        ECALL   ?C?UIDIV
802944 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
802947 EC                MOV     A,R4
802948 F0                MOVX    @DPTR,A
802949 A3                INC     DPTR
80294A ED                MOV     A,R5
80294B         
 2610: 				CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2611: 		break;
80294B 8057              SJMP    ?C1062?MAINFLOW
 2612: 		case 100:
80294D         ?C0567?MAINFLOW:
 2613: 			length = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_BALANCE].str,
80294D 7B80              MOV     R3,#BYTE2 0800435H
80294F 7A04              MOV     R2,#HIGH 0800435H
802951 7935              MOV     R1,#LOW 0800435H
802953 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802956 A5128007B6        ECALL   ?C?PSTXDATA
80295B 900521            MOV     DPTR,#DispInformationTable+0B0H
80295E A5128007C0        ECALL   ?C?PLDCODE
802963 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802966 A5128007B6        ECALL   ?C?PSTXDATA
80296B 900466            MOV     DPTR,#SystemParameter+048H
80296E E0                MOVX    A,@DPTR
80296F FA                MOV     R2,A
802970 A3                INC     DPTR
802971 E0                MOVX    A,@DPTR
802972 FB                MOV     R3,A
802973 900B1F            MOV     DPTR,#CurrentPayed
802976 E0                MOVX    A,@DPTR
802977 FE                MOV     R6,A
802978 A3                INC     DPTR
802979 E0                MOVX    A,@DPTR
80297A FF                MOV     R7,A
80297B AD03              MOV     R5,AR3
80297D AC02              MOV     R4,AR2
80297F A51280056C        ECALL   ?C?UIDIV
802984 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802987 EE                MOV     A,R6
802988 F0                MOVX    @DPTR,A
802989 A3                INC     DPTR
80298A EF                MOV     A,R7
80298B F0                MOVX    @DPTR,A
80298C 900B1F            MOV     DPTR,#CurrentPayed
80298F E0                MOVX    A,@DPTR
802990 FE                MOV     R6,A
802991 A3                INC     DPTR
802992 E0                MOVX    A,@DPTR
802993 FF                MOV     R7,A
802994 AD03              MOV     R5,AR3
802996 AC02              MOV     R4,AR2
802998 A51280056C        ECALL   ?C?UIDIV
80299D 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
8029A0 EC                MOV     A,R4
8029A1 F0                MOVX    @DPTR,A
8029A2 A3                INC     DPTR
8029A3 ED                MOV     A,R5
8029A4         
8029A4 F0                MOVX    @DPTR,A
8029A5 7B00              MOV     R3,#?C?XDATASEG
8029A7 7A04              MOV     R2,#HIGH DisplayBuffer
8029A9 796B              MOV     R1,#LOW DisplayBuffer
8029AB A512800949        ECALL   _sprintf
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 46


8029B0 901596            MOV     DPTR,#length
8029B3 EF                MOV     A,R7
8029B4 F0                MOVX    @DPTR,A
 2614: 				CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2615: 		break;		
 2616: 	}	
8029B5         ?C0564?MAINFLOW:
 2617: 	DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
8029B5 D21A              SETB    ?_DisplayStr?BIT
8029B7 7B00              MOV     R3,#?C?XDATASEG
8029B9 7A04              MOV     R2,#HIGH DisplayBuffer
8029BB 796B              MOV     R1,#LOW DisplayBuffer
8029BD 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8029C0 A5128007B6        ECALL   ?C?PSTXDATA
8029C5 901596            MOV     DPTR,#length
8029C8 E0                MOVX    A,@DPTR
8029C9 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8029CC F0                MOVX    @DPTR,A
8029CD 7D01              MOV     R5,#01H
8029CF E4                CLR     A
8029D0 FF                MOV     R7,A
8029D1 A512808062        ECALL   _DisplayStr
 2618: 	WaitForWork( 500 , NULL );	
8029D6 E4                CLR     A
8029D7 7FF4              MOV     R7,#0F4H
8029D9 7E01              MOV     R6,#01H
8029DB A512807B35        ECALL   ?L?COM000D
 2619: 	Trace("\n InputGoodsWayList[CurrentStockCode].SetArrayNo = %bu", InputGoodsWayList[CurrentStockCode].SetArrayNo 
>> );
 2620: 	flag = ChannelTask( InputGoodsWayList[CurrentStockCode].SetArrayNo, CHANNEL_EXEC );
8029E0 A51280BA47        ECALL   ?L?COM0024
8029E5 901595            MOV     DPTR,#flag
8029E8 EF                MOV     A,R7
8029E9 F0                MOVX    @DPTR,A
 2621: 	if( flag == 7 )
8029EA BF070C            CJNE    R7,#07H,?C0568?MAINFLOW
 2622: 	{
 2623: 		//接收到的命令包有错误，但货没有出
 2624: 		flag = 0;
8029ED E4                CLR     A
8029EE F0                MOVX    @DPTR,A
 2625: 		flag = ChannelTask( InputGoodsWayList[CurrentStockCode].SetArrayNo, CHANNEL_EXEC );
8029EF A51280BA47        ECALL   ?L?COM0024
8029F4 901595            MOV     DPTR,#flag
8029F7 EF                MOV     A,R7
8029F8 F0                MOVX    @DPTR,A
 2626: 	}
8029F9         ?C0568?MAINFLOW:
 2627: 	Trace( "\n OutGoods flag = %bu", flag );
 2628: 	switch( flag )
8029F9 901595            MOV     DPTR,#flag
8029FC E0                MOVX    A,@DPTR
8029FD A5128007CD        ECALL   ?C?CCASEX
802A02 2A1B              DW      ?C0571?MAINFLOW
802A04 00                DB      00H
802A05 2C62              DW      ?C0583?MAINFLOW
802A07 01                DB      01H
802A08 2C62              DW      ?C0583?MAINFLOW
802A0A 02                DB      02H
802A0B 2E0F              DW      ?C0592?MAINFLOW
802A0D 03                DB      03H
802A0E 2E0F              DW      ?C0592?MAINFLOW
802A10 04                DB      04H
802A11 2A1B              DW      ?C0571?MAINFLOW
802A13 05                DB      05H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 47


802A14 2E0F              DW      ?C0592?MAINFLOW
802A16 07                DB      07H
802A17 0000              DW      00H
802A19 2EA6              DW      ?C0569?MAINFLOW
 2629: 	{
 2630: 		case 0://出货成功	
 2631: 		case 5://在限定的时间内电机不能到位（但货已出成功，货道有硬件故障）
802A1B         ?C0571?MAINFLOW:
 2632: 		{		
 2633: 			Trace( "\n OutGoods 11" );
 2634: 			CurrentPayed = CurrentPayed - GoodsWaySetVal[CurrentStockCode].Price;
802A1B 900B22            MOV     DPTR,#CurrentStockCode
802A1E E0                MOVX    A,@DPTR
802A1F 75F005            MOV     B,#05H
802A22 900004            MOV     DPTR,#GoodsWaySetVal+02H
802A25 A51280079F        ECALL   ?C?OFFXADD
802A2A E0                MOVX    A,@DPTR
802A2B FE                MOV     R6,A
802A2C A3                INC     DPTR
802A2D E0                MOVX    A,@DPTR
802A2E FF                MOV     R7,A
802A2F C3                CLR     C
802A30 900B20            MOV     DPTR,#CurrentPayed+01H
802A33 E0                MOVX    A,@DPTR
802A34 9F                SUBB    A,R7
802A35 F0                MOVX    @DPTR,A
802A36 900B1F            MOV     DPTR,#CurrentPayed
802A39 E0                MOVX    A,@DPTR
802A3A 9E                SUBB    A,R6
802A3B F0                MOVX    @DPTR,A
 2635: 			DisplayLine = STR_TAKE_GOODS;
802A3C 900B21            MOV     DPTR,#DisplayLine
802A3F 741A              MOV     A,#01AH
802A41 A51280802C        ECALL   ?L?COM0003
 2636: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );
 2637: 			if( ( IsCanChange() == 0 ) && ( ( SystemParameter.IsMuliVerd != 1 ) || \
802A46 A512809F27        ECALL   IsCanChange
802A4B EF                MOV     A,R7
802A4C 7027              JNZ     ?C0572?MAINFLOW
802A4E 900426            MOV     DPTR,#SystemParameter+08H
802A51 E0                MOVX    A,@DPTR
802A52 B40116            CJNE    A,#01H,?C0573?MAINFLOW
802A55 B4011D            CJNE    A,#01H,?C0572?MAINFLOW
802A58 A3                INC     DPTR
802A59 E0                MOVX    A,@DPTR
802A5A FE                MOV     R6,A
802A5B A3                INC     DPTR
802A5C E0                MOVX    A,@DPTR
802A5D FF                MOV     R7,A
802A5E C3                CLR     C
802A5F 900B20            MOV     DPTR,#CurrentPayed+01H
802A62 E0                MOVX    A,@DPTR
802A63 9F                SUBB    A,R7
802A64 900B1F            MOV     DPTR,#CurrentPayed
802A67 E0                MOVX    A,@DPTR
802A68 9E                SUBB    A,R6
802A69 500A              JNC     ?C0572?MAINFLOW
802A6B         ?C0573?MAINFLOW:
 2638: 			( ( SystemParameter.IsMuliVerd == 1 ) && ( CurrentPayed < SystemParameter.Min ) ) ) )
 2639:  		    	ClearDisplayLine( 2 );
802A6B 7F02              MOV     R7,#02H
802A6D A5128087BB        ECALL   _ClearDisplayLine
802A72 022BC2            LJMP    ?C0574?MAINFLOW
802A75         ?C0572?MAINFLOW:
 2640: 			else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 48


 2641: 			{
 2642: 				memset( DisplayBuffer, 0, sizeof(DisplayBuffer ));
802A75 7E00              MOV     R6,#00H
802A77 7F14              MOV     R7,#014H
802A79 7D00              MOV     R5,#00H
802A7B 7B00              MOV     R3,#?C?XDATASEG
802A7D 7A04              MOV     R2,#HIGH DisplayBuffer
802A7F 796B              MOV     R1,#LOW DisplayBuffer
802A81 A5128008A6        ECALL   ?C?MEMSET
 2643: 				switch( SystemParameter.curUnit )
802A86 900466            MOV     DPTR,#SystemParameter+048H
802A89 E0                MOVX    A,@DPTR
802A8A FE                MOV     R6,A
802A8B A3                INC     DPTR
802A8C E0                MOVX    A,@DPTR
802A8D FF                MOV     R7,A
802A8E EE                MOV     A,R6
802A8F 6003              JZ      $ + 5H
802A91 022B97            LJMP    ?C0575?MAINFLOW
802A94 EF                MOV     A,R7
802A95 24F6              ADD     A,#0F6H
802A97 603D              JZ      ?C0577?MAINFLOW
802A99 24A6              ADD     A,#0A6H
802A9B 7003              JNZ     $ + 5H
802A9D 022B2F            LJMP    ?C0578?MAINFLOW
802AA0 2463              ADD     A,#063H
802AA2 6003              JZ      $ + 5H
802AA4 022B97            LJMP    ?C0575?MAINFLOW
 2644: 				{
 2645: 					case 1:	
802AA7         ?C0576?MAINFLOW:
 2646: 						length = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_BALANCE].str,CurrentPayed );	
802AA7 7B80              MOV     R3,#BYTE2 0800430H
802AA9 7A04              MOV     R2,#HIGH 0800430H
802AAB 7930              MOV     R1,#LOW 0800430H
802AAD 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802AB0 A5128007B6        ECALL   ?C?PSTXDATA
802AB5 900521            MOV     DPTR,#DispInformationTable+0B0H
802AB8 A5128007C0        ECALL   ?C?PLDCODE
802ABD 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802AC0 A5128007B6        ECALL   ?C?PSTXDATA
802AC5 900B1F            MOV     DPTR,#CurrentPayed
802AC8 E0                MOVX    A,@DPTR
802AC9 FF                MOV     R7,A
802ACA A3                INC     DPTR
802ACB E0                MOVX    A,@DPTR
802ACC 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802ACF CF                XCH     A,R7
802AD0 F0                MOVX    @DPTR,A
802AD1 A3                INC     DPTR
802AD2 EF                MOV     A,R7
 2647: 					break;				
802AD3 022B86            LJMP    ?C1064?MAINFLOW
 2648: 					case 10:
802AD6         ?C0577?MAINFLOW:
 2649: 						length = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_BALANCE].str,
802AD6 7B80              MOV     R3,#BYTE2 080043FH
802AD8 7A04              MOV     R2,#HIGH 080043FH
802ADA 793F              MOV     R1,#LOW 080043FH
802ADC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802ADF A5128007B6        ECALL   ?C?PSTXDATA
802AE4 900521            MOV     DPTR,#DispInformationTable+0B0H
802AE7 A5128007C0        ECALL   ?C?PLDCODE
802AEC 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802AEF A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 49


802AF4 900466            MOV     DPTR,#SystemParameter+048H
802AF7 E0                MOVX    A,@DPTR
802AF8 FA                MOV     R2,A
802AF9 A3                INC     DPTR
802AFA E0                MOVX    A,@DPTR
802AFB FB                MOV     R3,A
802AFC 900B1F            MOV     DPTR,#CurrentPayed
802AFF E0                MOVX    A,@DPTR
802B00 FE                MOV     R6,A
802B01 A3                INC     DPTR
802B02 E0                MOVX    A,@DPTR
802B03 FF                MOV     R7,A
802B04 AD03              MOV     R5,AR3
802B06 AC02              MOV     R4,AR2
802B08 A51280056C        ECALL   ?C?UIDIV
802B0D 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802B10 EE                MOV     A,R6
802B11 F0                MOVX    @DPTR,A
802B12 A3                INC     DPTR
802B13 EF                MOV     A,R7
802B14 F0                MOVX    @DPTR,A
802B15 900B1F            MOV     DPTR,#CurrentPayed
802B18 E0                MOVX    A,@DPTR
802B19 FE                MOV     R6,A
802B1A A3                INC     DPTR
802B1B E0                MOVX    A,@DPTR
802B1C FF                MOV     R7,A
802B1D AD03              MOV     R5,AR3
802B1F AC02              MOV     R4,AR2
802B21 A51280056C        ECALL   ?C?UIDIV
802B26 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
802B29 EC                MOV     A,R4
802B2A F0                MOVX    @DPTR,A
802B2B A3                INC     DPTR
802B2C ED                MOV     A,R5
802B2D         
 2650: 							CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2651: 					break;
802B2D 8057              SJMP    ?C1064?MAINFLOW
 2652: 					case 100:
802B2F         ?C0578?MAINFLOW:
 2653: 						length = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_BALANCE].str,
802B2F 7B80              MOV     R3,#BYTE2 0800435H
802B31 7A04              MOV     R2,#HIGH 0800435H
802B33 7935              MOV     R1,#LOW 0800435H
802B35 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802B38 A5128007B6        ECALL   ?C?PSTXDATA
802B3D 900521            MOV     DPTR,#DispInformationTable+0B0H
802B40 A5128007C0        ECALL   ?C?PLDCODE
802B45 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802B48 A5128007B6        ECALL   ?C?PSTXDATA
802B4D 900466            MOV     DPTR,#SystemParameter+048H
802B50 E0                MOVX    A,@DPTR
802B51 FA                MOV     R2,A
802B52 A3                INC     DPTR
802B53 E0                MOVX    A,@DPTR
802B54 FB                MOV     R3,A
802B55 900B1F            MOV     DPTR,#CurrentPayed
802B58 E0                MOVX    A,@DPTR
802B59 FE                MOV     R6,A
802B5A A3                INC     DPTR
802B5B E0                MOVX    A,@DPTR
802B5C FF                MOV     R7,A
802B5D AD03              MOV     R5,AR3
802B5F AC02              MOV     R4,AR2
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 50


802B61 A51280056C        ECALL   ?C?UIDIV
802B66 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802B69 EE                MOV     A,R6
802B6A F0                MOVX    @DPTR,A
802B6B A3                INC     DPTR
802B6C EF                MOV     A,R7
802B6D F0                MOVX    @DPTR,A
802B6E 900B1F            MOV     DPTR,#CurrentPayed
802B71 E0                MOVX    A,@DPTR
802B72 FE                MOV     R6,A
802B73 A3                INC     DPTR
802B74 E0                MOVX    A,@DPTR
802B75 FF                MOV     R7,A
802B76 AD03              MOV     R5,AR3
802B78 AC02              MOV     R4,AR2
802B7A A51280056C        ECALL   ?C?UIDIV
802B7F 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
802B82 EC                MOV     A,R4
802B83 F0                MOVX    @DPTR,A
802B84 A3                INC     DPTR
802B85 ED                MOV     A,R5
802B86         
802B86 F0                MOVX    @DPTR,A
802B87 7B00              MOV     R3,#?C?XDATASEG
802B89 7A04              MOV     R2,#HIGH DisplayBuffer
802B8B 796B              MOV     R1,#LOW DisplayBuffer
802B8D A512800949        ECALL   _sprintf
802B92 901596            MOV     DPTR,#length
802B95 EF                MOV     A,R7
802B96 F0                MOVX    @DPTR,A
 2654: 							CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2655: 					break;		
 2656: 				}
802B97         ?C0575?MAINFLOW:
 2657: 				DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
802B97 D21A              SETB    ?_DisplayStr?BIT
802B99 7B00              MOV     R3,#?C?XDATASEG
802B9B 7A04              MOV     R2,#HIGH DisplayBuffer
802B9D 796B              MOV     R1,#LOW DisplayBuffer
802B9F 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
802BA2 A5128007B6        ECALL   ?C?PSTXDATA
802BA7 901596            MOV     DPTR,#length
802BAA E0                MOVX    A,@DPTR
802BAB 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
802BAE F0                MOVX    @DPTR,A
802BAF 7D01              MOV     R5,#01H
802BB1 E4                CLR     A
802BB2 FF                MOV     R7,A
802BB3 A512808062        ECALL   _DisplayStr
 2658: 				WaitForWork( 1500 , NULL );		
802BB8 E4                CLR     A
802BB9 7FDC              MOV     R7,#0DCH
802BBB 7E05              MOV     R6,#05H
802BBD A512807B35        ECALL   ?L?COM000D
 2659: 			}
802BC2         ?C0574?MAINFLOW:
 2660: 			GoodsWaySetVal[ CurrentStockCode].GoodsCurrentSum --;
802BC2 900B22            MOV     DPTR,#CurrentStockCode
802BC5 E0                MOVX    A,@DPTR
802BC6 FF                MOV     R7,A
802BC7 75F005            MOV     B,#05H
802BCA 900006            MOV     DPTR,#GoodsWaySetVal+04H
802BCD A51280079F        ECALL   ?C?OFFXADD
802BD2 E0                MOVX    A,@DPTR
802BD3 14                DEC     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 51


802BD4 F0                MOVX    @DPTR,A
 2661: 			if( GoodsWaySetVal[ CurrentStockCode].GoodsCurrentSum == 0 )
802BD5 75F005            MOV     B,#05H
802BD8 EF                MOV     A,R7
802BD9 900006            MOV     DPTR,#GoodsWaySetVal+04H
802BDC A51280079F        ECALL   ?C?OFFXADD
802BE1 E0                MOVX    A,@DPTR
802BE2 7013              JNZ     ?C0579?MAINFLOW
 2662: 				GoodsWaySetVal[CurrentStockCode].WayState |= 0x04;
802BE4 900B22            MOV     DPTR,#CurrentStockCode
802BE7 E0                MOVX    A,@DPTR
802BE8 75F005            MOV     B,#05H
802BEB 900003            MOV     DPTR,#GoodsWaySetVal+01H
802BEE A51280079F        ECALL   ?C?OFFXADD
802BF3 E0                MOVX    A,@DPTR
802BF4 4404              ORL     A,#04H
802BF6 F0                MOVX    @DPTR,A
802BF7         ?C0579?MAINFLOW:
 2663: 			if( flag == 5 )
802BF7 901595            MOV     DPTR,#flag
802BFA E0                MOVX    A,@DPTR
802BFB B40513            CJNE    A,#05H,?C0580?MAINFLOW
 2664: 				GoodsWaySetVal[CurrentStockCode].WayState |= 0x02;
802BFE 900B22            MOV     DPTR,#CurrentStockCode
802C01 E0                MOVX    A,@DPTR
802C02 75F005            MOV     B,#05H
802C05 900003            MOV     DPTR,#GoodsWaySetVal+01H
802C08 A51280079F        ECALL   ?C?OFFXADD
802C0D E0                MOVX    A,@DPTR
802C0E 4402              ORL     A,#02H
802C10 F0                MOVX    @DPTR,A
802C11         ?C0580?MAINFLOW:
 2665: 			SaveGoodsSet();	
802C11 A51280C35F        ECALL   SaveGoodsSet
 2666: 			TradeCounter.TradeCurrencySum += GoodsWaySetVal[ CurrentStockCode].Price;//正常交易的总金额
802C16 900AF8            MOV     DPTR,#TradeCounter+0CH
802C19 A51280073E        ECALL   ?C?LLDXDATA0
802C1E 900B22            MOV     DPTR,#CurrentStockCode
802C21 E0                MOVX    A,@DPTR
802C22 75F005            MOV     B,#05H
802C25 900004            MOV     DPTR,#GoodsWaySetVal+02H
802C28 A51280079F        ECALL   ?C?OFFXADD
802C2D E0                MOVX    A,@DPTR
802C2E FE                MOV     R6,A
802C2F A3                INC     DPTR
802C30 E0                MOVX    A,@DPTR
802C31 FF                MOV     R7,A
802C32 E4                CLR     A
802C33 FC                MOV     R4,A
802C34 FD                MOV     R5,A
802C35 A51280062E        ECALL   ?C?LADD
802C3A 900AF8            MOV     DPTR,#TradeCounter+0CH
802C3D A512800792        ECALL   ?C?LSTXDATA
 2667: 			TradeCounter.GoodTraceSum ++ ;//正常交易次数
802C42 900AFC            MOV     DPTR,#TradeCounter+010H
802C45 E4                CLR     A
802C46 75F001            MOV     B,#01H
802C49 A512800600        ECALL   ?C?IILDX
 2668: 			TradeLog[ CurrentStockCode].TraceSum += 1;//此货道正常交易次数
802C4E 900B22            MOV     DPTR,#CurrentStockCode
802C51 E0                MOVX    A,@DPTR
802C52 75F009            MOV     B,#09H
802C55 9001C6            MOV     DPTR,#TradeLog+01H
802C58 A51280C325        ECALL   ?L?COM002C
 2669: 			SaveTradeCounter();
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 52


 2670: 			return 0;
802C5D 7F00              MOV     R7,#00H
802C5F 022EA8            LJMP    ?C0581?MAINFLOW
 2671: 		}
 2672: 		break;
 2673: 		//命令失败和超时都是有疑问的交易
 2674: 		case 2://超时,货道板和主机通讯有问题,可认为整个出货统有问题		
 2675: 		case 1://命令失败，但失败原因不明，只能当疑问处理了
802C62         ?C0583?MAINFLOW:
 2676: 		{
 2677: 			Trace( "\n OutGoods 12" );
 2678: 			// 出货超时
 2679: 			DisplayLine = STR_GOODS_WAY_ERR1;
802C62 900B21            MOV     DPTR,#DisplayLine
802C65 741C              MOV     A,#01CH
802C67 A51280802C        ECALL   ?L?COM0003
 2680: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
>> 	
 2681: 			GoodsWaySetVal[CurrentStockCode].WayState |= 0x02;				
802C6C 900B22            MOV     DPTR,#CurrentStockCode
802C6F E0                MOVX    A,@DPTR
802C70 75F005            MOV     B,#05H
802C73 900003            MOV     DPTR,#GoodsWaySetVal+01H
802C76 A51280079F        ECALL   ?C?OFFXADD
802C7B E0                MOVX    A,@DPTR
802C7C 4402              ORL     A,#02H
802C7E F0                MOVX    @DPTR,A
 2682: 			if( IsCanChange() == 1 )
802C7F A512809F27        ECALL   IsCanChange
802C84 EF                MOV     A,R7
802C85 6401              XRL     A,#01H
802C87 6003              JZ      $ + 5H
802C89 022DCF            LJMP    ?C0584?MAINFLOW
 2683: 			{
 2684: 				memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );				
802C8C FE                MOV     R6,A
802C8D 7F14              MOV     R7,#014H
802C8F FD                MOV     R5,A
802C90 7B00              MOV     R3,#?C?XDATASEG
802C92 7A04              MOV     R2,#HIGH DisplayBuffer
802C94 796B              MOV     R1,#LOW DisplayBuffer
802C96 A5128008A6        ECALL   ?C?MEMSET
 2685: 				switch( SystemParameter.curUnit )
802C9B 900466            MOV     DPTR,#SystemParameter+048H
802C9E E0                MOVX    A,@DPTR
802C9F FE                MOV     R6,A
802CA0 A3                INC     DPTR
802CA1 E0                MOVX    A,@DPTR
802CA2 FF                MOV     R7,A
802CA3 EE                MOV     A,R6
802CA4 6003              JZ      $ + 5H
802CA6 022DAC            LJMP    ?C0585?MAINFLOW
802CA9 EF                MOV     A,R7
802CAA 24F6              ADD     A,#0F6H
802CAC 603D              JZ      ?C0587?MAINFLOW
802CAE 24A6              ADD     A,#0A6H
802CB0 7003              JNZ     $ + 5H
802CB2 022D44            LJMP    ?C0588?MAINFLOW
802CB5 2463              ADD     A,#063H
802CB7 6003              JZ      $ + 5H
802CB9 022DAC            LJMP    ?C0585?MAINFLOW
 2686: 				{
 2687: 					case 1:	
802CBC         ?C0586?MAINFLOW:
 2688: 						length = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_BALANCE].str,CurrentPayed );	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 53


802CBC 7B80              MOV     R3,#BYTE2 0800430H
802CBE 7A04              MOV     R2,#HIGH 0800430H
802CC0 7930              MOV     R1,#LOW 0800430H
802CC2 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802CC5 A5128007B6        ECALL   ?C?PSTXDATA
802CCA 900521            MOV     DPTR,#DispInformationTable+0B0H
802CCD A5128007C0        ECALL   ?C?PLDCODE
802CD2 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802CD5 A5128007B6        ECALL   ?C?PSTXDATA
802CDA 900B1F            MOV     DPTR,#CurrentPayed
802CDD E0                MOVX    A,@DPTR
802CDE FF                MOV     R7,A
802CDF A3                INC     DPTR
802CE0 E0                MOVX    A,@DPTR
802CE1 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802CE4 CF                XCH     A,R7
802CE5 F0                MOVX    @DPTR,A
802CE6 A3                INC     DPTR
802CE7 EF                MOV     A,R7
 2689: 					break;				
802CE8 022D9B            LJMP    ?C1066?MAINFLOW
 2690: 					case 10:
802CEB         ?C0587?MAINFLOW:
 2691: 						length = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_BALANCE].str,
802CEB 7B80              MOV     R3,#BYTE2 080043FH
802CED 7A04              MOV     R2,#HIGH 080043FH
802CEF 793F              MOV     R1,#LOW 080043FH
802CF1 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802CF4 A5128007B6        ECALL   ?C?PSTXDATA
802CF9 900521            MOV     DPTR,#DispInformationTable+0B0H
802CFC A5128007C0        ECALL   ?C?PLDCODE
802D01 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802D04 A5128007B6        ECALL   ?C?PSTXDATA
802D09 900466            MOV     DPTR,#SystemParameter+048H
802D0C E0                MOVX    A,@DPTR
802D0D FA                MOV     R2,A
802D0E A3                INC     DPTR
802D0F E0                MOVX    A,@DPTR
802D10 FB                MOV     R3,A
802D11 900B1F            MOV     DPTR,#CurrentPayed
802D14 E0                MOVX    A,@DPTR
802D15 FE                MOV     R6,A
802D16 A3                INC     DPTR
802D17 E0                MOVX    A,@DPTR
802D18 FF                MOV     R7,A
802D19 AD03              MOV     R5,AR3
802D1B AC02              MOV     R4,AR2
802D1D A51280056C        ECALL   ?C?UIDIV
802D22 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802D25 EE                MOV     A,R6
802D26 F0                MOVX    @DPTR,A
802D27 A3                INC     DPTR
802D28 EF                MOV     A,R7
802D29 F0                MOVX    @DPTR,A
802D2A 900B1F            MOV     DPTR,#CurrentPayed
802D2D E0                MOVX    A,@DPTR
802D2E FE                MOV     R6,A
802D2F A3                INC     DPTR
802D30 E0                MOVX    A,@DPTR
802D31 FF                MOV     R7,A
802D32 AD03              MOV     R5,AR3
802D34 AC02              MOV     R4,AR2
802D36 A51280056C        ECALL   ?C?UIDIV
802D3B 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
802D3E EC                MOV     A,R4
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 54


802D3F F0                MOVX    @DPTR,A
802D40 A3                INC     DPTR
802D41 ED                MOV     A,R5
802D42         
 2692: 							CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2693: 					break;
802D42 8057              SJMP    ?C1066?MAINFLOW
 2694: 					case 100:
802D44         ?C0588?MAINFLOW:
 2695: 						length = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_BALANCE].str,
802D44 7B80              MOV     R3,#BYTE2 0800435H
802D46 7A04              MOV     R2,#HIGH 0800435H
802D48 7935              MOV     R1,#LOW 0800435H
802D4A 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802D4D A5128007B6        ECALL   ?C?PSTXDATA
802D52 900521            MOV     DPTR,#DispInformationTable+0B0H
802D55 A5128007C0        ECALL   ?C?PLDCODE
802D5A 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802D5D A5128007B6        ECALL   ?C?PSTXDATA
802D62 900466            MOV     DPTR,#SystemParameter+048H
802D65 E0                MOVX    A,@DPTR
802D66 FA                MOV     R2,A
802D67 A3                INC     DPTR
802D68 E0                MOVX    A,@DPTR
802D69 FB                MOV     R3,A
802D6A 900B1F            MOV     DPTR,#CurrentPayed
802D6D E0                MOVX    A,@DPTR
802D6E FE                MOV     R6,A
802D6F A3                INC     DPTR
802D70 E0                MOVX    A,@DPTR
802D71 FF                MOV     R7,A
802D72 AD03              MOV     R5,AR3
802D74 AC02              MOV     R4,AR2
802D76 A51280056C        ECALL   ?C?UIDIV
802D7B 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802D7E EE                MOV     A,R6
802D7F F0                MOVX    @DPTR,A
802D80 A3                INC     DPTR
802D81 EF                MOV     A,R7
802D82 F0                MOVX    @DPTR,A
802D83 900B1F            MOV     DPTR,#CurrentPayed
802D86 E0                MOVX    A,@DPTR
802D87 FE                MOV     R6,A
802D88 A3                INC     DPTR
802D89 E0                MOVX    A,@DPTR
802D8A FF                MOV     R7,A
802D8B AD03              MOV     R5,AR3
802D8D AC02              MOV     R4,AR2
802D8F A51280056C        ECALL   ?C?UIDIV
802D94 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
802D97 EC                MOV     A,R4
802D98 F0                MOVX    @DPTR,A
802D99 A3                INC     DPTR
802D9A ED                MOV     A,R5
802D9B         
802D9B F0                MOVX    @DPTR,A
802D9C 7B00              MOV     R3,#?C?XDATASEG
802D9E 7A04              MOV     R2,#HIGH DisplayBuffer
802DA0 796B              MOV     R1,#LOW DisplayBuffer
802DA2 A512800949        ECALL   _sprintf
802DA7 901596            MOV     DPTR,#length
802DAA EF                MOV     A,R7
802DAB F0                MOVX    @DPTR,A
 2696: 							CurrentPayed / SystemParameter.curUnit, CurrentPayed % SystemParameter.curUnit );	
 2697: 					break;		
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 55


 2698: 				}				
802DAC         ?C0585?MAINFLOW:
 2699: 				DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
802DAC D21A              SETB    ?_DisplayStr?BIT
802DAE 7B00              MOV     R3,#?C?XDATASEG
802DB0 7A04              MOV     R2,#HIGH DisplayBuffer
802DB2 796B              MOV     R1,#LOW DisplayBuffer
802DB4 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
802DB7 A5128007B6        ECALL   ?C?PSTXDATA
802DBC 901596            MOV     DPTR,#length
802DBF E0                MOVX    A,@DPTR
802DC0 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
802DC3 F0                MOVX    @DPTR,A
802DC4 7D01              MOV     R5,#01H
802DC6 E4                CLR     A
802DC7 FF                MOV     R7,A
802DC8 A512808062        ECALL   _DisplayStr
 2700: 				WaitForWork( 1000 , NULL );
 2701: 			}
802DCD 8007              SJMP    ?C1067?MAINFLOW
802DCF         ?C0584?MAINFLOW:
 2702: 			else
 2703: 			{
 2704: 				ClearDisplayLine( 2 );
802DCF 7F02              MOV     R7,#02H
802DD1 A5128087BB        ECALL   _ClearDisplayLine
 2705: 				WaitForWork( 1000 , NULL );	
802DD6         
802DD6 E4                CLR     A
802DD7 7FE8              MOV     R7,#0E8H
802DD9 7E03              MOV     R6,#03H
802DDB A512807B35        ECALL   ?L?COM000D
 2706: 			}
802DE0         ?C0589?MAINFLOW:
 2707: 			CurrentDispenseCoin = CurrentPayed;	
802DE0 A512803648        ECALL   ?L?COM0023
 2708: 			CurrentPayed = 0;
 2709: 			DispenseCoin();	
 2710:             //=====================================================================
 2711: 			GoodsWaySetVal[CurrentStockCode].WayState |= 0x02;
802DE5 A51280C34C        ECALL   ?L?COM0027
 2712:             SaveGoodsSet();                  //Added by Andy on 2010.9.2
 2713: 			//---------------------------------------------------------------------							
 2714: 			TradeCounter.GoodDoubtTraceSum ++ ;//有疑问出货交易次数计数		
802DEA 900AFE            MOV     DPTR,#TradeCounter+012H
802DED E4                CLR     A
802DEE 75F001            MOV     B,#01H
802DF1 A512800600        ECALL   ?C?IILDX
 2715: 			TradeLog[ CurrentStockCode].DoubtTraceSum ++;//此货道有疑问交易次数
802DF6 900B22            MOV     DPTR,#CurrentStockCode
802DF9 E0                MOVX    A,@DPTR
802DFA 75F009            MOV     B,#09H
802DFD 9001C8            MOV     DPTR,#TradeLog+03H
802E00 A51280C325        ECALL   ?L?COM002C
 2716: 			SaveTradeCounter();
 2717: 			SaveTradeParam();
802E05 A51280C04A        ECALL   SaveTradeParam
 2718: 			return 2;						
802E0A 7F02              MOV     R7,#02H
802E0C 022EA8            LJMP    ?C0581?MAINFLOW
 2719: 		}
 2720: 		break;
 2721: 		//出货失败，如果不能找零，则看其它货道是否能服务，如能则让顾额选其它货
 2722: 		case 3://在转动前电机没有到位，没有出货，此货道已不能工作了
 2723: 		case 4://电机没有转动，没有出货，可以重试一次
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 56


 2724: 		case 7://接收到的命令包有错误，但货没有出
802E0F         ?C0592?MAINFLOW:
 2725: 		{	
 2726: 			Trace( "\n OutGoods 13" );
 2727: 			DisplayLine = STR_GOODS_WAY_ERR1;
802E0F 900B21            MOV     DPTR,#DisplayLine
802E12 741C              MOV     A,#01CH
802E14 A51280802C        ECALL   ?L?COM0003
 2728: 			DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );		
>> 	
 2729: 			//=====================================================================
 2730: 			GoodsWaySetVal[CurrentStockCode].WayState |= 0x02;
802E19 A51280C34C        ECALL   ?L?COM0027
 2731:             SaveGoodsSet();                  //Added by Andy on 2010.9.2
 2732: 			//---------------------------------------------------------------------
 2733: 			if( IsCanChange() == 0 )
802E1E A512809F27        ECALL   IsCanChange
802E23 EF                MOV     A,R7
802E24 706B              JNZ     ?C0593?MAINFLOW
 2734: 			{
 2735: 				if( ColnumIsCanServer() == 1 )
802E26 A512809F5F        ECALL   ColnumIsCanServer
802E2B EF                MOV     A,R7
802E2C 6401              XRL     A,#01H
802E2E 7072              JNZ     ?C0595?MAINFLOW
 2736: 				{
 2737: 					memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );
802E30 FE                MOV     R6,A
802E31 7F14              MOV     R7,#014H
802E33 FD                MOV     R5,A
802E34 7B00              MOV     R3,#?C?XDATASEG
802E36 7A04              MOV     R2,#HIGH DisplayBuffer
802E38 796B              MOV     R1,#LOW DisplayBuffer
802E3A A5128008A6        ECALL   ?C?MEMSET
 2738: 				#ifdef _CHINA_
 2739: 					length = sprintf( DisplayBuffer, "选择其它商品");
 2740: 				#else
 2741: 					length = sprintf( DisplayBuffer, "Select another one" );
802E3F 7B80              MOV     R3,#BYTE2 0800447H
802E41 7A04              MOV     R2,#HIGH 0800447H
802E43 7947              MOV     R1,#LOW 0800447H
802E45 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802E48 A5128007B6        ECALL   ?C?PSTXDATA
802E4D 7B00              MOV     R3,#?C?XDATASEG
802E4F 7A04              MOV     R2,#HIGH DisplayBuffer
802E51 796B              MOV     R1,#LOW DisplayBuffer
802E53 A512800949        ECALL   _sprintf
802E58 901596            MOV     DPTR,#length
802E5B EF                MOV     A,R7
802E5C F0                MOVX    @DPTR,A
 2742: 				#endif			
 2743: 					DisplayStr( 0, __LINE1__, 1, DisplayBuffer, length );
802E5D D21A              SETB    ?_DisplayStr?BIT
802E5F 7B00              MOV     R3,#?C?XDATASEG
802E61 7A04              MOV     R2,#HIGH DisplayBuffer
802E63 796B              MOV     R1,#LOW DisplayBuffer
802E65 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
802E68 A5128007B6        ECALL   ?C?PSTXDATA
802E6D 901596            MOV     DPTR,#length
802E70 E0                MOVX    A,@DPTR
802E71 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
802E74 F0                MOVX    @DPTR,A
802E75 7D01              MOV     R5,#01H
802E77 E4                CLR     A
802E78 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 57


802E79 A512808062        ECALL   _DisplayStr
 2744: 					WaitForWork( 2500 , NULL );
802E7E E4                CLR     A
802E7F 7FC4              MOV     R7,#0C4H
802E81 7E09              MOV     R6,#09H
802E83 A512807B35        ECALL   ?L?COM000D
 2745: 					DisplayCurrentMoney(CurrentPayed);
802E88 A512801AB1        ECALL   ?L?COM001F
 2746: 					return 1;
802E8D 7F01              MOV     R7,#01H
802E8F 8017              SJMP    ?C0581?MAINFLOW
 2747: 				}						
 2748: 			}
802E91         ?C0593?MAINFLOW:
 2749: 			else
 2750: 			{
 2751: 				ClearDisplayLine( 2 );
802E91 7F02              MOV     R7,#02H
802E93 A5128087BB        ECALL   _ClearDisplayLine
 2752: 				WaitForWork( 2500 , NULL );
802E98 E4                CLR     A
802E99 7FC4              MOV     R7,#0C4H
802E9B 7E09              MOV     R6,#09H
802E9D A512807B35        ECALL   ?L?COM000D
 2753: 			}
802EA2         ?C0595?MAINFLOW:
 2754: 			return 0;		
802EA2 7F00              MOV     R7,#00H
802EA4 8002              SJMP    ?C0581?MAINFLOW
 2755: 		}
 2756: 		break;		
 2757: 	}
802EA6         ?C0569?MAINFLOW:
 2758: 	return 0;
802EA6 7F00              MOV     R7,#00H
 2759: }
802EA8         ?C0581?MAINFLOW:
802EA8 A522              ERET    
----- FUNCTION OutGoods (END) -------


----- FUNCTION ReBuy (BEGIN) -----
 FILE: 'mainflow.c'
 2762: u_char ReBuy()
 2763: {
 2764: 	u_char xdata i = 0;	
 2765: 	u_char xdata j = 0;
802EAA E4                CLR     A
802EAB 901595            MOV     DPTR,#i
802EAE F0                MOVX    @DPTR,A
 2766: 
802EAF A3                INC     DPTR
802EB0 F0                MOVX    @DPTR,A
 2767: 	if( CurrentPayed == 0 )
802EB1 900B1F            MOV     DPTR,#CurrentPayed
802EB4 E0                MOVX    A,@DPTR
802EB5 7002              JNZ     ?C1004?MAINFLOW
802EB7 A3                INC     DPTR
802EB8 E0                MOVX    A,@DPTR
802EB9         ?C1004?MAINFLOW:
802EB9 7004              JNZ     ?C0596?MAINFLOW
 2768: 		return 0;
802EBB FF                MOV     R7,A
802EBC 023646            LJMP    ?C0597?MAINFLOW
802EBF         ?C0596?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 58


 2769: 	//判断是否允许再次购买
 2770: 	if( SystemParameter.IsMuliVerd != 1 ) 
802EBF 900426            MOV     DPTR,#SystemParameter+08H
802EC2 E0                MOVX    A,@DPTR
802EC3 6401              XRL     A,#01H
802EC5 7003              JNZ     $ + 5H
802EC7 02301E            LJMP    ?C0598?MAINFLOW
 2771: 	{
 2772: 		i = 0;
802ECA A512809F22        ECALL   ?L?COM0031
802ECF EF                MOV     A,R7
802ED0 6401              XRL     A,#01H
802ED2 6003              JZ      $ + 5H
802ED4 023019            LJMP    ?C0599?MAINFLOW
 2773: 		if( IsCanChange() == 1 ) 
 2774: 		{
 2775: 			ClearDisplayLine( 1 );
802ED7 7F01              MOV     R7,#01H
802ED9 A5128087BB        ECALL   _ClearDisplayLine
 2776: 			memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
802EDE 7E00              MOV     R6,#00H
802EE0 7F14              MOV     R7,#014H
802EE2 7D00              MOV     R5,#00H
802EE4 7B00              MOV     R3,#?C?XDATASEG
802EE6 7A04              MOV     R2,#HIGH DisplayBuffer
802EE8 796B              MOV     R1,#LOW DisplayBuffer
802EEA A5128008A6        ECALL   ?C?MEMSET
 2777: 			switch( SystemParameter.curUnit )
802EEF 900466            MOV     DPTR,#SystemParameter+048H
802EF2 E0                MOVX    A,@DPTR
802EF3 FE                MOV     R6,A
802EF4 A3                INC     DPTR
802EF5 E0                MOVX    A,@DPTR
802EF6 FF                MOV     R7,A
802EF7 EE                MOV     A,R6
802EF8 6003              JZ      $ + 5H
802EFA 023000            LJMP    ?C0600?MAINFLOW
802EFD EF                MOV     A,R7
802EFE 24F6              ADD     A,#0F6H
802F00 603D              JZ      ?C0602?MAINFLOW
802F02 24A6              ADD     A,#0A6H
802F04 7003              JNZ     $ + 5H
802F06 022F98            LJMP    ?C0603?MAINFLOW
802F09 2463              ADD     A,#063H
802F0B 6003              JZ      $ + 5H
802F0D 023000            LJMP    ?C0600?MAINFLOW
 2778: 			{
 2779: 				case 1:
802F10         ?C0601?MAINFLOW:
 2780: 					i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
802F10 7B80              MOV     R3,#BYTE2 0800430H
802F12 7A04              MOV     R2,#HIGH 0800430H
802F14 7930              MOV     R1,#LOW 0800430H
802F16 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802F19 A5128007B6        ECALL   ?C?PSTXDATA
802F1E 90051D            MOV     DPTR,#DispInformationTable+0ACH
802F21 A5128007C0        ECALL   ?C?PLDCODE
802F26 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802F29 A5128007B6        ECALL   ?C?PSTXDATA
802F2E 900B1F            MOV     DPTR,#CurrentPayed
802F31 E0                MOVX    A,@DPTR
802F32 FF                MOV     R7,A
802F33 A3                INC     DPTR
802F34 E0                MOVX    A,@DPTR
802F35 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 59


802F38 CF                XCH     A,R7
802F39 F0                MOVX    @DPTR,A
802F3A A3                INC     DPTR
802F3B EF                MOV     A,R7
 2781: 				break;				
802F3C 022FEF            LJMP    ?C1069?MAINFLOW
 2782: 				case 10:
802F3F         ?C0602?MAINFLOW:
 2783: 					i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
802F3F 7B80              MOV     R3,#BYTE2 080043FH
802F41 7A04              MOV     R2,#HIGH 080043FH
802F43 793F              MOV     R1,#LOW 080043FH
802F45 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802F48 A5128007B6        ECALL   ?C?PSTXDATA
802F4D 90051D            MOV     DPTR,#DispInformationTable+0ACH
802F50 A5128007C0        ECALL   ?C?PLDCODE
802F55 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802F58 A5128007B6        ECALL   ?C?PSTXDATA
802F5D 900466            MOV     DPTR,#SystemParameter+048H
802F60 E0                MOVX    A,@DPTR
802F61 FA                MOV     R2,A
802F62 A3                INC     DPTR
802F63 E0                MOVX    A,@DPTR
802F64 FB                MOV     R3,A
802F65 900B1F            MOV     DPTR,#CurrentPayed
802F68 E0                MOVX    A,@DPTR
802F69 FE                MOV     R6,A
802F6A A3                INC     DPTR
802F6B E0                MOVX    A,@DPTR
802F6C FF                MOV     R7,A
802F6D AD03              MOV     R5,AR3
802F6F AC02              MOV     R4,AR2
802F71 A51280056C        ECALL   ?C?UIDIV
802F76 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802F79 EE                MOV     A,R6
802F7A F0                MOVX    @DPTR,A
802F7B A3                INC     DPTR
802F7C EF                MOV     A,R7
802F7D F0                MOVX    @DPTR,A
802F7E 900B1F            MOV     DPTR,#CurrentPayed
802F81 E0                MOVX    A,@DPTR
802F82 FE                MOV     R6,A
802F83 A3                INC     DPTR
802F84 E0                MOVX    A,@DPTR
802F85 FF                MOV     R7,A
802F86 AD03              MOV     R5,AR3
802F88 AC02              MOV     R4,AR2
802F8A A51280056C        ECALL   ?C?UIDIV
802F8F 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
802F92 EC                MOV     A,R4
802F93 F0                MOVX    @DPTR,A
802F94 A3                INC     DPTR
802F95 ED                MOV     A,R5
802F96         
 2784: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );   //"%s%u.%02u--"%s%u.%u"				
 2785: 				break;
802F96 8057              SJMP    ?C1069?MAINFLOW
 2786: 				case 100:
802F98         ?C0603?MAINFLOW:
 2787: 					i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
802F98 7B80              MOV     R3,#BYTE2 0800435H
802F9A 7A04              MOV     R2,#HIGH 0800435H
802F9C 7935              MOV     R1,#LOW 0800435H
802F9E 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
802FA1 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 60


802FA6 90051D            MOV     DPTR,#DispInformationTable+0ACH
802FA9 A5128007C0        ECALL   ?C?PLDCODE
802FAE 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
802FB1 A5128007B6        ECALL   ?C?PSTXDATA
802FB6 900466            MOV     DPTR,#SystemParameter+048H
802FB9 E0                MOVX    A,@DPTR
802FBA FA                MOV     R2,A
802FBB A3                INC     DPTR
802FBC E0                MOVX    A,@DPTR
802FBD FB                MOV     R3,A
802FBE 900B1F            MOV     DPTR,#CurrentPayed
802FC1 E0                MOVX    A,@DPTR
802FC2 FE                MOV     R6,A
802FC3 A3                INC     DPTR
802FC4 E0                MOVX    A,@DPTR
802FC5 FF                MOV     R7,A
802FC6 AD03              MOV     R5,AR3
802FC8 AC02              MOV     R4,AR2
802FCA A51280056C        ECALL   ?C?UIDIV
802FCF 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
802FD2 EE                MOV     A,R6
802FD3 F0                MOVX    @DPTR,A
802FD4 A3                INC     DPTR
802FD5 EF                MOV     A,R7
802FD6 F0                MOVX    @DPTR,A
802FD7 900B1F            MOV     DPTR,#CurrentPayed
802FDA E0                MOVX    A,@DPTR
802FDB FE                MOV     R6,A
802FDC A3                INC     DPTR
802FDD E0                MOVX    A,@DPTR
802FDE FF                MOV     R7,A
802FDF AD03              MOV     R5,AR3
802FE1 AC02              MOV     R4,AR2
802FE3 A51280056C        ECALL   ?C?UIDIV
802FE8 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
802FEB EC                MOV     A,R4
802FEC F0                MOVX    @DPTR,A
802FED A3                INC     DPTR
802FEE ED                MOV     A,R5
802FEF         
802FEF F0                MOVX    @DPTR,A
802FF0 7B00              MOV     R3,#?C?XDATASEG
802FF2 7A04              MOV     R2,#HIGH DisplayBuffer
802FF4 796B              MOV     R1,#LOW DisplayBuffer
802FF6 A512800949        ECALL   _sprintf
802FFB 901595            MOV     DPTR,#i
802FFE EF                MOV     A,R7
802FFF F0                MOVX    @DPTR,A
 2788: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2789: 				break;		
 2790: 			}					
803000         ?C0600?MAINFLOW:
 2791: 			DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
803000 D21A              SETB    ?_DisplayStr?BIT
803002 7B00              MOV     R3,#?C?XDATASEG
803004 7A04              MOV     R2,#HIGH DisplayBuffer
803006 796B              MOV     R1,#LOW DisplayBuffer
803008 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80300B A5128007B6        ECALL   ?C?PSTXDATA
803010 901595            MOV     DPTR,#i
803013 E0                MOVX    A,@DPTR
803014 A512807B23        ECALL   ?L?COM000A
 2792: 			WaitForWork( 2000 , NULL );
 2793: 		}
803019         ?C0599?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 61


 2794: 		return 0;
803019 7F00              MOV     R7,#00H
80301B 023646            LJMP    ?C0597?MAINFLOW
 2795: 	}	
80301E         ?C0598?MAINFLOW:
 2796: 	//先判断余钱是否超过再次购物的标准,如超过则让用户确定是否断续购物
 2797: 	if( ( CurrentPayed >= SystemParameter.Min ) && ( SystemParameter.Min != 0  ))
80301E 900427            MOV     DPTR,#SystemParameter+09H
803021 E0                MOVX    A,@DPTR
803022 FE                MOV     R6,A
803023 A3                INC     DPTR
803024 E0                MOVX    A,@DPTR
803025 FF                MOV     R7,A
803026 C3                CLR     C
803027 900B20            MOV     DPTR,#CurrentPayed+01H
80302A E0                MOVX    A,@DPTR
80302B 9F                SUBB    A,R7
80302C 900B1F            MOV     DPTR,#CurrentPayed
80302F E0                MOVX    A,@DPTR
803030 9E                SUBB    A,R6
803031 5003              JNC     $ + 5H
803033 0234F1            LJMP    ?C0604?MAINFLOW
803036 EF                MOV     A,R7
803037 4E                ORL     A,R6
803038 7003              JNZ     $ + 5H
80303A 0234F1            LJMP    ?C0604?MAINFLOW
 2798: 	{		
 2799: 		if( ColnumIsCanServer() == 1 )
80303D A512809F5F        ECALL   ColnumIsCanServer
803042 EF                MOV     A,R7
803043 6401              XRL     A,#01H
803045 6003              JZ      $ + 5H
803047 023387            LJMP    ?C0605?MAINFLOW
 2800: 		{
 2801: 			//还有好的货道可以服务,则询问顾客是否还买货			
 2802: 			//显示字符
 2803: 		#ifdef _CHINA_
 2804: 			DisplayStr( 0, 0, 1, DispInformationTable[STR_RE_BUY].str, DispInformationTable[STR_RE_BUY ].len );
 2805: 		#else
 2806: 			DisplayStr( 0, 0, 1, DispInformationTable[STR_RE_BUY].str, DispInformationTable[STR_RE_BUY ].len );
80304A D21A              SETB    ?_DisplayStr?BIT
80304C 900505            MOV     DPTR,#DispInformationTable+094H
80304F A5128007C0        ECALL   ?C?PLDCODE
803054 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
803057 A5128007B6        ECALL   ?C?PSTXDATA
80305C 900508            MOV     DPTR,#DispInformationTable+097H
80305F A512808059        ECALL   ?L?COM0005
 2807: 		#endif
 2808: 		#ifdef _CHINA_
 2809: 			DisplayStr( 0, 1, 1, DispInformationTable[STR_OK_NOT].str, DispInformationTable[STR_OK_NOT ].len );
 2810: 		#else
 2811: 			DisplayStr( 0, 1, 1, DispInformationTable[STR_OK_NOT].str, DispInformationTable[STR_OK_NOT ].len );
803064 D21A              SETB    ?_DisplayStr?BIT
803066 900485            MOV     DPTR,#DispInformationTable+014H
803069 A5128007C0        ECALL   ?C?PLDCODE
80306E 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
803071 A5128007B6        ECALL   ?C?PSTXDATA
803076 900488            MOV     DPTR,#DispInformationTable+017H
803079 E4                CLR     A
80307A 93                MOVC    A,@A+DPTR
80307B 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80307E F0                MOVX    @DPTR,A
80307F 7D01              MOV     R5,#01H
803081 E4                CLR     A
803082 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 62


803083 A512808062        ECALL   _DisplayStr
 2812: 		#endif			    
 2813: 			//等待选择
 2814: 			SgwSecTimer= 30;
803088 751E1E            MOV     SgwSecTimer,#01EH
80308B         ?C0606?MAINFLOW:
 2815: 			while( SgwSecTimer )
80308B E51E              MOV     A,SgwSecTimer
80308D 7003              JNZ     $ + 5H
80308F 02321D            LJMP    ?C0607?MAINFLOW
 2816: 			{
 2817: 				WaitForWork( 50, NULL ); 
803092 E4                CLR     A
803093 7F32              MOV     R7,#032H
803095 FE                MOV     R6,A
803096 A512807B35        ECALL   ?L?COM000D
 2818: 				i = GetKey();		
80309B A512809275        ECALL   GetKey
8030A0 901595            MOV     DPTR,#i
8030A3 EF                MOV     A,R7
8030A4 F0                MOVX    @DPTR,A
 2819: 				switch ( i )
8030A5 24E5              ADD     A,#0E5H
8030A7 600E              JZ      ?C0610?MAINFLOW
8030A9 240E              ADD     A,#0EH
8030AB 70DE              JNZ     ?C0606?MAINFLOW
 2820: 			 	{
 2821: 					case KEY_SUBMIT:	
8030AD         ?C0609?MAINFLOW:
 2822: 						DisplayCurrentMoney(CurrentPayed);
8030AD A512801AB1        ECALL   ?L?COM001F
 2823: 						return 1 ;	//确定再继续		
8030B2 7F01              MOV     R7,#01H
8030B4 023646            LJMP    ?C0597?MAINFLOW
 2824: 					case KEY_CANCEL:	
8030B7         ?C0610?MAINFLOW:
 2825: 						i = 0;
8030B7 A512809F22        ECALL   ?L?COM0031
8030BC EF                MOV     A,R7
8030BD 6401              XRL     A,#01H
8030BF 6003              JZ      $ + 5H
8030C1 023218            LJMP    ?C0611?MAINFLOW
 2826: 						if( IsCanChange() == 1 )
 2827: 						{
 2828: 							ClearDisplayLine( 1 );
8030C4 7F01              MOV     R7,#01H
8030C6 A5128087BB        ECALL   _ClearDisplayLine
 2829: 							memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
8030CB 7E00              MOV     R6,#00H
8030CD 7F14              MOV     R7,#014H
8030CF 7D00              MOV     R5,#00H
8030D1 7B00              MOV     R3,#?C?XDATASEG
8030D3 7A04              MOV     R2,#HIGH DisplayBuffer
8030D5 796B              MOV     R1,#LOW DisplayBuffer
8030D7 A5128008A6        ECALL   ?C?MEMSET
 2830: 							switch( SystemParameter.curUnit )
8030DC 900466            MOV     DPTR,#SystemParameter+048H
8030DF E0                MOVX    A,@DPTR
8030E0 FE                MOV     R6,A
8030E1 A3                INC     DPTR
8030E2 E0                MOVX    A,@DPTR
8030E3 FF                MOV     R7,A
8030E4 EE                MOV     A,R6
8030E5 6003              JZ      $ + 5H
8030E7 0231ED            LJMP    ?C0612?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 63


8030EA EF                MOV     A,R7
8030EB 24F6              ADD     A,#0F6H
8030ED 603D              JZ      ?C0614?MAINFLOW
8030EF 24A6              ADD     A,#0A6H
8030F1 7003              JNZ     $ + 5H
8030F3 023185            LJMP    ?C0615?MAINFLOW
8030F6 2463              ADD     A,#063H
8030F8 6003              JZ      $ + 5H
8030FA 0231ED            LJMP    ?C0612?MAINFLOW
 2831: 							{
 2832: 								case 1:
8030FD         ?C0613?MAINFLOW:
 2833: 									i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
8030FD 7B80              MOV     R3,#BYTE2 0800430H
8030FF 7A04              MOV     R2,#HIGH 0800430H
803101 7930              MOV     R1,#LOW 0800430H
803103 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803106 A5128007B6        ECALL   ?C?PSTXDATA
80310B 90051D            MOV     DPTR,#DispInformationTable+0ACH
80310E A5128007C0        ECALL   ?C?PLDCODE
803113 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803116 A5128007B6        ECALL   ?C?PSTXDATA
80311B 900B1F            MOV     DPTR,#CurrentPayed
80311E E0                MOVX    A,@DPTR
80311F FF                MOV     R7,A
803120 A3                INC     DPTR
803121 E0                MOVX    A,@DPTR
803122 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
803125 CF                XCH     A,R7
803126 F0                MOVX    @DPTR,A
803127 A3                INC     DPTR
803128 EF                MOV     A,R7
 2834: 								break;				
803129 0231DC            LJMP    ?C1071?MAINFLOW
 2835: 								case 10:
80312C         ?C0614?MAINFLOW:
 2836: 									i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
80312C 7B80              MOV     R3,#BYTE2 080043FH
80312E 7A04              MOV     R2,#HIGH 080043FH
803130 793F              MOV     R1,#LOW 080043FH
803132 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803135 A5128007B6        ECALL   ?C?PSTXDATA
80313A 90051D            MOV     DPTR,#DispInformationTable+0ACH
80313D A5128007C0        ECALL   ?C?PLDCODE
803142 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803145 A5128007B6        ECALL   ?C?PSTXDATA
80314A 900466            MOV     DPTR,#SystemParameter+048H
80314D E0                MOVX    A,@DPTR
80314E FA                MOV     R2,A
80314F A3                INC     DPTR
803150 E0                MOVX    A,@DPTR
803151 FB                MOV     R3,A
803152 900B1F            MOV     DPTR,#CurrentPayed
803155 E0                MOVX    A,@DPTR
803156 FE                MOV     R6,A
803157 A3                INC     DPTR
803158 E0                MOVX    A,@DPTR
803159 FF                MOV     R7,A
80315A AD03              MOV     R5,AR3
80315C AC02              MOV     R4,AR2
80315E A51280056C        ECALL   ?C?UIDIV
803163 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
803166 EE                MOV     A,R6
803167 F0                MOVX    @DPTR,A
803168 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 64


803169 EF                MOV     A,R7
80316A F0                MOVX    @DPTR,A
80316B 900B1F            MOV     DPTR,#CurrentPayed
80316E E0                MOVX    A,@DPTR
80316F FE                MOV     R6,A
803170 A3                INC     DPTR
803171 E0                MOVX    A,@DPTR
803172 FF                MOV     R7,A
803173 AD03              MOV     R5,AR3
803175 AC02              MOV     R4,AR2
803177 A51280056C        ECALL   ?C?UIDIV
80317C 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
80317F EC                MOV     A,R4
803180 F0                MOVX    @DPTR,A
803181 A3                INC     DPTR
803182 ED                MOV     A,R5
803183         
 2837: 										CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );	//			
 2838: 								break;
803183 8057              SJMP    ?C1071?MAINFLOW
 2839: 								case 100:
803185         ?C0615?MAINFLOW:
 2840: 									i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
803185 7B80              MOV     R3,#BYTE2 0800435H
803187 7A04              MOV     R2,#HIGH 0800435H
803189 7935              MOV     R1,#LOW 0800435H
80318B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80318E A5128007B6        ECALL   ?C?PSTXDATA
803193 90051D            MOV     DPTR,#DispInformationTable+0ACH
803196 A5128007C0        ECALL   ?C?PLDCODE
80319B 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80319E A5128007B6        ECALL   ?C?PSTXDATA
8031A3 900466            MOV     DPTR,#SystemParameter+048H
8031A6 E0                MOVX    A,@DPTR
8031A7 FA                MOV     R2,A
8031A8 A3                INC     DPTR
8031A9 E0                MOVX    A,@DPTR
8031AA FB                MOV     R3,A
8031AB 900B1F            MOV     DPTR,#CurrentPayed
8031AE E0                MOVX    A,@DPTR
8031AF FE                MOV     R6,A
8031B0 A3                INC     DPTR
8031B1 E0                MOVX    A,@DPTR
8031B2 FF                MOV     R7,A
8031B3 AD03              MOV     R5,AR3
8031B5 AC02              MOV     R4,AR2
8031B7 A51280056C        ECALL   ?C?UIDIV
8031BC 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
8031BF EE                MOV     A,R6
8031C0 F0                MOVX    @DPTR,A
8031C1 A3                INC     DPTR
8031C2 EF                MOV     A,R7
8031C3 F0                MOVX    @DPTR,A
8031C4 900B1F            MOV     DPTR,#CurrentPayed
8031C7 E0                MOVX    A,@DPTR
8031C8 FE                MOV     R6,A
8031C9 A3                INC     DPTR
8031CA E0                MOVX    A,@DPTR
8031CB FF                MOV     R7,A
8031CC AD03              MOV     R5,AR3
8031CE AC02              MOV     R4,AR2
8031D0 A51280056C        ECALL   ?C?UIDIV
8031D5 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
8031D8 EC                MOV     A,R4
8031D9 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 65


8031DA A3                INC     DPTR
8031DB ED                MOV     A,R5
8031DC         
8031DC F0                MOVX    @DPTR,A
8031DD 7B00              MOV     R3,#?C?XDATASEG
8031DF 7A04              MOV     R2,#HIGH DisplayBuffer
8031E1 796B              MOV     R1,#LOW DisplayBuffer
8031E3 A512800949        ECALL   _sprintf
8031E8 901595            MOV     DPTR,#i
8031EB EF                MOV     A,R7
8031EC F0                MOVX    @DPTR,A
 2841: 										CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2842: 								break;		
 2843: 							}													
8031ED         ?C0612?MAINFLOW:
 2844: 							DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
8031ED D21A              SETB    ?_DisplayStr?BIT
8031EF 7B00              MOV     R3,#?C?XDATASEG
8031F1 7A04              MOV     R2,#HIGH DisplayBuffer
8031F3 796B              MOV     R1,#LOW DisplayBuffer
8031F5 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8031F8 A5128007B6        ECALL   ?C?PSTXDATA
8031FD 901595            MOV     DPTR,#i
803200 E0                MOVX    A,@DPTR
803201 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
803204 F0                MOVX    @DPTR,A
803205 7D01              MOV     R5,#01H
803207 E4                CLR     A
803208 FF                MOV     R7,A
803209 A512808062        ECALL   _DisplayStr
 2845: 							WaitForWork( 1500 , NULL );
80320E E4                CLR     A
80320F 7FDC              MOV     R7,#0DCH
803211 7E05              MOV     R6,#05H
803213 A512807B35        ECALL   ?L?COM000D
 2846: 						}
803218         ?C0611?MAINFLOW:
 2847: 						return 0 ;//确定不不买了
803218 7F00              MOV     R7,#00H
80321A 023646            LJMP    ?C0597?MAINFLOW
 2848: 					default:
 2849: 						continue;
 2850: 				}	
 2851: 			}
80321D         ?C0607?MAINFLOW:
 2852: 			//等待超时，直接找零了
 2853: 			if( IsCanChange() == 1 )
80321D A512809F27        ECALL   IsCanChange
803222 EF                MOV     A,R7
803223 6401              XRL     A,#01H
803225 6003              JZ      $ + 5H
803227 023382            LJMP    ?C0617?MAINFLOW
 2854: 			{
 2855: 				i = 0;
80322A 901595            MOV     DPTR,#i
80322D F0                MOVX    @DPTR,A
 2856: 				ClearDisplayLine( 1 );				
80322E 7F01              MOV     R7,#01H
803230 A5128087BB        ECALL   _ClearDisplayLine
 2857: 				memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
803235 7E00              MOV     R6,#00H
803237 7F14              MOV     R7,#014H
803239 7D00              MOV     R5,#00H
80323B 7B00              MOV     R3,#?C?XDATASEG
80323D 7A04              MOV     R2,#HIGH DisplayBuffer
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 66


80323F 796B              MOV     R1,#LOW DisplayBuffer
803241 A5128008A6        ECALL   ?C?MEMSET
 2858: 				switch( SystemParameter.curUnit )
803246 900466            MOV     DPTR,#SystemParameter+048H
803249 E0                MOVX    A,@DPTR
80324A FE                MOV     R6,A
80324B A3                INC     DPTR
80324C E0                MOVX    A,@DPTR
80324D FF                MOV     R7,A
80324E EE                MOV     A,R6
80324F 6003              JZ      $ + 5H
803251 023357            LJMP    ?C0618?MAINFLOW
803254 EF                MOV     A,R7
803255 24F6              ADD     A,#0F6H
803257 603D              JZ      ?C0620?MAINFLOW
803259 24A6              ADD     A,#0A6H
80325B 7003              JNZ     $ + 5H
80325D 0232EF            LJMP    ?C0621?MAINFLOW
803260 2463              ADD     A,#063H
803262 6003              JZ      $ + 5H
803264 023357            LJMP    ?C0618?MAINFLOW
 2859: 				{
 2860: 					case 1:
803267         ?C0619?MAINFLOW:
 2861: 						i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
803267 7B80              MOV     R3,#BYTE2 0800430H
803269 7A04              MOV     R2,#HIGH 0800430H
80326B 7930              MOV     R1,#LOW 0800430H
80326D 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803270 A5128007B6        ECALL   ?C?PSTXDATA
803275 90051D            MOV     DPTR,#DispInformationTable+0ACH
803278 A5128007C0        ECALL   ?C?PLDCODE
80327D 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803280 A5128007B6        ECALL   ?C?PSTXDATA
803285 900B1F            MOV     DPTR,#CurrentPayed
803288 E0                MOVX    A,@DPTR
803289 FF                MOV     R7,A
80328A A3                INC     DPTR
80328B E0                MOVX    A,@DPTR
80328C 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80328F CF                XCH     A,R7
803290 F0                MOVX    @DPTR,A
803291 A3                INC     DPTR
803292 EF                MOV     A,R7
 2862: 					break;				
803293 023346            LJMP    ?C1073?MAINFLOW
 2863: 					case 10:
803296         ?C0620?MAINFLOW:
 2864: 						i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
803296 7B80              MOV     R3,#BYTE2 080043FH
803298 7A04              MOV     R2,#HIGH 080043FH
80329A 793F              MOV     R1,#LOW 080043FH
80329C 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80329F A5128007B6        ECALL   ?C?PSTXDATA
8032A4 90051D            MOV     DPTR,#DispInformationTable+0ACH
8032A7 A5128007C0        ECALL   ?C?PLDCODE
8032AC 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8032AF A5128007B6        ECALL   ?C?PSTXDATA
8032B4 900466            MOV     DPTR,#SystemParameter+048H
8032B7 E0                MOVX    A,@DPTR
8032B8 FA                MOV     R2,A
8032B9 A3                INC     DPTR
8032BA E0                MOVX    A,@DPTR
8032BB FB                MOV     R3,A
8032BC 900B1F            MOV     DPTR,#CurrentPayed
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 67


8032BF E0                MOVX    A,@DPTR
8032C0 FE                MOV     R6,A
8032C1 A3                INC     DPTR
8032C2 E0                MOVX    A,@DPTR
8032C3 FF                MOV     R7,A
8032C4 AD03              MOV     R5,AR3
8032C6 AC02              MOV     R4,AR2
8032C8 A51280056C        ECALL   ?C?UIDIV
8032CD 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
8032D0 EE                MOV     A,R6
8032D1 F0                MOVX    @DPTR,A
8032D2 A3                INC     DPTR
8032D3 EF                MOV     A,R7
8032D4 F0                MOVX    @DPTR,A
8032D5 900B1F            MOV     DPTR,#CurrentPayed
8032D8 E0                MOVX    A,@DPTR
8032D9 FE                MOV     R6,A
8032DA A3                INC     DPTR
8032DB E0                MOVX    A,@DPTR
8032DC FF                MOV     R7,A
8032DD AD03              MOV     R5,AR3
8032DF AC02              MOV     R4,AR2
8032E1 A51280056C        ECALL   ?C?UIDIV
8032E6 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
8032E9 EC                MOV     A,R4
8032EA F0                MOVX    @DPTR,A
8032EB A3                INC     DPTR
8032EC ED                MOV     A,R5
8032ED         
 2865: 							CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2866: 					break;
8032ED 8057              SJMP    ?C1073?MAINFLOW
 2867: 					case 100:
8032EF         ?C0621?MAINFLOW:
 2868: 						i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
8032EF 7B80              MOV     R3,#BYTE2 0800435H
8032F1 7A04              MOV     R2,#HIGH 0800435H
8032F3 7935              MOV     R1,#LOW 0800435H
8032F5 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8032F8 A5128007B6        ECALL   ?C?PSTXDATA
8032FD 90051D            MOV     DPTR,#DispInformationTable+0ACH
803300 A5128007C0        ECALL   ?C?PLDCODE
803305 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803308 A5128007B6        ECALL   ?C?PSTXDATA
80330D 900466            MOV     DPTR,#SystemParameter+048H
803310 E0                MOVX    A,@DPTR
803311 FA                MOV     R2,A
803312 A3                INC     DPTR
803313 E0                MOVX    A,@DPTR
803314 FB                MOV     R3,A
803315 900B1F            MOV     DPTR,#CurrentPayed
803318 E0                MOVX    A,@DPTR
803319 FE                MOV     R6,A
80331A A3                INC     DPTR
80331B E0                MOVX    A,@DPTR
80331C FF                MOV     R7,A
80331D AD03              MOV     R5,AR3
80331F AC02              MOV     R4,AR2
803321 A51280056C        ECALL   ?C?UIDIV
803326 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
803329 EE                MOV     A,R6
80332A F0                MOVX    @DPTR,A
80332B A3                INC     DPTR
80332C EF                MOV     A,R7
80332D F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 68


80332E 900B1F            MOV     DPTR,#CurrentPayed
803331 E0                MOVX    A,@DPTR
803332 FE                MOV     R6,A
803333 A3                INC     DPTR
803334 E0                MOVX    A,@DPTR
803335 FF                MOV     R7,A
803336 AD03              MOV     R5,AR3
803338 AC02              MOV     R4,AR2
80333A A51280056C        ECALL   ?C?UIDIV
80333F 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
803342 EC                MOV     A,R4
803343 F0                MOVX    @DPTR,A
803344 A3                INC     DPTR
803345 ED                MOV     A,R5
803346         
803346 F0                MOVX    @DPTR,A
803347 7B00              MOV     R3,#?C?XDATASEG
803349 7A04              MOV     R2,#HIGH DisplayBuffer
80334B 796B              MOV     R1,#LOW DisplayBuffer
80334D A512800949        ECALL   _sprintf
803352 901595            MOV     DPTR,#i
803355 EF                MOV     A,R7
803356 F0                MOVX    @DPTR,A
 2869: 							CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2870: 					break;		
 2871: 				}					
803357         ?C0618?MAINFLOW:
 2872: 			
 2873: 				DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
803357 D21A              SETB    ?_DisplayStr?BIT
803359 7B00              MOV     R3,#?C?XDATASEG
80335B 7A04              MOV     R2,#HIGH DisplayBuffer
80335D 796B              MOV     R1,#LOW DisplayBuffer
80335F 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
803362 A5128007B6        ECALL   ?C?PSTXDATA
803367 901595            MOV     DPTR,#i
80336A E0                MOVX    A,@DPTR
80336B 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80336E F0                MOVX    @DPTR,A
80336F 7D01              MOV     R5,#01H
803371 E4                CLR     A
803372 FF                MOV     R7,A
803373 A512808062        ECALL   _DisplayStr
 2874: 				WaitForWork( 1500 , NULL );
803378 E4                CLR     A
803379 7FDC              MOV     R7,#0DCH
80337B 7E05              MOV     R6,#05H
80337D A512807B35        ECALL   ?L?COM000D
 2875: 			}
803382         ?C0617?MAINFLOW:
 2876: 			return 0;
803382 7F00              MOV     R7,#00H
803384 023646            LJMP    ?C0597?MAINFLOW
 2877: 		}		
803387         ?C0605?MAINFLOW:
 2878: 		else
 2879: 		{
 2880: 			//已无货道可以服务了，直接找零
 2881: 			if( IsCanChange() == 1 )
803387 A512809F27        ECALL   IsCanChange
80338C EF                MOV     A,R7
80338D 6401              XRL     A,#01H
80338F 6003              JZ      $ + 5H
803391 0234EC            LJMP    ?C0623?MAINFLOW
 2882: 			{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 69


 2883: 				i = 0;
803394 901595            MOV     DPTR,#i
803397 F0                MOVX    @DPTR,A
 2884: 				ClearDisplayLine( 1 );
803398 7F01              MOV     R7,#01H
80339A A5128087BB        ECALL   _ClearDisplayLine
 2885: 				///////////////
 2886: 				memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
80339F 7E00              MOV     R6,#00H
8033A1 7F14              MOV     R7,#014H
8033A3 7D00              MOV     R5,#00H
8033A5 7B00              MOV     R3,#?C?XDATASEG
8033A7 7A04              MOV     R2,#HIGH DisplayBuffer
8033A9 796B              MOV     R1,#LOW DisplayBuffer
8033AB A5128008A6        ECALL   ?C?MEMSET
 2887: 				switch( SystemParameter.curUnit )
8033B0 900466            MOV     DPTR,#SystemParameter+048H
8033B3 E0                MOVX    A,@DPTR
8033B4 FE                MOV     R6,A
8033B5 A3                INC     DPTR
8033B6 E0                MOVX    A,@DPTR
8033B7 FF                MOV     R7,A
8033B8 EE                MOV     A,R6
8033B9 6003              JZ      $ + 5H
8033BB 0234C1            LJMP    ?C0624?MAINFLOW
8033BE EF                MOV     A,R7
8033BF 24F6              ADD     A,#0F6H
8033C1 603D              JZ      ?C0626?MAINFLOW
8033C3 24A6              ADD     A,#0A6H
8033C5 7003              JNZ     $ + 5H
8033C7 023459            LJMP    ?C0627?MAINFLOW
8033CA 2463              ADD     A,#063H
8033CC 6003              JZ      $ + 5H
8033CE 0234C1            LJMP    ?C0624?MAINFLOW
 2888: 				{
 2889: 					case 1:
8033D1         ?C0625?MAINFLOW:
 2890: 						i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
8033D1 7B80              MOV     R3,#BYTE2 0800430H
8033D3 7A04              MOV     R2,#HIGH 0800430H
8033D5 7930              MOV     R1,#LOW 0800430H
8033D7 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8033DA A5128007B6        ECALL   ?C?PSTXDATA
8033DF 90051D            MOV     DPTR,#DispInformationTable+0ACH
8033E2 A5128007C0        ECALL   ?C?PLDCODE
8033E7 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8033EA A5128007B6        ECALL   ?C?PSTXDATA
8033EF 900B1F            MOV     DPTR,#CurrentPayed
8033F2 E0                MOVX    A,@DPTR
8033F3 FF                MOV     R7,A
8033F4 A3                INC     DPTR
8033F5 E0                MOVX    A,@DPTR
8033F6 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
8033F9 CF                XCH     A,R7
8033FA F0                MOVX    @DPTR,A
8033FB A3                INC     DPTR
8033FC EF                MOV     A,R7
 2891: 					break;				
8033FD 0234B0            LJMP    ?C1075?MAINFLOW
 2892: 					case 10:
803400         ?C0626?MAINFLOW:
 2893: 						i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
803400 7B80              MOV     R3,#BYTE2 080043FH
803402 7A04              MOV     R2,#HIGH 080043FH
803404 793F              MOV     R1,#LOW 080043FH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 70


803406 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803409 A5128007B6        ECALL   ?C?PSTXDATA
80340E 90051D            MOV     DPTR,#DispInformationTable+0ACH
803411 A5128007C0        ECALL   ?C?PLDCODE
803416 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803419 A5128007B6        ECALL   ?C?PSTXDATA
80341E 900466            MOV     DPTR,#SystemParameter+048H
803421 E0                MOVX    A,@DPTR
803422 FA                MOV     R2,A
803423 A3                INC     DPTR
803424 E0                MOVX    A,@DPTR
803425 FB                MOV     R3,A
803426 900B1F            MOV     DPTR,#CurrentPayed
803429 E0                MOVX    A,@DPTR
80342A FE                MOV     R6,A
80342B A3                INC     DPTR
80342C E0                MOVX    A,@DPTR
80342D FF                MOV     R7,A
80342E AD03              MOV     R5,AR3
803430 AC02              MOV     R4,AR2
803432 A51280056C        ECALL   ?C?UIDIV
803437 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80343A EE                MOV     A,R6
80343B F0                MOVX    @DPTR,A
80343C A3                INC     DPTR
80343D EF                MOV     A,R7
80343E F0                MOVX    @DPTR,A
80343F 900B1F            MOV     DPTR,#CurrentPayed
803442 E0                MOVX    A,@DPTR
803443 FE                MOV     R6,A
803444 A3                INC     DPTR
803445 E0                MOVX    A,@DPTR
803446 FF                MOV     R7,A
803447 AD03              MOV     R5,AR3
803449 AC02              MOV     R4,AR2
80344B A51280056C        ECALL   ?C?UIDIV
803450 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
803453 EC                MOV     A,R4
803454 F0                MOVX    @DPTR,A
803455 A3                INC     DPTR
803456 ED                MOV     A,R5
803457         
 2894: 							CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2895: 					break;
803457 8057              SJMP    ?C1075?MAINFLOW
 2896: 					case 100:
803459         ?C0627?MAINFLOW:
 2897: 						i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
803459 7B80              MOV     R3,#BYTE2 0800435H
80345B 7A04              MOV     R2,#HIGH 0800435H
80345D 7935              MOV     R1,#LOW 0800435H
80345F 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803462 A5128007B6        ECALL   ?C?PSTXDATA
803467 90051D            MOV     DPTR,#DispInformationTable+0ACH
80346A A5128007C0        ECALL   ?C?PLDCODE
80346F 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803472 A5128007B6        ECALL   ?C?PSTXDATA
803477 900466            MOV     DPTR,#SystemParameter+048H
80347A E0                MOVX    A,@DPTR
80347B FA                MOV     R2,A
80347C A3                INC     DPTR
80347D E0                MOVX    A,@DPTR
80347E FB                MOV     R3,A
80347F 900B1F            MOV     DPTR,#CurrentPayed
803482 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 71


803483 FE                MOV     R6,A
803484 A3                INC     DPTR
803485 E0                MOVX    A,@DPTR
803486 FF                MOV     R7,A
803487 AD03              MOV     R5,AR3
803489 AC02              MOV     R4,AR2
80348B A51280056C        ECALL   ?C?UIDIV
803490 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
803493 EE                MOV     A,R6
803494 F0                MOVX    @DPTR,A
803495 A3                INC     DPTR
803496 EF                MOV     A,R7
803497 F0                MOVX    @DPTR,A
803498 900B1F            MOV     DPTR,#CurrentPayed
80349B E0                MOVX    A,@DPTR
80349C FE                MOV     R6,A
80349D A3                INC     DPTR
80349E E0                MOVX    A,@DPTR
80349F FF                MOV     R7,A
8034A0 AD03              MOV     R5,AR3
8034A2 AC02              MOV     R4,AR2
8034A4 A51280056C        ECALL   ?C?UIDIV
8034A9 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
8034AC EC                MOV     A,R4
8034AD F0                MOVX    @DPTR,A
8034AE A3                INC     DPTR
8034AF ED                MOV     A,R5
8034B0         
8034B0 F0                MOVX    @DPTR,A
8034B1 7B00              MOV     R3,#?C?XDATASEG
8034B3 7A04              MOV     R2,#HIGH DisplayBuffer
8034B5 796B              MOV     R1,#LOW DisplayBuffer
8034B7 A512800949        ECALL   _sprintf
8034BC 901595            MOV     DPTR,#i
8034BF EF                MOV     A,R7
8034C0 F0                MOVX    @DPTR,A
 2898: 							CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2899: 					break;		
 2900: 				}			
8034C1         ?C0624?MAINFLOW:
 2901: 				DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
8034C1 D21A              SETB    ?_DisplayStr?BIT
8034C3 7B00              MOV     R3,#?C?XDATASEG
8034C5 7A04              MOV     R2,#HIGH DisplayBuffer
8034C7 796B              MOV     R1,#LOW DisplayBuffer
8034C9 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8034CC A5128007B6        ECALL   ?C?PSTXDATA
8034D1 901595            MOV     DPTR,#i
8034D4 E0                MOVX    A,@DPTR
8034D5 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8034D8 F0                MOVX    @DPTR,A
8034D9 7D01              MOV     R5,#01H
8034DB E4                CLR     A
8034DC FF                MOV     R7,A
8034DD A512808062        ECALL   _DisplayStr
 2902: 				WaitForWork( 1500 , NULL );
8034E2 E4                CLR     A
8034E3 7FDC              MOV     R7,#0DCH
8034E5 7E05              MOV     R6,#05H
8034E7 A512807B35        ECALL   ?L?COM000D
 2903: 			}
8034EC         ?C0623?MAINFLOW:
 2904: 			return 0;
8034EC 7F00              MOV     R7,#00H
8034EE 023646            LJMP    ?C0597?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 72


 2905: 		}		
 2906: 	}
8034F1         ?C0604?MAINFLOW:
 2907: 	else  //直接找零
 2908: 	{
 2909: 		if( IsCanChange() == 1 )
8034F1 A512809F27        ECALL   IsCanChange
8034F6 EF                MOV     A,R7
8034F7 6401              XRL     A,#01H
8034F9 6003              JZ      $ + 5H
8034FB 023644            LJMP    ?C0629?MAINFLOW
 2910: 		{
 2911: 			i = 0;
8034FE 901595            MOV     DPTR,#i
803501 F0                MOVX    @DPTR,A
 2912: 			ClearDisplayLine( 1 );			
803502 7F01              MOV     R7,#01H
803504 A5128087BB        ECALL   _ClearDisplayLine
 2913: 			memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
803509 7E00              MOV     R6,#00H
80350B 7F14              MOV     R7,#014H
80350D 7D00              MOV     R5,#00H
80350F 7B00              MOV     R3,#?C?XDATASEG
803511 7A04              MOV     R2,#HIGH DisplayBuffer
803513 796B              MOV     R1,#LOW DisplayBuffer
803515 A5128008A6        ECALL   ?C?MEMSET
 2914: 			switch( SystemParameter.curUnit )
80351A 900466            MOV     DPTR,#SystemParameter+048H
80351D E0                MOVX    A,@DPTR
80351E FE                MOV     R6,A
80351F A3                INC     DPTR
803520 E0                MOVX    A,@DPTR
803521 FF                MOV     R7,A
803522 EE                MOV     A,R6
803523 6003              JZ      $ + 5H
803525 02362B            LJMP    ?C0630?MAINFLOW
803528 EF                MOV     A,R7
803529 24F6              ADD     A,#0F6H
80352B 603D              JZ      ?C0632?MAINFLOW
80352D 24A6              ADD     A,#0A6H
80352F 7003              JNZ     $ + 5H
803531 0235C3            LJMP    ?C0633?MAINFLOW
803534 2463              ADD     A,#063H
803536 6003              JZ      $ + 5H
803538 02362B            LJMP    ?C0630?MAINFLOW
 2915: 			{
 2916: 				case 1:
80353B         ?C0631?MAINFLOW:
 2917: 					i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
80353B 7B80              MOV     R3,#BYTE2 0800430H
80353D 7A04              MOV     R2,#HIGH 0800430H
80353F 7930              MOV     R1,#LOW 0800430H
803541 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803544 A5128007B6        ECALL   ?C?PSTXDATA
803549 90051D            MOV     DPTR,#DispInformationTable+0ACH
80354C A5128007C0        ECALL   ?C?PLDCODE
803551 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803554 A5128007B6        ECALL   ?C?PSTXDATA
803559 900B1F            MOV     DPTR,#CurrentPayed
80355C E0                MOVX    A,@DPTR
80355D FF                MOV     R7,A
80355E A3                INC     DPTR
80355F E0                MOVX    A,@DPTR
803560 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
803563 CF                XCH     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 73


803564 F0                MOVX    @DPTR,A
803565 A3                INC     DPTR
803566 EF                MOV     A,R7
 2918: 				break;				
803567 02361A            LJMP    ?C1077?MAINFLOW
 2919: 				case 10:
80356A         ?C0632?MAINFLOW:
 2920: 					i = sprintf( DisplayBuffer, "%s%u.%u", DispInformationTable[STR_CHANGE].str,
80356A 7B80              MOV     R3,#BYTE2 080043FH
80356C 7A04              MOV     R2,#HIGH 080043FH
80356E 793F              MOV     R1,#LOW 080043FH
803570 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803573 A5128007B6        ECALL   ?C?PSTXDATA
803578 90051D            MOV     DPTR,#DispInformationTable+0ACH
80357B A5128007C0        ECALL   ?C?PLDCODE
803580 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803583 A5128007B6        ECALL   ?C?PSTXDATA
803588 900466            MOV     DPTR,#SystemParameter+048H
80358B E0                MOVX    A,@DPTR
80358C FA                MOV     R2,A
80358D A3                INC     DPTR
80358E E0                MOVX    A,@DPTR
80358F FB                MOV     R3,A
803590 900B1F            MOV     DPTR,#CurrentPayed
803593 E0                MOVX    A,@DPTR
803594 FE                MOV     R6,A
803595 A3                INC     DPTR
803596 E0                MOVX    A,@DPTR
803597 FF                MOV     R7,A
803598 AD03              MOV     R5,AR3
80359A AC02              MOV     R4,AR2
80359C A51280056C        ECALL   ?C?UIDIV
8035A1 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
8035A4 EE                MOV     A,R6
8035A5 F0                MOVX    @DPTR,A
8035A6 A3                INC     DPTR
8035A7 EF                MOV     A,R7
8035A8 F0                MOVX    @DPTR,A
8035A9 900B1F            MOV     DPTR,#CurrentPayed
8035AC E0                MOVX    A,@DPTR
8035AD FE                MOV     R6,A
8035AE A3                INC     DPTR
8035AF E0                MOVX    A,@DPTR
8035B0 FF                MOV     R7,A
8035B1 AD03              MOV     R5,AR3
8035B3 AC02              MOV     R4,AR2
8035B5 A51280056C        ECALL   ?C?UIDIV
8035BA 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
8035BD EC                MOV     A,R4
8035BE F0                MOVX    @DPTR,A
8035BF A3                INC     DPTR
8035C0 ED                MOV     A,R5
8035C1         
 2921: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2922: 				break;
8035C1 8057              SJMP    ?C1077?MAINFLOW
 2923: 				case 100:
8035C3         ?C0633?MAINFLOW:
 2924: 					i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
8035C3 7B80              MOV     R3,#BYTE2 0800435H
8035C5 7A04              MOV     R2,#HIGH 0800435H
8035C7 7935              MOV     R1,#LOW 0800435H
8035C9 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8035CC A5128007B6        ECALL   ?C?PSTXDATA
8035D1 90051D            MOV     DPTR,#DispInformationTable+0ACH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 74


8035D4 A5128007C0        ECALL   ?C?PLDCODE
8035D9 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8035DC A5128007B6        ECALL   ?C?PSTXDATA
8035E1 900466            MOV     DPTR,#SystemParameter+048H
8035E4 E0                MOVX    A,@DPTR
8035E5 FA                MOV     R2,A
8035E6 A3                INC     DPTR
8035E7 E0                MOVX    A,@DPTR
8035E8 FB                MOV     R3,A
8035E9 900B1F            MOV     DPTR,#CurrentPayed
8035EC E0                MOVX    A,@DPTR
8035ED FE                MOV     R6,A
8035EE A3                INC     DPTR
8035EF E0                MOVX    A,@DPTR
8035F0 FF                MOV     R7,A
8035F1 AD03              MOV     R5,AR3
8035F3 AC02              MOV     R4,AR2
8035F5 A51280056C        ECALL   ?C?UIDIV
8035FA 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
8035FD EE                MOV     A,R6
8035FE F0                MOVX    @DPTR,A
8035FF A3                INC     DPTR
803600 EF                MOV     A,R7
803601 F0                MOVX    @DPTR,A
803602 900B1F            MOV     DPTR,#CurrentPayed
803605 E0                MOVX    A,@DPTR
803606 FE                MOV     R6,A
803607 A3                INC     DPTR
803608 E0                MOVX    A,@DPTR
803609 FF                MOV     R7,A
80360A AD03              MOV     R5,AR3
80360C AC02              MOV     R4,AR2
80360E A51280056C        ECALL   ?C?UIDIV
803613 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
803616 EC                MOV     A,R4
803617 F0                MOVX    @DPTR,A
803618 A3                INC     DPTR
803619 ED                MOV     A,R5
80361A         
80361A F0                MOVX    @DPTR,A
80361B 7B00              MOV     R3,#?C?XDATASEG
80361D 7A04              MOV     R2,#HIGH DisplayBuffer
80361F 796B              MOV     R1,#LOW DisplayBuffer
803621 A512800949        ECALL   _sprintf
803626 901595            MOV     DPTR,#i
803629 EF                MOV     A,R7
80362A F0                MOVX    @DPTR,A
 2925: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 2926: 				break;		
 2927: 			}											
80362B         ?C0630?MAINFLOW:
 2928: 			DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
80362B D21A              SETB    ?_DisplayStr?BIT
80362D 7B00              MOV     R3,#?C?XDATASEG
80362F 7A04              MOV     R2,#HIGH DisplayBuffer
803631 796B              MOV     R1,#LOW DisplayBuffer
803633 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
803636 A5128007B6        ECALL   ?C?PSTXDATA
80363B 901595            MOV     DPTR,#i
80363E E0                MOVX    A,@DPTR
80363F A512807B23        ECALL   ?L?COM000A
 2929: 			WaitForWork( 2000 , NULL );
 2930: 		}
803644         ?C0629?MAINFLOW:
 2931: 		return 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 75


803644 7F00              MOV     R7,#00H
 2932: 	}
 2933: }
803646         ?C0597?MAINFLOW:
803646 A522              ERET    
----- FUNCTION ReBuy (END) -------


----- FUNCTION ?L?COM0023 (BEGIN) -----
803648 900B1F            MOV     DPTR,#CurrentPayed
80364B E0                MOVX    A,@DPTR
80364C FF                MOV     R7,A
80364D A3                INC     DPTR
80364E E0                MOVX    A,@DPTR
80364F 900469            MOV     DPTR,#CurrentDispenseCoin
803652 CF                XCH     A,R7
803653 F0                MOVX    @DPTR,A
803654 A3                INC     DPTR
803655 EF                MOV     A,R7
803656 F0                MOVX    @DPTR,A
803657 E4                CLR     A
803658 900B1F            MOV     DPTR,#CurrentPayed
80365B F0                MOVX    @DPTR,A
80365C A3                INC     DPTR
80365D F0                MOVX    @DPTR,A
----- FUNCTION DispenseCoin (BEGIN) -----
 FILE: 'mainflow.c'
 2948: u_char DispenseCoin( )
 2949: {
 2950: 	u_char xdata tHopper1 = 0;
 2951: 	u_char xdata tHopper2 = 0;
80365E E4                CLR     A
80365F 901597            MOV     DPTR,#tHopper1
803662 F0                MOVX    @DPTR,A
 2952: 	u_char xdata tHopper3 = 0;
803663 A3                INC     DPTR
803664 F0                MOVX    @DPTR,A
 2953: 	u_char xdata ret = 0 ;
803665 A3                INC     DPTR
803666 F0                MOVX    @DPTR,A
 2954: 	uint xdata outMoney = 0;
803667 A3                INC     DPTR
803668 F0                MOVX    @DPTR,A
 2955: 	u_char xdata i = 0;
803669 A3                INC     DPTR
80366A F0                MOVX    @DPTR,A
80366B A3                INC     DPTR
80366C F0                MOVX    @DPTR,A
 2956: 	u_char xdata coin1flag = 1;
80366D A3                INC     DPTR
80366E F0                MOVX    @DPTR,A
 2957: 	u_char xdata coin2flag = 1;
80366F A3                INC     DPTR
803670 04                INC     A
803671 F0                MOVX    @DPTR,A
 2958: 	u_char xdata coin3flag = 1;
803672 A3                INC     DPTR
803673 F0                MOVX    @DPTR,A
 2959: 	u_char xdata m_Errorflag = 0;
803674 A3                INC     DPTR
803675 F0                MOVX    @DPTR,A
 2960: 
803676 E4                CLR     A
803677 A3                INC     DPTR
803678 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 76


 2961: 	Trace( "\n DispenseCoin" );
 2962: 	Trace( "\n CurrentDispenseCoin = %d", CurrentDispenseCoin );		
 2963: 
 2964: 	if( ( IsCanChange() != 1 ) && ( ColnumIsCanServer() == 1 ) )
803679 A512809F27        ECALL   IsCanChange
80367E EF                MOV     A,R7
80367F 6401              XRL     A,#01H
803681 600D              JZ      ?C0640?MAINFLOW
803683 A512809F5F        ECALL   ColnumIsCanServer
803688 BF0105            CJNE    R7,#01H,?C0640?MAINFLOW
 2965: 		return 0;
80368B 7F00              MOV     R7,#00H
80368D 023E90            LJMP    ?C0639?MAINFLOW
803690         ?C0640?MAINFLOW:
 2966: 	while( 1 )
 2967: 	{
 2968: 		tHopper1 = 0;
803690 E4                CLR     A
803691 901597            MOV     DPTR,#tHopper1
803694 F0                MOVX    @DPTR,A
 2969: 		tHopper2 = 0;
803695 A3                INC     DPTR
803696 F0                MOVX    @DPTR,A
 2970: 		tHopper3 = 0;
803697 A3                INC     DPTR
803698 F0                MOVX    @DPTR,A
 2971: 		if( CurrentDispenseCoin == 0 )
803699 900469            MOV     DPTR,#CurrentDispenseCoin
80369C E0                MOVX    A,@DPTR
80369D FE                MOV     R6,A
80369E A3                INC     DPTR
80369F E0                MOVX    A,@DPTR
8036A0 FF                MOV     R7,A
8036A1 4E                ORL     A,R6
8036A2 7007              JNZ     ?C0642?MAINFLOW
 2972: 		{
 2973: 			m_Errorflag = 0;
8036A4 9015A1            MOV     DPTR,#m_Errorflag
8036A7 F0                MOVX    @DPTR,A
 2974: 			break;
8036A8 023CB6            LJMP    ?C0641?MAINFLOW
 2975: 		}
8036AB         ?C0642?MAINFLOW:
 2976: 		ret = Cal( CurrentDispenseCoin , &tHopper1 , &tHopper2, &tHopper3 );
8036AB 7B00              MOV     R3,#?C?XDATASEG
8036AD 7A15              MOV     R2,#HIGH tHopper2
8036AF 7998              MOV     R1,#LOW tHopper2
8036B1 9015A7            MOV     DPTR,#?_Cal?BYTE+05H
8036B4 A5128007B6        ECALL   ?C?PSTXDATA
8036B9 7A15              MOV     R2,#HIGH tHopper3
8036BB 09                INC     R1
8036BC 9015AA            MOV     DPTR,#?_Cal?BYTE+08H
8036BF A5128007B6        ECALL   ?C?PSTXDATA
8036C4 7A15              MOV     R2,#HIGH tHopper1
8036C6 7997              MOV     R1,#LOW tHopper1
8036C8 A5128098DB        ECALL   _Cal
8036CD 90159A            MOV     DPTR,#ret
8036D0 EF                MOV     A,R7
8036D1 F0                MOVX    @DPTR,A
 2977: 		if ( ret ) 
8036D2 7003              JNZ     $ + 5H
8036D4 02376A            LJMP    ?C0643?MAINFLOW
 2978: 		{ 		
 2979: 			for( ret = 0; ret < 3; ret ++ )
8036D7 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 77


8036D8 F0                MOVX    @DPTR,A
8036D9         ?C0644?MAINFLOW:
8036D9 90159A            MOV     DPTR,#ret
8036DC E0                MOVX    A,@DPTR
8036DD FF                MOV     R7,A
8036DE C3                CLR     C
8036DF 9403              SUBB    A,#03H
8036E1 501D              JNC     ?C0645?MAINFLOW
 2980: 			{
 2981: 				if( HopperSetList[ret].price == 0 )
8036E3 EF                MOV     A,R7
8036E4 25E0              ADD     A,ACC
8036E6 25E0              ADD     A,ACC
8036E8 24DF              ADD     A,#LOW HopperSetList
8036EA F582              MOV     DPL,A
8036EC E4                CLR     A
8036ED 340A              ADDC    A,#HIGH HopperSetList
8036EF F583              MOV     DPH,A
8036F1 E0                MOVX    A,@DPTR
8036F2 FE                MOV     R6,A
8036F3 A3                INC     DPTR
8036F4 E0                MOVX    A,@DPTR
8036F5 4E                ORL     A,R6
8036F6 6008              JZ      ?C0645?MAINFLOW
 2982: 					break;
 2983: 			}
8036F8         ?C0646?MAINFLOW:
8036F8 90159A            MOV     DPTR,#ret
8036FB E0                MOVX    A,@DPTR
8036FC 04                INC     A
8036FD F0                MOVX    @DPTR,A
8036FE 80D9              SJMP    ?C0644?MAINFLOW
803700         ?C0645?MAINFLOW:
 2984: 			if( ret == 0 )
803700 90159A            MOV     DPTR,#ret
803703 E0                MOVX    A,@DPTR
803704 FF                MOV     R7,A
803705 7019              JNZ     ?C0648?MAINFLOW
 2985: 			{
 2986: 				m_Errorflag = 1;
803707 9015A1            MOV     DPTR,#m_Errorflag
80370A 04                INC     A
80370B F0                MOVX    @DPTR,A
 2987: 				SystemParameter.NotOutMax = CurrentDispenseCoin;
80370C 900469            MOV     DPTR,#CurrentDispenseCoin
80370F E0                MOVX    A,@DPTR
803710 FD                MOV     R5,A
803711 A3                INC     DPTR
803712 E0                MOVX    A,@DPTR
803713 90042D            MOV     DPTR,#SystemParameter+0FH
803716 CD                XCH     A,R5
803717 F0                MOVX    @DPTR,A
803718 A3                INC     DPTR
803719 ED                MOV     A,R5
80371A F0                MOVX    @DPTR,A
 2988: 				IOUFlag = 1;
80371B D22B              SETB    IOUFlag
 2989: 				break;
80371D 023CB6            LJMP    ?C0641?MAINFLOW
 2990: 			}
803720         ?C0648?MAINFLOW:
 2991: 			if( CurrentDispenseCoin >= HopperSetList[ret - 1].price )//找零器坏,无法配币
803720 EF                MOV     A,R7
803721 25E0              ADD     A,ACC
803723 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 78


803725 24DB              ADD     A,#LOW HopperSetList-04H
803727 F582              MOV     DPL,A
803729 E4                CLR     A
80372A 340A              ADDC    A,#HIGH HopperSetList-04H
80372C F583              MOV     DPH,A
80372E E0                MOVX    A,@DPTR
80372F FE                MOV     R6,A
803730 A3                INC     DPTR
803731 E0                MOVX    A,@DPTR
803732 FF                MOV     R7,A
803733 900469            MOV     DPTR,#CurrentDispenseCoin
803736 E0                MOVX    A,@DPTR
803737 FC                MOV     R4,A
803738 A3                INC     DPTR
803739 E0                MOVX    A,@DPTR
80373A FD                MOV     R5,A
80373B C3                CLR     C
80373C 9F                SUBB    A,R7
80373D EC                MOV     A,R4
80373E 9E                SUBB    A,R6
80373F 4012              JC      ?C0649?MAINFLOW
 2992: 			{
 2993: 				m_Errorflag = 1;
803741 9015A1            MOV     DPTR,#m_Errorflag
803744 7401              MOV     A,#01H
803746 F0                MOVX    @DPTR,A
 2994: 				SystemParameter.NotOutMax = CurrentDispenseCoin;
803747 90042D            MOV     DPTR,#SystemParameter+0FH
80374A EC                MOV     A,R4
80374B F0                MOVX    @DPTR,A
80374C A3                INC     DPTR
80374D ED                MOV     A,R5
80374E F0                MOVX    @DPTR,A
 2995: 				IOUFlag = 1;
80374F D22B              SETB    IOUFlag
 2996: 			}
803751 800D              SJMP    ?C0650?MAINFLOW
803753         ?C0649?MAINFLOW:
 2997: 			else
 2998: 			{
 2999: 				SystemParameter.NotOutMax = 0;
803753 E4                CLR     A
803754 90042D            MOV     DPTR,#SystemParameter+0FH
803757 F0                MOVX    @DPTR,A
803758 A3                INC     DPTR
803759 F0                MOVX    @DPTR,A
 3000: 				IOUFlag = 0;
80375A C22B              CLR     IOUFlag
 3001: 				m_Errorflag = 0;
80375C 9015A1            MOV     DPTR,#m_Errorflag
80375F F0                MOVX    @DPTR,A
 3002: 			}
803760         ?C0650?MAINFLOW:
 3003: 			CurrentDispenseCoin = 0;
803760 E4                CLR     A
803761 900469            MOV     DPTR,#CurrentDispenseCoin
803764 F0                MOVX    @DPTR,A
803765 A3                INC     DPTR
803766 F0                MOVX    @DPTR,A
 3004: 			break;
803767 023CB6            LJMP    ?C0641?MAINFLOW
 3005: 		}
80376A         ?C0643?MAINFLOW:
 3006: 		outMoney = 0;
80376A E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 79


80376B 90159B            MOV     DPTR,#outMoney
80376E F0                MOVX    @DPTR,A
80376F A3                INC     DPTR
803770 F0                MOVX    @DPTR,A
 3007: 		if( tHopper1 )
803771 901597            MOV     DPTR,#tHopper1
803774 E0                MOVX    A,@DPTR
803775 FF                MOV     R7,A
803776 7003              JNZ     $ + 5H
803778 023828            LJMP    ?C0651?MAINFLOW
 3008: 		{	
 3009: 			Trace( "\n tHopper1 = %bu", tHopper1 );
 3010: 			if ( HopperOutCoin( tHopper1, 1, &Hopper1 ) == 0 )		
80377B 7A23              MOV     R2,#HIGH Hopper1
80377D 7B75              MOV     R3,#LOW Hopper1
80377F 7D01              MOV     R5,#01H
803781 A512807F76        ECALL   _HopperOutCoin
803786 EF                MOV     A,R7
803787 7076              JNZ     ?C0652?MAINFLOW
 3011: 			{
 3012: 				//出币命令发送成功
 3013: 				WaitForWork( 1000 , NULL );					
803789 7FE8              MOV     R7,#0E8H
80378B 7E03              MOV     R6,#03H
80378D A512807B35        ECALL   ?L?COM000D
 3014: 				//查询出币结果	
 3015: 				ret = 0;
803792 E4                CLR     A
803793 90159A            MOV     DPTR,#ret
803796 F0                MOVX    @DPTR,A
803797         ?C0653?MAINFLOW:
 3016: 				while( ret < 2 )
803797 90159A            MOV     DPTR,#ret
80379A E0                MOVX    A,@DPTR
80379B C3                CLR     C
80379C 9402              SUBB    A,#02H
80379E 5054              JNC     ?C0654?MAINFLOW
 3017: 				{
 3018: 					if( GetHardWareDeviceState( 1, &Hopper1 ) != 1 ) //更新状态成功
8037A0 7C23              MOV     R4,#HIGH Hopper1
8037A2 7D75              MOV     R5,#LOW Hopper1
8037A4 7F01              MOV     R7,#01H
8037A6 A512807EB5        ECALL   _GetHardWareDeviceState
8037AB EF                MOV     A,R7
8037AC 6401              XRL     A,#01H
8037AE 6032              JZ      ?C0655?MAINFLOW
 3019: 					{
 3020: 						if( Hopper1.State & 0x50 ) //红外线传感有问题或系统故障
8037B0 902378            MOV     DPTR,#Hopper1+03H
8037B3 E0                MOVX    A,@DPTR
8037B4 FD                MOV     R5,A
8037B5 5450              ANL     A,#050H
8037B7 6007              JZ      ?C0656?MAINFLOW
 3021: 							coin1flag |= 4;//硬件故障			
8037B9 90159E            MOV     DPTR,#coin1flag
8037BC E0                MOVX    A,@DPTR
8037BD 4404              ORL     A,#04H
8037BF F0                MOVX    @DPTR,A
8037C0         ?C0656?MAINFLOW:
 3022: 						if ( Hopper1.State & 0x28 )//实际无币或光测无币
8037C0 ED                MOV     A,R5
8037C1 5428              ANL     A,#028H
8037C3 6007              JZ      ?C0657?MAINFLOW
 3023: 							coin1flag |= 2;//币不足						
8037C5 90159E            MOV     DPTR,#coin1flag
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 80


8037C8 E0                MOVX    A,@DPTR
8037C9 4402              ORL     A,#02H
8037CB F0                MOVX    @DPTR,A
8037CC         ?C0657?MAINFLOW:
 3024: 						outMoney = HopperGetCoinOut( 1 );
8037CC 7F01              MOV     R7,#01H
8037CE A512812107        ECALL   _HopperGetCoinOut
8037D3 90159B            MOV     DPTR,#outMoney
8037D6 EE                MOV     A,R6
8037D7 F0                MOVX    @DPTR,A
8037D8 A3                INC     DPTR
8037D9 EF                MOV     A,R7
8037DA F0                MOVX    @DPTR,A
 3025: 						Trace( "\n outMoney1 = %d", outMoney );
 3026: 					//	if( outMoney == 0 )								
 3027: 					//		coin1flag = 3;//硬件		
 3028: 						ret = 0;
8037DB E4                CLR     A
8037DC 90159A            MOV     DPTR,#ret
8037DF F0                MOVX    @DPTR,A
 3029: 						break;
8037E0 8012              SJMP    ?C0654?MAINFLOW
 3030: 					}
8037E2         ?C0655?MAINFLOW:
 3031: 					else//查询状态超时
 3032: 					{
 3033: 						ret++;					
8037E2 90159A            MOV     DPTR,#ret
8037E5 E0                MOVX    A,@DPTR
8037E6 04                INC     A
8037E7 F0                MOVX    @DPTR,A
 3034: 						WaitForWork( 1000, NULL );
8037E8 E4                CLR     A
8037E9 7FE8              MOV     R7,#0E8H
8037EB 7E03              MOV     R6,#03H
8037ED A512807B35        ECALL   ?L?COM000D
 3035: 					}
 3036: 				}//while
8037F2 80A3              SJMP    ?C0653?MAINFLOW
8037F4         ?C0654?MAINFLOW:
 3037: 				if( ret >= 2 )
8037F4 90159A            MOV     DPTR,#ret
8037F7 E0                MOVX    A,@DPTR
8037F8 C3                CLR     C
8037F9 9402              SUBB    A,#02H
8037FB 4009              JC      ?C0660?MAINFLOW
 3038: 					coin1flag |= 4;
 3039: 			}
8037FD 8000              SJMP    ?C1078?MAINFLOW
8037FF         ?C0652?MAINFLOW:
 3040: 			else 		
 3041: 				coin1flag |= 4;
8037FF         
8037FF 90159E            MOV     DPTR,#coin1flag
803802 E0                MOVX    A,@DPTR
803803 4404              ORL     A,#04H
803805 F0                MOVX    @DPTR,A
803806         ?C0660?MAINFLOW:
 3042: 		   CurrentDispenseCoin = CurrentDispenseCoin - outMoney*SystemParameter.HopperCoinPrice1;
803806 90041F            MOV     DPTR,#SystemParameter+01H
803809 E0                MOVX    A,@DPTR
80380A FC                MOV     R4,A
80380B A3                INC     DPTR
80380C E0                MOVX    A,@DPTR
80380D FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 81


80380E 90159B            MOV     DPTR,#outMoney
803811 E0                MOVX    A,@DPTR
803812 FE                MOV     R6,A
803813 A3                INC     DPTR
803814 E0                MOVX    A,@DPTR
803815 FF                MOV     R7,A
803816 A512800559        ECALL   ?C?IMUL
80381B C3                CLR     C
80381C 90046A            MOV     DPTR,#CurrentDispenseCoin+01H
80381F E0                MOVX    A,@DPTR
803820 9F                SUBB    A,R7
803821 F0                MOVX    @DPTR,A
803822 900469            MOV     DPTR,#CurrentDispenseCoin
803825 E0                MOVX    A,@DPTR
803826 9E                SUBB    A,R6
803827 F0                MOVX    @DPTR,A
 3043: 		}
803828         ?C0651?MAINFLOW:
 3044: 		Trace( "\n coin1flag = %bu", coin1flag );
 3045: 		TradeCounter.Hopper1Num += outMoney;//出币枚数
803828 90159B            MOV     DPTR,#outMoney
80382B E0                MOVX    A,@DPTR
80382C FE                MOV     R6,A
80382D A3                INC     DPTR
80382E E0                MOVX    A,@DPTR
80382F FF                MOV     R7,A
803830 900B10            MOV     DPTR,#TradeCounter+024H
803833 EE                MOV     A,R6
803834 8FF0              MOV     B,R7
803836 A512800600        ECALL   ?C?IILDX
 3046: 		TradeCounter.Hopper1Sum += outMoney*SystemParameter.HopperCoinPrice1;//出币金额
80383B 900B04            MOV     DPTR,#TradeCounter+018H
80383E A51280073E        ECALL   ?C?LLDXDATA0
803843 C000              PUSH    AR0
803845 90041F            MOV     DPTR,#SystemParameter+01H
803848 E0                MOVX    A,@DPTR
803849 FC                MOV     R4,A
80384A A3                INC     DPTR
80384B E0                MOVX    A,@DPTR
80384C FD                MOV     R5,A
80384D 90159B            MOV     DPTR,#outMoney
803850 E0                MOVX    A,@DPTR
803851 FE                MOV     R6,A
803852 A3                INC     DPTR
803853 E0                MOVX    A,@DPTR
803854 FF                MOV     R7,A
803855 A512800559        ECALL   ?C?IMUL
80385A E4                CLR     A
80385B FC                MOV     R4,A
80385C FD                MOV     R5,A
80385D D000              POP     AR0
80385F A51280062E        ECALL   ?C?LADD
803864 900B04            MOV     DPTR,#TradeCounter+018H
803867 A512800792        ECALL   ?C?LSTXDATA
 3047: 		TradeCounter.ChangeSum += outMoney*SystemParameter.HopperCoinPrice1;//出币金额
80386C 900B00            MOV     DPTR,#TradeCounter+014H
80386F A51280073E        ECALL   ?C?LLDXDATA0
803874 C000              PUSH    AR0
803876 90041F            MOV     DPTR,#SystemParameter+01H
803879 E0                MOVX    A,@DPTR
80387A FC                MOV     R4,A
80387B A3                INC     DPTR
80387C E0                MOVX    A,@DPTR
80387D FD                MOV     R5,A
80387E 90159B            MOV     DPTR,#outMoney
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 82


803881 E0                MOVX    A,@DPTR
803882 FE                MOV     R6,A
803883 A3                INC     DPTR
803884 E0                MOVX    A,@DPTR
803885 FF                MOV     R7,A
803886 A512800559        ECALL   ?C?IMUL
80388B E4                CLR     A
80388C FC                MOV     R4,A
80388D FD                MOV     R5,A
80388E D000              POP     AR0
803890 A51280062E        ECALL   ?C?LADD
803895 900B00            MOV     DPTR,#TradeCounter+014H
803898 A512800792        ECALL   ?C?LSTXDATA
 3048: 		//出币不成功, 重新配币
 3049: 		if( coin1flag != 1 )
80389D 90159E            MOV     DPTR,#coin1flag
8038A0 E0                MOVX    A,@DPTR
8038A1 6401              XRL     A,#01H
8038A3 7003              JNZ     $ + 5H
8038A5 023932            LJMP    ?C0661?MAINFLOW
 3050: 		{
 3051: 		//	Trace( "\n outMoney1 = %d", outMoney );											
 3052: 			for( i = 0; i < 3; i ++ )
8038A8 E4                CLR     A
8038A9 90159D            MOV     DPTR,#i
8038AC F0                MOVX    @DPTR,A
8038AD         ?C0662?MAINFLOW:
8038AD 90159D            MOV     DPTR,#i
8038B0 E0                MOVX    A,@DPTR
8038B1 FF                MOV     R7,A
8038B2 C3                CLR     C
8038B3 9403              SUBB    A,#03H
8038B5 505F              JNC     ?C0663?MAINFLOW
 3053: 			{
 3054: 				if( HopperSetList[i].HopperIndex == 1)					
8038B7 EF                MOV     A,R7
8038B8 25E0              ADD     A,ACC
8038BA 25E0              ADD     A,ACC
8038BC 24E1              ADD     A,#LOW HopperSetList+02H
8038BE F582              MOV     DPL,A
8038C0 E4                CLR     A
8038C1 340A              ADDC    A,#HIGH HopperSetList+02H
8038C3 F583              MOV     DPH,A
8038C5 E0                MOVX    A,@DPTR
8038C6 6401              XRL     A,#01H
8038C8 7044              JNZ     ?C0664?MAINFLOW
 3055: 				{
 3056: 					if( coin1flag & 4 )					
8038CA 90159E            MOV     DPTR,#coin1flag
8038CD E0                MOVX    A,@DPTR
8038CE FF                MOV     R7,A
8038CF 30E208            JNB     ACC.2,?C0666?MAINFLOW
 3057: 						DeviceStatus.ChangeUnit1 = 1; 					
8038D2 900B18            MOV     DPTR,#DeviceStatus+02H
8038D5 7401              MOV     A,#01H
8038D7 F0                MOVX    @DPTR,A
8038D8 800A              SJMP    ?C0667?MAINFLOW
8038DA         ?C0666?MAINFLOW:
 3058: 					else if( coin1flag & 2 ) 					
8038DA EF                MOV     A,R7
8038DB 30E106            JNB     ACC.1,?C0667?MAINFLOW
 3059: 						DeviceStatus.ChangeUnit1 = 2; 						
8038DE 900B18            MOV     DPTR,#DeviceStatus+02H
8038E1 7402              MOV     A,#02H
8038E3 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 83


8038E4         ?C0667?MAINFLOW:
 3060: 					HopperSetList[i].HopperState = 2;
8038E4 90159D            MOV     DPTR,#i
8038E7 E0                MOVX    A,@DPTR
8038E8 25E0              ADD     A,ACC
8038EA 25E0              ADD     A,ACC
8038EC 24E2              ADD     A,#LOW HopperSetList+03H
8038EE F582              MOV     DPL,A
8038F0 E4                CLR     A
8038F1 340A              ADDC    A,#HIGH HopperSetList+03H
8038F3 F583              MOV     DPH,A
8038F5 7402              MOV     A,#02H
8038F7 F0                MOVX    @DPTR,A
 3061: 					if( ( i == GetMinHopper()) && ( DeviceStatus.ChangeUnit1 != 0 ) )
8038F8 A512809F04        ECALL   GetMinHopper
8038FD 90159D            MOV     DPTR,#i
803900 E0                MOVX    A,@DPTR
803901 B50712            CJNE    A,AR7,?C0663?MAINFLOW
803904 900B18            MOV     DPTR,#DeviceStatus+02H
803907 E0                MOVX    A,@DPTR
803908 600C              JZ      ?C0663?MAINFLOW
 3062: 						IsCanInCashFlag = 0;
80390A C226              CLR     IsCanInCashFlag
 3063: 					break;
80390C 8008              SJMP    ?C0663?MAINFLOW
 3064: 				}			
 3065: 			}			
80390E         ?C0664?MAINFLOW:
80390E 90159D            MOV     DPTR,#i
803911 E0                MOVX    A,@DPTR
803912 04                INC     A
803913 F0                MOVX    @DPTR,A
803914 8097              SJMP    ?C0662?MAINFLOW
803916         ?C0663?MAINFLOW:
 3066: 			coin1flag = 1;
803916 90159E            MOV     DPTR,#coin1flag
803919 7401              MOV     A,#01H
80391B F0                MOVX    @DPTR,A
 3067: 			if( outMoney < tHopper1 )
80391C 901597            MOV     DPTR,#tHopper1
80391F E0                MOVX    A,@DPTR
803920 FF                MOV     R7,A
803921 C3                CLR     C
803922 90159C            MOV     DPTR,#outMoney+01H
803925 E0                MOVX    A,@DPTR
803926 9F                SUBB    A,R7
803927 90159B            MOV     DPTR,#outMoney
80392A E0                MOVX    A,@DPTR
80392B 9400              SUBB    A,#00H
80392D 5003              JNC     $ + 5H
80392F 023690            LJMP    ?C0640?MAINFLOW
 3068: 				continue;
 3069: 		}
803932         ?C0661?MAINFLOW:
 3070: 		outMoney = 0;
803932 E4                CLR     A
803933 90159B            MOV     DPTR,#outMoney
803936 F0                MOVX    @DPTR,A
803937 A3                INC     DPTR
803938 F0                MOVX    @DPTR,A
 3071: 		if ( tHopper2 )
803939 901598            MOV     DPTR,#tHopper2
80393C E0                MOVX    A,@DPTR
80393D FF                MOV     R7,A
80393E 7003              JNZ     $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 84


803940 0239F0            LJMP    ?C0671?MAINFLOW
 3072: 		{		
 3073: 			Trace( "\n tHopper2 = %bu", tHopper2 );
 3074: 			if ( HopperOutCoin( tHopper2, 2, &Hopper2 ) == 0 )
803943 7A23              MOV     R2,#HIGH Hopper2
803945 7B8A              MOV     R3,#LOW Hopper2
803947 7D02              MOV     R5,#02H
803949 A512807F76        ECALL   _HopperOutCoin
80394E EF                MOV     A,R7
80394F 7076              JNZ     ?C0672?MAINFLOW
 3075: 			{	
 3076: 				////出币命令发送成功
 3077: 				WaitForWork( 1000 , NULL );					
803951 7FE8              MOV     R7,#0E8H
803953 7E03              MOV     R6,#03H
803955 A512807B35        ECALL   ?L?COM000D
 3078: 				ret = 0;
80395A E4                CLR     A
80395B 90159A            MOV     DPTR,#ret
80395E F0                MOVX    @DPTR,A
80395F         ?C0673?MAINFLOW:
 3079: 				while( ret < 2 )
80395F 90159A            MOV     DPTR,#ret
803962 E0                MOVX    A,@DPTR
803963 C3                CLR     C
803964 9402              SUBB    A,#02H
803966 5054              JNC     ?C0674?MAINFLOW
 3080: 				{
 3081: 					if( GetHardWareDeviceState( 2, &Hopper2 ) != 1 )
803968 7C23              MOV     R4,#HIGH Hopper2
80396A 7D8A              MOV     R5,#LOW Hopper2
80396C 7F02              MOV     R7,#02H
80396E A512807EB5        ECALL   _GetHardWareDeviceState
803973 EF                MOV     A,R7
803974 6401              XRL     A,#01H
803976 6032              JZ      ?C0675?MAINFLOW
 3082: 					{
 3083: 						//更新状态出功
 3084: 						if( Hopper2.State & 0x50 ) //红外线传感有问题或系统故障
803978 90238D            MOV     DPTR,#Hopper2+03H
80397B E0                MOVX    A,@DPTR
80397C FD                MOV     R5,A
80397D 5450              ANL     A,#050H
80397F 6007              JZ      ?C0676?MAINFLOW
 3085: 							coin2flag |= 4;//硬件故障						
803981 90159F            MOV     DPTR,#coin2flag
803984 E0                MOVX    A,@DPTR
803985 4404              ORL     A,#04H
803987 F0                MOVX    @DPTR,A
803988         ?C0676?MAINFLOW:
 3086: 						if( ( Hopper2.State & 0x28 ) )//实际无币或光测无币
803988 ED                MOV     A,R5
803989 5428              ANL     A,#028H
80398B 6007              JZ      ?C0677?MAINFLOW
 3087: 							coin2flag |= 2;//币不足						
80398D 90159F            MOV     DPTR,#coin2flag
803990 E0                MOVX    A,@DPTR
803991 4402              ORL     A,#02H
803993 F0                MOVX    @DPTR,A
803994         ?C0677?MAINFLOW:
 3088: 						outMoney = HopperGetCoinOut( 2 );
803994 7F02              MOV     R7,#02H
803996 A512812107        ECALL   _HopperGetCoinOut
80399B 90159B            MOV     DPTR,#outMoney
80399E EE                MOV     A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 85


80399F F0                MOVX    @DPTR,A
8039A0 A3                INC     DPTR
8039A1 EF                MOV     A,R7
8039A2 F0                MOVX    @DPTR,A
 3089: 						Trace( "\n outMoney2 = %d", outMoney );
 3090: 				//		if( outMoney == 0 )								
 3091: 				//			coin2flag = 3;
 3092: 						ret = 0;
8039A3 E4                CLR     A
8039A4 90159A            MOV     DPTR,#ret
8039A7 F0                MOVX    @DPTR,A
 3093: 						break;
8039A8 8012              SJMP    ?C0674?MAINFLOW
 3094: 					}
8039AA         ?C0675?MAINFLOW:
 3095: 					else
 3096: 					{
 3097: 						ret++;
8039AA 90159A            MOV     DPTR,#ret
8039AD E0                MOVX    A,@DPTR
8039AE 04                INC     A
8039AF F0                MOVX    @DPTR,A
 3098: 						WaitForWork( 1000, NULL );
8039B0 E4                CLR     A
8039B1 7FE8              MOV     R7,#0E8H
8039B3 7E03              MOV     R6,#03H
8039B5 A512807B35        ECALL   ?L?COM000D
 3099: 					}
 3100: 				}//while
8039BA 80A3              SJMP    ?C0673?MAINFLOW
8039BC         ?C0674?MAINFLOW:
 3101: 				if( ret >= 2 )
8039BC 90159A            MOV     DPTR,#ret
8039BF E0                MOVX    A,@DPTR
8039C0 C3                CLR     C
8039C1 9402              SUBB    A,#02H
8039C3 4009              JC      ?C0680?MAINFLOW
 3102: 					coin2flag |= 4;
 3103: 			}
8039C5 8000              SJMP    ?C1079?MAINFLOW
8039C7         ?C0672?MAINFLOW:
 3104: 			else		
 3105: 				coin2flag |= 4;				
8039C7         
8039C7 90159F            MOV     DPTR,#coin2flag
8039CA E0                MOVX    A,@DPTR
8039CB 4404              ORL     A,#04H
8039CD F0                MOVX    @DPTR,A
8039CE         ?C0680?MAINFLOW:
 3106: 		   CurrentDispenseCoin = CurrentDispenseCoin - outMoney*SystemParameter.HopperCoinPrice2;
8039CE 900421            MOV     DPTR,#SystemParameter+03H
8039D1 E0                MOVX    A,@DPTR
8039D2 FC                MOV     R4,A
8039D3 A3                INC     DPTR
8039D4 E0                MOVX    A,@DPTR
8039D5 FD                MOV     R5,A
8039D6 90159B            MOV     DPTR,#outMoney
8039D9 E0                MOVX    A,@DPTR
8039DA FE                MOV     R6,A
8039DB A3                INC     DPTR
8039DC E0                MOVX    A,@DPTR
8039DD FF                MOV     R7,A
8039DE A512800559        ECALL   ?C?IMUL
8039E3 C3                CLR     C
8039E4 90046A            MOV     DPTR,#CurrentDispenseCoin+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 86


8039E7 E0                MOVX    A,@DPTR
8039E8 9F                SUBB    A,R7
8039E9 F0                MOVX    @DPTR,A
8039EA 900469            MOV     DPTR,#CurrentDispenseCoin
8039ED E0                MOVX    A,@DPTR
8039EE 9E                SUBB    A,R6
8039EF F0                MOVX    @DPTR,A
 3107: 		}
8039F0         ?C0671?MAINFLOW:
 3108: 		
 3109: 		Trace( "\n coin2flag = %bu", coin2flag );
 3110: 		TradeCounter.Hopper2Num += outMoney;//出币枚数
8039F0 90159B            MOV     DPTR,#outMoney
8039F3 E0                MOVX    A,@DPTR
8039F4 FE                MOV     R6,A
8039F5 A3                INC     DPTR
8039F6 E0                MOVX    A,@DPTR
8039F7 FF                MOV     R7,A
8039F8 900B12            MOV     DPTR,#TradeCounter+026H
8039FB EE                MOV     A,R6
8039FC 8FF0              MOV     B,R7
8039FE A512800600        ECALL   ?C?IILDX
 3111: 		TradeCounter.Hopper2Sum += outMoney*SystemParameter.HopperCoinPrice2;//出币金额
803A03 900B08            MOV     DPTR,#TradeCounter+01CH
803A06 A51280073E        ECALL   ?C?LLDXDATA0
803A0B C000              PUSH    AR0
803A0D 900421            MOV     DPTR,#SystemParameter+03H
803A10 E0                MOVX    A,@DPTR
803A11 FC                MOV     R4,A
803A12 A3                INC     DPTR
803A13 E0                MOVX    A,@DPTR
803A14 FD                MOV     R5,A
803A15 90159B            MOV     DPTR,#outMoney
803A18 E0                MOVX    A,@DPTR
803A19 FE                MOV     R6,A
803A1A A3                INC     DPTR
803A1B E0                MOVX    A,@DPTR
803A1C FF                MOV     R7,A
803A1D A512800559        ECALL   ?C?IMUL
803A22 E4                CLR     A
803A23 FC                MOV     R4,A
803A24 FD                MOV     R5,A
803A25 D000              POP     AR0
803A27 A51280062E        ECALL   ?C?LADD
803A2C 900B08            MOV     DPTR,#TradeCounter+01CH
803A2F A512800792        ECALL   ?C?LSTXDATA
 3112: 		TradeCounter.ChangeSum += outMoney*SystemParameter.HopperCoinPrice2;//出币金额
803A34 900B00            MOV     DPTR,#TradeCounter+014H
803A37 A51280073E        ECALL   ?C?LLDXDATA0
803A3C C000              PUSH    AR0
803A3E 900421            MOV     DPTR,#SystemParameter+03H
803A41 E0                MOVX    A,@DPTR
803A42 FC                MOV     R4,A
803A43 A3                INC     DPTR
803A44 E0                MOVX    A,@DPTR
803A45 FD                MOV     R5,A
803A46 90159B            MOV     DPTR,#outMoney
803A49 E0                MOVX    A,@DPTR
803A4A FE                MOV     R6,A
803A4B A3                INC     DPTR
803A4C E0                MOVX    A,@DPTR
803A4D FF                MOV     R7,A
803A4E A512800559        ECALL   ?C?IMUL
803A53 E4                CLR     A
803A54 FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 87


803A55 FD                MOV     R5,A
803A56 D000              POP     AR0
803A58 A51280062E        ECALL   ?C?LADD
803A5D 900B00            MOV     DPTR,#TradeCounter+014H
803A60 A512800792        ECALL   ?C?LSTXDATA
 3113: 		//出币不成功, 重新配币
 3114: 		if( coin2flag != 1 )
803A65 90159F            MOV     DPTR,#coin2flag
803A68 E0                MOVX    A,@DPTR
803A69 6401              XRL     A,#01H
803A6B 7003              JNZ     $ + 5H
803A6D 023AF8            LJMP    ?C0681?MAINFLOW
 3115: 		{
 3116: 		//	Trace( "\n outMoney1 = %d", outMoney );											
 3117: 			for( i = 0; i < 3; i ++ )
803A70 E4                CLR     A
803A71 90159D            MOV     DPTR,#i
803A74 F0                MOVX    @DPTR,A
803A75         ?C0682?MAINFLOW:
803A75 90159D            MOV     DPTR,#i
803A78 E0                MOVX    A,@DPTR
803A79 FF                MOV     R7,A
803A7A C3                CLR     C
803A7B 9403              SUBB    A,#03H
803A7D 505D              JNC     ?C0683?MAINFLOW
 3118: 			{
 3119: 				if( HopperSetList[i].HopperIndex == 2)					
803A7F EF                MOV     A,R7
803A80 25E0              ADD     A,ACC
803A82 25E0              ADD     A,ACC
803A84 24E1              ADD     A,#LOW HopperSetList+02H
803A86 F582              MOV     DPL,A
803A88 E4                CLR     A
803A89 340A              ADDC    A,#HIGH HopperSetList+02H
803A8B F583              MOV     DPH,A
803A8D E0                MOVX    A,@DPTR
803A8E 6402              XRL     A,#02H
803A90 7042              JNZ     ?C0684?MAINFLOW
 3120: 				{
 3121: 					if( coin2flag & 4 )					
803A92 90159F            MOV     DPTR,#coin2flag
803A95 E0                MOVX    A,@DPTR
803A96 FF                MOV     R7,A
803A97 30E208            JNB     ACC.2,?C0686?MAINFLOW
 3122: 						DeviceStatus.ChangeUnit2 = 1; 					
803A9A 900B19            MOV     DPTR,#DeviceStatus+03H
803A9D 7401              MOV     A,#01H
803A9F F0                MOVX    @DPTR,A
803AA0 800A              SJMP    ?C0687?MAINFLOW
803AA2         ?C0686?MAINFLOW:
 3123: 					else if( coin2flag & 2 )					
803AA2 EF                MOV     A,R7
803AA3 30E106            JNB     ACC.1,?C0687?MAINFLOW
 3124: 						DeviceStatus.ChangeUnit2 = 2; 						
803AA6 900B19            MOV     DPTR,#DeviceStatus+03H
803AA9 7402              MOV     A,#02H
803AAB F0                MOVX    @DPTR,A
803AAC         ?C0687?MAINFLOW:
 3125: 					if( ( i == GetMinHopper()) && ( DeviceStatus.ChangeUnit2 != 0 ) )
803AAC A512809F04        ECALL   GetMinHopper
803AB1 90159D            MOV     DPTR,#i
803AB4 E0                MOVX    A,@DPTR
803AB5 FE                MOV     R6,A
803AB6 B50708            CJNE    A,AR7,?C0689?MAINFLOW
803AB9 900B19            MOV     DPTR,#DeviceStatus+03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 88


803ABC E0                MOVX    A,@DPTR
803ABD 6002              JZ      ?C0689?MAINFLOW
 3126: 						IsCanInCashFlag = 0;
803ABF C226              CLR     IsCanInCashFlag
803AC1         ?C0689?MAINFLOW:
 3127: 					HopperSetList[i].HopperState = 2;
803AC1 EE                MOV     A,R6
803AC2 25E0              ADD     A,ACC
803AC4 25E0              ADD     A,ACC
803AC6 24E2              ADD     A,#LOW HopperSetList+03H
803AC8 F582              MOV     DPL,A
803ACA E4                CLR     A
803ACB 340A              ADDC    A,#HIGH HopperSetList+03H
803ACD F583              MOV     DPH,A
803ACF 7402              MOV     A,#02H
803AD1 F0                MOVX    @DPTR,A
 3128: 					break;
803AD2 8008              SJMP    ?C0683?MAINFLOW
 3129: 				}			
 3130: 			}			
803AD4         ?C0684?MAINFLOW:
803AD4 90159D            MOV     DPTR,#i
803AD7 E0                MOVX    A,@DPTR
803AD8 04                INC     A
803AD9 F0                MOVX    @DPTR,A
803ADA 8099              SJMP    ?C0682?MAINFLOW
803ADC         ?C0683?MAINFLOW:
 3131: 			coin2flag = 1;
803ADC 90159F            MOV     DPTR,#coin2flag
803ADF 7401              MOV     A,#01H
803AE1 F0                MOVX    @DPTR,A
 3132: 			if( outMoney < tHopper2 )
803AE2 901598            MOV     DPTR,#tHopper2
803AE5 E0                MOVX    A,@DPTR
803AE6 FF                MOV     R7,A
803AE7 C3                CLR     C
803AE8 90159C            MOV     DPTR,#outMoney+01H
803AEB E0                MOVX    A,@DPTR
803AEC 9F                SUBB    A,R7
803AED 90159B            MOV     DPTR,#outMoney
803AF0 E0                MOVX    A,@DPTR
803AF1 9400              SUBB    A,#00H
803AF3 5003              JNC     $ + 5H
803AF5 023690            LJMP    ?C0640?MAINFLOW
 3133: 				continue;
 3134: 		}	
803AF8         ?C0681?MAINFLOW:
 3135: 		outMoney = 0;
803AF8 E4                CLR     A
803AF9 90159B            MOV     DPTR,#outMoney
803AFC F0                MOVX    @DPTR,A
803AFD A3                INC     DPTR
803AFE F0                MOVX    @DPTR,A
 3136: 		if ( tHopper3 )
803AFF 901599            MOV     DPTR,#tHopper3
803B02 E0                MOVX    A,@DPTR
803B03 FF                MOV     R7,A
803B04 7003              JNZ     $ + 5H
803B06 023BB0            LJMP    ?C0691?MAINFLOW
 3137: 		{		
 3138: 			Trace( "\n tHopper3 = %bu", tHopper3 );
 3139: 			if ( HopperOutCoin( tHopper3, 3, &Hopper3 ) == 0 )
803B09 7A23              MOV     R2,#HIGH Hopper3
803B0B 7B9F              MOV     R3,#LOW Hopper3
803B0D 7D03              MOV     R5,#03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 89


803B0F A512807F76        ECALL   _HopperOutCoin
803B14 EF                MOV     A,R7
803B15 7070              JNZ     ?C0692?MAINFLOW
 3140: 			{	
 3141: 				////出币命令发送成功
 3142: 				WaitForWork( 1000 , NULL );					
803B17 7FE8              MOV     R7,#0E8H
803B19 7E03              MOV     R6,#03H
803B1B A512807B35        ECALL   ?L?COM000D
 3143: 				ret = 0;
803B20 E4                CLR     A
803B21 90159A            MOV     DPTR,#ret
803B24 F0                MOVX    @DPTR,A
803B25         ?C0693?MAINFLOW:
 3144: 				while( ret < 2 )
803B25 90159A            MOV     DPTR,#ret
803B28 E0                MOVX    A,@DPTR
803B29 C3                CLR     C
803B2A 9402              SUBB    A,#02H
803B2C 504E              JNC     ?C0694?MAINFLOW
 3145: 				{
 3146: 					if( GetHardWareDeviceState( 3, &Hopper3 ) != 1 )
803B2E A512807EAF        ECALL   ?L?COM002B
803B33 EF                MOV     A,R7
803B34 6401              XRL     A,#01H
803B36 6032              JZ      ?C0695?MAINFLOW
 3147: 					{
 3148: 						//更新状态出功
 3149: 						if( Hopper3.State & 0x50 ) //红外线传感有问题或系统故障
803B38 9023A2            MOV     DPTR,#Hopper3+03H
803B3B E0                MOVX    A,@DPTR
803B3C FD                MOV     R5,A
803B3D 5450              ANL     A,#050H
803B3F 6007              JZ      ?C0696?MAINFLOW
 3150: 							coin3flag |= 4;//硬件故障						
803B41 9015A0            MOV     DPTR,#coin3flag
803B44 E0                MOVX    A,@DPTR
803B45 4404              ORL     A,#04H
803B47 F0                MOVX    @DPTR,A
803B48         ?C0696?MAINFLOW:
 3151: 						if( ( Hopper3.State & 0x28 ) )//实际无币或光测无币
803B48 ED                MOV     A,R5
803B49 5428              ANL     A,#028H
803B4B 6007              JZ      ?C0697?MAINFLOW
 3152: 							coin3flag |= 2;//币不足						
803B4D 9015A0            MOV     DPTR,#coin3flag
803B50 E0                MOVX    A,@DPTR
803B51 4402              ORL     A,#02H
803B53 F0                MOVX    @DPTR,A
803B54         ?C0697?MAINFLOW:
 3153: 						outMoney = HopperGetCoinOut( 3 );
803B54 7F03              MOV     R7,#03H
803B56 A512812107        ECALL   _HopperGetCoinOut
803B5B 90159B            MOV     DPTR,#outMoney
803B5E EE                MOV     A,R6
803B5F F0                MOVX    @DPTR,A
803B60 A3                INC     DPTR
803B61 EF                MOV     A,R7
803B62 F0                MOVX    @DPTR,A
 3154: 						Trace( "\n outMoney3 = %d", outMoney );
 3155: 					//	if( outMoney == 0 )							
 3156: 					//		coin3flag = 3;
 3157: 						ret = 0;
803B63 E4                CLR     A
803B64 90159A            MOV     DPTR,#ret
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 90


803B67 F0                MOVX    @DPTR,A
 3158: 						break;
803B68 8012              SJMP    ?C0694?MAINFLOW
 3159: 					}
803B6A         ?C0695?MAINFLOW:
 3160: 					else
 3161: 					{
 3162: 						Trace( "\n Hopper3 fail" );
 3163: 						ret++;
803B6A 90159A            MOV     DPTR,#ret
803B6D E0                MOVX    A,@DPTR
803B6E 04                INC     A
803B6F F0                MOVX    @DPTR,A
 3164: 						WaitForWork( 1000, NULL );
803B70 E4                CLR     A
803B71 7FE8              MOV     R7,#0E8H
803B73 7E03              MOV     R6,#03H
803B75 A512807B35        ECALL   ?L?COM000D
 3165: 					}
 3166: 				}//while
803B7A 80A9              SJMP    ?C0693?MAINFLOW
803B7C         ?C0694?MAINFLOW:
 3167: 				if( ret >= 2 )
803B7C 90159A            MOV     DPTR,#ret
803B7F E0                MOVX    A,@DPTR
803B80 C3                CLR     C
803B81 9402              SUBB    A,#02H
803B83 4009              JC      ?C0700?MAINFLOW
 3168: 					coin3flag |= 4;
 3169: 			}
803B85 8000              SJMP    ?C1080?MAINFLOW
803B87         ?C0692?MAINFLOW:
 3170: 			else		
 3171: 				coin3flag |= 4;				
803B87         
803B87 9015A0            MOV     DPTR,#coin3flag
803B8A E0                MOVX    A,@DPTR
803B8B 4404              ORL     A,#04H
803B8D F0                MOVX    @DPTR,A
803B8E         ?C0700?MAINFLOW:
 3172: 		  	CurrentDispenseCoin = CurrentDispenseCoin - outMoney*SystemParameter.HopperCoinPrice3;		
803B8E 900423            MOV     DPTR,#SystemParameter+05H
803B91 E0                MOVX    A,@DPTR
803B92 FC                MOV     R4,A
803B93 A3                INC     DPTR
803B94 E0                MOVX    A,@DPTR
803B95 FD                MOV     R5,A
803B96 90159B            MOV     DPTR,#outMoney
803B99 E0                MOVX    A,@DPTR
803B9A FE                MOV     R6,A
803B9B A3                INC     DPTR
803B9C E0                MOVX    A,@DPTR
803B9D FF                MOV     R7,A
803B9E A512800559        ECALL   ?C?IMUL
803BA3 C3                CLR     C
803BA4 90046A            MOV     DPTR,#CurrentDispenseCoin+01H
803BA7 E0                MOVX    A,@DPTR
803BA8 9F                SUBB    A,R7
803BA9 F0                MOVX    @DPTR,A
803BAA 900469            MOV     DPTR,#CurrentDispenseCoin
803BAD E0                MOVX    A,@DPTR
803BAE 9E                SUBB    A,R6
803BAF F0                MOVX    @DPTR,A
 3173: 		}
803BB0         ?C0691?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 91


 3174: 	
 3175: 		TradeCounter.Hopper3Num += outMoney;//出币枚数
803BB0 90159B            MOV     DPTR,#outMoney
803BB3 E0                MOVX    A,@DPTR
803BB4 FE                MOV     R6,A
803BB5 A3                INC     DPTR
803BB6 E0                MOVX    A,@DPTR
803BB7 FF                MOV     R7,A
803BB8 900B14            MOV     DPTR,#TradeCounter+028H
803BBB EE                MOV     A,R6
803BBC 8FF0              MOV     B,R7
803BBE A512800600        ECALL   ?C?IILDX
 3176: 		TradeCounter.Hopper3Sum += outMoney*SystemParameter.HopperCoinPrice3;//出币金额
803BC3 900B0C            MOV     DPTR,#TradeCounter+020H
803BC6 A51280073E        ECALL   ?C?LLDXDATA0
803BCB C000              PUSH    AR0
803BCD 900423            MOV     DPTR,#SystemParameter+05H
803BD0 E0                MOVX    A,@DPTR
803BD1 FC                MOV     R4,A
803BD2 A3                INC     DPTR
803BD3 E0                MOVX    A,@DPTR
803BD4 FD                MOV     R5,A
803BD5 90159B            MOV     DPTR,#outMoney
803BD8 E0                MOVX    A,@DPTR
803BD9 FE                MOV     R6,A
803BDA A3                INC     DPTR
803BDB E0                MOVX    A,@DPTR
803BDC FF                MOV     R7,A
803BDD A512800559        ECALL   ?C?IMUL
803BE2 E4                CLR     A
803BE3 FC                MOV     R4,A
803BE4 FD                MOV     R5,A
803BE5 D000              POP     AR0
803BE7 A51280062E        ECALL   ?C?LADD
803BEC 900B0C            MOV     DPTR,#TradeCounter+020H
803BEF A512800792        ECALL   ?C?LSTXDATA
 3177: 		TradeCounter.ChangeSum += outMoney*SystemParameter.HopperCoinPrice3;//出币金额
803BF4 900B00            MOV     DPTR,#TradeCounter+014H
803BF7 A51280073E        ECALL   ?C?LLDXDATA0
803BFC C000              PUSH    AR0
803BFE 900423            MOV     DPTR,#SystemParameter+05H
803C01 E0                MOVX    A,@DPTR
803C02 FC                MOV     R4,A
803C03 A3                INC     DPTR
803C04 E0                MOVX    A,@DPTR
803C05 FD                MOV     R5,A
803C06 90159B            MOV     DPTR,#outMoney
803C09 E0                MOVX    A,@DPTR
803C0A FE                MOV     R6,A
803C0B A3                INC     DPTR
803C0C E0                MOVX    A,@DPTR
803C0D FF                MOV     R7,A
803C0E A512800559        ECALL   ?C?IMUL
803C13 E4                CLR     A
803C14 FC                MOV     R4,A
803C15 FD                MOV     R5,A
803C16 D000              POP     AR0
803C18 A51280062E        ECALL   ?C?LADD
803C1D 900B00            MOV     DPTR,#TradeCounter+014H
803C20 A512800792        ECALL   ?C?LSTXDATA
 3178: 		Trace( "\n coin3flag = %bu", coin3flag );
 3179: 		//出币不成功
 3180: 		if( coin3flag != 1 )
803C25 9015A0            MOV     DPTR,#coin3flag
803C28 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 92


803C29 6401              XRL     A,#01H
803C2B 7003              JNZ     $ + 5H
803C2D 023690            LJMP    ?C0640?MAINFLOW
 3181: 		{
 3182: 		//	Trace( "\n outMoney1 = %d", outMoney );											
 3183: 			for( i = 0; i < 3; i ++ )
803C30 E4                CLR     A
803C31 90159D            MOV     DPTR,#i
803C34 F0                MOVX    @DPTR,A
803C35         ?C0702?MAINFLOW:
803C35 90159D            MOV     DPTR,#i
803C38 E0                MOVX    A,@DPTR
803C39 FF                MOV     R7,A
803C3A C3                CLR     C
803C3B 9403              SUBB    A,#03H
803C3D 505D              JNC     ?C0703?MAINFLOW
 3184: 			{
 3185: 				if( HopperSetList[i].HopperIndex == 3)					
803C3F EF                MOV     A,R7
803C40 25E0              ADD     A,ACC
803C42 25E0              ADD     A,ACC
803C44 24E1              ADD     A,#LOW HopperSetList+02H
803C46 F582              MOV     DPL,A
803C48 E4                CLR     A
803C49 340A              ADDC    A,#HIGH HopperSetList+02H
803C4B F583              MOV     DPH,A
803C4D E0                MOVX    A,@DPTR
803C4E 6403              XRL     A,#03H
803C50 7042              JNZ     ?C0704?MAINFLOW
 3186: 				{
 3187: 					if( coin3flag & 4 )					
803C52 9015A0            MOV     DPTR,#coin3flag
803C55 E0                MOVX    A,@DPTR
803C56 FF                MOV     R7,A
803C57 30E208            JNB     ACC.2,?C0706?MAINFLOW
 3188: 						DeviceStatus.ChangeUnit3 = 1; 					
803C5A 900B1A            MOV     DPTR,#DeviceStatus+04H
803C5D 7401              MOV     A,#01H
803C5F F0                MOVX    @DPTR,A
803C60 800A              SJMP    ?C0707?MAINFLOW
803C62         ?C0706?MAINFLOW:
 3189: 					else if( coin3flag & 2 )
803C62 EF                MOV     A,R7
803C63 30E106            JNB     ACC.1,?C0707?MAINFLOW
 3190: 						DeviceStatus.ChangeUnit3 = 2; 					
803C66 900B1A            MOV     DPTR,#DeviceStatus+04H
803C69 7402              MOV     A,#02H
803C6B F0                MOVX    @DPTR,A
803C6C         ?C0707?MAINFLOW:
 3191: 					if( ( i == GetMinHopper()) && ( DeviceStatus.ChangeUnit3 != 0 ) )
803C6C A512809F04        ECALL   GetMinHopper
803C71 90159D            MOV     DPTR,#i
803C74 E0                MOVX    A,@DPTR
803C75 FE                MOV     R6,A
803C76 B50708            CJNE    A,AR7,?C0709?MAINFLOW
803C79 900B1A            MOV     DPTR,#DeviceStatus+04H
803C7C E0                MOVX    A,@DPTR
803C7D 6002              JZ      ?C0709?MAINFLOW
 3192: 						IsCanInCashFlag = 0;
803C7F C226              CLR     IsCanInCashFlag
803C81         ?C0709?MAINFLOW:
 3193: 					HopperSetList[i].HopperState = 2;
803C81 EE                MOV     A,R6
803C82 25E0              ADD     A,ACC
803C84 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 93


803C86 24E2              ADD     A,#LOW HopperSetList+03H
803C88 F582              MOV     DPL,A
803C8A E4                CLR     A
803C8B 340A              ADDC    A,#HIGH HopperSetList+03H
803C8D F583              MOV     DPH,A
803C8F 7402              MOV     A,#02H
803C91 F0                MOVX    @DPTR,A
 3194: 					break;
803C92 8008              SJMP    ?C0703?MAINFLOW
 3195: 				}			
 3196: 			}			
803C94         ?C0704?MAINFLOW:
803C94 90159D            MOV     DPTR,#i
803C97 E0                MOVX    A,@DPTR
803C98 04                INC     A
803C99 F0                MOVX    @DPTR,A
803C9A 8099              SJMP    ?C0702?MAINFLOW
803C9C         ?C0703?MAINFLOW:
 3197: 			coin3flag = 1;
803C9C 9015A0            MOV     DPTR,#coin3flag
803C9F 7401              MOV     A,#01H
803CA1 F0                MOVX    @DPTR,A
 3198: 			if( outMoney < tHopper3 )
803CA2 901599            MOV     DPTR,#tHopper3
803CA5 E0                MOVX    A,@DPTR
803CA6 FF                MOV     R7,A
803CA7 C3                CLR     C
803CA8 90159C            MOV     DPTR,#outMoney+01H
803CAB E0                MOVX    A,@DPTR
803CAC 9F                SUBB    A,R7
803CAD 90159B            MOV     DPTR,#outMoney
803CB0 E0                MOVX    A,@DPTR
803CB1 9400              SUBB    A,#00H
 3199: 				continue;
803CB3 023690            LJMP    ?C0640?MAINFLOW
 3200: 		}	
 3201: 	}
803CB6         ?C0641?MAINFLOW:
 3202: //	Trace( "\n SystemParameter.NotOutMax = %d", SystemParameter.NotOutMax );	
 3203: //	CurrentDispenseCoin = 0;
 3204: //	SaveGlobalParam();
 3205: 
 3206: //////////////////////////////////////////
 3207: //	HopperSetList[0].HopperState = 1;//为调试加
 3208: /////////////////////////////////////////////
 3209: 
 3210: 	if( m_Errorflag == 0 )
803CB6 9015A1            MOV     DPTR,#m_Errorflag
803CB9 E0                MOVX    A,@DPTR
803CBA 7012              JNZ     ?C0711?MAINFLOW
 3211: 	{		
 3212: 		DisplayLine = STR_TAKE_COIN;
803CBC 900B21            MOV     DPTR,#DisplayLine
803CBF 741B              MOV     A,#01BH
803CC1 A51280802C        ECALL   ?L?COM0003
 3213: 		DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[ DisplayLine ].str, DispInformationTable[ DisplayLine ].len
>>  );
 3214: 		WaitForWork( 2000 , NULL );		
803CC6 E4                CLR     A
803CC7 7FD0              MOV     R7,#0D0H
803CC9 7E07              MOV     R6,#07H
 3215: 	}
803CCB 023E89            LJMP    ?C1081?MAINFLOW
803CCE         ?C0711?MAINFLOW:
 3216: 	else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 94


 3217: 	{
 3218: 		SaveGlobalParam();
803CCE A51280C54C        ECALL   SaveGlobalParam
 3219: 		DisplayLine = STR_COIN_NOT_ENOUGH; // 硬币不够 
803CD3 900B21            MOV     DPTR,#DisplayLine
803CD6 7401              MOV     A,#01H
803CD8 A51280802C        ECALL   ?L?COM0003
 3220: 		DisplayStr( 0, __LINE0__ , 1, DispInformationTable[	DisplayLine ].str, DispInformationTable[ DisplayLine ].len 
>> );			
 3221: 		DisplayLine = STR_DUO_MONEY;
803CDD 900B21            MOV     DPTR,#DisplayLine
803CE0 7420              MOV     A,#020H
803CE2 F0                MOVX    @DPTR,A
 3222: 		memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );
803CE3 7E00              MOV     R6,#00H
803CE5 7F14              MOV     R7,#014H
803CE7 7D00              MOV     R5,#00H
803CE9 7B00              MOV     R3,#?C?XDATASEG
803CEB 7A04              MOV     R2,#HIGH DisplayBuffer
803CED 796B              MOV     R1,#LOW DisplayBuffer
803CEF A5128008A6        ECALL   ?C?MEMSET
 3223: 		memcpy( DisplayBuffer, DispInformationTable[DisplayLine ].str, DispInformationTable[ DisplayLine ].len );
803CF4 900B21            MOV     DPTR,#DisplayLine
803CF7 E0                MOVX    A,@DPTR
803CF8 FF                MOV     R7,A
803CF9 25E0              ADD     A,ACC
803CFB 25E0              ADD     A,ACC
803CFD 2474              ADD     A,#LOW DispInformationTable+03H
803CFF F582              MOV     DPL,A
803D01 E4                CLR     A
803D02 3404              ADDC    A,#HIGH DispInformationTable+03H
803D04 F583              MOV     DPH,A
803D06 E4                CLR     A
803D07 93                MOVC    A,@A+DPTR
803D08 FD                MOV     R5,A
803D09 7C00              MOV     R4,#00H
803D0B C004              PUSH    AR4
803D0D C005              PUSH    AR5
803D0F EF                MOV     A,R7
803D10 25E0              ADD     A,ACC
803D12 25E0              ADD     A,ACC
803D14 2471              ADD     A,#LOW DispInformationTable
803D16 F582              MOV     DPL,A
803D18 E4                CLR     A
803D19 3404              ADDC    A,#HIGH DispInformationTable
803D1B F583              MOV     DPH,A
803D1D A5128007C0        ECALL   ?C?PLDCODE
803D22 786B              MOV     R0,#LOW DisplayBuffer
803D24 7C04              MOV     R4,#HIGH DisplayBuffer
803D26 7D00              MOV     R5,#?C?XDATASEG
803D28 D007              POP     AR7
803D2A D006              POP     AR6
803D2C A51280052D        ECALL   ?C?COPY
 3224: 		i = DispInformationTable[ DisplayLine ].len;		
803D31 900B21            MOV     DPTR,#DisplayLine
803D34 E0                MOVX    A,@DPTR
803D35 25E0              ADD     A,ACC
803D37 25E0              ADD     A,ACC
803D39 2474              ADD     A,#LOW DispInformationTable+03H
803D3B F582              MOV     DPL,A
803D3D E4                CLR     A
803D3E 3404              ADDC    A,#HIGH DispInformationTable+03H
803D40 F583              MOV     DPH,A
803D42 E4                CLR     A
803D43 93                MOVC    A,@A+DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 95


803D44 90159D            MOV     DPTR,#i
803D47 F0                MOVX    @DPTR,A
 3225: 		switch( SystemParameter.curUnit )
803D48 900466            MOV     DPTR,#SystemParameter+048H
803D4B E0                MOVX    A,@DPTR
803D4C FE                MOV     R6,A
803D4D A3                INC     DPTR
803D4E E0                MOVX    A,@DPTR
803D4F FF                MOV     R7,A
803D50 EE                MOV     A,R6
803D51 6003              JZ      $ + 5H
803D53 023E63            LJMP    ?C0713?MAINFLOW
803D56 EF                MOV     A,R7
803D57 24F6              ADD     A,#0F6H
803D59 6040              JZ      ?C0715?MAINFLOW
803D5B 24A6              ADD     A,#0A6H
803D5D 7003              JNZ     $ + 5H
803D5F 023DF7            LJMP    ?C0716?MAINFLOW
803D62 2463              ADD     A,#063H
803D64 6003              JZ      $ + 5H
803D66 023E63            LJMP    ?C0713?MAINFLOW
 3226: 		{
 3227: 			case 1:
803D69         ?C0714?MAINFLOW:
 3228: 				i += sprintf( DisplayBuffer + i, "%u", SystemParameter.NotOutMax );
803D69 90159D            MOV     DPTR,#i
803D6C E0                MOVX    A,@DPTR
803D6D 246B              ADD     A,#LOW DisplayBuffer
803D6F F9                MOV     R1,A
803D70 E4                CLR     A
803D71 3404              ADDC    A,#HIGH DisplayBuffer
803D73 FA                MOV     R2,A
803D74 7B00              MOV     R3,#?C?XDATASEG
803D76 C003              PUSH    AR3
803D78 C002              PUSH    AR2
803D7A C001              PUSH    AR1
803D7C 7B80              MOV     R3,#BYTE2 080030EH
803D7E 7A03              MOV     R2,#HIGH 080030EH
803D80 790E              MOV     R1,#LOW 080030EH
803D82 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803D85 A5128007B6        ECALL   ?C?PSTXDATA
803D8A 90042D            MOV     DPTR,#SystemParameter+0FH
803D8D E0                MOVX    A,@DPTR
803D8E FF                MOV     R7,A
803D8F A3                INC     DPTR
803D90 E0                MOVX    A,@DPTR
803D91 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803D94 CF                XCH     A,R7
803D95 F0                MOVX    @DPTR,A
803D96 A3                INC     DPTR
803D97 EF                MOV     A,R7
 3229: 			break;				
803D98 023E51            LJMP    ?C1083?MAINFLOW
 3230: 			case 10:
803D9B         ?C0715?MAINFLOW:
 3231: 				i += sprintf( DisplayBuffer + i, "%u.%u", SystemParameter.NotOutMax/SystemParameter.curUnit, SystemParameter.
>> NotOutMax%SystemParameter.curUnit );
803D9B 90159D            MOV     DPTR,#i
803D9E E0                MOVX    A,@DPTR
803D9F 246B              ADD     A,#LOW DisplayBuffer
803DA1 F9                MOV     R1,A
803DA2 E4                CLR     A
803DA3 3404              ADDC    A,#HIGH DisplayBuffer
803DA5 FA                MOV     R2,A
803DA6 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 96


803DA8 C003              PUSH    AR3
803DAA C002              PUSH    AR2
803DAC C001              PUSH    AR1
803DAE 7B80              MOV     R3,#BYTE2 0800311H
803DB0 7A03              MOV     R2,#HIGH 0800311H
803DB2 7911              MOV     R1,#LOW 0800311H
803DB4 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803DB7 A5128007B6        ECALL   ?C?PSTXDATA
803DBC 900466            MOV     DPTR,#SystemParameter+048H
803DBF E0                MOVX    A,@DPTR
803DC0 FA                MOV     R2,A
803DC1 A3                INC     DPTR
803DC2 E0                MOVX    A,@DPTR
803DC3 FB                MOV     R3,A
803DC4 90042D            MOV     DPTR,#SystemParameter+0FH
803DC7 E0                MOVX    A,@DPTR
803DC8 FE                MOV     R6,A
803DC9 A3                INC     DPTR
803DCA E0                MOVX    A,@DPTR
803DCB FF                MOV     R7,A
803DCC AD03              MOV     R5,AR3
803DCE AC02              MOV     R4,AR2
803DD0 A51280056C        ECALL   ?C?UIDIV
803DD5 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803DD8 EE                MOV     A,R6
803DD9 F0                MOVX    @DPTR,A
803DDA A3                INC     DPTR
803DDB EF                MOV     A,R7
803DDC F0                MOVX    @DPTR,A
803DDD 90042D            MOV     DPTR,#SystemParameter+0FH
803DE0 E0                MOVX    A,@DPTR
803DE1 FE                MOV     R6,A
803DE2 A3                INC     DPTR
803DE3 E0                MOVX    A,@DPTR
803DE4 FF                MOV     R7,A
803DE5 AD03              MOV     R5,AR3
803DE7 AC02              MOV     R4,AR2
803DE9 A51280056C        ECALL   ?C?UIDIV
803DEE 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
803DF1 EC                MOV     A,R4
803DF2 F0                MOVX    @DPTR,A
803DF3 A3                INC     DPTR
803DF4 ED                MOV     A,R5
803DF5         
 3232: 			break;
803DF5 805A              SJMP    ?C1083?MAINFLOW
 3233: 			case 100:
803DF7         ?C0716?MAINFLOW:
 3234: 			i += sprintf( DisplayBuffer + i, "%u.%02u", SystemParameter.NotOutMax/SystemParameter.curUnit, SystemParameter
>> .NotOutMax%SystemParameter.curUnit );			
803DF7 90159D            MOV     DPTR,#i
803DFA E0                MOVX    A,@DPTR
803DFB 246B              ADD     A,#LOW DisplayBuffer
803DFD F9                MOV     R1,A
803DFE E4                CLR     A
803DFF 3404              ADDC    A,#HIGH DisplayBuffer
803E01 FA                MOV     R2,A
803E02 7B00              MOV     R3,#?C?XDATASEG
803E04 C003              PUSH    AR3
803E06 C002              PUSH    AR2
803E08 C001              PUSH    AR1
803E0A 7B80              MOV     R3,#BYTE2 0800317H
803E0C 7A03              MOV     R2,#HIGH 0800317H
803E0E 7917              MOV     R1,#LOW 0800317H
803E10 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 97


803E13 A5128007B6        ECALL   ?C?PSTXDATA
803E18 900466            MOV     DPTR,#SystemParameter+048H
803E1B E0                MOVX    A,@DPTR
803E1C FA                MOV     R2,A
803E1D A3                INC     DPTR
803E1E E0                MOVX    A,@DPTR
803E1F FB                MOV     R3,A
803E20 90042D            MOV     DPTR,#SystemParameter+0FH
803E23 E0                MOVX    A,@DPTR
803E24 FE                MOV     R6,A
803E25 A3                INC     DPTR
803E26 E0                MOVX    A,@DPTR
803E27 FF                MOV     R7,A
803E28 AD03              MOV     R5,AR3
803E2A AC02              MOV     R4,AR2
803E2C A51280056C        ECALL   ?C?UIDIV
803E31 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803E34 EE                MOV     A,R6
803E35 F0                MOVX    @DPTR,A
803E36 A3                INC     DPTR
803E37 EF                MOV     A,R7
803E38 F0                MOVX    @DPTR,A
803E39 90042D            MOV     DPTR,#SystemParameter+0FH
803E3C E0                MOVX    A,@DPTR
803E3D FE                MOV     R6,A
803E3E A3                INC     DPTR
803E3F E0                MOVX    A,@DPTR
803E40 FF                MOV     R7,A
803E41 AD03              MOV     R5,AR3
803E43 AC02              MOV     R4,AR2
803E45 A51280056C        ECALL   ?C?UIDIV
803E4A 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
803E4D EC                MOV     A,R4
803E4E F0                MOVX    @DPTR,A
803E4F A3                INC     DPTR
803E50 ED                MOV     A,R5
803E51         
803E51 F0                MOVX    @DPTR,A
803E52 D001              POP     AR1
803E54 D002              POP     AR2
803E56 D003              POP     AR3
803E58 A512800949        ECALL   _sprintf
803E5D 90159D            MOV     DPTR,#i
803E60 E0                MOVX    A,@DPTR
803E61 2F                ADD     A,R7
803E62 F0                MOVX    @DPTR,A
 3235: 			break;		
 3236: 		}		
803E63         ?C0713?MAINFLOW:
 3237: 		/*if( SystemParameter.NotOutMax >= 100 )					
 3238: 			i += LenOfNum( SystemParameter.NotOutMax ) + 1;
 3239: 		else 
 3240: 			i += LenOfNum( SystemParameter.NotOutMax ) + 2;*/
 3241: 		DisplayStr( 0, __LINE1__ , 1, DisplayBuffer, i );			
803E63 D21A              SETB    ?_DisplayStr?BIT
803E65 7B00              MOV     R3,#?C?XDATASEG
803E67 7A04              MOV     R2,#HIGH DisplayBuffer
803E69 796B              MOV     R1,#LOW DisplayBuffer
803E6B 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
803E6E A5128007B6        ECALL   ?C?PSTXDATA
803E73 90159D            MOV     DPTR,#i
803E76 E0                MOVX    A,@DPTR
803E77 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
803E7A F0                MOVX    @DPTR,A
803E7B 7D01              MOV     R5,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 98


803E7D E4                CLR     A
803E7E FF                MOV     R7,A
803E7F A512808062        ECALL   _DisplayStr
 3242: 		WaitForWork( 2500 , NULL );				
803E84 E4                CLR     A
803E85 7FC4              MOV     R7,#0C4H
803E87 7E09              MOV     R6,#09H
803E89         
803E89 A512807B35        ECALL   ?L?COM000D
 3243: 	//	HardWareErr = ERR_HOPPER;
 3244: 	}
803E8E         ?C0712?MAINFLOW:
 3245: //	Trace( "\n DispenseCoin  HardWareErr = %bu", HardWareErr );
 3246: 	
 3247: 	return 0;
803E8E 7F00              MOV     R7,#00H
 3248: }
803E90         ?C0639?MAINFLOW:
803E90 A522              ERET    
----- FUNCTION DispenseCoin (END) -------


----- FUNCTION CheckChangePermit (BEGIN) -----
 FILE: 'mainflow.c'
 3338: u_char CheckChangePermit()
 3339: {
 3340: //	Trace( "\n CheckChangePermit");
 3341: //	ClearDisplayLine1();	
 3342: 	u_char xdata i;
 3343: 	if( CurrentPayed > 0 ) 
803E92 D3                SETB    C
803E93 900B20            MOV     DPTR,#CurrentPayed+01H
803E96 E0                MOVX    A,@DPTR
803E97 9400              SUBB    A,#00H
803E99 900B1F            MOV     DPTR,#CurrentPayed
803E9C E0                MOVX    A,@DPTR
803E9D 9400              SUBB    A,#00H
803E9F 5003              JNC     $ + 5H
803EA1 023FDB            LJMP    ?C0730?MAINFLOW
 3344: 	{
 3345: 		if ( SystemParameter.RefundPermission )
803EA4 90041E            MOV     DPTR,#SystemParameter
803EA7 E0                MOVX    A,@DPTR
803EA8 7003              JNZ     $ + 5H
803EAA 023FD7            LJMP    ?C0731?MAINFLOW
 3346: 		{
 3347: 			if( IsCanChange() != 1 )
803EAD A512809F27        ECALL   IsCanChange
803EB2 EF                MOV     A,R7
803EB3 6401              XRL     A,#01H
803EB5 600C              JZ      ?C0732?MAINFLOW
 3348: 			{
 3349: 				CurrentDispenseCoin = 0;
803EB7 E4                CLR     A
803EB8 900469            MOV     DPTR,#CurrentDispenseCoin
803EBB F0                MOVX    @DPTR,A
803EBC A3                INC     DPTR
803EBD F0                MOVX    @DPTR,A
 3350: 				return 2;
803EBE 7F02              MOV     R7,#02H
803EC0 023FDD            LJMP    ?C0733?MAINFLOW
 3351: 			}
803EC3         ?C0732?MAINFLOW:
 3352: 			//在此设置出币总额
 3353: 			DisplayLine = STR_REFUND_MONEY;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 99


803EC3 900B21            MOV     DPTR,#DisplayLine
803EC6 741F              MOV     A,#01FH
803EC8 A51280802C        ECALL   ?L?COM0003
 3354: 			DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len 
>> );
 3355: 	//		DisplayLine = STR_PLEASE_WAIT;
 3356: 	//		DisplayStr( 0, __LINE1__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].le
>> n );
 3357: 			memset( DisplayBuffer , 0 , sizeof( DisplayBuffer ));
803ECD 7E00              MOV     R6,#00H
803ECF 7F14              MOV     R7,#014H
803ED1 7D00              MOV     R5,#00H
803ED3 7B00              MOV     R3,#?C?XDATASEG
803ED5 7A04              MOV     R2,#HIGH DisplayBuffer
803ED7 796B              MOV     R1,#LOW DisplayBuffer
803ED9 A5128008A6        ECALL   ?C?MEMSET
 3358: 			//////////////////
 3359: 			memset( DisplayBuffer,0,sizeof(DisplayBuffer) );
803EDE 7E00              MOV     R6,#00H
803EE0 7F14              MOV     R7,#014H
803EE2 7D00              MOV     R5,#00H
803EE4 7B00              MOV     R3,#?C?XDATASEG
803EE6 7A04              MOV     R2,#HIGH DisplayBuffer
803EE8 796B              MOV     R1,#LOW DisplayBuffer
803EEA A5128008A6        ECALL   ?C?MEMSET
 3360: 			switch( SystemParameter.curUnit )
803EEF 900466            MOV     DPTR,#SystemParameter+048H
803EF2 E0                MOVX    A,@DPTR
803EF3 FE                MOV     R6,A
803EF4 A3                INC     DPTR
803EF5 E0                MOVX    A,@DPTR
803EF6 FF                MOV     R7,A
803EF7 EE                MOV     A,R6
803EF8 6003              JZ      $ + 5H
803EFA 023FA3            LJMP    ?C0734?MAINFLOW
803EFD EF                MOV     A,R7
803EFE 24F6              ADD     A,#0F6H
803F00 6039              JZ      ?C0736?MAINFLOW
803F02 24A6              ADD     A,#0A6H
803F04 6035              JZ      ?C0736?MAINFLOW
803F06 2463              ADD     A,#063H
803F08 6003              JZ      $ + 5H
803F0A 023FA3            LJMP    ?C0734?MAINFLOW
 3361: 			{
 3362: 				case 1:
803F0D         ?C0735?MAINFLOW:
 3363: 					i = sprintf( DisplayBuffer, "%s%u", DispInformationTable[STR_CHANGE].str, CurrentPayed );
803F0D 7B80              MOV     R3,#BYTE2 0800430H
803F0F 7A04              MOV     R2,#HIGH 0800430H
803F11 7930              MOV     R1,#LOW 0800430H
803F13 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803F16 A5128007B6        ECALL   ?C?PSTXDATA
803F1B 90051D            MOV     DPTR,#DispInformationTable+0ACH
803F1E A5128007C0        ECALL   ?C?PLDCODE
803F23 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803F26 A5128007B6        ECALL   ?C?PSTXDATA
803F2B 900B1F            MOV     DPTR,#CurrentPayed
803F2E E0                MOVX    A,@DPTR
803F2F FF                MOV     R7,A
803F30 A3                INC     DPTR
803F31 E0                MOVX    A,@DPTR
803F32 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
803F35 CF                XCH     A,R7
803F36 F0                MOVX    @DPTR,A
803F37 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 100


803F38 EF                MOV     A,R7
 3364: 				break;				
803F39 8057              SJMP    ?C1085?MAINFLOW
 3365: 				case 10:
803F3B         ?C0736?MAINFLOW:
 3366: 					i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
803F3B 7B80              MOV     R3,#BYTE2 0800435H
803F3D 7A04              MOV     R2,#HIGH 0800435H
803F3F 7935              MOV     R1,#LOW 0800435H
803F41 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
803F44 A5128007B6        ECALL   ?C?PSTXDATA
803F49 90051D            MOV     DPTR,#DispInformationTable+0ACH
803F4C A5128007C0        ECALL   ?C?PLDCODE
803F51 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
803F54 A5128007B6        ECALL   ?C?PSTXDATA
803F59 900466            MOV     DPTR,#SystemParameter+048H
803F5C E0                MOVX    A,@DPTR
803F5D FA                MOV     R2,A
803F5E A3                INC     DPTR
803F5F E0                MOVX    A,@DPTR
803F60 FB                MOV     R3,A
803F61 900B1F            MOV     DPTR,#CurrentPayed
803F64 E0                MOVX    A,@DPTR
803F65 FE                MOV     R6,A
803F66 A3                INC     DPTR
803F67 E0                MOVX    A,@DPTR
803F68 FF                MOV     R7,A
803F69 AD03              MOV     R5,AR3
803F6B AC02              MOV     R4,AR2
803F6D A51280056C        ECALL   ?C?UIDIV
803F72 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
803F75 EE                MOV     A,R6
803F76 F0                MOVX    @DPTR,A
803F77 A3                INC     DPTR
803F78 EF                MOV     A,R7
803F79 F0                MOVX    @DPTR,A
803F7A 900B1F            MOV     DPTR,#CurrentPayed
803F7D E0                MOVX    A,@DPTR
803F7E FE                MOV     R6,A
803F7F A3                INC     DPTR
803F80 E0                MOVX    A,@DPTR
803F81 FF                MOV     R7,A
803F82 AD03              MOV     R5,AR3
803F84 AC02              MOV     R4,AR2
803F86 A51280056C        ECALL   ?C?UIDIV
803F8B 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
803F8E EC                MOV     A,R4
803F8F F0                MOVX    @DPTR,A
803F90 A3                INC     DPTR
803F91 ED                MOV     A,R5
803F92         
 3367: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
 3368: 				break;
 3369: 				case 100:
803F92         
803F92 F0                MOVX    @DPTR,A
803F93 7B00              MOV     R3,#?C?XDATASEG
803F95 7A04              MOV     R2,#HIGH DisplayBuffer
803F97 796B              MOV     R1,#LOW DisplayBuffer
803F99 A512800949        ECALL   _sprintf
803F9E 901595            MOV     DPTR,#i
803FA1 EF                MOV     A,R7
803FA2 F0                MOVX    @DPTR,A
 3370: 					i = sprintf( DisplayBuffer, "%s%u.%02u", DispInformationTable[STR_CHANGE].str,
 3371: 						CurrentPayed/SystemParameter.curUnit,CurrentPayed%SystemParameter.curUnit );				
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 101


 3372: 				break;		
 3373: 			}
803FA3         ?C0734?MAINFLOW:
 3374: 			DisplayStr( 0, __LINE1__ , 1 , DisplayBuffer, i );
803FA3 D21A              SETB    ?_DisplayStr?BIT
803FA5 7B00              MOV     R3,#?C?XDATASEG
803FA7 7A04              MOV     R2,#HIGH DisplayBuffer
803FA9 796B              MOV     R1,#LOW DisplayBuffer
803FAB 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
803FAE A5128007B6        ECALL   ?C?PSTXDATA
803FB3 901595            MOV     DPTR,#i
803FB6 E0                MOVX    A,@DPTR
803FB7 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
803FBA F0                MOVX    @DPTR,A
803FBB 7D01              MOV     R5,#01H
803FBD E4                CLR     A
803FBE FF                MOV     R7,A
803FBF A512808062        ECALL   _DisplayStr
 3375: 			CurrentDispenseCoin = CurrentPayed;
803FC4 900B1F            MOV     DPTR,#CurrentPayed
803FC7 E0                MOVX    A,@DPTR
803FC8 FF                MOV     R7,A
803FC9 A3                INC     DPTR
803FCA E0                MOVX    A,@DPTR
803FCB 900469            MOV     DPTR,#CurrentDispenseCoin
803FCE CF                XCH     A,R7
803FCF F0                MOVX    @DPTR,A
803FD0 A3                INC     DPTR
803FD1 EF                MOV     A,R7
803FD2 F0                MOVX    @DPTR,A
 3376: 			return 0; //退币
803FD3 7F00              MOV     R7,#00H
803FD5 8006              SJMP    ?C0733?MAINFLOW
 3377: 		}
803FD7         ?C0731?MAINFLOW:
 3378: 		else
 3379: 			return 1;
803FD7 7F01              MOV     R7,#01H
803FD9 8002              SJMP    ?C0733?MAINFLOW
 3380: 	}
803FDB         ?C0730?MAINFLOW:
 3381: 	else 
 3382: 		return 2;
803FDB 7F02              MOV     R7,#02H
 3383: }
803FDD         ?C0733?MAINFLOW:
803FDD A522              ERET    
----- FUNCTION CheckChangePermit (END) -------


----- FUNCTION DispThx (BEGIN) -----
 FILE: 'mainflow.c'
 3408: u_char DispThx()
 3409: {
 3410: 	DisplayLine = STR_THX_YOU_WITHOUT_COIN;
 3411: 	DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len );
>> 
803FDF 900B21            MOV     DPTR,#DisplayLine
803FE2 740F              MOV     A,#0FH
803FE4 A51280802C        ECALL   ?L?COM0003
 3412: 	ClearDisplayLine( 2 );
803FE9 7F02              MOV     R7,#02H
803FEB A5128087BB        ECALL   _ClearDisplayLine
 3413: 	WaitForWork( 1500 , NULL );	
803FF0 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 102


803FF1 7FDC              MOV     R7,#0DCH
803FF3 7E05              MOV     R6,#05H
803FF5 A512807B35        ECALL   ?L?COM000D
 3414: 	return( 0 );
803FFA 7F00              MOV     R7,#00H
 3415: }
803FFC         ?C0744?MAINFLOW:
803FFC A522              ERET    
----- FUNCTION DispThx (END) -------


----- FUNCTION AllGoodsWayError (BEGIN) -----
 FILE: 'mainflow.c'
 3432: u_char AllGoodsWayError()
 3433: {
 3434: 	u_char xdata i = 0;
 3435: 
;---- Variable 'i' assigned to Register 'R7' ----
803FFE E4                CLR     A
803FFF FF                MOV     R7,A
 3436: 	SaveTradeParam();
804000 A51280C04A        ECALL   SaveTradeParam
 3437: 	for( i = 0; i < GOODSWAYNUM; i ++ )	
804005 E4                CLR     A
804006 FF                MOV     R7,A
804007         ?C0746?MAINFLOW:
 3438: 		GoodsWaySetVal[i].WayState = 0x08;	
804007 75F005            MOV     B,#05H
80400A EF                MOV     A,R7
80400B 900003            MOV     DPTR,#GoodsWaySetVal+01H
80400E A51280079F        ECALL   ?C?OFFXADD
804013 7408              MOV     A,#08H
804015 F0                MOVX    @DPTR,A
804016 0F                INC     R7
804017 EF                MOV     A,R7
804018 B440EC            CJNE    A,#040H,?C0746?MAINFLOW
80401B         ?C0747?MAINFLOW:
 3439: 	HardWareErr |= 0x0040;
80401B 900480            MOV     DPTR,#HardWareErr+01H
80401E E0                MOVX    A,@DPTR
80401F 4440              ORL     A,#040H
804021 F0                MOVX    @DPTR,A
 3440: //	HardWareErr = ERR_GOODSBOARDERR;	
 3441: 	DisplayLine = STR_HARDWARE_ERR;
804022 900B21            MOV     DPTR,#DisplayLine
804025 740D              MOV     A,#0DH
804027 A51280802C        ECALL   ?L?COM0003
 3442: 	DisplayStr( 0, __LINE0__, 1, DispInformationTable[DisplayLine].str, DispInformationTable[DisplayLine].len );	
 3443: 	return 1;
80402C 7F01              MOV     R7,#01H
 3444: }
80402E         ?C0749?MAINFLOW:
80402E A522              ERET    
----- FUNCTION AllGoodsWayError (END) -------


----- FUNCTION MaintFunction (BEGIN) -----
 FILE: 'mainflow.c'
 3446: u_char MaintFunction()
 3447: {	
 3448: 	u_char xdata i = 0;
 3449: 
804030 E4                CLR     A
804031 901595            MOV     DPTR,#i
804034 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 103


 3450: //	SaveGlobalParam();
 3451: 	AlarmSpacing = 0;
804035 902DEA            MOV     DPTR,#AlarmSpacing
804038 F0                MOVX    @DPTR,A
 3452: 	AlarmTime = 0;
804039 900000            MOV     DPTR,#AlarmTime
80403C F0                MOVX    @DPTR,A
 3453: 	DisableBillDev();
80403D A512808FD7        ECALL   DisableBillDev
 3454: 	SystemStatus = 2;
804042 9001C4            MOV     DPTR,#SystemStatus
804045 7402              MOV     A,#02H
804047 F0                MOVX    @DPTR,A
 3455: 	if( KeyLockFlag )
804048 302907            JNB     KeyLockFlag,?C0750?MAINFLOW
 3456: 	{
 3457: 		KeyUnLock(); //锁定键盘，不让客户按键
80404B A5128077AE        ECALL   KeyUnLock
 3458: 		KeyLockFlag = 0;
804050 C229              CLR     KeyLockFlag
 3459: 	}
804052         ?C0750?MAINFLOW:
 3460: 	MaintFlag = 1;
804052 9028A4            MOV     DPTR,#MaintFlag
804055 7401              MOV     A,#01H
804057 F0                MOVX    @DPTR,A
804058         ?C0751?MAINFLOW:
 3461: 	while( IsModeOff() ) //是否模式开关处于维护状态	
804058 A51280C416        ECALL   IsModeOff
80405D 5007              JNC     ?C0752?MAINFLOW
 3462: 		mainmenu();		
80405F A512804490        ECALL   mainmenu
804064 80F2              SJMP    ?C0751?MAINFLOW
804066         ?C0752?MAINFLOW:
 3463: 	MaintFlag = 0;
804066 E4                CLR     A
804067 9028A4            MOV     DPTR,#MaintFlag
80406A F0                MOVX    @DPTR,A
 3464: 	DisplayStr( 0, 0, 1, DispInformationTable[ STR_PLEASE_WAIT ].str, DispInformationTable[ STR_PLEASE_WAIT ].len );
>> 	
80406B D21A              SETB    ?_DisplayStr?BIT
80406D 9004B9            MOV     DPTR,#DispInformationTable+048H
804070 A5128007C0        ECALL   ?C?PLDCODE
804075 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804078 A5128007B6        ECALL   ?C?PSTXDATA
80407D 9004BC            MOV     DPTR,#DispInformationTable+04BH
804080 A512808059        ECALL   ?L?COM0005
 3465: 	DisplayStr( 0, 1, 1, " ", 1 );
804085 D21A              SETB    ?_DisplayStr?BIT
804087 7B80              MOV     R3,#BYTE2 080045AH
804089 7A04              MOV     R2,#HIGH 080045AH
80408B 795A              MOV     R1,#LOW 080045AH
80408D 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804090 A5128007B6        ECALL   ?C?PSTXDATA
804095 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804098 7401              MOV     A,#01H
80409A F0                MOVX    @DPTR,A
80409B FD                MOV     R5,A
80409C E4                CLR     A
80409D FF                MOV     R7,A
80409E A512808062        ECALL   _DisplayStr
 3466: 	ClearKey();
8040A3 A5128087A8        ECALL   ClearKey
 3467: 	SystemStatus = 1;
8040A8 9001C4            MOV     DPTR,#SystemStatus
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 104


8040AB 7401              MOV     A,#01H
8040AD F0                MOVX    @DPTR,A
 3468: 	HardWareErr = 0; //默认硬件无故障，然后自检去真正检查	
8040AE E4                CLR     A
8040AF 90047F            MOV     DPTR,#HardWareErr
8040B2 F0                MOVX    @DPTR,A
8040B3 A3                INC     DPTR
8040B4 F0                MOVX    @DPTR,A
 3469: 	IsCanInCashFlag = 1;
8040B5 D226              SETB    IsCanInCashFlag
 3470: 	if( KeyLockFlag == 0 )
8040B7 202907            JB      KeyLockFlag,?C0753?MAINFLOW
 3471: 	{
 3472: 		KeyLock(); //锁定键盘，不让客户按键
8040BA A5128087F1        ECALL   KeyLock
 3473: 		KeyLockFlag = 1;
8040BF D229              SETB    KeyLockFlag
 3474: 	}	
8040C1         ?C0753?MAINFLOW:
 3475: 	isShowLcd = 1;
8040C1 D228              SETB    isShowLcd
 3476: 	//扫描单价是否有为0的
 3477: 	for( i = 0; i < GOODSWAYNUM; i ++ )	
8040C3 E4                CLR     A
8040C4 901595            MOV     DPTR,#i
8040C7 F0                MOVX    @DPTR,A
8040C8         ?C0754?MAINFLOW:
8040C8 901595            MOV     DPTR,#i
8040CB E0                MOVX    A,@DPTR
8040CC FF                MOV     R7,A
8040CD C3                CLR     C
8040CE 9440              SUBB    A,#040H
8040D0 505D              JNC     ?C0755?MAINFLOW
 3478: 	{
 3479: 		if( ( GoodsWaySetVal[i].WayNo == InputGoodsWayList[i].GoodsWayNo ) && 
8040D2 E0                MOVX    A,@DPTR
8040D3 FE                MOV     R6,A
8040D4 25E0              ADD     A,ACC
8040D6 25E0              ADD     A,ACC
8040D8 24D3              ADD     A,#LOW InputGoodsWayList
8040DA F582              MOV     DPL,A
8040DC E4                CLR     A
8040DD 342B              ADDC    A,#HIGH InputGoodsWayList
8040DF F583              MOV     DPH,A
8040E1 E0                MOVX    A,@DPTR
8040E2 FD                MOV     R5,A
8040E3 75F005            MOV     B,#05H
8040E6 EE                MOV     A,R6
8040E7 900002            MOV     DPTR,#GoodsWaySetVal
8040EA A51280079F        ECALL   ?C?OFFXADD
8040EF E0                MOVX    A,@DPTR
8040F0 6D                XRL     A,R5
8040F1 7034              JNZ     ?C0756?MAINFLOW
8040F3 EF                MOV     A,R7
8040F4 25E0              ADD     A,ACC
8040F6 25E0              ADD     A,ACC
8040F8 24D5              ADD     A,#LOW InputGoodsWayList+02H
8040FA F582              MOV     DPL,A
8040FC E4                CLR     A
8040FD 342B              ADDC    A,#HIGH InputGoodsWayList+02H
8040FF F583              MOV     DPH,A
804101 E0                MOVX    A,@DPTR
804102 B40122            CJNE    A,#01H,?C0756?MAINFLOW
804105 901595            MOV     DPTR,#i
804108 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 105


804109 75F005            MOV     B,#05H
80410C 900004            MOV     DPTR,#GoodsWaySetVal+02H
80410F A51280079F        ECALL   ?C?OFFXADD
804114 E0                MOVX    A,@DPTR
804115 FE                MOV     R6,A
804116 A3                INC     DPTR
804117 E0                MOVX    A,@DPTR
804118 4E                ORL     A,R6
804119 700C              JNZ     ?C0756?MAINFLOW
 3480: 			( InputGoodsWayList[ i ].UseState == 1 ) &&
 3481: 			( GoodsWaySetVal[i].Price == 0 ) )
 3482: 		{
 3483: 			HardWareErr |= 0x0400;
80411B 90047F            MOV     DPTR,#HardWareErr
80411E E0                MOVX    A,@DPTR
80411F 4404              ORL     A,#04H
804121 F0                MOVX    @DPTR,A
804122 A3                INC     DPTR
804123 E0                MOVX    A,@DPTR
804124 F0                MOVX    @DPTR,A
 3484: 			break;
804125 8008              SJMP    ?C0755?MAINFLOW
 3485: 		}
 3486: 	}	
804127         ?C0756?MAINFLOW:
804127 901595            MOV     DPTR,#i
80412A E0                MOVX    A,@DPTR
80412B 04                INC     A
80412C F0                MOVX    @DPTR,A
80412D 8099              SJMP    ?C0754?MAINFLOW
80412F         ?C0755?MAINFLOW:
 3487: 	if( i != GOODSWAYNUM )
80412F 901595            MOV     DPTR,#i
804132 E0                MOVX    A,@DPTR
804133 6440              XRL     A,#040H
804135 6002              JZ      ?C0758?MAINFLOW
 3488: 	{
 3489: 		UpdataDisp = 0;
 3490: 		///清除报警标志位	
 3491: 		MoneyDevAlarm = 0;
 3492: 		SystemErrorAlarm = 0;
 3493: 		SMSQuery = 0;
 3494: 		//清除短信发送缓存区内的所有短信
 3495: 		ClearAllSMSInSMSBuffer();
 3496: 		return 0;
804137 8042              SJMP    ?C1086?MAINFLOW
 3497: 	}
804139         ?C0758?MAINFLOW:
 3498: 	CheckHardWare( 0 );
804139 A512809AFD        ECALL   ?L?COM0037
 3499: 	GetHopperList();		
 3500: 	for( i = 0; i < GOODSWAYNUM; i ++ )		
80413E E4                CLR     A
80413F 901595            MOV     DPTR,#i
804142 F0                MOVX    @DPTR,A
804143         ?C0760?MAINFLOW:
804143 901595            MOV     DPTR,#i
804146 E0                MOVX    A,@DPTR
804147 FF                MOV     R7,A
804148 C3                CLR     C
804149 9440              SUBB    A,#040H
80414B 5018              JNC     ?C0761?MAINFLOW
 3501: 		GoodsWaySetVal[i].WayState &= 0x1f;	
80414D 75F005            MOV     B,#05H
804150 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 106


804151 900003            MOV     DPTR,#GoodsWaySetVal+01H
804154 A51280079F        ECALL   ?C?OFFXADD
804159 E0                MOVX    A,@DPTR
80415A 541F              ANL     A,#01FH
80415C F0                MOVX    @DPTR,A
80415D 901595            MOV     DPTR,#i
804160 E0                MOVX    A,@DPTR
804161 04                INC     A
804162 F0                MOVX    @DPTR,A
804163 80DE              SJMP    ?C0760?MAINFLOW
804165         ?C0761?MAINFLOW:
 3502: 
 3503: 	if( ( ( DeviceStatus.BillAccepter != 0 ) || ( IsCanInCashFlag == 0 ) ) && ( DeviceStatus.CoinAccepter != 0 ) )
804165 900B16            MOV     DPTR,#DeviceStatus
804168 E0                MOVX    A,@DPTR
804169 7003              JNZ     ?C0764?MAINFLOW
80416B 20260D            JB      IsCanInCashFlag,?C0763?MAINFLOW
80416E         ?C0764?MAINFLOW:
80416E 900B17            MOV     DPTR,#DeviceStatus+01H
804171 E0                MOVX    A,@DPTR
804172 6007              JZ      ?C0763?MAINFLOW
 3504: 		HardWareErr |= 0x0002;
804174 900480            MOV     DPTR,#HardWareErr+01H
804177 E0                MOVX    A,@DPTR
804178 4402              ORL     A,#02H
80417A F0                MOVX    @DPTR,A
80417B         ?C0763?MAINFLOW:
 3505: 	UpdataDisp = 0;
80417B         
80417B E4                CLR     A
80417C 900B23            MOV     DPTR,#UpdataDisp
80417F F0                MOVX    @DPTR,A
 3506: 	///清除报警标志位	
 3507: 	MoneyDevAlarm = 0;
804180 90041D            MOV     DPTR,#MoneyDevAlarm
804183 F0                MOVX    @DPTR,A
 3508: 	SystemErrorAlarm = 0;
804184 900142            MOV     DPTR,#SystemErrorAlarm
804187 F0                MOVX    @DPTR,A
 3509: 	SMSQuery = 0;
804188 A3                INC     DPTR
804189 F0                MOVX    @DPTR,A
 3510: 	//清除短信发送缓存区内的所有短信
 3511: 	ClearAllSMSInSMSBuffer();
80418A A512813C44        ECALL   ClearAllSMSInSMSBuffer
 3512: 	return 0;
80418F 7F00              MOV     R7,#00H
 3513: }
804191         ?C0759?MAINFLOW:
804191 A522              ERET    
----- FUNCTION MaintFunction (END) -------


----- FUNCTION OutofService (BEGIN) -----
 FILE: 'mainflow.c'
 3524: u_char OutofService()
 3525: {	
 3526: 	u_char xdata len = 0;	
 3527: 	u_char xdata errcode = 0;
804193 E4                CLR     A
804194 901595            MOV     DPTR,#len
804197 F0                MOVX    @DPTR,A
 3528: 	
804198 A3                INC     DPTR
804199 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 107


 3529: //	Trace( "\n HardWareErr3 = %bu", HardWareErr );
 3530: //	CasherGetMachineState( 1 );//按交易状态处理
 3531: 	if ( isShowLcd == 1 )
80419A 202803            JB      isShowLcd,$ + 6H
80419D 024466            LJMP    ?C0767?MAINFLOW
 3532: 	{		
 3533: 		DisableBillDev();
8041A0 A512808FD7        ECALL   DisableBillDev
 3534: 		DisplayLine = STR_OUT_OF_SERVICE;
8041A5 900B21            MOV     DPTR,#DisplayLine
8041A8 7410              MOV     A,#010H
8041AA A51280802C        ECALL   ?L?COM0003
 3535: 		DisplayStr( 0, __LINE0__ , 1 , DispInformationTable[DisplayLine ].str, DispInformationTable[DisplayLine ].len )
>> ;
 3536: 		WaitForWork( 500 , NULL );
8041AF E4                CLR     A
8041B0 7FF4              MOV     R7,#0F4H
8041B2 7E01              MOV     R6,#01H
8041B4 A512807B35        ECALL   ?L?COM000D
 3537: 	
 3538: 		if( HardWareErr & 0x0001 )
8041B9 90047F            MOV     DPTR,#HardWareErr
8041BC E0                MOVX    A,@DPTR
8041BD FE                MOV     R6,A
8041BE A3                INC     DPTR
8041BF E0                MOVX    A,@DPTR
8041C0 FF                MOV     R7,A
8041C1 30E008            JNB     ACC.0,?C0768?MAINFLOW
 3539: 			errcode = 0xf1;
8041C4 901596            MOV     DPTR,#errcode
8041C7 74F1              MOV     A,#0F1H
8041C9 F0                MOVX    @DPTR,A
8041CA 807B              SJMP    ?C0769?MAINFLOW
8041CC         ?C0768?MAINFLOW:
 3540: 		else if( HardWareErr & 0x0002 )
8041CC EF                MOV     A,R7
8041CD 30E108            JNB     ACC.1,?C0770?MAINFLOW
 3541: 			errcode = 0xf2;
8041D0 901596            MOV     DPTR,#errcode
8041D3 74F2              MOV     A,#0F2H
8041D5 F0                MOVX    @DPTR,A
8041D6 806F              SJMP    ?C0769?MAINFLOW
8041D8         ?C0770?MAINFLOW:
 3542: 		else if( HardWareErr & 0x0004 )
8041D8 EF                MOV     A,R7
8041D9 30E208            JNB     ACC.2,?C0772?MAINFLOW
 3543: 			errcode = 0xf3;
8041DC 901596            MOV     DPTR,#errcode
8041DF 74F3              MOV     A,#0F3H
8041E1 F0                MOVX    @DPTR,A
8041E2 8063              SJMP    ?C0769?MAINFLOW
8041E4         ?C0772?MAINFLOW:
 3544: 		else if( HardWareErr & 0x0008 )
8041E4 EF                MOV     A,R7
8041E5 30E308            JNB     ACC.3,?C0774?MAINFLOW
 3545: 			errcode = 0xf4;
8041E8 901596            MOV     DPTR,#errcode
8041EB 74F4              MOV     A,#0F4H
8041ED F0                MOVX    @DPTR,A
8041EE 8057              SJMP    ?C0769?MAINFLOW
8041F0         ?C0774?MAINFLOW:
 3546: 		else if( HardWareErr & 0x0010 )
8041F0 EF                MOV     A,R7
8041F1 30E408            JNB     ACC.4,?C0776?MAINFLOW
 3547: 			errcode = 0xf5;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 108


8041F4 901596            MOV     DPTR,#errcode
8041F7 74F5              MOV     A,#0F5H
8041F9 F0                MOVX    @DPTR,A
8041FA 804B              SJMP    ?C0769?MAINFLOW
8041FC         ?C0776?MAINFLOW:
 3548: 		else if( HardWareErr & 0x0020 )
8041FC EF                MOV     A,R7
8041FD 30E508            JNB     ACC.5,?C0778?MAINFLOW
 3549: 			errcode = 0xf6;
804200 901596            MOV     DPTR,#errcode
804203 74F6              MOV     A,#0F6H
804205 F0                MOVX    @DPTR,A
804206 803F              SJMP    ?C0769?MAINFLOW
804208         ?C0778?MAINFLOW:
 3550: 		else if( HardWareErr & 0x0040 )
804208 EF                MOV     A,R7
804209 30E608            JNB     ACC.6,?C0780?MAINFLOW
 3551: 			errcode = 0xf7;	
80420C 901596            MOV     DPTR,#errcode
80420F 74F7              MOV     A,#0F7H
804211 F0                MOVX    @DPTR,A
804212 8033              SJMP    ?C0769?MAINFLOW
804214         ?C0780?MAINFLOW:
 3552: 		else if( HardWareErr & 0x0080 )
804214 EF                MOV     A,R7
804215 30E708            JNB     ACC.7,?C0782?MAINFLOW
 3553: 			errcode = 0xf8;	
804218 901596            MOV     DPTR,#errcode
80421B 74F8              MOV     A,#0F8H
80421D F0                MOVX    @DPTR,A
80421E 8027              SJMP    ?C0769?MAINFLOW
804220         ?C0782?MAINFLOW:
 3554: 		else if( HardWareErr & 0x0100 )
804220 EE                MOV     A,R6
804221 30E008            JNB     ACC.0,?C0784?MAINFLOW
 3555: 			errcode = 0xf9;	
804224 901596            MOV     DPTR,#errcode
804227 74F9              MOV     A,#0F9H
804229 F0                MOVX    @DPTR,A
80422A 801B              SJMP    ?C0769?MAINFLOW
80422C         ?C0784?MAINFLOW:
 3556: 		else if( HardWareErr & 0x0200 )
80422C EE                MOV     A,R6
80422D 30E108            JNB     ACC.1,?C0786?MAINFLOW
 3557: 			errcode = 0xfa;
804230 901596            MOV     DPTR,#errcode
804233 74FA              MOV     A,#0FAH
804235 F0                MOVX    @DPTR,A
804236 800F              SJMP    ?C0769?MAINFLOW
804238         ?C0786?MAINFLOW:
 3558: 		else if( HardWareErr & 0x0400 )
804238 EE                MOV     A,R6
804239 901596            MOV     DPTR,#errcode
80423C 30E205            JNB     ACC.2,?C0788?MAINFLOW
 3559: 			errcode = 0xfb;		
80423F 74FB              MOV     A,#0FBH
804241 F0                MOVX    @DPTR,A
804242 8003              SJMP    ?C0769?MAINFLOW
804244         ?C0788?MAINFLOW:
 3560: 		else
 3561: 			errcode = 0xff;
804244 74FF              MOV     A,#0FFH
804246 F0                MOVX    @DPTR,A
804247         ?C0769?MAINFLOW:
 3562: 		if( ( IOUFlag ) && ( SystemParameter.NotOutMax != 0 ) )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 109


804247 202B03            JB      IOUFlag,$ + 6H
80424A 024403            LJMP    ?C0790?MAINFLOW
80424D 90042D            MOV     DPTR,#SystemParameter+0FH
804250 E0                MOVX    A,@DPTR
804251 7002              JNZ     ?C1008?MAINFLOW
804253 A3                INC     DPTR
804254 E0                MOVX    A,@DPTR
804255         ?C1008?MAINFLOW:
804255 7003              JNZ     $ + 5H
804257 024403            LJMP    ?C0790?MAINFLOW
 3563: 		{			
 3564: 		#ifdef _CHINA_
 3565: 			len = sprintf( DisplayBuffer, "状态代码 = %02bx " , errcode );			
 3566: 		#else
 3567: 			len = sprintf( DisplayBuffer, "state code = %02bx  " , errcode );			
80425A 7B80              MOV     R3,#BYTE2 080045CH
80425C 7A04              MOV     R2,#HIGH 080045CH
80425E 795C              MOV     R1,#LOW 080045CH
804260 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
804263 A5128007B6        ECALL   ?C?PSTXDATA
804268 901596            MOV     DPTR,#errcode
80426B E0                MOVX    A,@DPTR
80426C 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80426F F0                MOVX    @DPTR,A
804270 7B00              MOV     R3,#?C?XDATASEG
804272 7A04              MOV     R2,#HIGH DisplayBuffer
804274 796B              MOV     R1,#LOW DisplayBuffer
804276 A512800949        ECALL   _sprintf
80427B 901595            MOV     DPTR,#len
80427E EF                MOV     A,R7
80427F F0                MOVX    @DPTR,A
 3568: 	    #endif
 3569: 			DisplayLine = STR_DUO_MONEY;			
804280 900B21            MOV     DPTR,#DisplayLine
804283 7420              MOV     A,#020H
804285 F0                MOVX    @DPTR,A
 3570: 			memcpy( DisplayBuffer + len , DispInformationTable[DisplayLine ].str, DispInformationTable[ DisplayLine ].len 
>> );
804286 E0                MOVX    A,@DPTR
804287 FE                MOV     R6,A
804288 25E0              ADD     A,ACC
80428A 25E0              ADD     A,ACC
80428C 2474              ADD     A,#LOW DispInformationTable+03H
80428E F582              MOV     DPL,A
804290 E4                CLR     A
804291 3404              ADDC    A,#HIGH DispInformationTable+03H
804293 F583              MOV     DPH,A
804295 E4                CLR     A
804296 93                MOVC    A,@A+DPTR
804297 FD                MOV     R5,A
804298 7C00              MOV     R4,#00H
80429A C004              PUSH    AR4
80429C C005              PUSH    AR5
80429E EE                MOV     A,R6
80429F 25E0              ADD     A,ACC
8042A1 25E0              ADD     A,ACC
8042A3 2471              ADD     A,#LOW DispInformationTable
8042A5 F582              MOV     DPL,A
8042A7 E4                CLR     A
8042A8 3404              ADDC    A,#HIGH DispInformationTable
8042AA F583              MOV     DPH,A
8042AC A5128007C0        ECALL   ?C?PLDCODE
8042B1 C001              PUSH    AR1
8042B3 746B              MOV     A,#LOW DisplayBuffer
8042B5 2F                ADD     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 110


8042B6 F9                MOV     R1,A
8042B7 E4                CLR     A
8042B8 3404              ADDC    A,#HIGH DisplayBuffer
8042BA A801              MOV     R0,AR1
8042BC FC                MOV     R4,A
8042BD 7D00              MOV     R5,#?C?XDATASEG
8042BF D001              POP     AR1
8042C1 D007              POP     AR7
8042C3 D006              POP     AR6
8042C5 A51280052D        ECALL   ?C?COPY
 3571: 			len += DispInformationTable[ DisplayLine ].len;
8042CA 900B21            MOV     DPTR,#DisplayLine
8042CD E0                MOVX    A,@DPTR
8042CE 25E0              ADD     A,ACC
8042D0 25E0              ADD     A,ACC
8042D2 2474              ADD     A,#LOW DispInformationTable+03H
8042D4 F582              MOV     DPL,A
8042D6 E4                CLR     A
8042D7 3404              ADDC    A,#HIGH DispInformationTable+03H
8042D9 F583              MOV     DPH,A
8042DB E4                CLR     A
8042DC 93                MOVC    A,@A+DPTR
8042DD FF                MOV     R7,A
8042DE 901595            MOV     DPTR,#len
8042E1 E0                MOVX    A,@DPTR
8042E2 2F                ADD     A,R7
8042E3 F0                MOVX    @DPTR,A
 3572: 			switch( SystemParameter.curUnit )
8042E4 900466            MOV     DPTR,#SystemParameter+048H
8042E7 E0                MOVX    A,@DPTR
8042E8 FE                MOV     R6,A
8042E9 A3                INC     DPTR
8042EA E0                MOVX    A,@DPTR
8042EB FF                MOV     R7,A
8042EC EE                MOV     A,R6
8042ED 6003              JZ      $ + 5H
8042EF 0243FF            LJMP    ?C0791?MAINFLOW
8042F2 EF                MOV     A,R7
8042F3 24F6              ADD     A,#0F6H
8042F5 6040              JZ      ?C0793?MAINFLOW
8042F7 24A6              ADD     A,#0A6H
8042F9 7003              JNZ     $ + 5H
8042FB 024393            LJMP    ?C0794?MAINFLOW
8042FE 2463              ADD     A,#063H
804300 6003              JZ      $ + 5H
804302 0243FF            LJMP    ?C0791?MAINFLOW
 3573: 			{
 3574: 				case 1:
804305         ?C0792?MAINFLOW:
 3575: 					len += sprintf( DisplayBuffer + len, "%u", SystemParameter.NotOutMax);
804305 901595            MOV     DPTR,#len
804308 E0                MOVX    A,@DPTR
804309 246B              ADD     A,#LOW DisplayBuffer
80430B F9                MOV     R1,A
80430C E4                CLR     A
80430D 3404              ADDC    A,#HIGH DisplayBuffer
80430F FA                MOV     R2,A
804310 7B00              MOV     R3,#?C?XDATASEG
804312 C003              PUSH    AR3
804314 C002              PUSH    AR2
804316 C001              PUSH    AR1
804318 7B80              MOV     R3,#BYTE2 080030EH
80431A 7A03              MOV     R2,#HIGH 080030EH
80431C 790E              MOV     R1,#LOW 080030EH
80431E 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 111


804321 A5128007B6        ECALL   ?C?PSTXDATA
804326 90042D            MOV     DPTR,#SystemParameter+0FH
804329 E0                MOVX    A,@DPTR
80432A FF                MOV     R7,A
80432B A3                INC     DPTR
80432C E0                MOVX    A,@DPTR
80432D 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
804330 CF                XCH     A,R7
804331 F0                MOVX    @DPTR,A
804332 A3                INC     DPTR
804333 EF                MOV     A,R7
 3576: 					break;				
804334 0243ED            LJMP    ?C1088?MAINFLOW
 3577: 				case 10:
804337         ?C0793?MAINFLOW:
 3578: 					len += sprintf( DisplayBuffer + len, "%u.%u", SystemParameter.NotOutMax/SystemParameter.curUnit, SystemParam
>> eter.NotOutMax%SystemParameter.curUnit );
804337 901595            MOV     DPTR,#len
80433A E0                MOVX    A,@DPTR
80433B 246B              ADD     A,#LOW DisplayBuffer
80433D F9                MOV     R1,A
80433E E4                CLR     A
80433F 3404              ADDC    A,#HIGH DisplayBuffer
804341 FA                MOV     R2,A
804342 7B00              MOV     R3,#?C?XDATASEG
804344 C003              PUSH    AR3
804346 C002              PUSH    AR2
804348 C001              PUSH    AR1
80434A 7B80              MOV     R3,#BYTE2 0800311H
80434C 7A03              MOV     R2,#HIGH 0800311H
80434E 7911              MOV     R1,#LOW 0800311H
804350 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
804353 A5128007B6        ECALL   ?C?PSTXDATA
804358 900466            MOV     DPTR,#SystemParameter+048H
80435B E0                MOVX    A,@DPTR
80435C FA                MOV     R2,A
80435D A3                INC     DPTR
80435E E0                MOVX    A,@DPTR
80435F FB                MOV     R3,A
804360 90042D            MOV     DPTR,#SystemParameter+0FH
804363 E0                MOVX    A,@DPTR
804364 FE                MOV     R6,A
804365 A3                INC     DPTR
804366 E0                MOVX    A,@DPTR
804367 FF                MOV     R7,A
804368 AD03              MOV     R5,AR3
80436A AC02              MOV     R4,AR2
80436C A51280056C        ECALL   ?C?UIDIV
804371 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
804374 EE                MOV     A,R6
804375 F0                MOVX    @DPTR,A
804376 A3                INC     DPTR
804377 EF                MOV     A,R7
804378 F0                MOVX    @DPTR,A
804379 90042D            MOV     DPTR,#SystemParameter+0FH
80437C E0                MOVX    A,@DPTR
80437D FE                MOV     R6,A
80437E A3                INC     DPTR
80437F E0                MOVX    A,@DPTR
804380 FF                MOV     R7,A
804381 AD03              MOV     R5,AR3
804383 AC02              MOV     R4,AR2
804385 A51280056C        ECALL   ?C?UIDIV
80438A 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80438D EC                MOV     A,R4
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 112


80438E F0                MOVX    @DPTR,A
80438F A3                INC     DPTR
804390 ED                MOV     A,R5
804391         
 3579: 					break;
804391 805A              SJMP    ?C1088?MAINFLOW
 3580: 				case 100:
804393         ?C0794?MAINFLOW:
 3581: 					len += sprintf( DisplayBuffer + len, "%u.%02u", SystemParameter.NotOutMax/SystemParameter.curUnit, SystemPar
>> ameter.NotOutMax%SystemParameter.curUnit );
804393 901595            MOV     DPTR,#len
804396 E0                MOVX    A,@DPTR
804397 246B              ADD     A,#LOW DisplayBuffer
804399 F9                MOV     R1,A
80439A E4                CLR     A
80439B 3404              ADDC    A,#HIGH DisplayBuffer
80439D FA                MOV     R2,A
80439E 7B00              MOV     R3,#?C?XDATASEG
8043A0 C003              PUSH    AR3
8043A2 C002              PUSH    AR2
8043A4 C001              PUSH    AR1
8043A6 7B80              MOV     R3,#BYTE2 0800317H
8043A8 7A03              MOV     R2,#HIGH 0800317H
8043AA 7917              MOV     R1,#LOW 0800317H
8043AC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8043AF A5128007B6        ECALL   ?C?PSTXDATA
8043B4 900466            MOV     DPTR,#SystemParameter+048H
8043B7 E0                MOVX    A,@DPTR
8043B8 FA                MOV     R2,A
8043B9 A3                INC     DPTR
8043BA E0                MOVX    A,@DPTR
8043BB FB                MOV     R3,A
8043BC 90042D            MOV     DPTR,#SystemParameter+0FH
8043BF E0                MOVX    A,@DPTR
8043C0 FE                MOV     R6,A
8043C1 A3                INC     DPTR
8043C2 E0                MOVX    A,@DPTR
8043C3 FF                MOV     R7,A
8043C4 AD03              MOV     R5,AR3
8043C6 AC02              MOV     R4,AR2
8043C8 A51280056C        ECALL   ?C?UIDIV
8043CD 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8043D0 EE                MOV     A,R6
8043D1 F0                MOVX    @DPTR,A
8043D2 A3                INC     DPTR
8043D3 EF                MOV     A,R7
8043D4 F0                MOVX    @DPTR,A
8043D5 90042D            MOV     DPTR,#SystemParameter+0FH
8043D8 E0                MOVX    A,@DPTR
8043D9 FE                MOV     R6,A
8043DA A3                INC     DPTR
8043DB E0                MOVX    A,@DPTR
8043DC FF                MOV     R7,A
8043DD AD03              MOV     R5,AR3
8043DF AC02              MOV     R4,AR2
8043E1 A51280056C        ECALL   ?C?UIDIV
8043E6 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
8043E9 EC                MOV     A,R4
8043EA F0                MOVX    @DPTR,A
8043EB A3                INC     DPTR
8043EC ED                MOV     A,R5
8043ED         
8043ED F0                MOVX    @DPTR,A
8043EE D001              POP     AR1
8043F0 D002              POP     AR2
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 113


8043F2 D003              POP     AR3
8043F4 A512800949        ECALL   _sprintf
8043F9 901595            MOV     DPTR,#len
8043FC E0                MOVX    A,@DPTR
8043FD 2F                ADD     A,R7
8043FE F0                MOVX    @DPTR,A
 3582: 				break;		
 3583: 			}			
8043FF         ?C0791?MAINFLOW:
 3584: 			IOUFlag = 0;
8043FF C22B              CLR     IOUFlag
 3585: 		}
804401 8026              SJMP    ?C0795?MAINFLOW
804403         ?C0790?MAINFLOW:
 3586: 		else		
 3587: 		#ifdef _CHINA_
 3588: 			len = sprintf( DisplayBuffer, "状态代码 = %02bx " , errcode );			
 3589: 		#else
 3590: 			len = sprintf( DisplayBuffer, "state code = %02bx  " , errcode );			
804403 7B80              MOV     R3,#BYTE2 080045CH
804405 7A04              MOV     R2,#HIGH 080045CH
804407 795C              MOV     R1,#LOW 080045CH
804409 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80440C A5128007B6        ECALL   ?C?PSTXDATA
804411 901596            MOV     DPTR,#errcode
804414 E0                MOVX    A,@DPTR
804415 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
804418 F0                MOVX    @DPTR,A
804419 7B00              MOV     R3,#?C?XDATASEG
80441B 7A04              MOV     R2,#HIGH DisplayBuffer
80441D 796B              MOV     R1,#LOW DisplayBuffer
80441F A512800949        ECALL   _sprintf
804424 901595            MOV     DPTR,#len
804427 EF                MOV     A,R7
804428 F0                MOVX    @DPTR,A
804429         ?C0795?MAINFLOW:
 3591: 	    #endif
 3592: //		Trace( "\n LEN = %bu", len );
 3593: 		DisplayStr( 0, __LINE1__ , 1, DisplayBuffer, len );
804429 D21A              SETB    ?_DisplayStr?BIT
80442B 7B00              MOV     R3,#?C?XDATASEG
80442D 7A04              MOV     R2,#HIGH DisplayBuffer
80442F 796B              MOV     R1,#LOW DisplayBuffer
804431 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804434 A5128007B6        ECALL   ?C?PSTXDATA
804439 901595            MOV     DPTR,#len
80443C E0                MOVX    A,@DPTR
80443D 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804440 F0                MOVX    @DPTR,A
804441 7D01              MOV     R5,#01H
804443 E4                CLR     A
804444 FF                MOV     R7,A
804445 A512808062        ECALL   _DisplayStr
 3594: 		WaitForWork( 500 , NULL );
80444A E4                CLR     A
80444B 7FF4              MOV     R7,#0F4H
80444D 7E01              MOV     R6,#01H
80444F A512807B35        ECALL   ?L?COM000D
 3595: 		
 3596: 		isShowLcd = 0;	
804454 C228              CLR     isShowLcd
 3597: 		SystemStatus = 2;
804456 9001C4            MOV     DPTR,#SystemStatus
804459 7402              MOV     A,#02H
80445B F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 114


 3598: 		SaveGlobalParam();
80445C A51280C54C        ECALL   SaveGlobalParam
 3599: 		SaveGoodsSet();			
804461 A51280C35F        ECALL   SaveGoodsSet
 3600: 	}	
804466         ?C0767?MAINFLOW:
 3601: 	if( SystemParameter.MobileON != 1 )
804466 900444            MOV     DPTR,#SystemParameter+026H
804469 E0                MOVX    A,@DPTR
80446A 6401              XRL     A,#01H
80446C 6004              JZ      ?C0796?MAINFLOW
 3602: 		return 1;
80446E 7F01              MOV     R7,#01H
804470 801C              SJMP    ?C0797?MAINFLOW
804472         ?C0796?MAINFLOW:
 3603: 	if( ( AlarmTime == 0x00 ) && ( ScanIsSendAlarm() == 0 ) )
804472 900000            MOV     DPTR,#AlarmTime
804475 E0                MOVX    A,@DPTR
804476 700F              JNZ     ?C0798?MAINFLOW
804478 A512809FA6        ECALL   ScanIsSendAlarm
80447D EF                MOV     A,R7
80447E 7007              JNZ     ?C0798?MAINFLOW
 3604: 	{	
 3605: 		Trace("\n The Frist Alarm");			
 3606: 		AlarmTime = 1;		
804480 900000            MOV     DPTR,#AlarmTime
804483 04                INC     A
804484 F0                MOVX    @DPTR,A
 3607: 	}
804485 8005              SJMP    ?C0799?MAINFLOW
804487         ?C0798?MAINFLOW:
 3608: 	else 
 3609: 	{
 3610: 		CycleSendSMS();		
804487 A51280AEB6        ECALL   CycleSendSMS
 3611: 	}	
80448C         ?C0799?MAINFLOW:
 3612:     return 1;
80448C 7F01              MOV     R7,#01H
 3613: }
80448E         ?C0797?MAINFLOW:
80448E A522              ERET    
----- FUNCTION OutofService (END) -------


----- FUNCTION mainmenu (BEGIN) -----
 FILE: 'maintmenu.c'
   49: void mainmenu()
   50: {
   51: 	u_char  xdata firstNum ;//一级菜单编号
   52: 	u_char  xdata LineNum ;//选中屏幕的行号	
   53: 	u_char  xdata i = 0;
804490 E4                CLR     A
804491 901598            MOV     DPTR,#i
804494 F0                MOVX    @DPTR,A
   54: 	bit	data Notout = 1;
804495 D217              SETB    Notout
   55: 	u_char xdata ErrFlag = 0;
804497 A3                INC     DPTR
804498 F0                MOVX    @DPTR,A
   56: 	u_char xdata key = 0;
804499 A3                INC     DPTR
80449A F0                MOVX    @DPTR,A
   57: 	struct WaySet  xdata TempGoodsWaySetVal[GOODSWAYNUM];
   58: 	struct SYSTEMPARAMETER xdata TempSystemParameter;	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 115


   59: 	//u_char xdata str[20];
   60:     //struct SHORTMSG xdata message;
   61: 
   62: 	ErrFlag = 0;
80449B 024C3E            LJMP    ?C0081?MAINTMENU
80449E         ?C0001?MAINTMENU:
   63: 	while( ErrFlag == 0 )
80449E 901599            MOV     DPTR,#ErrFlag
8044A1 E0                MOVX    A,@DPTR
8044A2 6003              JZ      $ + 5H
8044A4 024C4E            LJMP    ?C0002?MAINTMENU
   64: 	{
   65: 		ErrFlag = 0;
8044A7 F0                MOVX    @DPTR,A
   66: 		Notout = 1;
8044A8 D217              SETB    Notout
   67: 		ClearKey();	
8044AA A5128087A8        ECALL   ClearKey
   68: 		/*显示两行菜单及其值*/
   69: 		DisplayStr( 0, 0, 1, MainMenuStr[0].str, MainMenuStr[0].len );//显示菜单	
8044AF D21A              SETB    ?_DisplayStr?BIT
8044B1 90165F            MOV     DPTR,#MainMenuStr
8044B4 A5128007C0        ECALL   ?C?PLDCODE
8044B9 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8044BC A5128007B6        ECALL   ?C?PSTXDATA
8044C1 901662            MOV     DPTR,#MainMenuStr+03H
8044C4 A512808059        ECALL   ?L?COM0005
   70: 		DisplayStr( 0, 1, 1, MainMenuStr[1].str, MainMenuStr[1].len );//显示菜单				
8044C9 D21A              SETB    ?_DisplayStr?BIT
8044CB 901663            MOV     DPTR,#MainMenuStr+04H
8044CE A5128007C0        ECALL   ?C?PLDCODE
8044D3 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8044D6 A5128007B6        ECALL   ?C?PSTXDATA
8044DB 901666            MOV     DPTR,#MainMenuStr+07H
8044DE A512808162        ECALL   ?L?COM000E
   71: 		DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
   72: 		firstNum = 1;
8044E3 901596            MOV     DPTR,#firstNum
8044E6 7401              MOV     A,#01H
8044E8 F0                MOVX    @DPTR,A
   73: 		LineNum = 2;	
8044E9 A3                INC     DPTR
8044EA 04                INC     A
8044EB F0                MOVX    @DPTR,A
8044EC         ?C0003?MAINTMENU:
   74: 		while( Notout )    //超时或客户退出
8044EC 201703            JB      Notout,$ + 6H
8044EF 024958            LJMP    ?C0004?MAINTMENU
   75: 		{				
   76: 			key = GetKey();
8044F2 A512809275        ECALL   GetKey
8044F7 90159A            MOV     DPTR,#key
8044FA EF                MOV     A,R7
8044FB F0                MOVX    @DPTR,A
   77: 			switch( key )		
8044FC 24F3              ADD     A,#0F3H
8044FE 7003              JNZ     $ + 5H
804500 024688            LJMP    ?C0021?MAINTMENU
804503 24F2              ADD     A,#0F2H
804505 7003              JNZ     $ + 5H
804507 024683            LJMP    ?C0020?MAINTMENU
80450A 24CB              ADD     A,#0CBH
80450C 7003              JNZ     $ + 5H
80450E 0245D7            LJMP    ?C0013?MAINTMENU
804511 2408              ADD     A,#08H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 116


804513 6003              JZ      $ + 5H
804515 024949            LJMP    ?C0005?MAINTMENU
   78: 			{
   79: 				case KEY_UP://上移  	
804518         ?C0006?MAINTMENU:
   80: 				     if( LineNum == 2 )//选中标记上移
804518 901597            MOV     DPTR,#LineNum
80451B E0                MOVX    A,@DPTR
80451C 6402              XRL     A,#02H
80451E 702D              JNZ     ?C0007?MAINTMENU
   81: 				     {			     
   82: 				     	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
804520 D21A              SETB    ?_DisplayCursorState?BIT
804522 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
804525 7402              MOV     A,#02H
804527 F0                MOVX    @DPTR,A
804528 D21B              SETB    ?_DisplayCursorState?BIT+01H
80452A E4                CLR     A
80452B FD                MOV     R5,A
80452C FF                MOV     R7,A
80452D A51280817F        ECALL   _DisplayCursorState
   83: 				     	LineNum = 1;			   
804532 901597            MOV     DPTR,#LineNum
804535 7401              MOV     A,#01H
804537 F0                MOVX    @DPTR,A
   84: 						if( firstNum == 0 )
804538 901596            MOV     DPTR,#firstNum
80453B E0                MOVX    A,@DPTR
80453C 7006              JNZ     ?C0008?MAINTMENU
   85: 							firstNum = MENU_COUNT(MainMenuStr)-1;					
80453E 7405              MOV     A,#05H
804540 F0                MOVX    @DPTR,A
804541 024949            LJMP    ?C0005?MAINTMENU
804544         ?C0008?MAINTMENU:
   86: 						else
   87: 							firstNum--;
804544 901596            MOV     DPTR,#firstNum
804547 E0                MOVX    A,@DPTR
804548 14                DEC     A
804549 F0                MOVX    @DPTR,A
   88: 				     }
80454A 024949            LJMP    ?C0005?MAINTMENU
80454D         ?C0007?MAINTMENU:
   89: 				     else//菜单上翻
   90: 				     {
   91: 				      	/*当firstNum<=1不能上翻了*/			      		
   92: 					//	DispDeviceMenu( firstNum, 1);									    
   93: 						DisplayStr( 0, 1, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
80454D D21A              SETB    ?_DisplayStr?BIT
80454F 901596            MOV     DPTR,#firstNum
804552 E0                MOVX    A,@DPTR
804553 FF                MOV     R7,A
804554 25E0              ADD     A,ACC
804556 25E0              ADD     A,ACC
804558 245F              ADD     A,#LOW MainMenuStr
80455A F582              MOV     DPL,A
80455C E4                CLR     A
80455D 3416              ADDC    A,#HIGH MainMenuStr
80455F F583              MOV     DPH,A
804561 A5128007C0        ECALL   ?C?PLDCODE
804566 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804569 A5128007B6        ECALL   ?C?PSTXDATA
80456E EF                MOV     A,R7
80456F 25E0              ADD     A,ACC
804571 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 117


804573 2462              ADD     A,#LOW MainMenuStr+03H
804575 F582              MOV     DPL,A
804577 E4                CLR     A
804578 3416              ADDC    A,#HIGH MainMenuStr+03H
80457A F583              MOV     DPH,A
80457C E4                CLR     A
80457D 93                MOVC    A,@A+DPTR
80457E 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804581 F0                MOVX    @DPTR,A
804582 7D01              MOV     R5,#01H
804584 E4                CLR     A
804585 FF                MOV     R7,A
804586 A512808062        ECALL   _DisplayStr
   94: 						if( firstNum == 0 )
80458B 901596            MOV     DPTR,#firstNum
80458E E0                MOVX    A,@DPTR
80458F 7005              JNZ     ?C0011?MAINTMENU
   95: 							firstNum = MENU_COUNT(MainMenuStr)-1;					
804591 7405              MOV     A,#05H
804593 F0                MOVX    @DPTR,A
804594 8006              SJMP    ?C0012?MAINTMENU
804596         ?C0011?MAINTMENU:
   96: 						else
   97: 							firstNum--;
804596 901596            MOV     DPTR,#firstNum
804599 E0                MOVX    A,@DPTR
80459A 14                DEC     A
80459B F0                MOVX    @DPTR,A
80459C         ?C0012?MAINTMENU:
   98: 					//	DispDeviceMenu( firstNum, 0);						
   99: 						DisplayStr( 0, 0, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
80459C D21A              SETB    ?_DisplayStr?BIT
80459E 901596            MOV     DPTR,#firstNum
8045A1 E0                MOVX    A,@DPTR
8045A2 FF                MOV     R7,A
8045A3 25E0              ADD     A,ACC
8045A5 25E0              ADD     A,ACC
8045A7 245F              ADD     A,#LOW MainMenuStr
8045A9 F582              MOV     DPL,A
8045AB E4                CLR     A
8045AC 3416              ADDC    A,#HIGH MainMenuStr
8045AE F583              MOV     DPH,A
8045B0 A5128007C0        ECALL   ?C?PLDCODE
8045B5 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8045B8 A5128007B6        ECALL   ?C?PSTXDATA
8045BD EF                MOV     A,R7
8045BE 25E0              ADD     A,ACC
8045C0 25E0              ADD     A,ACC
8045C2 2462              ADD     A,#LOW MainMenuStr+03H
8045C4 F582              MOV     DPL,A
8045C6 E4                CLR     A
8045C7 3416              ADDC    A,#HIGH MainMenuStr+03H
8045C9 A512808057        ECALL   ?L?COM0004
  100: 						LineNum = 1;					
8045CE 901597            MOV     DPTR,#LineNum
8045D1 7401              MOV     A,#01H
8045D3 F0                MOVX    @DPTR,A
  101: 				     }
  102: 					 break;
8045D4 024949            LJMP    ?C0005?MAINTMENU
  103: 				case KEY_DOWN://下移				
8045D7         ?C0013?MAINTMENU:
  104: 					if( LineNum == 1 )//选中标记下移
8045D7 901597            MOV     DPTR,#LineNum
8045DA E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 118


8045DB 6401              XRL     A,#01H
8045DD 701A              JNZ     ?C0014?MAINTMENU
  105: 					{				 
  106: 					     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标				   
8045DF A512808171        ECALL   ?L?COM000F
  107: 						if( firstNum == MENU_COUNT(MainMenuStr)-1 )
8045E4 901596            MOV     DPTR,#firstNum
8045E7 E0                MOVX    A,@DPTR
8045E8 B40505            CJNE    A,#05H,?C0015?MAINTMENU
  108: 							firstNum = 0;					
8045EB E4                CLR     A
8045EC F0                MOVX    @DPTR,A
8045ED 02467A            LJMP    ?C0082?MAINTMENU
8045F0         ?C0015?MAINTMENU:
  109: 						else
  110: 							firstNum++;
8045F0 901596            MOV     DPTR,#firstNum
8045F3 E0                MOVX    A,@DPTR
8045F4 04                INC     A
8045F5 F0                MOVX    @DPTR,A
8045F6         ?C0016?MAINTMENU:
  111: 					     LineNum = 2;				     
  112: 					 }
8045F6 02467A            LJMP    ?C0082?MAINTMENU
8045F9         ?C0014?MAINTMENU:
  113: 					 else//菜单下翻
  114: 					 {
  115: 					    /*当firstNum<=2不能上翻了*/				    				
  116: 						DisplayStr( 0, 0, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
8045F9 D21A              SETB    ?_DisplayStr?BIT
8045FB 901596            MOV     DPTR,#firstNum
8045FE E0                MOVX    A,@DPTR
8045FF FF                MOV     R7,A
804600 25E0              ADD     A,ACC
804602 25E0              ADD     A,ACC
804604 245F              ADD     A,#LOW MainMenuStr
804606 F582              MOV     DPL,A
804608 E4                CLR     A
804609 3416              ADDC    A,#HIGH MainMenuStr
80460B F583              MOV     DPH,A
80460D A5128007C0        ECALL   ?C?PLDCODE
804612 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804615 A5128007B6        ECALL   ?C?PSTXDATA
80461A EF                MOV     A,R7
80461B 25E0              ADD     A,ACC
80461D 25E0              ADD     A,ACC
80461F 2462              ADD     A,#LOW MainMenuStr+03H
804621 F582              MOV     DPL,A
804623 E4                CLR     A
804624 3416              ADDC    A,#HIGH MainMenuStr+03H
804626 A512808057        ECALL   ?L?COM0004
  117: 				      	if( firstNum == MENU_COUNT(MainMenuStr)-1 )
80462B 901596            MOV     DPTR,#firstNum
80462E E0                MOVX    A,@DPTR
80462F B40504            CJNE    A,#05H,?C0018?MAINTMENU
  118: 							firstNum = 0;					
804632 E4                CLR     A
804633 F0                MOVX    @DPTR,A
804634 8006              SJMP    ?C0019?MAINTMENU
804636         ?C0018?MAINTMENU:
  119: 						else
  120: 							firstNum++;
804636 901596            MOV     DPTR,#firstNum
804639 E0                MOVX    A,@DPTR
80463A 04                INC     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 119


80463B F0                MOVX    @DPTR,A
80463C         ?C0019?MAINTMENU:
  121: 						DisplayStr( 0, 1, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
80463C D21A              SETB    ?_DisplayStr?BIT
80463E 901596            MOV     DPTR,#firstNum
804641 E0                MOVX    A,@DPTR
804642 FF                MOV     R7,A
804643 25E0              ADD     A,ACC
804645 25E0              ADD     A,ACC
804647 245F              ADD     A,#LOW MainMenuStr
804649 F582              MOV     DPL,A
80464B E4                CLR     A
80464C 3416              ADDC    A,#HIGH MainMenuStr
80464E F583              MOV     DPH,A
804650 A5128007C0        ECALL   ?C?PLDCODE
804655 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804658 A5128007B6        ECALL   ?C?PSTXDATA
80465D EF                MOV     A,R7
80465E 25E0              ADD     A,ACC
804660 25E0              ADD     A,ACC
804662 2462              ADD     A,#LOW MainMenuStr+03H
804664 F582              MOV     DPL,A
804666 E4                CLR     A
804667 3416              ADDC    A,#HIGH MainMenuStr+03H
804669 F583              MOV     DPH,A
80466B E4                CLR     A
80466C 93                MOVC    A,@A+DPTR
80466D 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804670 F0                MOVX    @DPTR,A
804671 7D01              MOV     R5,#01H
804673 E4                CLR     A
804674 FF                MOV     R7,A
804675 A512808062        ECALL   _DisplayStr
  122: 						LineNum = 2;					
80467A         
80467A 901597            MOV     DPTR,#LineNum
80467D 7402              MOV     A,#02H
80467F F0                MOVX    @DPTR,A
  123: 					}
  124: 					break;
804680 024949            LJMP    ?C0005?MAINTMENU
  125: 				case KEY_CANCEL:
804683         ?C0020?MAINTMENU:
  126: 					Notout = 0;
804683 C217              CLR     Notout
  127: 					break;			
804685 024949            LJMP    ?C0005?MAINTMENU
  128: 				case KEY_SUBMIT://Enter,选中了某项菜单	
804688         ?C0021?MAINTMENU:
  129: 					DisplayCursorState( 0, 0, 0, 0, 1 );//第二行整光标
804688 C21A              CLR     ?_DisplayCursorState?BIT
80468A E4                CLR     A
80468B 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80468E F0                MOVX    @DPTR,A
80468F D21B              SETB    ?_DisplayCursorState?BIT+01H
804691 FD                MOV     R5,A
804692 A5128087A2        ECALL   ?L?COM0012
  130: 					ClearKey();				
  131: 					switch(firstNum)
804697 901596            MOV     DPTR,#firstNum
80469A E0                MOVX    A,@DPTR
80469B 14                DEC     A
80469C 6027              JZ      ?C0024?MAINTMENU
80469E 14                DEC     A
80469F 7003              JNZ     $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 120


8046A1 0247F7            LJMP    ?C0038?MAINTMENU
8046A4 14                DEC     A
8046A5 7003              JNZ     $ + 5H
8046A7 0247FE            LJMP    ?C0039?MAINTMENU
8046AA 14                DEC     A
8046AB 7003              JNZ     $ + 5H
8046AD 024805            LJMP    ?C0040?MAINTMENU
8046B0 14                DEC     A
8046B1 7003              JNZ     $ + 5H
8046B3 02480C            LJMP    ?C0041?MAINTMENU
8046B6 2405              ADD     A,#05H
8046B8 6003              JZ      $ + 5H
8046BA 024811            LJMP    ?C0022?MAINTMENU
  132: 					{					
  133: 						case 0:
8046BD         ?C0023?MAINTMENU:
  134: 							//货道设置
  135: 							GoodsParamManage();						
8046BD A51280D818        ECALL   GoodsParamManage
  136: 						break;
8046C2 024811            LJMP    ?C0022?MAINTMENU
  137: 						case 1://添货
8046C5         ?C0024?MAINTMENU:
  138: 							key = 0;
8046C5 E4                CLR     A
8046C6 90159A            MOV     DPTR,#key
8046C9 F0                MOVX    @DPTR,A
  139: 							i = 1;
8046CA 901598            MOV     DPTR,#i
8046CD 04                INC     A
8046CE F0                MOVX    @DPTR,A
  140: 					#ifdef _CHINA_
  141: 							DisplayStr( 0, 0, 1, "    你确定添货吗?", 17 ),//全部计数值清零
  142: 							DisplayStr( 0, 1, 1, "确定ENTER 取消CANCEL", 20 );	
  143: 					#else		
  144: 							DisplayStr( 0, 0, 1, "   Are you sure ?", 17 ),//全部计数值清零
8046CF D21A              SETB    ?_DisplayStr?BIT
8046D1 7B80              MOV     R3,#BYTE2 0801607H
8046D3 7A16              MOV     R2,#HIGH 0801607H
8046D5 7907              MOV     R1,#LOW 0801607H
8046D7 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8046DA A5128007B6        ECALL   ?C?PSTXDATA
8046DF 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8046E2 7411              MOV     A,#011H
8046E4 A51280805E        ECALL   ?L?COM0007
8046E9 D21A              SETB    ?_DisplayStr?BIT
8046EB 7B80              MOV     R3,#BYTE2 0801619H
8046ED 7A16              MOV     R2,#HIGH 0801619H
8046EF 7919              MOV     R1,#LOW 0801619H
8046F1 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8046F4 A5128007B6        ECALL   ?C?PSTXDATA
8046F9 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8046FC 7411              MOV     A,#011H
8046FE F0                MOVX    @DPTR,A
8046FF 7D01              MOV     R5,#01H
804701 E4                CLR     A
804702 FF                MOV     R7,A
804703 A512808062        ECALL   _DisplayStr
804708         ?C0025?MAINTMENU:
  145: 							DisplayStr( 0, 1, 1, "   ENTER   CANCEL", 17 );	
  146: 					#endif													
  147: 							while( i == 1 )
804708 901598            MOV     DPTR,#i
80470B E0                MOVX    A,@DPTR
80470C B4011E            CJNE    A,#01H,?C0026?MAINTMENU
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 121


  148: 							{
  149: 								key = GetKey();
80470F A512809275        ECALL   GetKey
804714 90159A            MOV     DPTR,#key
804717 EF                MOV     A,R7
804718 F0                MOVX    @DPTR,A
  150: 								if( ( key == KEY_CANCEL ) || (key == KEY_SUBMIT) )
804719 641B              XRL     A,#01BH
80471B 6010              JZ      ?C0026?MAINTMENU
80471D E0                MOVX    A,@DPTR
80471E 640D              XRL     A,#0DH
804720 600B              JZ      ?C0026?MAINTMENU
  151: 									break;
804722         ?C0027?MAINTMENU:
  152: 								WaitForWork( 100, NULL );	
804722 E4                CLR     A
804723 7F64              MOV     R7,#064H
804725 FE                MOV     R6,A
804726 A512807B35        ECALL   ?L?COM000D
  153: 							}
80472B 80DB              SJMP    ?C0025?MAINTMENU
80472D         ?C0026?MAINTMENU:
  154: 							if( key == KEY_CANCEL )
80472D 90159A            MOV     DPTR,#key
804730 E0                MOVX    A,@DPTR
804731 641B              XRL     A,#01BH
804733 7003              JNZ     $ + 5H
804735 024811            LJMP    ?C0022?MAINTMENU
  155: 									break;								
804738         ?C0029?MAINTMENU:
  156: 							for( key = 0; key < GOODSWAYNUM; key ++ )
804738 E4                CLR     A
804739 90159A            MOV     DPTR,#key
80473C F0                MOVX    @DPTR,A
80473D         ?C0030?MAINTMENU:
80473D 90159A            MOV     DPTR,#key
804740 E0                MOVX    A,@DPTR
804741 FF                MOV     R7,A
804742 C3                CLR     C
804743 9440              SUBB    A,#040H
804745 4003              JC      $ + 5H
804747 0247E6            LJMP    ?C0031?MAINTMENU
  157: 							{	
  158: 								if( InputGoodsWayList[key].UseState != 1 )
80474A EF                MOV     A,R7
80474B 25E0              ADD     A,ACC
80474D 25E0              ADD     A,ACC
80474F 24D5              ADD     A,#LOW InputGoodsWayList+02H
804751 F582              MOV     DPL,A
804753 E4                CLR     A
804754 342B              ADDC    A,#HIGH InputGoodsWayList+02H
804756 F583              MOV     DPH,A
804758 E0                MOVX    A,@DPTR
804759 6401              XRL     A,#01H
80475B 6003              JZ      $ + 5H
80475D 0247DD            LJMP    ?C0032?MAINTMENU
  159: 									continue;
804760         ?C0033?MAINTMENU:
  160: 								else
  161: 								{
  162: 									if( InputGoodsWayList[key].GoodsWayNo == GoodsWaySetVal[key].WayNo )
804760 90159A            MOV     DPTR,#key
804763 E0                MOVX    A,@DPTR
804764 FF                MOV     R7,A
804765 75F005            MOV     B,#05H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 122


804768 900002            MOV     DPTR,#GoodsWaySetVal
80476B A51280079F        ECALL   ?C?OFFXADD
804770 E0                MOVX    A,@DPTR
804771 FE                MOV     R6,A
804772 EF                MOV     A,R7
804773 25E0              ADD     A,ACC
804775 25E0              ADD     A,ACC
804777 24D3              ADD     A,#LOW InputGoodsWayList
804779 F582              MOV     DPL,A
80477B E4                CLR     A
80477C 342B              ADDC    A,#HIGH InputGoodsWayList
80477E F583              MOV     DPH,A
804780 E0                MOVX    A,@DPTR
804781 6E                XRL     A,R6
804782 7048              JNZ     ?C0035?MAINTMENU
  163: 									{
  164: 										GoodsWaySetVal[key].GoodsCurrentSum = InputGoodsWayList[key].GoodsMax;
804784 90159A            MOV     DPTR,#key
804787 E0                MOVX    A,@DPTR
804788 25E0              ADD     A,ACC
80478A 25E0              ADD     A,ACC
80478C 24D6              ADD     A,#LOW InputGoodsWayList+03H
80478E F582              MOV     DPL,A
804790 E4                CLR     A
804791 342B              ADDC    A,#HIGH InputGoodsWayList+03H
804793 F583              MOV     DPH,A
804795 E0                MOVX    A,@DPTR
804796 FE                MOV     R6,A
804797 75F005            MOV     B,#05H
80479A EF                MOV     A,R7
80479B 900006            MOV     DPTR,#GoodsWaySetVal+04H
80479E A51280079F        ECALL   ?C?OFFXADD
8047A3 EE                MOV     A,R6
8047A4 F0                MOVX    @DPTR,A
  165: 										if( ( GoodsWaySetVal[key].WayState & 0x04 ) == 0x04 )
8047A5 90159A            MOV     DPTR,#key
8047A8 E0                MOVX    A,@DPTR
8047A9 FF                MOV     R7,A
8047AA 75F005            MOV     B,#05H
8047AD 900003            MOV     DPTR,#GoodsWaySetVal+01H
8047B0 A51280079F        ECALL   ?C?OFFXADD
8047B5 E0                MOVX    A,@DPTR
8047B6 FE                MOV     R6,A
8047B7 30E223            JNB     ACC.2,?C0032?MAINTMENU
  166: 											GoodsWaySetVal[key].WayState &= 0xfb;
8047BA 75F005            MOV     B,#05H
8047BD EF                MOV     A,R7
8047BE 900003            MOV     DPTR,#GoodsWaySetVal+01H
8047C1 A51280079F        ECALL   ?C?OFFXADD
8047C6 EE                MOV     A,R6
8047C7 54FB              ANL     A,#0FBH
8047C9 F0                MOVX    @DPTR,A
  167: 									}
8047CA 8011              SJMP    ?C0032?MAINTMENU
8047CC         ?C0035?MAINTMENU:
  168: 									else
  169: 										GoodsWaySetVal[key].GoodsCurrentSum = 0;
8047CC 90159A            MOV     DPTR,#key
8047CF E0                MOVX    A,@DPTR
8047D0 75F005            MOV     B,#05H
8047D3 900006            MOV     DPTR,#GoodsWaySetVal+04H
8047D6 A51280079F        ECALL   ?C?OFFXADD
8047DB E4                CLR     A
8047DC F0                MOVX    @DPTR,A
  170: 								}								
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 123


  171: 							}
8047DD         ?C0032?MAINTMENU:
8047DD 90159A            MOV     DPTR,#key
8047E0 E0                MOVX    A,@DPTR
8047E1 04                INC     A
8047E2 F0                MOVX    @DPTR,A
8047E3 02473D            LJMP    ?C0030?MAINTMENU
8047E6         ?C0031?MAINTMENU:
  172: 							GoodsSetSave = 1;
8047E6 902DEF            MOV     DPTR,#GoodsSetSave
8047E9 7401              MOV     A,#01H
8047EB F0                MOVX    @DPTR,A
  173: 							i = 0;
8047EC E4                CLR     A
8047ED 901598            MOV     DPTR,#i
8047F0 F0                MOVX    @DPTR,A
  174: 							key = 0;
8047F1 90159A            MOV     DPTR,#key
8047F4 F0                MOVX    @DPTR,A
  175: 						//	j = 0;							
  176: 						break;				
8047F5 801A              SJMP    ?C0022?MAINTMENU
  177: 						case 2:
8047F7         ?C0038?MAINTMENU:
  178: 							//设备检测	
  179: 							DeviceCheck();
8047F7 A51280CC40        ECALL   DeviceCheck
  180: 		//					Trace("\n GoodsSetSave2 = %bu", GoodsSetSave );					
  181: 							break;					
8047FC 8013              SJMP    ?C0022?MAINTMENU
  182: 						case 3:
8047FE         ?C0039?MAINTMENU:
  183: 							//系统参数维护
  184: 							SysParamManage();
8047FE A512810000        ECALL   SysParamManage
  185: 							break;	
804803 800C              SJMP    ?C0022?MAINTMENU
  186: 						case 4:
804805         ?C0040?MAINTMENU:
  187: 							CounterMainMenu();
804805 A512804C53        ECALL   CounterMainMenu
  188: 							break;	
80480A 8005              SJMP    ?C0022?MAINTMENU
  189: 						case 5:
80480C         ?C0041?MAINTMENU:
  190: 							//层架配置
  191: 							RackParamManage();
80480C A512810B9A        ECALL   RackParamManage
  192: 							break;
  193: 					//	case 6:
  194: 					//	{							
  195: 						//	memset( &message, 0, sizeof( struct SHORTMSG ) );	
  196: 						//	PhoneTBCD( 										
  197: 						//	message.phone[0] = 0x86;
  198: 						//	message.phone[1] = 0x13;
  199: 						//	message.phone[2] = 0x76;
  200: 						//	message.phone[3] = 0x38;
  201: 						//	message.phone[4] = 0x92;
  202: 						//	message.phone[5] = 0x17;
  203: 						//	message.phone[6] = 0x2f;
  204: 						//	message.phone[7] = '\0';
  205: 						//	strcpy((char*)message.phone , "8613763892172");
  206: 						//	memcpy( message.msg, "SMSGSM12345M0101", 16 );
  207: 						//	message.len = 16;
  208: 						//	PutShortMsg( &message );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 124


  209: 					//	}
  210: 					//		break;
  211: 					}
804811         ?C0022?MAINTMENU:
  212: 					if(LineNum ==2)
804811 901597            MOV     DPTR,#LineNum
804814 E0                MOVX    A,@DPTR
804815 6402              XRL     A,#02H
804817 6003              JZ      $ + 5H
804819 0248A8            LJMP    ?C0042?MAINTMENU
  213: 					{	
  214: 						if( firstNum == 0 )											
80481C 901596            MOV     DPTR,#firstNum
80481F E0                MOVX    A,@DPTR
804820 7017              JNZ     ?C0043?MAINTMENU
  215: 							DisplayStr( 0, 0, 1, MainMenuStr[MENU_COUNT(MainMenuStr)-1].str, MainMenuStr[MENU_COUNT(MainMenuStr)-1].le
>> n );
804822 D21A              SETB    ?_DisplayStr?BIT
804824 901673            MOV     DPTR,#MainMenuStr+014H
804827 A5128007C0        ECALL   ?C?PLDCODE
80482C 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80482F A5128007B6        ECALL   ?C?PSTXDATA
804834 901676            MOV     DPTR,#MainMenuStr+017H
804837 802F              SJMP    ?C0079?MAINTMENU
804839         ?C0043?MAINTMENU:
  216: 						else						
  217: 							DisplayStr( 0, 0, 1, MainMenuStr[firstNum - 1].str, MainMenuStr[firstNum - 1].len );
804839 D21A              SETB    ?_DisplayStr?BIT
80483B 901596            MOV     DPTR,#firstNum
80483E E0                MOVX    A,@DPTR
80483F FF                MOV     R7,A
804840 25E0              ADD     A,ACC
804842 25E0              ADD     A,ACC
804844 245B              ADD     A,#LOW MainMenuStr-04H
804846 F582              MOV     DPL,A
804848 E4                CLR     A
804849 3416              ADDC    A,#HIGH MainMenuStr-04H
80484B F583              MOV     DPH,A
80484D A5128007C0        ECALL   ?C?PLDCODE
804852 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804855 A5128007B6        ECALL   ?C?PSTXDATA
80485A EF                MOV     A,R7
80485B 25E0              ADD     A,ACC
80485D 25E0              ADD     A,ACC
80485F 245E              ADD     A,#LOW MainMenuStr-01H
804861 F582              MOV     DPL,A
804863 E4                CLR     A
804864 3416              ADDC    A,#HIGH MainMenuStr-01H
804866 F583              MOV     DPH,A
804868         
804868 A512808059        ECALL   ?L?COM0005
80486D         ?C0044?MAINTMENU:
  218: 						DisplayStr( 0, 1, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
80486D D21A              SETB    ?_DisplayStr?BIT
80486F 901596            MOV     DPTR,#firstNum
804872 E0                MOVX    A,@DPTR
804873 FF                MOV     R7,A
804874 25E0              ADD     A,ACC
804876 25E0              ADD     A,ACC
804878 245F              ADD     A,#LOW MainMenuStr
80487A F582              MOV     DPL,A
80487C E4                CLR     A
80487D 3416              ADDC    A,#HIGH MainMenuStr
80487F F583              MOV     DPH,A
804881 A5128007C0        ECALL   ?C?PLDCODE
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 125


804886 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804889 A5128007B6        ECALL   ?C?PSTXDATA
80488E EF                MOV     A,R7
80488F 25E0              ADD     A,ACC
804891 25E0              ADD     A,ACC
804893 2462              ADD     A,#LOW MainMenuStr+03H
804895 F582              MOV     DPL,A
804897 E4                CLR     A
804898 3416              ADDC    A,#HIGH MainMenuStr+03H
80489A F583              MOV     DPH,A
80489C E4                CLR     A
80489D 93                MOVC    A,@A+DPTR
80489E 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8048A1 F0                MOVX    @DPTR,A
8048A2 7D01              MOV     R5,#01H
8048A4 E4                CLR     A
  219: 					}
8048A5 02493B            LJMP    ?C0083?MAINTMENU
8048A8         ?C0042?MAINTMENU:
  220: 					else
  221: 					{												
  222: 						if( firstNum == ( MENU_COUNT(MainMenuStr)-1 ) )				
8048A8 901596            MOV     DPTR,#firstNum
8048AB E0                MOVX    A,@DPTR
8048AC B40517            CJNE    A,#05H,?C0046?MAINTMENU
  223: 							DisplayStr( 0, 1, 1, MainMenuStr[0].str, MainMenuStr[0].len );
8048AF D21A              SETB    ?_DisplayStr?BIT
8048B1 90165F            MOV     DPTR,#MainMenuStr
8048B4 A5128007C0        ECALL   ?C?PLDCODE
8048B9 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8048BC A5128007B6        ECALL   ?C?PSTXDATA
8048C1 901662            MOV     DPTR,#MainMenuStr+03H
8048C4 802F              SJMP    ?C0080?MAINTMENU
8048C6         ?C0046?MAINTMENU:
  224: 						else						
  225: 							DisplayStr( 0, 1, 1, MainMenuStr[firstNum + 1].str, MainMenuStr[firstNum + 1].len );
8048C6 D21A              SETB    ?_DisplayStr?BIT
8048C8 901596            MOV     DPTR,#firstNum
8048CB E0                MOVX    A,@DPTR
8048CC FF                MOV     R7,A
8048CD 25E0              ADD     A,ACC
8048CF 25E0              ADD     A,ACC
8048D1 2463              ADD     A,#LOW MainMenuStr+04H
8048D3 F582              MOV     DPL,A
8048D5 E4                CLR     A
8048D6 3416              ADDC    A,#HIGH MainMenuStr+04H
8048D8 F583              MOV     DPH,A
8048DA A5128007C0        ECALL   ?C?PLDCODE
8048DF 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8048E2 A5128007B6        ECALL   ?C?PSTXDATA
8048E7 EF                MOV     A,R7
8048E8 25E0              ADD     A,ACC
8048EA 25E0              ADD     A,ACC
8048EC 2466              ADD     A,#LOW MainMenuStr+07H
8048EE F582              MOV     DPL,A
8048F0 E4                CLR     A
8048F1 3416              ADDC    A,#HIGH MainMenuStr+07H
8048F3 F583              MOV     DPH,A
8048F5         
8048F5 E4                CLR     A
8048F6 93                MOVC    A,@A+DPTR
8048F7 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8048FA F0                MOVX    @DPTR,A
8048FB 7D01              MOV     R5,#01H
8048FD E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 126


8048FE FF                MOV     R7,A
8048FF A512808062        ECALL   _DisplayStr
804904         ?C0047?MAINTMENU:
  226: 						DisplayStr( 0, 0, 1, MainMenuStr[firstNum].str, MainMenuStr[firstNum].len );
804904 D21A              SETB    ?_DisplayStr?BIT
804906 901596            MOV     DPTR,#firstNum
804909 E0                MOVX    A,@DPTR
80490A FF                MOV     R7,A
80490B 25E0              ADD     A,ACC
80490D 25E0              ADD     A,ACC
80490F 245F              ADD     A,#LOW MainMenuStr
804911 F582              MOV     DPL,A
804913 E4                CLR     A
804914 3416              ADDC    A,#HIGH MainMenuStr
804916 F583              MOV     DPH,A
804918 A5128007C0        ECALL   ?C?PLDCODE
80491D 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804920 A5128007B6        ECALL   ?C?PSTXDATA
804925 EF                MOV     A,R7
804926 25E0              ADD     A,ACC
804928 25E0              ADD     A,ACC
80492A 2462              ADD     A,#LOW MainMenuStr+03H
80492C F582              MOV     DPL,A
80492E E4                CLR     A
80492F 3416              ADDC    A,#HIGH MainMenuStr+03H
804931 F583              MOV     DPH,A
804933 E4                CLR     A
804934 93                MOVC    A,@A+DPTR
804935 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804938 F0                MOVX    @DPTR,A
804939 E4                CLR     A
80493A FD                MOV     R5,A
80493B         
80493B FF                MOV     R7,A
80493C A512808062        ECALL   _DisplayStr
  227: 					}				
804941         ?C0045?MAINTMENU:
  228: 					DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//第二行整光标
804941 901597            MOV     DPTR,#LineNum
804944 A512808794        ECALL   ?L?COM0011
  229: 					ClearKey();	
  230: 					break;
  231: 			}
804949         ?C0005?MAINTMENU:
  232: 			CoreProcessCycle();//让出时间片
804949 A512807ADC        ECALL   CoreProcessCycle
  233: 			DelayMs( 10 );
80494E 7F0A              MOV     R7,#0AH
804950 A512809789        ECALL   _DelayMs
  234: 		}	
804955 0244EC            LJMP    ?C0003?MAINTMENU
804958         ?C0004?MAINTMENU:
  235: 		WaitForWork( 300, &Lcd );
804958 E4                CLR     A
804959 7F2C              MOV     R7,#02CH
80495B 7E01              MOV     R6,#01H
80495D FD                MOV     R5,A
80495E FC                MOV     R4,A
80495F 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
804962 7423              MOV     A,#HIGH Lcd
804964 F0                MOVX    @DPTR,A
804965 A3                INC     DPTR
804966 7460              MOV     A,#LOW Lcd
804968 F0                MOVX    @DPTR,A
804969 A512807B3D        ECALL   _WaitForWork
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 127


  236: 		DisplayClear();//清屏操作		
80496E A512812140        ECALL   DisplayClear
  237: 		DisplayCursorState( 0, 0, 1, 0, 1 );//无光标
804973 D21A              SETB    ?_DisplayCursorState?BIT
804975 E4                CLR     A
804976 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
804979 F0                MOVX    @DPTR,A
80497A D21B              SETB    ?_DisplayCursorState?BIT+01H
80497C FD                MOV     R5,A
80497D FF                MOV     R7,A
80497E A51280817F        ECALL   _DisplayCursorState
  238: 		DisplayCursorState( 1, 0, 1, 0, 1 );//无光标
804983 D21A              SETB    ?_DisplayCursorState?BIT
804985 E4                CLR     A
804986 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
804989 F0                MOVX    @DPTR,A
80498A D21B              SETB    ?_DisplayCursorState?BIT+01H
80498C FD                MOV     R5,A
80498D 7F01              MOV     R7,#01H
80498F A51280817F        ECALL   _DisplayCursorState
  239: 		//////////////////
  240: //		Trace("\n GoodsSetSave3 = %bu", GoodsSetSave );
  241: 		if( ( GoodsSetSave ) || ( SystemSave ) )
804994 902DEF            MOV     DPTR,#GoodsSetSave
804997 E0                MOVX    A,@DPTR
804998 7003              JNZ     ?C0049?MAINTMENU
80499A 302E4E            JNB     SystemSave,?C0048?MAINTMENU
80499D         ?C0049?MAINTMENU:
  242: 		{
  243: 		#ifdef _CHINA_
  244: 			DisplayStr( 0, 0, 1, "  \xd5\xfd在保存", 10 );	
  245: 		#else
  246: 			DisplayStr( 0, 0, 1, "  Saving...", 11 );	
80499D D21A              SETB    ?_DisplayStr?BIT
80499F 7B80              MOV     R3,#BYTE2 080162BH
8049A1 7A16              MOV     R2,#HIGH 080162BH
8049A3 792B              MOV     R1,#LOW 080162BH
8049A5 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8049A8 A5128007B6        ECALL   ?C?PSTXDATA
8049AD 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8049B0 740B              MOV     A,#0BH
8049B2 A51280805E        ECALL   ?L?COM0007
  247: 		#endif
  248: 			DisplayStr( 0, 1, 1, " ", 1 );
8049B7 D21A              SETB    ?_DisplayStr?BIT
8049B9 7B80              MOV     R3,#BYTE2 0801637H
8049BB 7A16              MOV     R2,#HIGH 0801637H
8049BD 7937              MOV     R1,#LOW 0801637H
8049BF 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8049C2 A5128007B6        ECALL   ?C?PSTXDATA
8049C7 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8049CA 7401              MOV     A,#01H
8049CC F0                MOVX    @DPTR,A
8049CD FD                MOV     R5,A
8049CE E4                CLR     A
8049CF FF                MOV     R7,A
8049D0 A512808062        ECALL   _DisplayStr
  249: 			WaitForWork( 1500, &Lcd );
8049D5 E4                CLR     A
8049D6 7FDC              MOV     R7,#0DCH
8049D8 7E05              MOV     R6,#05H
8049DA FD                MOV     R5,A
8049DB FC                MOV     R4,A
8049DC 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
8049DF 7423              MOV     A,#HIGH Lcd
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 128


8049E1 F0                MOVX    @DPTR,A
8049E2 A3                INC     DPTR
8049E3 7460              MOV     A,#LOW Lcd
8049E5 F0                MOVX    @DPTR,A
8049E6 A512807B3D        ECALL   _WaitForWork
  250: 		}	
8049EB         ?C0048?MAINTMENU:
  251: 		///////////
  252: 	//	Trace("\n GoodsSetSave4 = %bu", GoodsSetSave );
  253: 		if( GoodsSetSave )
8049EB 902DEF            MOV     DPTR,#GoodsSetSave
8049EE E0                MOVX    A,@DPTR
8049EF 7003              JNZ     $ + 5H
8049F1 024AB5            LJMP    ?C0050?MAINTMENU
  254: 		{
  255: 	//		Trace("\n GoodsSetSave5 = %bu", GoodsSetSave );
  256: 			//写货道参数
  257: 			SaveGoodsSet();	
8049F4 A51280C35F        ECALL   SaveGoodsSet
  258: 			WaitForWork( 100, NULL );
8049F9 E4                CLR     A
8049FA 7F64              MOV     R7,#064H
8049FC FE                MOV     R6,A
8049FD A512807B35        ECALL   ?L?COM000D
  259: 			memset( TempGoodsWaySetVal, 0, sizeof( TempGoodsWaySetVal ) );
804A02 7E01              MOV     R6,#01H
804A04 7F40              MOV     R7,#040H
804A06 7D00              MOV     R5,#00H
804A08 7B00              MOV     R3,#?C?XDATASEG
804A0A 7A15              MOV     R2,#HIGH TempGoodsWaySetVal
804A0C 799B              MOV     R1,#LOW TempGoodsWaySetVal
804A0E A5128008A6        ECALL   ?C?MEMSET
  260: 			MovFlashToSram( ADDRF_GOODSWAYS_SET , ( unsigned char xdata * )TempGoodsWaySetVal , sizeof( TempGoodsWaySetVal
>>  ) );
804A13 7F80              MOV     R7,#080H
804A15 7E02              MOV     R6,#02H
804A17 7D08              MOV     R5,#08H
804A19 7C00              MOV     R4,#00H
804A1B 753815            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TempGoodsWaySetVal
804A1E 75399B            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TempGoodsWaySetVal
804A21 A51280C17B        ECALL   ?L?COM0030
  261: 		//	TempGoodsWaySetVal[2].GoodsCurrentSum = 324;
  262: 			for( i = 0; i < GOODSWAYNUM; i ++ )
804A26 E4                CLR     A
804A27 901598            MOV     DPTR,#i
804A2A F0                MOVX    @DPTR,A
804A2B         ?C0051?MAINTMENU:
  263: 			{
  264: 		//		Trace("\n GoodsWaySetVal[%bu].WayState = %bu", i ,GoodsWaySetVal[i].WayState );
  265: 		//		Trace("\n TempGoodsWaySetVal[%bu].WayState = %bu",i, TempGoodsWaySetVal[i].WayState );
  266: 				if( ( GoodsWaySetVal[i].GoodsCurrentSum != TempGoodsWaySetVal[i].GoodsCurrentSum ) || \
804A2B 901598            MOV     DPTR,#i
804A2E E0                MOVX    A,@DPTR
804A2F FF                MOV     R7,A
804A30 75F005            MOV     B,#05H
804A33 90159F            MOV     DPTR,#TempGoodsWaySetVal+04H
804A36 A51280079F        ECALL   ?C?OFFXADD
804A3B E0                MOVX    A,@DPTR
804A3C FE                MOV     R6,A
804A3D 75F005            MOV     B,#05H
804A40 EF                MOV     A,R7
804A41 900006            MOV     DPTR,#GoodsWaySetVal+04H
804A44 A51280079F        ECALL   ?C?OFFXADD
804A49 E0                MOVX    A,@DPTR
804A4A 6E                XRL     A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 129


804A4B 7057              JNZ     ?C0052?MAINTMENU
804A4D 901598            MOV     DPTR,#i
804A50 E0                MOVX    A,@DPTR
804A51 75F005            MOV     B,#05H
804A54 90159C            MOV     DPTR,#TempGoodsWaySetVal+01H
804A57 A51280079F        ECALL   ?C?OFFXADD
804A5C E0                MOVX    A,@DPTR
804A5D FE                MOV     R6,A
804A5E 75F005            MOV     B,#05H
804A61 EF                MOV     A,R7
804A62 900003            MOV     DPTR,#GoodsWaySetVal+01H
804A65 A51280079F        ECALL   ?C?OFFXADD
804A6A E0                MOVX    A,@DPTR
804A6B B50636            CJNE    A,AR6,?C0052?MAINTMENU
804A6E 901598            MOV     DPTR,#i
804A71 E0                MOVX    A,@DPTR
804A72 75F005            MOV     B,#05H
804A75 90159D            MOV     DPTR,#TempGoodsWaySetVal+02H
804A78 A51280079F        ECALL   ?C?OFFXADD
804A7D E0                MOVX    A,@DPTR
804A7E FC                MOV     R4,A
804A7F A3                INC     DPTR
804A80 E0                MOVX    A,@DPTR
804A81 FD                MOV     R5,A
804A82 75F005            MOV     B,#05H
804A85 EF                MOV     A,R7
804A86 900004            MOV     DPTR,#GoodsWaySetVal+02H
804A89 A51280079F        ECALL   ?C?OFFXADD
804A8E E0                MOVX    A,@DPTR
804A8F FE                MOV     R6,A
804A90 A3                INC     DPTR
804A91 E0                MOVX    A,@DPTR
804A92 B5050F            CJNE    A,AR5,?C0052?MAINTMENU
804A95 EE                MOV     A,R6
804A96 B5040B            CJNE    A,AR4,?C0052?MAINTMENU
  267: 					( GoodsWaySetVal[i].WayState != TempGoodsWaySetVal[i].WayState ) || \
  268: 					( GoodsWaySetVal[i].Price != TempGoodsWaySetVal[i].Price ) )
  269: 					break;
  270: 			}
804A99         ?C0053?MAINTMENU:
804A99 901598            MOV     DPTR,#i
804A9C E0                MOVX    A,@DPTR
804A9D 04                INC     A
804A9E F0                MOVX    @DPTR,A
804A9F E0                MOVX    A,@DPTR
804AA0 6440              XRL     A,#040H
804AA2 7087              JNZ     ?C0051?MAINTMENU
804AA4         ?C0052?MAINTMENU:
  271: 			if( i != GOODSWAYNUM )//不相同
804AA4 901598            MOV     DPTR,#i
804AA7 E0                MOVX    A,@DPTR
804AA8 6440              XRL     A,#040H
804AAA 6004              JZ      ?C0056?MAINTMENU
  272: 			{
  273: 				Trace("\n GoodsWaySetVal error" );
  274: 				ErrFlag = 1;	
804AAC A3                INC     DPTR
804AAD 7401              MOV     A,#01H
804AAF F0                MOVX    @DPTR,A
  275: 			}
804AB0         ?C0056?MAINTMENU:
  276: 			GoodsSetSave = 0;
804AB0 E4                CLR     A
804AB1 902DEF            MOV     DPTR,#GoodsSetSave
804AB4 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 130


  277: 		}
804AB5         ?C0050?MAINTMENU:
  278: 		if( SystemSave )
804AB5 202E03            JB      SystemSave,$ + 6H
804AB8 024BA9            LJMP    ?C0057?MAINTMENU
  279: 		{
  280: 			//写系统参数
  281: 			SaveGlobalParam();	
804ABB A51280C54C        ECALL   SaveGlobalParam
  282: 			WaitForWork( 100, NULL );	
804AC0 E4                CLR     A
804AC1 7F64              MOV     R7,#064H
804AC3 FE                MOV     R6,A
804AC4 A512807B35        ECALL   ?L?COM000D
  283: 			//检测定入flash中的数据
  284: 			memset( &TempSystemParameter, 0, sizeof( TempSystemParameter ) );		
804AC9 7E00              MOV     R6,#00H
804ACB 7F4B              MOV     R7,#04BH
804ACD 7D00              MOV     R5,#00H
804ACF 7B00              MOV     R3,#?C?XDATASEG
804AD1 7A16              MOV     R2,#HIGH TempSystemParameter
804AD3 79DB              MOV     R1,#LOW TempSystemParameter
804AD5 A5128008A6        ECALL   ?C?MEMSET
  285: 			//本机系统参数
  286: 			MovFlashToSram( ADDRF_SYSTEMPARAM , ( unsigned char xdata * )&TempSystemParameter , sizeof(struct SYSTEMPARAME
>> TER) );	
804ADA 7F80              MOV     R7,#080H
804ADC 7E01              MOV     R6,#01H
804ADE 7D08              MOV     R5,#08H
804AE0 7C00              MOV     R4,#00H
804AE2 753816            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TempSystemParameter
804AE5 7539DB            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TempSystemParameter
804AE8 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
804AEB 753B4B            MOV     ?_MovFlashToSram?BYTE+07H,#04BH
804AEE A51280C181        ECALL   _MovFlashToSram
  287: 					
  288: 			if( ( SystemParameter.RefundPermission != TempSystemParameter.RefundPermission ) || \
804AF3 9016DB            MOV     DPTR,#TempSystemParameter
804AF6 E0                MOVX    A,@DPTR
804AF7 FF                MOV     R7,A
804AF8 90041E            MOV     DPTR,#SystemParameter
804AFB E0                MOVX    A,@DPTR
804AFC 6F                XRL     A,R7
804AFD 6003              JZ      $ + 5H
804AFF 024BA1            LJMP    ?C0059?MAINTMENU
804B02 9016DC            MOV     DPTR,#TempSystemParameter+01H
804B05 E0                MOVX    A,@DPTR
804B06 FE                MOV     R6,A
804B07 A3                INC     DPTR
804B08 E0                MOVX    A,@DPTR
804B09 FF                MOV     R7,A
804B0A 90041F            MOV     DPTR,#SystemParameter+01H
804B0D E0                MOVX    A,@DPTR
804B0E 6E                XRL     A,R6
804B0F 7003              JNZ     ?C0073?MAINTMENU
804B11 A3                INC     DPTR
804B12 E0                MOVX    A,@DPTR
804B13 6F                XRL     A,R7
804B14         ?C0073?MAINTMENU:
804B14 6003              JZ      $ + 5H
804B16 024BA1            LJMP    ?C0059?MAINTMENU
804B19 9016DE            MOV     DPTR,#TempSystemParameter+03H
804B1C E0                MOVX    A,@DPTR
804B1D FE                MOV     R6,A
804B1E A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 131


804B1F E0                MOVX    A,@DPTR
804B20 FF                MOV     R7,A
804B21 900421            MOV     DPTR,#SystemParameter+03H
804B24 E0                MOVX    A,@DPTR
804B25 6E                XRL     A,R6
804B26 7003              JNZ     ?C0074?MAINTMENU
804B28 A3                INC     DPTR
804B29 E0                MOVX    A,@DPTR
804B2A 6F                XRL     A,R7
804B2B         ?C0074?MAINTMENU:
804B2B 7074              JNZ     ?C0059?MAINTMENU
804B2D 9016E0            MOV     DPTR,#TempSystemParameter+05H
804B30 E0                MOVX    A,@DPTR
804B31 FE                MOV     R6,A
804B32 A3                INC     DPTR
804B33 E0                MOVX    A,@DPTR
804B34 FF                MOV     R7,A
804B35 900423            MOV     DPTR,#SystemParameter+05H
804B38 E0                MOVX    A,@DPTR
804B39 6E                XRL     A,R6
804B3A 7003              JNZ     ?C0075?MAINTMENU
804B3C A3                INC     DPTR
804B3D E0                MOVX    A,@DPTR
804B3E 6F                XRL     A,R7
804B3F         ?C0075?MAINTMENU:
804B3F 7060              JNZ     ?C0059?MAINTMENU
804B41 9016E2            MOV     DPTR,#TempSystemParameter+07H
804B44 E0                MOVX    A,@DPTR
804B45 FF                MOV     R7,A
804B46 900425            MOV     DPTR,#SystemParameter+07H
804B49 E0                MOVX    A,@DPTR
804B4A 6F                XRL     A,R7
804B4B 7054              JNZ     ?C0059?MAINTMENU
804B4D 9016E3            MOV     DPTR,#TempSystemParameter+08H
804B50 E0                MOVX    A,@DPTR
804B51 FF                MOV     R7,A
804B52 900426            MOV     DPTR,#SystemParameter+08H
804B55 E0                MOVX    A,@DPTR
804B56 6F                XRL     A,R7
804B57 7048              JNZ     ?C0059?MAINTMENU
804B59 9016E4            MOV     DPTR,#TempSystemParameter+09H
804B5C E0                MOVX    A,@DPTR
804B5D FE                MOV     R6,A
804B5E A3                INC     DPTR
804B5F E0                MOVX    A,@DPTR
804B60 FF                MOV     R7,A
804B61 900427            MOV     DPTR,#SystemParameter+09H
804B64 E0                MOVX    A,@DPTR
804B65 B50639            CJNE    A,AR6,?C0059?MAINTMENU
804B68 A3                INC     DPTR
804B69 E0                MOVX    A,@DPTR
804B6A B50734            CJNE    A,AR7,?C0059?MAINTMENU
804B6D 9016E6            MOV     DPTR,#TempSystemParameter+0BH
804B70 E0                MOVX    A,@DPTR
804B71 FE                MOV     R6,A
804B72 A3                INC     DPTR
804B73 E0                MOVX    A,@DPTR
804B74 FF                MOV     R7,A
804B75 900429            MOV     DPTR,#SystemParameter+0BH
804B78 E0                MOVX    A,@DPTR
804B79 B50625            CJNE    A,AR6,?C0059?MAINTMENU
804B7C A3                INC     DPTR
804B7D E0                MOVX    A,@DPTR
804B7E B50720            CJNE    A,AR7,?C0059?MAINTMENU
804B81 9016EA            MOV     DPTR,#TempSystemParameter+0FH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 132


804B84 E0                MOVX    A,@DPTR
804B85 FE                MOV     R6,A
804B86 A3                INC     DPTR
804B87 E0                MOVX    A,@DPTR
804B88 FF                MOV     R7,A
804B89 90042D            MOV     DPTR,#SystemParameter+0FH
804B8C E0                MOVX    A,@DPTR
804B8D B50611            CJNE    A,AR6,?C0059?MAINTMENU
804B90 A3                INC     DPTR
804B91 E0                MOVX    A,@DPTR
804B92 B5070C            CJNE    A,AR7,?C0059?MAINTMENU
804B95 901725            MOV     DPTR,#TempSystemParameter+04AH
804B98 E0                MOVX    A,@DPTR
804B99 FF                MOV     R7,A
804B9A 900468            MOV     DPTR,#SystemParameter+04AH
804B9D E0                MOVX    A,@DPTR
804B9E 6F                XRL     A,R7
804B9F 6006              JZ      ?C0058?MAINTMENU
804BA1         ?C0059?MAINTMENU:
  289: 				( SystemParameter.HopperCoinPrice1 != TempSystemParameter.HopperCoinPrice1 ) || \
  290: 				( SystemParameter.HopperCoinPrice2 != TempSystemParameter.HopperCoinPrice2 ) || \
  291: 				( SystemParameter.HopperCoinPrice3 != TempSystemParameter.HopperCoinPrice3 ) || \
  292: 				( SystemParameter.BillNo != TempSystemParameter.BillNo ) || \
  293: 				( SystemParameter.IsMuliVerd != TempSystemParameter.IsMuliVerd ) || \
  294: 				( SystemParameter.Min != TempSystemParameter.Min ) || \
  295: 				( SystemParameter.BanknoteMax != TempSystemParameter.BanknoteMax ) || \
  296: 				( SystemParameter.NotOutMax != TempSystemParameter.NotOutMax ) || \
  297: 				( SystemParameter.Checkbyte != TempSystemParameter.Checkbyte ) )
  298: 			{
  299: 				Trace("\n SystemParameter error" );
  300: 				ErrFlag = 1;
804BA1 901599            MOV     DPTR,#ErrFlag
804BA4 7401              MOV     A,#01H
804BA6 F0                MOVX    @DPTR,A
  301: 			}
804BA7         ?C0058?MAINTMENU:
  302: 			SystemSave = 0;
804BA7 C22E              CLR     SystemSave
  303: 		}
804BA9         ?C0057?MAINTMENU:
  304: 		if( ErrFlag )
804BA9 901599            MOV     DPTR,#ErrFlag
804BAC E0                MOVX    A,@DPTR
804BAD 7003              JNZ     $ + 5H
804BAF 024C45            LJMP    ?C0060?MAINTMENU
  305: 		{
  306: 			ClearKey();	
804BB2 A5128087A8        ECALL   ClearKey
  307: 		 #ifdef _CHINA_
  308: 			DisplayStr( 0, 0, 1, "保存失败，重新设置?", 19 );	
  309: 		 #else
  310: 		 	DisplayStr( 0, 0, 1, "Save failed,reenter?", 20 );	
804BB7 D21A              SETB    ?_DisplayStr?BIT
804BB9 7B80              MOV     R3,#BYTE2 0801639H
804BBB 7A16              MOV     R2,#HIGH 0801639H
804BBD 7939              MOV     R1,#LOW 0801639H
804BBF 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804BC2 A5128007B6        ECALL   ?C?PSTXDATA
804BC7 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804BCA 7414              MOV     A,#014H
804BCC A51280805E        ECALL   ?L?COM0007
  311: 		 #endif			
  312: 			DisplayStr( 0, 1, 1, "  ENTER   CANCEL", 16 );
804BD1 D21A              SETB    ?_DisplayStr?BIT
804BD3 7B80              MOV     R3,#BYTE2 080164EH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 133


804BD5 7A16              MOV     R2,#HIGH 080164EH
804BD7 794E              MOV     R1,#LOW 080164EH
804BD9 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804BDC A5128007B6        ECALL   ?C?PSTXDATA
804BE1 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804BE4 7410              MOV     A,#010H
804BE6 F0                MOVX    @DPTR,A
804BE7 7D01              MOV     R5,#01H
804BE9 E4                CLR     A
804BEA FF                MOV     R7,A
804BEB A512808062        ECALL   _DisplayStr
  313: 			LzjSecTimer= 15;
804BF0 751D0F            MOV     LzjSecTimer,#0FH
  314: 			i = 0;
804BF3 E4                CLR     A
804BF4 901598            MOV     DPTR,#i
804BF7 F0                MOVX    @DPTR,A
804BF8         ?C0061?MAINTMENU:
  315: 			while( LzjSecTimer )
804BF8 E51D              MOV     A,LzjSecTimer
804BFA 603B              JZ      ?C0062?MAINTMENU
  316: 			{
  317: 				SchedulerProcess();
804BFC A512809545        ECALL   SchedulerProcess
  318: 				key = GetKey();
804C01 A512809275        ECALL   GetKey
804C06 90159A            MOV     DPTR,#key
804C09 EF                MOV     A,R7
804C0A F0                MOVX    @DPTR,A
  319: 				if ( key == KEY_NULL ) 
804C0B F4                CPL     A
804C0C 60EA              JZ      ?C0061?MAINTMENU
  320: 					continue;
804C0E         ?C0063?MAINTMENU:
  321: 				switch ( key )
804C0E 90159A            MOV     DPTR,#key
804C11 E0                MOVX    A,@DPTR
804C12 24E5              ADD     A,#0E5H
804C14 6010              JZ      ?C0066?MAINTMENU
804C16 240E              ADD     A,#0EH
804C18 70DE              JNZ     ?C0061?MAINTMENU
  322: 			 	{			
  323: 					case KEY_SUBMIT:			
804C1A         ?C0065?MAINTMENU:
  324: 						ErrFlag = 0;
804C1A E4                CLR     A
804C1B 901599            MOV     DPTR,#ErrFlag
804C1E F0                MOVX    @DPTR,A
  325: 						i = 1;
804C1F 901598            MOV     DPTR,#i
804C22 04                INC     A
804C23 F0                MOVX    @DPTR,A
  326: 						break;
804C24 800A              SJMP    ?C0064?MAINTMENU
  327: 					case KEY_CANCEL:				
804C26         ?C0066?MAINTMENU:
  328: 						ErrFlag = 1 ;					
804C26 901599            MOV     DPTR,#ErrFlag
804C29 7401              MOV     A,#01H
804C2B F0                MOVX    @DPTR,A
  329: 						i = 1;
804C2C 901598            MOV     DPTR,#i
804C2F F0                MOVX    @DPTR,A
  330: 						break;
  331: 					default:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 134


  332: 						continue;
  333: 				}	
804C30         ?C0064?MAINTMENU:
  334: 				if( i == 1 )
804C30 901598            MOV     DPTR,#i
804C33 E0                MOVX    A,@DPTR
804C34 B401C1            CJNE    A,#01H,?C0061?MAINTMENU
  335: 					break;
  336: 			}
804C37         ?C0062?MAINTMENU:
  337: 			if( LzjSecTimer == 0 )
804C37 E51D              MOV     A,LzjSecTimer
804C39 6003              JZ      $ + 5H
804C3B 02449E            LJMP    ?C0001?MAINTMENU
  338: 				ErrFlag = 0;
804C3E         
804C3E 901599            MOV     DPTR,#ErrFlag
804C41 F0                MOVX    @DPTR,A
  339: 		}
804C42 02449E            LJMP    ?C0001?MAINTMENU
804C45         ?C0060?MAINTMENU:
  340: 		else
  341: 			ErrFlag = 1;
804C45 901599            MOV     DPTR,#ErrFlag
804C48 7401              MOV     A,#01H
804C4A F0                MOVX    @DPTR,A
  342: 	}
804C4B 02449E            LJMP    ?C0001?MAINTMENU
804C4E         ?C0002?MAINTMENU:
  343: 	ClearKey();		
804C4E A5028087A8        EJMP    ClearKey
----- FUNCTION mainmenu (END) -------


----- FUNCTION CounterMainMenu (BEGIN) -----
 FILE: 'countermaint.c'
  647: void CounterMainMenu()
  648: {
  649: 	/*菜单参数初始化*/		
  650: 	u_char  xdata firstNum ;//一级菜单编号
  651: 	u_char  xdata LineNum ;//选中屏幕的行号	
  652: 	bit	data Notout = 1;	
804C53 D218              SETB    Notout
  653: 	u_char xdata key = 0;
804C55 E4                CLR     A
804C56 901728            MOV     DPTR,#key
804C59 F0                MOVX    @DPTR,A
  654: 		
  655: 	ClearKey();	
804C5A A5128087A8        ECALL   ClearKey
  656: 	/*显示两行菜单及其值*/
  657: 	DisplayStr( 0, 0, 1, countMianMenuStr[0].str, countMianMenuStr[0].len );//显示菜单	
804C5F D21A              SETB    ?_DisplayStr?BIT
804C61 9012DA            MOV     DPTR,#countMianMenuStr
804C64 A5128007C0        ECALL   ?C?PLDCODE
804C69 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804C6C A5128007B6        ECALL   ?C?PSTXDATA
804C71 9012DD            MOV     DPTR,#countMianMenuStr+03H
804C74 A512808059        ECALL   ?L?COM0005
  658: 	DisplayStr( 0, 1, 1, countMianMenuStr[1].str, countMianMenuStr[1].len );//显示菜单				
804C79 D21A              SETB    ?_DisplayStr?BIT
804C7B 9012DE            MOV     DPTR,#countMianMenuStr+04H
804C7E A5128007C0        ECALL   ?C?PLDCODE
804C83 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804C86 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 135


804C8B 9012E1            MOV     DPTR,#countMianMenuStr+07H
804C8E A512808162        ECALL   ?L?COM000E
  659: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
  660: 	firstNum = 1;
804C93 901726            MOV     DPTR,#firstNum
804C96 7401              MOV     A,#01H
804C98 F0                MOVX    @DPTR,A
  661: 	LineNum = 2;	
804C99 A3                INC     DPTR
804C9A 04                INC     A
804C9B F0                MOVX    @DPTR,A
804C9C         ?C0138?COUNTERMAINT:
  662: 	while( Notout )    //超时或客户退出
804C9C 201803            JB      Notout,$ + 6H
804C9F 024FB9            LJMP    ?C0167?COUNTERMAINT
  663: 	{				
  664: 		key = GetKey();
804CA2 A512809275        ECALL   GetKey
804CA7 901728            MOV     DPTR,#key
804CAA EF                MOV     A,R7
804CAB F0                MOVX    @DPTR,A
  665: 		switch( key )		
804CAC 24F3              ADD     A,#0F3H
804CAE 7003              JNZ     $ + 5H
804CB0 024E37            LJMP    ?C0156?COUNTERMAINT
804CB3 24F2              ADD     A,#0F2H
804CB5 7003              JNZ     $ + 5H
804CB7 024E32            LJMP    ?C0155?COUNTERMAINT
804CBA 24CB              ADD     A,#0CBH
804CBC 7003              JNZ     $ + 5H
804CBE 024D84            LJMP    ?C0148?COUNTERMAINT
804CC1 2408              ADD     A,#08H
804CC3 6003              JZ      $ + 5H
804CC5 024F9C            LJMP    ?C0140?COUNTERMAINT
  666: 		{
  667: 			case KEY_UP://上移  	
804CC8         ?C0141?COUNTERMAINT:
  668: 				if( LineNum == 2 )//选中标记上移
804CC8 901727            MOV     DPTR,#LineNum
804CCB E0                MOVX    A,@DPTR
804CCC 6402              XRL     A,#02H
804CCE 702A              JNZ     ?C0142?COUNTERMAINT
  669: 			    {			     
  670: 			    	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
804CD0 D21A              SETB    ?_DisplayCursorState?BIT
804CD2 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
804CD5 7402              MOV     A,#02H
804CD7 F0                MOVX    @DPTR,A
804CD8 D21B              SETB    ?_DisplayCursorState?BIT+01H
804CDA E4                CLR     A
804CDB FD                MOV     R5,A
804CDC FF                MOV     R7,A
804CDD A51280817F        ECALL   _DisplayCursorState
  671: 			     	LineNum = 1;			   
804CE2 901727            MOV     DPTR,#LineNum
804CE5 7401              MOV     A,#01H
804CE7 F0                MOVX    @DPTR,A
  672: 					if( firstNum == 0 )
804CE8 901726            MOV     DPTR,#firstNum
804CEB E0                MOVX    A,@DPTR
804CEC 7003              JNZ     ?C0143?COUNTERMAINT
  673: 						firstNum = MENU_COUNT(countMianMenuStr)-1;					
804CEE 024E2C            LJMP    ?C0207?COUNTERMAINT
804CF1         ?C0143?COUNTERMAINT:
  674: 					else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 136


  675: 						firstNum--;
804CF1 901726            MOV     DPTR,#firstNum
804CF4 E0                MOVX    A,@DPTR
804CF5 14                DEC     A
804CF6 F0                MOVX    @DPTR,A
  676: 				}
804CF7 024F9C            LJMP    ?C0140?COUNTERMAINT
804CFA         ?C0142?COUNTERMAINT:
  677: 				else//菜单上翻
  678: 				{
  679: 				  	/*当firstNum<=1不能上翻了*/			      		
  680: 					//	DispDeviceMenu( firstNum, 1);									    
  681: 					DisplayStr( 0, 1, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
804CFA D21A              SETB    ?_DisplayStr?BIT
804CFC 901726            MOV     DPTR,#firstNum
804CFF E0                MOVX    A,@DPTR
804D00 FF                MOV     R7,A
804D01 25E0              ADD     A,ACC
804D03 25E0              ADD     A,ACC
804D05 24DA              ADD     A,#LOW countMianMenuStr
804D07 F582              MOV     DPL,A
804D09 E4                CLR     A
804D0A 3412              ADDC    A,#HIGH countMianMenuStr
804D0C F583              MOV     DPH,A
804D0E A5128007C0        ECALL   ?C?PLDCODE
804D13 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804D16 A5128007B6        ECALL   ?C?PSTXDATA
804D1B EF                MOV     A,R7
804D1C 25E0              ADD     A,ACC
804D1E 25E0              ADD     A,ACC
804D20 24DD              ADD     A,#LOW countMianMenuStr+03H
804D22 F582              MOV     DPL,A
804D24 E4                CLR     A
804D25 3412              ADDC    A,#HIGH countMianMenuStr+03H
804D27 F583              MOV     DPH,A
804D29 E4                CLR     A
804D2A 93                MOVC    A,@A+DPTR
804D2B 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804D2E F0                MOVX    @DPTR,A
804D2F 7D01              MOV     R5,#01H
804D31 E4                CLR     A
804D32 FF                MOV     R7,A
804D33 A512808062        ECALL   _DisplayStr
  682: 					if( firstNum == 0 )
804D38 901726            MOV     DPTR,#firstNum
804D3B E0                MOVX    A,@DPTR
804D3C 7005              JNZ     ?C0146?COUNTERMAINT
  683: 						firstNum = MENU_COUNT( countMianMenuStr )-1;					
804D3E 7402              MOV     A,#02H
804D40 F0                MOVX    @DPTR,A
804D41 8006              SJMP    ?C0147?COUNTERMAINT
804D43         ?C0146?COUNTERMAINT:
  684: 					else
  685: 						firstNum--;
804D43 901726            MOV     DPTR,#firstNum
804D46 E0                MOVX    A,@DPTR
804D47 14                DEC     A
804D48 F0                MOVX    @DPTR,A
804D49         ?C0147?COUNTERMAINT:
  686: 					//	DispDeviceMenu( firstNum, 0);						
  687: 					DisplayStr( 0, 0, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
804D49 D21A              SETB    ?_DisplayStr?BIT
804D4B 901726            MOV     DPTR,#firstNum
804D4E E0                MOVX    A,@DPTR
804D4F FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 137


804D50 25E0              ADD     A,ACC
804D52 25E0              ADD     A,ACC
804D54 24DA              ADD     A,#LOW countMianMenuStr
804D56 F582              MOV     DPL,A
804D58 E4                CLR     A
804D59 3412              ADDC    A,#HIGH countMianMenuStr
804D5B F583              MOV     DPH,A
804D5D A5128007C0        ECALL   ?C?PLDCODE
804D62 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804D65 A5128007B6        ECALL   ?C?PSTXDATA
804D6A EF                MOV     A,R7
804D6B 25E0              ADD     A,ACC
804D6D 25E0              ADD     A,ACC
804D6F 24DD              ADD     A,#LOW countMianMenuStr+03H
804D71 F582              MOV     DPL,A
804D73 E4                CLR     A
804D74 3412              ADDC    A,#HIGH countMianMenuStr+03H
804D76 A512808057        ECALL   ?L?COM0004
  688: 					LineNum = 1;					
804D7B 901727            MOV     DPTR,#LineNum
804D7E 7401              MOV     A,#01H
804D80 F0                MOVX    @DPTR,A
  689: 				}
  690: 				break;
804D81 024F9C            LJMP    ?C0140?COUNTERMAINT
  691: 			case KEY_DOWN://下移				
804D84         ?C0148?COUNTERMAINT:
  692: 				if( LineNum == 1 )//选中标记下移
804D84 901727            MOV     DPTR,#LineNum
804D87 E0                MOVX    A,@DPTR
804D88 6401              XRL     A,#01H
804D8A 701C              JNZ     ?C0149?COUNTERMAINT
  693: 				{				 
  694: 				    DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标				   
804D8C A512808171        ECALL   ?L?COM000F
  695: 					if( firstNum == MENU_COUNT(countMianMenuStr)-1 )
804D91 901726            MOV     DPTR,#firstNum
804D94 E0                MOVX    A,@DPTR
804D95 B40204            CJNE    A,#02H,?C0150?COUNTERMAINT
  696: 						firstNum = 0;					
804D98 E4                CLR     A
804D99 F0                MOVX    @DPTR,A
804D9A 8006              SJMP    ?C0151?COUNTERMAINT
804D9C         ?C0150?COUNTERMAINT:
  697: 					else
  698: 						firstNum++;
804D9C 901726            MOV     DPTR,#firstNum
804D9F E0                MOVX    A,@DPTR
804DA0 04                INC     A
804DA1 F0                MOVX    @DPTR,A
804DA2         ?C0151?COUNTERMAINT:
  699: 					LineNum = 2;				     
804DA2 901727            MOV     DPTR,#LineNum
804DA5         
  700: 				}
804DA5 024E2C            LJMP    ?C0207?COUNTERMAINT
804DA8         ?C0149?COUNTERMAINT:
  701: 				else//菜单下翻
  702: 				{
  703: 				    /*当firstNum<=2不能上翻了*/				    				
  704: 					DisplayStr( 0, 0, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
804DA8 D21A              SETB    ?_DisplayStr?BIT
804DAA 901726            MOV     DPTR,#firstNum
804DAD E0                MOVX    A,@DPTR
804DAE FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 138


804DAF 25E0              ADD     A,ACC
804DB1 25E0              ADD     A,ACC
804DB3 24DA              ADD     A,#LOW countMianMenuStr
804DB5 F582              MOV     DPL,A
804DB7 E4                CLR     A
804DB8 3412              ADDC    A,#HIGH countMianMenuStr
804DBA F583              MOV     DPH,A
804DBC A5128007C0        ECALL   ?C?PLDCODE
804DC1 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804DC4 A5128007B6        ECALL   ?C?PSTXDATA
804DC9 EF                MOV     A,R7
804DCA 25E0              ADD     A,ACC
804DCC 25E0              ADD     A,ACC
804DCE 24DD              ADD     A,#LOW countMianMenuStr+03H
804DD0 F582              MOV     DPL,A
804DD2 E4                CLR     A
804DD3 3412              ADDC    A,#HIGH countMianMenuStr+03H
804DD5 A512808057        ECALL   ?L?COM0004
  705: 				   	if( firstNum == MENU_COUNT(countMianMenuStr)-1 )
804DDA 901726            MOV     DPTR,#firstNum
804DDD E0                MOVX    A,@DPTR
804DDE B40204            CJNE    A,#02H,?C0153?COUNTERMAINT
  706: 						firstNum = 0;					
804DE1 E4                CLR     A
804DE2 F0                MOVX    @DPTR,A
804DE3 8006              SJMP    ?C0154?COUNTERMAINT
804DE5         ?C0153?COUNTERMAINT:
  707: 					else
  708: 						firstNum++;
804DE5 901726            MOV     DPTR,#firstNum
804DE8 E0                MOVX    A,@DPTR
804DE9 04                INC     A
804DEA F0                MOVX    @DPTR,A
804DEB         ?C0154?COUNTERMAINT:
  709: 					DisplayStr( 0, 1, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
804DEB D21A              SETB    ?_DisplayStr?BIT
804DED 901726            MOV     DPTR,#firstNum
804DF0 E0                MOVX    A,@DPTR
804DF1 FF                MOV     R7,A
804DF2 25E0              ADD     A,ACC
804DF4 25E0              ADD     A,ACC
804DF6 24DA              ADD     A,#LOW countMianMenuStr
804DF8 F582              MOV     DPL,A
804DFA E4                CLR     A
804DFB 3412              ADDC    A,#HIGH countMianMenuStr
804DFD F583              MOV     DPH,A
804DFF A5128007C0        ECALL   ?C?PLDCODE
804E04 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804E07 A5128007B6        ECALL   ?C?PSTXDATA
804E0C EF                MOV     A,R7
804E0D 25E0              ADD     A,ACC
804E0F 25E0              ADD     A,ACC
804E11 24DD              ADD     A,#LOW countMianMenuStr+03H
804E13 F582              MOV     DPL,A
804E15 E4                CLR     A
804E16 3412              ADDC    A,#HIGH countMianMenuStr+03H
804E18 F583              MOV     DPH,A
804E1A E4                CLR     A
804E1B 93                MOVC    A,@A+DPTR
804E1C 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804E1F F0                MOVX    @DPTR,A
804E20 7D01              MOV     R5,#01H
804E22 E4                CLR     A
804E23 FF                MOV     R7,A
804E24 A512808062        ECALL   _DisplayStr
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 139


  710: 					LineNum = 2;					
804E29 901727            MOV     DPTR,#LineNum
804E2C         
804E2C 7402              MOV     A,#02H
804E2E F0                MOVX    @DPTR,A
  711: 				}
  712: 				break;
804E2F 024F9C            LJMP    ?C0140?COUNTERMAINT
  713: 			case KEY_CANCEL:
804E32         ?C0155?COUNTERMAINT:
  714: 				Notout = 0;
804E32 C218              CLR     Notout
  715: 				break;
804E34 024F9C            LJMP    ?C0140?COUNTERMAINT
  716: 			case KEY_SUBMIT://Enter,选中了某项菜单	
804E37         ?C0156?COUNTERMAINT:
  717: 				DisplayCursorState( 0, 0, 0, 0, 1 );//第二行整光标
804E37 C21A              CLR     ?_DisplayCursorState?BIT
804E39 E4                CLR     A
804E3A 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
804E3D F0                MOVX    @DPTR,A
804E3E D21B              SETB    ?_DisplayCursorState?BIT+01H
804E40 FD                MOV     R5,A
804E41 A5128087A2        ECALL   ?L?COM0012
  718: 				ClearKey();				
  719: 				switch(firstNum)
804E46 901726            MOV     DPTR,#firstNum
804E49 E0                MOVX    A,@DPTR
804E4A 14                DEC     A
804E4B 600E              JZ      ?C0159?COUNTERMAINT
804E4D 14                DEC     A
804E4E 6012              JZ      ?C0160?COUNTERMAINT
804E50 2402              ADD     A,#02H
804E52 7013              JNZ     ?C0157?COUNTERMAINT
  720: 				{					
  721: 					case 0://货币
804E54         ?C0158?COUNTERMAINT:
  722: 						CurrencyCountMenu();						
804E54 A512810155        ECALL   CurrencyCountMenu
  723: 						break;
804E59 800C              SJMP    ?C0157?COUNTERMAINT
  724: 					case 1://商品	
804E5B         ?C0159?COUNTERMAINT:
  725: 						GoodsMainMenu();
804E5B A5128081E6        ECALL   GoodsMainMenu
  726: 						break;
804E60 8005              SJMP    ?C0157?COUNTERMAINT
  727: 					case 2://清空
804E62         ?C0160?COUNTERMAINT:
  728: 						InitAllCounter();
804E62 A512805EC1        ECALL   InitAllCounter
  729: 						break;																						
  730: 				}
804E67         ?C0157?COUNTERMAINT:
  731: 				if(LineNum ==2)
804E67 901727            MOV     DPTR,#LineNum
804E6A E0                MOVX    A,@DPTR
804E6B 6402              XRL     A,#02H
804E6D 6003              JZ      $ + 5H
804E6F 024EFE            LJMP    ?C0161?COUNTERMAINT
  732: 				{	
  733: 					if( firstNum == 0 )											
804E72 901726            MOV     DPTR,#firstNum
804E75 E0                MOVX    A,@DPTR
804E76 7017              JNZ     ?C0162?COUNTERMAINT
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 140


  734: 						DisplayStr( 0, 0, 1, countMianMenuStr[MENU_COUNT(countMianMenuStr)-1].str, countMianMenuStr[MENU_COUNT(coun
>> tMianMenuStr)-1].len );
804E78 D21A              SETB    ?_DisplayStr?BIT
804E7A 9012E2            MOV     DPTR,#countMianMenuStr+08H
804E7D A5128007C0        ECALL   ?C?PLDCODE
804E82 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804E85 A5128007B6        ECALL   ?C?PSTXDATA
804E8A 9012E5            MOV     DPTR,#countMianMenuStr+0BH
804E8D 802F              SJMP    ?C0204?COUNTERMAINT
804E8F         ?C0162?COUNTERMAINT:
  735: 					else						
  736: 						DisplayStr( 0, 0, 1, countMianMenuStr[firstNum - 1].str, countMianMenuStr[firstNum - 1].len );
804E8F D21A              SETB    ?_DisplayStr?BIT
804E91 901726            MOV     DPTR,#firstNum
804E94 E0                MOVX    A,@DPTR
804E95 FF                MOV     R7,A
804E96 25E0              ADD     A,ACC
804E98 25E0              ADD     A,ACC
804E9A 24D6              ADD     A,#LOW countMianMenuStr-04H
804E9C F582              MOV     DPL,A
804E9E E4                CLR     A
804E9F 3412              ADDC    A,#HIGH countMianMenuStr-04H
804EA1 F583              MOV     DPH,A
804EA3 A5128007C0        ECALL   ?C?PLDCODE
804EA8 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804EAB A5128007B6        ECALL   ?C?PSTXDATA
804EB0 EF                MOV     A,R7
804EB1 25E0              ADD     A,ACC
804EB3 25E0              ADD     A,ACC
804EB5 24D9              ADD     A,#LOW countMianMenuStr-01H
804EB7 F582              MOV     DPL,A
804EB9 E4                CLR     A
804EBA 3412              ADDC    A,#HIGH countMianMenuStr-01H
804EBC F583              MOV     DPH,A
804EBE         
804EBE A512808059        ECALL   ?L?COM0005
804EC3         ?C0163?COUNTERMAINT:
  737: 					DisplayStr( 0, 1, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
804EC3 D21A              SETB    ?_DisplayStr?BIT
804EC5 901726            MOV     DPTR,#firstNum
804EC8 E0                MOVX    A,@DPTR
804EC9 FF                MOV     R7,A
804ECA 25E0              ADD     A,ACC
804ECC 25E0              ADD     A,ACC
804ECE 24DA              ADD     A,#LOW countMianMenuStr
804ED0 F582              MOV     DPL,A
804ED2 E4                CLR     A
804ED3 3412              ADDC    A,#HIGH countMianMenuStr
804ED5 F583              MOV     DPH,A
804ED7 A5128007C0        ECALL   ?C?PLDCODE
804EDC 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804EDF A5128007B6        ECALL   ?C?PSTXDATA
804EE4 EF                MOV     A,R7
804EE5 25E0              ADD     A,ACC
804EE7 25E0              ADD     A,ACC
804EE9 24DD              ADD     A,#LOW countMianMenuStr+03H
804EEB F582              MOV     DPL,A
804EED E4                CLR     A
804EEE 3412              ADDC    A,#HIGH countMianMenuStr+03H
804EF0 F583              MOV     DPH,A
804EF2 E4                CLR     A
804EF3 93                MOVC    A,@A+DPTR
804EF4 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804EF7 F0                MOVX    @DPTR,A
804EF8 7D01              MOV     R5,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 141


804EFA E4                CLR     A
  738: 				}
804EFB 024F91            LJMP    ?C0208?COUNTERMAINT
804EFE         ?C0161?COUNTERMAINT:
  739: 				else
  740: 				{												
  741: 					if( firstNum == ( MENU_COUNT(countMianMenuStr)-1 ) )				
804EFE 901726            MOV     DPTR,#firstNum
804F01 E0                MOVX    A,@DPTR
804F02 B40217            CJNE    A,#02H,?C0165?COUNTERMAINT
  742: 						DisplayStr( 0, 1, 1, countMianMenuStr[0].str, countMianMenuStr[0].len );
804F05 D21A              SETB    ?_DisplayStr?BIT
804F07 9012DA            MOV     DPTR,#countMianMenuStr
804F0A A5128007C0        ECALL   ?C?PLDCODE
804F0F 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804F12 A5128007B6        ECALL   ?C?PSTXDATA
804F17 9012DD            MOV     DPTR,#countMianMenuStr+03H
804F1A 802F              SJMP    ?C0205?COUNTERMAINT
804F1C         ?C0165?COUNTERMAINT:
  743: 					else						
  744: 						DisplayStr( 0, 1, 1, countMianMenuStr[firstNum + 1].str, countMianMenuStr[firstNum + 1].len );
804F1C D21A              SETB    ?_DisplayStr?BIT
804F1E 901726            MOV     DPTR,#firstNum
804F21 E0                MOVX    A,@DPTR
804F22 FF                MOV     R7,A
804F23 25E0              ADD     A,ACC
804F25 25E0              ADD     A,ACC
804F27 24DE              ADD     A,#LOW countMianMenuStr+04H
804F29 F582              MOV     DPL,A
804F2B E4                CLR     A
804F2C 3412              ADDC    A,#HIGH countMianMenuStr+04H
804F2E F583              MOV     DPH,A
804F30 A5128007C0        ECALL   ?C?PLDCODE
804F35 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804F38 A5128007B6        ECALL   ?C?PSTXDATA
804F3D EF                MOV     A,R7
804F3E 25E0              ADD     A,ACC
804F40 25E0              ADD     A,ACC
804F42 24E1              ADD     A,#LOW countMianMenuStr+07H
804F44 F582              MOV     DPL,A
804F46 E4                CLR     A
804F47 3412              ADDC    A,#HIGH countMianMenuStr+07H
804F49 F583              MOV     DPH,A
804F4B         
804F4B E4                CLR     A
804F4C 93                MOVC    A,@A+DPTR
804F4D 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804F50 F0                MOVX    @DPTR,A
804F51 7D01              MOV     R5,#01H
804F53 E4                CLR     A
804F54 FF                MOV     R7,A
804F55 A512808062        ECALL   _DisplayStr
804F5A         ?C0166?COUNTERMAINT:
  745: 					DisplayStr( 0, 0, 1, countMianMenuStr[firstNum].str, countMianMenuStr[firstNum].len );
804F5A D21A              SETB    ?_DisplayStr?BIT
804F5C 901726            MOV     DPTR,#firstNum
804F5F E0                MOVX    A,@DPTR
804F60 FF                MOV     R7,A
804F61 25E0              ADD     A,ACC
804F63 25E0              ADD     A,ACC
804F65 24DA              ADD     A,#LOW countMianMenuStr
804F67 F582              MOV     DPL,A
804F69 E4                CLR     A
804F6A 3412              ADDC    A,#HIGH countMianMenuStr
804F6C F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 142


804F6E A5128007C0        ECALL   ?C?PLDCODE
804F73 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
804F76 A5128007B6        ECALL   ?C?PSTXDATA
804F7B EF                MOV     A,R7
804F7C 25E0              ADD     A,ACC
804F7E 25E0              ADD     A,ACC
804F80 24DD              ADD     A,#LOW countMianMenuStr+03H
804F82 F582              MOV     DPL,A
804F84 E4                CLR     A
804F85 3412              ADDC    A,#HIGH countMianMenuStr+03H
804F87 F583              MOV     DPH,A
804F89 E4                CLR     A
804F8A 93                MOVC    A,@A+DPTR
804F8B 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
804F8E F0                MOVX    @DPTR,A
804F8F E4                CLR     A
804F90 FD                MOV     R5,A
804F91         
804F91 FF                MOV     R7,A
804F92 A512808062        ECALL   _DisplayStr
  746: 				}				
804F97         ?C0164?COUNTERMAINT:
  747: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//第二行整光标
804F97 A512808791        ECALL   ?L?COM0010
  748: 				ClearKey();	
  749: 				break;
  750: 			}
804F9C         ?C0140?COUNTERMAINT:
  751: 			SchedulerProcess();//让出时间片
804F9C A512809545        ECALL   SchedulerProcess
  752: 			WaitForWork( 100, &Lcd );			
804FA1 E4                CLR     A
804FA2 7F64              MOV     R7,#064H
804FA4 FE                MOV     R6,A
804FA5 FD                MOV     R5,A
804FA6 FC                MOV     R4,A
804FA7 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
804FAA 7423              MOV     A,#HIGH Lcd
804FAC F0                MOVX    @DPTR,A
804FAD A3                INC     DPTR
804FAE 7460              MOV     A,#LOW Lcd
804FB0 F0                MOVX    @DPTR,A
804FB1 A512807B3D        ECALL   _WaitForWork
  753: 		}
804FB6 024C9C            LJMP    ?C0138?COUNTERMAINT
  754: }
804FB9         ?C0167?COUNTERMAINT:
804FB9 A522              ERET    
----- FUNCTION CounterMainMenu (END) -------


----- FUNCTION _DispDeviceStatus (BEGIN) -----
 FILE: 'devicecheck.c'
  577: u_char DispDeviceStatus( u_char Index, u_char y, bit PrintFlag )
  578: {
804FBB 901741            MOV     DPTR,#y
804FBE ED                MOV     A,R5
804FBF F0                MOVX    @DPTR,A
804FC0 901740            MOV     DPTR,#Index
804FC3 EF                MOV     A,R7
804FC4 F0                MOVX    @DPTR,A
  579: 	u_char xdata yStateus = 0;
  580: 	u_char xdata uline[20];
804FC5 E4                CLR     A
804FC6 901742            MOV     DPTR,#yStateus
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 143


804FC9 F0                MOVX    @DPTR,A
  581: 	
  582: 	switch( Index )
804FCA EF                MOV     A,R7
804FCB 14                DEC     A
804FCC 6020              JZ      ?C0123?DEVICECHECK
804FCE 14                DEC     A
804FCF 602F              JZ      ?C0128?DEVICECHECK
804FD1 14                DEC     A
804FD2 6044              JZ      ?C0135?DEVICECHECK
804FD4 14                DEC     A
804FD5 6059              JZ      ?C0142?DEVICECHECK
804FD7 2404              ADD     A,#04H
804FD9 6003              JZ      $ + 5H
804FDB 02505D            LJMP    ?C0117?DEVICECHECK
  583: 	{
  584: 		case 0://纸币器状态，Bit 7 -- 无此模块；Bit 6~1 保留；Bit 0 -- 故障
804FDE         ?C0118?DEVICECHECK:
  585: 			if( DeviceStatus.BillAccepter & 128 )//Bit 7
804FDE 900B16            MOV     DPTR,#DeviceStatus
804FE1 E0                MOVX    A,@DPTR
804FE2 FF                MOV     R7,A
804FE3 30E702            JNB     ACC.7,?C0119?DEVICECHECK
  586: 				yStateus = 2;//无此模块
804FE6 8050              SJMP    ?C0304?DEVICECHECK
804FE8         ?C0119?DEVICECHECK:
  587: 			else if( DeviceStatus.BillAccepter & 1 )//Bit 7
804FE8 EF                MOV     A,R7
804FE9 30E06C            JNB     ACC.0,?C0307?DEVICECHECK
  588:  		    	yStateus = 1;//故障
804FEC 8062              SJMP    ?C0306?DEVICECHECK
  589: 			else
  590: 				yStateus = 0;//正常
  591: 		break;
  592: 		case 1://收硬币器状态，Bit 7 -- 无此模块；Bit 6~1 保留；Bit 0 -- 故障；
804FEE         ?C0123?DEVICECHECK:
  593: 			if( DeviceStatus.CoinAccepter & 128 )//Bit 7
804FEE 900B17            MOV     DPTR,#DeviceStatus+01H
804FF1 E0                MOVX    A,@DPTR
804FF2 FF                MOV     R7,A
804FF3 30E702            JNB     ACC.7,?C0124?DEVICECHECK
  594: 				yStateus = 2;//无此模块
804FF6         
804FF6 8040              SJMP    ?C0304?DEVICECHECK
804FF8         ?C0124?DEVICECHECK:
  595: 			else if( DeviceStatus.CoinAccepter & 1 )//Bit 7
804FF8 EF                MOV     A,R7
804FF9 30E002            JNB     ACC.0,?C0126?DEVICECHECK
  596:  		    	yStateus = 1;//故障
804FFC         
804FFC 8052              SJMP    ?C0306?DEVICECHECK
804FFE         ?C0126?DEVICECHECK:
  597: 			else
  598: 				yStateus = 0;//正常
804FFE         
  599: 		break;
804FFE 8058              SJMP    ?C0307?DEVICECHECK
  600: 		case 2: // //#1退币器，Bit 7 -- 无此模块；Bit 6~2 保留；Bit 1 -- 缺币；Bit 0 -- 故障；
805000         ?C0128?DEVICECHECK:
  601: 			if( DeviceStatus.ChangeUnit1 & 128 )//Bit 7
805000 900B18            MOV     DPTR,#DeviceStatus+02H
805003 E0                MOVX    A,@DPTR
805004 FF                MOV     R7,A
805005 30E702            JNB     ACC.7,?C0129?DEVICECHECK
  602: 				yStateus = 2;//无此模块
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 144


805008         
805008 802E              SJMP    ?C0304?DEVICECHECK
80500A         ?C0129?DEVICECHECK:
  603: 			else if( DeviceStatus.ChangeUnit1 & 2 )//Bit 7
80500A EF                MOV     A,R7
80500B 30E102            JNB     ACC.1,?C0131?DEVICECHECK
  604:  		    	yStateus = 3;//缺币
80500E 8034              SJMP    ?C0305?DEVICECHECK
805010         ?C0131?DEVICECHECK:
  605: 			else if( DeviceStatus.ChangeUnit1 & 1 )//Bit 7
805010 EF                MOV     A,R7
805011 30E002            JNB     ACC.0,?C0133?DEVICECHECK
  606:  		    	yStateus = 1;//故障
805014         
805014 803A              SJMP    ?C0306?DEVICECHECK
805016         ?C0133?DEVICECHECK:
  607: 			else
  608: 				yStateus = 0;//正常
805016         
  609: 		break;		
805016 8040              SJMP    ?C0307?DEVICECHECK
  610: 		case 3: // //#1退币器，Bit 7 -- 无此模块；Bit 6~2 保留；Bit 1 -- 缺币；Bit 0 -- 故障；
805018         ?C0135?DEVICECHECK:
  611: 			if( DeviceStatus.ChangeUnit2 & 128 )//Bit 7
805018 900B19            MOV     DPTR,#DeviceStatus+03H
80501B E0                MOVX    A,@DPTR
80501C FF                MOV     R7,A
80501D 30E702            JNB     ACC.7,?C0136?DEVICECHECK
  612: 				yStateus = 2;//无此模块
805020         
805020 8016              SJMP    ?C0304?DEVICECHECK
805022         ?C0136?DEVICECHECK:
  613: 			else if( DeviceStatus.ChangeUnit2 & 2 )//Bit 7
805022 EF                MOV     A,R7
805023 30E102            JNB     ACC.1,?C0138?DEVICECHECK
  614:  		    	yStateus = 3;//缺币
805026         
805026 801C              SJMP    ?C0305?DEVICECHECK
805028         ?C0138?DEVICECHECK:
  615: 			else if( DeviceStatus.ChangeUnit2 & 1 )//Bit 7
805028 EF                MOV     A,R7
805029 30E002            JNB     ACC.0,?C0140?DEVICECHECK
  616:  		    	yStateus = 1;//故障
80502C         
80502C 8022              SJMP    ?C0306?DEVICECHECK
80502E         ?C0140?DEVICECHECK:
  617: 			else
  618: 				yStateus = 0;//正常
80502E         
  619: 		break;
80502E 8028              SJMP    ?C0307?DEVICECHECK
  620: 		case 4://#1退币器，Bit 7 -- 无此模块；Bit 6~2 保留；Bit 1 -- 缺币；Bit 0 -- 故障；
805030         ?C0142?DEVICECHECK:
  621: 			if( DeviceStatus.ChangeUnit3 & 128 )//Bit 7
805030 900B1A            MOV     DPTR,#DeviceStatus+04H
805033 E0                MOVX    A,@DPTR
805034 FF                MOV     R7,A
805035 30E708            JNB     ACC.7,?C0143?DEVICECHECK
  622: 				yStateus = 2;//无此模块
805038         
805038 901742            MOV     DPTR,#yStateus
80503B 7402              MOV     A,#02H
80503D F0                MOVX    @DPTR,A
80503E 801D              SJMP    ?C0117?DEVICECHECK
805040         ?C0143?DEVICECHECK:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 145


  623: 			else if( DeviceStatus.ChangeUnit3 & 2 )//Bit 7
805040 EF                MOV     A,R7
805041 30E108            JNB     ACC.1,?C0145?DEVICECHECK
  624:  		    	yStateus = 3;//缺币
805044         
805044 901742            MOV     DPTR,#yStateus
805047 7403              MOV     A,#03H
805049 F0                MOVX    @DPTR,A
80504A 8011              SJMP    ?C0117?DEVICECHECK
80504C         ?C0145?DEVICECHECK:
  625: 			else if( DeviceStatus.ChangeUnit3 & 1 )//Bit 7
80504C EF                MOV     A,R7
80504D 30E008            JNB     ACC.0,?C0147?DEVICECHECK
  626:  		    	yStateus = 1;//故障
805050         
805050 901742            MOV     DPTR,#yStateus
805053 7401              MOV     A,#01H
805055 F0                MOVX    @DPTR,A
805056 8005              SJMP    ?C0117?DEVICECHECK
805058         ?C0147?DEVICECHECK:
  627: 			else
  628: 				yStateus = 0;//正常
805058         
805058 E4                CLR     A
805059 901742            MOV     DPTR,#yStateus
80505C F0                MOVX    @DPTR,A
  629: 		break;
  630: 		case 5://手机模块，Bit 7 -- 无此模块；Bit 6~2 保留；Bit 0 -- 故障；
  631: 		/*	if( DeviceStatus.MobileStates & 128 )//Bit 7
  632: 				yStateus = 2;//无此模块			
  633: 			else if( DeviceStatus.MobileStates & 1 )//Bit 7
  634:  		    	yStateus = 1;//故障
  635: 			else
  636: 				yStateus = 0;//正常
  637: 		 */
  638: 		break;
  639:  	}
80505D         ?C0117?DEVICECHECK:
  640: 	if( PrintFlag == 0 )
80505D 301903            JNB     PrintFlag,$ + 6H
805060 025143            LJMP    ?C0150?DEVICECHECK
  641: 	{
  642: 		memcpy( uline, WMenuStr[Index].str, WMenuStr[Index].len );	
805063 901740            MOV     DPTR,#Index
805066 E0                MOVX    A,@DPTR
805067 FF                MOV     R7,A
805068 25E0              ADD     A,ACC
80506A 25E0              ADD     A,ACC
80506C 24D0              ADD     A,#LOW WMenuStr+03H
80506E F582              MOV     DPL,A
805070 E4                CLR     A
805071 340E              ADDC    A,#HIGH WMenuStr+03H
805073 F583              MOV     DPH,A
805075 E4                CLR     A
805076 93                MOVC    A,@A+DPTR
805077 FD                MOV     R5,A
805078 7C00              MOV     R4,#00H
80507A C004              PUSH    AR4
80507C C005              PUSH    AR5
80507E EF                MOV     A,R7
80507F 25E0              ADD     A,ACC
805081 25E0              ADD     A,ACC
805083 24CD              ADD     A,#LOW WMenuStr
805085 F582              MOV     DPL,A
805087 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 146


805088 340E              ADDC    A,#HIGH WMenuStr
80508A F583              MOV     DPH,A
80508C A5128007C0        ECALL   ?C?PLDCODE
805091 7843              MOV     R0,#LOW uline
805093 7C17              MOV     R4,#HIGH uline
805095 7D00              MOV     R5,#?C?XDATASEG
805097 D007              POP     AR7
805099 D006              POP     AR6
80509B A51280052D        ECALL   ?C?COPY
  643: 		memcpy( uline + WMenuStr[Index].len, DeviceStatusStr[yStateus].str, DeviceStatusStr[yStateus].len );
8050A0 901742            MOV     DPTR,#yStateus
8050A3 E0                MOVX    A,@DPTR
8050A4 FF                MOV     R7,A
8050A5 25E0              ADD     A,ACC
8050A7 25E0              ADD     A,ACC
8050A9 24F4              ADD     A,#LOW DeviceStatusStr+03H
8050AB F582              MOV     DPL,A
8050AD E4                CLR     A
8050AE 340E              ADDC    A,#HIGH DeviceStatusStr+03H
8050B0 F583              MOV     DPH,A
8050B2 E4                CLR     A
8050B3 93                MOVC    A,@A+DPTR
8050B4 FD                MOV     R5,A
8050B5 7C00              MOV     R4,#00H
8050B7 C004              PUSH    AR4
8050B9 C005              PUSH    AR5
8050BB EF                MOV     A,R7
8050BC 25E0              ADD     A,ACC
8050BE 25E0              ADD     A,ACC
8050C0 24F1              ADD     A,#LOW DeviceStatusStr
8050C2 F582              MOV     DPL,A
8050C4 E4                CLR     A
8050C5 340E              ADDC    A,#HIGH DeviceStatusStr
8050C7 F583              MOV     DPH,A
8050C9 A5128007C0        ECALL   ?C?PLDCODE
8050CE C001              PUSH    AR1
8050D0 901740            MOV     DPTR,#Index
8050D3 E0                MOVX    A,@DPTR
8050D4 25E0              ADD     A,ACC
8050D6 25E0              ADD     A,ACC
8050D8 24D0              ADD     A,#LOW WMenuStr+03H
8050DA F582              MOV     DPL,A
8050DC E4                CLR     A
8050DD 340E              ADDC    A,#HIGH WMenuStr+03H
8050DF F583              MOV     DPH,A
8050E1 E4                CLR     A
8050E2 93                MOVC    A,@A+DPTR
8050E3 2443              ADD     A,#LOW uline
8050E5 F9                MOV     R1,A
8050E6 E4                CLR     A
8050E7 3417              ADDC    A,#HIGH uline
8050E9 A801              MOV     R0,AR1
8050EB FC                MOV     R4,A
8050EC 7D00              MOV     R5,#?C?XDATASEG
8050EE D001              POP     AR1
8050F0 D007              POP     AR7
8050F2 D006              POP     AR6
8050F4 A51280052D        ECALL   ?C?COPY
  644: 		DisplayStr( 0, y, 1, uline, WMenuStr[Index].len + DeviceStatusStr[yStateus].len );			
8050F9 901741            MOV     DPTR,#y
8050FC E0                MOVX    A,@DPTR
8050FD FD                MOV     R5,A
8050FE D21A              SETB    ?_DisplayStr?BIT
805100 7B00              MOV     R3,#?C?XDATASEG
805102 7A17              MOV     R2,#HIGH uline
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 147


805104 7943              MOV     R1,#LOW uline
805106 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805109 A5128007B6        ECALL   ?C?PSTXDATA
80510E 901742            MOV     DPTR,#yStateus
805111 E0                MOVX    A,@DPTR
805112 25E0              ADD     A,ACC
805114 25E0              ADD     A,ACC
805116 24F4              ADD     A,#LOW DeviceStatusStr+03H
805118 F582              MOV     DPL,A
80511A E4                CLR     A
80511B 340E              ADDC    A,#HIGH DeviceStatusStr+03H
80511D F583              MOV     DPH,A
80511F E4                CLR     A
805120 93                MOVC    A,@A+DPTR
805121 FF                MOV     R7,A
805122 901740            MOV     DPTR,#Index
805125 E0                MOVX    A,@DPTR
805126 25E0              ADD     A,ACC
805128 25E0              ADD     A,ACC
80512A 24D0              ADD     A,#LOW WMenuStr+03H
80512C F582              MOV     DPL,A
80512E E4                CLR     A
80512F 340E              ADDC    A,#HIGH WMenuStr+03H
805131 F583              MOV     DPH,A
805133 E4                CLR     A
805134 93                MOVC    A,@A+DPTR
805135 2F                ADD     A,R7
805136 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805139 F0                MOVX    @DPTR,A
80513A E4                CLR     A
80513B FF                MOV     R7,A
80513C A512808062        ECALL   _DisplayStr
  645: 	}
805141 8005              SJMP    ?C0152?DEVICECHECK
805143         ?C0150?DEVICECHECK:
  646: 	else
  647: 		return yStateus;
805143 901742            MOV     DPTR,#yStateus
805146 E0                MOVX    A,@DPTR
805147 FF                MOV     R7,A
  648: }
805148         ?C0152?DEVICECHECK:
805148 A522              ERET    
----- FUNCTION _DispDeviceStatus (END) -------


----- FUNCTION ?L?COM0036 (BEGIN) -----
80514A 901726            MOV     DPTR,#firstNum
80514D E0                MOVX    A,@DPTR
80514E FF                MOV     R7,A
80514F 7D01              MOV     R5,#01H
----- FUNCTION _DispDeviceMenu (BEGIN) -----
 FILE: 'devicecheck.c'
  650: void DispDeviceMenu( u_char Index, u_char y)
  651: {	
805151 90173F            MOV     DPTR,#y
805154 ED                MOV     A,R5
805155 F0                MOVX    @DPTR,A
805156 90173E            MOV     DPTR,#Index
805159 EF                MOV     A,R7
80515A F0                MOVX    @DPTR,A
  652: //#ifdef _HAVE_CASHER	
  653: 	if( ( Index != 5 ) && ( Index != 7 ) && ( Index != 8 ) && ( Index != 6 ) )											
80515B 6405              XRL     A,#05H
80515D 601C              JZ      ?C0153?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 148


80515F E0                MOVX    A,@DPTR
805160 FF                MOV     R7,A
805161 6407              XRL     A,#07H
805163 6016              JZ      ?C0153?DEVICECHECK
805165 EF                MOV     A,R7
805166 6408              XRL     A,#08H
805168 6011              JZ      ?C0153?DEVICECHECK
80516A EF                MOV     A,R7
80516B 6406              XRL     A,#06H
80516D 600C              JZ      ?C0153?DEVICECHECK
  654: 		DispDeviceStatus( Index, y, 0 );						
80516F A3                INC     DPTR
805170 E0                MOVX    A,@DPTR
805171 FD                MOV     R5,A
805172 C219              CLR     ?_DispDeviceStatus?BIT
805174 A512804FBB        ECALL   _DispDeviceStatus
805179 8041              SJMP    ?C0155?DEVICECHECK
80517B         ?C0153?DEVICECHECK:
  655: 	else
  656: 		DisplayStr( 0, y, 1, WMenuStr[Index].str, WMenuStr[Index].len );						
80517B 90173F            MOV     DPTR,#y
80517E E0                MOVX    A,@DPTR
80517F FD                MOV     R5,A
805180 D21A              SETB    ?_DisplayStr?BIT
805182 90173E            MOV     DPTR,#Index
805185 E0                MOVX    A,@DPTR
805186 FF                MOV     R7,A
805187 25E0              ADD     A,ACC
805189 25E0              ADD     A,ACC
80518B 24CD              ADD     A,#LOW WMenuStr
80518D F582              MOV     DPL,A
80518F E4                CLR     A
805190 340E              ADDC    A,#HIGH WMenuStr
805192 F583              MOV     DPH,A
805194 A5128007C0        ECALL   ?C?PLDCODE
805199 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80519C A5128007B6        ECALL   ?C?PSTXDATA
8051A1 EF                MOV     A,R7
8051A2 25E0              ADD     A,ACC
8051A4 25E0              ADD     A,ACC
8051A6 24D0              ADD     A,#LOW WMenuStr+03H
8051A8 F582              MOV     DPL,A
8051AA E4                CLR     A
8051AB 340E              ADDC    A,#HIGH WMenuStr+03H
8051AD F583              MOV     DPH,A
8051AF E4                CLR     A
8051B0 93                MOVC    A,@A+DPTR
8051B1 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8051B4 F0                MOVX    @DPTR,A
8051B5 E4                CLR     A
8051B6 FF                MOV     R7,A
8051B7 A512808062        ECALL   _DisplayStr
  657: /*#else
  658: 	if( ( Index != 4 ) && ( Index != 5 ) )											
  659: 		DispDeviceStatus( Index, y, 0 );						
  660: 	else
  661: 		DisplayStr( 0, y, 1, WMenuStr[Index].str, WMenuStr[Index].len );
  662: #endif*/
  663: }
8051BC         ?C0155?DEVICECHECK:
8051BC A522              ERET    
----- FUNCTION _DispDeviceMenu (END) -------


----- FUNCTION DispGoodsWaysStates (BEGIN) -----
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 149


 FILE: 'devicecheck.c'
  666: void DispGoodsWaysStates()
  667: {
  668: 	u_char xdata line1[21];
  669: 	u_char xdata line2[21];
  670: 	u_char xdata i = 0;
8051BE E4                CLR     A
8051BF 901768            MOV     DPTR,#i
8051C2 F0                MOVX    @DPTR,A
  671: 	u_char xdata j = 0;
8051C3 A3                INC     DPTR
8051C4 F0                MOVX    @DPTR,A
  672: 	u_char xdata z = 0;
8051C5 A3                INC     DPTR
8051C6 F0                MOVX    @DPTR,A
  673: #ifdef _CHINA_
  674: 	u_char xdata Start = 0;
  675: 	u_char xdata End = 10;
  676: #else
  677: 	u_char xdata Start = 0;
8051C7 A3                INC     DPTR
8051C8 F0                MOVX    @DPTR,A
  678: 	u_char xdata End = 8;
8051C9 A3                INC     DPTR
8051CA 7408              MOV     A,#08H
8051CC F0                MOVX    @DPTR,A
  679: #endif					
  680: 	u_char  xdata LineNum = 2;  //选中行在屏幕中的行号		
8051CD A3                INC     DPTR
8051CE 7402              MOV     A,#02H
8051D0 F0                MOVX    @DPTR,A
  681: 	u_char  xdata key;
  682: 	u_char xdata  DispFlag = 1;
8051D1 90176F            MOV     DPTR,#DispFlag
8051D4 14                DEC     A
8051D5 F0                MOVX    @DPTR,A
  683: 	u_char xdata SumColunm = 0;
8051D6 E4                CLR     A
8051D7 A3                INC     DPTR
8051D8 F0                MOVX    @DPTR,A
  684: 
  685: 	key = KEY_NULL;		
8051D9 90176E            MOV     DPTR,#key
8051DC 74FF              MOV     A,#0FFH
8051DE F0                MOVX    @DPTR,A
  686: 	ClearKey();
8051DF A5128087A8        ECALL   ClearKey
  687: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态
8051E4 A512808171        ECALL   ?L?COM000F
  688: 	LineNum = 2;
8051E9 90176D            MOV     DPTR,#LineNum
8051EC 7402              MOV     A,#02H
8051EE F0                MOVX    @DPTR,A
  689: 	for( i = 0; i < GOODSWAYNUM; i ++ )
8051EF E4                CLR     A
8051F0 901768            MOV     DPTR,#i
8051F3 F0                MOVX    @DPTR,A
8051F4         ?C0156?DEVICECHECK:
8051F4 901768            MOV     DPTR,#i
8051F7 E0                MOVX    A,@DPTR
8051F8 FF                MOV     R7,A
8051F9 C3                CLR     C
8051FA 9440              SUBB    A,#040H
8051FC 501D              JNC     ?C0161?DEVICECHECK
  690: 	{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 150


  691: 		if( GoodsWaySetVal[i].WayNo != 0 )
8051FE 75F005            MOV     B,#05H
805201 EF                MOV     A,R7
805202 900002            MOV     DPTR,#GoodsWaySetVal
805205 A51280079F        ECALL   ?C?OFFXADD
80520A E0                MOVX    A,@DPTR
80520B 600E              JZ      ?C0161?DEVICECHECK
  692: 			SumColunm++;
80520D 901770            MOV     DPTR,#SumColunm
805210 E0                MOVX    A,@DPTR
805211 04                INC     A
805212 F0                MOVX    @DPTR,A
  693: 		else
  694: 			break;
  695: 	}
805213         ?C0158?DEVICECHECK:
805213 901768            MOV     DPTR,#i
805216 E0                MOVX    A,@DPTR
805217 04                INC     A
805218 F0                MOVX    @DPTR,A
805219 80D9              SJMP    ?C0156?DEVICECHECK
80521B         ?C0161?DEVICECHECK:
  696: 
  697: 	while( 1 )    //超时或客户退出
  698: 	{
  699: 		if( DispFlag )
80521B 90176F            MOV     DPTR,#DispFlag
80521E E0                MOVX    A,@DPTR
80521F 7003              JNZ     $ + 5H
805221 02555B            LJMP    ?C0163?DEVICECHECK
  700: 		{
  701: 			memset( line1, 0, sizeof( line1 ) );	
805224 7E00              MOV     R6,#00H
805226 7F15              MOV     R7,#015H
805228 7D00              MOV     R5,#00H
80522A 7B00              MOV     R3,#?C?XDATASEG
80522C 7A17              MOV     R2,#HIGH line1
80522E 793E              MOV     R1,#LOW line1
805230 A5128008A6        ECALL   ?C?MEMSET
  702: 			memset( line2, 0, sizeof( line2 ) );	
805235 7E00              MOV     R6,#00H
805237 7F15              MOV     R7,#015H
805239 7D00              MOV     R5,#00H
80523B 7B00              MOV     R3,#?C?XDATASEG
80523D 7A17              MOV     R2,#HIGH line2
80523F 7953              MOV     R1,#LOW line2
805241 A5128008A6        ECALL   ?C?MEMSET
  703: 			j = 0;
805246 E4                CLR     A
805247 901769            MOV     DPTR,#j
80524A F0                MOVX    @DPTR,A
  704: 			i = 0;			
80524B 901768            MOV     DPTR,#i
80524E F0                MOVX    @DPTR,A
  705: 			for( i = Start; i < End; i++ )
80524F 90176B            MOV     DPTR,#Start
805252 E0                MOVX    A,@DPTR
805253 901768            MOV     DPTR,#i
805256 F0                MOVX    @DPTR,A
805257         ?C0164?DEVICECHECK:
805257 90176C            MOV     DPTR,#End
80525A E0                MOVX    A,@DPTR
80525B FF                MOV     R7,A
80525C 901768            MOV     DPTR,#i
80525F E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 151


805260 FE                MOV     R6,A
805261 C3                CLR     C
805262 9F                SUBB    A,R7
805263 4003              JC      $ + 5H
805265 0254DD            LJMP    ?C0165?DEVICECHECK
  706: 			{	
  707: 			#ifdef _CHINA_
  708: 				if( i < ( Start + 5 ) )
  709: 			#else
  710: 				if( i < ( Start + 4 ) )
805268 90176B            MOV     DPTR,#Start
80526B E0                MOVX    A,@DPTR
80526C 2404              ADD     A,#04H
80526E FD                MOV     R5,A
80526F E4                CLR     A
805270 33                RLC     A
805271 FC                MOV     R4,A
805272 EE                MOV     A,R6
805273 C3                CLR     C
805274 9D                SUBB    A,R5
805275 EC                MOV     A,R4
805276 6480              XRL     A,#080H
805278 F8                MOV     R0,A
805279 7480              MOV     A,#080H
80527B 98                SUBB    A,R0
80527C 4003              JC      $ + 5H
80527E 025399            LJMP    ?C0167?DEVICECHECK
  711: 			#endif				
  712: 				{
  713: 					if( GoodsWaySetVal[i].WayNo == 0 )
805281 901768            MOV     DPTR,#i
805284 E0                MOVX    A,@DPTR
805285 75F005            MOV     B,#05H
805288 900002            MOV     DPTR,#GoodsWaySetVal
80528B A51280079F        ECALL   ?C?OFFXADD
805290 E0                MOVX    A,@DPTR
805291 7003              JNZ     $ + 5H
805293 0254D4            LJMP    ?C0166?DEVICECHECK
  714: 						continue;
805296         ?C0168?DEVICECHECK:
  715: 				#ifdef _CHINA_
  716: 					sprintf( line1 + 4*j, "%02bu ", GoodsWaySetVal[i].WayNo );
  717: 				#else
  718: 					sprintf( line1 + 5*j, "%02bu ", GoodsWaySetVal[i].WayNo );
805296 901769            MOV     DPTR,#j
805299 E0                MOVX    A,@DPTR
80529A 75F005            MOV     B,#05H
80529D A4                MUL     AB
80529E 243E              ADD     A,#LOW line1
8052A0 F9                MOV     R1,A
8052A1 7417              MOV     A,#HIGH line1
8052A3 35F0              ADDC    A,B
8052A5 FA                MOV     R2,A
8052A6 7B00              MOV     R3,#?C?XDATASEG
8052A8 C003              PUSH    AR3
8052AA C002              PUSH    AR2
8052AC C001              PUSH    AR1
8052AE 7B80              MOV     R3,#BYTE2 0800E2CH
8052B0 7A0E              MOV     R2,#HIGH 0800E2CH
8052B2 792C              MOV     R1,#LOW 0800E2CH
8052B4 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8052B7 A5128007B6        ECALL   ?C?PSTXDATA
8052BC 901768            MOV     DPTR,#i
8052BF E0                MOVX    A,@DPTR
8052C0 75F005            MOV     B,#05H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 152


8052C3 900002            MOV     DPTR,#GoodsWaySetVal
8052C6 A51280079F        ECALL   ?C?OFFXADD
8052CB E0                MOVX    A,@DPTR
8052CC 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8052CF F0                MOVX    @DPTR,A
8052D0 D001              POP     AR1
8052D2 D002              POP     AR2
8052D4 D003              POP     AR3
8052D6 A512800949        ECALL   _sprintf
  719: 			    #endif
  720: 					z = 0;
8052DB E4                CLR     A
8052DC 90176A            MOV     DPTR,#z
8052DF F0                MOVX    @DPTR,A
  721: 					if( GoodsWaySetVal[i].GoodsCurrentSum == 0 )
8052E0 901768            MOV     DPTR,#i
8052E3 E0                MOVX    A,@DPTR
8052E4 FF                MOV     R7,A
8052E5 75F005            MOV     B,#05H
8052E8 900006            MOV     DPTR,#GoodsWaySetVal+04H
8052EB A51280079F        ECALL   ?C?OFFXADD
8052F0 E0                MOVX    A,@DPTR
8052F1 7006              JNZ     ?C0169?DEVICECHECK
  722: 						z = 3;
8052F3 90176A            MOV     DPTR,#z
8052F6 7403              MOV     A,#03H
8052F8 F0                MOVX    @DPTR,A
8052F9         ?C0169?DEVICECHECK:
  723: 					z = ( GoodsWaySetVal[i].WayState & 0x0f );
8052F9 75F005            MOV     B,#05H
8052FC EF                MOV     A,R7
8052FD 900003            MOV     DPTR,#GoodsWaySetVal+01H
805300 A51280079F        ECALL   ?C?OFFXADD
805305 E0                MOVX    A,@DPTR
805306 FF                MOV     R7,A
805307 540F              ANL     A,#0FH
805309 90176A            MOV     DPTR,#z
80530C F0                MOVX    @DPTR,A
  724: 					if( ( z & 0x01 ) != 0x01 )						
80530D 20E004            JB      ACC.0,?C0170?DEVICECHECK
  725: 						z = 0;					
805310 E4                CLR     A
805311 F0                MOVX    @DPTR,A
805312 8045              SJMP    ?C0171?DEVICECHECK
805314         ?C0170?DEVICECHECK:
  726: 					else if( ( z & 0x01 ) == 0x01 )
805314 90176A            MOV     DPTR,#z
805317 E0                MOVX    A,@DPTR
805318 FE                MOV     R6,A
805319 30E005            JNB     ACC.0,?C0172?DEVICECHECK
  727: 						z = 1;
80531C 7401              MOV     A,#01H
80531E F0                MOVX    @DPTR,A
80531F 8038              SJMP    ?C0171?DEVICECHECK
805321         ?C0172?DEVICECHECK:
  728: 					else if( ( z & 0x02 ) == 0x02 )
805321 EE                MOV     A,R6
805322 30E108            JNB     ACC.1,?C0174?DEVICECHECK
  729: 						z = 2;
805325 90176A            MOV     DPTR,#z
805328 7402              MOV     A,#02H
80532A F0                MOVX    @DPTR,A
80532B 802C              SJMP    ?C0171?DEVICECHECK
80532D         ?C0174?DEVICECHECK:
  730: 					else if( ( z & 0x04 ) == 0x04 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 153


80532D EE                MOV     A,R6
80532E 30E208            JNB     ACC.2,?C0176?DEVICECHECK
  731: 						z = 3;	
805331 90176A            MOV     DPTR,#z
805334 7403              MOV     A,#03H
805336 F0                MOVX    @DPTR,A
805337 8020              SJMP    ?C0171?DEVICECHECK
805339         ?C0176?DEVICECHECK:
  732: 					else if( ( z & 0x08 ) == 0x08 )
805339 EE                MOV     A,R6
80533A 30E31C            JNB     ACC.3,?C0171?DEVICECHECK
  733: 					{
  734: 						if( ( z & 0x08) == 0x08 )
80533D 30E313            JNB     ACC.3,?C0179?DEVICECHECK
  735: 							GoodsWaySetVal[i].WayState &= 0xf0;
805340 901768            MOV     DPTR,#i
805343 E0                MOVX    A,@DPTR
805344 75F005            MOV     B,#05H
805347 900003            MOV     DPTR,#GoodsWaySetVal+01H
80534A A51280079F        ECALL   ?C?OFFXADD
80534F EF                MOV     A,R7
805350 54F0              ANL     A,#0F0H
805352 F0                MOVX    @DPTR,A
805353         ?C0179?DEVICECHECK:
  736: 						z = 4;
805353 90176A            MOV     DPTR,#z
805356 7404              MOV     A,#04H
805358 F0                MOVX    @DPTR,A
  737: 					}
805359         ?C0171?DEVICECHECK:
  738: 				#ifdef _CHINA_
  739: 					memcpy( line1 + 4*j + 2, GoodsWaysStatusStr[ z ].str, GoodsWaysStatusStr[ z ].len );
  740: 				#else
  741: 					memcpy( line1 + 5*j + 3, GoodsWaysStatusStr[ z ].str, GoodsWaysStatusStr[ z ].len );
805359 90176A            MOV     DPTR,#z
80535C E0                MOVX    A,@DPTR
80535D FF                MOV     R7,A
80535E 25E0              ADD     A,ACC
805360 25E0              ADD     A,ACC
805362 2404              ADD     A,#LOW GoodsWaysStatusStr+03H
805364 F582              MOV     DPL,A
805366 E4                CLR     A
805367 340F              ADDC    A,#HIGH GoodsWaysStatusStr+03H
805369 F583              MOV     DPH,A
80536B E4                CLR     A
80536C 93                MOVC    A,@A+DPTR
80536D FD                MOV     R5,A
80536E 7C00              MOV     R4,#00H
805370 C004              PUSH    AR4
805372 C005              PUSH    AR5
805374 EF                MOV     A,R7
805375 25E0              ADD     A,ACC
805377 25E0              ADD     A,ACC
805379 2401              ADD     A,#LOW GoodsWaysStatusStr
80537B F582              MOV     DPL,A
80537D E4                CLR     A
80537E 340F              ADDC    A,#HIGH GoodsWaysStatusStr
805380 F583              MOV     DPH,A
805382 A5128007C0        ECALL   ?C?PLDCODE
805387 C001              PUSH    AR1
805389 901769            MOV     DPTR,#j
80538C E0                MOVX    A,@DPTR
80538D 75F005            MOV     B,#05H
805390 A4                MUL     AB
805391 2441              ADD     A,#LOW line1+03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 154


805393 F9                MOV     R1,A
805394 7417              MOV     A,#HIGH line1+03H
  742: 				#endif					
  743: 				//	Trace("\n GoodsWaySetVal[i].WayNo = %02bu", GoodsWaySetVal[i].WayNo );		
  744: 				//	Trace("\n GoodsWaySetVal[i].WayState = %bu", GoodsWaySetVal[i].WayState );		
  745: 				//	Trace("\n line1 = %s", line1 );		
  746: 					j++;
  747: 				}
805396 0254BC            LJMP    ?C0308?DEVICECHECK
805399         ?C0167?DEVICECHECK:
  748: 				else
  749: 				{					
  750: 					if( i < SumColunm )
805399 901770            MOV     DPTR,#SumColunm
80539C E0                MOVX    A,@DPTR
80539D FF                MOV     R7,A
80539E 901768            MOV     DPTR,#i
8053A1 E0                MOVX    A,@DPTR
8053A2 FE                MOV     R6,A
8053A3 C3                CLR     C
8053A4 9F                SUBB    A,R7
8053A5 4003              JC      $ + 5H
8053A7 0254DD            LJMP    ?C0165?DEVICECHECK
  751: 					{					
  752: 						if( GoodsWaySetVal[i].WayNo == 0 )
8053AA 75F005            MOV     B,#05H
8053AD EE                MOV     A,R6
8053AE 900002            MOV     DPTR,#GoodsWaySetVal
8053B1 A51280079F        ECALL   ?C?OFFXADD
8053B6 E0                MOVX    A,@DPTR
8053B7 7003              JNZ     $ + 5H
8053B9 0254D4            LJMP    ?C0166?DEVICECHECK
  753: 							continue;
8053BC         ?C0182?DEVICECHECK:
  754: 					#ifdef _CHINA_
  755: 						sprintf( line2 + 4*(j - 5 ), "%02bu ", GoodsWaySetVal[i].WayNo );
  756: 					#else
  757: 						sprintf( line2 + 5*(j - 4 ), "%02bu ", GoodsWaySetVal[i].WayNo );
8053BC 901769            MOV     DPTR,#j
8053BF E0                MOVX    A,@DPTR
8053C0 75F005            MOV     B,#05H
8053C3 A4                MUL     AB
8053C4 243F              ADD     A,#LOW line2-014H
8053C6 F9                MOV     R1,A
8053C7 7417              MOV     A,#HIGH line2-014H
8053C9 35F0              ADDC    A,B
8053CB FA                MOV     R2,A
8053CC 7B00              MOV     R3,#?C?XDATASEG
8053CE C003              PUSH    AR3
8053D0 C002              PUSH    AR2
8053D2 C001              PUSH    AR1
8053D4 7B80              MOV     R3,#BYTE2 0800E2CH
8053D6 7A0E              MOV     R2,#HIGH 0800E2CH
8053D8 792C              MOV     R1,#LOW 0800E2CH
8053DA 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8053DD A5128007B6        ECALL   ?C?PSTXDATA
8053E2 901768            MOV     DPTR,#i
8053E5 E0                MOVX    A,@DPTR
8053E6 75F005            MOV     B,#05H
8053E9 900002            MOV     DPTR,#GoodsWaySetVal
8053EC A51280079F        ECALL   ?C?OFFXADD
8053F1 E0                MOVX    A,@DPTR
8053F2 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8053F5 F0                MOVX    @DPTR,A
8053F6 D001              POP     AR1
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 155


8053F8 D002              POP     AR2
8053FA D003              POP     AR3
8053FC A512800949        ECALL   _sprintf
  758: 			    	#endif						
  759: 						z = 0;
805401 E4                CLR     A
805402 90176A            MOV     DPTR,#z
805405 F0                MOVX    @DPTR,A
  760: 						if( GoodsWaySetVal[i].GoodsCurrentSum == 0 )
805406 901768            MOV     DPTR,#i
805409 E0                MOVX    A,@DPTR
80540A FF                MOV     R7,A
80540B 75F005            MOV     B,#05H
80540E 900006            MOV     DPTR,#GoodsWaySetVal+04H
805411 A51280079F        ECALL   ?C?OFFXADD
805416 E0                MOVX    A,@DPTR
805417 7006              JNZ     ?C0183?DEVICECHECK
  761: 							z = 3;
805419 90176A            MOV     DPTR,#z
80541C 7403              MOV     A,#03H
80541E F0                MOVX    @DPTR,A
80541F         ?C0183?DEVICECHECK:
  762: 						z = ( GoodsWaySetVal[i].WayState & 0x0f );
80541F 75F005            MOV     B,#05H
805422 EF                MOV     A,R7
805423 900003            MOV     DPTR,#GoodsWaySetVal+01H
805426 A51280079F        ECALL   ?C?OFFXADD
80542B E0                MOVX    A,@DPTR
80542C FF                MOV     R7,A
80542D 540F              ANL     A,#0FH
80542F 90176A            MOV     DPTR,#z
805432 F0                MOVX    @DPTR,A
  763: 						if( ( z & 0x01 ) != 0x01 )
805433 20E004            JB      ACC.0,?C0184?DEVICECHECK
  764: 							z = 0;						
805436 E4                CLR     A
805437 F0                MOVX    @DPTR,A
805438 8045              SJMP    ?C0185?DEVICECHECK
80543A         ?C0184?DEVICECHECK:
  765: 						else if( ( z & 0x01 ) == 0x01 )
80543A 90176A            MOV     DPTR,#z
80543D E0                MOVX    A,@DPTR
80543E FE                MOV     R6,A
80543F 30E005            JNB     ACC.0,?C0186?DEVICECHECK
  766: 							z = 1;
805442 7401              MOV     A,#01H
805444 F0                MOVX    @DPTR,A
805445 8038              SJMP    ?C0185?DEVICECHECK
805447         ?C0186?DEVICECHECK:
  767: 						else if( ( z & 0x02 ) == 0x02 )
805447 EE                MOV     A,R6
805448 30E108            JNB     ACC.1,?C0188?DEVICECHECK
  768: 							z = 2;
80544B 90176A            MOV     DPTR,#z
80544E 7402              MOV     A,#02H
805450 F0                MOVX    @DPTR,A
805451 802C              SJMP    ?C0185?DEVICECHECK
805453         ?C0188?DEVICECHECK:
  769: 						else if( ( z & 0x04 ) == 0x04 )
805453 EE                MOV     A,R6
805454 30E208            JNB     ACC.2,?C0190?DEVICECHECK
  770: 							z = 3;
805457 90176A            MOV     DPTR,#z
80545A 7403              MOV     A,#03H
80545C F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 156


80545D 8020              SJMP    ?C0185?DEVICECHECK
80545F         ?C0190?DEVICECHECK:
  771: 						else if( ( z & 0x08) == 0x08 )
80545F EE                MOV     A,R6
805460 30E31C            JNB     ACC.3,?C0185?DEVICECHECK
  772: 						{
  773: 							z = 4;
805463 90176A            MOV     DPTR,#z
805466 7404              MOV     A,#04H
805468 F0                MOVX    @DPTR,A
  774: 							if( ( z & 0x08) == 0x08 )
805469 30E313            JNB     ACC.3,?C0185?DEVICECHECK
  775: 								GoodsWaySetVal[i].WayState &= 0xf0;
80546C 901768            MOV     DPTR,#i
80546F E0                MOVX    A,@DPTR
805470 75F005            MOV     B,#05H
805473 900003            MOV     DPTR,#GoodsWaySetVal+01H
805476 A51280079F        ECALL   ?C?OFFXADD
80547B EF                MOV     A,R7
80547C 54F0              ANL     A,#0F0H
80547E F0                MOVX    @DPTR,A
  776: 						}
80547F         ?C0185?DEVICECHECK:
  777: 					#ifdef _CHINA_
  778: 						memcpy( line2 + 4*(j - 5 ) + 2, GoodsWaysStatusStr[ z ].str, GoodsWaysStatusStr[ z ].len );
  779: 					#else
  780: 						memcpy( line2 + 5*(j - 4 ) + 3, GoodsWaysStatusStr[ z ].str, GoodsWaysStatusStr[ z ].len );
80547F 90176A            MOV     DPTR,#z
805482 E0                MOVX    A,@DPTR
805483 FF                MOV     R7,A
805484 25E0              ADD     A,ACC
805486 25E0              ADD     A,ACC
805488 2404              ADD     A,#LOW GoodsWaysStatusStr+03H
80548A F582              MOV     DPL,A
80548C E4                CLR     A
80548D 340F              ADDC    A,#HIGH GoodsWaysStatusStr+03H
80548F F583              MOV     DPH,A
805491 E4                CLR     A
805492 93                MOVC    A,@A+DPTR
805493 FD                MOV     R5,A
805494 7C00              MOV     R4,#00H
805496 C004              PUSH    AR4
805498 C005              PUSH    AR5
80549A EF                MOV     A,R7
80549B 25E0              ADD     A,ACC
80549D 25E0              ADD     A,ACC
80549F 2401              ADD     A,#LOW GoodsWaysStatusStr
8054A1 F582              MOV     DPL,A
8054A3 E4                CLR     A
8054A4 340F              ADDC    A,#HIGH GoodsWaysStatusStr
8054A6 F583              MOV     DPH,A
8054A8 A5128007C0        ECALL   ?C?PLDCODE
8054AD C001              PUSH    AR1
8054AF 901769            MOV     DPTR,#j
8054B2 E0                MOVX    A,@DPTR
8054B3 75F005            MOV     B,#05H
8054B6 A4                MUL     AB
8054B7 2442              ADD     A,#LOW line2-011H
8054B9 F9                MOV     R1,A
8054BA 7417              MOV     A,#HIGH line2-011H
8054BC         
8054BC 35F0              ADDC    A,B
8054BE A801              MOV     R0,AR1
8054C0 FC                MOV     R4,A
8054C1 7D00              MOV     R5,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 157


8054C3 D001              POP     AR1
8054C5 D007              POP     AR7
8054C7 D006              POP     AR6
8054C9 A51280052D        ECALL   ?C?COPY
  781: 					#endif
  782: 						j += 1;
8054CE 901769            MOV     DPTR,#j
8054D1 E0                MOVX    A,@DPTR
8054D2 04                INC     A
8054D3 F0                MOVX    @DPTR,A
  783: 					}
  784: 					else
  785: 						break;
  786: 				}				
  787: 			}	
8054D4         ?C0166?DEVICECHECK:
8054D4 901768            MOV     DPTR,#i
8054D7 E0                MOVX    A,@DPTR
8054D8 04                INC     A
8054D9 F0                MOVX    @DPTR,A
8054DA 025257            LJMP    ?C0164?DEVICECHECK
8054DD         ?C0165?DEVICECHECK:
  788: 			if( ( strlen( line1 ) == 0 ) && ( strlen(line2) == 0 ) )
8054DD 7B00              MOV     R3,#?C?XDATASEG
8054DF 7A17              MOV     R2,#HIGH line1
8054E1 793E              MOV     R1,#LOW line1
8054E3 A512800010        ECALL   _strlen
8054E8 EF                MOV     A,R7
8054E9 4E                ORL     A,R6
8054EA 7012              JNZ     ?C0195?DEVICECHECK
8054EC 7B00              MOV     R3,#?C?XDATASEG
8054EE 7A17              MOV     R2,#HIGH line2
8054F0 7953              MOV     R1,#LOW line2
8054F2 A512800010        ECALL   _strlen
8054F7 EF                MOV     A,R7
8054F8 4E                ORL     A,R6
8054F9 7003              JNZ     $ + 5H
8054FB 0255FD            LJMP    ?C0196?DEVICECHECK
8054FE         ?C0195?DEVICECHECK:
  789: 				return;		
  790: 		#ifdef _CHINA_
  791: 			DisplayStr( 0, 0, 1, line1, 20 );
  792: 			DisplayStr( 0, 1, 1, line2,( j - 5 )*4 );		
  793: 		#else
  794: 			DisplayStr( 0, 0, 1, line1, 20 );
8054FE D21A              SETB    ?_DisplayStr?BIT
805500 7B00              MOV     R3,#?C?XDATASEG
805502 7A17              MOV     R2,#HIGH line1
805504 793E              MOV     R1,#LOW line1
805506 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805509 A5128007B6        ECALL   ?C?PSTXDATA
80550E 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805511 7414              MOV     A,#014H
805513 A51280805E        ECALL   ?L?COM0007
  795: 			DisplayStr( 0, 1, 1, line2,( j - 4 )*5 );		
805518 D21A              SETB    ?_DisplayStr?BIT
80551A 7B00              MOV     R3,#?C?XDATASEG
80551C 7A17              MOV     R2,#HIGH line2
80551E 7953              MOV     R1,#LOW line2
805520 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805523 A5128007B6        ECALL   ?C?PSTXDATA
805528 901769            MOV     DPTR,#j
80552B E0                MOVX    A,@DPTR
80552C 24FC              ADD     A,#0FCH
80552E 75F005            MOV     B,#05H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 158


805531 A4                MUL     AB
805532 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805535 F0                MOVX    @DPTR,A
805536 7D01              MOV     R5,#01H
805538 E4                CLR     A
805539 FF                MOV     R7,A
80553A A512808062        ECALL   _DisplayStr
  796: 		#endif			
  797: 			DisplayCursorState( 0, LineNum-1, 1, 2, 1 );
80553F 90176D            MOV     DPTR,#LineNum
805542 E0                MOVX    A,@DPTR
805543 14                DEC     A
805544 FD                MOV     R5,A
805545 D21A              SETB    ?_DisplayCursorState?BIT
805547 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80554A 7402              MOV     A,#02H
80554C F0                MOVX    @DPTR,A
80554D D21B              SETB    ?_DisplayCursorState?BIT+01H
80554F E4                CLR     A
805550 FF                MOV     R7,A
805551 A51280817F        ECALL   _DisplayCursorState
  798: 			DispFlag = 0;
805556 E4                CLR     A
805557 90176F            MOV     DPTR,#DispFlag
80555A F0                MOVX    @DPTR,A
  799: 		}
80555B         ?C0163?DEVICECHECK:
  800: 		key = GetKey();
80555B A512809275        ECALL   GetKey
805560 90176E            MOV     DPTR,#key
805563 EF                MOV     A,R7
805564 F0                MOVX    @DPTR,A
  801: 		switch( key )		
805565 24E5              ADD     A,#0E5H
805567 7003              JNZ     $ + 5H
805569 0255FD            LJMP    ?C0196?DEVICECHECK
80556C 24CB              ADD     A,#0CBH
80556E 6046              JZ      ?C0203?DEVICECHECK
805570 2408              ADD     A,#08H
805572 707A              JNZ     ?C0197?DEVICECHECK
  802: 		{
  803: 			case KEY_UP://上移  	
805574         ?C0198?DEVICECHECK:
  804: 			     if( LineNum == 2 )//选中标记上移
805574 90176D            MOV     DPTR,#LineNum
805577 E0                MOVX    A,@DPTR
805578 B4021A            CJNE    A,#02H,?C0199?DEVICECHECK
  805: 			     {			     
  806: 			     	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
80557B D21A              SETB    ?_DisplayCursorState?BIT
80557D 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
805580 7402              MOV     A,#02H
805582 F0                MOVX    @DPTR,A
805583 D21B              SETB    ?_DisplayCursorState?BIT+01H
805585 E4                CLR     A
805586 FD                MOV     R5,A
805587 FF                MOV     R7,A
805588 A51280817F        ECALL   _DisplayCursorState
  807: 			     	LineNum = 1;					
80558D 90176D            MOV     DPTR,#LineNum
805590 7401              MOV     A,#01H
805592 F0                MOVX    @DPTR,A
  808: 			     }
805593 8059              SJMP    ?C0197?DEVICECHECK
805595         ?C0199?DEVICECHECK:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 159


  809: 			     else//菜单上翻
  810: 			     {		
  811: 		 		 	if( Start <= 0 )
805595 90176B            MOV     DPTR,#Start
805598 E0                MOVX    A,@DPTR
805599 D3                SETB    C
80559A 9400              SUBB    A,#00H
80559C 4050              JC      ?C0197?DEVICECHECK
  812: 						break;				 	
80559E         ?C0201?DEVICECHECK:
  813: 					else
  814: 					{
  815: 					#ifdef _CHINA_
  816: 						Start = Start -5;					
  817: 						End = End - 5;	
  818: 					#else
  819: 						Start = Start -4;					
80559E 90176B            MOV     DPTR,#Start
8055A1 E0                MOVX    A,@DPTR
8055A2 24FC              ADD     A,#0FCH
8055A4 F0                MOVX    @DPTR,A
  820: 						End = End - 4;	
8055A5 A3                INC     DPTR
8055A6 E0                MOVX    A,@DPTR
8055A7 24FC              ADD     A,#0FCH
8055A9 F0                MOVX    @DPTR,A
  821: 					#endif					
  822: 						DispFlag = 1;						
8055AA 90176F            MOV     DPTR,#DispFlag
8055AD 7401              MOV     A,#01H
8055AF F0                MOVX    @DPTR,A
  823: 						LineNum = 1;						
8055B0 90176D            MOV     DPTR,#LineNum
8055B3 F0                MOVX    @DPTR,A
  824: 					}
  825: 			     }
  826: 				 break;
8055B4 8038              SJMP    ?C0197?DEVICECHECK
  827: 			case KEY_DOWN://下移				
8055B6         ?C0203?DEVICECHECK:
  828: 				if( LineNum == 1 )//选中标记下移
8055B6 90176D            MOV     DPTR,#LineNum
8055B9 E0                MOVX    A,@DPTR
8055BA B4010D            CJNE    A,#01H,?C0204?DEVICECHECK
  829: 				{				 
  830: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标					
8055BD A512808171        ECALL   ?L?COM000F
  831: 				     LineNum = 2;				     
8055C2 90176D            MOV     DPTR,#LineNum
8055C5 7402              MOV     A,#02H
8055C7 F0                MOVX    @DPTR,A
  832: 				 }
8055C8 8024              SJMP    ?C0197?DEVICECHECK
8055CA         ?C0204?DEVICECHECK:
  833: 				 else//菜单下翻
  834: 				 {	
  835: 			     	if( End >= SumColunm )
8055CA 901770            MOV     DPTR,#SumColunm
8055CD E0                MOVX    A,@DPTR
8055CE FF                MOV     R7,A
8055CF 90176C            MOV     DPTR,#End
8055D2 E0                MOVX    A,@DPTR
8055D3 C3                CLR     C
8055D4 9F                SUBB    A,R7
8055D5 5017              JNC     ?C0197?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 160


  836: 						break;
8055D7         ?C0206?DEVICECHECK:
  837: 					else
  838: 					{
  839: 					#ifdef _CHINA_
  840: 						Start = Start + 5;					
  841: 						End = End + 5;	
  842: 					#else
  843: 						Start = Start + 4;					
8055D7 90176B            MOV     DPTR,#Start
8055DA E0                MOVX    A,@DPTR
8055DB 2404              ADD     A,#04H
8055DD F0                MOVX    @DPTR,A
  844: 						End = End + 4;	
8055DE A3                INC     DPTR
8055DF E0                MOVX    A,@DPTR
8055E0 2404              ADD     A,#04H
8055E2 F0                MOVX    @DPTR,A
  845: 					#endif					
  846: 						DispFlag = 1;				
8055E3 90176F            MOV     DPTR,#DispFlag
8055E6 7401              MOV     A,#01H
8055E8 F0                MOVX    @DPTR,A
  847: 						LineNum = 2;					
8055E9 90176D            MOV     DPTR,#LineNum
8055EC 04                INC     A
8055ED F0                MOVX    @DPTR,A
  848: 					}
  849: 				}
  850: 				break;
  851: 			case KEY_CANCEL:
  852: 				return;
  853: 				break;					
  854: 		}
8055EE         ?C0197?DEVICECHECK:
  855: 		CoreProcessCycle();//让出时间片
8055EE A512807ADC        ECALL   CoreProcessCycle
  856: 		DelayMs( 10 );
8055F3 7F0A              MOV     R7,#0AH
8055F5 A512809789        ECALL   _DelayMs
  857: 	}		
8055FA 02521B            LJMP    ?C0161?DEVICECHECK
  858: 	/////////////////////
  859: }
8055FD         ?C0196?DEVICECHECK:
8055FD A522              ERET    
----- FUNCTION DispGoodsWaysStates (END) -------


----- FUNCTION _TestAndDispMobileStates (BEGIN) -----
 FILE: 'devicecheck.c'
  862: void TestAndDispMobileStates( u_char type, u_char DispLine )
  863: {	
8055FF 90173E            MOV     DPTR,#type
805602 EF                MOV     A,R7
805603 F0                MOVX    @DPTR,A
805604 A3                INC     DPTR
805605 ED                MOV     A,R5
805606 F0                MOVX    @DPTR,A
  864: 	u_char xdata line2[21];
  865: 	u_char xdata i = 0;	
805607 E4                CLR     A
805608 901755            MOV     DPTR,#i
80560B F0                MOVX    @DPTR,A
  866: 	u_char xdata len = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 161


80560C A3                INC     DPTR
80560D F0                MOVX    @DPTR,A
  867: 	struct SHORTMSG Msg;
  868: 	u_int	xdata CmdErrorCode = 0;	
80560E 901809            MOV     DPTR,#CmdErrorCode
805611 F0                MOVX    @DPTR,A
805612 A3                INC     DPTR
805613 F0                MOVX    @DPTR,A
  869: 
  870: 	memset( line2, 0, sizeof( line2 ) );
805614 FE                MOV     R6,A
805615 7F15              MOV     R7,#015H
805617 FD                MOV     R5,A
805618 7B00              MOV     R3,#?C?XDATASEG
80561A 7A17              MOV     R2,#HIGH line2
80561C 7940              MOV     R1,#LOW line2
80561E A5128008A6        ECALL   ?C?MEMSET
  871: 	if( SystemParameter.MobileON != 1 )
805623 900444            MOV     DPTR,#SystemParameter+026H
805626 E0                MOVX    A,@DPTR
805627 6401              XRL     A,#01H
805629 6056              JZ      ?C0209?DEVICECHECK
  872: 	{
  873: 	#ifdef _CHINA_
  874: 		len = sprintf( line2,  "    模块没有开启" );
  875: 	#else
  876: 		len = sprintf( line2,  "   Device is OFF" );
80562B 7B80              MOV     R3,#BYTE2 0800E33H
80562D 7A0E              MOV     R2,#HIGH 0800E33H
80562F 7933              MOV     R1,#LOW 0800E33H
805631 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
805634 A5128007B6        ECALL   ?C?PSTXDATA
805639 7B00              MOV     R3,#?C?XDATASEG
80563B 7A17              MOV     R2,#HIGH line2
80563D 7940              MOV     R1,#LOW line2
80563F A512800949        ECALL   _sprintf
805644 901756            MOV     DPTR,#len
805647 EF                MOV     A,R7
805648 F0                MOVX    @DPTR,A
  877: 	#endif
  878: 		DisplayStr( 0, DispLine - 1, 1, line2, len );
805649 90173F            MOV     DPTR,#DispLine
80564C E0                MOVX    A,@DPTR
80564D 14                DEC     A
80564E FD                MOV     R5,A
80564F D21A              SETB    ?_DisplayStr?BIT
805651 7B00              MOV     R3,#?C?XDATASEG
805653 7A17              MOV     R2,#HIGH line2
805655 7940              MOV     R1,#LOW line2
805657 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80565A A5128007B6        ECALL   ?C?PSTXDATA
80565F 901756            MOV     DPTR,#len
805662 E0                MOVX    A,@DPTR
805663 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805666 F0                MOVX    @DPTR,A
805667 E4                CLR     A
805668 FF                MOV     R7,A
805669 A512808062        ECALL   _DisplayStr
  879: 		WaitForWork( 1500, NULL );
80566E E4                CLR     A
80566F 7FDC              MOV     R7,#0DCH
805671 7E05              MOV     R6,#05H
805673 A512807B35        ECALL   ?L?COM000D
  880: 		DeviceStatus.MobileStates = 0x80;
805678 900B1E            MOV     DPTR,#DeviceStatus+08H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 162


80567B 7480              MOV     A,#080H
80567D F0                MOVX    @DPTR,A
80567E 02599F            LJMP    ?C0210?DEVICECHECK
  881: 		return;
  882: 	}
805681         ?C0209?DEVICECHECK:
  883: 	if( type == 1 )
805681 90173E            MOV     DPTR,#type
805684 E0                MOVX    A,@DPTR
805685 6401              XRL     A,#01H
805687 6003              JZ      $ + 5H
805689 02575D            LJMP    ?C0211?DEVICECHECK
  884: 	{		
  885: 		//测试AT指令
  886: 	#ifdef _CHINA_
  887: 		len = sprintf( line2,  "    请稍等..." );
  888: 	#else
  889: 		len = sprintf( line2,  "please wait..." );
80568C 7B80              MOV     R3,#BYTE2 0800D26H
80568E 7A0D              MOV     R2,#HIGH 0800D26H
805690 7926              MOV     R1,#LOW 0800D26H
805692 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
805695 A5128007B6        ECALL   ?C?PSTXDATA
80569A 7B00              MOV     R3,#?C?XDATASEG
80569C 7A17              MOV     R2,#HIGH line2
80569E 7940              MOV     R1,#LOW line2
8056A0 A512800949        ECALL   _sprintf
8056A5 901756            MOV     DPTR,#len
8056A8 EF                MOV     A,R7
8056A9 F0                MOVX    @DPTR,A
  890: 	#endif
  891: 		DisplayStr( 0, DispLine - 1, 1, line2, len );
8056AA 90173F            MOV     DPTR,#DispLine
8056AD E0                MOVX    A,@DPTR
8056AE 14                DEC     A
8056AF FD                MOV     R5,A
8056B0 D21A              SETB    ?_DisplayStr?BIT
8056B2 7B00              MOV     R3,#?C?XDATASEG
8056B4 7A17              MOV     R2,#HIGH line2
8056B6 7940              MOV     R1,#LOW line2
8056B8 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8056BB A5128007B6        ECALL   ?C?PSTXDATA
8056C0 901756            MOV     DPTR,#len
8056C3 E0                MOVX    A,@DPTR
8056C4 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8056C7 F0                MOVX    @DPTR,A
8056C8 E4                CLR     A
8056C9 FF                MOV     R7,A
8056CA A512808062        ECALL   _DisplayStr
  892: 		WaitForWork( 500, NULL );
8056CF E4                CLR     A
8056D0 7FF4              MOV     R7,#0F4H
8056D2 7E01              MOV     R6,#01H
8056D4 A512807B35        ECALL   ?L?COM000D
  893: 		i = TestATcommand();
8056D9 A51281266B        ECALL   TestATcommand
8056DE 901755            MOV     DPTR,#i
8056E1 EF                MOV     A,R7
8056E2 F0                MOVX    @DPTR,A
  894: 		if( i == 3 )
8056E3 BF0308            CJNE    R7,#03H,?C0212?DEVICECHECK
  895: 		{
  896: 			//手机模块忙
  897: 		#ifdef _CHINA_
  898: 			len = sprintf( line2,  "模块\xd5\xfd忙，稍后再试" );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 163


  899: 		#else
  900: 			len = sprintf( line2,  "Device is busy" );
8056E6 7B80              MOV     R3,#BYTE2 0800E44H
8056E8 7A0E              MOV     R2,#HIGH 0800E44H
8056EA 7944              MOV     R1,#LOW 0800E44H
  901: 		#endif
  902: 		}
8056EC 800A              SJMP    ?C0309?DEVICECHECK
8056EE         ?C0212?DEVICECHECK:
  903: 		else if( i == 1 )		
8056EE 901755            MOV     DPTR,#i
8056F1 E0                MOVX    A,@DPTR
  904: 		{
  905: 		#ifdef _CHINA_
  906: 			len = sprintf( line2,  "模块测试失败" );
  907: 		#else
  908: 			len = sprintf( line2,  "Device test fail" );
  909: 		#endif		
  910: 		}
  911: 		else		
  912: 		{
  913: 		#ifdef _CHINA_
  914: 			len = sprintf( line2,  "模块\xd5\xfd常" );
  915: 		#else
  916: 			len = sprintf( line2,  "Device test fail" );
8056F2 7B80              MOV     R3,#BYTE2 0800E53H
8056F4 7A0E              MOV     R2,#HIGH 0800E53H
8056F6 7953              MOV     R1,#LOW 0800E53H
8056F8         
8056F8 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8056FB A5128007B6        ECALL   ?C?PSTXDATA
805700 7B00              MOV     R3,#?C?XDATASEG
805702 7A17              MOV     R2,#HIGH line2
805704 7940              MOV     R1,#LOW line2
805706 A512800949        ECALL   _sprintf
80570B 901756            MOV     DPTR,#len
80570E EF                MOV     A,R7
80570F F0                MOVX    @DPTR,A
  917: 		#endif
  918: 		}
805710         ?C0213?DEVICECHECK:
  919: 		DisplayStr( 0, DispLine - 1, 1, line2, len );
805710 90173F            MOV     DPTR,#DispLine
805713 E0                MOVX    A,@DPTR
805714 14                DEC     A
805715 FD                MOV     R5,A
805716 D21A              SETB    ?_DisplayStr?BIT
805718 7B00              MOV     R3,#?C?XDATASEG
80571A 7A17              MOV     R2,#HIGH line2
80571C 7940              MOV     R1,#LOW line2
80571E 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805721 A5128007B6        ECALL   ?C?PSTXDATA
805726 901756            MOV     DPTR,#len
805729 E0                MOVX    A,@DPTR
80572A 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80572D F0                MOVX    @DPTR,A
80572E E4                CLR     A
80572F FF                MOV     R7,A
805730 A512808062        ECALL   _DisplayStr
  920: 		WaitForWork( 1500, NULL );	
805735 E4                CLR     A
805736 7FDC              MOV     R7,#0DCH
805738 7E05              MOV     R6,#05H
80573A A512807B35        ECALL   ?L?COM000D
  921: 		DisplayStr( 0, DispLine - 1, 1, WMenuStr[5].str, WMenuStr[5].len );			
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 164


80573F 90173F            MOV     DPTR,#DispLine
805742 E0                MOVX    A,@DPTR
805743 14                DEC     A
805744 FD                MOV     R5,A
805745 D21A              SETB    ?_DisplayStr?BIT
805747 900EE1            MOV     DPTR,#WMenuStr+014H
80574A A5128007C0        ECALL   ?C?PLDCODE
80574F 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805752 A5128007B6        ECALL   ?C?PSTXDATA
805757 900EE4            MOV     DPTR,#WMenuStr+017H
  922: 	}
80575A 025992            LJMP    ?C0310?DEVICECHECK
80575D         ?C0211?DEVICECHECK:
  923: 	else
  924: 	{
  925: 		//发送短信测试
  926: 		if( SMSCommStatus() )
80575D A51280AE9F        ECALL   SMSCommStatus
805762 4003              JC      $ + 5H
805764 025925            LJMP    ?C0217?DEVICECHECK
  927: 		{
  928: 		#ifdef _CHINA_
  929: 			len = sprintf( line2,  "    请稍等..." );
  930: 		#else
  931: 			len = sprintf( line2,  "please wait..." );
805767 7B80              MOV     R3,#BYTE2 0800D26H
805769 7A0D              MOV     R2,#HIGH 0800D26H
80576B 7926              MOV     R1,#LOW 0800D26H
80576D 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
805770 A5128007B6        ECALL   ?C?PSTXDATA
805775 7B00              MOV     R3,#?C?XDATASEG
805777 7A17              MOV     R2,#HIGH line2
805779 7940              MOV     R1,#LOW line2
80577B A512800949        ECALL   _sprintf
805780 901756            MOV     DPTR,#len
805783 EF                MOV     A,R7
805784 F0                MOVX    @DPTR,A
  932: 		#endif
  933: 			DisplayStr( 0, DispLine - 1, 1, line2, len );
805785 90173F            MOV     DPTR,#DispLine
805788 E0                MOVX    A,@DPTR
805789 14                DEC     A
80578A FD                MOV     R5,A
80578B D21A              SETB    ?_DisplayStr?BIT
80578D 7B00              MOV     R3,#?C?XDATASEG
80578F 7A17              MOV     R2,#HIGH line2
805791 7940              MOV     R1,#LOW line2
805793 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805796 A5128007B6        ECALL   ?C?PSTXDATA
80579B 901756            MOV     DPTR,#len
80579E E0                MOVX    A,@DPTR
80579F 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8057A2 F0                MOVX    @DPTR,A
8057A3 E4                CLR     A
8057A4 FF                MOV     R7,A
8057A5 A512808062        ECALL   _DisplayStr
  934: 			WaitForWork( 500, NULL );
8057AA E4                CLR     A
8057AB 7FF4              MOV     R7,#0F4H
8057AD 7E01              MOV     R6,#01H
8057AF A512807B35        ECALL   ?L?COM000D
  935: 			Trace("\n SendSMS" );				
  936: 		 	memset( Msg.msg, 0, sizeof( Msg.msg ) );
8057B4 7E00              MOV     R6,#00H
8057B6 7FA0              MOV     R7,#0A0H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 165


8057B8 7D00              MOV     R5,#00H
8057BA 7B00              MOV     R3,#?C?XDATASEG
8057BC 7A17              MOV     R2,#HIGH Msg+012H
8057BE 7969              MOV     R1,#LOW Msg+012H
8057C0 A5128008A6        ECALL   ?C?MEMSET
  937: 			sprintf( Msg.msg, "VMMSG%bx%bx%bx%bx%bx", 
8057C5 7B80              MOV     R3,#BYTE2 0800E64H
8057C7 7A0E              MOV     R2,#HIGH 0800E64H
8057C9 7964              MOV     R1,#LOW 0800E64H
8057CB 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8057CE A5128007B6        ECALL   ?C?PSTXDATA
8057D3 90042F            MOV     DPTR,#SystemParameter+011H
8057D6 E0                MOVX    A,@DPTR
8057D7 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8057DA F0                MOVX    @DPTR,A
8057DB 900430            MOV     DPTR,#SystemParameter+012H
8057DE E0                MOVX    A,@DPTR
8057DF 901B84            MOV     DPTR,#?_sprintf?BYTE+07H
8057E2 F0                MOVX    @DPTR,A
8057E3 900431            MOV     DPTR,#SystemParameter+013H
8057E6 E0                MOVX    A,@DPTR
8057E7 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
8057EA F0                MOVX    @DPTR,A
8057EB 900432            MOV     DPTR,#SystemParameter+014H
8057EE E0                MOVX    A,@DPTR
8057EF 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
8057F2 F0                MOVX    @DPTR,A
8057F3 900433            MOV     DPTR,#SystemParameter+015H
8057F6 E0                MOVX    A,@DPTR
8057F7 901B87            MOV     DPTR,#?_sprintf?BYTE+0AH
8057FA F0                MOVX    @DPTR,A
8057FB 900434            MOV     DPTR,#SystemParameter+016H
8057FE E0                MOVX    A,@DPTR
8057FF 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
805802 F0                MOVX    @DPTR,A
805803 7B00              MOV     R3,#?C?XDATASEG
805805 7A17              MOV     R2,#HIGH Msg+012H
805807 7969              MOV     R1,#LOW Msg+012H
805809 A512800949        ECALL   _sprintf
  938: 			SystemParameter.VmID[0],SystemParameter.VmID[1],SystemParameter.VmID[2],
  939: 			SystemParameter.VmID[3],SystemParameter.VmID[4],SystemParameter.VmID[5]);
  940: 			Msg.len = 10;
80580E 901767            MOV     DPTR,#Msg+010H
805811 E4                CLR     A
805812 F0                MOVX    @DPTR,A
805813 A3                INC     DPTR
805814 740A              MOV     A,#0AH
805816 F0                MOVX    @DPTR,A
  941: 			memcpy( Msg.phone, SystemParameter.GSMNO, sizeof(Msg.phone) );
805817 7857              MOV     R0,#LOW Msg
805819 7C17              MOV     R4,#HIGH Msg
80581B 7D00              MOV     R5,#?C?XDATASEG
80581D 7B00              MOV     R3,#?C?XDATASEG
80581F 7A04              MOV     R2,#HIGH SystemParameter+016H
805821 7934              MOV     R1,#LOW SystemParameter+016H
805823 7E00              MOV     R6,#00H
805825 7F10              MOV     R7,#010H
805827 A51280052D        ECALL   ?C?COPY
  942: 			if( TestSMSSend( &Msg) == 1 )
80582C 7B00              MOV     R3,#?C?XDATASEG
80582E 7A17              MOV     R2,#HIGH Msg
805830 7957              MOV     R1,#LOW Msg
805832 A512813BEB        ECALL   _TestSMSSend
805837 EF                MOV     A,R7
805838 6401              XRL     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 166


80583A 7009              JNZ     ?C0218?DEVICECHECK
  943: 			{
  944: 			#ifdef _CHINA_
  945: 				len = sprintf( line2,  "模块\xd5\xfd忙，稍后再试" );
  946: 			#else
  947: 				len = sprintf( line2,  "Busying,try again!" );
80583C 7B80              MOV     R3,#BYTE2 0800E79H
80583E 7A0E              MOV     R2,#HIGH 0800E79H
805840 7979              MOV     R1,#LOW 0800E79H
  948: 			#endif			
  949: 				DeviceStatus.MobileStates = 0;
  950: 				DisplayStr( 0, DispLine - 1, 1, line2, len );
  951: 				WaitForWork( 1500, NULL );				
  952: 			}
805842 02592B            LJMP    ?C0311?DEVICECHECK
805845         ?C0218?DEVICECHECK:
  953: 			else
  954: 			{							
  955: 				i = 0;
805845 E4                CLR     A
805846 901755            MOV     DPTR,#i
805849 F0                MOVX    @DPTR,A
  956: 				Trace("\n Begin wait Result");				
  957: 				WaitForWork( 500, NULL );
80584A 7FF4              MOV     R7,#0F4H
80584C 7E01              MOV     R6,#01H
80584E A512807B35        ECALL   ?L?COM000D
805853         ?C0220?DEVICECHECK:
  958: 				while( ( i = GetTestSMSSendResult()) != 0  )
805853 A512813C17        ECALL   GetTestSMSSendResult
805858 901755            MOV     DPTR,#i
80585B EF                MOV     A,R7
80585C F0                MOVX    @DPTR,A
80585D 6011              JZ      ?C0221?DEVICECHECK
  959: 				{			
  960: 					WaitForWork( 50, NULL );
80585F E4                CLR     A
805860 7F32              MOV     R7,#032H
805862 FE                MOV     R6,A
805863 A512807B35        ECALL   ?L?COM000D
  961: 					if( i == 2 )
805868 901755            MOV     DPTR,#i
80586B E0                MOVX    A,@DPTR
80586C 6402              XRL     A,#02H
80586E 60E3              JZ      ?C0220?DEVICECHECK
  962: 						continue;
  963: 					else				
  964: 						break;				    
  965: 				}
805870         ?C0221?DEVICECHECK:
  966: 				Trace( "\n Result i = %bu", i );	
  967: 				if( i == 0 )
805870 901755            MOV     DPTR,#i
805873 E0                MOVX    A,@DPTR
805874 7026              JNZ     ?C0224?DEVICECHECK
  968: 				{
  969: 				#ifdef _CHINA_
  970: 					len = sprintf( line2,  "测试短信发送成功" );
  971: 				#else
  972: 					len = sprintf( line2,  "SMS Send OK!" );
805876 7B80              MOV     R3,#BYTE2 0800E8CH
805878 7A0E              MOV     R2,#HIGH 0800E8CH
80587A 798C              MOV     R1,#LOW 0800E8CH
80587C 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80587F A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 167


805884 7B00              MOV     R3,#?C?XDATASEG
805886 7A17              MOV     R2,#HIGH line2
805888 7940              MOV     R1,#LOW line2
80588A A512800949        ECALL   _sprintf
80588F 901756            MOV     DPTR,#len
805892 EF                MOV     A,R7
805893 F0                MOVX    @DPTR,A
  973: 				#endif	
  974: 					DeviceStatus.MobileStates = 0;			
805894 E4                CLR     A
805895 900B1E            MOV     DPTR,#DeviceStatus+08H
805898 F0                MOVX    @DPTR,A
  975: 				}
805899 025948            LJMP    ?C0312?DEVICECHECK
80589C         ?C0224?DEVICECHECK:
  976: 				else
  977: 				{
  978: 					CmdErrorCode = GetATCMDResult();
80589C A512813C3A        ECALL   GetATCMDResult
8058A1 901809            MOV     DPTR,#CmdErrorCode
8058A4 EE                MOV     A,R6
8058A5 F0                MOVX    @DPTR,A
8058A6 A3                INC     DPTR
8058A7 EF                MOV     A,R7
8058A8 F0                MOVX    @DPTR,A
  979: 				#ifdef _CHINA_
  980: 					len = sprintf( line2,  "测试短信发送失败" );
  981: 				#else
  982: 					len = sprintf( line2,  "SMS Send Fail!" );
8058A9 7B80              MOV     R3,#BYTE2 0800E99H
8058AB 7A0E              MOV     R2,#HIGH 0800E99H
8058AD 7999              MOV     R1,#LOW 0800E99H
8058AF 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8058B2 A5128007B6        ECALL   ?C?PSTXDATA
8058B7 7B00              MOV     R3,#?C?XDATASEG
8058B9 7A17              MOV     R2,#HIGH line2
8058BB 7940              MOV     R1,#LOW line2
8058BD A512800949        ECALL   _sprintf
8058C2 901756            MOV     DPTR,#len
8058C5 EF                MOV     A,R7
8058C6 F0                MOVX    @DPTR,A
  983: 				#endif			
  984: 					DisplayStr( 0, DispLine - 1, 1, line2, len );
8058C7 90173F            MOV     DPTR,#DispLine
8058CA E0                MOVX    A,@DPTR
8058CB 14                DEC     A
8058CC FD                MOV     R5,A
8058CD D21A              SETB    ?_DisplayStr?BIT
8058CF 7B00              MOV     R3,#?C?XDATASEG
8058D1 7A17              MOV     R2,#HIGH line2
8058D3 7940              MOV     R1,#LOW line2
8058D5 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8058D8 A5128007B6        ECALL   ?C?PSTXDATA
8058DD 901756            MOV     DPTR,#len
8058E0 E0                MOVX    A,@DPTR
8058E1 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8058E4 F0                MOVX    @DPTR,A
8058E5 E4                CLR     A
8058E6 FF                MOV     R7,A
8058E7 A512808062        ECALL   _DisplayStr
  985: 					WaitForWork( 1500, NULL );
8058EC E4                CLR     A
8058ED 7FDC              MOV     R7,#0DCH
8058EF 7E05              MOV     R6,#05H
8058F1 A512807B35        ECALL   ?L?COM000D
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 168


  986: 				#ifdef _CHINA_
  987: 					len = sprintf( line2,  "故障代码 = %u",CmdErrorCode );
  988: 				#else
  989: 					len = sprintf( line2,  "ERROR code = %u", CmdErrorCode );
8058F6 7B80              MOV     R3,#BYTE2 0800EA8H
8058F8 7A0E              MOV     R2,#HIGH 0800EA8H
8058FA 79A8              MOV     R1,#LOW 0800EA8H
8058FC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8058FF A5128007B6        ECALL   ?C?PSTXDATA
805904 901809            MOV     DPTR,#CmdErrorCode
805907 E0                MOVX    A,@DPTR
805908 FF                MOV     R7,A
805909 A3                INC     DPTR
80590A E0                MOVX    A,@DPTR
80590B 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80590E CF                XCH     A,R7
80590F F0                MOVX    @DPTR,A
805910 A3                INC     DPTR
805911 EF                MOV     A,R7
805912 F0                MOVX    @DPTR,A
805913 7B00              MOV     R3,#?C?XDATASEG
805915 7A17              MOV     R2,#HIGH line2
805917 7940              MOV     R1,#LOW line2
805919 A512800949        ECALL   _sprintf
80591E 901756            MOV     DPTR,#len
805921 EF                MOV     A,R7
805922 F0                MOVX    @DPTR,A
  990: 				#endif						
  991: 				}		
805923         ?C0225?DEVICECHECK:
  992: 				DisplayStr( 0, DispLine - 1, 1, line2, len );
  993: 				WaitForWork( 1500, NULL );		
  994: 			}
  995: 		}
805923 8023              SJMP    ?C0312?DEVICECHECK
805925         ?C0217?DEVICECHECK:
  996: 		else
  997: 		{
  998: 		#ifdef _CHINA_
  999: 			len = sprintf( line2,  "\xd5\xfd在初始化，稍后再试" );
 1000: 		#else
 1001: 			len = sprintf( line2,  "Device initializing!" );
805925 7B80              MOV     R3,#BYTE2 0800EB8H
805927 7A0E              MOV     R2,#HIGH 0800EB8H
805929 79B8              MOV     R1,#LOW 0800EB8H
80592B         
80592B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80592E A5128007B6        ECALL   ?C?PSTXDATA
805933 7B00              MOV     R3,#?C?XDATASEG
805935 7A17              MOV     R2,#HIGH line2
805937 7940              MOV     R1,#LOW line2
805939 A512800949        ECALL   _sprintf
80593E 901756            MOV     DPTR,#len
805941 EF                MOV     A,R7
805942 F0                MOVX    @DPTR,A
 1002: 		#endif			
 1003: 			DeviceStatus.MobileStates = 0;
805943 E4                CLR     A
805944 900B1E            MOV     DPTR,#DeviceStatus+08H
805947 F0                MOVX    @DPTR,A
 1004: 			DisplayStr( 0, DispLine - 1, 1, line2, len );
805948         
805948 90173F            MOV     DPTR,#DispLine
80594B E0                MOVX    A,@DPTR
80594C 14                DEC     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 169


80594D FD                MOV     R5,A
80594E D21A              SETB    ?_DisplayStr?BIT
805950 7B00              MOV     R3,#?C?XDATASEG
805952 7A17              MOV     R2,#HIGH line2
805954 7940              MOV     R1,#LOW line2
805956 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805959 A5128007B6        ECALL   ?C?PSTXDATA
80595E 901756            MOV     DPTR,#len
805961 E0                MOVX    A,@DPTR
805962 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805965 F0                MOVX    @DPTR,A
805966 E4                CLR     A
805967 FF                MOV     R7,A
805968 A512808062        ECALL   _DisplayStr
 1005: 			WaitForWork( 1500, NULL );			
80596D E4                CLR     A
80596E 7FDC              MOV     R7,#0DCH
805970 7E05              MOV     R6,#05H
805972 A512807B35        ECALL   ?L?COM000D
 1006: 		}
805977         ?C0226?DEVICECHECK:
 1007: 		DisplayStr( 0, DispLine - 1, 1, WMenuStr[6].str, WMenuStr[6].len );	
805977 90173F            MOV     DPTR,#DispLine
80597A E0                MOVX    A,@DPTR
80597B 14                DEC     A
80597C FD                MOV     R5,A
80597D D21A              SETB    ?_DisplayStr?BIT
80597F 900EE5            MOV     DPTR,#WMenuStr+018H
805982 A5128007C0        ECALL   ?C?PLDCODE
805987 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80598A A5128007B6        ECALL   ?C?PSTXDATA
80598F 900EE8            MOV     DPTR,#WMenuStr+01BH
805992         
805992 E4                CLR     A
805993 93                MOVC    A,@A+DPTR
805994 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805997 F0                MOVX    @DPTR,A
805998 E4                CLR     A
805999 FF                MOV     R7,A
80599A A512808062        ECALL   _DisplayStr
 1008: 	}	
 1009: }
80599F         ?C0210?DEVICECHECK:
80599F A522              ERET    
----- FUNCTION _TestAndDispMobileStates (END) -------


----- FUNCTION ?L?COM0029 (BEGIN) -----
8059A1 90172F            MOV     DPTR,#MenuNum
8059A4 E0                MOVX    A,@DPTR
8059A5 FD                MOV     R5,A
8059A6 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
8059A8 7F01              MOV     R7,#01H
----- FUNCTION _DisplayGoodsMenuAndVal (BEGIN) -----
 FILE: 'GoodsWaySet.c'
  167: void  DisplayGoodsMenuAndVal( u_char line, u_char Num, bit flag )
  168: {
8059AA 901733            MOV     DPTR,#line
8059AD EF                MOV     A,R7
8059AE F0                MOVX    @DPTR,A
8059AF A3                INC     DPTR
8059B0 ED                MOV     A,R5
8059B1 F0                MOVX    @DPTR,A
  169: 	u_char  xdata y_displaystr[22];	
  170: 	u_char   xdata  len ;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 170


  171: 
  172: 	len = 0;	
8059B2 E4                CLR     A
8059B3 90174B            MOV     DPTR,#len
8059B6 F0                MOVX    @DPTR,A
  173: 	memset( y_displaystr,0,sizeof( y_displaystr ) );
8059B7 FE                MOV     R6,A
8059B8 7F16              MOV     R7,#016H
8059BA FD                MOV     R5,A
8059BB 7B00              MOV     R3,#?C?XDATASEG
8059BD 7A17              MOV     R2,#HIGH y_displaystr
8059BF 7935              MOV     R1,#LOW y_displaystr
8059C1 A5128008A6        ECALL   ?C?MEMSET
  174: 	if( Num != 3 )
8059C6 901734            MOV     DPTR,#Num
8059C9 E0                MOVX    A,@DPTR
8059CA 6403              XRL     A,#03H
8059CC 607A              JZ      ?C0051?GOODSWAYSET
  175: 	{				
  176: 		{
  177: 		 	memcpy( y_displaystr, GoodsWaystr[Num].str, GoodsWaystr[Num].len );
8059CE E0                MOVX    A,@DPTR
8059CF FF                MOV     R7,A
8059D0 25E0              ADD     A,ACC
8059D2 25E0              ADD     A,ACC
8059D4 2458              ADD     A,#LOW GoodsWaystr+03H
8059D6 F582              MOV     DPL,A
8059D8 E4                CLR     A
8059D9 3417              ADDC    A,#HIGH GoodsWaystr+03H
8059DB F583              MOV     DPH,A
8059DD E4                CLR     A
8059DE 93                MOVC    A,@A+DPTR
8059DF FD                MOV     R5,A
8059E0 7C00              MOV     R4,#00H
8059E2 C004              PUSH    AR4
8059E4 C005              PUSH    AR5
8059E6 EF                MOV     A,R7
8059E7 25E0              ADD     A,ACC
8059E9 25E0              ADD     A,ACC
8059EB 2455              ADD     A,#LOW GoodsWaystr
8059ED F582              MOV     DPL,A
8059EF E4                CLR     A
8059F0 3417              ADDC    A,#HIGH GoodsWaystr
8059F2 F583              MOV     DPH,A
8059F4 A5128007C0        ECALL   ?C?PLDCODE
8059F9 7835              MOV     R0,#LOW y_displaystr
8059FB 7C17              MOV     R4,#HIGH y_displaystr
8059FD 7D00              MOV     R5,#?C?XDATASEG
8059FF D007              POP     AR7
805A01 D006              POP     AR6
805A03 A51280052D        ECALL   ?C?COPY
  178: 		}
  179: 		if( flag == 1 )
805A08 301905            JNB     flag,?C0052?GOODSWAYSET
  180: 		{		
  181: 			ReadWriteGoodsParam( Num, y_displaystr + GoodsWaystr[Num].len  , 0, &len, 0 );//得到菜单对应的值						
805A0B A51280D18E        ECALL   ?L?COM0016
  182: 		}			
805A10         ?C0052?GOODSWAYSET:
  183: 		DisplayStr( 0, line, 1, y_displaystr, GoodsWaystr[Num].len + len  );//显示菜单		
805A10 901733            MOV     DPTR,#line
805A13 E0                MOVX    A,@DPTR
805A14 FD                MOV     R5,A
805A15 D21A              SETB    ?_DisplayStr?BIT
805A17 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 171


805A19 7A17              MOV     R2,#HIGH y_displaystr
805A1B 7935              MOV     R1,#LOW y_displaystr
805A1D 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805A20 A5128007B6        ECALL   ?C?PSTXDATA
805A25 901734            MOV     DPTR,#Num
805A28 E0                MOVX    A,@DPTR
805A29 25E0              ADD     A,ACC
805A2B 25E0              ADD     A,ACC
805A2D 2458              ADD     A,#LOW GoodsWaystr+03H
805A2F F582              MOV     DPL,A
805A31 E4                CLR     A
805A32 3417              ADDC    A,#HIGH GoodsWaystr+03H
805A34 F583              MOV     DPH,A
805A36 E4                CLR     A
805A37 93                MOVC    A,@A+DPTR
805A38 FF                MOV     R7,A
805A39 90174B            MOV     DPTR,#len
805A3C E0                MOVX    A,@DPTR
805A3D FE                MOV     R6,A
805A3E EF                MOV     A,R7
805A3F 2E                ADD     A,R6
805A40 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805A43 F0                MOVX    @DPTR,A
805A44 E4                CLR     A
  184: 	}
805A45 025AFB            LJMP    ?C0105?GOODSWAYSET
805A48         ?C0051?GOODSWAYSET:
  185: 	else
  186: 	{		
  187: 		//Trace( "\n GPRS MenuStr" );
  188: 		if( flag == 0 )//编辑此项菜单
805A48 201939            JB      flag,?C0054?GOODSWAYSET
  189: 		{	
  190: 			DisplayStr( 0, 0, 1, GoodsWaystr[Num].str, GoodsWaystr[Num].len );//显示菜单			
805A4B D21A              SETB    ?_DisplayStr?BIT
805A4D 901734            MOV     DPTR,#Num
805A50 E0                MOVX    A,@DPTR
805A51 FF                MOV     R7,A
805A52 25E0              ADD     A,ACC
805A54 25E0              ADD     A,ACC
805A56 2455              ADD     A,#LOW GoodsWaystr
805A58 F582              MOV     DPL,A
805A5A E4                CLR     A
805A5B 3417              ADDC    A,#HIGH GoodsWaystr
805A5D F583              MOV     DPH,A
805A5F A5128007C0        ECALL   ?C?PLDCODE
805A64 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805A67 A5128007B6        ECALL   ?C?PSTXDATA
805A6C EF                MOV     A,R7
805A6D 25E0              ADD     A,ACC
805A6F 25E0              ADD     A,ACC
805A71 2458              ADD     A,#LOW GoodsWaystr+03H
805A73 F582              MOV     DPL,A
805A75 E4                CLR     A
805A76 3417              ADDC    A,#HIGH GoodsWaystr+03H
805A78 F583              MOV     DPH,A
805A7A E4                CLR     A
805A7B 93                MOVC    A,@A+DPTR
805A7C 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805A7F F0                MOVX    @DPTR,A
805A80 E4                CLR     A
805A81 FD                MOV     R5,A
  191: 		}
805A82 8077              SJMP    ?C0104?GOODSWAYSET
805A84         ?C0054?GOODSWAYSET:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 172


  192: 		else//显示此项菜单
  193: 		{
  194: 			memcpy( y_displaystr, GoodsWaystr[Num].str, GoodsWaystr[Num].len );//菜单串转化为unicode串				
805A84 901734            MOV     DPTR,#Num
805A87 E0                MOVX    A,@DPTR
805A88 FF                MOV     R7,A
805A89 25E0              ADD     A,ACC
805A8B 25E0              ADD     A,ACC
805A8D 2458              ADD     A,#LOW GoodsWaystr+03H
805A8F F582              MOV     DPL,A
805A91 E4                CLR     A
805A92 3417              ADDC    A,#HIGH GoodsWaystr+03H
805A94 F583              MOV     DPH,A
805A96 E4                CLR     A
805A97 93                MOVC    A,@A+DPTR
805A98 FD                MOV     R5,A
805A99 7C00              MOV     R4,#00H
805A9B C004              PUSH    AR4
805A9D C005              PUSH    AR5
805A9F EF                MOV     A,R7
805AA0 25E0              ADD     A,ACC
805AA2 25E0              ADD     A,ACC
805AA4 2455              ADD     A,#LOW GoodsWaystr
805AA6 F582              MOV     DPL,A
805AA8 E4                CLR     A
805AA9 3417              ADDC    A,#HIGH GoodsWaystr
805AAB F583              MOV     DPH,A
805AAD A5128007C0        ECALL   ?C?PLDCODE
805AB2 7835              MOV     R0,#LOW y_displaystr
805AB4 7C17              MOV     R4,#HIGH y_displaystr
805AB6 7D00              MOV     R5,#?C?XDATASEG
805AB8 D007              POP     AR7
805ABA D006              POP     AR6
805ABC A51280052D        ECALL   ?C?COPY
  195: 			ReadWriteGoodsParam( Num, y_displaystr + GoodsWaystr[Num].len, 0, &len, 0 );//得到菜单对应的值				
805AC1 A51280D18E        ECALL   ?L?COM0016
  196: 			DisplayStr( 0, line, 1,  y_displaystr, GoodsWaystr[Num].len + len );//显示菜单						
805AC6 901733            MOV     DPTR,#line
805AC9 E0                MOVX    A,@DPTR
805ACA FD                MOV     R5,A
805ACB D21A              SETB    ?_DisplayStr?BIT
805ACD 7B00              MOV     R3,#?C?XDATASEG
805ACF 7A17              MOV     R2,#HIGH y_displaystr
805AD1 7935              MOV     R1,#LOW y_displaystr
805AD3 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805AD6 A5128007B6        ECALL   ?C?PSTXDATA
805ADB 901734            MOV     DPTR,#Num
805ADE E0                MOVX    A,@DPTR
805ADF 25E0              ADD     A,ACC
805AE1 25E0              ADD     A,ACC
805AE3 2458              ADD     A,#LOW GoodsWaystr+03H
805AE5 F582              MOV     DPL,A
805AE7 E4                CLR     A
805AE8 3417              ADDC    A,#HIGH GoodsWaystr+03H
805AEA F583              MOV     DPH,A
805AEC E4                CLR     A
805AED 93                MOVC    A,@A+DPTR
805AEE FF                MOV     R7,A
805AEF 90174B            MOV     DPTR,#len
805AF2 E0                MOVX    A,@DPTR
805AF3 FE                MOV     R6,A
805AF4 EF                MOV     A,R7
805AF5 2E                ADD     A,R6
805AF6 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805AF9 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 173


805AFA E4                CLR     A
805AFB         
805AFB         
805AFB FF                MOV     R7,A
805AFC A512808062        ECALL   _DisplayStr
  197: 		}
  198: 	}
  199: //	Trace( "\n edit SysParamMenu Num= %bd", Num );
  200: 	//Trace( "display one SysParanMenu and val end\n" );
  201: }	
805B01         ?C0056?GOODSWAYSET:
805B01 A522              ERET    
----- FUNCTION _DisplayGoodsMenuAndVal (END) -------


----- FUNCTION _EditGoodsParam (BEGIN) -----
 FILE: 'GoodsWaySet.c'
  205: bit  EditGoodsParam( u_char Num, u_char line )
  206: {
805B03 90172A            MOV     DPTR,#Num
805B06 EF                MOV     A,R7
805B07 F0                MOVX    @DPTR,A
805B08 A3                INC     DPTR
805B09 ED                MOV     A,R5
805B0A F0                MOVX    @DPTR,A
  207: 	u_char  xdata Inputstr[10];
  208: 	u_char  xdata  key;
  209: 	u_char  xdata  Inputlen;
  210: 	
  211: 	key = 0;	
805B0B E4                CLR     A
805B0C 901736            MOV     DPTR,#key
805B0F F0                MOVX    @DPTR,A
  212: 	Inputlen = 5;
805B10 A3                INC     DPTR
805B11 7405              MOV     A,#05H
805B13 F0                MOVX    @DPTR,A
  213: 	memset( Inputstr, 0, sizeof( Inputstr ) );
805B14 7E00              MOV     R6,#00H
805B16 7F0A              MOV     R7,#0AH
805B18 7D00              MOV     R5,#00H
805B1A 7B00              MOV     R3,#?C?XDATASEG
805B1C 7A17              MOV     R2,#HIGH Inputstr
805B1E 792C              MOV     R1,#LOW Inputstr
805B20 A5128008A6        ECALL   ?C?MEMSET
  214: 	if( Num == 1 )
805B25 90172A            MOV     DPTR,#Num
805B28 E0                MOVX    A,@DPTR
805B29 FF                MOV     R7,A
805B2A 6401              XRL     A,#01H
805B2C 7057              JNZ     ?C0057?GOODSWAYSET
  215: 		key = GetLineMoney( GoodsWaystr[Num].str, GoodsWaystr[Num].len, line, Inputstr, &Inputlen );
805B2E EF                MOV     A,R7
805B2F 25E0              ADD     A,ACC
805B31 25E0              ADD     A,ACC
805B33 2455              ADD     A,#LOW GoodsWaystr
805B35 F582              MOV     DPL,A
805B37 E4                CLR     A
805B38 3417              ADDC    A,#HIGH GoodsWaystr
805B3A F583              MOV     DPH,A
805B3C A5128007C0        ECALL   ?C?PLDCODE
805B41 C003              PUSH    AR3
805B43 C002              PUSH    AR2
805B45 C001              PUSH    AR1
805B47 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 174


805B48 25E0              ADD     A,ACC
805B4A 25E0              ADD     A,ACC
805B4C 2458              ADD     A,#LOW GoodsWaystr+03H
805B4E F582              MOV     DPL,A
805B50 E4                CLR     A
805B51 3417              ADDC    A,#HIGH GoodsWaystr+03H
805B53 F583              MOV     DPH,A
805B55 E4                CLR     A
805B56 93                MOVC    A,@A+DPTR
805B57 FD                MOV     R5,A
805B58 90172B            MOV     DPTR,#line
805B5B E0                MOVX    A,@DPTR
805B5C 901750            MOV     DPTR,#?_GetLineMoney?BYTE+04H
805B5F F0                MOVX    @DPTR,A
805B60 7B00              MOV     R3,#?C?XDATASEG
805B62 7A17              MOV     R2,#HIGH Inputstr
805B64 792C              MOV     R1,#LOW Inputstr
805B66 A3                INC     DPTR
805B67 A5128007B6        ECALL   ?C?PSTXDATA
805B6C 7A17              MOV     R2,#HIGH Inputlen
805B6E 7937              MOV     R1,#LOW Inputlen
805B70 901754            MOV     DPTR,#?_GetLineMoney?BYTE+08H
805B73 A5128007B6        ECALL   ?C?PSTXDATA
805B78 D001              POP     AR1
805B7A D002              POP     AR2
805B7C D003              POP     AR3
805B7E A5128089C7        ECALL   _GetLineMoney
805B83 8059              SJMP    ?C0106?GOODSWAYSET
805B85         ?C0057?GOODSWAYSET:
  216: 	else
  217: 		key = GetLine( GoodsWaystr[Num].str, GoodsWaystr[Num].len, line, Inputstr, &Inputlen );			
805B85 90172A            MOV     DPTR,#Num
805B88 E0                MOVX    A,@DPTR
805B89 FF                MOV     R7,A
805B8A 25E0              ADD     A,ACC
805B8C 25E0              ADD     A,ACC
805B8E 2455              ADD     A,#LOW GoodsWaystr
805B90 F582              MOV     DPL,A
805B92 E4                CLR     A
805B93 3417              ADDC    A,#HIGH GoodsWaystr
805B95 F583              MOV     DPH,A
805B97 A5128007C0        ECALL   ?C?PLDCODE
805B9C C003              PUSH    AR3
805B9E C002              PUSH    AR2
805BA0 C001              PUSH    AR1
805BA2 EF                MOV     A,R7
805BA3 25E0              ADD     A,ACC
805BA5 25E0              ADD     A,ACC
805BA7 2458              ADD     A,#LOW GoodsWaystr+03H
805BA9 F582              MOV     DPL,A
805BAB E4                CLR     A
805BAC 3417              ADDC    A,#HIGH GoodsWaystr+03H
805BAE F583              MOV     DPH,A
805BB0 E4                CLR     A
805BB1 93                MOVC    A,@A+DPTR
805BB2 FD                MOV     R5,A
805BB3 90172B            MOV     DPTR,#line
805BB6 E0                MOVX    A,@DPTR
805BB7 901769            MOV     DPTR,#?_GetLine?BYTE+04H
805BBA F0                MOVX    @DPTR,A
805BBB 7B00              MOV     R3,#?C?XDATASEG
805BBD 7A17              MOV     R2,#HIGH Inputstr
805BBF 792C              MOV     R1,#LOW Inputstr
805BC1 A3                INC     DPTR
805BC2 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 175


805BC7 7A17              MOV     R2,#HIGH Inputlen
805BC9 7937              MOV     R1,#LOW Inputlen
805BCB 90176D            MOV     DPTR,#?_GetLine?BYTE+08H
805BCE A5128007B6        ECALL   ?C?PSTXDATA
805BD3 D001              POP     AR1
805BD5 D002              POP     AR2
805BD7 D003              POP     AR3
805BD9 A512808C2C        ECALL   _GetLine
805BDE         
805BDE 901736            MOV     DPTR,#key
805BE1 EF                MOV     A,R7
805BE2 F0                MOVX    @DPTR,A
805BE3         ?C0058?GOODSWAYSET:
  218: 	ClearKey();		
805BE3 A5128087A8        ECALL   ClearKey
  219: 	if( key == 1 )//Enter	
805BE8 901736            MOV     DPTR,#key
805BEB E0                MOVX    A,@DPTR
805BEC 6401              XRL     A,#01H
805BEE 7031              JNZ     ?C0059?GOODSWAYSET
  220: 	{		
  221: 		DisplayCursorState( 0, 0, 0, 0, 1 );		
805BF0 C21A              CLR     ?_DisplayCursorState?BIT
805BF2 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
805BF5 F0                MOVX    @DPTR,A
805BF6 D21B              SETB    ?_DisplayCursorState?BIT+01H
805BF8 FD                MOV     R5,A
805BF9 FF                MOV     R7,A
805BFA A51280817F        ECALL   _DisplayCursorState
  222: 		//Trace( "selected Enter \n" );			
  223: 		ReadWriteGoodsParam( Num, 0, Inputstr ,&Inputlen, 1 );		
805BFF 90172A            MOV     DPTR,#Num
805C02 E0                MOVX    A,@DPTR
805C03 FF                MOV     R7,A
805C04 7A17              MOV     R2,#HIGH Inputstr
805C06 7B2C              MOV     R3,#LOW Inputstr
805C08 901751            MOV     DPTR,#?_ReadWriteGoodsParam?BYTE+05H
805C0B 7417              MOV     A,#HIGH Inputlen
805C0D F0                MOVX    @DPTR,A
805C0E A3                INC     DPTR
805C0F 7437              MOV     A,#LOW Inputlen
805C11 F0                MOVX    @DPTR,A
805C12 D21A              SETB    ?_ReadWriteGoodsParam?BIT
805C14 E4                CLR     A
805C15 FD                MOV     R5,A
805C16 FC                MOV     R4,A
805C17 A51280D1BB        ECALL   _ReadWriteGoodsParam
  224: 		ClearKey();		
805C1C A5128087A8        ECALL   ClearKey
  225: 	}		
805C21         ?C0059?GOODSWAYSET:
  226: 	//Trace( "edit one SysParanMenu end\n" );
  227: 	return 0;
805C21 C3                CLR     C
  228: }
805C22         ?C0060?GOODSWAYSET:
805C22 A522              ERET    
----- FUNCTION _EditGoodsParam (END) -------


----- FUNCTION ?L?COM0021 (BEGIN) -----
805C24 901730            MOV     DPTR,#MenuNum
805C27         ?L?COM0022:
805C27 E0                MOVX    A,@DPTR
805C28 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 176


805C29 D219              SETB    ?_DisplayMenuAndVal?BIT
805C2B E4                CLR     A
805C2C FF                MOV     R7,A
----- FUNCTION _DisplayMenuAndVal (BEGIN) -----
 FILE: 'SysParamSet.c'
  960: u_char  DisplayMenuAndVal( u_char y, u_char Num, bit flag )
  961: {	
805C2D 901735            MOV     DPTR,#y
805C30 EF                MOV     A,R7
805C31 F0                MOVX    @DPTR,A
805C32 A3                INC     DPTR
805C33 ED                MOV     A,R5
805C34 F0                MOVX    @DPTR,A
  962: 	u_char   xdata  len ;
  963: 
  964: 	len = 0;	
805C35 E4                CLR     A
805C36 A3                INC     DPTR
805C37 F0                MOVX    @DPTR,A
  965: 	memset( y_displaystr,0,sizeof( y_displaystr ) );				
805C38 FE                MOV     R6,A
805C39 7F2C              MOV     R7,#02CH
805C3B FD                MOV     R5,A
805C3C 7B00              MOV     R3,#?C?XDATASEG
805C3E 7A2D              MOV     R2,#HIGH y_displaystr
805C40 799A              MOV     R1,#LOW y_displaystr
805C42 A5128008A6        ECALL   ?C?MEMSET
  966: 	if( flag == 0 )//编辑此项菜单
805C47 201937            JB      flag,?C0342?SYSPARAMSET
  967: 	{	
  968: 		DisplayStr( 0, 0, 1, SysMenustr[Num].str, SysMenustr[Num].len );//显示菜单			
805C4A D21A              SETB    ?_DisplayStr?BIT
805C4C 901736            MOV     DPTR,#Num
805C4F E0                MOVX    A,@DPTR
805C50 FF                MOV     R7,A
805C51 25E0              ADD     A,ACC
805C53 25E0              ADD     A,ACC
805C55 24A8              ADD     A,#LOW SysMenustr
805C57 F582              MOV     DPL,A
805C59 E4                CLR     A
805C5A 3410              ADDC    A,#HIGH SysMenustr
805C5C F583              MOV     DPH,A
805C5E A5128007C0        ECALL   ?C?PLDCODE
805C63 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805C66 A5128007B6        ECALL   ?C?PSTXDATA
805C6B EF                MOV     A,R7
805C6C 25E0              ADD     A,ACC
805C6E 25E0              ADD     A,ACC
805C70 24AB              ADD     A,#LOW SysMenustr+03H
805C72 F582              MOV     DPL,A
805C74 E4                CLR     A
805C75 3410              ADDC    A,#HIGH SysMenustr+03H
805C77 A512808057        ECALL   ?L?COM0004
  969: 		return 0;
805C7C 7F00              MOV     R7,#00H
805C7E 025D81            LJMP    ?C0343?SYSPARAMSET
  970: 	}
805C81         ?C0342?SYSPARAMSET:
  971: 	else//显示此项菜单
  972: 	{
  973: 		memcpy( y_displaystr, SysMenustr[Num].str, SysMenustr[Num].len );//菜单串转化为unicode串				
805C81 901736            MOV     DPTR,#Num
805C84 E0                MOVX    A,@DPTR
805C85 FF                MOV     R7,A
805C86 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 177


805C88 25E0              ADD     A,ACC
805C8A 24AB              ADD     A,#LOW SysMenustr+03H
805C8C F582              MOV     DPL,A
805C8E E4                CLR     A
805C8F 3410              ADDC    A,#HIGH SysMenustr+03H
805C91 F583              MOV     DPH,A
805C93 E4                CLR     A
805C94 93                MOVC    A,@A+DPTR
805C95 FD                MOV     R5,A
805C96 7C00              MOV     R4,#00H
805C98 C004              PUSH    AR4
805C9A C005              PUSH    AR5
805C9C EF                MOV     A,R7
805C9D 25E0              ADD     A,ACC
805C9F 25E0              ADD     A,ACC
805CA1 24A8              ADD     A,#LOW SysMenustr
805CA3 F582              MOV     DPL,A
805CA5 E4                CLR     A
805CA6 3410              ADDC    A,#HIGH SysMenustr
805CA8 F583              MOV     DPH,A
805CAA A5128007C0        ECALL   ?C?PLDCODE
805CAF 789A              MOV     R0,#LOW y_displaystr
805CB1 7C2D              MOV     R4,#HIGH y_displaystr
805CB3 7D00              MOV     R5,#?C?XDATASEG
805CB5 D007              POP     AR7
805CB7 D006              POP     AR6
805CB9 A51280052D        ECALL   ?C?COPY
  974: 		ReadWriteSysParam( Num, y_displaystr + SysMenustr[Num].len, 0, &len, 0 );//得到菜单对应的值				
805CBE 901736            MOV     DPTR,#Num
805CC1 E0                MOVX    A,@DPTR
805CC2 FF                MOV     R7,A
805CC3 25E0              ADD     A,ACC
805CC5 25E0              ADD     A,ACC
805CC7 24AB              ADD     A,#LOW SysMenustr+03H
805CC9 F582              MOV     DPL,A
805CCB E4                CLR     A
805CCC 3410              ADDC    A,#HIGH SysMenustr+03H
805CCE F583              MOV     DPH,A
805CD0 E4                CLR     A
805CD1 93                MOVC    A,@A+DPTR
805CD2 249A              ADD     A,#LOW y_displaystr
805CD4 F582              MOV     DPL,A
805CD6 E4                CLR     A
805CD7 342D              ADDC    A,#HIGH y_displaystr
805CD9 AD82              MOV     R5,DPL
805CDB FC                MOV     R4,A
805CDC 901751            MOV     DPTR,#?_ReadWriteSysParam?BYTE+05H
805CDF 7417              MOV     A,#HIGH len
805CE1 F0                MOVX    @DPTR,A
805CE2 A3                INC     DPTR
805CE3 7437              MOV     A,#LOW len
805CE5 F0                MOVX    @DPTR,A
805CE6 C21A              CLR     ?_ReadWriteSysParam?BIT
805CE8 E4                CLR     A
805CE9 FB                MOV     R3,A
805CEA FA                MOV     R2,A
805CEB A51280D91E        ECALL   _ReadWriteSysParam
  975: 		DisplayStr( 0, y, 1,  y_displaystr, SysMenustr[Num].len + len );//显示菜单
805CF0 901735            MOV     DPTR,#y
805CF3 E0                MOVX    A,@DPTR
805CF4 FD                MOV     R5,A
805CF5 D21A              SETB    ?_DisplayStr?BIT
805CF7 7B00              MOV     R3,#?C?XDATASEG
805CF9 7A2D              MOV     R2,#HIGH y_displaystr
805CFB 799A              MOV     R1,#LOW y_displaystr
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 178


805CFD 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805D00 A5128007B6        ECALL   ?C?PSTXDATA
805D05 901736            MOV     DPTR,#Num
805D08 E0                MOVX    A,@DPTR
805D09 25E0              ADD     A,ACC
805D0B 25E0              ADD     A,ACC
805D0D 24AB              ADD     A,#LOW SysMenustr+03H
805D0F F582              MOV     DPL,A
805D11 E4                CLR     A
805D12 3410              ADDC    A,#HIGH SysMenustr+03H
805D14 F583              MOV     DPH,A
805D16 E4                CLR     A
805D17 93                MOVC    A,@A+DPTR
805D18 FF                MOV     R7,A
805D19 901737            MOV     DPTR,#len
805D1C E0                MOVX    A,@DPTR
805D1D FE                MOV     R6,A
805D1E EF                MOV     A,R7
805D1F 2E                ADD     A,R6
805D20 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805D23 F0                MOVX    @DPTR,A
805D24 E4                CLR     A
805D25 FF                MOV     R7,A
805D26 A512808062        ECALL   _DisplayStr
  976: 		y_displaystr[SysMenustr[Num].len + len ] = '\0';
805D2B 901736            MOV     DPTR,#Num
805D2E E0                MOVX    A,@DPTR
805D2F FF                MOV     R7,A
805D30 25E0              ADD     A,ACC
805D32 25E0              ADD     A,ACC
805D34 24AB              ADD     A,#LOW SysMenustr+03H
805D36 F582              MOV     DPL,A
805D38 E4                CLR     A
805D39 3410              ADDC    A,#HIGH SysMenustr+03H
805D3B F583              MOV     DPH,A
805D3D E4                CLR     A
805D3E 93                MOVC    A,@A+DPTR
805D3F FE                MOV     R6,A
805D40 901737            MOV     DPTR,#len
805D43 E0                MOVX    A,@DPTR
805D44 FD                MOV     R5,A
805D45 EE                MOV     A,R6
805D46 2D                ADD     A,R5
805D47 249A              ADD     A,#LOW y_displaystr
805D49 F582              MOV     DPL,A
805D4B E4                CLR     A
805D4C 342D              ADDC    A,#HIGH y_displaystr
805D4E F583              MOV     DPH,A
805D50 E4                CLR     A
805D51 F0                MOVX    @DPTR,A
  977: 		if( SysMenustr[Num].len + len > 20 )
805D52 EF                MOV     A,R7
805D53 25E0              ADD     A,ACC
805D55 25E0              ADD     A,ACC
805D57 24AB              ADD     A,#LOW SysMenustr+03H
805D59 F582              MOV     DPL,A
805D5B E4                CLR     A
805D5C 3410              ADDC    A,#HIGH SysMenustr+03H
805D5E F583              MOV     DPH,A
805D60 E4                CLR     A
805D61 93                MOVC    A,@A+DPTR
805D62 FF                MOV     R7,A
805D63 2D                ADD     A,R5
805D64 FD                MOV     R5,A
805D65 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 179


805D66 33                RLC     A
805D67 FC                MOV     R4,A
805D68 D3                SETB    C
805D69 ED                MOV     A,R5
805D6A 9414              SUBB    A,#014H
805D6C EC                MOV     A,R4
805D6D 6480              XRL     A,#080H
805D6F 9480              SUBB    A,#080H
805D71 400C              JC      ?C0345?SYSPARAMSET
  978: 			return ( SysMenustr[Num].len + len - 20) ;		
805D73 901737            MOV     DPTR,#len
805D76 E0                MOVX    A,@DPTR
805D77 FE                MOV     R6,A
805D78 EF                MOV     A,R7
805D79 2E                ADD     A,R6
805D7A 24EC              ADD     A,#0ECH
805D7C FF                MOV     R7,A
805D7D 8002              SJMP    ?C0343?SYSPARAMSET
805D7F         ?C0345?SYSPARAMSET:
  979: 		else
  980: 			return 0;
805D7F 7F00              MOV     R7,#00H
  981: 	}
  982: }	
805D81         ?C0343?SYSPARAMSET:
805D81 A522              ERET    
----- FUNCTION _DisplayMenuAndVal (END) -------


----- FUNCTION _EditParam (BEGIN) -----
 FILE: 'SysParamSet.c'
  987: bit  EditParam( u_char Num, u_char y )
  988: {
805D83 90172A            MOV     DPTR,#Num
805D86 EF                MOV     A,R7
805D87 F0                MOVX    @DPTR,A
805D88 A3                INC     DPTR
805D89 ED                MOV     A,R5
805D8A F0                MOVX    @DPTR,A
  989: 	u_char  xdata Inputstr[30];
  990: 	u_char  xdata  key;
  991: 	u_char  xdata  Inputlen;	
  992: 	bit	data  ret;
  993: 	
  994: 	key = 0;
805D8B E4                CLR     A
805D8C 90174A            MOV     DPTR,#key
805D8F F0                MOVX    @DPTR,A
  995: 	Inputlen = 0;
805D90 A3                INC     DPTR
805D91 F0                MOVX    @DPTR,A
  996: 	ret = 0;
805D92 C218              CLR     ret
  997: 	//Trace( "edit one SysParanMenu begin\n" );
  998: 	
  999: 	Inputlen = SysInputLen[Num];
805D94 90172A            MOV     DPTR,#Num
805D97 E0                MOVX    A,@DPTR
805D98 FF                MOV     R7,A
805D99 25E0              ADD     A,ACC
805D9B 2418              ADD     A,#LOW SysInputLen
805D9D F582              MOV     DPL,A
805D9F E4                CLR     A
805DA0 3411              ADDC    A,#HIGH SysInputLen
805DA2 F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 180


805DA4 7401              MOV     A,#01H
805DA6 93                MOVC    A,@A+DPTR
805DA7 90174B            MOV     DPTR,#Inputlen
805DAA F0                MOVX    @DPTR,A
 1000: 	if( ( Num == 0 ) ||( Num == 1 ) ||( Num == 2 ) || ( Num == 7 )|| ( Num == 8 )|| ( Num == 9 ) )
805DAB EF                MOV     A,R7
805DAC 6018              JZ      ?C0348?SYSPARAMSET
805DAE 6401              XRL     A,#01H
805DB0 6014              JZ      ?C0348?SYSPARAMSET
805DB2 EF                MOV     A,R7
805DB3 6402              XRL     A,#02H
805DB5 600F              JZ      ?C0348?SYSPARAMSET
805DB7 EF                MOV     A,R7
805DB8 6407              XRL     A,#07H
805DBA 600A              JZ      ?C0348?SYSPARAMSET
805DBC EF                MOV     A,R7
805DBD 6408              XRL     A,#08H
805DBF 6005              JZ      ?C0348?SYSPARAMSET
805DC1 EF                MOV     A,R7
805DC2 6409              XRL     A,#09H
805DC4 705B              JNZ     ?C0347?SYSPARAMSET
805DC6         ?C0348?SYSPARAMSET:
 1001: 		key = GetLineMoney( SysMenustr[Num].str, SysMenustr[Num].len, y, Inputstr, &Inputlen );		
805DC6 90172A            MOV     DPTR,#Num
805DC9 E0                MOVX    A,@DPTR
805DCA FF                MOV     R7,A
805DCB 25E0              ADD     A,ACC
805DCD 25E0              ADD     A,ACC
805DCF 24A8              ADD     A,#LOW SysMenustr
805DD1 F582              MOV     DPL,A
805DD3 E4                CLR     A
805DD4 3410              ADDC    A,#HIGH SysMenustr
805DD6 F583              MOV     DPH,A
805DD8 A5128007C0        ECALL   ?C?PLDCODE
805DDD C003              PUSH    AR3
805DDF C002              PUSH    AR2
805DE1 C001              PUSH    AR1
805DE3 EF                MOV     A,R7
805DE4 25E0              ADD     A,ACC
805DE6 25E0              ADD     A,ACC
805DE8 24AB              ADD     A,#LOW SysMenustr+03H
805DEA F582              MOV     DPL,A
805DEC E4                CLR     A
805DED 3410              ADDC    A,#HIGH SysMenustr+03H
805DEF F583              MOV     DPH,A
805DF1 E4                CLR     A
805DF2 93                MOVC    A,@A+DPTR
805DF3 FD                MOV     R5,A
805DF4 90172B            MOV     DPTR,#y
805DF7 E0                MOVX    A,@DPTR
805DF8 901750            MOV     DPTR,#?_GetLineMoney?BYTE+04H
805DFB F0                MOVX    @DPTR,A
805DFC 7B00              MOV     R3,#?C?XDATASEG
805DFE 7A17              MOV     R2,#HIGH Inputstr
805E00 792C              MOV     R1,#LOW Inputstr
805E02 A3                INC     DPTR
805E03 A5128007B6        ECALL   ?C?PSTXDATA
805E08 7A17              MOV     R2,#HIGH Inputlen
805E0A 794B              MOV     R1,#LOW Inputlen
805E0C 901754            MOV     DPTR,#?_GetLineMoney?BYTE+08H
805E0F A5128007B6        ECALL   ?C?PSTXDATA
805E14 D001              POP     AR1
805E16 D002              POP     AR2
805E18 D003              POP     AR3
805E1A A5128089C7        ECALL   _GetLineMoney
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 181


805E1F 8059              SJMP    ?C0473?SYSPARAMSET
805E21         ?C0347?SYSPARAMSET:
 1002: 	else
 1003: 		key = GetLine( SysMenustr[Num].str, SysMenustr[Num].len, y, Inputstr, &Inputlen );	
805E21 90172A            MOV     DPTR,#Num
805E24 E0                MOVX    A,@DPTR
805E25 FF                MOV     R7,A
805E26 25E0              ADD     A,ACC
805E28 25E0              ADD     A,ACC
805E2A 24A8              ADD     A,#LOW SysMenustr
805E2C F582              MOV     DPL,A
805E2E E4                CLR     A
805E2F 3410              ADDC    A,#HIGH SysMenustr
805E31 F583              MOV     DPH,A
805E33 A5128007C0        ECALL   ?C?PLDCODE
805E38 C003              PUSH    AR3
805E3A C002              PUSH    AR2
805E3C C001              PUSH    AR1
805E3E EF                MOV     A,R7
805E3F 25E0              ADD     A,ACC
805E41 25E0              ADD     A,ACC
805E43 24AB              ADD     A,#LOW SysMenustr+03H
805E45 F582              MOV     DPL,A
805E47 E4                CLR     A
805E48 3410              ADDC    A,#HIGH SysMenustr+03H
805E4A F583              MOV     DPH,A
805E4C E4                CLR     A
805E4D 93                MOVC    A,@A+DPTR
805E4E FD                MOV     R5,A
805E4F 90172B            MOV     DPTR,#y
805E52 E0                MOVX    A,@DPTR
805E53 901769            MOV     DPTR,#?_GetLine?BYTE+04H
805E56 F0                MOVX    @DPTR,A
805E57 7B00              MOV     R3,#?C?XDATASEG
805E59 7A17              MOV     R2,#HIGH Inputstr
805E5B 792C              MOV     R1,#LOW Inputstr
805E5D A3                INC     DPTR
805E5E A5128007B6        ECALL   ?C?PSTXDATA
805E63 7A17              MOV     R2,#HIGH Inputlen
805E65 794B              MOV     R1,#LOW Inputlen
805E67 90176D            MOV     DPTR,#?_GetLine?BYTE+08H
805E6A A5128007B6        ECALL   ?C?PSTXDATA
805E6F D001              POP     AR1
805E71 D002              POP     AR2
805E73 D003              POP     AR3
805E75 A512808C2C        ECALL   _GetLine
805E7A         
805E7A 90174A            MOV     DPTR,#key
805E7D EF                MOV     A,R7
805E7E F0                MOVX    @DPTR,A
805E7F         ?C0349?SYSPARAMSET:
 1004: 	ClearKey();	
805E7F A5128087A8        ECALL   ClearKey
 1005: 	//Trace( "input END RET (0x) = %bx\n", key );		
 1006: 	if( key == 1 )//Enter	
805E84 90174A            MOV     DPTR,#key
805E87 E0                MOVX    A,@DPTR
805E88 6401              XRL     A,#01H
805E8A 7031              JNZ     ?C0350?SYSPARAMSET
 1007: 	{
 1008: 		//Trace( "display select \n" );
 1009: 		DisplayCursorState( 0, 0, 0, 0, 1 );			
805E8C C21A              CLR     ?_DisplayCursorState?BIT
805E8E 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
805E91 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 182


805E92 D21B              SETB    ?_DisplayCursorState?BIT+01H
805E94 FD                MOV     R5,A
805E95 FF                MOV     R7,A
805E96 A51280817F        ECALL   _DisplayCursorState
 1010: 		ReadWriteSysParam( Num, 0, Inputstr ,&Inputlen, 1 );
805E9B 90172A            MOV     DPTR,#Num
805E9E E0                MOVX    A,@DPTR
805E9F FF                MOV     R7,A
805EA0 7A17              MOV     R2,#HIGH Inputstr
805EA2 7B2C              MOV     R3,#LOW Inputstr
805EA4 901751            MOV     DPTR,#?_ReadWriteSysParam?BYTE+05H
805EA7 7417              MOV     A,#HIGH Inputlen
805EA9 F0                MOVX    @DPTR,A
805EAA A3                INC     DPTR
805EAB 744B              MOV     A,#LOW Inputlen
805EAD F0                MOVX    @DPTR,A
805EAE D21A              SETB    ?_ReadWriteSysParam?BIT
805EB0 E4                CLR     A
805EB1 FD                MOV     R5,A
805EB2 FC                MOV     R4,A
805EB3 A51280D91E        ECALL   _ReadWriteSysParam
 1011: 		ClearKey();		
805EB8 A5128087A8        ECALL   ClearKey
 1012: 	}		
805EBD         ?C0350?SYSPARAMSET:
 1013: 	//Trace( "edit one SysParanMenu end\n" );
 1014: 	return ret;
805EBD A218              MOV     C,ret
 1015: }
805EBF         ?C0351?SYSPARAMSET:
805EBF A522              ERET    
----- FUNCTION _EditParam (END) -------


----- FUNCTION InitAllCounter (BEGIN) -----
 FILE: 'countermaint.c'
  118: void InitAllCounter()
  119: {	
  120: 	u_char xdata key;
  121: //	struct time xdata Temptime;
  122: 
  123: 	DisplayStr( 0, 0, 1, InfoStr[0].str, InfoStr[0].len );
805EC1 D21A              SETB    ?_DisplayStr?BIT
805EC3 90132A            MOV     DPTR,#InfoStr
805EC6 A5128007C0        ECALL   ?C?PLDCODE
805ECB 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805ECE A5128007B6        ECALL   ?C?PSTXDATA
805ED3 90132D            MOV     DPTR,#InfoStr+03H
805ED6 A512808059        ECALL   ?L?COM0005
  124: 	DisplayStr( 0, 1, 1, InfoStr[1].str, InfoStr[1].len);
805EDB D21A              SETB    ?_DisplayStr?BIT
805EDD 90132E            MOV     DPTR,#InfoStr+04H
805EE0 A5128007C0        ECALL   ?C?PLDCODE
805EE5 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
805EE8 A5128007B6        ECALL   ?C?PSTXDATA
805EED 901331            MOV     DPTR,#InfoStr+07H
805EF0 E4                CLR     A
805EF1 93                MOVC    A,@A+DPTR
805EF2 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
805EF5 F0                MOVX    @DPTR,A
805EF6 7D01              MOV     R5,#01H
805EF8 E4                CLR     A
805EF9 FF                MOV     R7,A
805EFA A512808062        ECALL   _DisplayStr
  125: 	SgwSecTimer= 6;		
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 183


805EFF 751E06            MOV     SgwSecTimer,#06H
805F02         ?C0001?COUNTERMAINT:
  126: 	while( SgwSecTimer )
805F02 E51E              MOV     A,SgwSecTimer
805F04 7003              JNZ     $ + 5H
805F06 025F97            LJMP    ?C0008?COUNTERMAINT
  127: 	{
  128: 		key = GetKey();
805F09 A512809275        ECALL   GetKey
;---- Variable 'key' assigned to Register 'R7' ----
  129: 		if( key == KEY_CANCEL )
805F0E EF                MOV     A,R7
805F0F 641B              XRL     A,#01BH
805F11 7003              JNZ     $ + 5H
805F13 025F97            LJMP    ?C0008?COUNTERMAINT
  130: 			break;
805F16         ?C0003?COUNTERMAINT:
  131: 		if (key == KEY_SUBMIT)
805F16 EF                MOV     A,R7
805F17 640D              XRL     A,#0DH
805F19 705F              JNZ     ?C0004?COUNTERMAINT
  132: 		{
  133: 			memset( &TradeCounter, 0, sizeof( struct TRADECOUNTER ) );			    
805F1B FE                MOV     R6,A
805F1C 7F2A              MOV     R7,#02AH
805F1E FD                MOV     R5,A
805F1F 7B00              MOV     R3,#?C?XDATASEG
805F21 7A0A              MOV     R2,#HIGH TradeCounter
805F23 79EC              MOV     R1,#LOW TradeCounter
805F25 A5128008A6        ECALL   ?C?MEMSET
  134: 		//	memset( DoubtTradeLog, 0, sizeof( DoubtTradeLog ) );
  135: 			memset( TradeLog, 0, sizeof( TradeLog ) );	
805F2A 7E02              MOV     R6,#02H
805F2C 7F40              MOV     R7,#040H
805F2E 7D00              MOV     R5,#00H
805F30 7B00              MOV     R3,#?C?XDATASEG
805F32 7A01              MOV     R2,#HIGH TradeLog
805F34 79C5              MOV     R1,#LOW TradeLog
805F36 A5128008A6        ECALL   ?C?MEMSET
  136: 			for( key = 0; key < GOODSWAYNUM; key++ )					
805F3B E4                CLR     A
805F3C FF                MOV     R7,A
805F3D         ?C0005?COUNTERMAINT:
  137: 				TradeLog[key].WayNo = InputGoodsWayList[key].GoodsWayNo;
805F3D EF                MOV     A,R7
805F3E 25E0              ADD     A,ACC
805F40 25E0              ADD     A,ACC
805F42 24D3              ADD     A,#LOW InputGoodsWayList
805F44 F582              MOV     DPL,A
805F46 E4                CLR     A
805F47 342B              ADDC    A,#HIGH InputGoodsWayList
805F49 F583              MOV     DPH,A
805F4B E0                MOVX    A,@DPTR
805F4C FE                MOV     R6,A
805F4D 75F009            MOV     B,#09H
805F50 EF                MOV     A,R7
805F51 9001C5            MOV     DPTR,#TradeLog
805F54 A51280079F        ECALL   ?C?OFFXADD
805F59 EE                MOV     A,R6
805F5A F0                MOVX    @DPTR,A
805F5B 0F                INC     R7
805F5C EF                MOV     A,R7
805F5D B440DD            CJNE    A,#040H,?C0005?COUNTERMAINT
805F60         ?C0006?COUNTERMAINT:
  138: 		
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 184


  139: 		/*	memset( &Temptime, 0, sizeof( struct time ) );
  140: 			GetCurrentTime( &Temptime );
  141: 			TradeCounter.Date[0] = ( Temptime.year & 0xff00 ) >> 8;
  142: 			TradeCounter.Date[1] = ( Temptime.year & 0x00ff );
  143: 			TradeCounter.Date[2] = Temptime.mon;
  144: 			TradeCounter.Date[3] = Temptime.date;			
  145: 			SgwSecTimer = 0;*/
  146: 			SaveTradeParam();
805F60 A51280C04A        ECALL   SaveTradeParam
  147: 			SaveTradeCounter();
805F65 A51280C333        ECALL   SaveTradeCounter
  148: 			SchedulerProcess();//让出时间片
805F6A A512809545        ECALL   SchedulerProcess
  149: 			WaitForWork( 100, NULL );	
805F6F E4                CLR     A
805F70 7F64              MOV     R7,#064H
805F72 FE                MOV     R6,A
805F73 A512807B35        ECALL   ?L?COM000D
805F78 801D              SJMP    ?C0008?COUNTERMAINT
  150: 			return;
  151: 		}
805F7A         ?C0004?COUNTERMAINT:
  152: 		SchedulerProcess();//让出时间片
805F7A A512809545        ECALL   SchedulerProcess
  153: 		WaitForWork( 100, &Lcd );	
805F7F E4                CLR     A
805F80 7F64              MOV     R7,#064H
805F82 FE                MOV     R6,A
805F83 FD                MOV     R5,A
805F84 FC                MOV     R4,A
805F85 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
805F88 7423              MOV     A,#HIGH Lcd
805F8A F0                MOVX    @DPTR,A
805F8B A3                INC     DPTR
805F8C 7460              MOV     A,#LOW Lcd
805F8E F0                MOVX    @DPTR,A
805F8F A512807B3D        ECALL   _WaitForWork
  154: 	}
805F94 025F02            LJMP    ?C0001?COUNTERMAINT
  155: }
805F97         ?C0008?COUNTERMAINT:
805F97 A522              ERET    
----- FUNCTION InitAllCounter (END) -------


----- FUNCTION ?L?COM002A (BEGIN) -----
805F99 901729            MOV     DPTR,#firstNum
805F9C E0                MOVX    A,@DPTR
805F9D FD                MOV     R5,A
805F9E 7F01              MOV     R7,#01H
----- FUNCTION _DisplayTraceSum (BEGIN) -----
 FILE: 'countermaint.c'
  158: void  DisplayTraceSum( u_char yPos, u_char Index )
  159: {
805FA0 90172D            MOV     DPTR,#yPos
805FA3 EF                MOV     A,R7
805FA4 F0                MOVX    @DPTR,A
805FA5 A3                INC     DPTR
805FA6 ED                MOV     A,R5
805FA7 F0                MOVX    @DPTR,A
  160: 	u_char xdata len = 0;
  161: 	u_char xdata line[20];
805FA8 E4                CLR     A
805FA9 A3                INC     DPTR
805FAA F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 185


  162: 	u_char xdata i = 0;
805FAB 901744            MOV     DPTR,#i
805FAE F0                MOVX    @DPTR,A
  163: 	u_int  xdata TempSum = 0;
805FAF A3                INC     DPTR
805FB0 F0                MOVX    @DPTR,A
805FB1 A3                INC     DPTR
805FB2 F0                MOVX    @DPTR,A
  164: 
  165: 	memset( line, 0, sizeof( line ) );
805FB3 FE                MOV     R6,A
805FB4 7F14              MOV     R7,#014H
805FB6 FD                MOV     R5,A
805FB7 7B00              MOV     R3,#?C?XDATASEG
805FB9 7A17              MOV     R2,#HIGH line
805FBB 7930              MOV     R1,#LOW line
805FBD A5128008A6        ECALL   ?C?MEMSET
  166: 	memcpy( line, GoodsMianMenuStr[Index].str, GoodsMianMenuStr[Index].len );
805FC2 90172E            MOV     DPTR,#Index
805FC5 E0                MOVX    A,@DPTR
805FC6 FF                MOV     R7,A
805FC7 25E0              ADD     A,ACC
805FC9 25E0              ADD     A,ACC
805FCB 2415              ADD     A,#LOW GoodsMianMenuStr+03H
805FCD F582              MOV     DPL,A
805FCF E4                CLR     A
805FD0 3413              ADDC    A,#HIGH GoodsMianMenuStr+03H
805FD2 F583              MOV     DPH,A
805FD4 E4                CLR     A
805FD5 93                MOVC    A,@A+DPTR
805FD6 FD                MOV     R5,A
805FD7 7C00              MOV     R4,#00H
805FD9 C004              PUSH    AR4
805FDB C005              PUSH    AR5
805FDD EF                MOV     A,R7
805FDE 25E0              ADD     A,ACC
805FE0 25E0              ADD     A,ACC
805FE2 2412              ADD     A,#LOW GoodsMianMenuStr
805FE4 F582              MOV     DPL,A
805FE6 E4                CLR     A
805FE7 3413              ADDC    A,#HIGH GoodsMianMenuStr
805FE9 F583              MOV     DPH,A
805FEB A5128007C0        ECALL   ?C?PLDCODE
805FF0 7830              MOV     R0,#LOW line
805FF2 7C17              MOV     R4,#HIGH line
805FF4 7D00              MOV     R5,#?C?XDATASEG
805FF6 D007              POP     AR7
805FF8 D006              POP     AR6
805FFA A51280052D        ECALL   ?C?COPY
  167: 	switch( Index )
805FFF 90172E            MOV     DPTR,#Index
806002 E0                MOVX    A,@DPTR
806003 14                DEC     A
806004 602A              JZ      ?C0011?COUNTERMAINT
806006 04                INC     A
806007 7068              JNZ     ?C0009?COUNTERMAINT
  168: 	{
  169: 		case 0://正常交易次数	
806009         ?C0010?COUNTERMAINT:
  170: 			len = sprintf( line + GoodsMianMenuStr[0].len, "%u", TradeCounter.GoodTraceSum );			
806009 901315            MOV     DPTR,#GoodsMianMenuStr+03H
80600C E4                CLR     A
80600D 93                MOVC    A,@A+DPTR
80600E 2430              ADD     A,#LOW line
806010 F9                MOV     R1,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 186


806011 E4                CLR     A
806012 3417              ADDC    A,#HIGH line
806014 FA                MOV     R2,A
806015 7B00              MOV     R3,#?C?XDATASEG
806017 C003              PUSH    AR3
806019 C002              PUSH    AR2
80601B C001              PUSH    AR1
80601D 7B80              MOV     R3,#BYTE2 080129BH
80601F 7A12              MOV     R2,#HIGH 080129BH
806021 799B              MOV     R1,#LOW 080129BH
806023 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806026 A5128007B6        ECALL   ?C?PSTXDATA
80602B 900AFC            MOV     DPTR,#TradeCounter+010H
  171: 		//	len = LenOfNum( TradeCounter.GoodTraceSum );			
  172: 		break;
80602E 8025              SJMP    ?C0168?COUNTERMAINT
  173: 		case 1://有疑问出货交易次数
806030         ?C0011?COUNTERMAINT:
  174: 			len = sprintf( line + GoodsMianMenuStr[1].len, "%u", TradeCounter.GoodDoubtTraceSum );			
806030 901319            MOV     DPTR,#GoodsMianMenuStr+07H
806033 E4                CLR     A
806034 93                MOVC    A,@A+DPTR
806035 2430              ADD     A,#LOW line
806037 F9                MOV     R1,A
806038 E4                CLR     A
806039 3417              ADDC    A,#HIGH line
80603B FA                MOV     R2,A
80603C 7B00              MOV     R3,#?C?XDATASEG
80603E C003              PUSH    AR3
806040 C002              PUSH    AR2
806042 C001              PUSH    AR1
806044 7B80              MOV     R3,#BYTE2 080129BH
806046 7A12              MOV     R2,#HIGH 080129BH
806048 799B              MOV     R1,#LOW 080129BH
80604A 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80604D A5128007B6        ECALL   ?C?PSTXDATA
806052 900AFE            MOV     DPTR,#TradeCounter+012H
806055         
806055 E0                MOVX    A,@DPTR
806056 FF                MOV     R7,A
806057 A3                INC     DPTR
806058 E0                MOVX    A,@DPTR
806059 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80605C CF                XCH     A,R7
80605D F0                MOVX    @DPTR,A
80605E A3                INC     DPTR
80605F EF                MOV     A,R7
806060 F0                MOVX    @DPTR,A
806061 D001              POP     AR1
806063 D002              POP     AR2
806065 D003              POP     AR3
806067 A512800949        ECALL   _sprintf
80606C 90172F            MOV     DPTR,#len
80606F EF                MOV     A,R7
806070 F0                MOVX    @DPTR,A
  175: 		break;
  176: 	/*	case 2://总余货量
  177: 			TempSum = 0;
  178: 			for( i = 0; i < GOODSWAYNUM; i ++ )							
  179: 				TempSum += GoodsWaySetVal[ i ].GoodsCurrentSum;			
  180: 			sprintf( line + GoodsMianMenuStr[2].len, "%d", TempSum );
  181: 			if( TempSum >= 100 )					
  182: 				len = LenOfNum( TempSum ) + 1;
  183: 			else 
  184: 				len = LenOfNum( TempSum ) + 2;		
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 187


  185: 		break;*/
  186: 		case 2://单货道交易统计
  187: 		break;
  188: 	}
806071         ?C0009?COUNTERMAINT:
  189: 	DisplayStr( 0, yPos, 1, line, GoodsMianMenuStr[Index].len + len );	
806071 90172D            MOV     DPTR,#yPos
806074 E0                MOVX    A,@DPTR
806075 FD                MOV     R5,A
806076 D21A              SETB    ?_DisplayStr?BIT
806078 7B00              MOV     R3,#?C?XDATASEG
80607A 7A17              MOV     R2,#HIGH line
80607C 7930              MOV     R1,#LOW line
80607E 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
806081 A5128007B6        ECALL   ?C?PSTXDATA
806086 90172E            MOV     DPTR,#Index
806089 E0                MOVX    A,@DPTR
80608A 25E0              ADD     A,ACC
80608C 25E0              ADD     A,ACC
80608E 2415              ADD     A,#LOW GoodsMianMenuStr+03H
806090 F582              MOV     DPL,A
806092 E4                CLR     A
806093 3413              ADDC    A,#HIGH GoodsMianMenuStr+03H
806095 F583              MOV     DPH,A
806097 E4                CLR     A
806098 93                MOVC    A,@A+DPTR
806099 FF                MOV     R7,A
80609A 90172F            MOV     DPTR,#len
80609D E0                MOVX    A,@DPTR
80609E FE                MOV     R6,A
80609F EF                MOV     A,R7
8060A0 2E                ADD     A,R6
8060A1 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8060A4 F0                MOVX    @DPTR,A
8060A5 E4                CLR     A
8060A6 FF                MOV     R7,A
8060A7 A502808062        EJMP    _DisplayStr
----- FUNCTION _DisplayTraceSum (END) -------


----- FUNCTION ?L?COM002D (BEGIN) -----
8060AC 90172D            MOV     DPTR,#firstNum
8060AF E0                MOVX    A,@DPTR
8060B0 FF                MOV     R7,A
8060B1 901733            MOV     DPTR,#m_GoodsNo
8060B4 E0                MOVX    A,@DPTR
8060B5 FB                MOV     R3,A
8060B6 7D01              MOV     R5,#01H
----- FUNCTION _DispGoodsWayList (BEGIN) -----
 FILE: 'countermaint.c'
  193: void DispGoodsWayList(  u_char iIndex, u_char y, u_char iArrayIndex )
  194: {
8060B8 901734            MOV     DPTR,#iIndex
8060BB EF                MOV     A,R7
8060BC F0                MOVX    @DPTR,A
8060BD A3                INC     DPTR
8060BE ED                MOV     A,R5
8060BF F0                MOVX    @DPTR,A
8060C0 A3                INC     DPTR
8060C1 EB                MOV     A,R3
8060C2 F0                MOVX    @DPTR,A
  195: 	u_char xdata len = 0;  //GetData的返回值
  196: 	u_char xdata line[20]; //存放提示字符串
8060C3 E4                CLR     A
8060C4 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 188


8060C5 F0                MOVX    @DPTR,A
  197: 	
  198: 	memset( line, 0, sizeof( line) );	
8060C6 FE                MOV     R6,A
8060C7 7F14              MOV     R7,#014H
8060C9 FD                MOV     R5,A
8060CA 7B00              MOV     R3,#?C?XDATASEG
8060CC 7A17              MOV     R2,#HIGH line
8060CE 7938              MOV     R1,#LOW line
8060D0 A5128008A6        ECALL   ?C?MEMSET
  199: 	memcpy( line, GoodsWayListStr[iIndex].str, GoodsWayListStr[iIndex].len );
8060D5 901734            MOV     DPTR,#iIndex
8060D8 E0                MOVX    A,@DPTR
8060D9 FF                MOV     R7,A
8060DA 25E0              ADD     A,ACC
8060DC 25E0              ADD     A,ACC
8060DE 2421              ADD     A,#LOW GoodsWayListStr+03H
8060E0 F582              MOV     DPL,A
8060E2 E4                CLR     A
8060E3 3413              ADDC    A,#HIGH GoodsWayListStr+03H
8060E5 F583              MOV     DPH,A
8060E7 E4                CLR     A
8060E8 93                MOVC    A,@A+DPTR
8060E9 FD                MOV     R5,A
8060EA 7C00              MOV     R4,#00H
8060EC C004              PUSH    AR4
8060EE C005              PUSH    AR5
8060F0 EF                MOV     A,R7
8060F1 25E0              ADD     A,ACC
8060F3 25E0              ADD     A,ACC
8060F5 241E              ADD     A,#LOW GoodsWayListStr
8060F7 F582              MOV     DPL,A
8060F9 E4                CLR     A
8060FA 3413              ADDC    A,#HIGH GoodsWayListStr
8060FC F583              MOV     DPH,A
8060FE A5128007C0        ECALL   ?C?PLDCODE
806103 7838              MOV     R0,#LOW line
806105 7C17              MOV     R4,#HIGH line
806107 7D00              MOV     R5,#?C?XDATASEG
806109 D007              POP     AR7
80610B D006              POP     AR6
80610D A51280052D        ECALL   ?C?COPY
  200: 	switch( iIndex )
806112 901734            MOV     DPTR,#iIndex
806115 E0                MOVX    A,@DPTR
806116 FF                MOV     R7,A
806117 14                DEC     A
806118 6062              JZ      ?C0016?COUNTERMAINT
80611A 14                DEC     A
80611B 7003              JNZ     $ + 5H
80611D 0261DE            LJMP    ?C0017?COUNTERMAINT
806120 2402              ADD     A,#02H
806122 6003              JZ      $ + 5H
806124 026255            LJMP    ?C0014?COUNTERMAINT
  201: 	{
  202: 		case 0://货道编号
806127         ?C0015?COUNTERMAINT:
  203: 			Trace("\n TradeLog[%bu].WayNo = %bu", iArrayIndex,TradeLog[iArrayIndex].WayNo );
  204: 			sprintf( line + GoodsWayListStr[iIndex].len, "%bu", TradeLog[iArrayIndex].WayNo );			
806127 EF                MOV     A,R7
806128 25E0              ADD     A,ACC
80612A 25E0              ADD     A,ACC
80612C 2421              ADD     A,#LOW GoodsWayListStr+03H
80612E F582              MOV     DPL,A
806130 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 189


806131 3413              ADDC    A,#HIGH GoodsWayListStr+03H
806133 F583              MOV     DPH,A
806135 E4                CLR     A
806136 93                MOVC    A,@A+DPTR
806137 2438              ADD     A,#LOW line
806139 F9                MOV     R1,A
80613A E4                CLR     A
80613B 3417              ADDC    A,#HIGH line
80613D FA                MOV     R2,A
80613E 7B00              MOV     R3,#?C?XDATASEG
806140 C003              PUSH    AR3
806142 C002              PUSH    AR2
806144 C001              PUSH    AR1
806146 7B80              MOV     R3,#BYTE2 080129EH
806148 7A12              MOV     R2,#HIGH 080129EH
80614A 799E              MOV     R1,#LOW 080129EH
80614C 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80614F A5128007B6        ECALL   ?C?PSTXDATA
806154 901736            MOV     DPTR,#iArrayIndex
806157 E0                MOVX    A,@DPTR
806158 75F009            MOV     B,#09H
80615B 9001C5            MOV     DPTR,#TradeLog
80615E A51280079F        ECALL   ?C?OFFXADD
806163 E0                MOVX    A,@DPTR
806164 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806167 F0                MOVX    @DPTR,A
806168 D001              POP     AR1
80616A D002              POP     AR2
80616C D003              POP     AR3
80616E A512800949        ECALL   _sprintf
  205: 			len = 2;
806173 901737            MOV     DPTR,#len
806176 7402              MOV     A,#02H
806178 F0                MOVX    @DPTR,A
  206: 		break; 
806179 026255            LJMP    ?C0014?COUNTERMAINT
  207: 		case 1://交易次数
80617C         ?C0016?COUNTERMAINT:
  208: 			sprintf( line + GoodsWayListStr[iIndex].len, "%u", TradeLog[iArrayIndex].TraceSum );  //bu-u, Changed by Andy 
>> on 2010.8.19							
80617C 901734            MOV     DPTR,#iIndex
80617F E0                MOVX    A,@DPTR
806180 25E0              ADD     A,ACC
806182 25E0              ADD     A,ACC
806184 2421              ADD     A,#LOW GoodsWayListStr+03H
806186 F582              MOV     DPL,A
806188 E4                CLR     A
806189 3413              ADDC    A,#HIGH GoodsWayListStr+03H
80618B F583              MOV     DPH,A
80618D E4                CLR     A
80618E 93                MOVC    A,@A+DPTR
80618F 2438              ADD     A,#LOW line
806191 F9                MOV     R1,A
806192 E4                CLR     A
806193 3417              ADDC    A,#HIGH line
806195 FA                MOV     R2,A
806196 7B00              MOV     R3,#?C?XDATASEG
806198 C003              PUSH    AR3
80619A C002              PUSH    AR2
80619C C001              PUSH    AR1
80619E 7B80              MOV     R3,#BYTE2 080129BH
8061A0 7A12              MOV     R2,#HIGH 080129BH
8061A2 799B              MOV     R1,#LOW 080129BH
8061A4 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8061A7 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 190


8061AC 901736            MOV     DPTR,#iArrayIndex
8061AF E0                MOVX    A,@DPTR
8061B0 75F009            MOV     B,#09H
8061B3 9001C6            MOV     DPTR,#TradeLog+01H
8061B6 A51280079F        ECALL   ?C?OFFXADD
8061BB E0                MOVX    A,@DPTR
8061BC FF                MOV     R7,A
8061BD A3                INC     DPTR
8061BE E0                MOVX    A,@DPTR
8061BF 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8061C2 CF                XCH     A,R7
8061C3 F0                MOVX    @DPTR,A
8061C4 A3                INC     DPTR
8061C5 EF                MOV     A,R7
8061C6 F0                MOVX    @DPTR,A
8061C7 D001              POP     AR1
8061C9 D002              POP     AR2
8061CB D003              POP     AR3
8061CD A512800949        ECALL   _sprintf
  209: 			len = LenOfNum( TradeLog[iArrayIndex].TraceSum );			
8061D2 901736            MOV     DPTR,#iArrayIndex
8061D5 E0                MOVX    A,@DPTR
8061D6 75F009            MOV     B,#09H
8061D9 9001C6            MOV     DPTR,#TradeLog+01H
  210: 		break;
8061DC 8060              SJMP    ?C0169?COUNTERMAINT
  211: /*		case 2://现存货量,
  212: 			sprintf( line + GoodsWayListStr[iIndex].len, "%bu", GoodsWaySetVal[ iArrayIndex ].GoodsCurrentSum );			
  213: 			len = LenOfNum( GoodsWaySetVal[ iArrayIndex ].GoodsCurrentSum ) + 2;	
  214: 		break;*/
  215:   		case 2://疑问出货数量
8061DE         ?C0017?COUNTERMAINT:
  216: 			sprintf( line + GoodsWayListStr[iIndex].len, "%u", TradeLog[iArrayIndex].DoubtTraceSum );	//bu-u, Changed by A
>> ndy on 2010.8.19		
8061DE 901734            MOV     DPTR,#iIndex
8061E1 E0                MOVX    A,@DPTR
8061E2 25E0              ADD     A,ACC
8061E4 25E0              ADD     A,ACC
8061E6 2421              ADD     A,#LOW GoodsWayListStr+03H
8061E8 F582              MOV     DPL,A
8061EA E4                CLR     A
8061EB 3413              ADDC    A,#HIGH GoodsWayListStr+03H
8061ED F583              MOV     DPH,A
8061EF E4                CLR     A
8061F0 93                MOVC    A,@A+DPTR
8061F1 2438              ADD     A,#LOW line
8061F3 F9                MOV     R1,A
8061F4 E4                CLR     A
8061F5 3417              ADDC    A,#HIGH line
8061F7 FA                MOV     R2,A
8061F8 7B00              MOV     R3,#?C?XDATASEG
8061FA C003              PUSH    AR3
8061FC C002              PUSH    AR2
8061FE C001              PUSH    AR1
806200 7B80              MOV     R3,#BYTE2 080129BH
806202 7A12              MOV     R2,#HIGH 080129BH
806204 799B              MOV     R1,#LOW 080129BH
806206 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806209 A5128007B6        ECALL   ?C?PSTXDATA
80620E 901736            MOV     DPTR,#iArrayIndex
806211 E0                MOVX    A,@DPTR
806212 75F009            MOV     B,#09H
806215 9001C8            MOV     DPTR,#TradeLog+03H
806218 A51280079F        ECALL   ?C?OFFXADD
80621D E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 191


80621E FF                MOV     R7,A
80621F A3                INC     DPTR
806220 E0                MOVX    A,@DPTR
806221 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806224 CF                XCH     A,R7
806225 F0                MOVX    @DPTR,A
806226 A3                INC     DPTR
806227 EF                MOV     A,R7
806228 F0                MOVX    @DPTR,A
806229 D001              POP     AR1
80622B D002              POP     AR2
80622D D003              POP     AR3
80622F A512800949        ECALL   _sprintf
  217: 			len = LenOfNum( TradeLog[iArrayIndex].DoubtTraceSum  );			
806234 901736            MOV     DPTR,#iArrayIndex
806237 E0                MOVX    A,@DPTR
806238 75F009            MOV     B,#09H
80623B 9001C8            MOV     DPTR,#TradeLog+03H
80623E         
80623E A51280079F        ECALL   ?C?OFFXADD
806243 E0                MOVX    A,@DPTR
806244 FE                MOV     R6,A
806245 A3                INC     DPTR
806246 E0                MOVX    A,@DPTR
806247 FF                MOV     R7,A
806248 E4                CLR     A
806249 FC                MOV     R4,A
80624A FD                MOV     R5,A
80624B A51280CEC9        ECALL   _LenOfNum
806250 901737            MOV     DPTR,#len
806253 EF                MOV     A,R7
806254 F0                MOVX    @DPTR,A
  218: 		break;
  219: 	}	
806255         ?C0014?COUNTERMAINT:
  220:     DisplayStr( 0, y, 1, line,  GoodsWayListStr[iIndex].len + len );	
806255 901735            MOV     DPTR,#y
806258 E0                MOVX    A,@DPTR
806259 FD                MOV     R5,A
80625A D21A              SETB    ?_DisplayStr?BIT
80625C 7B00              MOV     R3,#?C?XDATASEG
80625E 7A17              MOV     R2,#HIGH line
806260 7938              MOV     R1,#LOW line
806262 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
806265 A5128007B6        ECALL   ?C?PSTXDATA
80626A 901734            MOV     DPTR,#iIndex
80626D E0                MOVX    A,@DPTR
80626E 25E0              ADD     A,ACC
806270 25E0              ADD     A,ACC
806272 2421              ADD     A,#LOW GoodsWayListStr+03H
806274 F582              MOV     DPL,A
806276 E4                CLR     A
806277 3413              ADDC    A,#HIGH GoodsWayListStr+03H
806279 F583              MOV     DPH,A
80627B E4                CLR     A
80627C 93                MOVC    A,@A+DPTR
80627D FF                MOV     R7,A
80627E 901737            MOV     DPTR,#len
806281 E0                MOVX    A,@DPTR
806282 FE                MOV     R6,A
806283 EF                MOV     A,R7
806284 2E                ADD     A,R6
806285 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
806288 F0                MOVX    @DPTR,A
806289 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 192


80628A FF                MOV     R7,A
80628B A502808062        EJMP    _DisplayStr
----- FUNCTION _DispGoodsWayList (END) -------


----- FUNCTION ?L?COM002F (BEGIN) -----
806290 90172A            MOV     DPTR,#firstNum
806293 E0                MOVX    A,@DPTR
806294 FD                MOV     R5,A
806295 7F01              MOV     R7,#01H
----- FUNCTION _DispCurrencyList (BEGIN) -----
 FILE: 'countermaint.c'
  431: void DispCurrencyList( u_char yPos, u_char iIndex )
  432: {
806297 90172D            MOV     DPTR,#yPos
80629A EF                MOV     A,R7
80629B F0                MOVX    @DPTR,A
80629C A3                INC     DPTR
80629D ED                MOV     A,R5
80629E F0                MOVX    @DPTR,A
  433: 	u_char xdata len = 0; 
  434: 	u_char xdata line[26];	
80629F E4                CLR     A
8062A0 A3                INC     DPTR
8062A1 F0                MOVX    @DPTR,A
  435: 	
  436: 	memset( line, 0, sizeof( line ) );		
8062A2 FE                MOV     R6,A
8062A3 7F1A              MOV     R7,#01AH
8062A5 FD                MOV     R5,A
8062A6 7B00              MOV     R3,#?C?XDATASEG
8062A8 7A17              MOV     R2,#HIGH line
8062AA 7930              MOV     R1,#LOW line
8062AC A5128008A6        ECALL   ?C?MEMSET
  437: 	memcpy( line, CurrencyMenuStr[iIndex].str, CurrencyMenuStr[iIndex].len );
8062B1 90172E            MOV     DPTR,#iIndex
8062B4 E0                MOVX    A,@DPTR
8062B5 FF                MOV     R7,A
8062B6 25E0              ADD     A,ACC
8062B8 25E0              ADD     A,ACC
8062BA 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8062BC F582              MOV     DPL,A
8062BE E4                CLR     A
8062BF 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8062C1 F583              MOV     DPH,A
8062C3 E4                CLR     A
8062C4 93                MOVC    A,@A+DPTR
8062C5 FD                MOV     R5,A
8062C6 7C00              MOV     R4,#00H
8062C8 C004              PUSH    AR4
8062CA C005              PUSH    AR5
8062CC EF                MOV     A,R7
8062CD 25E0              ADD     A,ACC
8062CF 25E0              ADD     A,ACC
8062D1 24E6              ADD     A,#LOW CurrencyMenuStr
8062D3 F582              MOV     DPL,A
8062D5 E4                CLR     A
8062D6 3412              ADDC    A,#HIGH CurrencyMenuStr
8062D8 F583              MOV     DPH,A
8062DA A5128007C0        ECALL   ?C?PLDCODE
8062DF 7830              MOV     R0,#LOW line
8062E1 7C17              MOV     R4,#HIGH line
8062E3 7D00              MOV     R5,#?C?XDATASEG
8062E5 D007              POP     AR7
8062E7 D006              POP     AR6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 193


8062E9 A51280052D        ECALL   ?C?COPY
  438: 	len = CurrencyMenuStr[iIndex].len;
8062EE 90172E            MOV     DPTR,#iIndex
8062F1 E0                MOVX    A,@DPTR
8062F2 FF                MOV     R7,A
8062F3 25E0              ADD     A,ACC
8062F5 25E0              ADD     A,ACC
8062F7 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8062F9 F582              MOV     DPL,A
8062FB E4                CLR     A
8062FC 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8062FE F583              MOV     DPH,A
806300 E4                CLR     A
806301 93                MOVC    A,@A+DPTR
806302 90172F            MOV     DPTR,#len
806305 F0                MOVX    @DPTR,A
  439: 	switch( iIndex )
806306 EF                MOV     A,R7
806307 A5128007CD        ECALL   ?C?CCASEX
80630C 6331              DW      ?C0075?COUNTERMAINT
80630E 00                DB      00H
80630F 6416              DW      ?C0080?COUNTERMAINT
806311 01                DB      01H
806312 653B              DW      ?C0085?COUNTERMAINT
806314 02                DB      02H
806315 6660              DW      ?C0090?COUNTERMAINT
806317 03                DB      03H
806318 6785              DW      ?C0095?COUNTERMAINT
80631A 04                DB      04H
80631B 68AA              DW      ?C0100?COUNTERMAINT
80631D 05                DB      05H
80631E 69CF              DW      ?C0105?COUNTERMAINT
806320 06                DB      06H
806321 6AF4              DW      ?C0110?COUNTERMAINT
806323 07                DB      07H
806324 6C4F              DW      ?C0115?COUNTERMAINT
806326 08                DB      08H
806327 6C91              DW      ?C0116?COUNTERMAINT
806329 09                DB      09H
80632A 6CD2              DW      ?C0117?COUNTERMAINT
80632C 0A                DB      0AH
80632D 0000              DW      00H
80632F 6D22              DW      ?C0074?COUNTERMAINT
  440: 	{
  441: 		case 0://收入总金额	
806331         ?C0075?COUNTERMAINT:
  442: 			switch( SystemParameter.curUnit )		
806331 900466            MOV     DPTR,#SystemParameter+048H
806334 E0                MOVX    A,@DPTR
806335 FE                MOV     R6,A
806336 A3                INC     DPTR
806337 E0                MOVX    A,@DPTR
806338 FF                MOV     R7,A
806339 EE                MOV     A,R6
80633A 6003              JZ      $ + 5H
80633C 026D22            LJMP    ?C0074?COUNTERMAINT
80633F EF                MOV     A,R7
806340 24F6              ADD     A,#0F6H
806342 6041              JZ      ?C0078?COUNTERMAINT
806344 24A6              ADD     A,#0A6H
806346 6067              JZ      ?C0079?COUNTERMAINT
806348 2463              ADD     A,#063H
80634A 6003              JZ      $ + 5H
80634C 026D22            LJMP    ?C0074?COUNTERMAINT
  443: 			{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 194


  444: 				case 1:
80634F         ?C0077?COUNTERMAINT:
  445: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.TrueCurrencySum );
80634F 90172E            MOV     DPTR,#iIndex
806352 E0                MOVX    A,@DPTR
806353 25E0              ADD     A,ACC
806355 25E0              ADD     A,ACC
806357 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806359 F582              MOV     DPL,A
80635B E4                CLR     A
80635C 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80635E F583              MOV     DPH,A
806360 E4                CLR     A
806361 93                MOVC    A,@A+DPTR
806362 2430              ADD     A,#LOW line
806364 F9                MOV     R1,A
806365 E4                CLR     A
806366 3417              ADDC    A,#HIGH line
806368 FA                MOV     R2,A
806369 7B00              MOV     R3,#?C?XDATASEG
80636B C003              PUSH    AR3
80636D C002              PUSH    AR2
80636F C001              PUSH    AR1
806371 7B80              MOV     R3,#BYTE2 08012C4H
806373 7A12              MOV     R2,#HIGH 08012C4H
806375 79C4              MOV     R1,#LOW 08012C4H
806377 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80637A A5128007B6        ECALL   ?C?PSTXDATA
80637F 900AEC            MOV     DPTR,#TradeCounter
  446: 				break;
806382 026B48            LJMP    ?C0195?COUNTERMAINT
  447: 				case 10:
806385         ?C0078?COUNTERMAINT:
  448: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.TrueCurrencySum/SystemParameter.
>> curUnit, TradeCounter.TrueCurrencySum%SystemParameter.curUnit );
806385 90172E            MOV     DPTR,#iIndex
806388 E0                MOVX    A,@DPTR
806389 25E0              ADD     A,ACC
80638B 25E0              ADD     A,ACC
80638D 24E9              ADD     A,#LOW CurrencyMenuStr+03H
80638F F582              MOV     DPL,A
806391 E4                CLR     A
806392 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806394 F583              MOV     DPH,A
806396 E4                CLR     A
806397 93                MOVC    A,@A+DPTR
806398 2430              ADD     A,#LOW line
80639A F9                MOV     R1,A
80639B E4                CLR     A
80639C 3417              ADDC    A,#HIGH line
80639E FA                MOV     R2,A
80639F 7B00              MOV     R3,#?C?XDATASEG
8063A1 C003              PUSH    AR3
8063A3 C002              PUSH    AR2
8063A5 C001              PUSH    AR1
8063A7 7B80              MOV     R3,#BYTE2 08012C8H
8063A9 7A12              MOV     R2,#HIGH 08012C8H
8063AB 79C8              MOV     R1,#LOW 08012C8H
  449: 				break;
8063AD 8028              SJMP    ?C0178?COUNTERMAINT
  450: 				case 100:
8063AF         ?C0079?COUNTERMAINT:
  451: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.TrueCurrencySum/SystemParamete
>> r.curUnit, TradeCounter.TrueCurrencySum%SystemParameter.curUnit );
8063AF 90172E            MOV     DPTR,#iIndex
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 195


8063B2 E0                MOVX    A,@DPTR
8063B3 25E0              ADD     A,ACC
8063B5 25E0              ADD     A,ACC
8063B7 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8063B9 F582              MOV     DPL,A
8063BB E4                CLR     A
8063BC 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8063BE F583              MOV     DPH,A
8063C0 E4                CLR     A
8063C1 93                MOVC    A,@A+DPTR
8063C2 2430              ADD     A,#LOW line
8063C4 F9                MOV     R1,A
8063C5 E4                CLR     A
8063C6 3417              ADDC    A,#HIGH line
8063C8 FA                MOV     R2,A
8063C9 7B00              MOV     R3,#?C?XDATASEG
8063CB C003              PUSH    AR3
8063CD C002              PUSH    AR2
8063CF C001              PUSH    AR1
8063D1 7B80              MOV     R3,#BYTE2 08012D0H
8063D3 7A12              MOV     R2,#HIGH 08012D0H
8063D5 79D0              MOV     R1,#LOW 08012D0H
8063D7         
8063D7 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8063DA A5128007B6        ECALL   ?C?PSTXDATA
8063DF 900466            MOV     DPTR,#SystemParameter+048H
8063E2 E0                MOVX    A,@DPTR
8063E3 FE                MOV     R6,A
8063E4 A3                INC     DPTR
8063E5 E0                MOVX    A,@DPTR
8063E6 FF                MOV     R7,A
8063E7 FB                MOV     R3,A
8063E8 AA06              MOV     R2,AR6
8063EA E4                CLR     A
8063EB F9                MOV     R1,A
8063EC F8                MOV     R0,A
8063ED 900AEC            MOV     DPTR,#TradeCounter
8063F0 A512800720        ECALL   ?C?LLDXDATA
8063F5 A512800679        ECALL   ?C?ULDIV
8063FA 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8063FD A512800792        ECALL   ?C?LSTXDATA
806402 900466            MOV     DPTR,#SystemParameter+048H
806405 E0                MOVX    A,@DPTR
806406 FE                MOV     R6,A
806407 A3                INC     DPTR
806408 E0                MOVX    A,@DPTR
806409 FF                MOV     R7,A
80640A FB                MOV     R3,A
80640B AA06              MOV     R2,AR6
80640D E4                CLR     A
80640E F9                MOV     R1,A
80640F F8                MOV     R0,A
806410 900AEC            MOV     DPTR,#TradeCounter
  452: 				break;
806413 026BB7            LJMP    ?C0197?COUNTERMAINT
  453: 			}			
  454: 		break;
  455: 		case 1://收入纸币总金额			
806416         ?C0080?COUNTERMAINT:
  456: 			switch( SystemParameter.curUnit )		
806416 900466            MOV     DPTR,#SystemParameter+048H
806419 E0                MOVX    A,@DPTR
80641A FE                MOV     R6,A
80641B A3                INC     DPTR
80641C E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 196


80641D FF                MOV     R7,A
80641E EE                MOV     A,R6
80641F 6003              JZ      $ + 5H
806421 026D22            LJMP    ?C0074?COUNTERMAINT
806424 EF                MOV     A,R7
806425 24F6              ADD     A,#0F6H
806427 6044              JZ      ?C0083?COUNTERMAINT
806429 24A6              ADD     A,#0A6H
80642B 7003              JNZ     $ + 5H
80642D 0264D4            LJMP    ?C0084?COUNTERMAINT
806430 2463              ADD     A,#063H
806432 6003              JZ      $ + 5H
806434 026D22            LJMP    ?C0074?COUNTERMAINT
  457: 			{
  458: 				case 1:
806437         ?C0082?COUNTERMAINT:
  459: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.CashSum );
806437 90172E            MOV     DPTR,#iIndex
80643A E0                MOVX    A,@DPTR
80643B 25E0              ADD     A,ACC
80643D 25E0              ADD     A,ACC
80643F 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806441 F582              MOV     DPL,A
806443 E4                CLR     A
806444 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806446 F583              MOV     DPH,A
806448 E4                CLR     A
806449 93                MOVC    A,@A+DPTR
80644A 2430              ADD     A,#LOW line
80644C F9                MOV     R1,A
80644D E4                CLR     A
80644E 3417              ADDC    A,#HIGH line
806450 FA                MOV     R2,A
806451 7B00              MOV     R3,#?C?XDATASEG
806453 C003              PUSH    AR3
806455 C002              PUSH    AR2
806457 C001              PUSH    AR1
806459 7B80              MOV     R3,#BYTE2 08012C4H
80645B 7A12              MOV     R2,#HIGH 08012C4H
80645D 79C4              MOV     R1,#LOW 08012C4H
80645F 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806462 A5128007B6        ECALL   ?C?PSTXDATA
806467 900AF0            MOV     DPTR,#TradeCounter+04H
80646A         
  460: 				break;
80646A 026B48            LJMP    ?C0195?COUNTERMAINT
  461: 				case 10:
80646D         ?C0083?COUNTERMAINT:
  462: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.CashSum/SystemParameter.curUnit,
>>  TradeCounter.CashSum%SystemParameter.curUnit );
80646D 90172E            MOV     DPTR,#iIndex
806470 E0                MOVX    A,@DPTR
806471 25E0              ADD     A,ACC
806473 25E0              ADD     A,ACC
806475 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806477 F582              MOV     DPL,A
806479 E4                CLR     A
80647A 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80647C F583              MOV     DPH,A
80647E E4                CLR     A
80647F 93                MOVC    A,@A+DPTR
806480 2430              ADD     A,#LOW line
806482 F9                MOV     R1,A
806483 E4                CLR     A
806484 3417              ADDC    A,#HIGH line
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 197


806486 FA                MOV     R2,A
806487 7B00              MOV     R3,#?C?XDATASEG
806489 C003              PUSH    AR3
80648B C002              PUSH    AR2
80648D C001              PUSH    AR1
80648F 7B80              MOV     R3,#BYTE2 08012C8H
806491 7A12              MOV     R2,#HIGH 08012C8H
806493 79C8              MOV     R1,#LOW 08012C8H
806495 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806498 A5128007B6        ECALL   ?C?PSTXDATA
80649D 900466            MOV     DPTR,#SystemParameter+048H
8064A0 E0                MOVX    A,@DPTR
8064A1 FE                MOV     R6,A
8064A2 A3                INC     DPTR
8064A3 E0                MOVX    A,@DPTR
8064A4 FF                MOV     R7,A
8064A5 FB                MOV     R3,A
8064A6 AA06              MOV     R2,AR6
8064A8 E4                CLR     A
8064A9 F9                MOV     R1,A
8064AA F8                MOV     R0,A
8064AB 900AF0            MOV     DPTR,#TradeCounter+04H
8064AE A512800720        ECALL   ?C?LLDXDATA
8064B3 A512800679        ECALL   ?C?ULDIV
8064B8 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8064BB A512800792        ECALL   ?C?LSTXDATA
8064C0 900466            MOV     DPTR,#SystemParameter+048H
8064C3 E0                MOVX    A,@DPTR
8064C4 FE                MOV     R6,A
8064C5 A3                INC     DPTR
8064C6 E0                MOVX    A,@DPTR
8064C7 FF                MOV     R7,A
8064C8 FB                MOV     R3,A
8064C9 AA06              MOV     R2,AR6
8064CB E4                CLR     A
8064CC F9                MOV     R1,A
8064CD F8                MOV     R0,A
8064CE 900AF0            MOV     DPTR,#TradeCounter+04H
8064D1         
  463: 				break;
8064D1 026BB7            LJMP    ?C0197?COUNTERMAINT
  464: 				case 100:
8064D4         ?C0084?COUNTERMAINT:
  465: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.CashSum/SystemParameter.curUni
>> t, TradeCounter.CashSum%SystemParameter.curUnit );
8064D4 90172E            MOV     DPTR,#iIndex
8064D7 E0                MOVX    A,@DPTR
8064D8 25E0              ADD     A,ACC
8064DA 25E0              ADD     A,ACC
8064DC 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8064DE F582              MOV     DPL,A
8064E0 E4                CLR     A
8064E1 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8064E3 F583              MOV     DPH,A
8064E5 E4                CLR     A
8064E6 93                MOVC    A,@A+DPTR
8064E7 2430              ADD     A,#LOW line
8064E9 F9                MOV     R1,A
8064EA E4                CLR     A
8064EB 3417              ADDC    A,#HIGH line
8064ED FA                MOV     R2,A
8064EE 7B00              MOV     R3,#?C?XDATASEG
8064F0 C003              PUSH    AR3
8064F2 C002              PUSH    AR2
8064F4 C001              PUSH    AR1
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 198


8064F6 7B80              MOV     R3,#BYTE2 08012D0H
8064F8 7A12              MOV     R2,#HIGH 08012D0H
8064FA 79D0              MOV     R1,#LOW 08012D0H
8064FC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8064FF A5128007B6        ECALL   ?C?PSTXDATA
806504 900466            MOV     DPTR,#SystemParameter+048H
806507 E0                MOVX    A,@DPTR
806508 FE                MOV     R6,A
806509 A3                INC     DPTR
80650A E0                MOVX    A,@DPTR
80650B FF                MOV     R7,A
80650C FB                MOV     R3,A
80650D AA06              MOV     R2,AR6
80650F E4                CLR     A
806510 F9                MOV     R1,A
806511 F8                MOV     R0,A
806512 900AF0            MOV     DPTR,#TradeCounter+04H
806515 A512800720        ECALL   ?C?LLDXDATA
80651A A512800679        ECALL   ?C?ULDIV
80651F 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806522 A512800792        ECALL   ?C?LSTXDATA
806527 900466            MOV     DPTR,#SystemParameter+048H
80652A E0                MOVX    A,@DPTR
80652B FE                MOV     R6,A
80652C A3                INC     DPTR
80652D E0                MOVX    A,@DPTR
80652E FF                MOV     R7,A
80652F FB                MOV     R3,A
806530 AA06              MOV     R2,AR6
806532 E4                CLR     A
806533 F9                MOV     R1,A
806534 F8                MOV     R0,A
806535 900AF0            MOV     DPTR,#TradeCounter+04H
806538         
  466: 				break;
806538 026BB7            LJMP    ?C0197?COUNTERMAINT
  467: 			}		
  468: 		break;
  469: 		case 2://收入硬总金额
80653B         ?C0085?COUNTERMAINT:
  470: 			switch( SystemParameter.curUnit )		
80653B 900466            MOV     DPTR,#SystemParameter+048H
80653E E0                MOVX    A,@DPTR
80653F FE                MOV     R6,A
806540 A3                INC     DPTR
806541 E0                MOVX    A,@DPTR
806542 FF                MOV     R7,A
806543 EE                MOV     A,R6
806544 6003              JZ      $ + 5H
806546 026D22            LJMP    ?C0074?COUNTERMAINT
806549 EF                MOV     A,R7
80654A 24F6              ADD     A,#0F6H
80654C 6044              JZ      ?C0088?COUNTERMAINT
80654E 24A6              ADD     A,#0A6H
806550 7003              JNZ     $ + 5H
806552 0265F9            LJMP    ?C0089?COUNTERMAINT
806555 2463              ADD     A,#063H
806557 6003              JZ      $ + 5H
806559 026D22            LJMP    ?C0074?COUNTERMAINT
  471: 			{
  472: 				case 1:
80655C         ?C0087?COUNTERMAINT:
  473: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.CoinSum );
80655C 90172E            MOV     DPTR,#iIndex
80655F E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 199


806560 25E0              ADD     A,ACC
806562 25E0              ADD     A,ACC
806564 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806566 F582              MOV     DPL,A
806568 E4                CLR     A
806569 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80656B F583              MOV     DPH,A
80656D E4                CLR     A
80656E 93                MOVC    A,@A+DPTR
80656F 2430              ADD     A,#LOW line
806571 F9                MOV     R1,A
806572 E4                CLR     A
806573 3417              ADDC    A,#HIGH line
806575 FA                MOV     R2,A
806576 7B00              MOV     R3,#?C?XDATASEG
806578 C003              PUSH    AR3
80657A C002              PUSH    AR2
80657C C001              PUSH    AR1
80657E 7B80              MOV     R3,#BYTE2 08012C4H
806580 7A12              MOV     R2,#HIGH 08012C4H
806582 79C4              MOV     R1,#LOW 08012C4H
806584 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806587 A5128007B6        ECALL   ?C?PSTXDATA
80658C 900AF4            MOV     DPTR,#TradeCounter+08H
80658F         
  474: 				break;
80658F 026B48            LJMP    ?C0195?COUNTERMAINT
  475: 				case 10:
806592         ?C0088?COUNTERMAINT:
  476: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.CoinSum/SystemParameter.curUnit,
>>  TradeCounter.CoinSum%SystemParameter.curUnit );
806592 90172E            MOV     DPTR,#iIndex
806595 E0                MOVX    A,@DPTR
806596 25E0              ADD     A,ACC
806598 25E0              ADD     A,ACC
80659A 24E9              ADD     A,#LOW CurrencyMenuStr+03H
80659C F582              MOV     DPL,A
80659E E4                CLR     A
80659F 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8065A1 F583              MOV     DPH,A
8065A3 E4                CLR     A
8065A4 93                MOVC    A,@A+DPTR
8065A5 2430              ADD     A,#LOW line
8065A7 F9                MOV     R1,A
8065A8 E4                CLR     A
8065A9 3417              ADDC    A,#HIGH line
8065AB FA                MOV     R2,A
8065AC 7B00              MOV     R3,#?C?XDATASEG
8065AE C003              PUSH    AR3
8065B0 C002              PUSH    AR2
8065B2 C001              PUSH    AR1
8065B4 7B80              MOV     R3,#BYTE2 08012C8H
8065B6 7A12              MOV     R2,#HIGH 08012C8H
8065B8 79C8              MOV     R1,#LOW 08012C8H
8065BA 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8065BD A5128007B6        ECALL   ?C?PSTXDATA
8065C2 900466            MOV     DPTR,#SystemParameter+048H
8065C5 E0                MOVX    A,@DPTR
8065C6 FE                MOV     R6,A
8065C7 A3                INC     DPTR
8065C8 E0                MOVX    A,@DPTR
8065C9 FF                MOV     R7,A
8065CA FB                MOV     R3,A
8065CB AA06              MOV     R2,AR6
8065CD E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 200


8065CE F9                MOV     R1,A
8065CF F8                MOV     R0,A
8065D0 900AF4            MOV     DPTR,#TradeCounter+08H
8065D3 A512800720        ECALL   ?C?LLDXDATA
8065D8 A512800679        ECALL   ?C?ULDIV
8065DD 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8065E0 A512800792        ECALL   ?C?LSTXDATA
8065E5 900466            MOV     DPTR,#SystemParameter+048H
8065E8 E0                MOVX    A,@DPTR
8065E9 FE                MOV     R6,A
8065EA A3                INC     DPTR
8065EB E0                MOVX    A,@DPTR
8065EC FF                MOV     R7,A
8065ED FB                MOV     R3,A
8065EE AA06              MOV     R2,AR6
8065F0 E4                CLR     A
8065F1 F9                MOV     R1,A
8065F2 F8                MOV     R0,A
8065F3 900AF4            MOV     DPTR,#TradeCounter+08H
8065F6         
  477: 				break;
8065F6 026BB7            LJMP    ?C0197?COUNTERMAINT
  478: 				case 100:
8065F9         ?C0089?COUNTERMAINT:
  479: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.CoinSum/SystemParameter.curUni
>> t, TradeCounter.CoinSum%SystemParameter.curUnit );
8065F9 90172E            MOV     DPTR,#iIndex
8065FC E0                MOVX    A,@DPTR
8065FD 25E0              ADD     A,ACC
8065FF 25E0              ADD     A,ACC
806601 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806603 F582              MOV     DPL,A
806605 E4                CLR     A
806606 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806608 F583              MOV     DPH,A
80660A E4                CLR     A
80660B 93                MOVC    A,@A+DPTR
80660C 2430              ADD     A,#LOW line
80660E F9                MOV     R1,A
80660F E4                CLR     A
806610 3417              ADDC    A,#HIGH line
806612 FA                MOV     R2,A
806613 7B00              MOV     R3,#?C?XDATASEG
806615 C003              PUSH    AR3
806617 C002              PUSH    AR2
806619 C001              PUSH    AR1
80661B 7B80              MOV     R3,#BYTE2 08012D0H
80661D 7A12              MOV     R2,#HIGH 08012D0H
80661F 79D0              MOV     R1,#LOW 08012D0H
806621 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806624 A5128007B6        ECALL   ?C?PSTXDATA
806629 900466            MOV     DPTR,#SystemParameter+048H
80662C E0                MOVX    A,@DPTR
80662D FE                MOV     R6,A
80662E A3                INC     DPTR
80662F E0                MOVX    A,@DPTR
806630 FF                MOV     R7,A
806631 FB                MOV     R3,A
806632 AA06              MOV     R2,AR6
806634 E4                CLR     A
806635 F9                MOV     R1,A
806636 F8                MOV     R0,A
806637 900AF4            MOV     DPTR,#TradeCounter+08H
80663A A512800720        ECALL   ?C?LLDXDATA
80663F A512800679        ECALL   ?C?ULDIV
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 201


806644 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806647 A512800792        ECALL   ?C?LSTXDATA
80664C 900466            MOV     DPTR,#SystemParameter+048H
80664F E0                MOVX    A,@DPTR
806650 FE                MOV     R6,A
806651 A3                INC     DPTR
806652 E0                MOVX    A,@DPTR
806653 FF                MOV     R7,A
806654 FB                MOV     R3,A
806655 AA06              MOV     R2,AR6
806657 E4                CLR     A
806658 F9                MOV     R1,A
806659 F8                MOV     R0,A
80665A 900AF4            MOV     DPTR,#TradeCounter+08H
80665D         
  480: 				break;
80665D 026BB7            LJMP    ?C0197?COUNTERMAINT
  481: 			}
  482: 		break;
  483: 		case 3://交易总金额			
806660         ?C0090?COUNTERMAINT:
  484: 			switch( SystemParameter.curUnit )		
806660 900466            MOV     DPTR,#SystemParameter+048H
806663 E0                MOVX    A,@DPTR
806664 FE                MOV     R6,A
806665 A3                INC     DPTR
806666 E0                MOVX    A,@DPTR
806667 FF                MOV     R7,A
806668 EE                MOV     A,R6
806669 6003              JZ      $ + 5H
80666B 026D22            LJMP    ?C0074?COUNTERMAINT
80666E EF                MOV     A,R7
80666F 24F6              ADD     A,#0F6H
806671 6044              JZ      ?C0093?COUNTERMAINT
806673 24A6              ADD     A,#0A6H
806675 7003              JNZ     $ + 5H
806677 02671E            LJMP    ?C0094?COUNTERMAINT
80667A 2463              ADD     A,#063H
80667C 6003              JZ      $ + 5H
80667E 026D22            LJMP    ?C0074?COUNTERMAINT
  485: 			{
  486: 				case 1:
806681         ?C0092?COUNTERMAINT:
  487: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.TradeCurrencySum );
806681 90172E            MOV     DPTR,#iIndex
806684 E0                MOVX    A,@DPTR
806685 25E0              ADD     A,ACC
806687 25E0              ADD     A,ACC
806689 24E9              ADD     A,#LOW CurrencyMenuStr+03H
80668B F582              MOV     DPL,A
80668D E4                CLR     A
80668E 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806690 F583              MOV     DPH,A
806692 E4                CLR     A
806693 93                MOVC    A,@A+DPTR
806694 2430              ADD     A,#LOW line
806696 F9                MOV     R1,A
806697 E4                CLR     A
806698 3417              ADDC    A,#HIGH line
80669A FA                MOV     R2,A
80669B 7B00              MOV     R3,#?C?XDATASEG
80669D C003              PUSH    AR3
80669F C002              PUSH    AR2
8066A1 C001              PUSH    AR1
8066A3 7B80              MOV     R3,#BYTE2 08012C4H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 202


8066A5 7A12              MOV     R2,#HIGH 08012C4H
8066A7 79C4              MOV     R1,#LOW 08012C4H
8066A9 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8066AC A5128007B6        ECALL   ?C?PSTXDATA
8066B1 900AF8            MOV     DPTR,#TradeCounter+0CH
8066B4         
  488: 				break;
8066B4 026B48            LJMP    ?C0195?COUNTERMAINT
  489: 				case 10:
8066B7         ?C0093?COUNTERMAINT:
  490: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.TradeCurrencySum/SystemParameter
>> .curUnit, TradeCounter.TradeCurrencySum%SystemParameter.curUnit );
8066B7 90172E            MOV     DPTR,#iIndex
8066BA E0                MOVX    A,@DPTR
8066BB 25E0              ADD     A,ACC
8066BD 25E0              ADD     A,ACC
8066BF 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8066C1 F582              MOV     DPL,A
8066C3 E4                CLR     A
8066C4 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8066C6 F583              MOV     DPH,A
8066C8 E4                CLR     A
8066C9 93                MOVC    A,@A+DPTR
8066CA 2430              ADD     A,#LOW line
8066CC F9                MOV     R1,A
8066CD E4                CLR     A
8066CE 3417              ADDC    A,#HIGH line
8066D0 FA                MOV     R2,A
8066D1 7B00              MOV     R3,#?C?XDATASEG
8066D3 C003              PUSH    AR3
8066D5 C002              PUSH    AR2
8066D7 C001              PUSH    AR1
8066D9 7B80              MOV     R3,#BYTE2 08012C8H
8066DB 7A12              MOV     R2,#HIGH 08012C8H
8066DD 79C8              MOV     R1,#LOW 08012C8H
8066DF 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8066E2 A5128007B6        ECALL   ?C?PSTXDATA
8066E7 900466            MOV     DPTR,#SystemParameter+048H
8066EA E0                MOVX    A,@DPTR
8066EB FE                MOV     R6,A
8066EC A3                INC     DPTR
8066ED E0                MOVX    A,@DPTR
8066EE FF                MOV     R7,A
8066EF FB                MOV     R3,A
8066F0 AA06              MOV     R2,AR6
8066F2 E4                CLR     A
8066F3 F9                MOV     R1,A
8066F4 F8                MOV     R0,A
8066F5 900AF8            MOV     DPTR,#TradeCounter+0CH
8066F8 A512800720        ECALL   ?C?LLDXDATA
8066FD A512800679        ECALL   ?C?ULDIV
806702 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806705 A512800792        ECALL   ?C?LSTXDATA
80670A 900466            MOV     DPTR,#SystemParameter+048H
80670D E0                MOVX    A,@DPTR
80670E FE                MOV     R6,A
80670F A3                INC     DPTR
806710 E0                MOVX    A,@DPTR
806711 FF                MOV     R7,A
806712 FB                MOV     R3,A
806713 AA06              MOV     R2,AR6
806715 E4                CLR     A
806716 F9                MOV     R1,A
806717 F8                MOV     R0,A
806718 900AF8            MOV     DPTR,#TradeCounter+0CH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 203


80671B         
  491: 				break;
80671B 026BB7            LJMP    ?C0197?COUNTERMAINT
  492: 				case 100:
80671E         ?C0094?COUNTERMAINT:
  493: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.TradeCurrencySum/SystemParamet
>> er.curUnit, TradeCounter.TradeCurrencySum%SystemParameter.curUnit );
80671E 90172E            MOV     DPTR,#iIndex
806721 E0                MOVX    A,@DPTR
806722 25E0              ADD     A,ACC
806724 25E0              ADD     A,ACC
806726 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806728 F582              MOV     DPL,A
80672A E4                CLR     A
80672B 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
80672D F583              MOV     DPH,A
80672F E4                CLR     A
806730 93                MOVC    A,@A+DPTR
806731 2430              ADD     A,#LOW line
806733 F9                MOV     R1,A
806734 E4                CLR     A
806735 3417              ADDC    A,#HIGH line
806737 FA                MOV     R2,A
806738 7B00              MOV     R3,#?C?XDATASEG
80673A C003              PUSH    AR3
80673C C002              PUSH    AR2
80673E C001              PUSH    AR1
806740 7B80              MOV     R3,#BYTE2 08012D0H
806742 7A12              MOV     R2,#HIGH 08012D0H
806744 79D0              MOV     R1,#LOW 08012D0H
806746 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806749 A5128007B6        ECALL   ?C?PSTXDATA
80674E 900466            MOV     DPTR,#SystemParameter+048H
806751 E0                MOVX    A,@DPTR
806752 FE                MOV     R6,A
806753 A3                INC     DPTR
806754 E0                MOVX    A,@DPTR
806755 FF                MOV     R7,A
806756 FB                MOV     R3,A
806757 AA06              MOV     R2,AR6
806759 E4                CLR     A
80675A F9                MOV     R1,A
80675B F8                MOV     R0,A
80675C 900AF8            MOV     DPTR,#TradeCounter+0CH
80675F A512800720        ECALL   ?C?LLDXDATA
806764 A512800679        ECALL   ?C?ULDIV
806769 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80676C A512800792        ECALL   ?C?LSTXDATA
806771 900466            MOV     DPTR,#SystemParameter+048H
806774 E0                MOVX    A,@DPTR
806775 FE                MOV     R6,A
806776 A3                INC     DPTR
806777 E0                MOVX    A,@DPTR
806778 FF                MOV     R7,A
806779 FB                MOV     R3,A
80677A AA06              MOV     R2,AR6
80677C E4                CLR     A
80677D F9                MOV     R1,A
80677E F8                MOV     R0,A
80677F 900AF8            MOV     DPTR,#TradeCounter+0CH
806782         
  494: 				break;
806782 026BB7            LJMP    ?C0197?COUNTERMAINT
  495: 			}
  496: 		break;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 204


  497: 		case 4://找出总金额			
806785         ?C0095?COUNTERMAINT:
  498: 			switch( SystemParameter.curUnit )		
806785 900466            MOV     DPTR,#SystemParameter+048H
806788 E0                MOVX    A,@DPTR
806789 FE                MOV     R6,A
80678A A3                INC     DPTR
80678B E0                MOVX    A,@DPTR
80678C FF                MOV     R7,A
80678D EE                MOV     A,R6
80678E 6003              JZ      $ + 5H
806790 026D22            LJMP    ?C0074?COUNTERMAINT
806793 EF                MOV     A,R7
806794 24F6              ADD     A,#0F6H
806796 6044              JZ      ?C0098?COUNTERMAINT
806798 24A6              ADD     A,#0A6H
80679A 7003              JNZ     $ + 5H
80679C 026843            LJMP    ?C0099?COUNTERMAINT
80679F 2463              ADD     A,#063H
8067A1 6003              JZ      $ + 5H
8067A3 026D22            LJMP    ?C0074?COUNTERMAINT
  499: 			{
  500: 				case 1:
8067A6         ?C0097?COUNTERMAINT:
  501: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.ChangeSum );
8067A6 90172E            MOV     DPTR,#iIndex
8067A9 E0                MOVX    A,@DPTR
8067AA 25E0              ADD     A,ACC
8067AC 25E0              ADD     A,ACC
8067AE 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8067B0 F582              MOV     DPL,A
8067B2 E4                CLR     A
8067B3 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8067B5 F583              MOV     DPH,A
8067B7 E4                CLR     A
8067B8 93                MOVC    A,@A+DPTR
8067B9 2430              ADD     A,#LOW line
8067BB F9                MOV     R1,A
8067BC E4                CLR     A
8067BD 3417              ADDC    A,#HIGH line
8067BF FA                MOV     R2,A
8067C0 7B00              MOV     R3,#?C?XDATASEG
8067C2 C003              PUSH    AR3
8067C4 C002              PUSH    AR2
8067C6 C001              PUSH    AR1
8067C8 7B80              MOV     R3,#BYTE2 08012C4H
8067CA 7A12              MOV     R2,#HIGH 08012C4H
8067CC 79C4              MOV     R1,#LOW 08012C4H
8067CE 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8067D1 A5128007B6        ECALL   ?C?PSTXDATA
8067D6 900B00            MOV     DPTR,#TradeCounter+014H
8067D9         
  502: 				break;
8067D9 026B48            LJMP    ?C0195?COUNTERMAINT
  503: 				case 10:
8067DC         ?C0098?COUNTERMAINT:
  504: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.ChangeSum/SystemParameter.curUni
>> t, TradeCounter.ChangeSum%SystemParameter.curUnit );
8067DC 90172E            MOV     DPTR,#iIndex
8067DF E0                MOVX    A,@DPTR
8067E0 25E0              ADD     A,ACC
8067E2 25E0              ADD     A,ACC
8067E4 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8067E6 F582              MOV     DPL,A
8067E8 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 205


8067E9 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8067EB F583              MOV     DPH,A
8067ED E4                CLR     A
8067EE 93                MOVC    A,@A+DPTR
8067EF 2430              ADD     A,#LOW line
8067F1 F9                MOV     R1,A
8067F2 E4                CLR     A
8067F3 3417              ADDC    A,#HIGH line
8067F5 FA                MOV     R2,A
8067F6 7B00              MOV     R3,#?C?XDATASEG
8067F8 C003              PUSH    AR3
8067FA C002              PUSH    AR2
8067FC C001              PUSH    AR1
8067FE 7B80              MOV     R3,#BYTE2 08012C8H
806800 7A12              MOV     R2,#HIGH 08012C8H
806802 79C8              MOV     R1,#LOW 08012C8H
806804 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806807 A5128007B6        ECALL   ?C?PSTXDATA
80680C 900466            MOV     DPTR,#SystemParameter+048H
80680F E0                MOVX    A,@DPTR
806810 FE                MOV     R6,A
806811 A3                INC     DPTR
806812 E0                MOVX    A,@DPTR
806813 FF                MOV     R7,A
806814 FB                MOV     R3,A
806815 AA06              MOV     R2,AR6
806817 E4                CLR     A
806818 F9                MOV     R1,A
806819 F8                MOV     R0,A
80681A 900B00            MOV     DPTR,#TradeCounter+014H
80681D A512800720        ECALL   ?C?LLDXDATA
806822 A512800679        ECALL   ?C?ULDIV
806827 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80682A A512800792        ECALL   ?C?LSTXDATA
80682F 900466            MOV     DPTR,#SystemParameter+048H
806832 E0                MOVX    A,@DPTR
806833 FE                MOV     R6,A
806834 A3                INC     DPTR
806835 E0                MOVX    A,@DPTR
806836 FF                MOV     R7,A
806837 FB                MOV     R3,A
806838 AA06              MOV     R2,AR6
80683A E4                CLR     A
80683B F9                MOV     R1,A
80683C F8                MOV     R0,A
80683D 900B00            MOV     DPTR,#TradeCounter+014H
806840         
  505: 				break;
806840 026BB7            LJMP    ?C0197?COUNTERMAINT
  506: 				case 100:
806843         ?C0099?COUNTERMAINT:
  507: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.ChangeSum/SystemParameter.curU
>> nit, TradeCounter.ChangeSum%SystemParameter.curUnit );
806843 90172E            MOV     DPTR,#iIndex
806846 E0                MOVX    A,@DPTR
806847 25E0              ADD     A,ACC
806849 25E0              ADD     A,ACC
80684B 24E9              ADD     A,#LOW CurrencyMenuStr+03H
80684D F582              MOV     DPL,A
80684F E4                CLR     A
806850 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806852 F583              MOV     DPH,A
806854 E4                CLR     A
806855 93                MOVC    A,@A+DPTR
806856 2430              ADD     A,#LOW line
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 206


806858 F9                MOV     R1,A
806859 E4                CLR     A
80685A 3417              ADDC    A,#HIGH line
80685C FA                MOV     R2,A
80685D 7B00              MOV     R3,#?C?XDATASEG
80685F C003              PUSH    AR3
806861 C002              PUSH    AR2
806863 C001              PUSH    AR1
806865 7B80              MOV     R3,#BYTE2 08012D0H
806867 7A12              MOV     R2,#HIGH 08012D0H
806869 79D0              MOV     R1,#LOW 08012D0H
80686B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80686E A5128007B6        ECALL   ?C?PSTXDATA
806873 900466            MOV     DPTR,#SystemParameter+048H
806876 E0                MOVX    A,@DPTR
806877 FE                MOV     R6,A
806878 A3                INC     DPTR
806879 E0                MOVX    A,@DPTR
80687A FF                MOV     R7,A
80687B FB                MOV     R3,A
80687C AA06              MOV     R2,AR6
80687E E4                CLR     A
80687F F9                MOV     R1,A
806880 F8                MOV     R0,A
806881 900B00            MOV     DPTR,#TradeCounter+014H
806884 A512800720        ECALL   ?C?LLDXDATA
806889 A512800679        ECALL   ?C?ULDIV
80688E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806891 A512800792        ECALL   ?C?LSTXDATA
806896 900466            MOV     DPTR,#SystemParameter+048H
806899 E0                MOVX    A,@DPTR
80689A FE                MOV     R6,A
80689B A3                INC     DPTR
80689C E0                MOVX    A,@DPTR
80689D FF                MOV     R7,A
80689E FB                MOV     R3,A
80689F AA06              MOV     R2,AR6
8068A1 E4                CLR     A
8068A2 F9                MOV     R1,A
8068A3 F8                MOV     R0,A
8068A4 900B00            MOV     DPTR,#TradeCounter+014H
8068A7         
  508: 				break;
8068A7 026BB7            LJMP    ?C0197?COUNTERMAINT
  509: 			}
  510: 		break;
  511: 		case 5://#1HOPPER出币总金额			
8068AA         ?C0100?COUNTERMAINT:
  512: 			switch( SystemParameter.curUnit )		
8068AA 900466            MOV     DPTR,#SystemParameter+048H
8068AD E0                MOVX    A,@DPTR
8068AE FE                MOV     R6,A
8068AF A3                INC     DPTR
8068B0 E0                MOVX    A,@DPTR
8068B1 FF                MOV     R7,A
8068B2 EE                MOV     A,R6
8068B3 6003              JZ      $ + 5H
8068B5 026D22            LJMP    ?C0074?COUNTERMAINT
8068B8 EF                MOV     A,R7
8068B9 24F6              ADD     A,#0F6H
8068BB 6044              JZ      ?C0103?COUNTERMAINT
8068BD 24A6              ADD     A,#0A6H
8068BF 7003              JNZ     $ + 5H
8068C1 026968            LJMP    ?C0104?COUNTERMAINT
8068C4 2463              ADD     A,#063H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 207


8068C6 6003              JZ      $ + 5H
8068C8 026D22            LJMP    ?C0074?COUNTERMAINT
  513: 			{
  514: 				case 1:
8068CB         ?C0102?COUNTERMAINT:
  515: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.Hopper1Sum );
8068CB 90172E            MOV     DPTR,#iIndex
8068CE E0                MOVX    A,@DPTR
8068CF 25E0              ADD     A,ACC
8068D1 25E0              ADD     A,ACC
8068D3 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8068D5 F582              MOV     DPL,A
8068D7 E4                CLR     A
8068D8 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8068DA F583              MOV     DPH,A
8068DC E4                CLR     A
8068DD 93                MOVC    A,@A+DPTR
8068DE 2430              ADD     A,#LOW line
8068E0 F9                MOV     R1,A
8068E1 E4                CLR     A
8068E2 3417              ADDC    A,#HIGH line
8068E4 FA                MOV     R2,A
8068E5 7B00              MOV     R3,#?C?XDATASEG
8068E7 C003              PUSH    AR3
8068E9 C002              PUSH    AR2
8068EB C001              PUSH    AR1
8068ED 7B80              MOV     R3,#BYTE2 08012C4H
8068EF 7A12              MOV     R2,#HIGH 08012C4H
8068F1 79C4              MOV     R1,#LOW 08012C4H
8068F3 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8068F6 A5128007B6        ECALL   ?C?PSTXDATA
8068FB 900B04            MOV     DPTR,#TradeCounter+018H
8068FE         
  516: 				break;
8068FE 026B48            LJMP    ?C0195?COUNTERMAINT
  517: 				case 10:
806901         ?C0103?COUNTERMAINT:
  518: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.Hopper1Sum/SystemParameter.curUn
>> it, TradeCounter.Hopper1Sum%SystemParameter.curUnit );
806901 90172E            MOV     DPTR,#iIndex
806904 E0                MOVX    A,@DPTR
806905 25E0              ADD     A,ACC
806907 25E0              ADD     A,ACC
806909 24E9              ADD     A,#LOW CurrencyMenuStr+03H
80690B F582              MOV     DPL,A
80690D E4                CLR     A
80690E 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806910 F583              MOV     DPH,A
806912 E4                CLR     A
806913 93                MOVC    A,@A+DPTR
806914 2430              ADD     A,#LOW line
806916 F9                MOV     R1,A
806917 E4                CLR     A
806918 3417              ADDC    A,#HIGH line
80691A FA                MOV     R2,A
80691B 7B00              MOV     R3,#?C?XDATASEG
80691D C003              PUSH    AR3
80691F C002              PUSH    AR2
806921 C001              PUSH    AR1
806923 7B80              MOV     R3,#BYTE2 08012C8H
806925 7A12              MOV     R2,#HIGH 08012C8H
806927 79C8              MOV     R1,#LOW 08012C8H
806929 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80692C A5128007B6        ECALL   ?C?PSTXDATA
806931 900466            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 208


806934 E0                MOVX    A,@DPTR
806935 FE                MOV     R6,A
806936 A3                INC     DPTR
806937 E0                MOVX    A,@DPTR
806938 FF                MOV     R7,A
806939 FB                MOV     R3,A
80693A AA06              MOV     R2,AR6
80693C E4                CLR     A
80693D F9                MOV     R1,A
80693E F8                MOV     R0,A
80693F 900B04            MOV     DPTR,#TradeCounter+018H
806942 A512800720        ECALL   ?C?LLDXDATA
806947 A512800679        ECALL   ?C?ULDIV
80694C 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80694F A512800792        ECALL   ?C?LSTXDATA
806954 900466            MOV     DPTR,#SystemParameter+048H
806957 E0                MOVX    A,@DPTR
806958 FE                MOV     R6,A
806959 A3                INC     DPTR
80695A E0                MOVX    A,@DPTR
80695B FF                MOV     R7,A
80695C FB                MOV     R3,A
80695D AA06              MOV     R2,AR6
80695F E4                CLR     A
806960 F9                MOV     R1,A
806961 F8                MOV     R0,A
806962 900B04            MOV     DPTR,#TradeCounter+018H
806965         
  519: 				break;
806965 026BB7            LJMP    ?C0197?COUNTERMAINT
  520: 				case 100:
806968         ?C0104?COUNTERMAINT:
  521: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.Hopper1Sum/SystemParameter.cur
>> Unit, TradeCounter.Hopper1Sum%SystemParameter.curUnit );
806968 90172E            MOV     DPTR,#iIndex
80696B E0                MOVX    A,@DPTR
80696C 25E0              ADD     A,ACC
80696E 25E0              ADD     A,ACC
806970 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806972 F582              MOV     DPL,A
806974 E4                CLR     A
806975 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806977 F583              MOV     DPH,A
806979 E4                CLR     A
80697A 93                MOVC    A,@A+DPTR
80697B 2430              ADD     A,#LOW line
80697D F9                MOV     R1,A
80697E E4                CLR     A
80697F 3417              ADDC    A,#HIGH line
806981 FA                MOV     R2,A
806982 7B00              MOV     R3,#?C?XDATASEG
806984 C003              PUSH    AR3
806986 C002              PUSH    AR2
806988 C001              PUSH    AR1
80698A 7B80              MOV     R3,#BYTE2 08012D0H
80698C 7A12              MOV     R2,#HIGH 08012D0H
80698E 79D0              MOV     R1,#LOW 08012D0H
806990 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806993 A5128007B6        ECALL   ?C?PSTXDATA
806998 900466            MOV     DPTR,#SystemParameter+048H
80699B E0                MOVX    A,@DPTR
80699C FE                MOV     R6,A
80699D A3                INC     DPTR
80699E E0                MOVX    A,@DPTR
80699F FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 209


8069A0 FB                MOV     R3,A
8069A1 AA06              MOV     R2,AR6
8069A3 E4                CLR     A
8069A4 F9                MOV     R1,A
8069A5 F8                MOV     R0,A
8069A6 900B04            MOV     DPTR,#TradeCounter+018H
8069A9 A512800720        ECALL   ?C?LLDXDATA
8069AE A512800679        ECALL   ?C?ULDIV
8069B3 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8069B6 A512800792        ECALL   ?C?LSTXDATA
8069BB 900466            MOV     DPTR,#SystemParameter+048H
8069BE E0                MOVX    A,@DPTR
8069BF FE                MOV     R6,A
8069C0 A3                INC     DPTR
8069C1 E0                MOVX    A,@DPTR
8069C2 FF                MOV     R7,A
8069C3 FB                MOV     R3,A
8069C4 AA06              MOV     R2,AR6
8069C6 E4                CLR     A
8069C7 F9                MOV     R1,A
8069C8 F8                MOV     R0,A
8069C9 900B04            MOV     DPTR,#TradeCounter+018H
8069CC         
  522: 				break;
8069CC 026BB7            LJMP    ?C0197?COUNTERMAINT
  523: 			}
  524: 		break;
  525: 		case 6://#2HOPPER出币总金额	
8069CF         ?C0105?COUNTERMAINT:
  526: 			switch( SystemParameter.curUnit )		
8069CF 900466            MOV     DPTR,#SystemParameter+048H
8069D2 E0                MOVX    A,@DPTR
8069D3 FE                MOV     R6,A
8069D4 A3                INC     DPTR
8069D5 E0                MOVX    A,@DPTR
8069D6 FF                MOV     R7,A
8069D7 EE                MOV     A,R6
8069D8 6003              JZ      $ + 5H
8069DA 026D22            LJMP    ?C0074?COUNTERMAINT
8069DD EF                MOV     A,R7
8069DE 24F6              ADD     A,#0F6H
8069E0 6044              JZ      ?C0108?COUNTERMAINT
8069E2 24A6              ADD     A,#0A6H
8069E4 7003              JNZ     $ + 5H
8069E6 026A8D            LJMP    ?C0109?COUNTERMAINT
8069E9 2463              ADD     A,#063H
8069EB 6003              JZ      $ + 5H
8069ED 026D22            LJMP    ?C0074?COUNTERMAINT
  527: 			{
  528: 				case 1:
8069F0         ?C0107?COUNTERMAINT:
  529: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.Hopper2Sum );
8069F0 90172E            MOV     DPTR,#iIndex
8069F3 E0                MOVX    A,@DPTR
8069F4 25E0              ADD     A,ACC
8069F6 25E0              ADD     A,ACC
8069F8 24E9              ADD     A,#LOW CurrencyMenuStr+03H
8069FA F582              MOV     DPL,A
8069FC E4                CLR     A
8069FD 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
8069FF F583              MOV     DPH,A
806A01 E4                CLR     A
806A02 93                MOVC    A,@A+DPTR
806A03 2430              ADD     A,#LOW line
806A05 F9                MOV     R1,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 210


806A06 E4                CLR     A
806A07 3417              ADDC    A,#HIGH line
806A09 FA                MOV     R2,A
806A0A 7B00              MOV     R3,#?C?XDATASEG
806A0C C003              PUSH    AR3
806A0E C002              PUSH    AR2
806A10 C001              PUSH    AR1
806A12 7B80              MOV     R3,#BYTE2 08012C4H
806A14 7A12              MOV     R2,#HIGH 08012C4H
806A16 79C4              MOV     R1,#LOW 08012C4H
806A18 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806A1B A5128007B6        ECALL   ?C?PSTXDATA
806A20 900B08            MOV     DPTR,#TradeCounter+01CH
806A23         
  530: 				break;
806A23 026B48            LJMP    ?C0195?COUNTERMAINT
  531: 				case 10:
806A26         ?C0108?COUNTERMAINT:
  532: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.Hopper2Sum/SystemParameter.curUn
>> it, TradeCounter.Hopper2Sum%SystemParameter.curUnit );
806A26 90172E            MOV     DPTR,#iIndex
806A29 E0                MOVX    A,@DPTR
806A2A 25E0              ADD     A,ACC
806A2C 25E0              ADD     A,ACC
806A2E 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806A30 F582              MOV     DPL,A
806A32 E4                CLR     A
806A33 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806A35 F583              MOV     DPH,A
806A37 E4                CLR     A
806A38 93                MOVC    A,@A+DPTR
806A39 2430              ADD     A,#LOW line
806A3B F9                MOV     R1,A
806A3C E4                CLR     A
806A3D 3417              ADDC    A,#HIGH line
806A3F FA                MOV     R2,A
806A40 7B00              MOV     R3,#?C?XDATASEG
806A42 C003              PUSH    AR3
806A44 C002              PUSH    AR2
806A46 C001              PUSH    AR1
806A48 7B80              MOV     R3,#BYTE2 08012C8H
806A4A 7A12              MOV     R2,#HIGH 08012C8H
806A4C 79C8              MOV     R1,#LOW 08012C8H
806A4E 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806A51 A5128007B6        ECALL   ?C?PSTXDATA
806A56 900466            MOV     DPTR,#SystemParameter+048H
806A59 E0                MOVX    A,@DPTR
806A5A FE                MOV     R6,A
806A5B A3                INC     DPTR
806A5C E0                MOVX    A,@DPTR
806A5D FF                MOV     R7,A
806A5E FB                MOV     R3,A
806A5F AA06              MOV     R2,AR6
806A61 E4                CLR     A
806A62 F9                MOV     R1,A
806A63 F8                MOV     R0,A
806A64 900B08            MOV     DPTR,#TradeCounter+01CH
806A67 A512800720        ECALL   ?C?LLDXDATA
806A6C A512800679        ECALL   ?C?ULDIV
806A71 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806A74 A512800792        ECALL   ?C?LSTXDATA
806A79 900466            MOV     DPTR,#SystemParameter+048H
806A7C E0                MOVX    A,@DPTR
806A7D FE                MOV     R6,A
806A7E A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 211


806A7F E0                MOVX    A,@DPTR
806A80 FF                MOV     R7,A
806A81 FB                MOV     R3,A
806A82 AA06              MOV     R2,AR6
806A84 E4                CLR     A
806A85 F9                MOV     R1,A
806A86 F8                MOV     R0,A
806A87 900B08            MOV     DPTR,#TradeCounter+01CH
806A8A         
  533: 				break;
806A8A 026BB7            LJMP    ?C0197?COUNTERMAINT
  534: 				case 100:
806A8D         ?C0109?COUNTERMAINT:
  535: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.Hopper2Sum/SystemParameter.cur
>> Unit, TradeCounter.Hopper2Sum%SystemParameter.curUnit );
806A8D 90172E            MOV     DPTR,#iIndex
806A90 E0                MOVX    A,@DPTR
806A91 25E0              ADD     A,ACC
806A93 25E0              ADD     A,ACC
806A95 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806A97 F582              MOV     DPL,A
806A99 E4                CLR     A
806A9A 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806A9C F583              MOV     DPH,A
806A9E E4                CLR     A
806A9F 93                MOVC    A,@A+DPTR
806AA0 2430              ADD     A,#LOW line
806AA2 F9                MOV     R1,A
806AA3 E4                CLR     A
806AA4 3417              ADDC    A,#HIGH line
806AA6 FA                MOV     R2,A
806AA7 7B00              MOV     R3,#?C?XDATASEG
806AA9 C003              PUSH    AR3
806AAB C002              PUSH    AR2
806AAD C001              PUSH    AR1
806AAF 7B80              MOV     R3,#BYTE2 08012D0H
806AB1 7A12              MOV     R2,#HIGH 08012D0H
806AB3 79D0              MOV     R1,#LOW 08012D0H
806AB5 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806AB8 A5128007B6        ECALL   ?C?PSTXDATA
806ABD 900466            MOV     DPTR,#SystemParameter+048H
806AC0 E0                MOVX    A,@DPTR
806AC1 FE                MOV     R6,A
806AC2 A3                INC     DPTR
806AC3 E0                MOVX    A,@DPTR
806AC4 FF                MOV     R7,A
806AC5 FB                MOV     R3,A
806AC6 AA06              MOV     R2,AR6
806AC8 E4                CLR     A
806AC9 F9                MOV     R1,A
806ACA F8                MOV     R0,A
806ACB 900B08            MOV     DPTR,#TradeCounter+01CH
806ACE A512800720        ECALL   ?C?LLDXDATA
806AD3 A512800679        ECALL   ?C?ULDIV
806AD8 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806ADB A512800792        ECALL   ?C?LSTXDATA
806AE0 900466            MOV     DPTR,#SystemParameter+048H
806AE3 E0                MOVX    A,@DPTR
806AE4 FE                MOV     R6,A
806AE5 A3                INC     DPTR
806AE6 E0                MOVX    A,@DPTR
806AE7 FF                MOV     R7,A
806AE8 FB                MOV     R3,A
806AE9 AA06              MOV     R2,AR6
806AEB E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 212


806AEC F9                MOV     R1,A
806AED F8                MOV     R0,A
806AEE 900B08            MOV     DPTR,#TradeCounter+01CH
806AF1         
  536: 				break;
806AF1 026BB7            LJMP    ?C0197?COUNTERMAINT
  537: 			}			
  538: 		break;
  539: 		case 7://#3HOPPER出币总金额		
806AF4         ?C0110?COUNTERMAINT:
  540: 			switch( SystemParameter.curUnit )		
806AF4 900466            MOV     DPTR,#SystemParameter+048H
806AF7 E0                MOVX    A,@DPTR
806AF8 FE                MOV     R6,A
806AF9 A3                INC     DPTR
806AFA E0                MOVX    A,@DPTR
806AFB FF                MOV     R7,A
806AFC EE                MOV     A,R6
806AFD 6003              JZ      $ + 5H
806AFF 026D22            LJMP    ?C0074?COUNTERMAINT
806B02 EF                MOV     A,R7
806B03 24F6              ADD     A,#0F6H
806B05 604C              JZ      ?C0113?COUNTERMAINT
806B07 24A6              ADD     A,#0A6H
806B09 7003              JNZ     $ + 5H
806B0B 026BCE            LJMP    ?C0114?COUNTERMAINT
806B0E 2463              ADD     A,#063H
806B10 6003              JZ      $ + 5H
806B12 026D22            LJMP    ?C0074?COUNTERMAINT
  541: 			{
  542: 				case 1:
806B15         ?C0112?COUNTERMAINT:
  543: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu", TradeCounter.Hopper3Sum );
806B15 90172E            MOV     DPTR,#iIndex
806B18 E0                MOVX    A,@DPTR
806B19 25E0              ADD     A,ACC
806B1B 25E0              ADD     A,ACC
806B1D 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806B1F F582              MOV     DPL,A
806B21 E4                CLR     A
806B22 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806B24 F583              MOV     DPH,A
806B26 E4                CLR     A
806B27 93                MOVC    A,@A+DPTR
806B28 2430              ADD     A,#LOW line
806B2A F9                MOV     R1,A
806B2B E4                CLR     A
806B2C 3417              ADDC    A,#HIGH line
806B2E FA                MOV     R2,A
806B2F 7B00              MOV     R3,#?C?XDATASEG
806B31 C003              PUSH    AR3
806B33 C002              PUSH    AR2
806B35 C001              PUSH    AR1
806B37 7B80              MOV     R3,#BYTE2 08012C4H
806B39 7A12              MOV     R2,#HIGH 08012C4H
806B3B 79C4              MOV     R1,#LOW 08012C4H
806B3D 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806B40 A5128007B6        ECALL   ?C?PSTXDATA
806B45 900B0C            MOV     DPTR,#TradeCounter+020H
806B48         
806B48 A512800720        ECALL   ?C?LLDXDATA
806B4D 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
  544: 				break;
806B50 026C47            LJMP    ?C0199?COUNTERMAINT
  545: 				case 10:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 213


806B53         ?C0113?COUNTERMAINT:
  546: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%lu", TradeCounter.Hopper3Sum/SystemParameter.curUn
>> it, TradeCounter.Hopper3Sum%SystemParameter.curUnit );
806B53 90172E            MOV     DPTR,#iIndex
806B56 E0                MOVX    A,@DPTR
806B57 25E0              ADD     A,ACC
806B59 25E0              ADD     A,ACC
806B5B 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806B5D F582              MOV     DPL,A
806B5F E4                CLR     A
806B60 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806B62 F583              MOV     DPH,A
806B64 E4                CLR     A
806B65 93                MOVC    A,@A+DPTR
806B66 2430              ADD     A,#LOW line
806B68 F9                MOV     R1,A
806B69 E4                CLR     A
806B6A 3417              ADDC    A,#HIGH line
806B6C FA                MOV     R2,A
806B6D 7B00              MOV     R3,#?C?XDATASEG
806B6F C003              PUSH    AR3
806B71 C002              PUSH    AR2
806B73 C001              PUSH    AR1
806B75 7B80              MOV     R3,#BYTE2 08012C8H
806B77 7A12              MOV     R2,#HIGH 08012C8H
806B79 79C8              MOV     R1,#LOW 08012C8H
806B7B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806B7E A5128007B6        ECALL   ?C?PSTXDATA
806B83 900466            MOV     DPTR,#SystemParameter+048H
806B86 E0                MOVX    A,@DPTR
806B87 FE                MOV     R6,A
806B88 A3                INC     DPTR
806B89 E0                MOVX    A,@DPTR
806B8A FF                MOV     R7,A
806B8B FB                MOV     R3,A
806B8C AA06              MOV     R2,AR6
806B8E E4                CLR     A
806B8F F9                MOV     R1,A
806B90 F8                MOV     R0,A
806B91 900B0C            MOV     DPTR,#TradeCounter+020H
806B94 A512800720        ECALL   ?C?LLDXDATA
806B99 A512800679        ECALL   ?C?ULDIV
806B9E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806BA1 A512800792        ECALL   ?C?LSTXDATA
806BA6 900466            MOV     DPTR,#SystemParameter+048H
806BA9 E0                MOVX    A,@DPTR
806BAA FE                MOV     R6,A
806BAB A3                INC     DPTR
806BAC E0                MOVX    A,@DPTR
806BAD FF                MOV     R7,A
806BAE FB                MOV     R3,A
806BAF AA06              MOV     R2,AR6
806BB1 E4                CLR     A
806BB2 F9                MOV     R1,A
806BB3 F8                MOV     R0,A
806BB4 900B0C            MOV     DPTR,#TradeCounter+020H
806BB7         
806BB7 A512800720        ECALL   ?C?LLDXDATA
806BBC A512800679        ECALL   ?C?ULDIV
806BC1 AC00              MOV     R4,AR0
806BC3 AD01              MOV     R5,AR1
806BC5 AE02              MOV     R6,AR2
806BC7 AF03              MOV     R7,AR3
806BC9 901B87            MOV     DPTR,#?_sprintf?BYTE+0AH
806BCC         
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 214


  547: 				break;
806BCC 8079              SJMP    ?C0199?COUNTERMAINT
  548: 				case 100:
806BCE         ?C0114?COUNTERMAINT:
  549: 					len += sprintf( line + CurrencyMenuStr[iIndex].len, "%lu.%02lu", TradeCounter.Hopper3Sum/SystemParameter.cur
>> Unit, TradeCounter.Hopper3Sum%SystemParameter.curUnit );
806BCE 90172E            MOV     DPTR,#iIndex
806BD1 E0                MOVX    A,@DPTR
806BD2 25E0              ADD     A,ACC
806BD4 25E0              ADD     A,ACC
806BD6 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806BD8 F582              MOV     DPL,A
806BDA E4                CLR     A
806BDB 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806BDD F583              MOV     DPH,A
806BDF E4                CLR     A
806BE0 93                MOVC    A,@A+DPTR
806BE1 2430              ADD     A,#LOW line
806BE3 F9                MOV     R1,A
806BE4 E4                CLR     A
806BE5 3417              ADDC    A,#HIGH line
806BE7 FA                MOV     R2,A
806BE8 7B00              MOV     R3,#?C?XDATASEG
806BEA C003              PUSH    AR3
806BEC C002              PUSH    AR2
806BEE C001              PUSH    AR1
806BF0 7B80              MOV     R3,#BYTE2 08012D0H
806BF2 7A12              MOV     R2,#HIGH 08012D0H
806BF4 79D0              MOV     R1,#LOW 08012D0H
806BF6 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806BF9 A5128007B6        ECALL   ?C?PSTXDATA
806BFE 900466            MOV     DPTR,#SystemParameter+048H
806C01 E0                MOVX    A,@DPTR
806C02 FE                MOV     R6,A
806C03 A3                INC     DPTR
806C04 E0                MOVX    A,@DPTR
806C05 FF                MOV     R7,A
806C06 FB                MOV     R3,A
806C07 AA06              MOV     R2,AR6
806C09 E4                CLR     A
806C0A F9                MOV     R1,A
806C0B F8                MOV     R0,A
806C0C 900B0C            MOV     DPTR,#TradeCounter+020H
806C0F A512800720        ECALL   ?C?LLDXDATA
806C14 A512800679        ECALL   ?C?ULDIV
806C19 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806C1C A512800792        ECALL   ?C?LSTXDATA
806C21 900466            MOV     DPTR,#SystemParameter+048H
806C24 E0                MOVX    A,@DPTR
806C25 FE                MOV     R6,A
806C26 A3                INC     DPTR
806C27 E0                MOVX    A,@DPTR
806C28 FF                MOV     R7,A
806C29 FB                MOV     R3,A
806C2A AA06              MOV     R2,AR6
806C2C E4                CLR     A
806C2D F9                MOV     R1,A
806C2E F8                MOV     R0,A
806C2F 900B0C            MOV     DPTR,#TradeCounter+020H
806C32 A512800720        ECALL   ?C?LLDXDATA
806C37 A512800679        ECALL   ?C?ULDIV
806C3C AC00              MOV     R4,AR0
806C3E AD01              MOV     R5,AR1
806C40 AE02              MOV     R6,AR2
806C42 AF03              MOV     R7,AR3
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 215


806C44 901B87            MOV     DPTR,#?_sprintf?BYTE+0AH
806C47         
806C47 A512800792        ECALL   ?C?LSTXDATA
  550: 				break;
806C4C 026D11            LJMP    ?C0202?COUNTERMAINT
  551: 			}			
  552: 		break;
  553: 		case 8://#1HOPPER出币枚数
806C4F         ?C0115?COUNTERMAINT:
  554: 			len += sprintf( line + CurrencyMenuStr[iIndex].len, "%u", TradeCounter.Hopper1Num );								
806C4F 90172E            MOV     DPTR,#iIndex
806C52 E0                MOVX    A,@DPTR
806C53 25E0              ADD     A,ACC
806C55 25E0              ADD     A,ACC
806C57 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806C59 F582              MOV     DPL,A
806C5B E4                CLR     A
806C5C 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806C5E F583              MOV     DPH,A
806C60 E4                CLR     A
806C61 93                MOVC    A,@A+DPTR
806C62 2430              ADD     A,#LOW line
806C64 F9                MOV     R1,A
806C65 E4                CLR     A
806C66 3417              ADDC    A,#HIGH line
806C68 FA                MOV     R2,A
806C69 7B00              MOV     R3,#?C?XDATASEG
806C6B C003              PUSH    AR3
806C6D C002              PUSH    AR2
806C6F C001              PUSH    AR1
806C71 7B80              MOV     R3,#BYTE2 080129BH
806C73 7A12              MOV     R2,#HIGH 080129BH
806C75 799B              MOV     R1,#LOW 080129BH
806C77 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806C7A A5128007B6        ECALL   ?C?PSTXDATA
806C7F 900B10            MOV     DPTR,#TradeCounter+024H
806C82 E0                MOVX    A,@DPTR
806C83 FF                MOV     R7,A
806C84 A3                INC     DPTR
806C85 E0                MOVX    A,@DPTR
806C86 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806C89 CF                XCH     A,R7
806C8A F0                MOVX    @DPTR,A
806C8B A3                INC     DPTR
806C8C EF                MOV     A,R7
806C8D F0                MOVX    @DPTR,A
806C8E         
  555: 		//	len += LenOfNum( TradeCounter.Hopper1Sum );			
  556: 		break;
806C8E 026D11            LJMP    ?C0202?COUNTERMAINT
  557: 		case 9://#2HOPPER出币枚数
806C91         ?C0116?COUNTERMAINT:
  558: 			len += sprintf( line + CurrencyMenuStr[iIndex].len, "%u", TradeCounter.Hopper2Num );
806C91 90172E            MOV     DPTR,#iIndex
806C94 E0                MOVX    A,@DPTR
806C95 25E0              ADD     A,ACC
806C97 25E0              ADD     A,ACC
806C99 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806C9B F582              MOV     DPL,A
806C9D E4                CLR     A
806C9E 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806CA0 F583              MOV     DPH,A
806CA2 E4                CLR     A
806CA3 93                MOVC    A,@A+DPTR
806CA4 2430              ADD     A,#LOW line
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 216


806CA6 F9                MOV     R1,A
806CA7 E4                CLR     A
806CA8 3417              ADDC    A,#HIGH line
806CAA FA                MOV     R2,A
806CAB 7B00              MOV     R3,#?C?XDATASEG
806CAD C003              PUSH    AR3
806CAF C002              PUSH    AR2
806CB1 C001              PUSH    AR1
806CB3 7B80              MOV     R3,#BYTE2 080129BH
806CB5 7A12              MOV     R2,#HIGH 080129BH
806CB7 799B              MOV     R1,#LOW 080129BH
806CB9 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806CBC A5128007B6        ECALL   ?C?PSTXDATA
806CC1 900B12            MOV     DPTR,#TradeCounter+026H
806CC4 E0                MOVX    A,@DPTR
806CC5 FF                MOV     R7,A
806CC6 A3                INC     DPTR
806CC7 E0                MOVX    A,@DPTR
806CC8 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806CCB CF                XCH     A,R7
806CCC F0                MOVX    @DPTR,A
806CCD A3                INC     DPTR
806CCE EF                MOV     A,R7
806CCF F0                MOVX    @DPTR,A
806CD0         
  559: 		break;
806CD0 803F              SJMP    ?C0202?COUNTERMAINT
  560: 		case 10://#3HOPPER出币枚数
806CD2         ?C0117?COUNTERMAINT:
  561: 			len += sprintf( line + CurrencyMenuStr[iIndex].len, "%u", TradeCounter.Hopper3Num );
806CD2 90172E            MOV     DPTR,#iIndex
806CD5 E0                MOVX    A,@DPTR
806CD6 25E0              ADD     A,ACC
806CD8 25E0              ADD     A,ACC
806CDA 24E9              ADD     A,#LOW CurrencyMenuStr+03H
806CDC F582              MOV     DPL,A
806CDE E4                CLR     A
806CDF 3412              ADDC    A,#HIGH CurrencyMenuStr+03H
806CE1 F583              MOV     DPH,A
806CE3 E4                CLR     A
806CE4 93                MOVC    A,@A+DPTR
806CE5 2430              ADD     A,#LOW line
806CE7 F9                MOV     R1,A
806CE8 E4                CLR     A
806CE9 3417              ADDC    A,#HIGH line
806CEB FA                MOV     R2,A
806CEC 7B00              MOV     R3,#?C?XDATASEG
806CEE C003              PUSH    AR3
806CF0 C002              PUSH    AR2
806CF2 C001              PUSH    AR1
806CF4 7B80              MOV     R3,#BYTE2 080129BH
806CF6 7A12              MOV     R2,#HIGH 080129BH
806CF8 799B              MOV     R1,#LOW 080129BH
806CFA 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
806CFD A5128007B6        ECALL   ?C?PSTXDATA
806D02 900B14            MOV     DPTR,#TradeCounter+028H
806D05 E0                MOVX    A,@DPTR
806D06 FF                MOV     R7,A
806D07 A3                INC     DPTR
806D08 E0                MOVX    A,@DPTR
806D09 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
806D0C CF                XCH     A,R7
806D0D F0                MOVX    @DPTR,A
806D0E A3                INC     DPTR
806D0F EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 217


806D10 F0                MOVX    @DPTR,A
806D11         
806D11 D001              POP     AR1
806D13 D002              POP     AR2
806D15 D003              POP     AR3
806D17 A512800949        ECALL   _sprintf
806D1C 90172F            MOV     DPTR,#len
806D1F E0                MOVX    A,@DPTR
806D20 2F                ADD     A,R7
806D21 F0                MOVX    @DPTR,A
  562: 		break;
  563: //		case 8://最近一次有疑问的纸币收币金额
  564: //			len += sprintf( line + CurrencyMenuStr[iIndex].len, "%u.%02u", TradeCounter.DoubtCash/100, TradeCounter.Doub
>> tCash%100 );								
  565: //		break;
  566: 
  567: 	}
806D22         ?C0074?COUNTERMAINT:
  568: 	Trace("\n %s ",line );
  569: 	Trace("\n len = %bu",len );
  570: 	DisplayStr( 0, yPos, 1, line, len );
806D22 90172D            MOV     DPTR,#yPos
806D25 E0                MOVX    A,@DPTR
806D26 FD                MOV     R5,A
806D27 D21A              SETB    ?_DisplayStr?BIT
806D29 7B00              MOV     R3,#?C?XDATASEG
806D2B 7A17              MOV     R2,#HIGH line
806D2D 7930              MOV     R1,#LOW line
806D2F 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
806D32 A5128007B6        ECALL   ?C?PSTXDATA
806D37 90172F            MOV     DPTR,#len
806D3A E0                MOVX    A,@DPTR
806D3B 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
806D3E F0                MOVX    @DPTR,A
806D3F E4                CLR     A
806D40 FF                MOV     R7,A
806D41 A502808062        EJMP    _DisplayStr
----- FUNCTION _DispCurrencyList (END) -------


----- FUNCTION ?L?COM0028 (BEGIN) -----
806D46 901738            MOV     DPTR,#MenuNum
806D49 E0                MOVX    A,@DPTR
806D4A FD                MOV     R5,A
806D4B D219              SETB    ?_DisplayRackMenuAndVal?BIT
806D4D 7F01              MOV     R7,#01H
----- FUNCTION _DisplayRackMenuAndVal (BEGIN) -----
 FILE: 'RackSet.c'
  257: void  DisplayRackMenuAndVal( u_char line, u_char Num, bit flag )
  258: {
806D4F 90173C            MOV     DPTR,#line
806D52 EF                MOV     A,R7
806D53 F0                MOVX    @DPTR,A
806D54 A3                INC     DPTR
806D55 ED                MOV     A,R5
806D56 F0                MOVX    @DPTR,A
  259: 	u_char  xdata y_displaystr[22];	
  260: 	u_char   xdata  len ;
  261:     
  262: 	len = 0;	
806D57 E4                CLR     A
806D58 901754            MOV     DPTR,#len
806D5B F0                MOVX    @DPTR,A
  263: 	memset( y_displaystr,0,sizeof( y_displaystr ) );	
806D5C FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 218


806D5D 7F16              MOV     R7,#016H
806D5F FD                MOV     R5,A
806D60 7B00              MOV     R3,#?C?XDATASEG
806D62 7A17              MOV     R2,#HIGH y_displaystr
806D64 793E              MOV     R1,#LOW y_displaystr
806D66 A5128008A6        ECALL   ?C?MEMSET
  264:  	memcpy( y_displaystr, RackParastr[Num].str, RackParastr[Num].len );					
806D6B 90173D            MOV     DPTR,#Num
806D6E E0                MOVX    A,@DPTR
806D6F FF                MOV     R7,A
806D70 25E0              ADD     A,ACC
806D72 25E0              ADD     A,ACC
806D74 24F8              ADD     A,#LOW RackParastr+03H
806D76 F582              MOV     DPL,A
806D78 E4                CLR     A
806D79 3413              ADDC    A,#HIGH RackParastr+03H
806D7B F583              MOV     DPH,A
806D7D E4                CLR     A
806D7E 93                MOVC    A,@A+DPTR
806D7F FD                MOV     R5,A
806D80 7C00              MOV     R4,#00H
806D82 C004              PUSH    AR4
806D84 C005              PUSH    AR5
806D86 EF                MOV     A,R7
806D87 25E0              ADD     A,ACC
806D89 25E0              ADD     A,ACC
806D8B 24F5              ADD     A,#LOW RackParastr
806D8D F582              MOV     DPL,A
806D8F E4                CLR     A
806D90 3413              ADDC    A,#HIGH RackParastr
806D92 F583              MOV     DPH,A
806D94 A5128007C0        ECALL   ?C?PLDCODE
806D99 783E              MOV     R0,#LOW y_displaystr
806D9B 7C17              MOV     R4,#HIGH y_displaystr
806D9D 7D00              MOV     R5,#?C?XDATASEG
806D9F D007              POP     AR7
806DA1 D006              POP     AR6
806DA3 A51280052D        ECALL   ?C?COPY
  265: 	ReadWriteRactParam( Num, y_displaystr + RackParastr[Num].len  , 0, &len, 0 );//得到菜单对应的值			
806DA8 90173D            MOV     DPTR,#Num
806DAB E0                MOVX    A,@DPTR
806DAC FF                MOV     R7,A
806DAD 25E0              ADD     A,ACC
806DAF 25E0              ADD     A,ACC
806DB1 24F8              ADD     A,#LOW RackParastr+03H
806DB3 F582              MOV     DPL,A
806DB5 E4                CLR     A
806DB6 3413              ADDC    A,#HIGH RackParastr+03H
806DB8 F583              MOV     DPH,A
806DBA E4                CLR     A
806DBB 93                MOVC    A,@A+DPTR
806DBC 243E              ADD     A,#LOW y_displaystr
806DBE F582              MOV     DPL,A
806DC0 E4                CLR     A
806DC1 3417              ADDC    A,#HIGH y_displaystr
806DC3 AD82              MOV     R5,DPL
806DC5 FC                MOV     R4,A
806DC6 90175A            MOV     DPTR,#?_ReadWriteRactParam?BYTE+05H
806DC9 7417              MOV     A,#HIGH len
806DCB F0                MOVX    @DPTR,A
806DCC A3                INC     DPTR
806DCD 7454              MOV     A,#LOW len
806DCF F0                MOVX    @DPTR,A
806DD0 C21A              CLR     ?_ReadWriteRactParam?BIT
806DD2 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 219


806DD3 FB                MOV     R3,A
806DD4 FA                MOV     R2,A
806DD5 A512810293        ECALL   _ReadWriteRactParam
  266: 	DisplayStr( 0, line, 1, y_displaystr, RackParastr[Num].len + len  );//显示菜单			
806DDA 90173C            MOV     DPTR,#line
806DDD E0                MOVX    A,@DPTR
806DDE FD                MOV     R5,A
806DDF D21A              SETB    ?_DisplayStr?BIT
806DE1 7B00              MOV     R3,#?C?XDATASEG
806DE3 7A17              MOV     R2,#HIGH y_displaystr
806DE5 793E              MOV     R1,#LOW y_displaystr
806DE7 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
806DEA A5128007B6        ECALL   ?C?PSTXDATA
806DEF 90173D            MOV     DPTR,#Num
806DF2 E0                MOVX    A,@DPTR
806DF3 25E0              ADD     A,ACC
806DF5 25E0              ADD     A,ACC
806DF7 24F8              ADD     A,#LOW RackParastr+03H
806DF9 F582              MOV     DPL,A
806DFB E4                CLR     A
806DFC 3413              ADDC    A,#HIGH RackParastr+03H
806DFE F583              MOV     DPH,A
806E00 E4                CLR     A
806E01 93                MOVC    A,@A+DPTR
806E02 FF                MOV     R7,A
806E03 901754            MOV     DPTR,#len
806E06 E0                MOVX    A,@DPTR
806E07 FE                MOV     R6,A
806E08 EF                MOV     A,R7
806E09 2E                ADD     A,R6
806E0A 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
806E0D F0                MOVX    @DPTR,A
806E0E E4                CLR     A
806E0F FF                MOV     R7,A
806E10 A502808062        EJMP    _DisplayStr
----- FUNCTION _DisplayRackMenuAndVal (END) -------


----- FUNCTION _EditRackParam (BEGIN) -----
 FILE: 'RackSet.c'
  271: bit  EditRackParam( u_char Num, u_char line )
  272: {
806E15 901733            MOV     DPTR,#Num
806E18 EF                MOV     A,R7
806E19 F0                MOVX    @DPTR,A
806E1A A3                INC     DPTR
806E1B ED                MOV     A,R5
806E1C F0                MOVX    @DPTR,A
  273: 	u_char  xdata Inputstr[10];
  274: 	u_char  xdata  key;
  275: 	u_char  xdata  Inputlen;
  276: 	
  277: 	key = 0;	
806E1D E4                CLR     A
806E1E 90173F            MOV     DPTR,#key
806E21 F0                MOVX    @DPTR,A
  278: 	Inputlen = RackInputLen[Num];
806E22 901733            MOV     DPTR,#Num
806E25 E0                MOVX    A,@DPTR
806E26 25E0              ADD     A,ACC
806E28 2421              ADD     A,#LOW RackInputLen
806E2A F582              MOV     DPL,A
806E2C E4                CLR     A
806E2D 3414              ADDC    A,#HIGH RackInputLen
806E2F F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 220


806E31 7401              MOV     A,#01H
806E33 93                MOVC    A,@A+DPTR
806E34 901740            MOV     DPTR,#Inputlen
806E37 F0                MOVX    @DPTR,A
  279: 	memset( Inputstr, 0, sizeof( Inputstr ) );	
806E38 7E00              MOV     R6,#00H
806E3A 7F0A              MOV     R7,#0AH
806E3C 7D00              MOV     R5,#00H
806E3E 7B00              MOV     R3,#?C?XDATASEG
806E40 7A17              MOV     R2,#HIGH Inputstr
806E42 7935              MOV     R1,#LOW Inputstr
806E44 A5128008A6        ECALL   ?C?MEMSET
  280: 	key = GetLine( RackParastr[Num].str, RackParastr[Num].len, line, Inputstr, &Inputlen );			
806E49 901733            MOV     DPTR,#Num
806E4C E0                MOVX    A,@DPTR
806E4D FF                MOV     R7,A
806E4E 25E0              ADD     A,ACC
806E50 25E0              ADD     A,ACC
806E52 24F5              ADD     A,#LOW RackParastr
806E54 F582              MOV     DPL,A
806E56 E4                CLR     A
806E57 3413              ADDC    A,#HIGH RackParastr
806E59 F583              MOV     DPH,A
806E5B A5128007C0        ECALL   ?C?PLDCODE
806E60 C003              PUSH    AR3
806E62 C002              PUSH    AR2
806E64 C001              PUSH    AR1
806E66 EF                MOV     A,R7
806E67 25E0              ADD     A,ACC
806E69 25E0              ADD     A,ACC
806E6B 24F8              ADD     A,#LOW RackParastr+03H
806E6D F582              MOV     DPL,A
806E6F E4                CLR     A
806E70 3413              ADDC    A,#HIGH RackParastr+03H
806E72 F583              MOV     DPH,A
806E74 E4                CLR     A
806E75 93                MOVC    A,@A+DPTR
806E76 FD                MOV     R5,A
806E77 901734            MOV     DPTR,#line
806E7A E0                MOVX    A,@DPTR
806E7B 901769            MOV     DPTR,#?_GetLine?BYTE+04H
806E7E F0                MOVX    @DPTR,A
806E7F 7B00              MOV     R3,#?C?XDATASEG
806E81 7A17              MOV     R2,#HIGH Inputstr
806E83 7935              MOV     R1,#LOW Inputstr
806E85 A3                INC     DPTR
806E86 A5128007B6        ECALL   ?C?PSTXDATA
806E8B 7A17              MOV     R2,#HIGH Inputlen
806E8D 7940              MOV     R1,#LOW Inputlen
806E8F 90176D            MOV     DPTR,#?_GetLine?BYTE+08H
806E92 A5128007B6        ECALL   ?C?PSTXDATA
806E97 D001              POP     AR1
806E99 D002              POP     AR2
806E9B D003              POP     AR3
806E9D A512808C2C        ECALL   _GetLine
806EA2 90173F            MOV     DPTR,#key
806EA5 EF                MOV     A,R7
806EA6 F0                MOVX    @DPTR,A
  281: 	ClearKey();		
806EA7 A5128087A8        ECALL   ClearKey
  282: 	if( key == 1 )//Enter	
806EAC 90173F            MOV     DPTR,#key
806EAF E0                MOVX    A,@DPTR
806EB0 6401              XRL     A,#01H
806EB2 7037              JNZ     ?C0096?RACKSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 221


  283: 	{		
  284: 		DisplayCursorState( 0, 0, 0, 0, 1 );		
806EB4 C21A              CLR     ?_DisplayCursorState?BIT
806EB6 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
806EB9 F0                MOVX    @DPTR,A
806EBA D21B              SETB    ?_DisplayCursorState?BIT+01H
806EBC FD                MOV     R5,A
806EBD FF                MOV     R7,A
806EBE A51280817F        ECALL   _DisplayCursorState
  285: 		//Trace( "selected Enter \n" );			
  286: 		ReadWriteRactParam( Num, 0, Inputstr ,&Inputlen, 1 );	
806EC3 901733            MOV     DPTR,#Num
806EC6 E0                MOVX    A,@DPTR
806EC7 FF                MOV     R7,A
806EC8 7A17              MOV     R2,#HIGH Inputstr
806ECA 7B35              MOV     R3,#LOW Inputstr
806ECC 90175A            MOV     DPTR,#?_ReadWriteRactParam?BYTE+05H
806ECF 7417              MOV     A,#HIGH Inputlen
806ED1 F0                MOVX    @DPTR,A
806ED2 A3                INC     DPTR
806ED3 7440              MOV     A,#LOW Inputlen
806ED5 F0                MOVX    @DPTR,A
806ED6 D21A              SETB    ?_ReadWriteRactParam?BIT
806ED8 E4                CLR     A
806ED9 FD                MOV     R5,A
806EDA FC                MOV     R4,A
806EDB A512810293        ECALL   _ReadWriteRactParam
  287: 		IsModify = 1;	
806EE0 902DF0            MOV     DPTR,#IsModify
806EE3 7401              MOV     A,#01H
806EE5 F0                MOVX    @DPTR,A
  288: 		ClearKey();		
806EE6 A5128087A8        ECALL   ClearKey
  289: 	}		
806EEB         ?C0096?RACKSET:
  290: 	//Trace( "edit one SysParanMenu end\n" );
  291: 	return 0;
806EEB C3                CLR     C
  292: }
806EEC         ?C0097?RACKSET:
806EEC A522              ERET    
----- FUNCTION _EditRackParam (END) -------


----- FUNCTION ZhkNullTask (BEGIN) -----
 FILE: 'scheduler.c'
  367: bit ZhkNullTask( void )
  368: {
  369: 	uchar  data i;
  370: 	uchar  data clocktemp;
  371: 	uchar  data PriorityTemp;
  372: 	uchar  data TaskIdTemp;
  373: 	//Trace( "ZhkNullTask\n" );
  374: 	// 更新定时查询任务队列中各个任务的等待就绪时间计数
  375: 	clocktemp = ZhkGetSchedulerClock();
806EEE A51280FFC6        ECALL   ZhkGetSchedulerClock
806EF3 8F2B              MOV     clocktemp,R7
  376: 	for( i = 0 ; i < sizeof( ZhkAutoTaskList ) / sizeof( struct AUTOTASK ) ; i ++ )
806EF5 E4                CLR     A
806EF6 F52A              MOV     i,A
806EF8         ?C0050?SCHEDULER:
  377: 	{
  378: 		if ( ZhkAutoTaskTimer[ i ] > clocktemp ) 
806EF8 74A0              MOV     A,#LOW ZhkAutoTaskTimer
806EFA 252A              ADD     A,i
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 222


806EFC F582              MOV     DPL,A
806EFE E4                CLR     A
806EFF 3428              ADDC    A,#HIGH ZhkAutoTaskTimer
806F01 F583              MOV     DPH,A
806F03 E0                MOVX    A,@DPTR
806F04 FF                MOV     R7,A
806F05 D3                SETB    C
806F06 952B              SUBB    A,clocktemp
806F08 4012              JC      ?C0053?SCHEDULER
  379: 			ZhkAutoTaskTimer[ i ] -= clocktemp;
806F0A 74A0              MOV     A,#LOW ZhkAutoTaskTimer
806F0C 252A              ADD     A,i
806F0E F582              MOV     DPL,A
806F10 E4                CLR     A
806F11 3428              ADDC    A,#HIGH ZhkAutoTaskTimer
806F13 F583              MOV     DPH,A
806F15 C3                CLR     C
806F16 EF                MOV     A,R7
806F17 952B              SUBB    A,clocktemp
806F19 F0                MOVX    @DPTR,A
806F1A 805C              SJMP    ?C0052?SCHEDULER
806F1C         ?C0053?SCHEDULER:
  380: 		else
  381: 		{
  382: 			ZhkAutoTaskTimer[ i ]  = 0;
806F1C 74A0              MOV     A,#LOW ZhkAutoTaskTimer
806F1E 252A              ADD     A,i
806F20 F582              MOV     DPL,A
806F22 E4                CLR     A
806F23 3428              ADDC    A,#HIGH ZhkAutoTaskTimer
806F25 F583              MOV     DPH,A
806F27 E4                CLR     A
806F28 F0                MOVX    @DPTR,A
  383: 			if ( ZhkAutoTaskPermission[ i ] == 1 ) 
806F29 745D              MOV     A,#LOW ZhkAutoTaskPermission
806F2B 252A              ADD     A,i
806F2D F582              MOV     DPL,A
806F2F E4                CLR     A
806F30 3423              ADDC    A,#HIGH ZhkAutoTaskPermission
806F32 F583              MOV     DPH,A
806F34 E0                MOVX    A,@DPTR
806F35 6401              XRL     A,#01H
806F37 703F              JNZ     ?C0052?SCHEDULER
  384: 			{
  385: 		//		Trace( "\n AutoTaskNum=%bu", i );
  386: 				ZhkAutoTaskTimer[ i ] = ZhkAutoTaskList[ i ].Cycle;
806F39 E52A              MOV     A,i
806F3B 75F003            MOV     B,#03H
806F3E A4                MUL     AB
806F3F 2422              ADD     A,#LOW ZhkAutoTaskList+02H
806F41 F582              MOV     DPL,A
806F43 E4                CLR     A
806F44 3418              ADDC    A,#HIGH ZhkAutoTaskList+02H
806F46 F583              MOV     DPH,A
806F48 E4                CLR     A
806F49 93                MOVC    A,@A+DPTR
806F4A FF                MOV     R7,A
806F4B 74A0              MOV     A,#LOW ZhkAutoTaskTimer
806F4D 252A              ADD     A,i
806F4F F582              MOV     DPL,A
806F51 E4                CLR     A
806F52 3428              ADDC    A,#HIGH ZhkAutoTaskTimer
806F54 F583              MOV     DPH,A
806F56 EF                MOV     A,R7
806F57 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 223


  387: 				switch( ZhkAutoTaskList[ i ].Id )
806F58 E52A              MOV     A,i
806F5A 75F003            MOV     B,#03H
806F5D A4                MUL     AB
806F5E 2420              ADD     A,#LOW ZhkAutoTaskList
806F60 F582              MOV     DPL,A
806F62 E4                CLR     A
806F63 3418              ADDC    A,#HIGH ZhkAutoTaskList
806F65 F583              MOV     DPH,A
806F67 E4                CLR     A
806F68 93                MOVC    A,@A+DPTR
806F69 24F3              ADD     A,#0F3H
806F6B 700B              JNZ     ?C0052?SCHEDULER
  388: 				{
  389: 				//	case ID_COINER1:	
  390: 				//		if( CoinerStatus == COINER_STATUS_NULL )
  391: 				//			CoinerQuery();
  392: 				//		break;			
  393: 					case ID_CASHER:	
806F6D         ?C0057?SCHEDULER:
  394: 						if( ZhkCasherStatus == CASHER_STATUS_NULL )
806F6D 90235F            MOV     DPTR,#ZhkCasherStatus
806F70 E0                MOVX    A,@DPTR
806F71 7005              JNZ     ?C0052?SCHEDULER
  395: 							ZhkCasherQuery();					
806F73 A512808F6D        ECALL   ZhkCasherQuery
  396: 						break;
  397: 				}
  398: 			}
  399: 		}
  400: 	}
806F78         ?C0052?SCHEDULER:
806F78 052A              INC     i
806F7A E52A              MOV     A,i
806F7C C3                CLR     C
806F7D 9402              SUBB    A,#02H
806F7F 5003              JNC     $ + 5H
806F81 026EF8            LJMP    ?C0050?SCHEDULER
806F84         ?C0051?SCHEDULER:
  401: 	//Trace( "PriorityTemp = 0xFF\n" );
  402: 	// 选择任务队列中已经满足就绪条件中的优先级最高的任务
  403: 	PriorityTemp = 0xFF;
806F84 752CFF            MOV     PriorityTemp,#0FFH
  404: 	for( i = 0 ; i < sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) ; i ++ )
806F87 E4                CLR     A
806F88 F52A              MOV     i,A
806F8A         ?C0059?SCHEDULER:
  405: 	{
  406: 		if ( ZhkSchedulerIsTaskNull( i ) ) 
806F8A AF2A              MOV     R7,i
806F8C A512808F4F        ECALL   _ZhkSchedulerIsTaskNull
806F91 401A              JC      ?C0061?SCHEDULER
  407: 			continue;
806F93         ?C0062?SCHEDULER:
  408: 		if ( PriorityTemp > ZhkReadyTaskList[ i ].Priority )
806F93 75F026            MOV     B,#026H
806F96 E52A              MOV     A,i
806F98 9023E0            MOV     DPTR,#ZhkReadyTaskList
806F9B A51280079F        ECALL   ?C?OFFXADD
806FA0 E0                MOVX    A,@DPTR
806FA1 FF                MOV     R7,A
806FA2 E52C              MOV     A,PriorityTemp
806FA4 D3                SETB    C
806FA5 9F                SUBB    A,R7
806FA6 4005              JC      ?C0061?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 224


  409: 		{
  410: 			PriorityTemp = ZhkReadyTaskList[ i ].Priority;
806FA8 8F2C              MOV     PriorityTemp,R7
  411: 			TaskIdTemp   = i;
806FAA 852A2D            MOV     TaskIdTemp,i
  412: 		}
  413: 	}			
806FAD         ?C0061?SCHEDULER:
806FAD 052A              INC     i
806FAF E52A              MOV     A,i
806FB1 C3                CLR     C
806FB2 9420              SUBB    A,#020H
806FB4 40D4              JC      ?C0059?SCHEDULER
806FB6         ?C0060?SCHEDULER:
  414: 	// 没有就绪任务，返回0
  415: 	if ( PriorityTemp == 0xFF ) 
806FB6 E52C              MOV     A,PriorityTemp
806FB8 B4FF03            CJNE    A,#0FFH,?C0064?SCHEDULER
  416: 		return 0;
806FBB C3                CLR     C
806FBC 8070              SJMP    ?C0065?SCHEDULER
806FBE         ?C0064?SCHEDULER:
  417: 	
  418: 	memcpy( &CurrentTask , &ZhkReadyTaskList[ TaskIdTemp ] , sizeof( struct COMMTASK ) );
806FBE E52D              MOV     A,TaskIdTemp
806FC0 75F026            MOV     B,#026H
806FC3 A4                MUL     AB
806FC4 24E0              ADD     A,#LOW ZhkReadyTaskList
806FC6 F9                MOV     R1,A
806FC7 7423              MOV     A,#HIGH ZhkReadyTaskList
806FC9 35F0              ADDC    A,B
806FCB FA                MOV     R2,A
806FCC 7B00              MOV     R3,#?C?XDATASEG
806FCE 78A5              MOV     R0,#LOW CurrentTask
806FD0 7C28              MOV     R4,#HIGH CurrentTask
806FD2 7D00              MOV     R5,#?C?XDATASEG
806FD4 7E00              MOV     R6,#00H
806FD6 7F26              MOV     R7,#026H
806FD8 A51280052D        ECALL   ?C?COPY
  419: 	ZhkSchedulerState = TASK_REDAY;	
806FDD 9023CA            MOV     DPTR,#ZhkSchedulerState
806FE0 7401              MOV     A,#01H
806FE2 F0                MOVX    @DPTR,A
  420: 
  421: 	for( i = TaskIdTemp ; i < ( sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) - 1 ) ; i ++ )	
806FE3 852D2A            MOV     i,TaskIdTemp
806FE6         ?C0066?SCHEDULER:
806FE6 E52A              MOV     A,i
806FE8 C3                CLR     C
806FE9 941F              SUBB    A,#01FH
806FEB 502F              JNC     ?C0067?SCHEDULER
  422: 		memcpy( &ZhkReadyTaskList[ i ] , &ZhkReadyTaskList[ i + 1 ] , sizeof( struct COMMTASK ) );
806FED E52A              MOV     A,i
806FEF 75F026            MOV     B,#026H
806FF2 A4                MUL     AB
806FF3 FF                MOV     R7,A
806FF4 AEF0              MOV     R6,B
806FF6 2406              ADD     A,#LOW ZhkReadyTaskList+026H
806FF8 F9                MOV     R1,A
806FF9 7424              MOV     A,#HIGH ZhkReadyTaskList+026H
806FFB 3E                ADDC    A,R6
806FFC FA                MOV     R2,A
806FFD 7B00              MOV     R3,#?C?XDATASEG
806FFF C001              PUSH    AR1
807001 74E0              MOV     A,#LOW ZhkReadyTaskList
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 225


807003 2F                ADD     A,R7
807004 F9                MOV     R1,A
807005 7423              MOV     A,#HIGH ZhkReadyTaskList
807007 3E                ADDC    A,R6
807008 A801              MOV     R0,AR1
80700A FC                MOV     R4,A
80700B 7D00              MOV     R5,#?C?XDATASEG
80700D D001              POP     AR1
80700F 7E00              MOV     R6,#00H
807011 7F26              MOV     R7,#026H
807013 A51280052D        ECALL   ?C?COPY
807018 052A              INC     i
80701A 80CA              SJMP    ?C0066?SCHEDULER
80701C         ?C0067?SCHEDULER:
  423: 	
  424: 	memset( &ZhkReadyTaskList[ sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) - 1 ] , 0xFF , sizeof( struct 
>> COMMTASK ) );
80701C 7E00              MOV     R6,#00H
80701E 7F26              MOV     R7,#026H
807020 7DFF              MOV     R5,#0FFH
807022 7B00              MOV     R3,#?C?XDATASEG
807024 7A28              MOV     R2,#HIGH ZhkReadyTaskList+049AH
807026 797A              MOV     R1,#LOW ZhkReadyTaskList+049AH
807028 A5128008A6        ECALL   ?C?MEMSET
  425: 	return 1;
80702D D3                SETB    C
  426: }
80702E         ?C0065?SCHEDULER:
80702E A522              ERET    
----- FUNCTION ZhkNullTask (END) -------


----- FUNCTION ScanfKeyFun (BEGIN) -----
 FILE: 'key.c'
   70: uchar ScanfKeyFun( void ) 	using	1
807030 C0D0              PUSH    PSW
807032 75D008            MOV     PSW,#08H
   71: {
   72: 	uchar data key = KEY_NULL;
807035 7547FF            MOV     key,#0FFH
   73: 	uchar data KeyIOTemp;
   74: 
   75: 	ZhkHardKeyBoardLine1Select();
807038 75900E            MOV     P1,#0EH
   76: 	P0 = 0xFF;
80703B 7580FF            MOV     P0,#0FFH
   77: 	_nop_();
80703E 00                NOP     
   78: 	_nop_();
80703F 00                NOP     
   79: 	_nop_();
807040 00                NOP     
   80: 	KeyIOTemp = P0;
807041 858048            MOV     KeyIOTemp,P0
   81: 	ZhkHardSramSelect();
807044 759008            MOV     P1,#08H
   82: 	key = Key1[ KeyIOTemp / 0x10 ];if ( key != KEY_NULL ) return( key );
807047 E548              MOV     A,KeyIOTemp
807049 C4                SWAP    A
80704A 540F              ANL     A,#0FH
80704C 901826            MOV     DPTR,#Key1
80704F 93                MOVC    A,@A+DPTR
807050 F547              MOV     key,A
807052 F4                CPL     A
807053 6004              JZ      ?C0011?KEY
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 226


807055 AF47              MOV     R7,key
807057 803F              SJMP    ?C0012?KEY
807059         ?C0011?KEY:
   83: 	key = Key2[ KeyIOTemp % 0x10 ];if ( key != KEY_NULL ) return( key );
807059 E548              MOV     A,KeyIOTemp
80705B 540F              ANL     A,#0FH
80705D 901836            MOV     DPTR,#Key2
807060 93                MOVC    A,@A+DPTR
807061 F547              MOV     key,A
807063 F4                CPL     A
807064 6004              JZ      ?C0013?KEY
807066 AF47              MOV     R7,key
807068 802E              SJMP    ?C0012?KEY
80706A         ?C0013?KEY:
   84: 
   85: 	ZhkHardKeyBoardLine2Select();
80706A 75900F            MOV     P1,#0FH
   86: 	P0 = 0xFF;
80706D 7580FF            MOV     P0,#0FFH
   87: 	_nop_();
807070 00                NOP     
   88: 	_nop_();
807071 00                NOP     
   89: 	_nop_();
807072 00                NOP     
   90: 	KeyIOTemp = P0;
807073 858048            MOV     KeyIOTemp,P0
   91: 	ZhkHardSramSelect();
807076 759008            MOV     P1,#08H
   92: 	key = Key3[ KeyIOTemp / 0x10 ];if ( key != KEY_NULL ) return( key );
807079 E548              MOV     A,KeyIOTemp
80707B C4                SWAP    A
80707C 540F              ANL     A,#0FH
80707E 901846            MOV     DPTR,#Key3
807081 93                MOVC    A,@A+DPTR
807082 F547              MOV     key,A
807084 F4                CPL     A
807085 6004              JZ      ?C0014?KEY
807087 AF47              MOV     R7,key
807089 800D              SJMP    ?C0012?KEY
80708B         ?C0014?KEY:
   93: 	key = Key4[ KeyIOTemp % 0x10 ];if ( key != KEY_NULL ) return( key );
80708B E548              MOV     A,KeyIOTemp
80708D 540F              ANL     A,#0FH
80708F 901856            MOV     DPTR,#Key4
807092 93                MOVC    A,@A+DPTR
807093 F547              MOV     key,A
807095 F4                CPL     A
807096         ?C0015?KEY:
   94: 	return( key );
807096 AF47              MOV     R7,key
   95: }
807098         ?C0012?KEY:
807098 D0D0              POP     PSW
80709A A522              ERET    
----- FUNCTION ScanfKeyFun (END) -------


----- FUNCTION ZhkCasherSerialInit (BEGIN) -----
 FILE: 'casher.c'
   83: void ZhkCasherSerialInit( void )
   84: {	
   85: 	unsigned char data i;
   86: 
   87: 	for( i = 0 ; i < sizeof( SERAIL1PARAM ) ; i ++ )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 227


80709C E4                CLR     A
80709D F52B              MOV     i,A
80709F         ?C0008?CASHER:
   88: 		ZhkSerial1Param[ i ] = ZhkVtiSerialParam[ i ];
80709F E52B              MOV     A,i
8070A1 90188A            MOV     DPTR,#ZhkVtiSerialParam
8070A4 93                MOVC    A,@A+DPTR
8070A5 FF                MOV     R7,A
8070A6 7453              MOV     A,#LOW ZhkSerial1Param
8070A8 252B              ADD     A,i
8070AA F582              MOV     DPL,A
8070AC E4                CLR     A
8070AD 342D              ADDC    A,#HIGH ZhkSerial1Param
8070AF F583              MOV     DPH,A
8070B1 EF                MOV     A,R7
8070B2 F0                MOVX    @DPTR,A
8070B3 052B              INC     i
8070B5 E52B              MOV     A,i
8070B7 B406E5            CJNE    A,#06H,?C0008?CASHER
8070BA         ?C0009?CASHER:
   89: 	ZhkSerial1Init();
8070BA A512812F0E        ECALL   ZhkSerial1Init
   90:     
   91:     /*
   92: 	CBit0 = CashAcceptEnableTable[0];
   93: 	CBit1 = CashAcceptEnableTable[1];
   94: 	CBit2 = CashAcceptEnableTable[2];
   95: 	CBit3 = CashAcceptEnableTable[3];
   96: 	CBit4 = CashAcceptEnableTable[4];
   97: 	CBit5 = CashAcceptEnableTable[5];
   98: 	CBit6 = CashAcceptEnableTable[6];
   99: 	CBit7 = CashAcceptEnableTable[7];
  100: 	*/
  101:     
  102:     if( SystemParameter.billValue[0] != 0   )
8070BF 900447            MOV     DPTR,#SystemParameter+029H
8070C2 E0                MOVX    A,@DPTR
8070C3 7002              JNZ     ?C0024?CASHER
8070C5 A3                INC     DPTR
8070C6 E0                MOVX    A,@DPTR
8070C7         ?C0024?CASHER:
8070C7 6002              JZ      ?C0011?CASHER
  103: 	{
  104: 		CBit0 = 1;
8070C9 D200              SETB    CBit0
  105: 	}
8070CB         ?C0011?CASHER:
  106: 	if( SystemParameter.billValue[1] != 0   )
8070CB 900449            MOV     DPTR,#SystemParameter+02BH
8070CE E0                MOVX    A,@DPTR
8070CF 7002              JNZ     ?C0025?CASHER
8070D1 A3                INC     DPTR
8070D2 E0                MOVX    A,@DPTR
8070D3         ?C0025?CASHER:
8070D3 6002              JZ      ?C0012?CASHER
  107: 	{
  108: 		CBit1 = 1;
8070D5 D201              SETB    CBit1
  109: 	}
8070D7         ?C0012?CASHER:
  110: 	if( SystemParameter.billValue[2] != 0   )
8070D7 90044B            MOV     DPTR,#SystemParameter+02DH
8070DA E0                MOVX    A,@DPTR
8070DB 7002              JNZ     ?C0026?CASHER
8070DD A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 228


8070DE E0                MOVX    A,@DPTR
8070DF         ?C0026?CASHER:
8070DF 6002              JZ      ?C0013?CASHER
  111: 	{
  112: 		CBit2 = 1;
8070E1 D202              SETB    CBit2
  113: 	}
8070E3         ?C0013?CASHER:
  114: 	if( SystemParameter.billValue[3] != 0   )
8070E3 90044D            MOV     DPTR,#SystemParameter+02FH
8070E6 E0                MOVX    A,@DPTR
8070E7 7002              JNZ     ?C0027?CASHER
8070E9 A3                INC     DPTR
8070EA E0                MOVX    A,@DPTR
8070EB         ?C0027?CASHER:
8070EB 6002              JZ      ?C0014?CASHER
  115: 	{
  116: 		CBit3 = 1;
8070ED D203              SETB    CBit3
  117: 	}
8070EF         ?C0014?CASHER:
  118: 	if( SystemParameter.billValue[4] != 0   )
8070EF 90044F            MOV     DPTR,#SystemParameter+031H
8070F2 E0                MOVX    A,@DPTR
8070F3 7002              JNZ     ?C0028?CASHER
8070F5 A3                INC     DPTR
8070F6 E0                MOVX    A,@DPTR
8070F7         ?C0028?CASHER:
8070F7 6002              JZ      ?C0015?CASHER
  119: 	{
  120: 		CBit4 = 1;
8070F9 D204              SETB    CBit4
  121: 	}
8070FB         ?C0015?CASHER:
  122: 	if( SystemParameter.billValue[5] != 0   )
8070FB 900451            MOV     DPTR,#SystemParameter+033H
8070FE E0                MOVX    A,@DPTR
8070FF 7002              JNZ     ?C0029?CASHER
807101 A3                INC     DPTR
807102 E0                MOVX    A,@DPTR
807103         ?C0029?CASHER:
807103 6002              JZ      ?C0016?CASHER
  123: 	{
  124: 		CBit5 = 1;
807105 D205              SETB    CBit5
  125: 	}
807107         ?C0016?CASHER:
  126: 	if( SystemParameter.billValue[6] != 0   )
807107 900453            MOV     DPTR,#SystemParameter+035H
80710A E0                MOVX    A,@DPTR
80710B 7002              JNZ     ?C0030?CASHER
80710D A3                INC     DPTR
80710E E0                MOVX    A,@DPTR
80710F         ?C0030?CASHER:
80710F 6002              JZ      ?C0017?CASHER
  127: 	{
  128: 		CBit6 = 1;
807111 D206              SETB    CBit6
  129: 	}
807113         ?C0017?CASHER:
  130: 	if( SystemParameter.billValue[7] != 0   )
807113 900455            MOV     DPTR,#SystemParameter+037H
807116 E0                MOVX    A,@DPTR
807117 7002              JNZ     ?C0031?CASHER
807119 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 229


80711A E0                MOVX    A,@DPTR
80711B         ?C0031?CASHER:
80711B 6002              JZ      ?C0019?CASHER
  131: 	{
  132: 		CBit7 = 1;
80711D D207              SETB    CBit7
  133: 	}
  134: 
  135: }
80711F         ?C0019?CASHER:
80711F A522              ERET    
----- FUNCTION ZhkCasherSerialInit (END) -------


----- FUNCTION ZhkSerialInit (BEGIN) -----
 FILE: 'serial.c'
   46: uchar ZhkSerialInit( void )
   47: {
   48: 	uint  data dat;
   49: 	uchar data ch;
   50: 
   51: 	T2CON   = 0x34;
807121 75C834            MOV     T2CON,#034H
   52: 	SCON    = 0xD0;
807124 7598D0            MOV     SCON,#0D0H
   53:   	
   54: 	ch = ZhkDataBit + ZhkStopBit;
807127 900005            MOV     DPTR,#ZhkSerialParam+02H
80712A E4                CLR     A
80712B 93                MOVC    A,@A+DPTR
80712C FF                MOV     R7,A
80712D 900003            MOV     DPTR,#ZhkSerialParam
807130 E4                CLR     A
807131 93                MOVC    A,@A+DPTR
807132 FE                MOV     R6,A
807133 2F                ADD     A,R7
807134 F52E              MOV     ch,A
   55: 	if ( ZhkVerifyBit != VERIFY_NULL ) ch ++;
807136 A3                INC     DPTR
807137 E4                CLR     A
807138 93                MOVC    A,@A+DPTR
807139 FD                MOV     R5,A
80713A 6002              JZ      ?C0001?SERIAL
80713C 052E              INC     ch
80713E         ?C0001?SERIAL:
   56: 	if ( ch != 9 && ch != 10 ) return 0;
80713E E52E              MOV     A,ch
807140 6409              XRL     A,#09H
807142 600B              JZ      ?C0002?SERIAL
807144 E52E              MOV     A,ch
807146 640A              XRL     A,#0AH
807148 6005              JZ      ?C0002?SERIAL
80714A 7F00              MOV     R7,#00H
80714C 027202            LJMP    ?C0003?SERIAL
80714F         ?C0002?SERIAL:
   57: 	if ( ZhkVerifyBit == VERIFY_NULL || ZhkDataBit < 8 )
80714F ED                MOV     A,R5
807150 6006              JZ      ?C0005?SERIAL
807152 EE                MOV     A,R6
807153 C3                CLR     C
807154 9408              SUBB    A,#08H
807156 5002              JNC     ?C0004?SERIAL
807158         ?C0005?SERIAL:
   58: 	{
   59: 		SM0 = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 230


807158 C29F              CLR     SM0_0
   60: 	}
80715A         ?C0004?SERIAL:
   61: 	
   62: 	/* ZhkBaudRate 是波特率/100 用BCD码表示 */
   63: 	dat      = ZhkBaudRate;
80715A 900006            MOV     DPTR,#ZhkSerialParam+03H
80715D E4                CLR     A
80715E 93                MOVC    A,@A+DPTR
80715F FE                MOV     R6,A
807160 A3                INC     DPTR
807161 E4                CLR     A
807162 93                MOVC    A,@A+DPTR
807163 7C00              MOV     R4,#00H
807165 2400              ADD     A,#00H
807167 F52D              MOV     dat+01H,A
807169 EC                MOV     A,R4
80716A 3E                ADDC    A,R6
80716B F52C              MOV     dat,A
   64: 	dat     -= dat / 4096 * 6 * 256;
80716D C4                SWAP    A
80716E 540F              ANL     A,#0FH
807170 FF                MOV     R7,A
807171 7E00              MOV     R6,#00H
807173 7C06              MOV     R4,#06H
807175 7D00              MOV     R5,#00H
807177 A512800559        ECALL   ?C?IMUL
80717C C3                CLR     C
80717D E52D              MOV     A,dat+01H
80717F 9F                SUBB    A,R7
807180 F52D              MOV     dat+01H,A
807182 E52C              MOV     A,dat
807184 9E                SUBB    A,R6
807185 F52C              MOV     dat,A
   65: 	dat     -= dat /  256 * 6 *  16;
807187 FF                MOV     R7,A
807188 7E00              MOV     R6,#00H
80718A 7C00              MOV     R4,#00H
80718C 7D60              MOV     R5,#060H
80718E A512800559        ECALL   ?C?IMUL
807193 C3                CLR     C
807194 E52D              MOV     A,dat+01H
807196 9F                SUBB    A,R7
807197 F52D              MOV     dat+01H,A
807199 E52C              MOV     A,dat
80719B 9E                SUBB    A,R6
80719C F52C              MOV     dat,A
   66: 	dat     -= dat /   16 * 6;
80719E C4                SWAP    A
80719F F8                MOV     R0,A
8071A0 54F0              ANL     A,#0F0H
8071A2 C8                XCH     A,R0
8071A3 68                XRL     A,R0
8071A4 FE                MOV     R6,A
8071A5 E52D              MOV     A,dat+01H
8071A7 C4                SWAP    A
8071A8 540F              ANL     A,#0FH
8071AA 48                ORL     A,R0
8071AB FF                MOV     R7,A
8071AC 7D06              MOV     R5,#06H
8071AE A512800559        ECALL   ?C?IMUL
8071B3 C3                CLR     C
8071B4 E52D              MOV     A,dat+01H
8071B6 9F                SUBB    A,R7
8071B7 F52D              MOV     dat+01H,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 231


8071B9 E52C              MOV     A,dat
8071BB 9E                SUBB    A,R6
8071BC F52C              MOV     dat,A
   67: 	dat      = ( OSCRATE / 32 / 100  * 12 / MACHINECYCLE ) / dat;
8071BE AF2D              MOV     R7,dat+01H
8071C0 AB07              MOV     R3,AR7
8071C2 FA                MOV     R2,A
8071C3 E4                CLR     A
8071C4 F9                MOV     R1,A
8071C5 F8                MOV     R0,A
8071C6 FF                MOV     R7,A
8071C7 7E1B              MOV     R6,#01BH
8071C9 FD                MOV     R5,A
8071CA A5128017C6        ECALL   ?C?SLDIV
8071CF 8E2C              MOV     dat,R6
8071D1 8F2D              MOV     dat+01H,R7
   68: 	dat      = - dat;
8071D3 C3                CLR     C
8071D4 E4                CLR     A
8071D5 952D              SUBB    A,dat+01H
8071D7 F52D              MOV     dat+01H,A
8071D9 E4                CLR     A
8071DA 952C              SUBB    A,dat
8071DC F52C              MOV     dat,A
   69: 	RCAP2H   = dat / 256;
8071DE F5CB              MOV     RCAP2H,A
   70: 	RCAP2L   = dat % 256;
8071E0 852DCA            MOV     RCAP2L,dat+01H
   71: 
   72: //	S0STAT   = 0x20;
   73: 	ES       = 1;
8071E3 D2AC              SETB    ES0
   74: 	#ifdef _DEBUG_TRACE
   75: 	ES = 0;
   76: 	#endif
   77: 	TI       = 1;
8071E5 D299              SETB    TI_0
   78: 
   79: 	ZhkSerialTxdEmpty = 1;
8071E7 D231              SETB    ZhkSerialTxdEmpty
   80: 	ZhkSerialTxBufWr  = 0;
8071E9 E4                CLR     A
8071EA 902A51            MOV     DPTR,#ZhkSerialTxBufWr
8071ED F0                MOVX    @DPTR,A
8071EE A3                INC     DPTR
8071EF F0                MOVX    @DPTR,A
   81: 	ZhkSerialTxBufRd  = 0;
8071F0 902A4D            MOV     DPTR,#ZhkSerialTxBufRd
8071F3 F0                MOVX    @DPTR,A
8071F4 A3                INC     DPTR
8071F5 F0                MOVX    @DPTR,A
   82: 	ZhkSerialRxBufWr  = 0;
8071F6 A3                INC     DPTR
8071F7 F0                MOVX    @DPTR,A
8071F8 A3                INC     DPTR
8071F9 F0                MOVX    @DPTR,A
   83: 	ZhkSerialRxBufRd  = 0;
8071FA 902A4B            MOV     DPTR,#ZhkSerialRxBufRd
8071FD F0                MOVX    @DPTR,A
8071FE A3                INC     DPTR
8071FF F0                MOVX    @DPTR,A
   84: 	return 1;
807200 7F01              MOV     R7,#01H
   85: 	
   86: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 232


807202         ?C0003?SERIAL:
807202 A522              ERET    
----- FUNCTION ZhkSerialInit (END) -------


----- FUNCTION _ZhkSerialPutCh (BEGIN) -----
 FILE: 'serial.c'
   88: uchar ZhkSerialPutCh( uchar ch )
   89: {
;---- Variable 'ch' assigned to Register 'R7' ----
   90: 
   91: 	uint data i;
   92: 	bit data veri;
   93: 	for( i = 0 ; i < 2000 ; i ++ )	if( ZhkSerialTxdEmpty )
807204 E4                CLR     A
807205 F530              MOV     i,A
807207 F531              MOV     i+01H,A
807209         ?C0006?SERIAL:
807209 303121            JNB     ZhkSerialTxdEmpty,?C0008?SERIAL
   94: 	{ 
   95: 		ZhkSerialTxdEmpty = 0;
80720C C231              CLR     ZhkSerialTxdEmpty
   96: 		ACC   = ch;
80720E EF                MOV     A,R7
   97: 		veri  = P;
80720F A2D0              MOV     C,P
807211 921C              MOV     veri,C
   98: 		if ( ZhkVerifyBit == VERIFY_ODD  ) veri = ! veri;
807213 900004            MOV     DPTR,#ZhkSerialParam+01H
807216 E4                CLR     A
807217 93                MOVC    A,@A+DPTR
807218 FE                MOV     R6,A
807219 B40102            CJNE    A,#01H,?C0010?SERIAL
80721C B21C              CPL     veri
80721E         ?C0010?SERIAL:
   99: 		if ( ZhkVerifyBit == VERIFY_NULL ) veri = 1;
80721E EE                MOV     A,R6
80721F 7002              JNZ     ?C0011?SERIAL
807221 D21C              SETB    veri
807223         ?C0011?SERIAL:
  100: 		TB8 = veri;
807223 A21C              MOV     C,veri
807225 929B              MOV     TB8_0,C
  101: 	 	SBUF = ch;
807227 8F99              MOV     SBUF,R7
  102: 		return 0;
807229 7F00              MOV     R7,#00H
80722B 8012              SJMP    ?C0012?SERIAL
  103: 	}
80722D         ?C0008?SERIAL:
80722D 0531              INC     i+01H
80722F E531              MOV     A,i+01H
807231 7002              JNZ     ?C0031?SERIAL
807233 0530              INC     i
807235         ?C0031?SERIAL:
807235 B4D0D1            CJNE    A,#0D0H,?C0006?SERIAL
807238 E530              MOV     A,i
80723A B407CC            CJNE    A,#07H,?C0006?SERIAL
80723D         ?C0007?SERIAL:
  104: 	return 1 ;
80723D 7F01              MOV     R7,#01H
  105: 
  106: }
80723F         ?C0012?SERIAL:
80723F A522              ERET    
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 233


----- FUNCTION _ZhkSerialPutCh (END) -------


----- FUNCTION ZhkSerial_Isr (BEGIN) -----
 FILE: 'serial.c'
  150: void ZhkSerial_Isr( void ) interrupt 4 using 1 
807241 C0E0              PUSH    ACC
807243 C0F0              PUSH    B
807245 C083              PUSH    DPH
807247 C082              PUSH    DPL
807249 C0D0              PUSH    PSW
80724B 75D008            MOV     PSW,#08H
  151: {
  152: 	bit data veri;
  153: 	ZhkSaveChipSelect();
80724E C090              PUSH    P1
  154: 	ZhkHardSramSelect();
807250 759008            MOV     P1,#08H
  155: 	if ( TI )
807253 30993D            JNB     TI_0,?C0023?SERIAL
  156: 	{
  157: 		TI = 0;
807256 C299              CLR     TI_0
  158: 		if ( /*! ZhkHardIsCTS() || */ZhkSerialIsTxBufNull() )
807258 A5128137FD        ECALL   ZhkSerialIsTxBufNull
80725D EF                MOV     A,R7
80725E 6004              JZ      ?C0024?SERIAL
  159: 		{
  160: 			ZhkSerialTxdEmpty = 1;
807260 D231              SETB    ZhkSerialTxdEmpty
  161: 		}
807262 802F              SJMP    ?C0023?SERIAL
807264         ?C0024?SERIAL:
  162: 		else
  163: 		{
  164: 			SBUF = ZhkSerialTxBuf[ ZhkSerialTxBufRd ++ ];
807264 902A4D            MOV     DPTR,#ZhkSerialTxBufRd
807267 E4                CLR     A
807268 75F001            MOV     B,#01H
80726B A512800617        ECALL   ?C?ILDIX
807270 FE                MOV     R6,A
807271 74CB              MOV     A,#LOW ZhkSerialTxBuf
807273 25F0              ADD     A,B
807275 F582              MOV     DPL,A
807277 7428              MOV     A,#HIGH ZhkSerialTxBuf
807279 3E                ADDC    A,R6
80727A F583              MOV     DPH,A
80727C E0                MOVX    A,@DPTR
80727D F599              MOV     SBUF,A
  165: 			if ( ZhkVerifyBit == VERIFY_ODD  ) veri = ! veri;
80727F 900004            MOV     DPTR,#ZhkSerialParam+01H
807282 E4                CLR     A
807283 93                MOVC    A,@A+DPTR
807284 FF                MOV     R7,A
807285 B40102            CJNE    A,#01H,?C0026?SERIAL
807288 B225              CPL     veri
80728A         ?C0026?SERIAL:
  166: 			if ( ZhkVerifyBit == VERIFY_NULL ) veri = 1;
80728A EF                MOV     A,R7
80728B 7002              JNZ     ?C0027?SERIAL
80728D D225              SETB    veri
80728F         ?C0027?SERIAL:
  167: 			TB8  = veri;	
80728F A225              MOV     C,veri
807291 929B              MOV     TB8_0,C
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 234


  168: 		}
  169: 	}
807293         ?C0023?SERIAL:
  170: 	if ( RI )
807293 309834            JNB     RI_0,?C0028?SERIAL
  171: 	{
  172: 		RI = 0;
807296 C298              CLR     RI_0
  173: 		ZhkSerialRxBuf[ ZhkSerialRxBufWr ] = SBUF;
807298 902A4F            MOV     DPTR,#ZhkSerialRxBufWr
80729B E0                MOVX    A,@DPTR
80729C FE                MOV     R6,A
80729D A3                INC     DPTR
80729E E0                MOVX    A,@DPTR
80729F 2453              ADD     A,#LOW ZhkSerialRxBuf
8072A1 F582              MOV     DPL,A
8072A3 742A              MOV     A,#HIGH ZhkSerialRxBuf
8072A5 3E                ADDC    A,R6
8072A6 F583              MOV     DPH,A
8072A8 E599              MOV     A,SBUF
8072AA F0                MOVX    @DPTR,A
  174: 		
  175: 		ZhkSerialRxBufWr ++;
8072AB 902A4F            MOV     DPTR,#ZhkSerialRxBufWr
8072AE E4                CLR     A
8072AF 75F001            MOV     B,#01H
8072B2 A512800600        ECALL   ?C?IILDX
  176: 		if ( ZhkSerialRxBufWr >= ZHKSERIALRXBUFLEN )
8072B7 C3                CLR     C
8072B8 902A50            MOV     DPTR,#ZhkSerialRxBufWr+01H
8072BB E0                MOVX    A,@DPTR
8072BC 9480              SUBB    A,#080H
8072BE 902A4F            MOV     DPTR,#ZhkSerialRxBufWr
8072C1 E0                MOVX    A,@DPTR
8072C2 9401              SUBB    A,#01H
8072C4 4004              JC      ?C0028?SERIAL
  177: 			ZhkSerialRxBufWr = 0;
8072C6 E4                CLR     A
8072C7 F0                MOVX    @DPTR,A
8072C8 A3                INC     DPTR
8072C9 F0                MOVX    @DPTR,A
  178: 	}
8072CA         ?C0028?SERIAL:
  179: 	ZhkLoadChipSelect();
8072CA D090              POP     P1
  180: }
8072CC D0D0              POP     PSW
8072CE D082              POP     DPL
8072D0 D083              POP     DPH
8072D2 D0F0              POP     B
8072D4 D0E0              POP     ACC
8072D6 32                RETI    
----- FUNCTION ZhkSerial_Isr (END) -------


----- FUNCTION ZhkBusSerialInit (BEGIN) -----
 FILE: 'procotol.c'
   24: void ZhkBusSerialInit( void )
   25: {
   26: 	unsigned char data i;
   27: 	for( i = 0 ; i < sizeof( SERAIL1PARAM ) ; i ++ )
8072D7 E4                CLR     A
8072D8 F52B              MOV     i,A
8072DA         ?C0001?PROCOTOL:
   28: 		ZhkSerial1Param[ i ] = ZhkBusSerialParam[ i ];
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 235


8072DA E52B              MOV     A,i
8072DC 9018A8            MOV     DPTR,#ZhkBusSerialParam
8072DF 93                MOVC    A,@A+DPTR
8072E0 FF                MOV     R7,A
8072E1 7453              MOV     A,#LOW ZhkSerial1Param
8072E3 252B              ADD     A,i
8072E5 F582              MOV     DPL,A
8072E7 E4                CLR     A
8072E8 342D              ADDC    A,#HIGH ZhkSerial1Param
8072EA F583              MOV     DPH,A
8072EC EF                MOV     A,R7
8072ED F0                MOVX    @DPTR,A
8072EE 052B              INC     i
8072F0 E52B              MOV     A,i
8072F2 B406E5            CJNE    A,#06H,?C0001?PROCOTOL
8072F5         ?C0002?PROCOTOL:
   29: 	ZhkSerial1Init();
8072F5 A512812F0E        ECALL   ZhkSerial1Init
   30: 	memset( DownMsgBuf, 0, sizeof( DownMsgBuf ) );
8072FA 7E00              MOV     R6,#00H
8072FC 7F40              MOV     R7,#040H
8072FE 7D00              MOV     R5,#00H
807300 7B00              MOV     R3,#?C?XDATASEG
807302 7A2D              MOV     R2,#HIGH DownMsgBuf
807304 7959              MOV     R1,#LOW DownMsgBuf
807306 A5028008A6        EJMP    ?C?MEMSET
----- FUNCTION ZhkBusSerialInit (END) -------


----- FUNCTION _ZhkMobileSmsPack (BEGIN) -----
 FILE: 'mobile.c'
 1247: 	uint ZhkMobileSmsPack( struct SHORTMSG xdata* Msg, uchar xdata* DataBuf )
 1248: 	{
80730B 90193D            MOV     DPTR,#Msg
80730E EE                MOV     A,R6
80730F F0                MOVX    @DPTR,A
807310 A3                INC     DPTR
807311 EF                MOV     A,R7
807312 F0                MOVX    @DPTR,A
807313 A3                INC     DPTR
807314 EC                MOV     A,R4
807315 F0                MOVX    @DPTR,A
807316 A3                INC     DPTR
807317 ED                MOV     A,R5
807318 F0                MOVX    @DPTR,A
 1249: 		uchar code HexStr[] = "0123456789ABCDEF";
 1250: 		uint data len;
 1251: 		uint data i;
 1252: 		uchar xdata TempBuf[ 384 ];
 1253: 		len = 0;
807319 E4                CLR     A
80731A F52E              MOV     len,A
80731C F52F              MOV     len+01H,A
 1254: 			
 1255: 		memset( TempBuf, 0, sizeof( TempBuf ) );
80731E 7E01              MOV     R6,#01H
807320 7F80              MOV     R7,#080H
807322 FD                MOV     R5,A
807323 7B00              MOV     R3,#?C?XDATASEG
807325 7A19              MOV     R2,#HIGH TempBuf
807327 7941              MOV     R1,#LOW TempBuf
807329 A5128008A6        ECALL   ?C?MEMSET
 1256: 	
 1257: 		// 使用缺省短信中心号码
 1258: 		TempBuf[ len ++ ] = 00;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 236


80732E 052F              INC     len+01H
807330 E52F              MOV     A,len+01H
807332 AE2E              MOV     R6,len
807334 7002              JNZ     ?C0314?MOBILE
807336 052E              INC     len
807338         ?C0314?MOBILE:
807338 14                DEC     A
807339 2441              ADD     A,#LOW TempBuf
80733B F582              MOV     DPL,A
80733D 7419              MOV     A,#HIGH TempBuf
80733F 3E                ADDC    A,R6
807340 F583              MOV     DPH,A
807342 E4                CLR     A
807343 F0                MOVX    @DPTR,A
 1259: 		
 1260: 		// PDU类型,
 1261: 		TempBuf[ len ++ ] = 0x11;
807344 052F              INC     len+01H
807346 E52F              MOV     A,len+01H
807348 AE2E              MOV     R6,len
80734A 7002              JNZ     ?C0315?MOBILE
80734C 052E              INC     len
80734E         ?C0315?MOBILE:
80734E 14                DEC     A
80734F 2441              ADD     A,#LOW TempBuf
807351 F582              MOV     DPL,A
807353 7419              MOV     A,#HIGH TempBuf
807355 3E                ADDC    A,R6
807356 F583              MOV     DPH,A
807358 7411              MOV     A,#011H
80735A F0                MOVX    @DPTR,A
 1262: 		
 1263: 		// MR
 1264: 		TempBuf[ len ++ ] = 0x00;
80735B 052F              INC     len+01H
80735D E52F              MOV     A,len+01H
80735F AE2E              MOV     R6,len
807361 7002              JNZ     ?C0316?MOBILE
807363 052E              INC     len
807365         ?C0316?MOBILE:
807365 14                DEC     A
807366 2441              ADD     A,#LOW TempBuf
807368 F582              MOV     DPL,A
80736A 7419              MOV     A,#HIGH TempBuf
80736C 3E                ADDC    A,R6
80736D F583              MOV     DPH,A
80736F E4                CLR     A
807370 F0                MOVX    @DPTR,A
 1265: 		
 1266: 		
 1267: 		// 对方手机号码	
 1268: 		//取对方手机号码长度		
 1269: 		for( i = 0 ; i < sizeof( Msg->phone ) ; i ++ )	
807371 F530              MOV     i,A
807373 F531              MOV     i+01H,A
807375         ?C0258?MOBILE:
 1270: 		{
 1271: 			if ( Msg->phone[ i ] == 0xff )
807375 90193D            MOV     DPTR,#Msg
807378 E0                MOVX    A,@DPTR
807379 FC                MOV     R4,A
80737A A3                INC     DPTR
80737B E0                MOVX    A,@DPTR
80737C FD                MOV     R5,A
80737D 2531              ADD     A,i+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 237


80737F F582              MOV     DPL,A
807381 EC                MOV     A,R4
807382 3530              ADDC    A,i
807384 F583              MOV     DPH,A
807386 E0                MOVX    A,@DPTR
807387 F4                CPL     A
807388 7048              JNZ     ?C0260?MOBILE
 1272: 			{
 1273: 				if ( ( Msg->phone[ i - 1 ] & 0x0F ) == 0x0F ) 				
80738A E531              MOV     A,i+01H
80738C 24FF              ADD     A,#0FFH
80738E FF                MOV     R7,A
80738F E530              MOV     A,i
807391 34FF              ADDC    A,#0FFH
807393 FE                MOV     R6,A
807394 ED                MOV     A,R5
807395 2F                ADD     A,R7
807396 F582              MOV     DPL,A
807398 EC                MOV     A,R4
807399 3E                ADDC    A,R6
80739A F583              MOV     DPH,A
80739C E0                MOVX    A,@DPTR
80739D 540F              ANL     A,#0FH
80739F FF                MOV     R7,A
8073A0 BF0F12            CJNE    R7,#0FH,?C0262?MOBILE
 1274: 				{
 1275: 					TempBuf[ len++ ] = i*2 - 1;					
8073A3 E531              MOV     A,i+01H
8073A5 25E0              ADD     A,ACC
8073A7 14                DEC     A
8073A8 FF                MOV     R7,A
8073A9 052F              INC     len+01H
8073AB E52F              MOV     A,len+01H
8073AD AC2E              MOV     R4,len
8073AF 7002              JNZ     ?C0317?MOBILE
8073B1 052E              INC     len
8073B3         ?C0317?MOBILE:
 1276: 					break;
8073B3 800F              SJMP    ?C0368?MOBILE
 1277: 				}
8073B5         ?C0262?MOBILE:
 1278: 				else
 1279: 				{
 1280: 					TempBuf[ len++ ] = i*2;
8073B5 E531              MOV     A,i+01H
8073B7 25E0              ADD     A,ACC
8073B9 FF                MOV     R7,A
8073BA 052F              INC     len+01H
8073BC E52F              MOV     A,len+01H
8073BE AC2E              MOV     R4,len
8073C0 7002              JNZ     ?C0318?MOBILE
8073C2 052E              INC     len
8073C4         ?C0318?MOBILE:
8073C4         
8073C4 14                DEC     A
8073C5 2441              ADD     A,#LOW TempBuf
8073C7 F582              MOV     DPL,A
8073C9 7419              MOV     A,#HIGH TempBuf
8073CB 3C                ADDC    A,R4
8073CC F583              MOV     DPH,A
8073CE EF                MOV     A,R7
8073CF F0                MOVX    @DPTR,A
 1281: 					break;
8073D0 800E              SJMP    ?C0259?MOBILE
 1282: 				}
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 238


 1283: 			}
 1284: 		}	
8073D2         ?C0260?MOBILE:
8073D2 0531              INC     i+01H
8073D4 E531              MOV     A,i+01H
8073D6 7002              JNZ     ?C0319?MOBILE
8073D8 0530              INC     i
8073DA         ?C0319?MOBILE:
8073DA 6410              XRL     A,#010H
8073DC 4530              ORL     A,i
8073DE 7095              JNZ     ?C0258?MOBILE
8073E0         ?C0259?MOBILE:
 1285: 	
 1286: 		TempBuf[ len ++ ] = 0x91;	// 0x81本地手机,0x91国标的
8073E0 052F              INC     len+01H
8073E2 E52F              MOV     A,len+01H
8073E4 AE2E              MOV     R6,len
8073E6 7002              JNZ     ?C0320?MOBILE
8073E8 052E              INC     len
8073EA         ?C0320?MOBILE:
8073EA 14                DEC     A
8073EB 2441              ADD     A,#LOW TempBuf
8073ED F582              MOV     DPL,A
8073EF 7419              MOV     A,#HIGH TempBuf
8073F1 3E                ADDC    A,R6
8073F2 F583              MOV     DPH,A
8073F4 7491              MOV     A,#091H
8073F6 F0                MOVX    @DPTR,A
 1287: 	//	TempBuf[ len ++ ] = 0x68;	// 本地手机
 1288: 		for( i = 0 ; i < sizeof(Msg->phone ) ; i ++ )
8073F7 E4                CLR     A
8073F8 F530              MOV     i,A
8073FA F531              MOV     i+01H,A
8073FC         ?C0264?MOBILE:
 1289: 		{
 1290: 			if ( Msg->phone[ i ] == 0xFF ) 
8073FC 90193D            MOV     DPTR,#Msg
8073FF E0                MOVX    A,@DPTR
807400 FC                MOV     R4,A
807401 A3                INC     DPTR
807402 E0                MOVX    A,@DPTR
807403 FD                MOV     R5,A
807404 2531              ADD     A,i+01H
807406 F582              MOV     DPL,A
807408 EC                MOV     A,R4
807409 3530              ADDC    A,i
80740B F583              MOV     DPH,A
80740D E0                MOVX    A,@DPTR
80740E F4                CPL     A
80740F 603A              JZ      ?C0265?MOBILE
 1291: 				break;
807411         ?C0267?MOBILE:
 1292: 			TempBuf[ len ++ ] = Msg->phone[ i ] / 16 + Msg->phone[ i ] * 16;
807411 ED                MOV     A,R5
807412 2531              ADD     A,i+01H
807414 F582              MOV     DPL,A
807416 EC                MOV     A,R4
807417 3530              ADDC    A,i
807419 F583              MOV     DPH,A
80741B E0                MOVX    A,@DPTR
80741C FF                MOV     R7,A
80741D C4                SWAP    A
80741E 540F              ANL     A,#0FH
807420 FE                MOV     R6,A
807421 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 239


807422 C4                SWAP    A
807423 54F0              ANL     A,#0F0H
807425 2E                ADD     A,R6
807426 FF                MOV     R7,A
807427 052F              INC     len+01H
807429 E52F              MOV     A,len+01H
80742B AC2E              MOV     R4,len
80742D 7002              JNZ     ?C0321?MOBILE
80742F 052E              INC     len
807431         ?C0321?MOBILE:
807431 14                DEC     A
807432 2441              ADD     A,#LOW TempBuf
807434 F582              MOV     DPL,A
807436 7419              MOV     A,#HIGH TempBuf
807438 3C                ADDC    A,R4
807439 F583              MOV     DPH,A
80743B EF                MOV     A,R7
80743C F0                MOVX    @DPTR,A
 1293: 		}
80743D 0531              INC     i+01H
80743F E531              MOV     A,i+01H
807441 7002              JNZ     ?C0322?MOBILE
807443 0530              INC     i
807445         ?C0322?MOBILE:
807445 6410              XRL     A,#010H
807447 4530              ORL     A,i
807449 70B1              JNZ     ?C0264?MOBILE
80744B         ?C0265?MOBILE:
 1294: 		
 1295: 		// PID
 1296: 		TempBuf[ len ++ ] = 0x00;
80744B 052F              INC     len+01H
80744D E52F              MOV     A,len+01H
80744F AE2E              MOV     R6,len
807451 7002              JNZ     ?C0323?MOBILE
807453 052E              INC     len
807455         ?C0323?MOBILE:
807455 14                DEC     A
807456 2441              ADD     A,#LOW TempBuf
807458 F582              MOV     DPL,A
80745A 7419              MOV     A,#HIGH TempBuf
80745C 3E                ADDC    A,R6
80745D F583              MOV     DPH,A
80745F E4                CLR     A
807460 F0                MOVX    @DPTR,A
 1297: 		
 1298: 		// DCS 编码类型为7位GSM编码(0x00),0x04为8位编号,0x18为USC2编码（即16位编码）
 1299: 	#ifdef SMSENCODE_7_BIT
 1300: 		TempBuf[ len ++ ] = 0x00;
807461 052F              INC     len+01H
807463 E52F              MOV     A,len+01H
807465 AE2E              MOV     R6,len
807467 7002              JNZ     ?C0324?MOBILE
807469 052E              INC     len
80746B         ?C0324?MOBILE:
80746B 14                DEC     A
80746C 2441              ADD     A,#LOW TempBuf
80746E F582              MOV     DPL,A
807470 7419              MOV     A,#HIGH TempBuf
807472 3E                ADDC    A,R6
807473 F583              MOV     DPH,A
807475 E4                CLR     A
807476 F0                MOVX    @DPTR,A
 1301: 	#else
 1302: 		TempBuf[ len ++ ] = 0x08;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 240


 1303: 	#endif
 1304: 		
 1305: 		// VP = 63weeks,有效期为5分钟
 1306: 		TempBuf[ len ++ ] = 0x00;
807477 052F              INC     len+01H
807479 E52F              MOV     A,len+01H
80747B AE2E              MOV     R6,len
80747D 7002              JNZ     ?C0325?MOBILE
80747F 052E              INC     len
807481         ?C0325?MOBILE:
807481 14                DEC     A
807482 2441              ADD     A,#LOW TempBuf
807484 F582              MOV     DPL,A
807486 7419              MOV     A,#HIGH TempBuf
807488 3E                ADDC    A,R6
807489 F583              MOV     DPH,A
80748B E4                CLR     A
80748C F0                MOVX    @DPTR,A
 1307: 
 1308: 	#ifdef SMSENCODE_7_BIT
 1309: 		//7位编码方式
 1310: 		TempBuf[ len ++ ] = Msg->len;
80748D 90193D            MOV     DPTR,#Msg
807490 E0                MOVX    A,@DPTR
807491 FC                MOV     R4,A
807492 A3                INC     DPTR
807493 E0                MOVX    A,@DPTR
807494 FD                MOV     R5,A
807495 2410              ADD     A,#010H
807497 F582              MOV     DPL,A
807499 E4                CLR     A
80749A 3C                ADDC    A,R4
80749B F583              MOV     DPH,A
80749D A3                INC     DPTR
80749E E0                MOVX    A,@DPTR
80749F FF                MOV     R7,A
8074A0 052F              INC     len+01H
8074A2 E52F              MOV     A,len+01H
8074A4 AA2E              MOV     R2,len
8074A6 7002              JNZ     ?C0326?MOBILE
8074A8 052E              INC     len
8074AA         ?C0326?MOBILE:
8074AA 14                DEC     A
8074AB 2441              ADD     A,#LOW TempBuf
8074AD F582              MOV     DPL,A
8074AF 7419              MOV     A,#HIGH TempBuf
8074B1 3A                ADDC    A,R2
8074B2 F583              MOV     DPH,A
8074B4 EF                MOV     A,R7
8074B5 F0                MOVX    @DPTR,A
 1311: 		len += ZhkMessageToGSM( TempBuf + len, Msg->msg, Msg->len );
8074B6 7441              MOV     A,#LOW TempBuf
8074B8 252F              ADD     A,len+01H
8074BA F582              MOV     DPL,A
8074BC 7419              MOV     A,#HIGH TempBuf
8074BE 352E              ADDC    A,len
8074C0 AF82              MOV     R7,DPL
8074C2 FE                MOV     R6,A
8074C3 ED                MOV     A,R5
8074C4 2412              ADD     A,#012H
8074C6 FD                MOV     R5,A
8074C7 E4                CLR     A
8074C8 3C                ADDC    A,R4
8074C9 FC                MOV     R4,A
8074CA 90193D            MOV     DPTR,#Msg
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 241


8074CD E0                MOVX    A,@DPTR
8074CE FA                MOV     R2,A
8074CF A3                INC     DPTR
8074D0 E0                MOVX    A,@DPTR
8074D1 2410              ADD     A,#010H
8074D3 F582              MOV     DPL,A
8074D5 E4                CLR     A
8074D6 3A                ADDC    A,R2
8074D7 F583              MOV     DPH,A
8074D9 E0                MOVX    A,@DPTR
8074DA FA                MOV     R2,A
8074DB A3                INC     DPTR
8074DC E0                MOVX    A,@DPTR
8074DD FB                MOV     R3,A
8074DE A51281406F        ECALL   _ZhkMessageToGSM
8074E3 EF                MOV     A,R7
8074E4 252F              ADD     A,len+01H
8074E6 F52F              MOV     len+01H,A
8074E8 EE                MOV     A,R6
8074E9 352E              ADDC    A,len
8074EB F52E              MOV     len,A
 1312: 	#else
 1313: 		//USC2编码方式 
 1314: 		TempBuf[ len ++ ] = Msg->len * 2;
 1315: 		for( i = 0; i < Msg->len; i ++ )
 1316: 		{
 1317: 			TempBuf[ len + i ] = 0x00;
 1318: 			len++;
 1319: 			TempBuf[ len + i ] = Msg->msg[i];
 1320: 		}	
 1321: 		len += Msg->len;
 1322: 	#endif		
 1323: 		for( i = 0 ; i < len ; i ++ )
8074ED E4                CLR     A
8074EE F530              MOV     i,A
8074F0 F531              MOV     i+01H,A
8074F2         ?C0268?MOBILE:
8074F2 C3                CLR     C
8074F3 E531              MOV     A,i+01H
8074F5 952F              SUBB    A,len+01H
8074F7 E530              MOV     A,i
8074F9 952E              SUBB    A,len
8074FB 5067              JNC     ?C0269?MOBILE
 1324: 		{			
 1325: 			DataBuf[ 2 * i + 0 ] = HexStr[ TempBuf[ i ] / 16 ];
8074FD 7441              MOV     A,#LOW TempBuf
8074FF 2531              ADD     A,i+01H
807501 F582              MOV     DPL,A
807503 7419              MOV     A,#HIGH TempBuf
807505 3530              ADDC    A,i
807507 F583              MOV     DPH,A
807509 E0                MOVX    A,@DPTR
80750A C4                SWAP    A
80750B 540F              ANL     A,#0FH
80750D 9016EB            MOV     DPTR,#HexStr
807510 93                MOVC    A,@A+DPTR
807511 FD                MOV     R5,A
807512 E531              MOV     A,i+01H
807514 25E0              ADD     A,ACC
807516 FF                MOV     R7,A
807517 E530              MOV     A,i
807519 33                RLC     A
80751A FE                MOV     R6,A
80751B 90193F            MOV     DPTR,#DataBuf
80751E E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 242


80751F FA                MOV     R2,A
807520 A3                INC     DPTR
807521 E0                MOVX    A,@DPTR
807522 FB                MOV     R3,A
807523 2F                ADD     A,R7
807524 F582              MOV     DPL,A
807526 EA                MOV     A,R2
807527 3E                ADDC    A,R6
807528 F583              MOV     DPH,A
80752A ED                MOV     A,R5
80752B F0                MOVX    @DPTR,A
 1326: 			DataBuf[ 2 * i + 1 ] = HexStr[ TempBuf[ i ] % 16 ];				
80752C 7441              MOV     A,#LOW TempBuf
80752E 2531              ADD     A,i+01H
807530 F582              MOV     DPL,A
807532 7419              MOV     A,#HIGH TempBuf
807534 3530              ADDC    A,i
807536 F583              MOV     DPH,A
807538 E0                MOVX    A,@DPTR
807539 540F              ANL     A,#0FH
80753B 9016EB            MOV     DPTR,#HexStr
80753E 93                MOVC    A,@A+DPTR
80753F FD                MOV     R5,A
807540 E531              MOV     A,i+01H
807542 25E0              ADD     A,ACC
807544 FF                MOV     R7,A
807545 E530              MOV     A,i
807547 33                RLC     A
807548 FE                MOV     R6,A
807549 EF                MOV     A,R7
80754A 2401              ADD     A,#01H
80754C FF                MOV     R7,A
80754D E4                CLR     A
80754E 3E                ADDC    A,R6
80754F FE                MOV     R6,A
807550 EB                MOV     A,R3
807551 2F                ADD     A,R7
807552 F582              MOV     DPL,A
807554 EA                MOV     A,R2
807555 3E                ADDC    A,R6
807556 F583              MOV     DPH,A
807558 ED                MOV     A,R5
807559 F0                MOVX    @DPTR,A
 1327: 		}	
80755A 0531              INC     i+01H
80755C E531              MOV     A,i+01H
80755E 7002              JNZ     ?C0327?MOBILE
807560 0530              INC     i
807562         ?C0327?MOBILE:
807562 808E              SJMP    ?C0268?MOBILE
807564         ?C0269?MOBILE:
 1328: 		i *= 2;
807564 E531              MOV     A,i+01H
807566 25E0              ADD     A,ACC
807568 F531              MOV     i+01H,A
80756A E530              MOV     A,i
80756C 33                RLC     A
80756D F530              MOV     i,A
 1329: 		DataBuf[ i ++ ] = 0x1A;
80756F 90193F            MOV     DPTR,#DataBuf
807572 E0                MOVX    A,@DPTR
807573 FE                MOV     R6,A
807574 A3                INC     DPTR
807575 E0                MOVX    A,@DPTR
807576 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 243


807577 F582              MOV     DPL,A
807579 8E83              MOV     DPH,R6
80757B 0531              INC     i+01H
80757D E531              MOV     A,i+01H
80757F AC30              MOV     R4,i
807581 7002              JNZ     ?C0328?MOBILE
807583 0530              INC     i
807585         ?C0328?MOBILE:
807585 14                DEC     A
807586 FD                MOV     R5,A
807587 E582              MOV     A,DPL
807589 2D                ADD     A,R5
80758A F582              MOV     DPL,A
80758C E583              MOV     A,DPH
80758E 3C                ADDC    A,R4
80758F F583              MOV     DPH,A
807591 741A              MOV     A,#01AH
807593 F0                MOVX    @DPTR,A
 1330: 		DataBuf[ i ++ ] = '\0';
807594 8F82              MOV     DPL,R7
807596 8E83              MOV     DPH,R6
807598 0531              INC     i+01H
80759A E531              MOV     A,i+01H
80759C AE30              MOV     R6,i
80759E 7002              JNZ     ?C0329?MOBILE
8075A0 0530              INC     i
8075A2         ?C0329?MOBILE:
8075A2 14                DEC     A
8075A3 FF                MOV     R7,A
8075A4 E582              MOV     A,DPL
8075A6 2F                ADD     A,R7
8075A7 F582              MOV     DPL,A
8075A9 E583              MOV     A,DPH
8075AB 3E                ADDC    A,R6
8075AC F583              MOV     DPH,A
8075AE E4                CLR     A
8075AF F0                MOVX    @DPTR,A
 1331: 		return len - 1;
8075B0 E52F              MOV     A,len+01H
8075B2 24FF              ADD     A,#0FFH
8075B4 FF                MOV     R7,A
8075B5 E52E              MOV     A,len
8075B7 34FF              ADDC    A,#0FFH
8075B9 FE                MOV     R6,A
 1332: 	}
8075BA         ?C0271?MOBILE:
8075BA A522              ERET    
----- FUNCTION _ZhkMobileSmsPack (END) -------


----- FUNCTION _CheckHardWare (BEGIN) -----
 FILE: 'mainflow.c'
  128: u_char CheckHardWare( u_char i)
  129: {
8075BC 90159B            MOV     DPTR,#i
8075BF EF                MOV     A,R7
8075C0 F0                MOVX    @DPTR,A
  130: 	u_char xdata j = 0;
  131: //#ifndef _DEBUG_TRACE
8075C1 E4                CLR     A
8075C2 A3                INC     DPTR
8075C3 F0                MOVX    @DPTR,A
  132: //#ifdef _HAVE_CASHER	
  133: //	Trace( "\n CheckHardWare i= %bu", i );
  134: 	if( SystemParameter.BillNo == 1 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 244


8075C4 900425            MOV     DPTR,#SystemParameter+07H
8075C7 E0                MOVX    A,@DPTR
8075C8 6401              XRL     A,#01H
8075CA 6003              JZ      $ + 5H
8075CC 02765A            LJMP    ?C0001?MAINFLOW
  135: 	{
  136: 		if( i == 3 )
8075CF 90159B            MOV     DPTR,#i
8075D2 E0                MOVX    A,@DPTR
8075D3 6403              XRL     A,#03H
8075D5 7025              JNZ     ?C0002?MAINFLOW
  137: 		{	
  138: 			if( HardWareErr & 0x0001)			
8075D7 900480            MOV     DPTR,#HardWareErr+01H
8075DA E0                MOVX    A,@DPTR
8075DB 30E004            JNB     ACC.0,?C0003?MAINFLOW
  139: 				GetDeviceStatus( 0  );//取纸币器状态		
8075DE E4                CLR     A
8075DF FF                MOV     R7,A
8075E0 8039              SJMP    ?C1009?MAINFLOW
8075E2         ?C0003?MAINFLOW:
  140: 			else if( HardWareErr & 0x0004 )
8075E2 900480            MOV     DPTR,#HardWareErr+01H
8075E5 E0                MOVX    A,@DPTR
8075E6 30E237            JNB     ACC.2,?C0006?MAINFLOW
  141: 			{
  142: 				GetDeviceStatus( 2  );//#1退币器测试				
8075E9 A512807C60        ECALL   ?L?COM0025
  143: 				GetDeviceStatus( 3  );//#2退币器测试		
  144: 				GetDeviceStatus( 4  );//#3退币器测试
8075EE 7F04              MOV     R7,#04H
8075F0 A512807C69        ECALL   _GetDeviceStatus
  145: 				i = 0;
8075F5 E4                CLR     A
8075F6 90159B            MOV     DPTR,#i
8075F9 F0                MOVX    @DPTR,A
  146: 			}	
  147: 		}
8075FA 8024              SJMP    ?C0006?MAINFLOW
8075FC         ?C0002?MAINFLOW:
  148: 		else
  149: 		{
  150: 			if( i == 0 )
8075FC 90159B            MOV     DPTR,#i
8075FF E0                MOVX    A,@DPTR
807600 7002              JNZ     ?C0007?MAINFLOW
  151: 				GetDeviceStatus( 0  );//取纸币器状态
807602 8004              SJMP    ?C1010?MAINFLOW
807604         ?C0007?MAINFLOW:
  152: 			else if( IsCanInCashFlag == 1 /*HopperSetList[0].HopperState == 1*/ )
807604 302607            JNB     IsCanInCashFlag,?C0008?MAINFLOW
  153: 				GetDeviceStatus( 0  );//取纸币器状态
807607 E4                CLR     A
807608         
807608 FF                MOV     R7,A
807609 A512807C69        ECALL   _GetDeviceStatus
80760E         ?C0008?MAINFLOW:
  154: 			if ( i == 0 )
80760E 90159B            MOV     DPTR,#i
807611 E0                MOVX    A,@DPTR
807612 700C              JNZ     ?C0006?MAINFLOW
  155: 			{
  156: 				GetDeviceStatus( 2  );//#1退币器测试
807614 A512807C60        ECALL   ?L?COM0025
  157: 				GetDeviceStatus( 3  );//#2退币器测试
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 245


  158: 				GetDeviceStatus( 4  );//#3退币器测试
807619 7F04              MOV     R7,#04H
80761B         
80761B A512807C69        ECALL   _GetDeviceStatus
  159: 			}
  160: 		}
807620         ?C0006?MAINFLOW:
  161: 		if( ( DeviceStatus.BillAccepter != 0 ) && ( DeviceStatus.CoinAccepter != 0 ) )
807620 900B16            MOV     DPTR,#DeviceStatus
807623 E0                MOVX    A,@DPTR
807624 FD                MOV     R5,A
807625 600D              JZ      ?C0011?MAINFLOW
807627 A3                INC     DPTR
807628 E0                MOVX    A,@DPTR
807629 6009              JZ      ?C0011?MAINFLOW
  162: 		//	HardWareErr = ERR_BILL_COIN;				
  163: 			HardWareErr |= 0x0001;
80762B 900480            MOV     DPTR,#HardWareErr+01H
80762E E0                MOVX    A,@DPTR
80762F 4401              ORL     A,#01H
807631 F0                MOVX    @DPTR,A
807632 8061              SJMP    ?C0018?MAINFLOW
807634         ?C0011?MAINFLOW:
  164: 		else if( ( ( DeviceStatus.BillAccepter != 0 ) || ( IsCanInCashFlag == 0 ) ) && ( DeviceStatus.CoinAccepter != 0
>>  ) )
807634 ED                MOV     A,R5
807635 7003              JNZ     ?C0014?MAINFLOW
807637 202608            JB      IsCanInCashFlag,?C0013?MAINFLOW
80763A         ?C0014?MAINFLOW:
80763A 900B17            MOV     DPTR,#DeviceStatus+01H
80763D E0                MOVX    A,@DPTR
80763E 6002              JZ      ?C0013?MAINFLOW
  165: 		{
  166: 			//HardWareErr = ERR_COIN;				
  167: 			HardWareErr |= 0x0002;
  168: 		}
807640 8040              SJMP    ?C1011?MAINFLOW
807642         ?C0013?MAINFLOW:
  169: 		else if( ( DeviceStatus.CoinAccepter == 0 ) || ( ( DeviceStatus.BillAccepter == 0 ) && ( IsCanInCashFlag == 1 )
>>  ) )
807642 900B17            MOV     DPTR,#DeviceStatus+01H
807645 E0                MOVX    A,@DPTR
807646 6009              JZ      ?C0017?MAINFLOW
807648 900B16            MOV     DPTR,#DeviceStatus
80764B E0                MOVX    A,@DPTR
80764C 7047              JNZ     ?C0018?MAINFLOW
80764E 302644            JNB     IsCanInCashFlag,?C0018?MAINFLOW
807651         ?C0017?MAINFLOW:
  170: 			HardWareErr = 0;	
807651 E4                CLR     A
807652 90047F            MOV     DPTR,#HardWareErr
807655 F0                MOVX    @DPTR,A
807656 A3                INC     DPTR
807657 F0                MOVX    @DPTR,A
  171: 	}
807658 803B              SJMP    ?C0018?MAINFLOW
80765A         ?C0001?MAINFLOW:
  172: 	else
  173: 	{
  174: 		if( i == 3 )
80765A 90159B            MOV     DPTR,#i
80765D E0                MOVX    A,@DPTR
80765E B40309            CJNE    A,#03H,?C0019?MAINFLOW
  175: 		{				
  176: //			if( HardWareErr & 0x0002 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 246


  177: //				GetDeviceStatus( 1  );//取硬币器状态
  178: 			//else if( HardWareErr == ERR_HOPPER )
  179: 			if( HardWareErr & 0x0004 )
807661 900480            MOV     DPTR,#HardWareErr+01H
807664 E0                MOVX    A,@DPTR
807665 30E214            JNB     ACC.2,?C0021?MAINFLOW
  180: 			{
  181: 				GetDeviceStatus( 2  );//#1退币器测试				
  182: 				GetDeviceStatus( 3  );//#2退币器测试		
  183: 				GetDeviceStatus( 4  );//#3退币器测试
  184: 			}	
  185: 		}
807668 8006              SJMP    ?C1012?MAINFLOW
80766A         ?C0019?MAINFLOW:
  186: 		else
  187: 		{		
  188: //			GetDeviceStatus( 1  );//取硬币器状态
  189: 			if ( i == 0 )
80766A 90159B            MOV     DPTR,#i
80766D E0                MOVX    A,@DPTR
80766E 700C              JNZ     ?C0021?MAINFLOW
  190: 			{
  191: 				GetDeviceStatus( 2  );//#1退币器测试
807670         
807670 A512807C60        ECALL   ?L?COM0025
  192: 				GetDeviceStatus( 3  );//#2退币器测试
  193: 				GetDeviceStatus( 4  );//#3退币器测试
807675 7F04              MOV     R7,#04H
807677 A512807C69        ECALL   _GetDeviceStatus
  194: 			}
  195: 		}				
80767C         ?C0021?MAINFLOW:
  196: 	
  197: 		if( DeviceStatus.CoinAccepter != 0 )
80767C 900B17            MOV     DPTR,#DeviceStatus+01H
80767F E0                MOVX    A,@DPTR
807680 6009              JZ      ?C0023?MAINFLOW
  198: 		//	HardWareErr = ERR_COIN;	
  199: 			HardWareErr |= 0x0002;
807682         
807682 900480            MOV     DPTR,#HardWareErr+01H
807685 E0                MOVX    A,@DPTR
807686 4402              ORL     A,#02H
807688 F0                MOVX    @DPTR,A
807689 800A              SJMP    ?C0018?MAINFLOW
80768B         ?C0023?MAINFLOW:
  200: 		 else
  201: 		 {		 	
  202: 			//	HardWareErr = 0;	
  203: 			if( HardWareErr & 0x0002 )			
80768B 900480            MOV     DPTR,#HardWareErr+01H
80768E E0                MOVX    A,@DPTR
80768F 30E103            JNB     ACC.1,?C0018?MAINFLOW
  204: 				HardWareErr &= ( 0xffff - 0x00002 );		
807692 54FD              ANL     A,#0FDH
807694 F0                MOVX    @DPTR,A
  205: 		 }
  206: //		 Trace( "\n CheckHardWare HardWareErr2= %bu", HardWareErr );
  207: 	}
807695         ?C0018?MAINFLOW:
  208: 	if ( i == 0 )
807695 90159B            MOV     DPTR,#i
807698 E0                MOVX    A,@DPTR
807699 6003              JZ      $ + 5H
80769B 027776            LJMP    ?C0026?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 247


  209: 	{			
  210: 		for( i = 0; i < 3; i ++ )
80769E F0                MOVX    @DPTR,A
80769F         ?C0027?MAINFLOW:
80769F 90159B            MOV     DPTR,#i
8076A2 E0                MOVX    A,@DPTR
8076A3 FF                MOV     R7,A
8076A4 C3                CLR     C
8076A5 9403              SUBB    A,#03H
8076A7 4003              JC      $ + 5H
8076A9 02772B            LJMP    ?C0028?MAINFLOW
  211: 		{
  212: 			switch( HopperSetList[i].HopperIndex )
8076AC EF                MOV     A,R7
8076AD 25E0              ADD     A,ACC
8076AF 25E0              ADD     A,ACC
8076B1 24E1              ADD     A,#LOW HopperSetList+02H
8076B3 F582              MOV     DPL,A
8076B5 E4                CLR     A
8076B6 340A              ADDC    A,#HIGH HopperSetList+02H
8076B8 F583              MOV     DPH,A
8076BA E0                MOVX    A,@DPTR
8076BB 24FE              ADD     A,#0FEH
8076BD 601B              JZ      ?C0035?MAINFLOW
8076BF 14                DEC     A
8076C0 602C              JZ      ?C0039?MAINFLOW
8076C2 2402              ADD     A,#02H
8076C4 705C              JNZ     ?C0029?MAINFLOW
  213: 			{
  214: 				case 1:
8076C6         ?C0031?MAINFLOW:
  215: 					if( DeviceStatus.ChangeUnit1 == 2 )
8076C6 900B18            MOV     DPTR,#DeviceStatus+02H
8076C9 E0                MOVX    A,@DPTR
8076CA FF                MOV     R7,A
8076CB 6402              XRL     A,#02H
8076CD 6053              JZ      ?C0029?MAINFLOW
  216: 						continue;	//break;
8076CF         ?C0032?MAINFLOW:
  217: 					if( DeviceStatus.ChangeUnit1 == 1 )
8076CF EF                MOV     A,R7
8076D0 90159B            MOV     DPTR,#i
8076D3 B40102            CJNE    A,#01H,?C0033?MAINFLOW
  218: 						HopperSetList[i].HopperState = 2;
8076D6 8026              SJMP    ?C1015?MAINFLOW
8076D8         ?C0033?MAINFLOW:
  219: 					else
  220: 						HopperSetList[i].HopperState = 1;
  221: 				break;
8076D8 8037              SJMP    ?C1016?MAINFLOW
  222: 				case 2:
8076DA         ?C0035?MAINFLOW:
  223: 					if( DeviceStatus.ChangeUnit2 == 2 )
8076DA 900B19            MOV     DPTR,#DeviceStatus+03H
8076DD E0                MOVX    A,@DPTR
8076DE FF                MOV     R7,A
8076DF 6402              XRL     A,#02H
8076E1 603F              JZ      ?C0029?MAINFLOW
  224: 						continue;	//break;
8076E3         ?C0036?MAINFLOW:
  225: 					if( DeviceStatus.ChangeUnit2 == 1 )
8076E3 EF                MOV     A,R7
8076E4 90159B            MOV     DPTR,#i
8076E7 B40102            CJNE    A,#01H,?C0037?MAINFLOW
  226: 						HopperSetList[i].HopperState = 2;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 248


8076EA         
8076EA 8012              SJMP    ?C1015?MAINFLOW
8076EC         ?C0037?MAINFLOW:
  227: 					else
  228: 						HopperSetList[i].HopperState = 1;
8076EC         
  229: 				break;
8076EC 8023              SJMP    ?C1016?MAINFLOW
  230: 				case 3:
8076EE         ?C0039?MAINFLOW:
  231: 					if( DeviceStatus.ChangeUnit3 == 2 )
8076EE 900B1A            MOV     DPTR,#DeviceStatus+04H
8076F1 E0                MOVX    A,@DPTR
8076F2 FF                MOV     R7,A
8076F3 6402              XRL     A,#02H
8076F5 602B              JZ      ?C0029?MAINFLOW
  232: 						continue;	//break;
8076F7         ?C0040?MAINFLOW:
  233: 					if( DeviceStatus.ChangeUnit3 == 1 )
8076F7 EF                MOV     A,R7
8076F8 90159B            MOV     DPTR,#i
8076FB B40113            CJNE    A,#01H,?C0041?MAINFLOW
  234: 						HopperSetList[i].HopperState = 2;
8076FE         
8076FE E0                MOVX    A,@DPTR
8076FF 25E0              ADD     A,ACC
807701 25E0              ADD     A,ACC
807703 24E2              ADD     A,#LOW HopperSetList+03H
807705 F582              MOV     DPL,A
807707 E4                CLR     A
807708 340A              ADDC    A,#HIGH HopperSetList+03H
80770A F583              MOV     DPH,A
80770C 7402              MOV     A,#02H
80770E F0                MOVX    @DPTR,A
80770F 8011              SJMP    ?C0029?MAINFLOW
807711         ?C0041?MAINFLOW:
  235: 					else
  236: 						HopperSetList[i].HopperState = 1;
807711         
807711 E0                MOVX    A,@DPTR
807712 25E0              ADD     A,ACC
807714 25E0              ADD     A,ACC
807716 24E2              ADD     A,#LOW HopperSetList+03H
807718 F582              MOV     DPL,A
80771A E4                CLR     A
80771B 340A              ADDC    A,#HIGH HopperSetList+03H
80771D F583              MOV     DPH,A
80771F 7401              MOV     A,#01H
807721 F0                MOVX    @DPTR,A
  237: 				break;
  238: 				default:
  239: 					continue;	
  240: 			}
  241: 		}
807722         ?C0029?MAINFLOW:
807722 90159B            MOV     DPTR,#i
807725 E0                MOVX    A,@DPTR
807726 04                INC     A
807727 F0                MOVX    @DPTR,A
807728 02769F            LJMP    ?C0027?MAINFLOW
80772B         ?C0028?MAINFLOW:
  242: 		for( j = 0; j < 3; j ++ )
80772B E4                CLR     A
80772C 90159C            MOV     DPTR,#j
80772F F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 249


807730         ?C0044?MAINFLOW:
807730 90159C            MOV     DPTR,#j
807733 E0                MOVX    A,@DPTR
807734 FF                MOV     R7,A
807735 C3                CLR     C
807736 9403              SUBB    A,#03H
807738 501D              JNC     ?C0045?MAINFLOW
  243: 		{
  244: 			if( HopperSetList[j].price == 0 )
80773A EF                MOV     A,R7
80773B 25E0              ADD     A,ACC
80773D 25E0              ADD     A,ACC
80773F 24DF              ADD     A,#LOW HopperSetList
807741 F582              MOV     DPL,A
807743 E4                CLR     A
807744 340A              ADDC    A,#HIGH HopperSetList
807746 F583              MOV     DPH,A
807748 E0                MOVX    A,@DPTR
807749 FE                MOV     R6,A
80774A A3                INC     DPTR
80774B E0                MOVX    A,@DPTR
80774C 4E                ORL     A,R6
80774D 6008              JZ      ?C0045?MAINFLOW
  245: 				break;
  246: 		}
80774F         ?C0046?MAINFLOW:
80774F 90159C            MOV     DPTR,#j
807752 E0                MOVX    A,@DPTR
807753 04                INC     A
807754 F0                MOVX    @DPTR,A
807755 80D9              SJMP    ?C0044?MAINFLOW
807757         ?C0045?MAINFLOW:
  247: 		if( ( j > 0 ) && ( HopperSetList[j - 1].HopperState != 1 ) )		
807757 90159C            MOV     DPTR,#j
80775A E0                MOVX    A,@DPTR
80775B FF                MOV     R7,A
80775C D3                SETB    C
80775D 9400              SUBB    A,#00H
80775F 4015              JC      ?C0026?MAINFLOW
807761 EF                MOV     A,R7
807762 25E0              ADD     A,ACC
807764 25E0              ADD     A,ACC
807766 24DE              ADD     A,#LOW HopperSetList-01H
807768 F582              MOV     DPL,A
80776A E4                CLR     A
80776B 340A              ADDC    A,#HIGH HopperSetList-01H
80776D F583              MOV     DPH,A
80776F E0                MOVX    A,@DPTR
807770 6401              XRL     A,#01H
807772 6002              JZ      ?C0026?MAINFLOW
  248: 			IsCanInCashFlag = 0;
807774 C226              CLR     IsCanInCashFlag
  249: 	}
807776         ?C0026?MAINFLOW:
  250: //	Trace( "\n CheckHardWare HardWareErr = %bu", HardWareErr );	
  251: //#endif
  252: 	return( 0 );
807776 7F00              MOV     R7,#00H
  253: }
807778         ?C0049?MAINFLOW:
807778 A522              ERET    
----- FUNCTION _CheckHardWare (END) -------


----- FUNCTION ZhkInit (BEGIN) -----
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 250


 FILE: 'initialization.c'
   14: uchar ZhkInit( void )
   15: {
   16: 	ZhkHardSramSelect();
   17: 	ZhkIOInit();
80777A 759008            MOV     P1,#08H
   18: 	ZhkTimerInit();
80777D A51280972A        ECALL   ZhkIOInit
   19: //	SstFlashSelfCheck();
807782 A51280FEC2        ECALL   ZhkTimerInit
   20: 	ClockInit();
807787 A5128077BC        ECALL   ClockInit
   21: 	ZhkSerialInit();
80778C A512807121        ECALL   ZhkSerialInit
   22: 	ZhkSerial1Init();
807791 A512812F0E        ECALL   ZhkSerial1Init
   23: 	EA = 1;
807796 D2AF              SETB    EA
   24: 	SchedulerInit();	
807798 A51281142F        ECALL   SchedulerInit
   25: 	KeyboardInit();
80779D A5128077CD        ECALL   KeyboardInit
   26: 	KeyUnLock();
8077A2 A5128077AE        ECALL   KeyUnLock
   27: 	ZhkHardSramSelect();
8077A7 759008            MOV     P1,#08H
   28: 	return 0;
8077AA 7F00              MOV     R7,#00H
   29: }
8077AC         ?C0001?INITIALIZATION:
8077AC A522              ERET    
----- FUNCTION ZhkInit (END) -------


----- FUNCTION KeyUnLock (BEGIN) -----
 FILE: 'key.c'
   49: bit KeyUnLock( void )
   50: {
   51: 	ZhkKeyPermission = 1;
   52: 	KeyboardInit();
8077AE 902DEB            MOV     DPTR,#ZhkKeyPermission
8077B1 7401              MOV     A,#01H
8077B3 F0                MOVX    @DPTR,A
   53: 	return 1;
8077B4 A5128077CD        ECALL   KeyboardInit
   54: }
8077B9 D3                SETB    C
   55: uchar GetKey( void )
8077BA         ?C0003?KEY:
8077BA A522              ERET    
----- FUNCTION KeyUnLock (END) -------


----- FUNCTION ClockInit (BEGIN) -----
 FILE: 'clock.c'
    6: bit ClockInit( void )			small
    7: {
    8: 	bit c;
    9: 	ZhkHardDs12887Select();	
8077BC 75900B            MOV     P1,#0BH
   10: 	c = Ds12887Init();
8077BF A512812B81        ECALL   Ds12887Init
8077C4 9217              MOV     c,C
   11: 	ZhkHardSramSelect();
8077C6 759008            MOV     P1,#08H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 251


   12: 	return c;
8077C9 A217              MOV     C,c
   13: }
8077CB         ?C0001?CLOCK:
8077CB A522              ERET    
----- FUNCTION ClockInit (END) -------


----- FUNCTION KeyboardInit (BEGIN) -----
 FILE: 'key.c'
   37: void KeyboardInit( void )
   38: {
   39: 	//uchar data i;
   40: 	memset( ZhkKeyBuf , KEY_NULL , sizeof( ZhkKeyBuf ));
8077CD 7E00              MOV     R6,#00H
8077CF 7F01              MOV     R7,#01H
8077D1 7DFF              MOV     R5,#0FFH
8077D3 7B00              MOV     R3,#?C?XDATASEG
8077D5 7A2D              MOV     R2,#HIGH ZhkKeyBuf
8077D7 79ED              MOV     R1,#LOW ZhkKeyBuf
8077D9 A5128008A6        ECALL   ?C?MEMSET
   41: 	ZhkKeyPermission = 1;
8077DE 902DEB            MOV     DPTR,#ZhkKeyPermission
8077E1 7401              MOV     A,#01H
8077E3 F0                MOVX    @DPTR,A
   42: 	ZhkKeyBufPtr = 0;
8077E4 E4                CLR     A
8077E5 A3                INC     DPTR
8077E6 F0                MOVX    @DPTR,A
   43: }
8077E7 A522              ERET    
----- FUNCTION KeyboardInit (END) -------


----- FUNCTION main (BEGIN) -----
 FILE: 'mainflow.c'
 3735: void main()
 3736: {
 3737: //	SCON  = 0x50;		        /* SCON: mode 1, 8-bit UART, enable rcvr      */
 3738: //    TMOD |= 0x20;               /* TMOD: timer 1, mode 2, 8-bit reload        */
 3739: //    TH1   = 221;                /* TH1:  reload value for 1200 baud @ 16MHz   */
 3740: //    TR1   = 1;                  /* TR1:  timer 1 run                          */
 3741: //    TI    = 1; 	
 3742: 
 3743: //	TestSysInitParam();
 3744: //	SystemParameter.MobileON = 1;
 3745: //	ScanDeviceStatus();
 3746: //	TradePack();
 3747: 
 3748: 	ZhkInit();
8077E9 A51280777A        ECALL   ZhkInit
 3749: 
 3750: #ifdef _DEBUG_TRACE
 3751: 	TraceInit();
 3752: #endif	
 3753: 	RunFlow();
8077EE A5028077F3        EJMP    RunFlow
----- FUNCTION main (END) -------


----- FUNCTION RunFlow (BEGIN) -----
 FILE: 'mainflow.c'
 3618: BEGIN_FLOW( RunFlow )
 3619: 	NODE(5)		SystemInit()
8077F3 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 252


8077F4 F527              MOV     ret,A
 3620: 	//硬件全检,其它设备逻辑检测
8077F6         NODE_5:
8077F6         ?C0802?MAINFLOW:
8077F6 A512807ADC        ECALL   CoreProcessCycle
8077FB A512801F56        ECALL   SystemInit
807800 8F27              MOV     ret,R7
 3621: 	//初始化参数、设备工作状态(如允许查询状态等等)	
 3622: 	NODE(15)	DeviceDefaultSetting()		
807802         NODE_15:
807802         ?C0805?MAINFLOW:
807802 A512807ADC        ECALL   CoreProcessCycle
807807 A51280B6D9        ECALL   DeviceDefaultSetting
80780C 8F27              MOV     ret,R7
 3623: 	//显示退出服务
 3624: 	NODE(20)	DisplayOutServer()
80780E         NODE_20:
80780E         ?C0808?MAINFLOW:
80780E A512807ADC        ECALL   CoreProcessCycle
807813 A51280B6FB        ECALL   DisplayOutServer
807818 8F27              MOV     ret,R7
 3625: 	//初始化系统参数
 3626: 	NODE(21)	SysInitParam()
80781A         NODE_21:
80781A         ?C0811?MAINFLOW:
80781A A512807ADC        ECALL   CoreProcessCycle
80781F A51280B70B        ECALL   SysInitParam
807824 8F27              MOV     ret,R7
 3627: 	
 3628: 	//查询是否有货，全无货则为无货，无货返回1并退出服务
 3629: 	NODE(22)	CheckGoodsSumAndLoad()			R1(400)	
807826         NODE_22:
807826         ?C0814?MAINFLOW:
807826 A512809824        ECALL   ?L?COM002E
80782B 8F27              MOV     ret,R7
80782D E527              MOV     A,ret
80782F 6401              XRL     A,#01H
807831 7003              JNZ     $ + 5H
807833 027ABE            LJMP    ?C0960?MAINFLOW
 3630: 
 3631: 	///IDLE
 3632: 	//return1=维护状态，　0=运行状态,运行相互变量清理工作也放在这里
 3633: 	NODE(25)	CheckOperStatus()		R1(200)		
807836         NODE_25:
807836         ?C0818?MAINFLOW:
807836         ?C0819?MAINFLOW:
807836 A512807ADC        ECALL   CoreProcessCycle
80783B A51280BFFA        ECALL   CheckOperStatus
807840 8F27              MOV     ret,R7
807842 E527              MOV     A,ret
807844 6401              XRL     A,#01H
807846 7003              JNZ     $ + 5H
807848 027A8E            LJMP    ?C0951?MAINFLOW
 3634: 		//检查是否有查询命令
 3635: 	NODE(26) 	CheckQureyCmd()
80784B         NODE_26:
80784B         ?C0824?MAINFLOW:
80784B A512807ADC        ECALL   CoreProcessCycle
807850 A51280C6BF        ECALL   CheckQureyCmd
807855 8F27              MOV     ret,R7
 3636: 	//判断是否有短信需要发送
 3637: 	NODE(27) 	CycleSendSMS()	
807857         NODE_27:
807857         ?C0827?MAINFLOW:
807857 A512807ADC        ECALL   CoreProcessCycle
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 253


80785C A51280AEB6        ECALL   CycleSendSMS
807861 8F27              MOV     ret,R7
 3638: 	//查检是否有按键,有数字键输入，返回1,否则返回2
 3639: 	NODE(28)	CheckKeyPress()		R1(42)  R2(30)	
807863         NODE_28:
807863         ?C0830?MAINFLOW:
807863 A51280C816        ECALL   ?L?COM003F
807868 8F27              MOV     ret,R7
80786A E527              MOV     A,ret
80786C 6401              XRL     A,#01H
80786E 6041              JZ      ?C0853?MAINFLOW
807870         ?C0831?MAINFLOW:
 3640: 	//查询硬件状态值,硬件包括键盘、液晶屏，无故障返回0,有故障返回1并退出服务
 3641: 	NODE(30)	CheckHardwareState()			R1(400)	
807870         NODE_30:
807870         ?C0836?MAINFLOW:
807870 A512807ADC        ECALL   CoreProcessCycle
807875 A51280C694        ECALL   CheckHardwareState
80787A 8F27              MOV     ret,R7
80787C E527              MOV     A,ret
80787E 6401              XRL     A,#01H
807880 7003              JNZ     $ + 5H
807882 027ABE            LJMP    ?C0960?MAINFLOW
 3642: 	//确定找零器中的硬币是否足
 3643: //	NODE(36) 	CheckCoinRemain()		R1(400)
 3644: 	//查询是否有货，全无货则为无货，无货返回1并退出服务
 3645: //	NODE(40)	CheckGoodsSumAndLoad()			R1(400)	
 3646: 
 3647: 	//使能收币器
 3648: 	NODE(35)	EnableBillDev()	
807885         NODE_35:
807885         ?C0840?MAINFLOW:
807885 A512807ADC        ECALL   CoreProcessCycle
80788A A512808FFA        ECALL   EnableBillDev
80788F 8F27              MOV     ret,R7
 3649: 	//查检是否有币插入,有返回1,无返回0
 3650: 	NODE(36)	IsInsertBill()			R1(47)			
807891         NODE_36:
807891         ?C0843?MAINFLOW:
807891 A512809450        ECALL   ?L?COM003E
807896 8F27              MOV     ret,R7
807898 E527              MOV     A,ret
80789A 6401              XRL     A,#01H
80789C 6058              JZ      ?C0868?MAINFLOW
 3651: 
 3652: 	//查检是否有按键,有数字键输入，返回1,否则返回2
 3653: 	NODE(41)	CheckKeyPress()		R1(42)  R2(45)	
80789E         NODE_41:
80789E         ?C0848?MAINFLOW:
80789E A51280C816        ECALL   ?L?COM003F
8078A3 8F27              MOV     ret,R7
8078A5 E527              MOV     A,ret
8078A7 6401              XRL     A,#01H
8078A9 6006              JZ      ?C0853?MAINFLOW
8078AB         ?C0849?MAINFLOW:
8078AB E527              MOV     A,ret
8078AD 6402              XRL     A,#02H
8078AF 601E              JZ      ?C0859?MAINFLOW
 3654: 
 3655: 	//显示输入的货道，并判断输入是否正确，是否存在此货道,输入正确返回0,输入失败返回1
 3656: 	NODE(42)	QueryDisplayInputCode()	R1(45)
8078B1         NODE_42:
8078B1         ?C0853?MAINFLOW:
8078B1 A512807ADC        ECALL   CoreProcessCycle
8078B6 A512801FBE        ECALL   QueryDisplayInputCode
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 254


8078BB 8F27              MOV     ret,R7
8078BD E527              MOV     A,ret
8078BF 6401              XRL     A,#01H
8078C1 600C              JZ      ?C0859?MAINFLOW
 3657: 
 3658: 	//判断货道是否正常并显示
 3659: 	NODE(43) 	QueryIsGoodsWay()
8078C3         NODE_43:
8078C3         ?C0857?MAINFLOW:
8078C3 A512807ADC        ECALL   CoreProcessCycle
8078C8 A51280C8A0        ECALL   QueryIsGoodsWay
8078CD 8F27              MOV     ret,R7
 3660: 			
 3661: 	//显示服务情况，如是进入服务则判断是否有按键，有返回0，无返回1,
 3662: 	NODE(45)	DispWelOrOutServ()		R1(25)		R2(47)
8078CF         NODE_45:
8078CF         ?C0859?MAINFLOW:
8078CF A512807ADC        ECALL   CoreProcessCycle
8078D4 A512802115        ECALL   DispWelOrOutServ
8078D9 8F27              MOV     ret,R7
8078DB E527              MOV     A,ret
8078DD 6401              XRL     A,#01H
8078DF 7003              JNZ     $ + 5H
8078E1 027836            LJMP    ?C0819?MAINFLOW
8078E4         ?C0860?MAINFLOW:
8078E4 E527              MOV     A,ret
8078E6 6402              XRL     A,#02H
8078E8 600C              JZ      ?C0868?MAINFLOW
 3663: 	
 3664: 
 3665: 	///服务　
 3666: 	//查检是否有币插入,有返回1,无返回0
 3667: 	NODE(46)	IsInsertBill()			R1(47)//85
8078EA         NODE_46:
8078EA         ?C0864?MAINFLOW:
8078EA A512809450        ECALL   ?L?COM003E
8078EF 8F27              MOV     ret,R7
8078F1 E527              MOV     A,ret
8078F3 B4011B            CJNE    A,#01H,?C0873?MAINFLOW
 3668: 			GOTONODE( 48 )
 3669: 	//收取纸币并比较和显示，
 3670: 	//当金额大于限额时返回1直接去选货，
 3671: 	//否则返回0继续等待按键或插钱
 3672: 	//第一次收钱失败时返回2
 3673: 	NODE(47)	GetBill()		R1(50)		R2(25)//90
8078F6         NODE_47:
8078F6         ?C0868?MAINFLOW:
8078F6 A512807ADC        ECALL   CoreProcessCycle
8078FB A512801CB0        ECALL   GetBill
807900 8F27              MOV     ret,R7
807902 E527              MOV     A,ret
807904 6401              XRL     A,#01H
807906 6024              JZ      ?C0877?MAINFLOW
807908         ?C0869?MAINFLOW:
807908 E527              MOV     A,ret
80790A 6402              XRL     A,#02H
80790C 7003              JNZ     $ + 5H
80790E 027836            LJMP    ?C0819?MAINFLOW
 3674: 	//查检是否有数字按键,有返回0,没有但余额大于零返回1，否则返回2
 3675: 	NODE(48)	IsInputGoodsNo()		R1(46)	R2(25)//105
807911         NODE_48:
807911         ?C0873?MAINFLOW:
807911 A512807ADC        ECALL   CoreProcessCycle
807916 A51280CB3D        ECALL   IsInputGoodsNo
80791B 8F27              MOV     ret,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 255


80791D E527              MOV     A,ret
80791F 6401              XRL     A,#01H
807921 60C7              JZ      ?C0864?MAINFLOW
807923         ?C0874?MAINFLOW:
807923 E527              MOV     A,ret
807925 6402              XRL     A,#02H
807927 7003              JNZ     $ + 5H
807929 027836            LJMP    ?C0819?MAINFLOW
 3676: 
 3677: 	//显示输入货道编号,包括输入正确与否判断和输入超时判断，输入正确返回0，输入错误返回1
 3678: 	//输入CANNEL或输入超时返回2并退出服务
 3679: 	NODE(50)	DisplayInputCode()	R1( 50 )	R2(25 )
80792C         NODE_50:
80792C         ?C0876?MAINFLOW:
80792C         ?C0877?MAINFLOW:
80792C A512807ADC        ECALL   CoreProcessCycle
807931 A512802315        ECALL   DisplayInputCode
807936 8F27              MOV     ret,R7
807938 E527              MOV     A,ret
80793A 6401              XRL     A,#01H
80793C 60EE              JZ      ?C0877?MAINFLOW
80793E         ?C0878?MAINFLOW:
80793E E527              MOV     A,ret
807940 6402              XRL     A,#02H
807942 7003              JNZ     $ + 5H
807944 027836            LJMP    ?C0819?MAINFLOW
 3680: 	//判断货道是否正常，正常返回0显示货物信息,不正常返回1,货道已无货返回2
 3681: 	NODE(55)	IsGoodsWay()	R1(60)		R2(50)
807947         NODE_55:
807947         ?C0882?MAINFLOW:
807947 A512807ADC        ECALL   CoreProcessCycle
80794C A512802642        ECALL   IsGoodsWay
807951 8F27              MOV     ret,R7
807953 E527              MOV     A,ret
807955 6401              XRL     A,#01H
807957 601D              JZ      ?C0893?MAINFLOW
807959         ?C0883?MAINFLOW:
807959 E527              MOV     A,ret
80795B 6402              XRL     A,#02H
80795D 60CD              JZ      ?C0877?MAINFLOW
 3682: 	//判断插入金额是否够买货，够返回0,不够返回1
 3683: 	NODE(58)	IsMoneyEnough()		R1( 65 )//125
80795F         NODE_58:
80795F         ?C0888?MAINFLOW:
80795F A512807ADC        ECALL   CoreProcessCycle
807964 A51280CB86        ECALL   IsMoneyEnough
807969 8F27              MOV     ret,R7
80796B E527              MOV     A,ret
80796D 6401              XRL     A,#01H
80796F 6003              JZ      $ + 5H
807971 027A06            LJMP    ?C0923?MAINFLOW
807974 8013              SJMP    ?C0897?MAINFLOW
 3684: 	//转到出货
 3685: 			GOTONODE( 125 )			
 3686: 	//显示货道故障，询问是否选其它货，选其它货返回0,不选其它货返回1，找零
 3687: 	NODE(60)	GoodsWayErr()	R1(115)
807976         ?C0893?MAINFLOW:
807976 A512807ADC        ECALL   CoreProcessCycle
80797B A5128026AB        ECALL   GoodsWayErr
807980 8F27              MOV     ret,R7
807982 E527              MOV     A,ret
807984 B401A5            CJNE    A,#01H,?C0876?MAINFLOW
807987 805D              SJMP    ?C0915?MAINFLOW
 3688: 	//户客选其它货
 3689: 			GOTONODE(50)
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 256


 3690: 	
 3691: 	 //显示金额不足,要求再插币，返回1
 3692: 	 //提示是否继续插币，确定返回1,取消或超时则返回0
 3693: 	NODE(65)	DispInputMoney()		R1( 46 )		//640	
807989         ?C0897?MAINFLOW:
807989 A512807ADC        ECALL   CoreProcessCycle
80798E A512801A5B        ECALL   DispInputMoney
807993 8F27              MOV     ret,R7
807995 E527              MOV     A,ret
807997 6401              XRL     A,#01H
807999 7003              JNZ     $ + 5H
80799B 0278EA            LJMP    ?C0864?MAINFLOW
 3694: 
 3695: 	//查找同类型更便宜的卡,找到返回0,没有找到返回1
 3696: 	NODE(100)	ExistAnyChoose()		R1(110)		R2(135)	//650
80799E         NODE_100:
80799E         ?C0901?MAINFLOW:
80799E A512807ADC        ECALL   CoreProcessCycle
8079A3 A51280CBDD        ECALL   ExistAnyChoose
8079A8 8F27              MOV     ret,R7
8079AA E527              MOV     A,ret
8079AC 6401              XRL     A,#01H
8079AE 601E              JZ      ?C0911?MAINFLOW
8079B0         ?C0902?MAINFLOW:
8079B0 E527              MOV     A,ret
8079B2 6402              XRL     A,#02H
8079B4 7003              JNZ     $ + 5H
8079B6 027A4B            LJMP    ?C0936?MAINFLOW
 3697: 	//提示客户是否选择买其它的货，确定返回1并到50节点让用户重新输入，取消或超时返回0
 3698: 	NODE(105)	CheaperOnePlz()			R1(50)		//660
8079B9         NODE_105:
8079B9         ?C0908?MAINFLOW:
8079B9 A512807ADC        ECALL   CoreProcessCycle
8079BE A512801A0D        ECALL   CheaperOnePlz
8079C3 8F27              MOV     ret,R7
8079C5 E527              MOV     A,ret
8079C7 6401              XRL     A,#01H
8079C9 7003              JNZ     $ + 5H
8079CB 02792C            LJMP    ?C0877?MAINFLOW
 3699: 	//看系统是否允许退币，允许退币且需要退币则退并返0，不允许则返回1反复提示,不需要退币返回2	
 3700: 	NODE(110)	CheckChangePermit()		R1(65)		R2( 135 )		//700	
8079CE         NODE_110:
8079CE         ?C0911?MAINFLOW:
8079CE A512807ADC        ECALL   CoreProcessCycle
8079D3 A512803E92        ECALL   CheckChangePermit
8079D8 8F27              MOV     ret,R7
8079DA E527              MOV     A,ret
8079DC 6401              XRL     A,#01H
8079DE 60A9              JZ      ?C0897?MAINFLOW
8079E0         ?C0912?MAINFLOW:
8079E0 E527              MOV     A,ret
8079E2 6402              XRL     A,#02H
8079E4 6065              JZ      ?C0936?MAINFLOW
 3701: 	//找零，配币失败返回1,出币错误返回2,出币正确返回0	
 3702: 	NODE(115)	DispenseCoin()			R1(150)		R2(120)		//770
8079E6         NODE_115:
8079E6         ?C0915?MAINFLOW:
8079E6 A512807ADC        ECALL   CoreProcessCycle
8079EB A51280365E        ECALL   DispenseCoin
8079F0 8F27              MOV     ret,R7
8079F2 E527              MOV     A,ret
8079F4 6401              XRL     A,#01H
8079F6 605F              JZ      ?C0939?MAINFLOW
8079F8         ?C0916?MAINFLOW:
 3703: 	NODE(120)	DispGetCoin()		//780
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 257


8079F8         NODE_120:
8079F8         ?C0921?MAINFLOW:
8079F8 A512807ADC        ECALL   CoreProcessCycle
8079FD A512807FF7        ECALL   DispGetCoin
807A02 8F27              MOV     ret,R7
 3704: 			GOTONODE(150)			
807A04 8051              SJMP    ?C0939?MAINFLOW
 3705: 	//出货,正常出货返回0,出货失败但不能找零且还有其它货道可服务则设置货道故障并返回1,出货超时返回2
 3706: 	NODE(125)	OutGoods()	R1(46)		R2(355)		//140
807A06         ?C0923?MAINFLOW:
807A06 A512807ADC        ECALL   CoreProcessCycle
807A0B A512802882        ECALL   OutGoods
807A10 8F27              MOV     ret,R7
807A12 E527              MOV     A,ret
807A14 6401              XRL     A,#01H
807A16 7003              JNZ     $ + 5H
807A18 0278EA            LJMP    ?C0864?MAINFLOW
807A1B         ?C0924?MAINFLOW:
807A1B E527              MOV     A,ret
807A1D 6402              XRL     A,#02H
807A1F 7003              JNZ     $ + 5H
807A21 027AAC            LJMP    ?C0957?MAINFLOW
 3707: 	//确定是否断续购买商品,返回0,不继续购买，进行找零；返回1则继续购买
 3708: 	NODE(127)   ReBuy()		R1(46)
807A24         NODE_127:
807A24         ?C0929?MAINFLOW:
807A24 A512807ADC        ECALL   CoreProcessCycle
807A29 A512802EAA        ECALL   ReBuy
807A2E 8F27              MOV     ret,R7
807A30 E527              MOV     A,ret
807A32 6401              XRL     A,#01H
807A34 7003              JNZ     $ + 5H
807A36 0278EA            LJMP    ?C0864?MAINFLOW
 3709: 	//找零		
 3710: 	NODE(130)	ReturnChange()			R1(150)		//810	
807A39         NODE_130:
807A39         ?C0933?MAINFLOW:
807A39 A512807ADC        ECALL   CoreProcessCycle
807A3E A51280CC19        ECALL   ReturnChange
807A43 8F27              MOV     ret,R7
807A45 E527              MOV     A,ret
807A47 6401              XRL     A,#01H
807A49 600C              JZ      ?C0939?MAINFLOW
 3711: 	//提示用户取货和找零
 3712: 	NODE(135)	DispThx()			R1(150)		//820
807A4B         NODE_135:
807A4B         ?C0936?MAINFLOW:
807A4B A512807ADC        ECALL   CoreProcessCycle
807A50 A512803FDF        ECALL   DispThx
807A55 8F27              MOV     ret,R7
 3713: 	//点亮出货灯,并返回1
 3714: //	NODE(140)	LightBlink()			R1(150)		//830		
 3715: 	//结束售货流程并返回1	
 3716: 	NODE(150)	SellCodeOver()					//990	
807A57         NODE_150:
807A57         ?C0939?MAINFLOW:
807A57 A512807ADC        ECALL   CoreProcessCycle
807A5C A51280C024        ECALL   SellCodeOver
807A61 8F27              MOV     ret,R7
 3717: 	//故障检查，都用标志位
 3718: 	//查询硬件状态值,如有故障,再查硬件故障看是否有清除，无返回
 3719: 	NODE(165)	TestHardWare()		R1(25)	
807A63         NODE_165:
807A63         ?C0942?MAINFLOW:
807A63 A512807ADC        ECALL   CoreProcessCycle
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 258


807A68 A51280CBB6        ECALL   TestHardWare
807A6D 8F27              MOV     ret,R7
807A6F E527              MOV     A,ret
807A71 6401              XRL     A,#01H
807A73 7003              JNZ     $ + 5H
807A75 027836            LJMP    ?C0819?MAINFLOW
 3720: 	//判断货道库存和货道状态
 3721: 	NODE(170)	CheckGoodsSumAndLoad()	
807A78         NODE_170:
807A78         ?C0946?MAINFLOW:
807A78 A512809824        ECALL   ?L?COM002E
807A7D 8F27              MOV     ret,R7
 3722: 	NODE(172)	ScanIsSendAlarm()
807A7F         NODE_172:
807A7F         ?C0949?MAINFLOW:
807A7F A512807ADC        ECALL   CoreProcessCycle
807A84 A512809FA6        ECALL   ScanIsSendAlarm
807A89 8F27              MOV     ret,R7
 3723: 			GOTONODE(25)	
807A8B 027836            LJMP    ?C0819?MAINFLOW
 3724: 	//维护流程
 3725: 	NODE(200)	MaintFunction()
807A8E         ?C0951?MAINFLOW:
807A8E A512807ADC        ECALL   CoreProcessCycle
807A93 A512804030        ECALL   MaintFunction
807A98 8F27              MOV     ret,R7
 3726: 	//判断货道库存和货道状态
 3727: 	NODE(205)	CheckGoodsSumAndLoad()  R1(400)	
807A9A         NODE_205:
807A9A         ?C0954?MAINFLOW:
807A9A A512809824        ECALL   ?L?COM002E
807A9F 8F27              MOV     ret,R7
807AA1 E527              MOV     A,ret
807AA3 6401              XRL     A,#01H
807AA5 6003              JZ      $ + 5H
807AA7 027836            LJMP    ?C0818?MAINFLOW
807AAA 8012              SJMP    ?C0960?MAINFLOW
 3728: 			GOTONODE(25)
 3729: 	//货道故障，联系营运商，退出服务
 3730: 	NODE(355)	AllGoodsWayError()		R1(172)		
807AAC         ?C0957?MAINFLOW:
807AAC A512807ADC        ECALL   CoreProcessCycle
807AB1 A512803FFE        ECALL   AllGoodsWayError
807AB6 8F27              MOV     ret,R7
807AB8 E527              MOV     A,ret
807ABA 6401              XRL     A,#01H
807ABC 60C1              JZ      ?C0949?MAINFLOW
 3731: 
 3732: 	NODE(400)	OutofService()		R1(25)				
807ABE         NODE_400:
807ABE         ?C0960?MAINFLOW:
807ABE A512807ADC        ECALL   CoreProcessCycle
807AC3 A512804193        ECALL   OutofService
807AC8 8F27              MOV     ret,R7
807ACA E527              MOV     A,ret
807ACC 6401              XRL     A,#01H
807ACE 7003              JNZ     $ + 5H
807AD0 027836            LJMP    ?C0819?MAINFLOW
 3733: END_FLOW()
807AD3         NODE_END:
807AD3 AF27              MOV     R7,ret
807AD5         ?C0963?MAINFLOW:
807AD5 A522              ERET    
----- FUNCTION RunFlow (END) -------

LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 259



----- FUNCTION ?L?COM003C (BEGIN) -----
807AD7 A51280CC26        ECALL   Mission
----- FUNCTION CoreProcessCycle (BEGIN) -----
 FILE: 'CommonFunction.c'
   24: void CoreProcessCycle()
   25: {
   26: 	SchedulerProcess();
   27: #ifndef _DEBUG_NO_MOBILE
807ADC A512809545        ECALL   SchedulerProcess
   28: 	if( SystemParameter.MobileON == 1 )
807AE1 900444            MOV     DPTR,#SystemParameter+026H
807AE4 E0                MOVX    A,@DPTR
807AE5 B40105            CJNE    A,#01H,?C0002?COMMONFUNCTION
   29: 		DoCommunication();
807AE8 A51281394F        ECALL   DoCommunication
   30: #endif
   31: }
807AED         ?C0002?COMMONFUNCTION:
807AED A522              ERET    
----- FUNCTION CoreProcessCycle (END) -------


----- FUNCTION ?L?COM0008 (BEGIN) -----
807AEF 900B21            MOV     DPTR,#DisplayLine
807AF2 7418              MOV     A,#018H
807AF4         ?L?COM0009:
807AF4 F0                MOVX    @DPTR,A
807AF5 D21A              SETB    ?_DisplayStr?BIT
807AF7 E0                MOVX    A,@DPTR
807AF8 FF                MOV     R7,A
807AF9 25E0              ADD     A,ACC
807AFB 25E0              ADD     A,ACC
807AFD 2471              ADD     A,#LOW DispInformationTable
807AFF F582              MOV     DPL,A
807B01 E4                CLR     A
807B02 3404              ADDC    A,#HIGH DispInformationTable
807B04 F583              MOV     DPH,A
807B06 A5128007C0        ECALL   ?C?PLDCODE
807B0B 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
807B0E A5128007B6        ECALL   ?C?PSTXDATA
807B13 EF                MOV     A,R7
807B14 25E0              ADD     A,ACC
807B16 25E0              ADD     A,ACC
807B18 2474              ADD     A,#LOW DispInformationTable+03H
807B1A F582              MOV     DPL,A
807B1C E4                CLR     A
807B1D 3404              ADDC    A,#HIGH DispInformationTable+03H
807B1F F583              MOV     DPH,A
807B21 E4                CLR     A
807B22 93                MOVC    A,@A+DPTR
807B23         ?L?COM000A:
807B23 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
807B26         ?L?COM000B:
807B26 F0                MOVX    @DPTR,A
807B27 7D01              MOV     R5,#01H
807B29 E4                CLR     A
807B2A FF                MOV     R7,A
807B2B A512808062        ECALL   _DisplayStr
807B30         ?L?COM000C:
807B30 E4                CLR     A
807B31 7FD0              MOV     R7,#0D0H
807B33 7E07              MOV     R6,#07H
807B35         ?L?COM000D:
807B35 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 260


807B36 FC                MOV     R4,A
807B37 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
807B3A F0                MOVX    @DPTR,A
807B3B A3                INC     DPTR
807B3C F0                MOVX    @DPTR,A
----- FUNCTION _WaitForWork (BEGIN) -----
 FILE: 'CommonFunction.c'
   50: u_char WaitForWork( unsigned long msec, struct DEVICE xdata* DeviceID )
   51: {
807B3D 90183D            MOV     DPTR,#msec
807B40 A512800792        ECALL   ?C?LSTXDATA
   52: 	unsigned long loopSec = msec / 1000;
   53: 	unsigned short loopMSec = msec % 1000;
807B45 E4                CLR     A
807B46 7BE8              MOV     R3,#0E8H
807B48 7A03              MOV     R2,#03H
807B4A F9                MOV     R1,A
807B4B F8                MOV     R0,A
807B4C 90183D            MOV     DPTR,#msec
807B4F A512800720        ECALL   ?C?LLDXDATA
807B54 A512800679        ECALL   ?C?ULDIV
807B59 901843            MOV     DPTR,#loopSec
807B5C A512800792        ECALL   ?C?LSTXDATA
   54: 		
807B61 E4                CLR     A
807B62 7BE8              MOV     R3,#0E8H
807B64 7A03              MOV     R2,#03H
807B66 F9                MOV     R1,A
807B67 F8                MOV     R0,A
807B68 90183D            MOV     DPTR,#msec
807B6B A512800720        ECALL   ?C?LLDXDATA
807B70 A512800679        ECALL   ?C?ULDIV
807B75 AF03              MOV     R7,AR3
807B77 901847            MOV     DPTR,#loopMSec
807B7A EA                MOV     A,R2
807B7B F0                MOVX    @DPTR,A
807B7C A3                INC     DPTR
807B7D EF                MOV     A,R7
807B7E F0                MOVX    @DPTR,A
   55: 	TestDeviceCommOK( DeviceID );
807B7F A512807FD6        ECALL   ?L?COM001C
   56: 	// 毫秒级定时
   57: 	LzjMSecTimer = loopMSec & 0x7F;
807B84 901847            MOV     DPTR,#loopMSec
807B87 E0                MOVX    A,@DPTR
807B88 FE                MOV     R6,A
807B89 A3                INC     DPTR
807B8A E0                MOVX    A,@DPTR
807B8B FF                MOV     R7,A
807B8C 547F              ANL     A,#07FH
807B8E F516              MOV     LzjMSecTimer,A
   58: 	loopMSec /= 128;
807B90 EF                MOV     A,R7
807B91 7807              MOV     R0,#07H
807B93         ?C0202?COMMONFUNCTION:
807B93 CE                XCH     A,R6
807B94 C3                CLR     C
807B95 13                RRC     A
807B96 CE                XCH     A,R6
807B97 13                RRC     A
807B98 D8F9              DJNZ    R0,?C0202?COMMONFUNCTION
807B9A FF                MOV     R7,A
807B9B 901847            MOV     DPTR,#loopMSec
807B9E EE                MOV     A,R6
807B9F F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 261


807BA0 A3                INC     DPTR
807BA1 EF                MOV     A,R7
807BA2 F0                MOVX    @DPTR,A
   59: 	do
   60: 	{
807BA3         ?C0007?COMMONFUNCTION:
   61: 		while(LzjMSecTimer)
807BA3 E516              MOV     A,LzjMSecTimer
807BA5 602B              JZ      ?C0008?COMMONFUNCTION
   62: 		{			
   63: 			if( DeviceID != NULL )
807BA7 901841            MOV     DPTR,#DeviceID
807BAA E0                MOVX    A,@DPTR
807BAB 7002              JNZ     ?C0203?COMMONFUNCTION
807BAD A3                INC     DPTR
807BAE E0                MOVX    A,@DPTR
807BAF         ?C0203?COMMONFUNCTION:
807BAF 600C              JZ      ?C0009?COMMONFUNCTION
   64: 			{
   65: 				SchedulerProcess();
807BB1 A512807FD1        ECALL   ?L?COM001B
807BB6 EF                MOV     A,R7
807BB7 70EA              JNZ     ?C0007?COMMONFUNCTION
   66: 				if( TestDeviceCommOK(  DeviceID ) == 0 )
   67: 					return 0;
807BB9 FF                MOV     R7,A
807BBA 027C5E            LJMP    ?C0011?COMMONFUNCTION
   68: 			}
807BBD         ?C0009?COMMONFUNCTION:
   69: 			else
   70: 			{		
   71: 				if( SystemParameter.MobileON == 1 )
807BBD 900444            MOV     DPTR,#SystemParameter+026H
807BC0 E0                MOVX    A,@DPTR
807BC1 B40107            CJNE    A,#01H,?C0013?COMMONFUNCTION
   72: 				{
   73: 					Mission();
807BC4 A512807AD7        ECALL   ?L?COM003C
   74: 					CoreProcessCycle();			
   75: 				}
807BC9 80D8              SJMP    ?C0007?COMMONFUNCTION
807BCB         ?C0013?COMMONFUNCTION:
   76: 				else
   77: 					SchedulerProcess();	
807BCB A512809545        ECALL   SchedulerProcess
   78: 			}
   79: 		}
807BD0 80D1              SJMP    ?C0007?COMMONFUNCTION
807BD2         ?C0008?COMMONFUNCTION:
   80: 		LzjMSecTimer = 128;
807BD2 751680            MOV     LzjMSecTimer,#080H
   81: 	}while(loopMSec--);
807BD5 901847            MOV     DPTR,#loopMSec
807BD8 74FF              MOV     A,#0FFH
807BDA F5F0              MOV     B,A
807BDC A512800617        ECALL   ?C?ILDIX
807BE1 45F0              ORL     A,B
807BE3 70BE              JNZ     ?C0007?COMMONFUNCTION
   82: 
   83: 	// 秒级定时
   84: 	SgpSecTimer = loopSec & 0x7F;
807BE5 901843            MOV     DPTR,#loopSec
807BE8 A512800720        ECALL   ?C?LLDXDATA
807BED EF                MOV     A,R7
807BEE 547F              ANL     A,#07FH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 262


807BF0 FF                MOV     R7,A
807BF1 E4                CLR     A
807BF2 8F1B              MOV     SgpSecTimer,R7
   85: 	loopSec /= 128;
807BF4 901843            MOV     DPTR,#loopSec
807BF7 A512800720        ECALL   ?C?LLDXDATA
807BFC E4                CLR     A
807BFD 7B80              MOV     R3,#080H
807BFF FA                MOV     R2,A
807C00 F9                MOV     R1,A
807C01 F8                MOV     R0,A
807C02 A512800679        ECALL   ?C?ULDIV
807C07 901843            MOV     DPTR,#loopSec
807C0A A512800792        ECALL   ?C?LSTXDATA
   86: 	do
   87: 	{
807C0F         ?C0018?COMMONFUNCTION:
   88: 		while(SgpSecTimer)
807C0F E51B              MOV     A,SgpSecTimer
807C11 602A              JZ      ?C0019?COMMONFUNCTION
   89: 		{
   90: 			if( DeviceID != NULL )
807C13 901841            MOV     DPTR,#DeviceID
807C16 E0                MOVX    A,@DPTR
807C17 7002              JNZ     ?C0204?COMMONFUNCTION
807C19 A3                INC     DPTR
807C1A E0                MOVX    A,@DPTR
807C1B         ?C0204?COMMONFUNCTION:
807C1B 600B              JZ      ?C0020?COMMONFUNCTION
   91: 			{
   92: 				SchedulerProcess();
807C1D A512807FD1        ECALL   ?L?COM001B
807C22 EF                MOV     A,R7
807C23 70EA              JNZ     ?C0018?COMMONFUNCTION
   93: 				if( TestDeviceCommOK(  DeviceID ) == 0 )
   94: 					return 0;
807C25 FF                MOV     R7,A
807C26 8036              SJMP    ?C0011?COMMONFUNCTION
   95: 			}
807C28         ?C0020?COMMONFUNCTION:
   96: 			else
   97: 			{
   98: 				if( SystemParameter.MobileON == 1 )
807C28 900444            MOV     DPTR,#SystemParameter+026H
807C2B E0                MOVX    A,@DPTR
807C2C B40107            CJNE    A,#01H,?C0023?COMMONFUNCTION
   99: 				{
  100: 					Mission();
807C2F A512807AD7        ECALL   ?L?COM003C
  101: 					CoreProcessCycle();			
  102: 				}
807C34 80D9              SJMP    ?C0018?COMMONFUNCTION
807C36         ?C0023?COMMONFUNCTION:
  103: 				else
  104: 					SchedulerProcess();	
807C36 A512809545        ECALL   SchedulerProcess
  105: 			}
  106: 		}
807C3B 80D2              SJMP    ?C0018?COMMONFUNCTION
807C3D         ?C0019?COMMONFUNCTION:
  107: 		SgpSecTimer = 128;
807C3D 751B80            MOV     SgpSecTimer,#080H
  108: 	}while(loopSec--);
807C40 901843            MOV     DPTR,#loopSec
807C43 74FF              MOV     A,#0FFH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 263


807C45 A51280075E        ECALL   ?C?LLDIXDATA8
807C4A EC                MOV     A,R4
807C4B 4D                ORL     A,R5
807C4C 4E                ORL     A,R6
807C4D 4F                ORL     A,R7
807C4E 70BF              JNZ     ?C0018?COMMONFUNCTION
  109: 
  110: 	if( DeviceID != NULL )	
807C50 901841            MOV     DPTR,#DeviceID
807C53 E0                MOVX    A,@DPTR
807C54 7002              JNZ     ?C0205?COMMONFUNCTION
807C56 A3                INC     DPTR
807C57 E0                MOVX    A,@DPTR
807C58         ?C0205?COMMONFUNCTION:
807C58 7F00              MOV     R7,#00H
807C5A 6002              JZ      ?C0025?COMMONFUNCTION
  111: 		return 1;
807C5C 7F01              MOV     R7,#01H
807C5E         ?C0025?COMMONFUNCTION:
  112: 	else
  113: 		return 0;
  114: 			
  115: }
807C5E         ?C0011?COMMONFUNCTION:
807C5E A522              ERET    
----- FUNCTION _WaitForWork (END) -------


----- FUNCTION ?L?COM0025 (BEGIN) -----
807C60 7F02              MOV     R7,#02H
807C62 A512807C69        ECALL   _GetDeviceStatus
807C67 7F03              MOV     R7,#03H
----- FUNCTION _GetDeviceStatus (BEGIN) -----
 FILE: 'devicecheck.c'
  402: void GetDeviceStatus(unsigned char iDeviceID )
  403: {
;---- Variable 'iDeviceID' assigned to Register 'R7' ----
  404: 	u_char   xdata flag ;
  405: //	unsigned char xdata i;	
  406: 
  407: 	flag = 0;
807C69 E4                CLR     A
807C6A 90173E            MOV     DPTR,#flag
807C6D F0                MOVX    @DPTR,A
  408: 	switch(iDeviceID)
807C6E EF                MOV     A,R7
807C6F 14                DEC     A
807C70 605D              JZ      ?C0062?DEVICECHECK
807C72 14                DEC     A
807C73 6062              JZ      ?C0063?DEVICECHECK
807C75 14                DEC     A
807C76 7003              JNZ     $ + 5H
807C78 027D75            LJMP    ?C0081?DEVICECHECK
807C7B 14                DEC     A
807C7C 7003              JNZ     $ + 5H
807C7E 027E15            LJMP    ?C0099?DEVICECHECK
807C81 2404              ADD     A,#04H
807C83 6003              JZ      $ + 5H
807C85 027EAD            LJMP    ?C0058?DEVICECHECK
  409: 	{	
  410: 		case 0:       //1纸币器状态	
807C88         ?C0054?DEVICECHECK:
  411: 			if( SystemParameter.BillNo == 1 )				
807C88 900425            MOV     DPTR,#SystemParameter+07H
807C8B E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 264


807C8C 6401              XRL     A,#01H
807C8E 7036              JNZ     ?C0055?DEVICECHECK
  412: 			{
  413: 				flag = GetHardWareDeviceState( 4, &Casher );
807C90 7C23              MOV     R4,#HIGH Casher
807C92 7DCB              MOV     R5,#LOW Casher
807C94 7F04              MOV     R7,#04H
807C96 A512807EB5        ECALL   _GetHardWareDeviceState
807C9B 90173E            MOV     DPTR,#flag
807C9E EF                MOV     A,R7
807C9F F0                MOVX    @DPTR,A
  414: 				if( flag == 0 )
807CA0 701B              JNZ     ?C0056?DEVICECHECK
  415: 				{
  416: 					flag = 0;
807CA2 F0                MOVX    @DPTR,A
  417: 					flag = TestDeviceException( &Casher );			
807CA3 7E23              MOV     R6,#HIGH Casher
807CA5 7FCB              MOV     R7,#LOW Casher
807CA7 A512811FD6        ECALL   _TestDeviceException
807CAC 90173E            MOV     DPTR,#flag
807CAF EF                MOV     A,R7
807CB0 F0                MOVX    @DPTR,A
  418: 					if ( flag )
807CB1 6002              JZ      ?C0057?DEVICECHECK
  419: 					{					
  420: 						DeviceStatus.BillAccepter = 1;
807CB3 8008              SJMP    ?C0272?DEVICECHECK
  421: 						return ;
  422: 					}
807CB5         ?C0057?DEVICECHECK:
  423: 					else				
  424: 						DeviceStatus.BillAccepter = 0;				
807CB5 E4                CLR     A
807CB6 900B16            MOV     DPTR,#DeviceStatus
807CB9 F0                MOVX    @DPTR,A
  425: 				}	
807CBA 027EAD            LJMP    ?C0058?DEVICECHECK
807CBD         ?C0056?DEVICECHECK:
  426: 				else
  427: 					DeviceStatus.BillAccepter = 1;		
807CBD         
807CBD 900B16            MOV     DPTR,#DeviceStatus
807CC0 7401              MOV     A,#01H
807CC2 F0                MOVX    @DPTR,A
  428: 			}
807CC3 027EAD            LJMP    ?C0058?DEVICECHECK
807CC6         ?C0055?DEVICECHECK:
  429: 			else
  430: 				DeviceStatus.BillAccepter = 128;
807CC6 900B16            MOV     DPTR,#DeviceStatus
807CC9 7480              MOV     A,#080H
807CCB F0                MOVX    @DPTR,A
  431: 			Trace( "\n DeviceStatus.BillAccepter = %bu", DeviceStatus.BillAccepter );
  432: 			break;				
807CCC 027EAD            LJMP    ?C0058?DEVICECHECK
  433: 		case 1:       //2硬币器状态
807CCF         ?C0062?DEVICECHECK:
  434: 			CoinerTest();
807CCF A51280905F        ECALL   CoinerTest
  435: 			WaitForWork( 100, NULL );		
  436: 			break;			
807CD4 027EA4            LJMP    ?C0287?DEVICECHECK
  437: 		case 2:       //3 #1退币器测试	
807CD7         ?C0063?DEVICECHECK:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 265


  438: 			if( SystemParameter.HopperCoinPrice1 == 0 )
807CD7 90041F            MOV     DPTR,#SystemParameter+01H
807CDA E0                MOVX    A,@DPTR
807CDB 7002              JNZ     ?C0264?DEVICECHECK
807CDD A3                INC     DPTR
807CDE E0                MOVX    A,@DPTR
807CDF         ?C0264?DEVICECHECK:
807CDF 7008              JNZ     ?C0064?DEVICECHECK
  439: 			{
  440: 				DeviceStatus.ChangeUnit1 = 1;
807CE1 900B18            MOV     DPTR,#DeviceStatus+02H
807CE4 04                INC     A
807CE5 F0                MOVX    @DPTR,A
  441: 				break;
807CE6 027EAD            LJMP    ?C0058?DEVICECHECK
  442: 			}		
807CE9         ?C0064?DEVICECHECK:
  443: 			if( m_iCheckDevice )
807CE9 902DF2            MOV     DPTR,#m_iCheckDevice
807CEC E0                MOVX    A,@DPTR
807CED 604A              JZ      ?C0065?DEVICECHECK
  444: 			{			
  445: 				flag = HopperOutCoin( 5, 1, &Hopper1 );//出币5枚
807CEF 7A23              MOV     R2,#HIGH Hopper1
807CF1 7B75              MOV     R3,#LOW Hopper1
807CF3 7D01              MOV     R5,#01H
807CF5 A512807F74        ECALL   ?L?COM0038
807CFA 90173E            MOV     DPTR,#flag
807CFD EF                MOV     A,R7
807CFE F0                MOVX    @DPTR,A
  446: 				WaitForWork( 1500 , NULL );
807CFF E4                CLR     A
807D00 7FDC              MOV     R7,#0DCH
807D02 7E05              MOV     R6,#05H
807D04 A512807B35        ECALL   ?L?COM000D
  447: 				if( flag == 0 )//出币命令发送成功
807D09 90173E            MOV     DPTR,#flag
807D0C E0                MOVX    A,@DPTR
807D0D 7028              JNZ     ?C0066?DEVICECHECK
  448: 				{				
  449: 					flag = GetHardWareDeviceState( 1, &Hopper1 );
807D0F 7C23              MOV     R4,#HIGH Hopper1
807D11 7D75              MOV     R5,#LOW Hopper1
807D13 7F01              MOV     R7,#01H
807D15 A512807EB5        ECALL   _GetHardWareDeviceState
807D1A 90173E            MOV     DPTR,#flag
807D1D EF                MOV     A,R7
807D1E F0                MOVX    @DPTR,A
  450: 					if( flag != 1 )
807D1F 6401              XRL     A,#01H
807D21 6012              JZ      ?C0067?DEVICECHECK
  451: 					{
  452: 						if( Hopper1.State & 0x50 ) //系统故障																									
807D23 902378            MOV     DPTR,#Hopper1+03H
807D26 E0                MOVX    A,@DPTR
807D27 FF                MOV     R7,A
807D28 5450              ANL     A,#050H
807D2A 6002              JZ      ?C0068?DEVICECHECK
  453: 							DeviceStatus.ChangeUnit1 = 1;
807D2C 803E              SJMP    ?C0279?DEVICECHECK
807D2E         ?C0068?DEVICECHECK:
  454: 						else if( Hopper1.State & 0x28 )//光测无币或实际无币							
807D2E EF                MOV     A,R7
807D2F 5428              ANL     A,#028H
807D31 6032              JZ      ?C0276?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 266


  455: 							DeviceStatus.ChangeUnit1 = 2; 						
807D33 8028              SJMP    ?C0275?DEVICECHECK
807D35         ?C0067?DEVICECHECK:
  456: 						else						
  457: 							DeviceStatus.ChangeUnit1 = 0;						
  458: 					}	
  459: 					else
  460: 						DeviceStatus.ChangeUnit1 = 1;
807D35         
  461: 				}
807D35 8035              SJMP    ?C0279?DEVICECHECK
807D37         ?C0066?DEVICECHECK:
  462: 				else//出币命令发送不成功				
  463: 					DeviceStatus.ChangeUnit1 = 1;				
807D37         
  464: 			}
807D37 8033              SJMP    ?C0279?DEVICECHECK
807D39         ?C0065?DEVICECHECK:
  465: 			else
  466: 			{
  467: 				flag = GetHardWareDeviceState( 1, &Hopper1 );			
807D39 7C23              MOV     R4,#HIGH Hopper1
807D3B 7D75              MOV     R5,#LOW Hopper1
807D3D 7F01              MOV     R7,#01H
807D3F A512807EB5        ECALL   _GetHardWareDeviceState
807D44 90173E            MOV     DPTR,#flag
807D47 EF                MOV     A,R7
807D48 F0                MOVX    @DPTR,A
  468: 				if( flag != 1 )
807D49 6401              XRL     A,#01H
807D4B 601F              JZ      ?C0075?DEVICECHECK
  469: 				{					
  470: 					if( Hopper1.State & 0x50 ) //系统故障																									
807D4D 902378            MOV     DPTR,#Hopper1+03H
807D50 E0                MOVX    A,@DPTR
807D51 FF                MOV     R7,A
807D52 5450              ANL     A,#050H
807D54 6002              JZ      ?C0076?DEVICECHECK
  471: 						DeviceStatus.ChangeUnit1 = 1;
807D56         
807D56 8014              SJMP    ?C0279?DEVICECHECK
807D58         ?C0076?DEVICECHECK:
  472: 					else if( Hopper1.State & 0x28 )//光测无币或实际无币							
807D58 EF                MOV     A,R7
807D59 5428              ANL     A,#028H
807D5B 6008              JZ      ?C0078?DEVICECHECK
  473: 						DeviceStatus.ChangeUnit1 = 2; 						
807D5D         
807D5D 900B18            MOV     DPTR,#DeviceStatus+02H
807D60 7402              MOV     A,#02H
807D62 F0                MOVX    @DPTR,A
807D63 800D              SJMP    ?C0074?DEVICECHECK
807D65         ?C0078?DEVICECHECK:
  474: 					else						
  475: 						DeviceStatus.ChangeUnit1 = 0;					
807D65         
807D65 E4                CLR     A
807D66 900B18            MOV     DPTR,#DeviceStatus+02H
807D69 F0                MOVX    @DPTR,A
  476: 				}	
807D6A 8006              SJMP    ?C0074?DEVICECHECK
807D6C         ?C0075?DEVICECHECK:
  477: 				else
  478: 					DeviceStatus.ChangeUnit1 = 1;
807D6C         
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 267


807D6C 900B18            MOV     DPTR,#DeviceStatus+02H
807D6F 7401              MOV     A,#01H
807D71 F0                MOVX    @DPTR,A
  479: 			}
807D72         ?C0074?DEVICECHECK:
  480: 			WaitForWork( 100, NULL );
807D72         
  481: 			break;								
807D72 027EA4            LJMP    ?C0287?DEVICECHECK
  482: 		case 3:       //3 #2退币器测试	
807D75         ?C0081?DEVICECHECK:
  483: 			if( SystemParameter.HopperCoinPrice2 == 0 )
807D75 900421            MOV     DPTR,#SystemParameter+03H
807D78 E0                MOVX    A,@DPTR
807D79 7002              JNZ     ?C0265?DEVICECHECK
807D7B A3                INC     DPTR
807D7C E0                MOVX    A,@DPTR
807D7D         ?C0265?DEVICECHECK:
807D7D 7008              JNZ     ?C0082?DEVICECHECK
  484: 			{
  485: 				DeviceStatus.ChangeUnit2 = 1;
807D7F 900B19            MOV     DPTR,#DeviceStatus+03H
807D82 04                INC     A
807D83 F0                MOVX    @DPTR,A
  486: 				break;
807D84 027EAD            LJMP    ?C0058?DEVICECHECK
  487: 			}		
807D87         ?C0082?DEVICECHECK:
  488: 			if( m_iCheckDevice )
807D87 902DF2            MOV     DPTR,#m_iCheckDevice
807D8A E0                MOVX    A,@DPTR
807D8B 604C              JZ      ?C0083?DEVICECHECK
  489: 			{				
  490: 				flag = HopperOutCoin( 5, 2, &Hopper2 );//出币5枚
807D8D 7A23              MOV     R2,#HIGH Hopper2
807D8F 7B8A              MOV     R3,#LOW Hopper2
807D91 7D02              MOV     R5,#02H
807D93 7F05              MOV     R7,#05H
807D95 A512807F76        ECALL   _HopperOutCoin
807D9A 90173E            MOV     DPTR,#flag
807D9D EF                MOV     A,R7
807D9E F0                MOVX    @DPTR,A
  491: 				WaitForWork( 1500 , NULL );
807D9F E4                CLR     A
807DA0 7FDC              MOV     R7,#0DCH
807DA2 7E05              MOV     R6,#05H
807DA4 A512807B35        ECALL   ?L?COM000D
  492: 				if( flag == 0 )//出币命令发送成功
807DA9 90173E            MOV     DPTR,#flag
807DAC E0                MOVX    A,@DPTR
807DAD 7028              JNZ     ?C0084?DEVICECHECK
  493: 				{					
  494: 					flag = GetHardWareDeviceState( 2, &Hopper2 );			
807DAF 7C23              MOV     R4,#HIGH Hopper2
807DB1 7D8A              MOV     R5,#LOW Hopper2
807DB3 7F02              MOV     R7,#02H
807DB5 A512807EB5        ECALL   _GetHardWareDeviceState
807DBA 90173E            MOV     DPTR,#flag
807DBD EF                MOV     A,R7
807DBE F0                MOVX    @DPTR,A
  495: 					if( flag != 1 )
807DBF 6401              XRL     A,#01H
807DC1 6012              JZ      ?C0085?DEVICECHECK
  496: 					{
  497: 						if( Hopper2.State & 0x50 ) //系统故障																									
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 268


807DC3 90238D            MOV     DPTR,#Hopper2+03H
807DC6 E0                MOVX    A,@DPTR
807DC7 FF                MOV     R7,A
807DC8 5450              ANL     A,#050H
807DCA 6002              JZ      ?C0086?DEVICECHECK
  498: 							DeviceStatus.ChangeUnit2 = 1;
807DCC 803E              SJMP    ?C0286?DEVICECHECK
807DCE         ?C0086?DEVICECHECK:
  499: 						else if( Hopper2.State & 0x28 )//光测无币或实际无币							
807DCE EF                MOV     A,R7
807DCF 5428              ANL     A,#028H
807DD1 6032              JZ      ?C0283?DEVICECHECK
  500: 							DeviceStatus.ChangeUnit2 = 2; 						
807DD3 8028              SJMP    ?C0282?DEVICECHECK
807DD5         ?C0085?DEVICECHECK:
  501: 						else						
  502: 							DeviceStatus.ChangeUnit2 = 0;							
  503: 					}	
  504: 					else
  505: 						DeviceStatus.ChangeUnit2 = 1;
807DD5         
  506: 				}
807DD5 8035              SJMP    ?C0286?DEVICECHECK
807DD7         ?C0084?DEVICECHECK:
  507: 				else//出币命令发送不成功				
  508: 					DeviceStatus.ChangeUnit2 = 1;				
807DD7         
  509: 			}
807DD7 8033              SJMP    ?C0286?DEVICECHECK
807DD9         ?C0083?DEVICECHECK:
  510: 			else
  511: 			{
  512: 				flag = GetHardWareDeviceState( 2, &Hopper2 );
807DD9 7C23              MOV     R4,#HIGH Hopper2
807DDB 7D8A              MOV     R5,#LOW Hopper2
807DDD 7F02              MOV     R7,#02H
807DDF A512807EB5        ECALL   _GetHardWareDeviceState
807DE4 90173E            MOV     DPTR,#flag
807DE7 EF                MOV     A,R7
807DE8 F0                MOVX    @DPTR,A
  513: 				Trace("\n Hopper2 flag = %bu", flag );			
  514: 				if( flag != 1 )
807DE9 6401              XRL     A,#01H
807DEB 601F              JZ      ?C0093?DEVICECHECK
  515: 				{
  516: 					if( Hopper2.State & 0x50 ) //系统故障																									
807DED 90238D            MOV     DPTR,#Hopper2+03H
807DF0 E0                MOVX    A,@DPTR
807DF1 FF                MOV     R7,A
807DF2 5450              ANL     A,#050H
807DF4 6002              JZ      ?C0094?DEVICECHECK
  517: 						DeviceStatus.ChangeUnit2 = 1;
807DF6         
807DF6 8014              SJMP    ?C0286?DEVICECHECK
807DF8         ?C0094?DEVICECHECK:
  518: 					else if( Hopper2.State & 0x28 )//光测无币或实际无币							
807DF8 EF                MOV     A,R7
807DF9 5428              ANL     A,#028H
807DFB 6008              JZ      ?C0096?DEVICECHECK
  519: 						DeviceStatus.ChangeUnit2 = 2; 						
807DFD         
807DFD 900B19            MOV     DPTR,#DeviceStatus+03H
807E00 7402              MOV     A,#02H
807E02 F0                MOVX    @DPTR,A
807E03 800D              SJMP    ?C0092?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 269


807E05         ?C0096?DEVICECHECK:
  520: 					else						
  521: 						DeviceStatus.ChangeUnit2 = 0;						
807E05         
807E05 E4                CLR     A
807E06 900B19            MOV     DPTR,#DeviceStatus+03H
807E09 F0                MOVX    @DPTR,A
  522: 				}	
807E0A 8006              SJMP    ?C0092?DEVICECHECK
807E0C         ?C0093?DEVICECHECK:
  523: 				else
  524: 					DeviceStatus.ChangeUnit2 = 1;
807E0C         
807E0C 900B19            MOV     DPTR,#DeviceStatus+03H
807E0F 7401              MOV     A,#01H
807E11 F0                MOVX    @DPTR,A
  525: 			}
807E12         ?C0092?DEVICECHECK:
  526: 			WaitForWork( 100, NULL );
807E12         
  527: 			break;
807E12 027EA4            LJMP    ?C0287?DEVICECHECK
  528: 	   case 4:       //3 #1退币器测试	
807E15         ?C0099?DEVICECHECK:
  529: 			if( SystemParameter.HopperCoinPrice3 == 0 )
807E15 900423            MOV     DPTR,#SystemParameter+05H
807E18 E0                MOVX    A,@DPTR
807E19 7002              JNZ     ?C0266?DEVICECHECK
807E1B A3                INC     DPTR
807E1C E0                MOVX    A,@DPTR
807E1D         ?C0266?DEVICECHECK:
807E1D 7008              JNZ     ?C0100?DEVICECHECK
  530: 			{
  531: 				DeviceStatus.ChangeUnit3 = 1;
807E1F 900B1A            MOV     DPTR,#DeviceStatus+04H
807E22 04                INC     A
807E23 F0                MOVX    @DPTR,A
  532: 				break;
807E24 027EAD            LJMP    ?C0058?DEVICECHECK
  533: 			}		
807E27         ?C0100?DEVICECHECK:
  534: 			if( m_iCheckDevice )
807E27 902DF2            MOV     DPTR,#m_iCheckDevice
807E2A E0                MOVX    A,@DPTR
807E2B 6044              JZ      ?C0101?DEVICECHECK
  535: 			{				
  536: 				flag = HopperOutCoin( 5, 3, &Hopper3 );//出币5枚
807E2D 7A23              MOV     R2,#HIGH Hopper3
807E2F 7B9F              MOV     R3,#LOW Hopper3
807E31 7D03              MOV     R5,#03H
807E33 A512807F74        ECALL   ?L?COM0038
807E38 90173E            MOV     DPTR,#flag
807E3B EF                MOV     A,R7
807E3C F0                MOVX    @DPTR,A
  537: 				WaitForWork( 1500 , NULL );
807E3D E4                CLR     A
807E3E 7FDC              MOV     R7,#0DCH
807E40 7E05              MOV     R6,#05H
807E42 A512807B35        ECALL   ?L?COM000D
  538: 				if( flag == 0 )//出币命令发送成功
807E47 90173E            MOV     DPTR,#flag
807E4A E0                MOVX    A,@DPTR
807E4B 7022              JNZ     ?C0102?DEVICECHECK
  539: 				{					
  540: 					flag = GetHardWareDeviceState( 3, &Hopper3 );			
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 270


807E4D A512807EAF        ECALL   ?L?COM002B
807E52 90173E            MOV     DPTR,#flag
807E55 EF                MOV     A,R7
807E56 F0                MOVX    @DPTR,A
  541: 					if( flag != 1 )
807E57 6401              XRL     A,#01H
807E59 6012              JZ      ?C0103?DEVICECHECK
  542: 					{
  543: 						if( Hopper3.State & 0x50 ) //系统故障																									
807E5B 9023A2            MOV     DPTR,#Hopper3+03H
807E5E E0                MOVX    A,@DPTR
807E5F FF                MOV     R7,A
807E60 5450              ANL     A,#050H
807E62 6002              JZ      ?C0104?DEVICECHECK
  544: 							DeviceStatus.ChangeUnit3 = 1;
807E64 8038              SJMP    ?C0293?DEVICECHECK
807E66         ?C0104?DEVICECHECK:
  545: 						else if( Hopper3.State & 0x28 )//光测无币或实际无币							
807E66 EF                MOV     A,R7
807E67 5428              ANL     A,#028H
807E69 602C              JZ      ?C0290?DEVICECHECK
  546: 							DeviceStatus.ChangeUnit3 = 2; 						
807E6B 8022              SJMP    ?C0289?DEVICECHECK
807E6D         ?C0103?DEVICECHECK:
  547: 						else						
  548: 							DeviceStatus.ChangeUnit3 = 0;							
  549: 					}	
  550: 					else
  551: 						DeviceStatus.ChangeUnit3 = 1;
807E6D         
  552: 				}
807E6D 802F              SJMP    ?C0293?DEVICECHECK
807E6F         ?C0102?DEVICECHECK:
  553: 				else//出币命令发送不成功				
  554: 					DeviceStatus.ChangeUnit3 = 1;				
807E6F         
  555: 			}
807E6F 802D              SJMP    ?C0293?DEVICECHECK
807E71         ?C0101?DEVICECHECK:
  556: 			else
  557: 			{
  558: 				flag = GetHardWareDeviceState( 3, &Hopper3 );			
807E71 A512807EAF        ECALL   ?L?COM002B
807E76 90173E            MOV     DPTR,#flag
807E79 EF                MOV     A,R7
807E7A F0                MOVX    @DPTR,A
  559: 				if( flag != 1 )
807E7B 6401              XRL     A,#01H
807E7D 601F              JZ      ?C0111?DEVICECHECK
  560: 				{
  561: 					if( Hopper3.State & 0x50 ) //系统故障																									
807E7F 9023A2            MOV     DPTR,#Hopper3+03H
807E82 E0                MOVX    A,@DPTR
807E83 FF                MOV     R7,A
807E84 5450              ANL     A,#050H
807E86 6002              JZ      ?C0112?DEVICECHECK
  562: 						DeviceStatus.ChangeUnit3 = 1;
807E88         
807E88 8014              SJMP    ?C0293?DEVICECHECK
807E8A         ?C0112?DEVICECHECK:
  563: 					else if( Hopper3.State & 0x28 )//光测无币或实际无币							
807E8A EF                MOV     A,R7
807E8B 5428              ANL     A,#028H
807E8D 6008              JZ      ?C0114?DEVICECHECK
  564: 						DeviceStatus.ChangeUnit3 = 2; 						
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 271


807E8F         
807E8F 900B1A            MOV     DPTR,#DeviceStatus+04H
807E92 7402              MOV     A,#02H
807E94 F0                MOVX    @DPTR,A
807E95 800D              SJMP    ?C0110?DEVICECHECK
807E97         ?C0114?DEVICECHECK:
  565: 					else						
  566: 						DeviceStatus.ChangeUnit3 = 0;					
807E97         
807E97 E4                CLR     A
807E98 900B1A            MOV     DPTR,#DeviceStatus+04H
807E9B F0                MOVX    @DPTR,A
  567: 				}	
807E9C 8006              SJMP    ?C0110?DEVICECHECK
807E9E         ?C0111?DEVICECHECK:
  568: 				else
  569: 					DeviceStatus.ChangeUnit3 = 1;
807E9E         
807E9E 900B1A            MOV     DPTR,#DeviceStatus+04H
807EA1 7401              MOV     A,#01H
807EA3 F0                MOVX    @DPTR,A
  570: 			}
807EA4         ?C0110?DEVICECHECK:
  571: 			WaitForWork( 100, NULL );			
807EA4         
807EA4 E4                CLR     A
807EA5 7F64              MOV     R7,#064H
807EA7 FE                MOV     R6,A
807EA8 A512807B35        ECALL   ?L?COM000D
  572: 			break;
  573: 	}
  574: }
807EAD         ?C0058?DEVICECHECK:
807EAD A522              ERET    
----- FUNCTION _GetDeviceStatus (END) -------


----- FUNCTION ?L?COM002B (BEGIN) -----
807EAF 7C23              MOV     R4,#HIGH Hopper3
807EB1 7D9F              MOV     R5,#LOW Hopper3
807EB3 7F03              MOV     R7,#03H
----- FUNCTION _GetHardWareDeviceState (BEGIN) -----
 FILE: 'CommonFunction.c'
  710: u_char GetHardWareDeviceState( u_char iHopperNo, struct DEVICE xdata* iDevice )
  711: {
807EB5 90173F            MOV     DPTR,#iHopperNo
807EB8 EF                MOV     A,R7
807EB9 F0                MOVX    @DPTR,A
807EBA A3                INC     DPTR
807EBB EC                MOV     A,R4
807EBC F0                MOVX    @DPTR,A
807EBD A3                INC     DPTR
807EBE ED                MOV     A,R5
807EBF F0                MOVX    @DPTR,A
  712: 	u_char xdata i = 0;
  713: 	u_char xdata j = 0;
807EC0 E4                CLR     A
807EC1 A3                INC     DPTR
807EC2 F0                MOVX    @DPTR,A
  714: 	
807EC3 A3                INC     DPTR
807EC4 F0                MOVX    @DPTR,A
  715: 	for( YgpSecTimer = 20 ; YgpSecTimer ; )
807EC5 751C14            MOV     YgpSecTimer,#014H
807EC8         ?C0175?COMMONFUNCTION:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 272


807EC8 E51C              MOV     A,YgpSecTimer
807ECA 7003              JNZ     $ + 5H
807ECC 027F50            LJMP    ?C0176?COMMONFUNCTION
  716: 	{			
  717: 		if( ( iHopperNo == 1 ) || ( iHopperNo == 2 ) || ( iHopperNo == 3 ) )//出币器状态
807ECF 90173F            MOV     DPTR,#iHopperNo
807ED2 E0                MOVX    A,@DPTR
807ED3 FF                MOV     R7,A
807ED4 6401              XRL     A,#01H
807ED6 6009              JZ      ?C0178?COMMONFUNCTION
807ED8 EF                MOV     A,R7
807ED9 6402              XRL     A,#02H
807EDB 6004              JZ      ?C0178?COMMONFUNCTION
807EDD EF                MOV     A,R7
807EDE B40307            CJNE    A,#03H,?C0177?COMMONFUNCTION
807EE1         ?C0178?COMMONFUNCTION:
  718: 			HopperQuery( iHopperNo );
807EE1 A512808EFD        ECALL   _HopperQuery
807EE6 801B              SJMP    ?C0181?COMMONFUNCTION
807EE8         ?C0177?COMMONFUNCTION:
  719: 		else if( iHopperNo == 4 ) //纸币器状态
807EE8 90173F            MOV     DPTR,#iHopperNo
807EEB E0                MOVX    A,@DPTR
807EEC B40414            CJNE    A,#04H,?C0181?COMMONFUNCTION
  720: 		{
  721: 			i = CasherQuery( );	
807EEF A512808F9E        ECALL   CasherQuery
807EF4 E4                CLR     A
807EF5 33                RLC     A
807EF6 901742            MOV     DPTR,#i
807EF9 F0                MOVX    @DPTR,A
  722: 			WaitForWork( 100, NULL );
807EFA E4                CLR     A
807EFB 7F64              MOV     R7,#064H
807EFD FE                MOV     R6,A
807EFE A512807B35        ECALL   ?L?COM000D
  723: 		}
807F03         ?C0181?COMMONFUNCTION:
  724: 
  725: 		while( 1 )
  726: 		{
  727: 			i = TestDeviceCommOK( iDevice );
807F03 901740            MOV     DPTR,#iDevice
807F06 A512807FD9        ECALL   ?L?COM001D
807F0B 901742            MOV     DPTR,#i
807F0E EF                MOV     A,R7
807F0F F0                MOVX    @DPTR,A
  728: 			j = TestDeviceTimeOut( iDevice );
807F10 901740            MOV     DPTR,#iDevice
807F13 A512807FFB        ECALL   ?L?COM003A
807F18 901743            MOV     DPTR,#j
807F1B EF                MOV     A,R7
807F1C F0                MOVX    @DPTR,A
  729: 			if( !( j || i ) )					
807F1D 7015              JNZ     ?C0182?COMMONFUNCTION
807F1F 901742            MOV     DPTR,#i
807F22 E0                MOVX    A,@DPTR
807F23 700F              JNZ     ?C0182?COMMONFUNCTION
  730: 			{
  731: 				WaitForWork( 100, NULL );
807F25 7F64              MOV     R7,#064H
807F27 FE                MOV     R6,A
807F28 A512807B35        ECALL   ?L?COM000D
  732: 				i = 0;
807F2D E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 273


807F2E 901742            MOV     DPTR,#i
807F31 F0                MOVX    @DPTR,A
  733: 			}
807F32 80CF              SJMP    ?C0181?COMMONFUNCTION
  734: 			else
  735: 				break;	
  736: 		}
807F34         ?C0182?COMMONFUNCTION:
  737: 		if( iHopperNo == 4 )
807F34 90173F            MOV     DPTR,#iHopperNo
807F37 E0                MOVX    A,@DPTR
807F38 6404              XRL     A,#04H
807F3A 6014              JZ      ?C0176?COMMONFUNCTION
  738: 			break;
807F3C         ?C0185?COMMONFUNCTION:
  739: 		if( i == 4 )
807F3C 901742            MOV     DPTR,#i
807F3F E0                MOVX    A,@DPTR
807F40 6404              XRL     A,#04H
807F42 600C              JZ      ?C0176?COMMONFUNCTION
  740: 			break;		
807F44         ?C0186?COMMONFUNCTION:
  741: 		WaitForWork( 100, NULL );
807F44 E4                CLR     A
807F45 7F64              MOV     R7,#064H
807F47 FE                MOV     R6,A
807F48 A512807B35        ECALL   ?L?COM000D
  742: 	}
807F4D 027EC8            LJMP    ?C0175?COMMONFUNCTION
807F50         ?C0176?COMMONFUNCTION:
  743: 
  744: 	if( ( YgpSecTimer == 0 ) || ( j ) )
807F50 E51C              MOV     A,YgpSecTimer
807F52 6006              JZ      ?C0188?COMMONFUNCTION
807F54 901743            MOV     DPTR,#j
807F57 E0                MOVX    A,@DPTR
807F58 6004              JZ      ?C0187?COMMONFUNCTION
807F5A         ?C0188?COMMONFUNCTION:
  745: 	{		
  746: 		Trace("\n Time Out" );
  747: 		return 1;//超时
807F5A 7F01              MOV     R7,#01H
807F5C 8014              SJMP    ?C0189?COMMONFUNCTION
  748: 	}	
807F5E         ?C0187?COMMONFUNCTION:
  749: 	if ( TestDeviceException( iDevice ) )
807F5E 901740            MOV     DPTR,#iDevice
807F61 E0                MOVX    A,@DPTR
807F62 FE                MOV     R6,A
807F63 A3                INC     DPTR
807F64 E0                MOVX    A,@DPTR
807F65 FF                MOV     R7,A
807F66 A512811FD6        ECALL   _TestDeviceException
807F6B EF                MOV     A,R7
807F6C 7F00              MOV     R7,#00H
807F6E 6002              JZ      ?C0190?COMMONFUNCTION
  750: 	{
  751: //		Trace("\n Exception" );
  752: 		return 2;//故障
807F70 7F02              MOV     R7,#02H
  753: 	}
807F72         ?C0190?COMMONFUNCTION:
  754: 	return 0; //正常返回	
  755: }
807F72         ?C0189?COMMONFUNCTION:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 274


807F72 A522              ERET    
----- FUNCTION _GetHardWareDeviceState (END) -------


----- FUNCTION ?L?COM0038 (BEGIN) -----
807F74 7F05              MOV     R7,#05H
----- FUNCTION _HopperOutCoin (BEGIN) -----
 FILE: 'CommonFunction.c'
  456: u_char HopperOutCoin( u_char iCoinNum, u_char iHopperNo, struct DEVICE xdata* iDevice )
  457: {	
807F76 90173F            MOV     DPTR,#iDevice
807F79 EA                MOV     A,R2
807F7A F0                MOVX    @DPTR,A
807F7B A3                INC     DPTR
807F7C EB                MOV     A,R3
807F7D F0                MOVX    @DPTR,A
;---- Variable 'iHopperNo' assigned to Register 'R5' ----
;---- Variable 'iCoinNum' assigned to Register 'R6' ----
807F7E AE07              MOV     R6,AR7
  458: 	u_char xdata i = 0;
  459: 	u_char xdata j = 0;
807F80 E4                CLR     A
807F81 A3                INC     DPTR
807F82 F0                MOVX    @DPTR,A
  460: 
;---- Variable 'j' assigned to Register 'R7' ----
  461: 	HopperOutput( iHopperNo , iCoinNum );
807F83 AF05              MOV     R7,AR5
807F85 EE                MOV     A,R6
807F86 FD                MOV     R5,A
807F87 7C00              MOV     R4,#00H
807F89 A512812019        ECALL   _HopperOutput
  462: 	WaitForWork( 100, NULL );
807F8E E4                CLR     A
807F8F 7F64              MOV     R7,#064H
807F91 FE                MOV     R6,A
807F92 A512807B35        ECALL   ?L?COM000D
  463: 	i = 0;
807F97 E4                CLR     A
807F98 901741            MOV     DPTR,#i
807F9B F0                MOVX    @DPTR,A
  464: 	j = 0;
807F9C FF                MOV     R7,A
807F9D         ?C0124?COMMONFUNCTION:
  465: 	while( ! ( i || j ) )
807F9D 901741            MOV     DPTR,#i
807FA0 E0                MOVX    A,@DPTR
807FA1 7022              JNZ     ?C0125?COMMONFUNCTION
807FA3 EF                MOV     A,R7
807FA4 701F              JNZ     ?C0125?COMMONFUNCTION
  466: 	{
  467: 		WaitForWork( 100, NULL );
807FA6 7F64              MOV     R7,#064H
807FA8 FE                MOV     R6,A
807FA9 A512807B35        ECALL   ?L?COM000D
  468: 		i = TestDeviceTimeOut( iDevice );
807FAE 90173F            MOV     DPTR,#iDevice
807FB1 A512807FFB        ECALL   ?L?COM003A
807FB6 901741            MOV     DPTR,#i
807FB9 EF                MOV     A,R7
807FBA F0                MOVX    @DPTR,A
  469: 		j = TestDeviceCommOK( iDevice );		
807FBB 90173F            MOV     DPTR,#iDevice
807FBE A512807FD9        ECALL   ?L?COM001D
  470: 	}		
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 275


807FC3 80D8              SJMP    ?C0124?COMMONFUNCTION
807FC5         ?C0125?COMMONFUNCTION:
  471: 	if ( i )	
807FC5 901741            MOV     DPTR,#i
807FC8 E0                MOVX    A,@DPTR
807FC9 7F00              MOV     R7,#00H
807FCB 6002              JZ      ?C0126?COMMONFUNCTION
  472: 	{
  473: 		return 1;//超时
807FCD 7F01              MOV     R7,#01H
  474: 	}
807FCF         ?C0126?COMMONFUNCTION:
  475: //	if ( TestDeviceException( iDevice ) )
  476: //	{
  477: //		return 2;//故障
  478: //	}
  479: 	Trace("\n HopperOutCoin OK" );
  480: 	return 0; // 正常返回
  481: }
807FCF         ?C0127?COMMONFUNCTION:
807FCF A522              ERET    
----- FUNCTION _HopperOutCoin (END) -------


----- FUNCTION ?L?COM001B (BEGIN) -----
807FD1 A512809545        ECALL   SchedulerProcess
807FD6         ?L?COM001C:
807FD6 901841            MOV     DPTR,#DeviceID
807FD9         ?L?COM001D:
807FD9 E0                MOVX    A,@DPTR
807FDA FE                MOV     R6,A
807FDB A3                INC     DPTR
807FDC E0                MOVX    A,@DPTR
807FDD FF                MOV     R7,A
----- FUNCTION _TestDeviceCommOK (BEGIN) -----
 FILE: 'scheduler.c'
  821: uchar TestDeviceCommOK( struct DEVICE xdata* Device )
  822: {
;---- Variable 'Device' assigned to Register 'R6/R7' ----
  823: 	uchar data ch;
  824: 	
  825: 	ch = Device->CommState;
807FDE 8F82              MOV     DPL,R7
807FE0 8E83              MOV     DPH,R6
807FE2 A3                INC     DPTR
807FE3 A3                INC     DPTR
807FE4 E0                MOVX    A,@DPTR
807FE5 F528              MOV     ch,A
  826: 	Device->CommState &= ~ COMM_COMMOK;
807FE7 8F82              MOV     DPL,R7
807FE9 8E83              MOV     DPH,R6
807FEB A3                INC     DPTR
807FEC A3                INC     DPTR
807FED 54FB              ANL     A,#0FBH
807FEF F0                MOVX    @DPTR,A
  827: 	return( ch & COMM_COMMOK );
807FF0 E528              MOV     A,ch
807FF2 5404              ANL     A,#04H
807FF4 FF                MOV     R7,A
  828: }
807FF5         ?C0169?SCHEDULER:
807FF5 A522              ERET    
----- FUNCTION _TestDeviceCommOK (END) -------


LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 276


----- FUNCTION DispGetCoin (BEGIN) -----
 FILE: 'mainflow.c'
 3385: u_char DispGetCoin()
 3386: {
 3387: 	return( 0 );
 3388: }
807FF7 7F00              MOV     R7,#00H
 3389: 
807FF9         ?C0740?MAINFLOW:
807FF9 A522              ERET    
----- FUNCTION DispGetCoin (END) -------


----- FUNCTION ?L?COM003A (BEGIN) -----
807FFB E0                MOVX    A,@DPTR
807FFC FE                MOV     R6,A
807FFD A3                INC     DPTR
807FFE E0                MOVX    A,@DPTR
807FFF FF                MOV     R7,A
----- FUNCTION _TestDeviceTimeOut (BEGIN) -----
 FILE: 'scheduler.c'
  798: uchar TestDeviceTimeOut( struct DEVICE xdata* Device )
  799: {
;---- Variable 'Device' assigned to Register 'R6/R7' ----
  800: 	uchar data ch;
  801: 
  802: 	ch = Device->CommState;
808000 8F82              MOV     DPL,R7
808002 8E83              MOV     DPH,R6
808004 A3                INC     DPTR
808005 A3                INC     DPTR
808006 E0                MOVX    A,@DPTR
808007 F528              MOV     ch,A
  803: 	Device->CommState &= ~ COMM_TIMEOUT;
808009 8F82              MOV     DPL,R7
80800B 8E83              MOV     DPH,R6
80800D A3                INC     DPTR
80800E A3                INC     DPTR
80800F 54FD              ANL     A,#0FDH
808011 F0                MOVX    @DPTR,A
  804: 
  805: 	return( ch & COMM_TIMEOUT );
808012 E528              MOV     A,ch
808014 5402              ANL     A,#02H
808016 FF                MOV     R7,A
  806: }
808017         ?C0161?SCHEDULER:
808017 A522              ERET    
----- FUNCTION _TestDeviceTimeOut (END) -------


----- FUNCTION ?L?COM0001 (BEGIN) -----
808019 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80801C F0                MOVX    @DPTR,A
80801D D21B              SETB    ?_DisplayCursorState?BIT+01H
80801F 7D01              MOV     R5,#01H
808021 FF                MOV     R7,A
808022 A51280817F        ECALL   _DisplayCursorState
808027         ?L?COM0002:
808027 900B21            MOV     DPTR,#DisplayLine
80802A 7408              MOV     A,#08H
80802C         ?L?COM0003:
80802C F0                MOVX    @DPTR,A
80802D D21A              SETB    ?_DisplayStr?BIT
80802F E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 277


808030 FF                MOV     R7,A
808031 25E0              ADD     A,ACC
808033 25E0              ADD     A,ACC
808035 2471              ADD     A,#LOW DispInformationTable
808037 F582              MOV     DPL,A
808039 E4                CLR     A
80803A 3404              ADDC    A,#HIGH DispInformationTable
80803C F583              MOV     DPH,A
80803E A5128007C0        ECALL   ?C?PLDCODE
808043 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
808046 A5128007B6        ECALL   ?C?PSTXDATA
80804B EF                MOV     A,R7
80804C 25E0              ADD     A,ACC
80804E 25E0              ADD     A,ACC
808050 2474              ADD     A,#LOW DispInformationTable+03H
808052 F582              MOV     DPL,A
808054 E4                CLR     A
808055 3404              ADDC    A,#HIGH DispInformationTable+03H
808057         ?L?COM0004:
808057 F583              MOV     DPH,A
808059         ?L?COM0005:
808059 E4                CLR     A
80805A 93                MOVC    A,@A+DPTR
80805B         ?L?COM0006:
80805B 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80805E         ?L?COM0007:
80805E F0                MOVX    @DPTR,A
80805F E4                CLR     A
808060 FD                MOV     R5,A
808061 FF                MOV     R7,A
----- FUNCTION _DisplayStr (BEGIN) -----
 FILE: 'CommonFunction.c'
  126: void  DisplayStr( u_char x, u_char y, bit flag, u_char *str, const u_char len )
  127: {	
808062 90180B            MOV     DPTR,#x
808065 EF                MOV     A,R7
808066 F0                MOVX    @DPTR,A
808067 A3                INC     DPTR
808068 ED                MOV     A,R5
808069 F0                MOVX    @DPTR,A
  128: 	u_char xdata timeflag = 1;
  129: 	u_char xdata clearstr[] = "                    ";
80806A 901811            MOV     DPTR,#timeflag
80806D 7401              MOV     A,#01H
80806F F0                MOVX    @DPTR,A
  130: 	u_char xdata tempstr[20];
808070 7812              MOV     R0,#LOW clearstr
808072 7C18              MOV     R4,#HIGH clearstr
808074 7D00              MOV     R5,#?C?XDATASEG
808076 7B80              MOV     R3,#BYTE2 _?ix1000
808078 7A17              MOV     R2,#HIGH _?ix1000
80807A 79B1              MOV     R1,#LOW _?ix1000
80807C 7E00              MOV     R6,#00H
80807E 7F15              MOV     R7,#015H
808080 A51280052D        ECALL   ?C?COPY
  131: 	u_char xdata i = 0;
808085 E4                CLR     A
808086 90183B            MOV     DPTR,#i
808089 F0                MOVX    @DPTR,A
  132: 	u_char xdata j = 0;
80808A A3                INC     DPTR
80808B F0                MOVX    @DPTR,A
  133: 
  134: 	memset( tempstr, 0x20, sizeof( tempstr ) );
80808C FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 278


80808D 7F14              MOV     R7,#014H
80808F 7D20              MOV     R5,#020H
808091 7B00              MOV     R3,#?C?XDATASEG
808093 7A18              MOV     R2,#HIGH tempstr
808095 7927              MOV     R1,#LOW tempstr
808097 A5128008A6        ECALL   ?C?MEMSET
  135: 	if( flag == 0 )//在当前位置显示				
80809C 201A14            JB      flag,?C0028?COMMONFUNCTION
  136: 		i = DisplayString( str, len );		
80809F 90180D            MOV     DPTR,#str
8080A2 A5128007AC        ECALL   ?C?PLDXDATA
8080A7 901810            MOV     DPTR,#len
8080AA E0                MOVX    A,@DPTR
8080AB FD                MOV     R5,A
8080AC A51281217C        ECALL   _DisplayString
8080B1 806A              SJMP    ?C0210?COMMONFUNCTION
8080B3         ?C0028?COMMONFUNCTION:
  137: 	else
  138: 	{				
  139: 		if( ( x + len ) < 20 )			
8080B3 901810            MOV     DPTR,#len
8080B6 E0                MOVX    A,@DPTR
8080B7 FF                MOV     R7,A
8080B8 FD                MOV     R5,A
8080B9 90180B            MOV     DPTR,#x
8080BC E0                MOVX    A,@DPTR
8080BD 2D                ADD     A,R5
8080BE FD                MOV     R5,A
8080BF E4                CLR     A
8080C0 33                RLC     A
8080C1 FC                MOV     R4,A
8080C2 C3                CLR     C
8080C3 ED                MOV     A,R5
8080C4 9414              SUBB    A,#014H
8080C6 EC                MOV     A,R4
8080C7 6480              XRL     A,#080H
8080C9 9480              SUBB    A,#080H
8080CB 5018              JNC     ?C0030?COMMONFUNCTION
  140: 			memcpy( tempstr + x, str, len );		
8080CD 7E00              MOV     R6,#00H
8080CF E0                MOVX    A,@DPTR
8080D0 2427              ADD     A,#LOW tempstr
8080D2 F9                MOV     R1,A
8080D3 E4                CLR     A
8080D4 3418              ADDC    A,#HIGH tempstr
8080D6 A801              MOV     R0,AR1
8080D8 FC                MOV     R4,A
8080D9 7D00              MOV     R5,#?C?XDATASEG
8080DB 90180D            MOV     DPTR,#str
8080DE A5128007AC        ECALL   ?C?PLDXDATA
8080E3 801B              SJMP    ?C0211?COMMONFUNCTION
8080E5         ?C0030?COMMONFUNCTION:
  141: 		else
  142: 			memcpy( tempstr + x, str, 20 );
8080E5 90180B            MOV     DPTR,#x
8080E8 E0                MOVX    A,@DPTR
8080E9 2427              ADD     A,#LOW tempstr
8080EB F9                MOV     R1,A
8080EC E4                CLR     A
8080ED 3418              ADDC    A,#HIGH tempstr
8080EF A801              MOV     R0,AR1
8080F1 FC                MOV     R4,A
8080F2 7D00              MOV     R5,#?C?XDATASEG
8080F4 90180D            MOV     DPTR,#str
8080F7 A5128007AC        ECALL   ?C?PLDXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 279


8080FC 7E00              MOV     R6,#00H
8080FE 7F14              MOV     R7,#014H
808100         
808100 A51280052D        ECALL   ?C?COPY
808105         ?C0031?COMMONFUNCTION:
  143: //		len = 20;		
  144: 		i = DisplayPosString( 0, y, tempstr, 20 );//设置屏幕字串
808105 90180C            MOV     DPTR,#y
808108 E0                MOVX    A,@DPTR
808109 FD                MOV     R5,A
80810A 7B00              MOV     R3,#?C?XDATASEG
80810C 7A18              MOV     R2,#HIGH tempstr
80810E 7927              MOV     R1,#LOW tempstr
808110 901842            MOV     DPTR,#?_DisplayPosString?BYTE+05H
808113 7414              MOV     A,#014H
808115 F0                MOVX    @DPTR,A
808116 E4                CLR     A
808117 FF                MOV     R7,A
808118 A512808950        ECALL   _DisplayPosString
80811D         
80811D E4                CLR     A
80811E 33                RLC     A
80811F 90183B            MOV     DPTR,#i
808122 F0                MOVX    @DPTR,A
  145: 	}	
808123         ?C0029?COMMONFUNCTION:
  146: 	if( i == 0 )
808123 90183B            MOV     DPTR,#i
808126 E0                MOVX    A,@DPTR
808127 6037              JZ      ?C0033?COMMONFUNCTION
808129         ?C0032?COMMONFUNCTION:
  147: 		return ;
  148: 	i = 0;
808129 E4                CLR     A
80812A 90183B            MOV     DPTR,#i
80812D F0                MOVX    @DPTR,A
  149: 	j = 0;
80812E A3                INC     DPTR
80812F F0                MOVX    @DPTR,A
808130         ?C0034?COMMONFUNCTION:
  150: 	while( ! ( i || j ) )
808130 90183B            MOV     DPTR,#i
808133 E0                MOVX    A,@DPTR
808134 702A              JNZ     ?C0033?COMMONFUNCTION
808136 A3                INC     DPTR
808137 E0                MOVX    A,@DPTR
808138 7026              JNZ     ?C0033?COMMONFUNCTION
  151: 	{
  152: 		WaitForWork( 50, NULL );
80813A 7F32              MOV     R7,#032H
80813C FE                MOV     R6,A
80813D A512807B35        ECALL   ?L?COM000D
  153: 		i = TestDeviceTimeOut( &Lcd );
808142 7E23              MOV     R6,#HIGH Lcd
808144 7F60              MOV     R7,#LOW Lcd
808146 A512808000        ECALL   _TestDeviceTimeOut
80814B 90183B            MOV     DPTR,#i
80814E EF                MOV     A,R7
80814F F0                MOVX    @DPTR,A
  154: 		j = TestDeviceCommOK( &Lcd );		
808150 7E23              MOV     R6,#HIGH Lcd
808152 7F60              MOV     R7,#LOW Lcd
808154 A512807FDE        ECALL   _TestDeviceCommOK
808159 90183C            MOV     DPTR,#j
80815C EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 280


80815D F0                MOVX    @DPTR,A
  155: 	}
80815E 80D0              SJMP    ?C0034?COMMONFUNCTION
  156: //	WaitForWork( 3000, &Lcd );
  157: }
808160         ?C0033?COMMONFUNCTION:
808160 A522              ERET    
----- FUNCTION _DisplayStr (END) -------


----- FUNCTION ?L?COM000E (BEGIN) -----
808162 E4                CLR     A
808163 93                MOVC    A,@A+DPTR
808164 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
808167 F0                MOVX    @DPTR,A
808168 7D01              MOV     R5,#01H
80816A E4                CLR     A
80816B FF                MOV     R7,A
80816C A512808062        ECALL   _DisplayStr
808171         ?L?COM000F:
808171 D21A              SETB    ?_DisplayCursorState?BIT
808173 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808176 7402              MOV     A,#02H
808178 F0                MOVX    @DPTR,A
808179 D21B              SETB    ?_DisplayCursorState?BIT+01H
80817B 7D01              MOV     R5,#01H
80817D E4                CLR     A
80817E FF                MOV     R7,A
----- FUNCTION _DisplayCursorState (BEGIN) -----
 FILE: 'CommonFunction.c'
  364: void  DisplayCursorState( u_char x, u_char y, bit posflag, u_char state, bit stateflag   )
  365: {		
;---- Variable 'y' assigned to Register 'R5' ----
;---- Variable 'x' assigned to Register 'R7' ----
  366: 	u_char xdata i = 0;
  367: 	u_char xdata j = 0;
80817F E4                CLR     A
808180 90178B            MOV     DPTR,#i
808183 F0                MOVX    @DPTR,A
  368: 
808184 A3                INC     DPTR
808185 F0                MOVX    @DPTR,A
  369: 	if( posflag == 1 )	
808186 301A0B            JNB     posflag,?C0089?COMMONFUNCTION
  370: 		i = DisplaySetCursorPos( x, y );	
808189 A512808E92        ECALL   _DisplaySetCursorPos
80818E E4                CLR     A
80818F 33                RLC     A
808190 90178B            MOV     DPTR,#i
808193 F0                MOVX    @DPTR,A
808194         ?C0089?COMMONFUNCTION:
  371: 	if( stateflag == 1 )			
808194 301B10            JNB     stateflag,?C0090?COMMONFUNCTION
  372: 		i = DisplaySetCursorStyle( state );
808197 90178A            MOV     DPTR,#state
80819A E0                MOVX    A,@DPTR
80819B FF                MOV     R7,A
80819C A5128121DE        ECALL   _DisplaySetCursorStyle
8081A1 E4                CLR     A
8081A2 33                RLC     A
8081A3 90178B            MOV     DPTR,#i
8081A6 F0                MOVX    @DPTR,A
8081A7         ?C0090?COMMONFUNCTION:
  373: 
  374: 	if( i == 0 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 281


8081A7 90178B            MOV     DPTR,#i
8081AA E0                MOVX    A,@DPTR
8081AB 6037              JZ      ?C0092?COMMONFUNCTION
8081AD         ?C0091?COMMONFUNCTION:
  375: 		return ;
  376: 	i = 0;
8081AD E4                CLR     A
8081AE 90178B            MOV     DPTR,#i
8081B1 F0                MOVX    @DPTR,A
  377: 	j = 0;
8081B2 A3                INC     DPTR
8081B3 F0                MOVX    @DPTR,A
8081B4         ?C0093?COMMONFUNCTION:
  378: 	while( ! ( i || j ) )
8081B4 90178B            MOV     DPTR,#i
8081B7 E0                MOVX    A,@DPTR
8081B8 702A              JNZ     ?C0092?COMMONFUNCTION
8081BA A3                INC     DPTR
8081BB E0                MOVX    A,@DPTR
8081BC 7026              JNZ     ?C0092?COMMONFUNCTION
  379: 	{
  380: 		WaitForWork( 50, NULL );
8081BE 7F32              MOV     R7,#032H
8081C0 FE                MOV     R6,A
8081C1 A512807B35        ECALL   ?L?COM000D
  381: 		i = TestDeviceTimeOut( &Lcd );
8081C6 7E23              MOV     R6,#HIGH Lcd
8081C8 7F60              MOV     R7,#LOW Lcd
8081CA A512808000        ECALL   _TestDeviceTimeOut
8081CF 90178B            MOV     DPTR,#i
8081D2 EF                MOV     A,R7
8081D3 F0                MOVX    @DPTR,A
  382: 		j = TestDeviceCommOK( &Lcd );		
8081D4 7E23              MOV     R6,#HIGH Lcd
8081D6 7F60              MOV     R7,#LOW Lcd
8081D8 A512807FDE        ECALL   _TestDeviceCommOK
8081DD 90178C            MOV     DPTR,#j
8081E0 EF                MOV     A,R7
8081E1 F0                MOVX    @DPTR,A
  383: 	}
8081E2 80D0              SJMP    ?C0093?COMMONFUNCTION
  384: //	WaitForWork( 3000, &Lcd );
  385: }
8081E4         ?C0092?COMMONFUNCTION:
8081E4 A522              ERET    
----- FUNCTION _DisplayCursorState (END) -------


----- FUNCTION GoodsMainMenu (BEGIN) -----
 FILE: 'countermaint.c'
  323: void GoodsMainMenu()
  324: {
  325:     /*菜单参数初始化*/
  326: 	u_char  xdata firstNum = 1;//一级菜单编号
8081E6 901729            MOV     DPTR,#firstNum
8081E9 7401              MOV     A,#01H
8081EB F0                MOVX    @DPTR,A
  327: 	u_char  xdata LineNum = 2;//选中屏幕的行号		
8081EC A3                INC     DPTR
8081ED 04                INC     A
8081EE F0                MOVX    @DPTR,A
  328: 	u_char  xdata key = 0;
8081EF E4                CLR     A
8081F0 A3                INC     DPTR
8081F1 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 282


  329: 	bit	data Notout = 1;
8081F2 D219              SETB    Notout
  330: 	u_char xdata len = 0; //GetData的返回值
8081F4 A3                INC     DPTR
8081F5 F0                MOVX    @DPTR,A
  331: 
  332: 	ClearKey();
8081F6 A5128087A8        ECALL   ClearKey
  333: 	/*菜单初始化显示*/	
  334: 	DisplayTraceSum( 0, 0 );
8081FB E4                CLR     A
8081FC FD                MOV     R5,A
8081FD FF                MOV     R7,A
8081FE A512805FA0        ECALL   _DisplayTraceSum
  335: 	DisplayTraceSum( 1, 1 );
808203 7D01              MOV     R5,#01H
808205 7F01              MOV     R7,#01H
808207 A512805FA0        ECALL   _DisplayTraceSum
  336: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态	
80820C A512808171        ECALL   ?L?COM000F
808211         ?C0044?COUNTERMAINT:
  337: 	while( Notout )
808211 201903            JB      Notout,$ + 6H
808214 028381            LJMP    ?C0073?COUNTERMAINT
  338: 	{		
  339: 		/*判断按下何键*/	
  340: 		key = GetKey();
808217 A512809275        ECALL   GetKey
80821C 90172B            MOV     DPTR,#key
80821F EF                MOV     A,R7
808220 F0                MOVX    @DPTR,A
  341: 		switch( key )		
808221 24F3              ADD     A,#0F3H
808223 7003              JNZ     $ + 5H
808225 0282E8            LJMP    ?C0062?COUNTERMAINT
808228 24F2              ADD     A,#0F2H
80822A 7003              JNZ     $ + 5H
80822C 0282E4            LJMP    ?C0061?COUNTERMAINT
80822F 24CB              ADD     A,#0CBH
808231 6063              JZ      ?C0054?COUNTERMAINT
808233 2408              ADD     A,#08H
808235 6003              JZ      $ + 5H
808237 028364            LJMP    ?C0046?COUNTERMAINT
  342: 		{
  343: 			case KEY_UP://上移  	
80823A         ?C0047?COUNTERMAINT:
  344: 			    if( LineNum == 2 )//选中标记上移
80823A 90172A            MOV     DPTR,#LineNum
80823D E0                MOVX    A,@DPTR
80823E 6402              XRL     A,#02H
808240 7029              JNZ     ?C0048?COUNTERMAINT
  345: 			    {			     
  346: 			    	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
808242 D21A              SETB    ?_DisplayCursorState?BIT
808244 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808247 7402              MOV     A,#02H
808249 F0                MOVX    @DPTR,A
80824A D21B              SETB    ?_DisplayCursorState?BIT+01H
80824C E4                CLR     A
80824D FD                MOV     R5,A
80824E FF                MOV     R7,A
80824F A51280817F        ECALL   _DisplayCursorState
  347: 			    	LineNum = 1;
808254 90172A            MOV     DPTR,#LineNum
808257 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 283


808259 F0                MOVX    @DPTR,A
  348: 					if( firstNum == 0 )
80825A 901729            MOV     DPTR,#firstNum
80825D E0                MOVX    A,@DPTR
80825E 7002              JNZ     ?C0049?COUNTERMAINT
  349: 						firstNum = MENU_COUNT( GoodsMianMenuStr ) - 1;					
808260 807C              SJMP    ?C0175?COUNTERMAINT
808262         ?C0049?COUNTERMAINT:
  350: 					else
  351: 						firstNum--;			    
808262 901729            MOV     DPTR,#firstNum
808265 E0                MOVX    A,@DPTR
808266 14                DEC     A
808267 F0                MOVX    @DPTR,A
  352: 			     }
808268 028364            LJMP    ?C0046?COUNTERMAINT
80826B         ?C0048?COUNTERMAINT:
  353: 			     else//菜单上翻
  354: 			     {
  355: 				 	DisplayTraceSum( 1, firstNum );
80826B A512805F99        ECALL   ?L?COM002A
  356: 			     //	DisplayStr( 0, 1, 1, GoodsMianMenuStr[firstNum].str, GoodsMianMenuStr[firstNum].len );	 					  
  357: 				  	if( firstNum == 0 )
808270 901729            MOV     DPTR,#firstNum
808273 E0                MOVX    A,@DPTR
808274 7005              JNZ     ?C0052?COUNTERMAINT
  358: 				  		firstNum = MENU_COUNT( GoodsMianMenuStr ) - 1;					
808276 7402              MOV     A,#02H
808278 F0                MOVX    @DPTR,A
808279 8006              SJMP    ?C0053?COUNTERMAINT
80827B         ?C0052?COUNTERMAINT:
  359: 				  	else
  360: 						firstNum--;										
80827B 901729            MOV     DPTR,#firstNum
80827E E0                MOVX    A,@DPTR
80827F 14                DEC     A
808280 F0                MOVX    @DPTR,A
808281         ?C0053?COUNTERMAINT:
  361: 					DisplayTraceSum( 0, firstNum );
808281 901729            MOV     DPTR,#firstNum
808284 E0                MOVX    A,@DPTR
808285 FD                MOV     R5,A
808286 E4                CLR     A
808287 FF                MOV     R7,A
808288 A512805FA0        ECALL   _DisplayTraceSum
  362: 				//	DisplayStr( 0, 0, 1, GoodsMianMenuStr[firstNum].str, GoodsMianMenuStr[firstNum].len );				   
  363: 				  	LineNum = 1;										
80828D 90172A            MOV     DPTR,#LineNum
808290 7401              MOV     A,#01H
808292 F0                MOVX    @DPTR,A
  364: 			     }
  365: 				 break;
808293 028364            LJMP    ?C0046?COUNTERMAINT
  366: 			case KEY_DOWN://下移				
808296         ?C0054?COUNTERMAINT:
  367: 				if( LineNum == 1 )//选中标记下移
808296 90172A            MOV     DPTR,#LineNum
808299 E0                MOVX    A,@DPTR
80829A 6401              XRL     A,#01H
80829C 701B              JNZ     ?C0055?COUNTERMAINT
  368: 				{			
  369: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
80829E A512808171        ECALL   ?L?COM000F
  370: 					 if( firstNum == MENU_COUNT( GoodsMianMenuStr ) - 1 )
8082A3 901729            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 284


8082A6 E0                MOVX    A,@DPTR
8082A7 B40204            CJNE    A,#02H,?C0056?COUNTERMAINT
  371: 						firstNum = 0;					
8082AA E4                CLR     A
8082AB F0                MOVX    @DPTR,A
8082AC 8006              SJMP    ?C0057?COUNTERMAINT
8082AE         ?C0056?COUNTERMAINT:
  372: 					 else						
  373: 				    	firstNum++;				     
8082AE 901729            MOV     DPTR,#firstNum
8082B1 E0                MOVX    A,@DPTR
8082B2 04                INC     A
8082B3 F0                MOVX    @DPTR,A
8082B4         ?C0057?COUNTERMAINT:
  374: 				     LineNum = 2;				     
8082B4 90172A            MOV     DPTR,#LineNum
8082B7         
  375: 				 }
8082B7 8025              SJMP    ?C0175?COUNTERMAINT
8082B9         ?C0055?COUNTERMAINT:
  376: 				 else//菜单下翻
  377: 				 {
  378: 				 //	DisplayStr( 0, 0, 1, GoodsMianMenuStr[firstNum].str, GoodsMianMenuStr[firstNum].len );
  379: 				 	DisplayTraceSum( 0, firstNum );
8082B9 901729            MOV     DPTR,#firstNum
8082BC E0                MOVX    A,@DPTR
8082BD FD                MOV     R5,A
8082BE E4                CLR     A
8082BF FF                MOV     R7,A
8082C0 A512805FA0        ECALL   _DisplayTraceSum
  380: 					if( firstNum == MENU_COUNT( GoodsMianMenuStr ) - 1 )
8082C5 901729            MOV     DPTR,#firstNum
8082C8 E0                MOVX    A,@DPTR
8082C9 B40204            CJNE    A,#02H,?C0059?COUNTERMAINT
  381: 						firstNum = 0;					
8082CC E4                CLR     A
8082CD F0                MOVX    @DPTR,A
8082CE 8006              SJMP    ?C0060?COUNTERMAINT
8082D0         ?C0059?COUNTERMAINT:
  382: 					else				    	 
  383: 				    	firstNum++;					  	
8082D0 901729            MOV     DPTR,#firstNum
8082D3 E0                MOVX    A,@DPTR
8082D4 04                INC     A
8082D5 F0                MOVX    @DPTR,A
8082D6         ?C0060?COUNTERMAINT:
  384: 				//	DisplayStr( 0, 1, 1, GoodsMianMenuStr[firstNum].str, GoodsMianMenuStr[firstNum].len );				
  385: 					DisplayTraceSum( 1, firstNum );
8082D6 A512805F99        ECALL   ?L?COM002A
  386: 					LineNum = 2;					
8082DB 90172A            MOV     DPTR,#LineNum
8082DE         
8082DE 7402              MOV     A,#02H
8082E0 F0                MOVX    @DPTR,A
  387: 				}
  388: 				break;
8082E1 028364            LJMP    ?C0046?COUNTERMAINT
  389: 			case KEY_CANCEL:
8082E4         ?C0061?COUNTERMAINT:
  390: 				Notout = 0;
8082E4 C219              CLR     Notout
  391: 				break;
8082E6 807C              SJMP    ?C0046?COUNTERMAINT
  392: 			case KEY_SUBMIT://Enter,选中了某项菜单
8082E8         ?C0062?COUNTERMAINT:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 285


  393: 				ClearKey();				
8082E8 A5128087A8        ECALL   ClearKey
  394: 				switch( firstNum )
8082ED 901729            MOV     DPTR,#firstNum
8082F0 E0                MOVX    A,@DPTR
8082F1 24FE              ADD     A,#0FEH
8082F3 7005              JNZ     ?C0063?COUNTERMAINT
  395: 				{	                
  396: 					case 0://余币统计				
  397: 					case 1://正常交易统计					
  398: 						break;			
  399: 					case 2://货道售出明细
8082F5         ?C0066?COUNTERMAINT:
  400: 						GoodsWayTraceList( );
8082F5 A512808383        ECALL   GoodsWayTraceList
  401: 						break;					
  402: 				}						
8082FA         ?C0063?COUNTERMAINT:
  403: 				if(LineNum ==2)
8082FA 90172A            MOV     DPTR,#LineNum
8082FD E0                MOVX    A,@DPTR
8082FE 6402              XRL     A,#02H
808300 7025              JNZ     ?C0067?COUNTERMAINT
  404: 				{	
  405: 					DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态	
808302 A512808171        ECALL   ?L?COM000F
  406: 					if( firstNum == 0 )												
808307 901729            MOV     DPTR,#firstNum
80830A E0                MOVX    A,@DPTR
80830B 7004              JNZ     ?C0068?COUNTERMAINT
  407: 						DisplayTraceSum( 0, MENU_COUNT( GoodsMianMenuStr ) - 1 );
80830D 7D02              MOV     R5,#02H
80830F 8007              SJMP    ?C0172?COUNTERMAINT
808311         ?C0068?COUNTERMAINT:
  408: 					else						
  409: 						DisplayTraceSum( 0, firstNum - 1 );
808311 901729            MOV     DPTR,#firstNum
808314 E0                MOVX    A,@DPTR
808315 14                DEC     A
808316 FD                MOV     R5,A
808317 E4                CLR     A
808318         
808318 FF                MOV     R7,A
808319 A512805FA0        ECALL   _DisplayTraceSum
80831E         ?C0069?COUNTERMAINT:
  410: 					DisplayTraceSum( 1, firstNum );	
80831E 901729            MOV     DPTR,#firstNum
808321 E0                MOVX    A,@DPTR
808322 FD                MOV     R5,A
808323 7F01              MOV     R7,#01H
  411: 				}
808325 8030              SJMP    ?C0176?COUNTERMAINT
808327         ?C0067?COUNTERMAINT:
  412: 				else
  413: 				{	
  414: 					DisplayCursorState( 0, 0, 1, 2, 1 );//设置当在第二行上且为整行光标状态	
808327 D21A              SETB    ?_DisplayCursorState?BIT
808329 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80832C 7402              MOV     A,#02H
80832E F0                MOVX    @DPTR,A
80832F D21B              SETB    ?_DisplayCursorState?BIT+01H
808331 E4                CLR     A
808332 FD                MOV     R5,A
808333 FF                MOV     R7,A
808334 A51280817F        ECALL   _DisplayCursorState
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 286


  415: 					if( firstNum == ( MENU_COUNT( GoodsMianMenuStr ) - 1 ) )				
808339 901729            MOV     DPTR,#firstNum
80833C E0                MOVX    A,@DPTR
80833D B40203            CJNE    A,#02H,?C0071?COUNTERMAINT
  416: 						DisplayTraceSum( 1, 0 );
808340 E4                CLR     A
808341 8005              SJMP    ?C0173?COUNTERMAINT
808343         ?C0071?COUNTERMAINT:
  417: 					else				    	
  418: 						DisplayTraceSum( 1, firstNum + 1 );
808343 901729            MOV     DPTR,#firstNum
808346 E0                MOVX    A,@DPTR
808347 04                INC     A
808348         
808348 FD                MOV     R5,A
808349 7F01              MOV     R7,#01H
80834B A512805FA0        ECALL   _DisplayTraceSum
808350         ?C0072?COUNTERMAINT:
  419: 					DisplayTraceSum( 0, firstNum );
808350 901729            MOV     DPTR,#firstNum
808353 E0                MOVX    A,@DPTR
808354 FD                MOV     R5,A
808355 E4                CLR     A
808356 FF                MOV     R7,A
808357         
808357 A512805FA0        ECALL   _DisplayTraceSum
  420: 				}	
80835C         ?C0070?COUNTERMAINT:
  421: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态
80835C 90172A            MOV     DPTR,#LineNum
80835F A512808794        ECALL   ?L?COM0011
  422: 				ClearKey();		
  423: 		    	break;		
  424: 		}
808364         ?C0046?COUNTERMAINT:
  425: 		SchedulerProcess();//让出时间片
808364 A512809545        ECALL   SchedulerProcess
  426: 		WaitForWork( 100, &Lcd );
808369 E4                CLR     A
80836A 7F64              MOV     R7,#064H
80836C FE                MOV     R6,A
80836D FD                MOV     R5,A
80836E FC                MOV     R4,A
80836F 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
808372 7423              MOV     A,#HIGH Lcd
808374 F0                MOVX    @DPTR,A
808375 A3                INC     DPTR
808376 7460              MOV     A,#LOW Lcd
808378 F0                MOVX    @DPTR,A
808379 A512807B3D        ECALL   _WaitForWork
  427: 	}	
80837E 028211            LJMP    ?C0044?COUNTERMAINT
  428: }
808381         ?C0073?COUNTERMAINT:
808381 A522              ERET    
----- FUNCTION GoodsMainMenu (END) -------


----- FUNCTION GoodsWayTraceList (BEGIN) -----
 FILE: 'countermaint.c'
  224: void GoodsWayTraceList( )
  225: {
  226:     /*菜单参数初始化*/
  227: 	u_char  xdata firstNum = 1;//一级菜单编号
808383 90172D            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 287


808386 7401              MOV     A,#01H
808388 F0                MOVX    @DPTR,A
  228: 	u_char  xdata LineNum = 2;//选中屏幕的行号		
808389 A3                INC     DPTR
80838A 04                INC     A
80838B F0                MOVX    @DPTR,A
  229: 	u_char  xdata key = 0;
80838C E4                CLR     A
80838D A3                INC     DPTR
80838E F0                MOVX    @DPTR,A
  230: 	u_char	xdata Notout = 1;	
80838F A3                INC     DPTR
808390 04                INC     A
808391 F0                MOVX    @DPTR,A
  231: 	u_char xdata i = 0;
808392 E4                CLR     A
808393 A3                INC     DPTR
808394 F0                MOVX    @DPTR,A
  232: 	u_char xdata m_InCode = 0;
808395 A3                INC     DPTR
808396 F0                MOVX    @DPTR,A
  233: 	u_char xdata m_GoodsNo = 0;
808397 A3                INC     DPTR
808398 F0                MOVX    @DPTR,A
808399         ?C0019?COUNTERMAINT:
  234: 
  235: 	while( 1 )
  236: 	{
  237: 		ClearDisplayLine( 1 );
808399 A5128087B2        ECALL   ?L?COM0014
  238: 		ClearDisplayLine( 2 );			
  239: 		m_GoodsNo = 100;
80839E 901733            MOV     DPTR,#m_GoodsNo
8083A1 7464              MOV     A,#064H
8083A3 F0                MOVX    @DPTR,A
  240: 		m_GoodsNo = InputGoodsWayNo( 0 );		
8083A4 E4                CLR     A
8083A5 FF                MOV     R7,A
8083A6 A51280CFCD        ECALL   _InputGoodsWayNo
8083AB 901733            MOV     DPTR,#m_GoodsNo
8083AE EF                MOV     A,R7
8083AF F0                MOVX    @DPTR,A
  241: 		if( m_GoodsNo == 100 )
8083B0 6464              XRL     A,#064H
8083B2 7003              JNZ     $ + 5H
8083B4 028524            LJMP    ?C0022?COUNTERMAINT
8083B7         ?C0021?COUNTERMAINT:
  242: 			return;
  243: 		else if ( m_GoodsNo == 99 )			
8083B7 901733            MOV     DPTR,#m_GoodsNo
8083BA E0                MOVX    A,@DPTR
8083BB 6463              XRL     A,#063H
8083BD 703C              JNZ     ?C0020?COUNTERMAINT
  244: 	 	{
  245: 		#ifdef _CHINA_
  246: 			DisplayStr( 0, 0, 1, "编号输入错误", 12 );
  247: 			DisplayStr( 0, 1, 1, "请输入其它编号", 14 );
  248: 		#else
  249: 			DisplayStr( 0, 0, 1, "Input code error", 16 );
8083BF D21A              SETB    ?_DisplayStr?BIT
8083C1 7B80              MOV     R3,#BYTE2 08012A2H
8083C3 7A12              MOV     R2,#HIGH 08012A2H
8083C5 79A2              MOV     R1,#LOW 08012A2H
8083C7 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8083CA A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 288


8083CF 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8083D2 7410              MOV     A,#010H
8083D4 A51280805E        ECALL   ?L?COM0007
  250: 			DisplayStr( 0, 1, 1, "Input other code", 16 );				
8083D9 D21A              SETB    ?_DisplayStr?BIT
8083DB 7B80              MOV     R3,#BYTE2 08012B3H
8083DD 7A12              MOV     R2,#HIGH 08012B3H
8083DF 79B3              MOV     R1,#LOW 08012B3H
8083E1 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8083E4 A5128007B6        ECALL   ?C?PSTXDATA
8083E9 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8083EC 7410              MOV     A,#010H
8083EE A512807B26        ECALL   ?L?COM000B
  251: 		#endif
  252: 			WaitForWork( 2000, NULL );
  253: 			m_GoodsNo = 100;			
8083F3 901733            MOV     DPTR,#m_GoodsNo
8083F6 7464              MOV     A,#064H
8083F8 F0                MOVX    @DPTR,A
  254: 		}				
8083F9 809E              SJMP    ?C0019?COUNTERMAINT
  255: 		else
  256: 			break;
  257: 	}
8083FB         ?C0020?COUNTERMAINT:
  258: 	DisplayCursorState( 0, 0, 0, 0, 1 );
8083FB C21A              CLR     ?_DisplayCursorState?BIT
8083FD E4                CLR     A
8083FE 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808401 F0                MOVX    @DPTR,A
808402 D21B              SETB    ?_DisplayCursorState?BIT+01H
808404 FD                MOV     R5,A
808405 A5128087A2        ECALL   ?L?COM0012
  259: 	Trace("\n m_GoodsNo = %bu", m_GoodsNo ); 
  260: 	ClearKey();		
  261: 	DispGoodsWayList( 0, 0, m_GoodsNo );		
80840A 901733            MOV     DPTR,#m_GoodsNo
80840D E0                MOVX    A,@DPTR
80840E FB                MOV     R3,A
80840F E4                CLR     A
808410 FD                MOV     R5,A
808411 FF                MOV     R7,A
808412 A5128060B8        ECALL   _DispGoodsWayList
  262: 	DispGoodsWayList( 1, 1, m_GoodsNo );			
808417 901733            MOV     DPTR,#m_GoodsNo
80841A E0                MOVX    A,@DPTR
80841B FB                MOV     R3,A
80841C 7D01              MOV     R5,#01H
80841E 7F01              MOV     R7,#01H
808420 A5128060B8        ECALL   _DispGoodsWayList
  263: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态	
808425 A512808171        ECALL   ?L?COM000F
80842A         ?C0026?COUNTERMAINT:
  264: 	while( Notout )
80842A 901730            MOV     DPTR,#Notout
80842D E0                MOVX    A,@DPTR
80842E 7003              JNZ     $ + 5H
808430 028524            LJMP    ?C0022?COUNTERMAINT
  265: 	{		
  266: 		/*判断按下何键*/	
  267: 		key = GetKey();
808433 A512809275        ECALL   GetKey
808438 90172F            MOV     DPTR,#key
80843B EF                MOV     A,R7
80843C F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 289


  268: 		switch( key )		
80843D 24E5              ADD     A,#0E5H
80843F 7003              JNZ     $ + 5H
808441 028502            LJMP    ?C0043?COUNTERMAINT
808444 24CB              ADD     A,#0CBH
808446 6068              JZ      ?C0036?COUNTERMAINT
808448 2408              ADD     A,#08H
80844A 6003              JZ      $ + 5H
80844C 028507            LJMP    ?C0028?COUNTERMAINT
  269: 		{
  270: 			case KEY_UP://上移  	
80844F         ?C0029?COUNTERMAINT:
  271: 			    if( LineNum == 2 )//选中标记上移
80844F 90172E            MOV     DPTR,#LineNum
808452 E0                MOVX    A,@DPTR
808453 6402              XRL     A,#02H
808455 702A              JNZ     ?C0030?COUNTERMAINT
  272: 			    {			     
  273: 			    	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
808457 D21A              SETB    ?_DisplayCursorState?BIT
808459 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80845C 7402              MOV     A,#02H
80845E F0                MOVX    @DPTR,A
80845F D21B              SETB    ?_DisplayCursorState?BIT+01H
808461 E4                CLR     A
808462 FD                MOV     R5,A
808463 FF                MOV     R7,A
808464 A51280817F        ECALL   _DisplayCursorState
  274: 			    	LineNum = 1;
808469 90172E            MOV     DPTR,#LineNum
80846C 7401              MOV     A,#01H
80846E F0                MOVX    @DPTR,A
  275: 					if( firstNum == 0 )					
80846F 90172D            MOV     DPTR,#firstNum
808472 E0                MOVX    A,@DPTR
808473 7003              JNZ     ?C0031?COUNTERMAINT
  276: 						//正常交易明细	
  277: 						firstNum = MENU_COUNT( GoodsWayListStr ) - 1;											
808475 0284FD            LJMP    ?C0171?COUNTERMAINT
808478         ?C0031?COUNTERMAINT:
  278: 					else
  279: 						firstNum--;			    
808478 90172D            MOV     DPTR,#firstNum
80847B E0                MOVX    A,@DPTR
80847C 14                DEC     A
80847D F0                MOVX    @DPTR,A
  280: 			     }
80847E 028507            LJMP    ?C0028?COUNTERMAINT
808481         ?C0030?COUNTERMAINT:
  281: 			     else//菜单上翻
  282: 			     {		   		     	
  283: 			 		DispGoodsWayList( firstNum, 1, m_GoodsNo );	
808481 A5128060AC        ECALL   ?L?COM002D
  284: 					if( firstNum == 0 )													
808486 90172D            MOV     DPTR,#firstNum
808489 E0                MOVX    A,@DPTR
80848A 7005              JNZ     ?C0034?COUNTERMAINT
  285: 			  			firstNum = MENU_COUNT( GoodsWayListStr ) - 1;
80848C 7402              MOV     A,#02H
80848E F0                MOVX    @DPTR,A
80848F 8006              SJMP    ?C0035?COUNTERMAINT
808491         ?C0034?COUNTERMAINT:
  286: 					else
  287: 						firstNum--;	
808491 90172D            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 290


808494 E0                MOVX    A,@DPTR
808495 14                DEC     A
808496 F0                MOVX    @DPTR,A
808497         ?C0035?COUNTERMAINT:
  288: 				   	DispGoodsWayList( firstNum, 0, m_GoodsNo );											
808497 90172D            MOV     DPTR,#firstNum
80849A E0                MOVX    A,@DPTR
80849B FF                MOV     R7,A
80849C 901733            MOV     DPTR,#m_GoodsNo
80849F E0                MOVX    A,@DPTR
8084A0 FB                MOV     R3,A
8084A1 E4                CLR     A
8084A2 FD                MOV     R5,A
8084A3 A5128060B8        ECALL   _DispGoodsWayList
  289: 				  	LineNum = 1;										
8084A8 90172E            MOV     DPTR,#LineNum
8084AB 7401              MOV     A,#01H
8084AD F0                MOVX    @DPTR,A
  290: 			     }
  291: 				 break;
8084AE 8057              SJMP    ?C0028?COUNTERMAINT
  292: 			case KEY_DOWN://下移				
8084B0         ?C0036?COUNTERMAINT:
  293: 				if( LineNum == 1 )//选中标记下移
8084B0 90172E            MOV     DPTR,#LineNum
8084B3 E0                MOVX    A,@DPTR
8084B4 6401              XRL     A,#01H
8084B6 701B              JNZ     ?C0037?COUNTERMAINT
  294: 				{			
  295: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标						 
8084B8 A512808171        ECALL   ?L?COM000F
  296: 				 	if( firstNum == MENU_COUNT( GoodsWayListStr ) - 1 )
8084BD 90172D            MOV     DPTR,#firstNum
8084C0 E0                MOVX    A,@DPTR
8084C1 B40204            CJNE    A,#02H,?C0038?COUNTERMAINT
  297: 						firstNum = 0;					
8084C4 E4                CLR     A
8084C5 F0                MOVX    @DPTR,A
8084C6 8006              SJMP    ?C0039?COUNTERMAINT
8084C8         ?C0038?COUNTERMAINT:
  298: 				 	else						
  299: 			    		firstNum++;										 
8084C8 90172D            MOV     DPTR,#firstNum
8084CB E0                MOVX    A,@DPTR
8084CC 04                INC     A
8084CD F0                MOVX    @DPTR,A
8084CE         ?C0039?COUNTERMAINT:
  300: 				     LineNum = 2;				     
8084CE 90172E            MOV     DPTR,#LineNum
8084D1         
  301: 				 }
8084D1 802A              SJMP    ?C0171?COUNTERMAINT
8084D3         ?C0037?COUNTERMAINT:
  302: 				 else//菜单下翻
  303: 				 {				 	
  304: 			 		DispGoodsWayList( firstNum, 0, m_GoodsNo );
8084D3 90172D            MOV     DPTR,#firstNum
8084D6 E0                MOVX    A,@DPTR
8084D7 FF                MOV     R7,A
8084D8 901733            MOV     DPTR,#m_GoodsNo
8084DB E0                MOVX    A,@DPTR
8084DC FB                MOV     R3,A
8084DD E4                CLR     A
8084DE FD                MOV     R5,A
8084DF A5128060B8        ECALL   _DispGoodsWayList
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 291


  305: 					if( firstNum == MENU_COUNT( GoodsWayListStr ) - 1 )
8084E4 90172D            MOV     DPTR,#firstNum
8084E7 E0                MOVX    A,@DPTR
8084E8 B40204            CJNE    A,#02H,?C0041?COUNTERMAINT
  306: 						firstNum = 0;					
8084EB E4                CLR     A
8084EC F0                MOVX    @DPTR,A
8084ED 8006              SJMP    ?C0042?COUNTERMAINT
8084EF         ?C0041?COUNTERMAINT:
  307: 				 	else						
  308: 			    		firstNum++;				     
8084EF 90172D            MOV     DPTR,#firstNum
8084F2 E0                MOVX    A,@DPTR
8084F3 04                INC     A
8084F4 F0                MOVX    @DPTR,A
8084F5         ?C0042?COUNTERMAINT:
  309: 					DispGoodsWayList( firstNum, 1, m_GoodsNo );															
8084F5 A5128060AC        ECALL   ?L?COM002D
  310: 					LineNum = 2;					
8084FA 90172E            MOV     DPTR,#LineNum
8084FD         
8084FD 7402              MOV     A,#02H
8084FF F0                MOVX    @DPTR,A
  311: 				}
  312: 				break;
808500 8005              SJMP    ?C0028?COUNTERMAINT
  313: 			case KEY_CANCEL:
808502         ?C0043?COUNTERMAINT:
  314: 				Notout = 0;
808502 E4                CLR     A
808503 901730            MOV     DPTR,#Notout
808506 F0                MOVX    @DPTR,A
  315: 				break;													
  316: 		}
808507         ?C0028?COUNTERMAINT:
  317: 		SchedulerProcess();//让出时间片
808507 A512809545        ECALL   SchedulerProcess
  318: 		WaitForWork( 100, &Lcd );
80850C E4                CLR     A
80850D 7F64              MOV     R7,#064H
80850F FE                MOV     R6,A
808510 FD                MOV     R5,A
808511 FC                MOV     R4,A
808512 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
808515 7423              MOV     A,#HIGH Lcd
808517 F0                MOVX    @DPTR,A
808518 A3                INC     DPTR
808519 7460              MOV     A,#LOW Lcd
80851B F0                MOVX    @DPTR,A
80851C A512807B3D        ECALL   _WaitForWork
  319: 	}	
808521 02842A            LJMP    ?C0026?COUNTERMAINT
  320: }
808524         ?C0022?COUNTERMAINT:
808524 A522              ERET    
----- FUNCTION GoodsWayTraceList (END) -------


----- FUNCTION _SP_MenuSelected (BEGIN) -----
 FILE: 'SysParamSet.c'
 1022: void  SP_MenuSelected( u_char xdata *SelectedNum, u_char xdata *CursorLine, u_char MoveRange, u_char ChangeLinefl
>> ag )
 1023: {
808526 90172E            MOV     DPTR,#MoveRange
808529 EB                MOV     A,R3
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 292


80852A F0                MOVX    @DPTR,A
80852B 90172A            MOV     DPTR,#SelectedNum
80852E EE                MOV     A,R6
80852F F0                MOVX    @DPTR,A
808530 A3                INC     DPTR
808531 EF                MOV     A,R7
808532 F0                MOVX    @DPTR,A
808533 A3                INC     DPTR
808534 EC                MOV     A,R4
808535 F0                MOVX    @DPTR,A
808536 A3                INC     DPTR
808537 ED                MOV     A,R5
808538 F0                MOVX    @DPTR,A
 1024: 	u_char xdata  MenuNum = *SelectedNum;
 1025: 	//此项为1表示光标在第一行,为二表示光标在第二行
808539 8F82              MOV     DPL,R7
80853B 8E83              MOV     DPH,R6
80853D E0                MOVX    A,@DPTR
80853E 901730            MOV     DPTR,#MenuNum
808541 F0                MOVX    @DPTR,A
 1026: 	u_char xdata  Cursor = *CursorLine;
808542 8D82              MOV     DPL,R5
808544 8C83              MOV     DPH,R4
808546 E0                MOVX    A,@DPTR
808547 901731            MOV     DPTR,#Cursor
80854A F0                MOVX    @DPTR,A
 1027: 	bit	   data   flag = 1;	
80854B D218              SETB    flag
 1028: 	u_char xdata  ReDisplen = 0;
80854D E4                CLR     A
80854E A3                INC     DPTR
80854F F0                MOVX    @DPTR,A
 1029: 	u_char xdata  key = 0xff;
808550 A3                INC     DPTR
808551 74FF              MOV     A,#0FFH
808553 F0                MOVX    @DPTR,A
 1030: 	u_char  xdata  len = 0;	
808554 E4                CLR     A
808555 A3                INC     DPTR
808556 F0                MOVX    @DPTR,A
808557         ?C0352?SYSPARAMSET:
 1031: 
 1032: 	while( flag )
808557 201803            JB      flag,$ + 6H
80855A 02878C            LJMP    ?C0353?SYSPARAMSET
 1033: 	{
 1034: 		key = GetKey();
80855D A512809275        ECALL   GetKey
808562 901733            MOV     DPTR,#key
808565 EF                MOV     A,R7
808566 F0                MOVX    @DPTR,A
 1035: 		switch( key )		
808567 24F3              ADD     A,#0F3H
808569 7003              JNZ     $ + 5H
80856B 028757            LJMP    ?C0387?SYSPARAMSET
80856E 24C5              ADD     A,#0C5H
808570 6021              JZ      ?C0356?SYSPARAMSET
808572 24F8              ADD     A,#0F8H
808574 7003              JNZ     $ + 5H
808576 02868D            LJMP    ?C0371?SYSPARAMSET
808579 2435              ADD     A,#035H
80857B 6003              JZ      $ + 5H
80857D 02877D            LJMP    ?C0354?SYSPARAMSET
 1036: 		{
 1037: 			case KEY_CANCEL:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 293


808580         ?C0355?SYSPARAMSET:
 1038: 				flag = 0;
808580 C218              CLR     flag
 1039: 				*SelectedNum = 100;				
808582 90172A            MOV     DPTR,#SelectedNum
808585 E0                MOVX    A,@DPTR
808586 FE                MOV     R6,A
808587 A3                INC     DPTR
808588 E0                MOVX    A,@DPTR
808589 F582              MOV     DPL,A
80858B 8E83              MOV     DPH,R6
80858D 7464              MOV     A,#064H
80858F F0                MOVX    @DPTR,A
 1040: 				break;
808590 02877D            LJMP    ?C0354?SYSPARAMSET
 1041: 			case KEY_UP://上移  
808593         ?C0356?SYSPARAMSET:
 1042: 	//			Trace("\n Cursor1 = %bu ", Cursor );				
 1043: 	//			Trace("\n MenuNum1 = %bu ", MenuNum );
 1044: 				if( Cursor == 2 )//选中标记上移
808593 901731            MOV     DPTR,#Cursor
808596 E0                MOVX    A,@DPTR
808597 6402              XRL     A,#02H
808599 703D              JNZ     ?C0357?SYSPARAMSET
 1045: 				{			
 1046: 					DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标					
80859B D21A              SETB    ?_DisplayCursorState?BIT
80859D 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8085A0 7402              MOV     A,#02H
8085A2 F0                MOVX    @DPTR,A
8085A3 D21B              SETB    ?_DisplayCursorState?BIT+01H
8085A5 E4                CLR     A
8085A6 FD                MOV     R5,A
8085A7 FF                MOV     R7,A
8085A8 A51280817F        ECALL   _DisplayCursorState
 1047: 					Cursor = 1;
8085AD 901731            MOV     DPTR,#Cursor
8085B0 7401              MOV     A,#01H
8085B2 F0                MOVX    @DPTR,A
 1048: 					if( ( ChangeLineflag & 0x01 ) == 0x01 )					
8085B3 90172F            MOV     DPTR,#ChangeLineflag
8085B6 E0                MOVX    A,@DPTR
8085B7 FF                MOV     R7,A
8085B8 30E003            JNB     ACC.0,?C0358?SYSPARAMSET
 1049: 						ChangeLineflag |= 0x02;
8085BB 028721            LJMP    ?C0476?SYSPARAMSET
8085BE         ?C0358?SYSPARAMSET:
 1050: 					else
 1051: 					{
 1052: 						if( MenuNum == 0 )
8085BE 901730            MOV     DPTR,#MenuNum
8085C1 E0                MOVX    A,@DPTR
8085C2 700B              JNZ     ?C0360?SYSPARAMSET
 1053: 							MenuNum = MoveRange;					
8085C4 90172E            MOV     DPTR,#MoveRange
8085C7 E0                MOVX    A,@DPTR
8085C8 901730            MOV     DPTR,#MenuNum
8085CB F0                MOVX    @DPTR,A
8085CC 02877D            LJMP    ?C0354?SYSPARAMSET
8085CF         ?C0360?SYSPARAMSET:
 1054: 						else									    
 1055: 							MenuNum--;					
8085CF 901730            MOV     DPTR,#MenuNum
8085D2 E0                MOVX    A,@DPTR
8085D3 14                DEC     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 294


8085D4 F0                MOVX    @DPTR,A
 1056: 					}						
 1057: 	//				Trace("\n Cursor2 = %bu ", Cursor );				
 1058: 	//				Trace("\n MenuNum2 = %bu ", MenuNum );
 1059: 				}
8085D5 02877D            LJMP    ?C0354?SYSPARAMSET
8085D8         ?C0357?SYSPARAMSET:
 1060: 				else//菜单上翻
 1061: 				{	
 1062: 	//				Trace("\n Cursor3 = %bu ", Cursor );				
 1063: 	//				Trace("\n MenuNum3 = %bu ", MenuNum );					
 1064: 				//	DisplayMenuAndVal( 1, MenuNum, 1 );					
 1065: 					if( MenuNum == 0 )
8085D8 901730            MOV     DPTR,#MenuNum
8085DB E0                MOVX    A,@DPTR
8085DC 700A              JNZ     ?C0363?SYSPARAMSET
 1066: 						MenuNum = MoveRange;					
8085DE 90172E            MOV     DPTR,#MoveRange
8085E1 E0                MOVX    A,@DPTR
8085E2 901730            MOV     DPTR,#MenuNum
8085E5 F0                MOVX    @DPTR,A
8085E6 8006              SJMP    ?C0364?SYSPARAMSET
8085E8         ?C0363?SYSPARAMSET:
 1067: 					else									    
 1068: 						MenuNum--;					
8085E8 901730            MOV     DPTR,#MenuNum
8085EB E0                MOVX    A,@DPTR
8085EC 14                DEC     A
8085ED F0                MOVX    @DPTR,A
8085EE         ?C0364?SYSPARAMSET:
 1069: 					ReDisplen = DisplayMenuAndVal( 0, MenuNum , 1 );
8085EE A512805C24        ECALL   ?L?COM0021
8085F3 901732            MOV     DPTR,#ReDisplen
8085F6 EF                MOV     A,R7
8085F7 F0                MOVX    @DPTR,A
 1070: 					if( ReDisplen != 0 )
8085F8 604E              JZ      ?C0365?SYSPARAMSET
 1071: 					{
 1072: 						DisplayStr( 0, 1, 1,  y_displaystr + 20, ReDisplen );//显示菜单						
8085FA D21A              SETB    ?_DisplayStr?BIT
8085FC 7B00              MOV     R3,#?C?XDATASEG
8085FE 7A2D              MOV     R2,#HIGH y_displaystr+014H
808600 79AE              MOV     R1,#LOW y_displaystr+014H
808602 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
808605 A5128007B6        ECALL   ?C?PSTXDATA
80860A 901732            MOV     DPTR,#ReDisplen
80860D E0                MOVX    A,@DPTR
80860E 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
808611 F0                MOVX    @DPTR,A
808612 7D01              MOV     R5,#01H
808614 E4                CLR     A
808615 FF                MOV     R7,A
808616 A512808062        ECALL   _DisplayStr
 1073: 						ReDisplen = 0;
80861B E4                CLR     A
80861C 901732            MOV     DPTR,#ReDisplen
80861F F0                MOVX    @DPTR,A
 1074: 						DisplayCursorState( 0, Cursor - 1, 1, 2, 1 );//第一行整光标
808620 901731            MOV     DPTR,#Cursor
808623 E0                MOVX    A,@DPTR
808624 14                DEC     A
808625 FD                MOV     R5,A
808626 D21A              SETB    ?_DisplayCursorState?BIT
808628 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80862B 7402              MOV     A,#02H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 295


80862D F0                MOVX    @DPTR,A
80862E D21B              SETB    ?_DisplayCursorState?BIT+01H
808630 E4                CLR     A
808631 FF                MOV     R7,A
808632 A51280817F        ECALL   _DisplayCursorState
 1075: 						if( Cursor == 1 )
808637 901731            MOV     DPTR,#Cursor
80863A E0                MOVX    A,@DPTR
80863B 90172F            MOV     DPTR,#ChangeLineflag
80863E B40104            CJNE    A,#01H,?C0366?SYSPARAMSET
 1076: 						{
 1077: 							//光标目前在第一行，则下移光标不改变菜单选项
 1078: 							ChangeLineflag |= 0x02;
808641 E0                MOVX    A,@DPTR
808642         
 1079: 						}
808642 028721            LJMP    ?C0476?SYSPARAMSET
808645         ?C0366?SYSPARAMSET:
 1080: 						else
 1081: 						{
 1082: 							//光标目前在第二行，则上移光标不改变菜单选项
 1083: 							ChangeLineflag |= 0x01;
 1084: 						}
 1085: 					}
808645 028726            LJMP    ?C0477?SYSPARAMSET
808648         ?C0365?SYSPARAMSET:
 1086: 					else
 1087: 					{
 1088: 						if(	MenuNum == MoveRange )
808648 90172E            MOV     DPTR,#MoveRange
80864B E0                MOVX    A,@DPTR
80864C FF                MOV     R7,A
80864D 901730            MOV     DPTR,#MenuNum
808650 E0                MOVX    A,@DPTR
808651 B50706            CJNE    A,AR7,?C0369?SYSPARAMSET
 1089: 							ReDisplen = DisplayMenuAndVal( 1, 0 , 1 );
808654 D219              SETB    ?_DisplayMenuAndVal?BIT
808656 E4                CLR     A
808657 FD                MOV     R5,A
808658 8008              SJMP    ?C0474?SYSPARAMSET
80865A         ?C0369?SYSPARAMSET:
 1090: 						else
 1091: 							ReDisplen = DisplayMenuAndVal( 1, MenuNum + 1 , 1 );
80865A 901730            MOV     DPTR,#MenuNum
80865D E0                MOVX    A,@DPTR
80865E 04                INC     A
80865F FD                MOV     R5,A
808660 D219              SETB    ?_DisplayMenuAndVal?BIT
808662         
808662 7F01              MOV     R7,#01H
808664 A512805C2D        ECALL   _DisplayMenuAndVal
808669 901732            MOV     DPTR,#ReDisplen
80866C EF                MOV     A,R7
80866D F0                MOVX    @DPTR,A
80866E         ?C0370?SYSPARAMSET:
 1092: 						DisplayCursorState( 0, Cursor - 1, 1, 2, 1 );//第一行整光标
80866E 901731            MOV     DPTR,#Cursor
808671 E0                MOVX    A,@DPTR
808672 14                DEC     A
808673 FD                MOV     R5,A
808674 D21A              SETB    ?_DisplayCursorState?BIT
808676 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808679 7402              MOV     A,#02H
80867B F0                MOVX    @DPTR,A
80867C D21B              SETB    ?_DisplayCursorState?BIT+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 296


80867E E4                CLR     A
80867F FF                MOV     R7,A
808680 A51280817F        ECALL   _DisplayCursorState
 1093: 						ChangeLineflag = 0;
808685 E4                CLR     A
808686 90172F            MOV     DPTR,#ChangeLineflag
808689 F0                MOVX    @DPTR,A
 1094: 					 //  Cursor = 1;
 1095: 					}	
 1096: 	//				Trace("\n Cursor4 = %bu ", Cursor );				
 1097: 	//				Trace("\n MenuNum4 = %bu ", MenuNum );										
 1098: 				}
 1099: 				break;
80868A 02877D            LJMP    ?C0354?SYSPARAMSET
 1100: 			case KEY_DOWN://下移	
80868D         ?C0371?SYSPARAMSET:
 1101: 	//			Trace("\n Cursor5 = %bu ", Cursor );				
 1102: 	//			Trace("\n MenuNum5 = %bu ", MenuNum );					
 1103: 				if( Cursor == 1 )//选中标记下移
80868D 901731            MOV     DPTR,#Cursor
808690 E0                MOVX    A,@DPTR
808691 6401              XRL     A,#01H
808693 7031              JNZ     ?C0372?SYSPARAMSET
 1104: 				{
 1105: 					DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
808695 A512808171        ECALL   ?L?COM000F
 1106: 					if( ( ChangeLineflag & 0x02 ) == 0x02 )					
80869A 90172F            MOV     DPTR,#ChangeLineflag
80869D E0                MOVX    A,@DPTR
80869E FF                MOV     R7,A
80869F 30E105            JNB     ACC.1,?C0373?SYSPARAMSET
 1107: 						ChangeLineflag |= 0x01;
8086A2 4401              ORL     A,#01H
8086A4 F0                MOVX    @DPTR,A
8086A5 8016              SJMP    ?C0374?SYSPARAMSET
8086A7         ?C0373?SYSPARAMSET:
 1108: 					else
 1109: 					{
 1110: 						if( MenuNum == MoveRange )
8086A7 90172E            MOV     DPTR,#MoveRange
8086AA E0                MOVX    A,@DPTR
8086AB FF                MOV     R7,A
8086AC 901730            MOV     DPTR,#MenuNum
8086AF E0                MOVX    A,@DPTR
8086B0 B50704            CJNE    A,AR7,?C0375?SYSPARAMSET
 1111: 							MenuNum = 0;					
8086B3 E4                CLR     A
8086B4 F0                MOVX    @DPTR,A
8086B5 8006              SJMP    ?C0374?SYSPARAMSET
8086B7         ?C0375?SYSPARAMSET:
 1112: 						else									    						
 1113: 							MenuNum++;				     
8086B7 901730            MOV     DPTR,#MenuNum
8086BA E0                MOVX    A,@DPTR
8086BB 04                INC     A
8086BC F0                MOVX    @DPTR,A
 1114: 					}
8086BD         ?C0374?SYSPARAMSET:
 1115: 					Cursor = 2;	
8086BD 901731            MOV     DPTR,#Cursor
8086C0 7402              MOV     A,#02H
8086C2 F0                MOVX    @DPTR,A
 1116: 	//				Trace("\n Cursor7 = %bu ", Cursor );				
 1117: 	//				Trace("\n MenuNum7 = %bu ", MenuNum );					
 1118: 				}
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 297


8086C3 02877D            LJMP    ?C0354?SYSPARAMSET
8086C6         ?C0372?SYSPARAMSET:
 1119: 				else//菜单下翻
 1120: 				{	
 1121: 					if( ChangeLineflag != 0x00 )
8086C6 90172F            MOV     DPTR,#ChangeLineflag
8086C9 E0                MOVX    A,@DPTR
8086CA 6018              JZ      ?C0378?SYSPARAMSET
 1122: 					{
 1123: 						ChangeLineflag = 0;
8086CC E4                CLR     A
8086CD F0                MOVX    @DPTR,A
 1124: 						if( MenuNum == MoveRange )
8086CE 90172E            MOV     DPTR,#MoveRange
8086D1 E0                MOVX    A,@DPTR
8086D2 FF                MOV     R7,A
8086D3 901730            MOV     DPTR,#MenuNum
8086D6 E0                MOVX    A,@DPTR
8086D7 B50704            CJNE    A,AR7,?C0379?SYSPARAMSET
 1125: 							MenuNum = 0;					
8086DA E4                CLR     A
8086DB F0                MOVX    @DPTR,A
8086DC 8006              SJMP    ?C0378?SYSPARAMSET
8086DE         ?C0379?SYSPARAMSET:
 1126: 						else			
 1127: 							MenuNum++;	
8086DE 901730            MOV     DPTR,#MenuNum
8086E1 E0                MOVX    A,@DPTR
8086E2 04                INC     A
8086E3 F0                MOVX    @DPTR,A
 1128: 			//		   DisplayCursorState( 0, 0, 1, 2, 1 );//第二行整光标
 1129: 			//		   Cursor = 1;
 1130: 					}
8086E4         ?C0378?SYSPARAMSET:
 1131: 	//				Trace("\n Cursor8 = %bu ", Cursor );				
 1132: 	//				Trace("\n MenuNum8 = %bu ", MenuNum );	
 1133: 					ReDisplen = DisplayMenuAndVal( 0, MenuNum, 1 );															
8086E4 A512805C24        ECALL   ?L?COM0021
8086E9 901732            MOV     DPTR,#ReDisplen
8086EC EF                MOV     A,R7
8086ED F0                MOVX    @DPTR,A
 1134: 					if( ReDisplen != 0 )
8086EE 603C              JZ      ?C0381?SYSPARAMSET
 1135: 					{
 1136: 						DisplayStr( 0, 1, 1,  y_displaystr + 20, ReDisplen );//显示菜单						
8086F0 D21A              SETB    ?_DisplayStr?BIT
8086F2 7B00              MOV     R3,#?C?XDATASEG
8086F4 7A2D              MOV     R2,#HIGH y_displaystr+014H
8086F6 79AE              MOV     R1,#LOW y_displaystr+014H
8086F8 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8086FB A5128007B6        ECALL   ?C?PSTXDATA
808700 901732            MOV     DPTR,#ReDisplen
808703 E0                MOVX    A,@DPTR
808704 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
808707 F0                MOVX    @DPTR,A
808708 7D01              MOV     R5,#01H
80870A E4                CLR     A
80870B FF                MOV     R7,A
80870C A512808062        ECALL   _DisplayStr
 1137: 						ReDisplen = 0;
808711 E4                CLR     A
808712 901732            MOV     DPTR,#ReDisplen
808715 F0                MOVX    @DPTR,A
 1138: 						if( Cursor == 1 )
808716 901731            MOV     DPTR,#Cursor
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 298


808719 E0                MOVX    A,@DPTR
80871A 90172F            MOV     DPTR,#ChangeLineflag
80871D B40106            CJNE    A,#01H,?C0382?SYSPARAMSET
 1139: 						{
 1140: 							//光标目前在第一行，则下移光标不改变菜单选项
 1141: 							ChangeLineflag |= 0x02;
808720 E0                MOVX    A,@DPTR
808721         
808721 4402              ORL     A,#02H
808723 F0                MOVX    @DPTR,A
 1142: 						}
808724 8057              SJMP    ?C0354?SYSPARAMSET
808726         ?C0382?SYSPARAMSET:
 1143: 						else
 1144: 						{
 1145: 							//光标目前在第二行，则上移光标不改变菜单选项
 1146: 							ChangeLineflag |= 0x01;
808726         
808726 E0                MOVX    A,@DPTR
808727 4401              ORL     A,#01H
808729 F0                MOVX    @DPTR,A
 1147: 						}
 1148: 					}
80872A 8051              SJMP    ?C0354?SYSPARAMSET
80872C         ?C0381?SYSPARAMSET:
 1149: 					else
 1150: 					{						
 1151: 						if( MenuNum == MoveRange )
80872C 90172E            MOV     DPTR,#MoveRange
80872F E0                MOVX    A,@DPTR
808730 FF                MOV     R7,A
808731 901730            MOV     DPTR,#MenuNum
808734 E0                MOVX    A,@DPTR
808735 B50704            CJNE    A,AR7,?C0385?SYSPARAMSET
 1152: 							MenuNum = 0;					
808738 E4                CLR     A
808739 F0                MOVX    @DPTR,A
80873A 8006              SJMP    ?C0386?SYSPARAMSET
80873C         ?C0385?SYSPARAMSET:
 1153: 						else									    
 1154: 							MenuNum++;	
80873C 901730            MOV     DPTR,#MenuNum
80873F E0                MOVX    A,@DPTR
808740 04                INC     A
808741 F0                MOVX    @DPTR,A
808742         ?C0386?SYSPARAMSET:
 1155: 						ReDisplen = DisplayMenuAndVal( 1, MenuNum , 1 );																					
808742 901730            MOV     DPTR,#MenuNum
808745 E0                MOVX    A,@DPTR
808746 FD                MOV     R5,A
808747 D219              SETB    ?_DisplayMenuAndVal?BIT
808749 7F01              MOV     R7,#01H
80874B A512805C2D        ECALL   _DisplayMenuAndVal
808750 901732            MOV     DPTR,#ReDisplen
808753 EF                MOV     A,R7
808754 F0                MOVX    @DPTR,A
 1156: 					//	Cursor = 2;
 1157: 					}
 1158: 	//				Trace("\n Cursor9 = %bu ", Cursor );				
 1159: 	//				Trace("\n MenuNum9 = %bu ", MenuNum );
 1160: 				}
 1161: 				break;
808755 8026              SJMP    ?C0354?SYSPARAMSET
 1162: 			case KEY_SUBMIT://Enter,选中了某项菜单
808757         ?C0387?SYSPARAMSET:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 299


 1163: 				{			
 1164: 					*SelectedNum = MenuNum;
808757 901730            MOV     DPTR,#MenuNum
80875A E0                MOVX    A,@DPTR
80875B FF                MOV     R7,A
80875C 90172A            MOV     DPTR,#SelectedNum
80875F E0                MOVX    A,@DPTR
808760 FC                MOV     R4,A
808761 A3                INC     DPTR
808762 E0                MOVX    A,@DPTR
808763 F582              MOV     DPL,A
808765 8C83              MOV     DPH,R4
808767 EF                MOV     A,R7
808768 F0                MOVX    @DPTR,A
 1165: 				//	if( ChangeLineflag != 0 )
 1166: 				//	{
 1167: 				//		*CursorLine = 1;
 1168: 				//		DisplayStr( 0, 1, 1,  " ", 20 );//显示菜单
 1169: 				//	}
 1170: 				//	else
 1171: 					*CursorLine = Cursor;					
808769 901731            MOV     DPTR,#Cursor
80876C E0                MOVX    A,@DPTR
80876D FF                MOV     R7,A
80876E 90172C            MOV     DPTR,#CursorLine
808771 E0                MOVX    A,@DPTR
808772 FC                MOV     R4,A
808773 A3                INC     DPTR
808774 E0                MOVX    A,@DPTR
808775 F582              MOV     DPL,A
808777 8C83              MOV     DPH,R4
808779 EF                MOV     A,R7
80877A F0                MOVX    @DPTR,A
 1172: 					flag = 0;	
80877B C218              CLR     flag
 1173: 				}
 1174: 				break;			
 1175: 		}
80877D         ?C0354?SYSPARAMSET:
 1176: 		CoreProcessCycle();//让出时间片
80877D A512807ADC        ECALL   CoreProcessCycle
 1177: 		DelayMs( 5 );
808782 7F05              MOV     R7,#05H
808784 A512809789        ECALL   _DelayMs
 1178: 	}
808789 028557            LJMP    ?C0352?SYSPARAMSET
80878C         ?C0353?SYSPARAMSET:
 1179: 	ClearKey();		
80878C A5028087A8        EJMP    ClearKey
----- FUNCTION _SP_MenuSelected (END) -------


----- FUNCTION ?L?COM0010 (BEGIN) -----
808791 901727            MOV     DPTR,#LineNum
808794         ?L?COM0011:
808794 E0                MOVX    A,@DPTR
808795 14                DEC     A
808796 FD                MOV     R5,A
808797 D21A              SETB    ?_DisplayCursorState?BIT
808799 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80879C 7402              MOV     A,#02H
80879E F0                MOVX    @DPTR,A
80879F D21B              SETB    ?_DisplayCursorState?BIT+01H
8087A1 E4                CLR     A
8087A2         ?L?COM0012:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 300


8087A2 FF                MOV     R7,A
8087A3         ?L?COM0013:
8087A3 A51280817F        ECALL   _DisplayCursorState
----- FUNCTION ClearKey (BEGIN) -----
 FILE: 'CommonFunction.c'
  118: void ClearKey()
  119: {
  120: 	KeyLock();
  121: 	KeyUnLock();
8087A8 A5128087F1        ECALL   KeyLock
  122: }
8087AD A5028077AE        EJMP    KeyUnLock
----- FUNCTION ClearKey (END) -------


----- FUNCTION ?L?COM0014 (BEGIN) -----
8087B2 7F01              MOV     R7,#01H
8087B4 A5128087BB        ECALL   _ClearDisplayLine
8087B9 7F02              MOV     R7,#02H
----- FUNCTION _ClearDisplayLine (BEGIN) -----
 FILE: 'CommonFunction.c'
  354: void ClearDisplayLine( u_char Line )
  355: {
;---- Variable 'Line' assigned to Register 'R7' ----
  356: 	if( ( Line > 0 ) && ( Line < 3 ) )
  357: 	{
8087BB EF                MOV     A,R7
8087BC D3                SETB    C
8087BD 9400              SUBB    A,#00H
8087BF 402E              JC      ?C0088?COMMONFUNCTION
8087C1 EF                MOV     A,R7
8087C2 9403              SUBB    A,#03H
8087C4 5029              JNC     ?C0088?COMMONFUNCTION
  358: 		DisplayStr( 0, Line - 1 , 1 , "                    " , 20 );
  359: 		WaitForWork( 20, NULL );	
8087C6 EF                MOV     A,R7
8087C7 14                DEC     A
8087C8 FD                MOV     R5,A
8087C9 D21A              SETB    ?_DisplayStr?BIT
8087CB 7B80              MOV     R3,#BYTE2 0801767H
8087CD 7A17              MOV     R2,#HIGH 0801767H
8087CF 7967              MOV     R1,#LOW 0801767H
8087D1 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8087D4 A5128007B6        ECALL   ?C?PSTXDATA
8087D9 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8087DC 7414              MOV     A,#014H
8087DE F0                MOVX    @DPTR,A
8087DF E4                CLR     A
8087E0 FF                MOV     R7,A
8087E1 A512808062        ECALL   _DisplayStr
  360: 	}
8087E6 E4                CLR     A
8087E7 7F14              MOV     R7,#014H
8087E9 FE                MOV     R6,A
8087EA A512807B35        ECALL   ?L?COM000D
  361: }
  362: 
8087EF         ?C0088?COMMONFUNCTION:
8087EF A522              ERET    
----- FUNCTION _ClearDisplayLine (END) -------


----- FUNCTION KeyLock (BEGIN) -----
 FILE: 'key.c'
   44: bit KeyLock( void )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 301


   45: {
   46: 	ZhkKeyPermission = 0;
   47: 	return 1;
8087F1 E4                CLR     A
8087F2 902DEB            MOV     DPTR,#ZhkKeyPermission
8087F5 F0                MOVX    @DPTR,A
   48: }
8087F6 D3                SETB    C
   49: bit KeyUnLock( void )
8087F7         ?C0002?KEY:
8087F7 A522              ERET    
----- FUNCTION KeyLock (END) -------


----- FUNCTION RejectBill (BEGIN) -----
 FILE: 'mainflow.c'
  255: u_char RejectBill()
  256: {	
  257: 	u_char xdata i = 0;
  258: 	u_char xdata j = 0;
8087F9 E4                CLR     A
8087FA 9015B1            MOV     DPTR,#i
8087FD F0                MOVX    @DPTR,A
  259: 
8087FE A3                INC     DPTR
8087FF F0                MOVX    @DPTR,A
  260: 	i = CasherReject();
808800 A512808883        ECALL   CasherReject
808805 E4                CLR     A
808806 33                RLC     A
808807 9015B1            MOV     DPTR,#i
80880A F0                MOVX    @DPTR,A
80880B         ?C0050?MAINFLOW:
  261: 
  262: 	while( j < 3 )
80880B 9015B2            MOV     DPTR,#j
80880E E0                MOVX    A,@DPTR
80880F C3                CLR     C
808810 9403              SUBB    A,#03H
808812 5020              JNC     ?C0051?MAINFLOW
  263: 	{
  264: 		if( i == 0 )
808814 9015B1            MOV     DPTR,#i
808817 E0                MOVX    A,@DPTR
808818 701A              JNZ     ?C0051?MAINFLOW
  265: 		{
  266: 			WaitForWork( 500, NULL );
80881A 7FF4              MOV     R7,#0F4H
80881C 7E01              MOV     R6,#01H
80881E A512807B35        ECALL   ?L?COM000D
  267: 			i = CasherReject();
808823 A512808883        ECALL   CasherReject
808828 E4                CLR     A
808829 33                RLC     A
80882A 9015B1            MOV     DPTR,#i
80882D F0                MOVX    @DPTR,A
  268: 			j++;
80882E A3                INC     DPTR
80882F E0                MOVX    A,@DPTR
808830 04                INC     A
808831 F0                MOVX    @DPTR,A
  269: 		}
808832 80D7              SJMP    ?C0050?MAINFLOW
  270: 		else
  271: 			break;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 302


  272: 	}
808834         ?C0051?MAINFLOW:
  273: 	if( ( j >= 3 ) && ( i == 0 ) )
808834 9015B2            MOV     DPTR,#j
808837 E0                MOVX    A,@DPTR
808838 C3                CLR     C
808839 9403              SUBB    A,#03H
80883B 400A              JC      ?C0056?MAINFLOW
80883D 9015B1            MOV     DPTR,#i
808840 E0                MOVX    A,@DPTR
808841 7004              JNZ     ?C0056?MAINFLOW
  274: 		return 1;
808843 7F01              MOV     R7,#01H
808845 803A              SJMP    ?C0055?MAINFLOW
808847         ?C0056?MAINFLOW:
  275: 	while( ! ( i || j ) )
808847 9015B1            MOV     DPTR,#i
80884A E0                MOVX    A,@DPTR
80884B 702A              JNZ     ?C0057?MAINFLOW
80884D A3                INC     DPTR
80884E E0                MOVX    A,@DPTR
80884F 7026              JNZ     ?C0057?MAINFLOW
  276: 	{
  277: 		WaitForWork( 100, NULL );
808851 7F64              MOV     R7,#064H
808853 FE                MOV     R6,A
808854 A512807B35        ECALL   ?L?COM000D
  278: 		i = TestDeviceTimeOut( &Casher );
808859 7E23              MOV     R6,#HIGH Casher
80885B 7FCB              MOV     R7,#LOW Casher
80885D A512808000        ECALL   _TestDeviceTimeOut
808862 9015B1            MOV     DPTR,#i
808865 EF                MOV     A,R7
808866 F0                MOVX    @DPTR,A
  279: 		j = TestDeviceCommOK( &Casher );		
808867 7E23              MOV     R6,#HIGH Casher
808869 7FCB              MOV     R7,#LOW Casher
80886B A512807FDE        ECALL   _TestDeviceCommOK
808870 9015B2            MOV     DPTR,#j
808873 EF                MOV     A,R7
808874 F0                MOVX    @DPTR,A
  280: 	}
808875 80D0              SJMP    ?C0056?MAINFLOW
808877         ?C0057?MAINFLOW:
  281: 	if( i ) 
808877 9015B1            MOV     DPTR,#i
80887A E0                MOVX    A,@DPTR
80887B 7F00              MOV     R7,#00H
80887D 6002              JZ      ?C0058?MAINFLOW
  282: 		return 1;//超时，故障	
80887F 7F01              MOV     R7,#01H
808881         ?C0058?MAINFLOW:
  283: 	return 0;//正常	
  284: }
808881         ?C0055?MAINFLOW:
808881 A522              ERET    
----- FUNCTION RejectBill (END) -------


----- FUNCTION CasherReject (BEGIN) -----
 FILE: 'scheduler.c'
 1332: bit CasherReject( void )
 1333: {
 1334: 	struct COMMTASK xdata TaskTemp;
 1335: 	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 303


 1336: 	Trace("\n CasherReject");
 1337: 	ZhkCasherStatus = CASHER_STATUS_REJECT;
808883 90235F            MOV     DPTR,#ZhkCasherStatus
808886 7404              MOV     A,#04H
808888 F0                MOVX    @DPTR,A
 1338: 	TaskTemp.Id 		= ID_CASHER;
808889 9015B4            MOV     DPTR,#TaskTemp+01H
80888C 740D              MOV     A,#0DH
80888E F0                MOVX    @DPTR,A
 1339: 	TaskTemp.Cmd 		= CASHER_REJECT;
80888F A3                INC     DPTR
808890 7453              MOV     A,#053H
808892 F0                MOVX    @DPTR,A
 1340: 	TaskTemp.Sn		= Casher.Sn;
808893 9023CC            MOV     DPTR,#Casher+01H
808896 E0                MOVX    A,@DPTR
808897 9015B6            MOV     DPTR,#TaskTemp+03H
80889A F0                MOVX    @DPTR,A
 1341: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
80889B 9015B3            MOV     DPTR,#TaskTemp
80889E 7442              MOV     A,#042H
8088A0 F0                MOVX    @DPTR,A
 1342: 	TaskTemp.ParamLen	= 0;
8088A1 E4                CLR     A
8088A2 9015B8            MOV     DPTR,#TaskTemp+05H
8088A5 F0                MOVX    @DPTR,A
 1343: 	return ZhkSchedulerAddTask( &TaskTemp );
8088A6 7E15              MOV     R6,#HIGH TaskTemp
8088A8 7FB3              MOV     R7,#LOW TaskTemp
8088AA A5128088CE        ECALL   _ZhkSchedulerAddTask
8088AF EF                MOV     A,R7
8088B0 24FF              ADD     A,#0FFH
 1344: }
8088B2         ?C0245?SCHEDULER:
8088B2 A522              ERET    
----- FUNCTION CasherReject (END) -------


----- FUNCTION ?L?COM0015 (BEGIN) -----
8088B4 E0                MOVX    A,@DPTR
8088B5 901747            MOV     DPTR,#TaskTemp+03H
8088B8 F0                MOVX    @DPTR,A
8088B9 901744            MOV     DPTR,#TaskTemp
8088BC 7442              MOV     A,#042H
8088BE F0                MOVX    @DPTR,A
8088BF 901749            MOV     DPTR,#TaskTemp+05H
8088C2 7402              MOV     A,#02H
8088C4 F0                MOVX    @DPTR,A
8088C5 E4                CLR     A
8088C6 A3                INC     DPTR
8088C7 F0                MOVX    @DPTR,A
8088C8 A3                INC     DPTR
8088C9 F0                MOVX    @DPTR,A
8088CA 7E17              MOV     R6,#HIGH TaskTemp
8088CC 7F44              MOV     R7,#LOW TaskTemp
----- FUNCTION _ZhkSchedulerAddTask (BEGIN) -----
 FILE: 'scheduler.c'
  306: uchar ZhkSchedulerAddTask( struct COMMTASK xdata* NewTask )
  307: {
8088CE 90186F            MOV     DPTR,#NewTask
8088D1 EE                MOV     A,R6
8088D2 F0                MOVX    @DPTR,A
8088D3 A3                INC     DPTR
8088D4 EF                MOV     A,R7
8088D5 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 304


  308: 	uchar data i;
  309: //	Trace( "AddTask:Id=%bx,Cmd=%bx\n" , NewTask->Id,NewTask->Cmd );
  310: 	
  311: 	if( NewTask->Id == ID_CASHER )
8088D6 F582              MOV     DPL,A
8088D8 8E83              MOV     DPH,R6
8088DA A3                INC     DPTR
8088DB E0                MOVX    A,@DPTR
8088DC 640D              XRL     A,#0DH
8088DE 702A              JNZ     ?C0035?SCHEDULER
  312: 	{
  313: 		if( Casher.CommState == COMM_TIMEOUT )
8088E0 9023CD            MOV     DPTR,#Casher+02H
8088E3 E0                MOVX    A,@DPTR
8088E4 6402              XRL     A,#02H
8088E6 7022              JNZ     ?C0035?SCHEDULER
  314: 		{
  315: 			if( QueryCashTimer != 0 )
8088E8 E515              MOV     A,QueryCashTimer
8088EA 6002              JZ      ?C0037?SCHEDULER
  316: 			{
  317: //				Trace( "\n ZhkSchedulerAddTask ->Do not Add Query Commmand1" );
  318: 				ZhkCasherStatus = CASHER_STATUS_NULL;
  319: 				Casher.ExtState[13] = 1;
  320: 				return 1;
8088EC 800F              SJMP    ?C0327?SCHEDULER
  321: 			}
8088EE         ?C0037?SCHEDULER:
  322: 			else
  323: 			{
  324: 				if( ( Casher.ExtState[ 15 ] == 1 ) && ( Casher.ExtState[ 14 ] != 1 ) )
8088EE 9023DE            MOV     DPTR,#Casher+013H
8088F1 E0                MOVX    A,@DPTR
8088F2 B40115            CJNE    A,#01H,?C0035?SCHEDULER
8088F5 9023DD            MOV     DPTR,#Casher+012H
8088F8 E0                MOVX    A,@DPTR
8088F9 6401              XRL     A,#01H
8088FB 600D              JZ      ?C0035?SCHEDULER
  325: 				{
  326: 	//				Trace( "\n ZhkSchedulerAddTask ->Do not Add Query Commmand2" );
  327: 					ZhkCasherStatus = CASHER_STATUS_NULL;
8088FD         
8088FD E4                CLR     A
8088FE 90235F            MOV     DPTR,#ZhkCasherStatus
808901 F0                MOVX    @DPTR,A
  328: 					Casher.ExtState[13] = 1;
808902 9023DC            MOV     DPTR,#Casher+011H
808905 04                INC     A
808906 F0                MOVX    @DPTR,A
  329: 					return 1;
808907 FF                MOV     R7,A
808908 803D              SJMP    ?C0038?SCHEDULER
  330: 				}
  331: 			}	
  332: 		}	 			
  333: //		Trace( "\n ZhkSchedulerAddTask ->Add Query Commmand" );
  334: 	}
80890A         ?C0035?SCHEDULER:
  335: 
  336: 	for( i = 0 ; i < sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) ; i ++ )
80890A E4                CLR     A
80890B F52E              MOV     i,A
80890D         ?C0041?SCHEDULER:
  337: 	{
  338: 		if ( ZhkSchedulerIsTaskNull( i ) )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 305


80890D AF2E              MOV     R7,i
80890F A512808F4F        ECALL   _ZhkSchedulerIsTaskNull
808914 5026              JNC     ?C0043?SCHEDULER
  339: 		{
  340: 			MovSramToSram( ( uchar xdata* )NewTask , 
  341: 				( uchar xdata* )&ZhkReadyTaskList[ i ] , 
808916 75F026            MOV     B,#026H
808919 E52E              MOV     A,i
80891B 9023E0            MOV     DPTR,#ZhkReadyTaskList
80891E A51280079F        ECALL   ?C?OFFXADD
808923 AD82              MOV     R5,DPL
808925 AC83              MOV     R4,DPH
808927 90186F            MOV     DPTR,#NewTask
80892A E0                MOVX    A,@DPTR
80892B FE                MOV     R6,A
80892C A3                INC     DPTR
80892D E0                MOVX    A,@DPTR
80892E FF                MOV     R7,A
80892F 7B26              MOV     R3,#026H
808931 7A00              MOV     R2,#00H
808933 A51280C4B5        ECALL   _MovSramToSram
  342: 				sizeof( struct COMMTASK ) );
  343: 			return 1;
808938 7F01              MOV     R7,#01H
80893A 800B              SJMP    ?C0038?SCHEDULER
  344: 		}
  345: 	}
80893C         ?C0043?SCHEDULER:
80893C 052E              INC     i
80893E E52E              MOV     A,i
808940 C3                CLR     C
808941 9420              SUBB    A,#020H
808943 40C8              JC      ?C0041?SCHEDULER
808945         ?C0042?SCHEDULER:
  346: 	return 0;
808945 7F00              MOV     R7,#00H
  347: }
808947         ?C0038?SCHEDULER:
808947 A522              ERET    
----- FUNCTION _ZhkSchedulerAddTask (END) -------


----- FUNCTION ?L?COM0035 (BEGIN) -----
808949 901842            MOV     DPTR,#?_DisplayPosString?BYTE+05H
80894C 7401              MOV     A,#01H
80894E F0                MOVX    @DPTR,A
80894F FD                MOV     R5,A
----- FUNCTION _DisplayPosString (BEGIN) -----
 FILE: 'scheduler.c'
 1071: bit DisplayPosString( const uchar PosX , const uchar PosY , uchar * Str , const uchar len )
 1072: {
808950 90183D            MOV     DPTR,#PosX
808953 EF                MOV     A,R7
808954 F0                MOVX    @DPTR,A
808955 A3                INC     DPTR
808956 ED                MOV     A,R5
808957 F0                MOVX    @DPTR,A
808958 A3                INC     DPTR
808959 A5128007B6        ECALL   ?C?PSTXDATA
 1073: 	struct COMMTASK xdata TaskTemp;
 1074: 	
 1075: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );
80895E 7E00              MOV     R6,#00H
808960 7F26              MOV     R7,#026H
808962 7D00              MOV     R5,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 306


808964 7B00              MOV     R3,#?C?XDATASEG
808966 7A18              MOV     R2,#HIGH TaskTemp
808968 7943              MOV     R1,#LOW TaskTemp
80896A A5128008A6        ECALL   ?C?MEMSET
 1076: 	//Trace( "DisplayPosString( %bd , %bd , % bd )\n" , PosX , PosY , len );
 1077: 	TaskTemp.Id 		= ID_LCD;
80896F 901844            MOV     DPTR,#TaskTemp+01H
808972 7409              MOV     A,#09H
808974 F0                MOVX    @DPTR,A
 1078: 	TaskTemp.Cmd 		= DISPKEY_DISPS;
808975 A3                INC     DPTR
808976 7452              MOV     A,#052H
808978 F0                MOVX    @DPTR,A
 1079: 	TaskTemp.Sn		= Lcd.Sn;
808979 902361            MOV     DPTR,#Lcd+01H
80897C E0                MOVX    A,@DPTR
80897D 901846            MOV     DPTR,#TaskTemp+03H
808980 F0                MOVX    @DPTR,A
 1080: 	TaskTemp.Priority       = PRIORITY_NORMAL;
808981 901843            MOV     DPTR,#TaskTemp
808984 7442              MOV     A,#042H
808986 F0                MOVX    @DPTR,A
 1081: 	TaskTemp.ParamLen	= len + 2;
808987 901842            MOV     DPTR,#len
80898A E0                MOVX    A,@DPTR
80898B FE                MOV     R6,A
80898C 2402              ADD     A,#02H
80898E 901848            MOV     DPTR,#TaskTemp+05H
808991 F0                MOVX    @DPTR,A
 1082: 	TaskTemp.Param[ 0 ] 	= PosX;
808992 90183D            MOV     DPTR,#PosX
808995 E0                MOVX    A,@DPTR
808996 901849            MOV     DPTR,#TaskTemp+06H
808999 F0                MOVX    @DPTR,A
 1083: 	TaskTemp.Param[ 1 ] 	= PosY;
80899A 90183E            MOV     DPTR,#PosY
80899D E0                MOVX    A,@DPTR
80899E 90184A            MOV     DPTR,#TaskTemp+07H
8089A1 F0                MOVX    @DPTR,A
 1084: 	memcpy( TaskTemp.Param + 2 , Str , len );
8089A2 EE                MOV     A,R6
8089A3 FF                MOV     R7,A
8089A4 7E00              MOV     R6,#00H
8089A6 784B              MOV     R0,#LOW TaskTemp+08H
8089A8 7C18              MOV     R4,#HIGH TaskTemp+08H
8089AA 7D00              MOV     R5,#?C?XDATASEG
8089AC 90183F            MOV     DPTR,#Str
8089AF A5128007AC        ECALL   ?C?PLDXDATA
8089B4 A51280052D        ECALL   ?C?COPY
 1085: 
 1086: 	return ZhkSchedulerAddTask( &TaskTemp );
8089B9 7E18              MOV     R6,#HIGH TaskTemp
8089BB 7F43              MOV     R7,#LOW TaskTemp
8089BD A5128088CE        ECALL   _ZhkSchedulerAddTask
8089C2 EF                MOV     A,R7
8089C3 24FF              ADD     A,#0FFH
 1087: }
8089C5         ?C0204?SCHEDULER:
8089C5 A522              ERET    
----- FUNCTION _DisplayPosString (END) -------


----- FUNCTION _GetLineMoney (BEGIN) -----
 FILE: 'CommonFunction.c'
  278: u_char GetLineMoney( u_char  *strTip, unsigned char len, u_char y, u_char * line, unsigned char *len1 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 307


  279: {
8089C7 90174C            MOV     DPTR,#strTip
8089CA A5128007B6        ECALL   ?C?PSTXDATA
8089CF 90174F            MOV     DPTR,#len
8089D2 ED                MOV     A,R5
8089D3 F0                MOVX    @DPTR,A
  280:     u_char xdata key;
  281: 	u_char xdata iCounter = 0;
8089D4 E4                CLR     A
8089D5 901758            MOV     DPTR,#iCounter
8089D8 F0                MOVX    @DPTR,A
  282: 	u_char xdata len_loca;
  283: 	u_char xdata space_char = 0x20;
8089D9 90175A            MOV     DPTR,#space_char
8089DC 7420              MOV     A,#020H
8089DE F0                MOVX    @DPTR,A
  284: 	u_char xdata Tempstr[20];
  285: 
  286: 	memset( Tempstr, 0, sizeof( Tempstr ) );
8089DF 7E00              MOV     R6,#00H
8089E1 7F14              MOV     R7,#014H
8089E3 7D00              MOV     R5,#00H
8089E5 7B00              MOV     R3,#?C?XDATASEG
8089E7 7A17              MOV     R2,#HIGH Tempstr
8089E9 795B              MOV     R1,#LOW Tempstr
8089EB A5128008A6        ECALL   ?C?MEMSET
  287: 	iCounter = 0;
8089F0 E4                CLR     A
8089F1 901758            MOV     DPTR,#iCounter
8089F4 F0                MOVX    @DPTR,A
  288: 	ClearKey();
8089F5 A5128087A8        ECALL   ClearKey
  289: 	len_loca = *len1;		
8089FA 901754            MOV     DPTR,#len1
8089FD A5128007AC        ECALL   ?C?PLDXDATA
808A02 A548              EMOV    A,@PR0
808A04 FF                MOV     R7,A
808A05 901759            MOV     DPTR,#len_loca
808A08 F0                MOVX    @DPTR,A
  290: 	if( len + len_loca >= 20 )
808A09 90174F            MOV     DPTR,#len
808A0C E0                MOVX    A,@DPTR
808A0D 2F                ADD     A,R7
808A0E FF                MOV     R7,A
808A0F E4                CLR     A
808A10 33                RLC     A
808A11 FE                MOV     R6,A
808A12 C3                CLR     C
808A13 EF                MOV     A,R7
808A14 9414              SUBB    A,#014H
808A16 EE                MOV     A,R6
808A17 6480              XRL     A,#080H
808A19 9480              SUBB    A,#080H
808A1B 4048              JC      ?C0069?COMMONFUNCTION
  291: 	{	
  292: 		DisplayStr( 0, 0, 1, strTip, len );		
808A1D D21A              SETB    ?_DisplayStr?BIT
808A1F 90174C            MOV     DPTR,#strTip
808A22 A5128007AC        ECALL   ?C?PLDXDATA
808A27 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
808A2A A5128007B6        ECALL   ?C?PSTXDATA
808A2F 90174F            MOV     DPTR,#len
808A32 E0                MOVX    A,@DPTR
808A33 A51280805B        ECALL   ?L?COM0006
  293: 		DisplayStr( 0, 1, 1, " ", 1 );	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 308


808A38 D21A              SETB    ?_DisplayStr?BIT
808A3A 7B80              MOV     R3,#BYTE2 0801765H
808A3C 7A17              MOV     R2,#HIGH 0801765H
808A3E 7965              MOV     R1,#LOW 0801765H
808A40 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
808A43 A5128007B6        ECALL   ?C?PSTXDATA
808A48 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
808A4B 7401              MOV     A,#01H
808A4D F0                MOVX    @DPTR,A
808A4E FD                MOV     R5,A
808A4F E4                CLR     A
808A50 FF                MOV     R7,A
808A51 A512808062        ECALL   _DisplayStr
  294: 		DisplayCursorState( 0, 1, 1, 1, 1 );	
808A56 D21A              SETB    ?_DisplayCursorState?BIT
808A58 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808A5B 7401              MOV     A,#01H
808A5D F0                MOVX    @DPTR,A
808A5E D21B              SETB    ?_DisplayCursorState?BIT+01H
808A60 FD                MOV     R5,A
808A61 E4                CLR     A
808A62 FF                MOV     R7,A
  295: 	}
808A63 8038              SJMP    ?C0218?COMMONFUNCTION
808A65         ?C0069?COMMONFUNCTION:
  296: 	else
  297: 	{
  298: 		DisplayStr( 0, y, 1, strTip, len );
808A65 901750            MOV     DPTR,#y
808A68 E0                MOVX    A,@DPTR
808A69 FD                MOV     R5,A
808A6A D21A              SETB    ?_DisplayStr?BIT
808A6C 90174C            MOV     DPTR,#strTip
808A6F A5128007AC        ECALL   ?C?PLDXDATA
808A74 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
808A77 A5128007B6        ECALL   ?C?PSTXDATA
808A7C 90174F            MOV     DPTR,#len
808A7F E0                MOVX    A,@DPTR
808A80 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
808A83 F0                MOVX    @DPTR,A
808A84 E4                CLR     A
808A85 FF                MOV     R7,A
808A86 A512808062        ECALL   _DisplayStr
  299: 		DisplayCursorState( len, y, 1, 1, 1 );		
808A8B 90174F            MOV     DPTR,#len
808A8E E0                MOVX    A,@DPTR
808A8F FF                MOV     R7,A
808A90 A3                INC     DPTR
808A91 E0                MOVX    A,@DPTR
808A92 FD                MOV     R5,A
808A93 D21A              SETB    ?_DisplayCursorState?BIT
808A95 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808A98 7401              MOV     A,#01H
808A9A F0                MOVX    @DPTR,A
808A9B D21B              SETB    ?_DisplayCursorState?BIT+01H
808A9D         
808A9D A51280817F        ECALL   _DisplayCursorState
  300: 	}
808AA2         ?C0071?COMMONFUNCTION:
  301: 	while( 1 )
  302: 	{
  303: 		WaitForWork( 50, NULL );			
808AA2 E4                CLR     A
808AA3 7F32              MOV     R7,#032H
808AA5 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 309


808AA6 A512807B35        ECALL   ?L?COM000D
  304: 		key = KEY_NULL;
808AAB 901757            MOV     DPTR,#key
808AAE 74FF              MOV     A,#0FFH
808AB0 F0                MOVX    @DPTR,A
  305: 		ClearKey();
808AB1 A5128087A8        ECALL   ClearKey
  306: 		if(iCounter >= len_loca)	
808AB6 901759            MOV     DPTR,#len_loca
808AB9 E0                MOVX    A,@DPTR
808ABA FF                MOV     R7,A
808ABB 901758            MOV     DPTR,#iCounter
808ABE E0                MOVX    A,@DPTR
808ABF C3                CLR     C
808AC0 9F                SUBB    A,R7
808AC1 4010              JC      ?C0073?COMMONFUNCTION
  307: 		{
  308: 			*len1 = len_loca;		
808AC3 901754            MOV     DPTR,#len1
808AC6 A5128007AC        ECALL   ?C?PLDXDATA
808ACB EF                MOV     A,R7
808ACC A558              EMOV    @PR0,A
  309: 			memcpy( line, Tempstr, len_loca );
808ACE 901759            MOV     DPTR,#len_loca
  310: 			return 1;
808AD1 8035              SJMP    ?C0219?COMMONFUNCTION
  311: 		}
808AD3         ?C0073?COMMONFUNCTION:
  312: 		key = GetOneMoneyKey();			
808AD3 A512809621        ECALL   GetOneMoneyKey
808AD8 901757            MOV     DPTR,#key
808ADB EF                MOV     A,R7
808ADC F0                MOVX    @DPTR,A
  313: 		if ( (key == KEY_UP) || (key == KEY_DOWN) || (key == KEY_DOT) || (key == KEY_NULL) )
808ADD 6448              XRL     A,#048H
808ADF 60C1              JZ      ?C0071?COMMONFUNCTION
808AE1 E0                MOVX    A,@DPTR
808AE2 FF                MOV     R7,A
808AE3 6450              XRL     A,#050H
808AE5 60BB              JZ      ?C0071?COMMONFUNCTION
808AE7 EF                MOV     A,R7
808AE8 642E              XRL     A,#02EH
808AEA 60B6              JZ      ?C0071?COMMONFUNCTION
808AEC EF                MOV     A,R7
808AED F4                CPL     A
808AEE 60B2              JZ      ?C0071?COMMONFUNCTION
  314: 		    continue;
808AF0         ?C0075?COMMONFUNCTION:
  315: 		else if( key == KEY_SUBMIT) 
808AF0 EF                MOV     A,R7
808AF1 640D              XRL     A,#0DH
808AF3 7035              JNZ     ?C0078?COMMONFUNCTION
  316: 		{				
  317: 			*len1 = iCounter;			
808AF5 901758            MOV     DPTR,#iCounter
808AF8 E0                MOVX    A,@DPTR
808AF9 FF                MOV     R7,A
808AFA 901754            MOV     DPTR,#len1
808AFD A5128007AC        ECALL   ?C?PLDXDATA
808B02 EF                MOV     A,R7
808B03 A558              EMOV    @PR0,A
  318: 			memcpy( line, Tempstr, iCounter );
808B05 901758            MOV     DPTR,#iCounter
808B08         
808B08 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 310


808B09 FF                MOV     R7,A
808B0A 7E00              MOV     R6,#00H
808B0C 901751            MOV     DPTR,#line
808B0F A5128007AC        ECALL   ?C?PLDXDATA
808B14 A801              MOV     R0,AR1
808B16 AC02              MOV     R4,AR2
808B18 AD03              MOV     R5,AR3
808B1A 7B00              MOV     R3,#?C?XDATASEG
808B1C 7A17              MOV     R2,#HIGH Tempstr
808B1E 795B              MOV     R1,#LOW Tempstr
808B20 A51280052D        ECALL   ?C?COPY
  319: 			return 1;
808B25 7F01              MOV     R7,#01H
808B27 028C2A            LJMP    ?C0074?COMMONFUNCTION
  320: 		}			
808B2A         ?C0078?COMMONFUNCTION:
  321: 		else if(key == KEY_CANCEL)
808B2A 901757            MOV     DPTR,#key
808B2D E0                MOVX    A,@DPTR
808B2E FE                MOV     R6,A
808B2F B41B05            CJNE    A,#01BH,?C0080?COMMONFUNCTION
  322: 			return 0;
808B32 7F00              MOV     R7,#00H
808B34 028C2A            LJMP    ?C0074?COMMONFUNCTION
808B37         ?C0080?COMMONFUNCTION:
  323: 		else if( key == KEY_BACK)//clear键,光标后退一格
808B37 EE                MOV     A,R6
808B38 6418              XRL     A,#018H
808B3A 6003              JZ      $ + 5H
808B3C 028C0F            LJMP    ?C0082?COMMONFUNCTION
  324: 		{		
  325: 			if( iCounter >= 1 )
808B3F 901758            MOV     DPTR,#iCounter
808B42 E0                MOVX    A,@DPTR
808B43 FF                MOV     R7,A
808B44 C3                CLR     C
808B45 9401              SUBB    A,#01H
808B47 5003              JNC     $ + 5H
808B49 028AA2            LJMP    ?C0071?COMMONFUNCTION
  326: 			{
  327: 				if( len + len_loca >= 20 )
808B4C A3                INC     DPTR
808B4D E0                MOVX    A,@DPTR
808B4E FD                MOV     R5,A
808B4F 90174F            MOV     DPTR,#len
808B52 E0                MOVX    A,@DPTR
808B53 2D                ADD     A,R5
808B54 FD                MOV     R5,A
808B55 E4                CLR     A
808B56 33                RLC     A
808B57 FC                MOV     R4,A
808B58 C3                CLR     C
808B59 ED                MOV     A,R5
808B5A 9414              SUBB    A,#014H
808B5C EC                MOV     A,R4
808B5D 6480              XRL     A,#080H
808B5F 9480              SUBB    A,#080H
808B61 402E              JC      ?C0084?COMMONFUNCTION
  328: 				{										
  329: 					DisplayPosString( iCounter - 1, 1, &space_char, 1); /* 屏幕清掉一个数字字符 */	
808B63 EF                MOV     A,R7
808B64 14                DEC     A
808B65 FF                MOV     R7,A
808B66 7B00              MOV     R3,#?C?XDATASEG
808B68 7A17              MOV     R2,#HIGH space_char
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 311


808B6A 795A              MOV     R1,#LOW space_char
808B6C A512808949        ECALL   ?L?COM0035
  330: 					WaitForWork( 300, &Lcd );
808B71 E4                CLR     A
808B72 7F2C              MOV     R7,#02CH
808B74 7E01              MOV     R6,#01H
808B76 FD                MOV     R5,A
808B77 FC                MOV     R4,A
808B78 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
808B7B 7423              MOV     A,#HIGH Lcd
808B7D F0                MOVX    @DPTR,A
808B7E A3                INC     DPTR
808B7F 7460              MOV     A,#LOW Lcd
808B81 F0                MOVX    @DPTR,A
808B82 A512807B3D        ECALL   _WaitForWork
  331: 					DisplaySetCursorPos( iCounter - 1 , 1 );//设置光标位置				
808B87 901758            MOV     DPTR,#iCounter
808B8A E0                MOVX    A,@DPTR
808B8B 14                DEC     A
808B8C FF                MOV     R7,A
808B8D 7D01              MOV     R5,#01H
  332: 					WaitForWork( 300, &Lcd );
  333: 				}
808B8F 8049              SJMP    ?C0217?COMMONFUNCTION
808B91         ?C0084?COMMONFUNCTION:
  334: 				else
  335: 				{										
  336: 					DisplayPosString( iCounter + len - 1, y, &space_char, 1); /* 屏幕清掉一个数字字符 */	
808B91 90174F            MOV     DPTR,#len
808B94 E0                MOVX    A,@DPTR
808B95 FF                MOV     R7,A
808B96 901758            MOV     DPTR,#iCounter
808B99 E0                MOVX    A,@DPTR
808B9A 2F                ADD     A,R7
808B9B 14                DEC     A
808B9C FF                MOV     R7,A
808B9D 901750            MOV     DPTR,#y
808BA0 E0                MOVX    A,@DPTR
808BA1 FD                MOV     R5,A
808BA2 7B00              MOV     R3,#?C?XDATASEG
808BA4 7A17              MOV     R2,#HIGH space_char
808BA6 795A              MOV     R1,#LOW space_char
808BA8 901842            MOV     DPTR,#?_DisplayPosString?BYTE+05H
808BAB 7401              MOV     A,#01H
808BAD F0                MOVX    @DPTR,A
808BAE A512808950        ECALL   _DisplayPosString
  337: 					WaitForWork( 300, &Lcd );
808BB3 E4                CLR     A
808BB4 7F2C              MOV     R7,#02CH
808BB6 7E01              MOV     R6,#01H
808BB8 FD                MOV     R5,A
808BB9 FC                MOV     R4,A
808BBA 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
808BBD 7423              MOV     A,#HIGH Lcd
808BBF F0                MOVX    @DPTR,A
808BC0 A3                INC     DPTR
808BC1 7460              MOV     A,#LOW Lcd
808BC3 F0                MOVX    @DPTR,A
808BC4 A512807B3D        ECALL   _WaitForWork
  338: 					DisplaySetCursorPos( iCounter + len - 1 , y );//设置光标位置				
808BC9 90174F            MOV     DPTR,#len
808BCC E0                MOVX    A,@DPTR
808BCD FF                MOV     R7,A
808BCE 901758            MOV     DPTR,#iCounter
808BD1 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 312


808BD2 2F                ADD     A,R7
808BD3 14                DEC     A
808BD4 FF                MOV     R7,A
808BD5 901750            MOV     DPTR,#y
808BD8 E0                MOVX    A,@DPTR
808BD9 FD                MOV     R5,A
808BDA         
808BDA A512808E92        ECALL   _DisplaySetCursorPos
  339: 					WaitForWork( 300, &Lcd );
808BDF E4                CLR     A
808BE0 7F2C              MOV     R7,#02CH
808BE2 7E01              MOV     R6,#01H
808BE4 FD                MOV     R5,A
808BE5 FC                MOV     R4,A
808BE6 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
808BE9 7423              MOV     A,#HIGH Lcd
808BEB F0                MOVX    @DPTR,A
808BEC A3                INC     DPTR
808BED 7460              MOV     A,#LOW Lcd
808BEF F0                MOVX    @DPTR,A
808BF0 A512807B3D        ECALL   _WaitForWork
  340: 				}						
808BF5         ?C0085?COMMONFUNCTION:
  341: 				*(line + iCounter) = 0;
808BF5 901751            MOV     DPTR,#line
808BF8 A5128007AC        ECALL   ?C?PLDXDATA
808BFD 901758            MOV     DPTR,#iCounter
808C00 E0                MOVX    A,@DPTR
808C01 29                ADD     A,R1
808C02 F9                MOV     R1,A
808C03 E4                CLR     A
808C04 3A                ADDC    A,R2
808C05 FA                MOV     R2,A
808C06 E4                CLR     A
808C07 A558              EMOV    @PR0,A
  342: 				iCounter--;						
808C09 E0                MOVX    A,@DPTR
808C0A 14                DEC     A
808C0B F0                MOVX    @DPTR,A
  343: 			}			
  344: 		}
808C0C 028AA2            LJMP    ?C0071?COMMONFUNCTION
808C0F         ?C0082?COMMONFUNCTION:
  345: 		else
  346: 		{						
  347: 			Tempstr[ iCounter ] = key;			
808C0F 901757            MOV     DPTR,#key
808C12 E0                MOVX    A,@DPTR
808C13 FF                MOV     R7,A
808C14 A3                INC     DPTR
808C15 E0                MOVX    A,@DPTR
808C16 245B              ADD     A,#LOW Tempstr
808C18 F582              MOV     DPL,A
808C1A E4                CLR     A
808C1B 3417              ADDC    A,#HIGH Tempstr
808C1D F583              MOV     DPH,A
808C1F EF                MOV     A,R7
808C20 F0                MOVX    @DPTR,A
  348: 			iCounter++;			
808C21 901758            MOV     DPTR,#iCounter
808C24 E0                MOVX    A,@DPTR
808C25 04                INC     A
808C26 F0                MOVX    @DPTR,A
  349: 		}			
  350: 	}
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 313


808C27 028AA2            LJMP    ?C0071?COMMONFUNCTION
  351: 	return 0;
  352: }
808C2A         ?C0074?COMMONFUNCTION:
808C2A A522              ERET    
----- FUNCTION _GetLineMoney (END) -------


----- FUNCTION _GetLine (BEGIN) -----
 FILE: 'CommonFunction.c'
  160: u_char GetLine( u_char  *strTip, unsigned char len, u_char y, u_char * line, unsigned char *len1)
  161: {
808C2C 901765            MOV     DPTR,#strTip
808C2F A5128007B6        ECALL   ?C?PSTXDATA
808C34 901768            MOV     DPTR,#len
808C37 ED                MOV     A,R5
808C38 F0                MOVX    @DPTR,A
  162:     u_char 	xdata key;
  163: 	u_char  xdata iCounter = 0;
808C39 E4                CLR     A
808C3A 901771            MOV     DPTR,#iCounter
808C3D F0                MOVX    @DPTR,A
  164: 	u_char  xdata len_loca;
  165: 	u_char xdata space_char = 0x20;
808C3E 901773            MOV     DPTR,#space_char
808C41 7420              MOV     A,#020H
808C43 F0                MOVX    @DPTR,A
  166: 	u_char xdata Tempstr[20];
  167: 
  168: 	memset( Tempstr, 0, sizeof( Tempstr ) );
808C44 7E00              MOV     R6,#00H
808C46 7F14              MOV     R7,#014H
808C48 7D00              MOV     R5,#00H
808C4A 7B00              MOV     R3,#?C?XDATASEG
808C4C 7A17              MOV     R2,#HIGH Tempstr
808C4E 7974              MOV     R1,#LOW Tempstr
808C50 A5128008A6        ECALL   ?C?MEMSET
  169: 	iCounter = 0;
808C55 E4                CLR     A
808C56 901771            MOV     DPTR,#iCounter
808C59 F0                MOVX    @DPTR,A
  170: 	ClearKey();
808C5A A5128087A8        ECALL   ClearKey
  171: 	len_loca = *len1;		
808C5F 90176D            MOV     DPTR,#len1
808C62 A5128007AC        ECALL   ?C?PLDXDATA
808C67 A548              EMOV    A,@PR0
808C69 FF                MOV     R7,A
808C6A 901772            MOV     DPTR,#len_loca
808C6D F0                MOVX    @DPTR,A
  172: 	if( len + len_loca > 20 )
808C6E 901768            MOV     DPTR,#len
808C71 E0                MOVX    A,@DPTR
808C72 2F                ADD     A,R7
808C73 FF                MOV     R7,A
808C74 E4                CLR     A
808C75 33                RLC     A
808C76 FE                MOV     R6,A
808C77 D3                SETB    C
808C78 EF                MOV     A,R7
808C79 9414              SUBB    A,#014H
808C7B EE                MOV     A,R6
808C7C 6480              XRL     A,#080H
808C7E 9480              SUBB    A,#080H
808C80 4048              JC      ?C0036?COMMONFUNCTION
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 314


  173: 	{	
  174: 		DisplayStr( 0, 0, 1, strTip, len );		
808C82 D21A              SETB    ?_DisplayStr?BIT
808C84 901765            MOV     DPTR,#strTip
808C87 A5128007AC        ECALL   ?C?PLDXDATA
808C8C 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
808C8F A5128007B6        ECALL   ?C?PSTXDATA
808C94 901768            MOV     DPTR,#len
808C97 E0                MOVX    A,@DPTR
808C98 A51280805B        ECALL   ?L?COM0006
  175: 		DisplayStr( 0, 1, 1, " ", 1 );	
808C9D D21A              SETB    ?_DisplayStr?BIT
808C9F 7B80              MOV     R3,#BYTE2 0801765H
808CA1 7A17              MOV     R2,#HIGH 0801765H
808CA3 7965              MOV     R1,#LOW 0801765H
808CA5 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
808CA8 A5128007B6        ECALL   ?C?PSTXDATA
808CAD 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
808CB0 7401              MOV     A,#01H
808CB2 F0                MOVX    @DPTR,A
808CB3 FD                MOV     R5,A
808CB4 E4                CLR     A
808CB5 FF                MOV     R7,A
808CB6 A512808062        ECALL   _DisplayStr
  176: 		DisplayCursorState( 0, 1, 1, 1, 1 );	
808CBB D21A              SETB    ?_DisplayCursorState?BIT
808CBD 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808CC0 7401              MOV     A,#01H
808CC2 F0                MOVX    @DPTR,A
808CC3 D21B              SETB    ?_DisplayCursorState?BIT+01H
808CC5 FD                MOV     R5,A
808CC6 E4                CLR     A
808CC7 FF                MOV     R7,A
  177: 	}
808CC8 8038              SJMP    ?C0213?COMMONFUNCTION
808CCA         ?C0036?COMMONFUNCTION:
  178: 	else
  179: 	{
  180: 		DisplayStr( 0, y, 1, strTip, len );
808CCA 901769            MOV     DPTR,#y
808CCD E0                MOVX    A,@DPTR
808CCE FD                MOV     R5,A
808CCF D21A              SETB    ?_DisplayStr?BIT
808CD1 901765            MOV     DPTR,#strTip
808CD4 A5128007AC        ECALL   ?C?PLDXDATA
808CD9 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
808CDC A5128007B6        ECALL   ?C?PSTXDATA
808CE1 901768            MOV     DPTR,#len
808CE4 E0                MOVX    A,@DPTR
808CE5 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
808CE8 F0                MOVX    @DPTR,A
808CE9 E4                CLR     A
808CEA FF                MOV     R7,A
808CEB A512808062        ECALL   _DisplayStr
  181: 		DisplayCursorState( len, y, 1, 1, 1 );		
808CF0 901768            MOV     DPTR,#len
808CF3 E0                MOVX    A,@DPTR
808CF4 FF                MOV     R7,A
808CF5 A3                INC     DPTR
808CF6 E0                MOVX    A,@DPTR
808CF7 FD                MOV     R5,A
808CF8 D21A              SETB    ?_DisplayCursorState?BIT
808CFA 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
808CFD 7401              MOV     A,#01H
808CFF F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 315


808D00 D21B              SETB    ?_DisplayCursorState?BIT+01H
808D02         
808D02 A51280817F        ECALL   _DisplayCursorState
  182: 	}
808D07         ?C0037?COMMONFUNCTION:
  183: 	SgwSecTimer= 30;
808D07 028E8A            LJMP    ?C0216?COMMONFUNCTION
808D0A         ?C0038?COMMONFUNCTION:
  184: 	while( SgwSecTimer )
808D0A E51E              MOV     A,SgwSecTimer
808D0C 7003              JNZ     $ + 5H
808D0E 028E90            LJMP    ?C0041?COMMONFUNCTION
  185: 	{
  186: 		WaitForWork( 20, NULL );			
808D11 E4                CLR     A
808D12 7F14              MOV     R7,#014H
808D14 FE                MOV     R6,A
808D15 A512807B35        ECALL   ?L?COM000D
  187: 		if(iCounter >= len_loca)	
808D1A 901772            MOV     DPTR,#len_loca
808D1D E0                MOVX    A,@DPTR
808D1E FF                MOV     R7,A
808D1F 901771            MOV     DPTR,#iCounter
808D22 E0                MOVX    A,@DPTR
808D23 C3                CLR     C
808D24 9F                SUBB    A,R7
808D25 4010              JC      ?C0040?COMMONFUNCTION
  188: 		{
  189: 			*len1 = len_loca;
808D27 90176D            MOV     DPTR,#len1
808D2A A5128007AC        ECALL   ?C?PLDXDATA
808D2F EF                MOV     A,R7
808D30 A558              EMOV    @PR0,A
  190: 		//	WaitForWork( 800, NULL );		
  191: 			memcpy( line, Tempstr, len_loca );
808D32 901772            MOV     DPTR,#len_loca
  192: 			return 1;
808D35 8035              SJMP    ?C0215?COMMONFUNCTION
  193: 		}
808D37         ?C0040?COMMONFUNCTION:
  194: 		key = GetOneKey();	
808D37 A51280CE28        ECALL   GetOneKey
808D3C 901770            MOV     DPTR,#key
808D3F EF                MOV     A,R7
808D40 F0                MOVX    @DPTR,A
  195: 		if ( (key == KEY_UP) || (key == KEY_DOWN) || (key == KEY_DOT) || (key == KEY_NULL) )
808D41 6448              XRL     A,#048H
808D43 60C5              JZ      ?C0038?COMMONFUNCTION
808D45 E0                MOVX    A,@DPTR
808D46 FF                MOV     R7,A
808D47 6450              XRL     A,#050H
808D49 60BF              JZ      ?C0038?COMMONFUNCTION
808D4B EF                MOV     A,R7
808D4C 642E              XRL     A,#02EH
808D4E 60BA              JZ      ?C0038?COMMONFUNCTION
808D50 EF                MOV     A,R7
808D51 F4                CPL     A
808D52 60B6              JZ      ?C0038?COMMONFUNCTION
  196: 		    continue;
808D54         ?C0042?COMMONFUNCTION:
  197: 		else if( key == KEY_SUBMIT) 
808D54 EF                MOV     A,R7
808D55 640D              XRL     A,#0DH
808D57 7035              JNZ     ?C0045?COMMONFUNCTION
  198: 		{				
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 316


  199: 			*len1 = iCounter;			
808D59 901771            MOV     DPTR,#iCounter
808D5C E0                MOVX    A,@DPTR
808D5D FF                MOV     R7,A
808D5E 90176D            MOV     DPTR,#len1
808D61 A5128007AC        ECALL   ?C?PLDXDATA
808D66 EF                MOV     A,R7
808D67 A558              EMOV    @PR0,A
  200: 			memcpy( line, Tempstr, iCounter );
808D69 901771            MOV     DPTR,#iCounter
808D6C         
808D6C E0                MOVX    A,@DPTR
808D6D FF                MOV     R7,A
808D6E 7E00              MOV     R6,#00H
808D70 90176A            MOV     DPTR,#line
808D73 A5128007AC        ECALL   ?C?PLDXDATA
808D78 A801              MOV     R0,AR1
808D7A AC02              MOV     R4,AR2
808D7C AD03              MOV     R5,AR3
808D7E 7B00              MOV     R3,#?C?XDATASEG
808D80 7A17              MOV     R2,#HIGH Tempstr
808D82 7974              MOV     R1,#LOW Tempstr
808D84 A51280052D        ECALL   ?C?COPY
  201: 			return 1;
808D89 7F01              MOV     R7,#01H
808D8B 028E90            LJMP    ?C0041?COMMONFUNCTION
  202: 		}			
808D8E         ?C0045?COMMONFUNCTION:
  203: 		else if(key == KEY_CANCEL)
808D8E 901770            MOV     DPTR,#key
808D91 E0                MOVX    A,@DPTR
808D92 FE                MOV     R6,A
808D93 B41B05            CJNE    A,#01BH,?C0047?COMMONFUNCTION
  204: 			return 0;
808D96 7F00              MOV     R7,#00H
808D98 028E90            LJMP    ?C0041?COMMONFUNCTION
808D9B         ?C0047?COMMONFUNCTION:
  205: 		else if( key == KEY_BACK)//clear键,光标后退一格
808D9B EE                MOV     A,R6
808D9C 6418              XRL     A,#018H
808D9E 6003              JZ      $ + 5H
808DA0 028E72            LJMP    ?C0049?COMMONFUNCTION
  206: 		{		
  207: 			if( iCounter >= 1 )
808DA3 901771            MOV     DPTR,#iCounter
808DA6 E0                MOVX    A,@DPTR
808DA7 FF                MOV     R7,A
808DA8 C3                CLR     C
808DA9 9401              SUBB    A,#01H
808DAB 5003              JNC     $ + 5H
808DAD 028D0A            LJMP    ?C0038?COMMONFUNCTION
  208: 			{
  209: 				if( len + len_loca >= 20 )
808DB0 A3                INC     DPTR
808DB1 E0                MOVX    A,@DPTR
808DB2 FD                MOV     R5,A
808DB3 901768            MOV     DPTR,#len
808DB6 E0                MOVX    A,@DPTR
808DB7 2D                ADD     A,R5
808DB8 FD                MOV     R5,A
808DB9 E4                CLR     A
808DBA 33                RLC     A
808DBB FC                MOV     R4,A
808DBC C3                CLR     C
808DBD ED                MOV     A,R5
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 317


808DBE 9414              SUBB    A,#014H
808DC0 EC                MOV     A,R4
808DC1 6480              XRL     A,#080H
808DC3 9480              SUBB    A,#080H
808DC5 402E              JC      ?C0051?COMMONFUNCTION
  210: 				{										
  211: 					DisplayPosString( iCounter - 1, 1, &space_char, 1); /* 屏幕清掉一个数字字符 */	
808DC7 EF                MOV     A,R7
808DC8 14                DEC     A
808DC9 FF                MOV     R7,A
808DCA 7B00              MOV     R3,#?C?XDATASEG
808DCC 7A17              MOV     R2,#HIGH space_char
808DCE 7973              MOV     R1,#LOW space_char
808DD0 A512808949        ECALL   ?L?COM0035
  212: 					WaitForWork( 300, &Lcd );
808DD5 E4                CLR     A
808DD6 7F2C              MOV     R7,#02CH
808DD8 7E01              MOV     R6,#01H
808DDA FD                MOV     R5,A
808DDB FC                MOV     R4,A
808DDC 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
808DDF 7423              MOV     A,#HIGH Lcd
808DE1 F0                MOVX    @DPTR,A
808DE2 A3                INC     DPTR
808DE3 7460              MOV     A,#LOW Lcd
808DE5 F0                MOVX    @DPTR,A
808DE6 A512807B3D        ECALL   _WaitForWork
  213: 					DisplaySetCursorPos( iCounter - 1 , 1 );//设置光标位置				
808DEB 901771            MOV     DPTR,#iCounter
808DEE E0                MOVX    A,@DPTR
808DEF 14                DEC     A
808DF0 FF                MOV     R7,A
808DF1 7D01              MOV     R5,#01H
  214: 					WaitForWork( 300, &Lcd );
  215: 				}
808DF3 8049              SJMP    ?C0212?COMMONFUNCTION
808DF5         ?C0051?COMMONFUNCTION:
  216: 				else
  217: 				{										
  218: 					DisplayPosString( iCounter + len - 1, y, &space_char, 1); /* 屏幕清掉一个数字字符 */	
808DF5 901768            MOV     DPTR,#len
808DF8 E0                MOVX    A,@DPTR
808DF9 FF                MOV     R7,A
808DFA 901771            MOV     DPTR,#iCounter
808DFD E0                MOVX    A,@DPTR
808DFE 2F                ADD     A,R7
808DFF 14                DEC     A
808E00 FF                MOV     R7,A
808E01 901769            MOV     DPTR,#y
808E04 E0                MOVX    A,@DPTR
808E05 FD                MOV     R5,A
808E06 7B00              MOV     R3,#?C?XDATASEG
808E08 7A17              MOV     R2,#HIGH space_char
808E0A 7973              MOV     R1,#LOW space_char
808E0C 901842            MOV     DPTR,#?_DisplayPosString?BYTE+05H
808E0F 7401              MOV     A,#01H
808E11 F0                MOVX    @DPTR,A
808E12 A512808950        ECALL   _DisplayPosString
  219: 					WaitForWork( 300, &Lcd );
808E17 E4                CLR     A
808E18 7F2C              MOV     R7,#02CH
808E1A 7E01              MOV     R6,#01H
808E1C FD                MOV     R5,A
808E1D FC                MOV     R4,A
808E1E 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 318


808E21 7423              MOV     A,#HIGH Lcd
808E23 F0                MOVX    @DPTR,A
808E24 A3                INC     DPTR
808E25 7460              MOV     A,#LOW Lcd
808E27 F0                MOVX    @DPTR,A
808E28 A512807B3D        ECALL   _WaitForWork
  220: 					DisplaySetCursorPos( iCounter + len - 1 , y );//设置光标位置				
808E2D 901768            MOV     DPTR,#len
808E30 E0                MOVX    A,@DPTR
808E31 FF                MOV     R7,A
808E32 901771            MOV     DPTR,#iCounter
808E35 E0                MOVX    A,@DPTR
808E36 2F                ADD     A,R7
808E37 14                DEC     A
808E38 FF                MOV     R7,A
808E39 901769            MOV     DPTR,#y
808E3C E0                MOVX    A,@DPTR
808E3D FD                MOV     R5,A
808E3E         
808E3E A512808E92        ECALL   _DisplaySetCursorPos
  221: 					WaitForWork( 300, &Lcd );
808E43 E4                CLR     A
808E44 7F2C              MOV     R7,#02CH
808E46 7E01              MOV     R6,#01H
808E48 FD                MOV     R5,A
808E49 FC                MOV     R4,A
808E4A 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
808E4D 7423              MOV     A,#HIGH Lcd
808E4F F0                MOVX    @DPTR,A
808E50 A3                INC     DPTR
808E51 7460              MOV     A,#LOW Lcd
808E53 F0                MOVX    @DPTR,A
808E54 A512807B3D        ECALL   _WaitForWork
  222: 				}						
808E59         ?C0052?COMMONFUNCTION:
  223: 				*(line + iCounter) = 0;
808E59 90176A            MOV     DPTR,#line
808E5C A5128007AC        ECALL   ?C?PLDXDATA
808E61 901771            MOV     DPTR,#iCounter
808E64 E0                MOVX    A,@DPTR
808E65 29                ADD     A,R1
808E66 F9                MOV     R1,A
808E67 E4                CLR     A
808E68 3A                ADDC    A,R2
808E69 FA                MOV     R2,A
808E6A E4                CLR     A
808E6B A558              EMOV    @PR0,A
  224: 				iCounter--;		
808E6D E0                MOVX    A,@DPTR
808E6E 14                DEC     A
808E6F F0                MOVX    @DPTR,A
  225: 				SgwSecTimer = 30;
808E70         
  226: 			}
  227: 			
  228: 		}
808E70 8018              SJMP    ?C0216?COMMONFUNCTION
808E72         ?C0049?COMMONFUNCTION:
  229: 		else
  230: 		{						
  231: 			Tempstr[ iCounter ] = key;			
808E72 901770            MOV     DPTR,#key
808E75 E0                MOVX    A,@DPTR
808E76 FF                MOV     R7,A
808E77 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 319


808E78 E0                MOVX    A,@DPTR
808E79 2474              ADD     A,#LOW Tempstr
808E7B F582              MOV     DPL,A
808E7D E4                CLR     A
808E7E 3417              ADDC    A,#HIGH Tempstr
808E80 F583              MOV     DPH,A
808E82 EF                MOV     A,R7
808E83 F0                MOVX    @DPTR,A
  232: 			iCounter++;
808E84 901771            MOV     DPTR,#iCounter
808E87 E0                MOVX    A,@DPTR
808E88 04                INC     A
808E89 F0                MOVX    @DPTR,A
  233: 			SgwSecTimer = 30;			
808E8A         
808E8A 751E1E            MOV     SgwSecTimer,#01EH
  234: 		}			
  235: 	}
808E8D 028D0A            LJMP    ?C0038?COMMONFUNCTION
  236: }
808E90         ?C0041?COMMONFUNCTION:
808E90 A522              ERET    
----- FUNCTION _GetLine (END) -------


----- FUNCTION _DisplaySetCursorPos (BEGIN) -----
 FILE: 'scheduler.c'
 1104: bit DisplaySetCursorPos( uchar PosX , uchar PosY )
 1105: {
808E92 90178D            MOV     DPTR,#PosX
808E95 EF                MOV     A,R7
808E96 F0                MOVX    @DPTR,A
808E97 A3                INC     DPTR
808E98 ED                MOV     A,R5
808E99 F0                MOVX    @DPTR,A
 1106: 	struct COMMTASK xdata TaskTemp;
 1107: 
 1108: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );	
808E9A 7E00              MOV     R6,#00H
808E9C 7F26              MOV     R7,#026H
808E9E 7D00              MOV     R5,#00H
808EA0 7B00              MOV     R3,#?C?XDATASEG
808EA2 7A17              MOV     R2,#HIGH TaskTemp
808EA4 798F              MOV     R1,#LOW TaskTemp
808EA6 A5128008A6        ECALL   ?C?MEMSET
 1109: 	TaskTemp.Id 		= ID_LCD;
808EAB 901790            MOV     DPTR,#TaskTemp+01H
808EAE 7409              MOV     A,#09H
808EB0 F0                MOVX    @DPTR,A
 1110: 	TaskTemp.Cmd 		= DISPKEY_SETCURSOR;
808EB1 A3                INC     DPTR
808EB2 7454              MOV     A,#054H
808EB4 F0                MOVX    @DPTR,A
 1111: 	TaskTemp.Sn		= Lcd.Sn;
808EB5 902361            MOV     DPTR,#Lcd+01H
808EB8 E0                MOVX    A,@DPTR
808EB9 901792            MOV     DPTR,#TaskTemp+03H
808EBC F0                MOVX    @DPTR,A
 1112: 	TaskTemp.Priority       = PRIORITY_NORMAL;
808EBD 90178F            MOV     DPTR,#TaskTemp
808EC0 7442              MOV     A,#042H
808EC2 F0                MOVX    @DPTR,A
 1113: 	TaskTemp.ParamLen	= 2;
808EC3 901794            MOV     DPTR,#TaskTemp+05H
808EC6 7402              MOV     A,#02H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 320


808EC8 F0                MOVX    @DPTR,A
 1114: 	TaskTemp.Param[ 0 ] 	= PosX;
808EC9 90178D            MOV     DPTR,#PosX
808ECC E0                MOVX    A,@DPTR
808ECD 901795            MOV     DPTR,#TaskTemp+06H
808ED0 F0                MOVX    @DPTR,A
 1115: 	TaskTemp.Param[ 1 ] 	= PosY;
808ED1 90178E            MOV     DPTR,#PosY
808ED4 E0                MOVX    A,@DPTR
808ED5 901796            MOV     DPTR,#TaskTemp+07H
808ED8 F0                MOVX    @DPTR,A
 1116: 
 1117: 	return ZhkSchedulerAddTask( &TaskTemp );
808ED9 7E17              MOV     R6,#HIGH TaskTemp
808EDB 7F8F              MOV     R7,#LOW TaskTemp
808EDD A5128088CE        ECALL   _ZhkSchedulerAddTask
808EE2 EF                MOV     A,R7
808EE3 24FF              ADD     A,#0FFH
 1118: 		
 1119: }
808EE5         ?C0206?SCHEDULER:
808EE5 A522              ERET    
----- FUNCTION _DisplaySetCursorPos (END) -------


----- FUNCTION ZhkHopper1Query (BEGIN) -----
 FILE: 'scheduler.c'
  661: bit ZhkHopper1Query( void )
  662: {
  663: 	struct COMMTASK xdata TaskTemp;
  664: 
  665: 	TaskTemp.Id 		= ID_HOPPER1;
808EE7 E4                CLR     A
808EE8 901745            MOV     DPTR,#TaskTemp+01H
808EEB F0                MOVX    @DPTR,A
  666: 	TaskTemp.Cmd 		= HOPPER_QUERY;
808EEC A3                INC     DPTR
808EED 7451              MOV     A,#051H
808EEF F0                MOVX    @DPTR,A
  667: 	TaskTemp.Sn		= Hopper1.Sn;
808EF0 902376            MOV     DPTR,#Hopper1+01H
808EF3 A5128088B4        ECALL   ?L?COM0015
808EF8 EF                MOV     A,R7
808EF9 24FF              ADD     A,#0FFH
  668: 	TaskTemp.Priority       = PRIORITY_NORMAL;
  669: 	TaskTemp.ParamLen	= 2;
  670: 	TaskTemp.Param[ 0 ] 	= 0;
  671: 	TaskTemp.Param[ 1 ] 	= 0;
  672: 	return ZhkSchedulerAddTask( &TaskTemp );	
  673: }
808EFB         ?C0129?SCHEDULER:
808EFB A522              ERET    
----- FUNCTION ZhkHopper1Query (END) -------


----- FUNCTION _HopperQuery (BEGIN) -----
 FILE: 'scheduler.c'
  836: bit HopperQuery( uchar HopperNum )
  837: {
;---- Variable 'HopperNum' assigned to Register 'R7' ----
  838: 	switch( HopperNum )
  839: 	{
808EFD EF                MOV     A,R7
808EFE 24FE              ADD     A,#0FEH
808F00 600E              JZ      ?C0173?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 321


808F02 14                DEC     A
808F03 6012              JZ      ?C0174?SCHEDULER
808F05 2402              ADD     A,#02H
808F07 7015              JNZ     ?C0170?SCHEDULER
  840: 	case 1:
  841: 		return ZhkHopper1Query();
808F09         ?C0171?SCHEDULER:
  842: 		break;
808F09 A512808EE7        ECALL   ZhkHopper1Query
808F0E 800F              SJMP    ?C0172?SCHEDULER
  843: 	case 2:
  844: 		return ZhkHopper2Query();
808F10         ?C0173?SCHEDULER:
  845: 		break;
808F10 A512808F21        ECALL   ZhkHopper2Query
808F15 8008              SJMP    ?C0172?SCHEDULER
  846: 	 case 3:
  847: 		return ZhkHopper3Query();	
808F17         ?C0174?SCHEDULER:
  848: 		break;
808F17 A512808F38        ECALL   ZhkHopper3Query
808F1C 8001              SJMP    ?C0172?SCHEDULER
  849: 	}
  850: 	return 1;
808F1E         ?C0170?SCHEDULER:
  851: }
808F1E D3                SETB    C
  852: 
808F1F         ?C0172?SCHEDULER:
808F1F A522              ERET    
----- FUNCTION _HopperQuery (END) -------


----- FUNCTION ZhkHopper2Query (BEGIN) -----
 FILE: 'scheduler.c'
  675: bit ZhkHopper2Query( void )
  676: {
  677: 	struct COMMTASK xdata TaskTemp;
  678: 
  679: 	TaskTemp.Id 		= ID_HOPPER2;
808F21 901745            MOV     DPTR,#TaskTemp+01H
808F24 7401              MOV     A,#01H
808F26 F0                MOVX    @DPTR,A
  680: 	TaskTemp.Cmd 		= HOPPER_QUERY;
808F27 A3                INC     DPTR
808F28 7451              MOV     A,#051H
808F2A F0                MOVX    @DPTR,A
  681: 	TaskTemp.Sn		= Hopper2.Sn;
808F2B 90238B            MOV     DPTR,#Hopper2+01H
808F2E A5128088B4        ECALL   ?L?COM0015
808F33 EF                MOV     A,R7
808F34 24FF              ADD     A,#0FFH
  682: 	TaskTemp.Priority = PRIORITY_NORMAL;
  683: 	TaskTemp.ParamLen	= 2;
  684: 	TaskTemp.Param[ 0 ] 	= 0;
  685: 	TaskTemp.Param[ 1 ] 	= 0;
  686: 	return ZhkSchedulerAddTask( &TaskTemp );	
  687: }
808F36         ?C0130?SCHEDULER:
808F36 A522              ERET    
----- FUNCTION ZhkHopper2Query (END) -------


----- FUNCTION ZhkHopper3Query (BEGIN) -----
 FILE: 'scheduler.c'
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 322


  689: bit ZhkHopper3Query( void )
  690: {
  691: 	struct COMMTASK xdata TaskTemp;
  692: 
  693: 	TaskTemp.Id 		= ID_HOPPER3;
808F38 901745            MOV     DPTR,#TaskTemp+01H
808F3B 7402              MOV     A,#02H
808F3D F0                MOVX    @DPTR,A
  694: 	TaskTemp.Cmd 		= HOPPER_QUERY;
808F3E A3                INC     DPTR
808F3F 7451              MOV     A,#051H
808F41 F0                MOVX    @DPTR,A
  695: 	TaskTemp.Sn		= Hopper3.Sn;
808F42 9023A0            MOV     DPTR,#Hopper3+01H
808F45 A5128088B4        ECALL   ?L?COM0015
808F4A EF                MOV     A,R7
808F4B 24FF              ADD     A,#0FFH
  696: 	TaskTemp.Priority = PRIORITY_NORMAL;
  697: 	TaskTemp.ParamLen	= 2;
  698: 	TaskTemp.Param[ 0 ] 	= 0;
  699: 	TaskTemp.Param[ 1 ] 	= 0;
  700: 	return ZhkSchedulerAddTask( &TaskTemp );	
  701: }
808F4D         ?C0131?SCHEDULER:
808F4D A522              ERET    
----- FUNCTION ZhkHopper3Query (END) -------


----- FUNCTION _ZhkSchedulerIsTaskNull (BEGIN) -----
 FILE: 'scheduler.c'
  349: bit ZhkSchedulerIsTaskNull( uchar TaskNum )
  350: {
;---- Variable 'TaskNum' assigned to Register 'R7' ----
  351: 	if ( TaskNum >= sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) )
  352: 		return 0;
808F4F EF                MOV     A,R7
808F50 C3                CLR     C
808F51 9420              SUBB    A,#020H
808F53 4002              JC      ?C0045?SCHEDULER
  353: 	return ZhkReadyTaskList[ TaskNum ].Id == ID_NULL;
808F55 8014              SJMP    ?C0046?SCHEDULER
808F57         ?C0045?SCHEDULER:
  354: 	
808F57 75F026            MOV     B,#026H
808F5A EF                MOV     A,R7
808F5B 9023E1            MOV     DPTR,#ZhkReadyTaskList+01H
808F5E A51280079F        ECALL   ?C?OFFXADD
808F63 E0                MOVX    A,@DPTR
808F64 B4FF03            CJNE    A,#0FFH,?C0047?SCHEDULER
808F67 D3                SETB    C
808F68 8001              SJMP    ?C0048?SCHEDULER
808F6A         ?C0047?SCHEDULER:
808F6A C3                CLR     C
808F6B         ?C0048?SCHEDULER:
  355: }
808F6B         ?C0046?SCHEDULER:
808F6B A522              ERET    
----- FUNCTION _ZhkSchedulerIsTaskNull (END) -------


----- FUNCTION ZhkCasherQuery (BEGIN) -----
 FILE: 'scheduler.c'
 1293: bit ZhkCasherQuery( void )
 1294: {
 1295: 	struct COMMTASK xdata TaskTemp;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 323


 1296: 
 1297: 	ZhkCasherStatus 	= CASHER_STATUS_QUERY;	
808F6D 90235F            MOV     DPTR,#ZhkCasherStatus
808F70 7405              MOV     A,#05H
808F72 F0                MOVX    @DPTR,A
 1298: 	TaskTemp.Id 		= ID_CASHER;
808F73 90184A            MOV     DPTR,#TaskTemp+01H
808F76 740D              MOV     A,#0DH
808F78 F0                MOVX    @DPTR,A
 1299: 	TaskTemp.Cmd 		= CASHER_QUERY;
808F79 A3                INC     DPTR
808F7A 7451              MOV     A,#051H
808F7C F0                MOVX    @DPTR,A
 1300: 	TaskTemp.Sn			= Casher.Sn;
808F7D 9023CC            MOV     DPTR,#Casher+01H
808F80 E0                MOVX    A,@DPTR
808F81 90184C            MOV     DPTR,#TaskTemp+03H
808F84 F0                MOVX    @DPTR,A
 1301: 	TaskTemp.Priority   = PRIORITY4;
808F85 901849            MOV     DPTR,#TaskTemp
808F88 7444              MOV     A,#044H
808F8A F0                MOVX    @DPTR,A
 1302: 	TaskTemp.ParamLen	= 0;
808F8B E4                CLR     A
808F8C 90184E            MOV     DPTR,#TaskTemp+05H
808F8F F0                MOVX    @DPTR,A
 1303: //	Trace("\n check CashState");
 1304: 	return ZhkSchedulerAddTask( &TaskTemp );
808F90 7E18              MOV     R6,#HIGH TaskTemp
808F92 7F49              MOV     R7,#LOW TaskTemp
808F94 A5128088CE        ECALL   _ZhkSchedulerAddTask
808F99 EF                MOV     A,R7
808F9A 24FF              ADD     A,#0FFH
 1305: }
808F9C         ?C0242?SCHEDULER:
808F9C A522              ERET    
----- FUNCTION ZhkCasherQuery (END) -------


----- FUNCTION CasherQuery (BEGIN) -----
 FILE: 'scheduler.c'
 1307: bit CasherQuery( void )
 1308: {	
 1309: //	if ( Casher.CommState == COMM_BUZY ) 
 1310: //		return 0;	
 1311: //	if( ZhkCasherStatus == CASHER_STATUS_NULL )
 1312: //	{			
 1313: 		ZhkCasherQuery();
808F9E A512808F6D        ECALL   ZhkCasherQuery
 1314: 		return 1;
808FA3 D3                SETB    C
 1315: //	}	
 1316: //	return 0;
 1317: }
808FA4         ?C0243?SCHEDULER:
808FA4 A522              ERET    
----- FUNCTION CasherQuery (END) -------


----- FUNCTION CasherAccept (BEGIN) -----
 FILE: 'scheduler.c'
 1319: bit CasherAccept( void )
 1320: {
 1321: 	struct COMMTASK xdata TaskTemp;
 1322: 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 324


 1323: 	ZhkCasherStatus = CASHER_STATUS_ACCEPT;
808FA6 90235F            MOV     DPTR,#ZhkCasherStatus
808FA9 7401              MOV     A,#01H
808FAB F0                MOVX    @DPTR,A
 1324: 	TaskTemp.Id 		= ID_CASHER;
808FAC 90159A            MOV     DPTR,#TaskTemp+01H
808FAF 740D              MOV     A,#0DH
808FB1 F0                MOVX    @DPTR,A
 1325: 	TaskTemp.Cmd 		= CASHER_ACCEPT;
808FB2 A3                INC     DPTR
808FB3 7452              MOV     A,#052H
808FB5 F0                MOVX    @DPTR,A
 1326: 	TaskTemp.Sn		= Casher.Sn;
808FB6 9023CC            MOV     DPTR,#Casher+01H
808FB9 E0                MOVX    A,@DPTR
808FBA 90159C            MOV     DPTR,#TaskTemp+03H
808FBD F0                MOVX    @DPTR,A
 1327: 	TaskTemp.Priority       = PRIORITY_NORMAL;
808FBE 901599            MOV     DPTR,#TaskTemp
808FC1 7442              MOV     A,#042H
808FC3 F0                MOVX    @DPTR,A
 1328: 	TaskTemp.ParamLen	= 0;
808FC4 E4                CLR     A
808FC5 90159E            MOV     DPTR,#TaskTemp+05H
808FC8 F0                MOVX    @DPTR,A
 1329: 	return ZhkSchedulerAddTask( &TaskTemp );
808FC9 7E15              MOV     R6,#HIGH TaskTemp
808FCB 7F99              MOV     R7,#LOW TaskTemp
808FCD A5128088CE        ECALL   _ZhkSchedulerAddTask
808FD2 EF                MOV     A,R7
808FD3 24FF              ADD     A,#0FFH
 1330: }
808FD5         ?C0244?SCHEDULER:
808FD5 A522              ERET    
----- FUNCTION CasherAccept (END) -------


----- FUNCTION DisableBillDev (BEGIN) -----
 FILE: 'mainflow.c'
  287: u_char DisableBillDev()
  288: {
  289: 	if( !DisableFlag )
  290: 	{
808FD7 202A1C            JB      DisableFlag,?C0059?MAINFLOW
  291: 		if( SystemParameter.BillNo == 1 )
  292: 			CasherQueryDisable();		
808FDA 900425            MOV     DPTR,#SystemParameter+07H
808FDD E0                MOVX    A,@DPTR
808FDE B40105            CJNE    A,#01H,?C0060?MAINFLOW
  293: 		CoinerDisable();	
808FE1 A5128125D3        ECALL   CasherQueryDisable
808FE6         ?C0060?MAINFLOW:
  294: 		WaitForWork( 20 , NULL );
808FE6 A5128096E2        ECALL   CoinerDisable
  295: 		DisableFlag = 1;
808FEB E4                CLR     A
808FEC 7F14              MOV     R7,#014H
808FEE FE                MOV     R6,A
808FEF A512807B35        ECALL   ?L?COM000D
  296: 	}
808FF4 D22A              SETB    DisableFlag
  297: 	return 0;
808FF6         ?C0059?MAINFLOW:
  298: }
808FF6 7F00              MOV     R7,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 325


  299: 
808FF8         ?C0061?MAINFLOW:
808FF8 A522              ERET    
----- FUNCTION DisableBillDev (END) -------


----- FUNCTION EnableBillDev (BEGIN) -----
 FILE: 'mainflow.c'
  301: u_char EnableBillDev()
  302: {			
  303: 	if( DisableFlag )
  304: 	{		
808FFA 302A28            JNB     DisableFlag,?C0062?MAINFLOW
  305: 		if( SystemParameter.BillNo == 1 )
  306: 		{			
808FFD 900425            MOV     DPTR,#SystemParameter+07H
809000 E0                MOVX    A,@DPTR
809001 B4010B            CJNE    A,#01H,?C0063?MAINFLOW
  307: 			if( DeviceStatus.BillAccepter == 0 )
  308: 				CasherQueryEnable();		
809004 900B16            MOV     DPTR,#DeviceStatus
809007 E0                MOVX    A,@DPTR
809008 7005              JNZ     ?C0063?MAINFLOW
  309: 		}
80900A A5128125B9        ECALL   CasherQueryEnable
  310: 		if( DeviceStatus.CoinAccepter == 0 )
80900F         ?C0063?MAINFLOW:
  311: 			CoinerEnable();//使能硬币器	
80900F 900B17            MOV     DPTR,#DeviceStatus+01H
809012 E0                MOVX    A,@DPTR
809013 7005              JNZ     ?C0065?MAINFLOW
  312: 		WaitForWork( 20 , NULL );
809015 A512809029        ECALL   CoinerEnable
80901A         ?C0065?MAINFLOW:
  313: 		DisableFlag = 0;
80901A E4                CLR     A
80901B 7F14              MOV     R7,#014H
80901D FE                MOV     R6,A
80901E A512807B35        ECALL   ?L?COM000D
  314: 	}
809023 C22A              CLR     DisableFlag
  315: 	return 0;
809025         ?C0062?MAINFLOW:
  316: }
809025 7F00              MOV     R7,#00H
  317: 
809027         ?C0066?MAINFLOW:
809027 A522              ERET    
----- FUNCTION EnableBillDev (END) -------


----- FUNCTION CoinerEnable (BEGIN) -----
 FILE: 'IOInput.c'
  160: bit CoinerEnable( void )
  161: {
  162: 	ZhkCoiner.State &= ~ 0x20;
  163: 	ZhkHardCoinerDisable();	
809029 902DCF            MOV     DPTR,#ZhkCoiner
80902C E0                MOVX    A,@DPTR
80902D 54DF              ANL     A,#0DFH
80902F F0                MOVX    @DPTR,A
  164: #ifdef  _COIN_INPUT_PARALLEL
809030 A5128096FA        ECALL   ZhkHardCoinerDisable
  165: 	CoinSet.Line1 = 50 ;
809035 902DD8            MOV     DPTR,#CoinSet+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 326


809038 E4                CLR     A
809039 F0                MOVX    @DPTR,A
80903A A3                INC     DPTR
80903B 7432              MOV     A,#032H
80903D F0                MOVX    @DPTR,A
  166: 	CoinSet.Line2 = 50 ;
80903E A3                INC     DPTR
80903F E4                CLR     A
809040 F0                MOVX    @DPTR,A
809041 A3                INC     DPTR
809042 7432              MOV     A,#032H
809044 F0                MOVX    @DPTR,A
  167: 	CoinSet.Line3 = 100 ;
809045 A3                INC     DPTR
809046 E4                CLR     A
809047 F0                MOVX    @DPTR,A
809048 A3                INC     DPTR
809049 7464              MOV     A,#064H
80904B F0                MOVX    @DPTR,A
  168: 	CoinSet.Line4 = 100 ;	
80904C A3                INC     DPTR
80904D E4                CLR     A
80904E F0                MOVX    @DPTR,A
80904F A3                INC     DPTR
809050 7464              MOV     A,#064H
809052 F0                MOVX    @DPTR,A
  169: 	CoinSet.Line5 = 0 ;
809053 E4                CLR     A
809054 A3                INC     DPTR
809055 F0                MOVX    @DPTR,A
809056 A3                INC     DPTR
809057 F0                MOVX    @DPTR,A
  170: 	CoinSet.Line6 = 0 ;		
809058 A3                INC     DPTR
809059 F0                MOVX    @DPTR,A
80905A A3                INC     DPTR
80905B F0                MOVX    @DPTR,A
  171: #endif
  172: 	return 1;
80905C D3                SETB    C
  173: }
80905D         ?C0015?IOINPUT:
80905D A522              ERET    
----- FUNCTION CoinerEnable (END) -------


----- FUNCTION CoinerTest (BEGIN) -----
 FILE: 'devicecheck.c'
  307: void CoinerTest()
  308: {	
  309: 	u_int xdata CoinSum = 0;
  310: 	u_int xdata CoinMnu = 0;
80905F E4                CLR     A
809060 90173F            MOV     DPTR,#CoinSum
809063 F0                MOVX    @DPTR,A
809064 A3                INC     DPTR
809065 F0                MOVX    @DPTR,A
  311: 	u_char xdata str[20];
809066 A3                INC     DPTR
809067 F0                MOVX    @DPTR,A
809068 A3                INC     DPTR
809069 F0                MOVX    @DPTR,A
  312: 	u_char xdata flag = 0;
80906A 901757            MOV     DPTR,#flag
80906D F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 327


  313: 	u_char xdata len = 0;
80906E A3                INC     DPTR
80906F F0                MOVX    @DPTR,A
  314: 	u_char xdata MyKey = 0;
809070 A3                INC     DPTR
809071 F0                MOVX    @DPTR,A
  315: 
  316: 	//照明灯测试
  317: 	Trace( "Coiner Test begin\n" );
  318: 	CoinerEnable();//使能硬币器
809072 A512809029        ECALL   CoinerEnable
  319: #ifdef _CHINA_
  320: 	DisplayStr( 0, 0, 1,"    硬币器测试", 14 );
  321: 	DisplayStr( 0, 1, 1, "请投币:", 7 );
  322: #else
  323: 	DisplayStr( 0, 0, 1,"Coin Acceptor test!", 19 );
809077 D21A              SETB    ?_DisplayStr?BIT
809079 7B80              MOV     R3,#BYTE2 0800DC0H
80907B 7A0D              MOV     R2,#HIGH 0800DC0H
80907D 79C0              MOV     R1,#LOW 0800DC0H
80907F 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
809082 A5128007B6        ECALL   ?C?PSTXDATA
809087 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80908A 7413              MOV     A,#013H
80908C A51280805E        ECALL   ?L?COM0007
  324: //	DisplayStr( 0, 1, 1, "Insert coin:\x24", 13 );
  325: 	DisplayStr( 0, 1, 1, "Insert coin:", 12 );
809091 D21A              SETB    ?_DisplayStr?BIT
809093 7B80              MOV     R3,#BYTE2 0800DD4H
809095 7A0D              MOV     R2,#HIGH 0800DD4H
809097 79D4              MOV     R1,#LOW 0800DD4H
809099 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80909C A5128007B6        ECALL   ?C?PSTXDATA
8090A1 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8090A4 740C              MOV     A,#0CH
8090A6 F0                MOVX    @DPTR,A
8090A7 7D01              MOV     R5,#01H
8090A9 E4                CLR     A
8090AA FF                MOV     R7,A
8090AB A512808062        ECALL   _DisplayStr
  326: #endif
  327: 	SgwSecTimer= 30;		
8090B0 751E1E            MOV     SgwSecTimer,#01EH
  328: 	memset( str, 0, sizeof( str ) );
8090B3 7E00              MOV     R6,#00H
8090B5 7F14              MOV     R7,#014H
8090B7 7D00              MOV     R5,#00H
8090B9 7B00              MOV     R3,#?C?XDATASEG
8090BB 7A17              MOV     R2,#HIGH str
8090BD 7943              MOV     R1,#LOW str
8090BF A5128008A6        ECALL   ?C?MEMSET
8090C4         ?C0036?DEVICECHECK:
  329: 	while( SgwSecTimer )
8090C4 E51E              MOV     A,SgwSecTimer
8090C6 7003              JNZ     $ + 5H
8090C8 02924E            LJMP    ?C0037?DEVICECHECK
  330: 	{
  331: 		WaitForWork( 100, NULL );
8090CB E4                CLR     A
8090CC 7F64              MOV     R7,#064H
8090CE FE                MOV     R6,A
8090CF A512807B35        ECALL   ?L?COM000D
  332: 		CoinMnu = GetCoin();	
8090D4 A512809344        ECALL   GetCoin
8090D9 901741            MOV     DPTR,#CoinMnu
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 328


8090DC EE                MOV     A,R6
8090DD F0                MOVX    @DPTR,A
8090DE A3                INC     DPTR
8090DF EF                MOV     A,R7
8090E0 F0                MOVX    @DPTR,A
  333: 		if( CoinMnu != 0 )
8090E1 4E                ORL     A,R6
8090E2 602B              JZ      ?C0038?DEVICECHECK
  334: 		{		
8090E4         ?C0039?DEVICECHECK:
  335: 			while ( CoinMnu ) 
8090E4 901741            MOV     DPTR,#CoinMnu
8090E7 E0                MOVX    A,@DPTR
8090E8 FE                MOV     R6,A
8090E9 A3                INC     DPTR
8090EA E0                MOVX    A,@DPTR
8090EB FF                MOV     R7,A
8090EC 4E                ORL     A,R6
8090ED 601A              JZ      ?C0040?DEVICECHECK
  336: 			{		
  337: 		#ifdef _COIN_INPUT_PARALLEL			
  338: 				CoinSum += CoinMnu;
8090EF 90173F            MOV     DPTR,#CoinSum
8090F2 EE                MOV     A,R6
8090F3 8FF0              MOV     B,R7
8090F5 A512800600        ECALL   ?C?IILDX
  339: 		#else
  340: 				CoinSum += CoinMnu*COINMULTIPLE;			
  341: 		#endif
  342: 				Trace("\n CoinSum = %u", CoinSum);
  343: 				CoinMnu = GetCoin();
8090FA A512809344        ECALL   GetCoin
8090FF 901741            MOV     DPTR,#CoinMnu
809102 EE                MOV     A,R6
809103 F0                MOVX    @DPTR,A
809104 A3                INC     DPTR
809105 EF                MOV     A,R7
809106 F0                MOVX    @DPTR,A
  344: 			}
809107 80DB              SJMP    ?C0039?DEVICECHECK
809109         ?C0040?DEVICECHECK:
  345: 			flag = 1;
809109 901757            MOV     DPTR,#flag
80910C 7401              MOV     A,#01H
80910E F0                MOVX    @DPTR,A
  346: 			
  347: 		}
80910F         ?C0038?DEVICECHECK:
  348: 		if( flag == 1 )
80910F 901757            MOV     DPTR,#flag
809112 E0                MOVX    A,@DPTR
809113 6401              XRL     A,#01H
809115 6003              JZ      $ + 5H
809117 029238            LJMP    ?C0041?DEVICECHECK
  349: 		{	
  350: 			switch( SystemParameter.curUnit )
80911A 900466            MOV     DPTR,#SystemParameter+048H
80911D E0                MOVX    A,@DPTR
80911E FE                MOV     R6,A
80911F A3                INC     DPTR
809120 E0                MOVX    A,@DPTR
809121 FF                MOV     R7,A
809122 EE                MOV     A,R6
809123 6003              JZ      $ + 5H
809125 0291FA            LJMP    ?C0046?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 329


809128 EF                MOV     A,R7
809129 24F6              ADD     A,#0F6H
80912B 602A              JZ      ?C0044?DEVICECHECK
80912D 24A6              ADD     A,#0A6H
80912F 606F              JZ      ?C0045?DEVICECHECK
809131 2463              ADD     A,#063H
809133 6003              JZ      $ + 5H
809135 0291FA            LJMP    ?C0046?DEVICECHECK
  351: 			{
  352: 				case 1:
809138         ?C0043?DEVICECHECK:
  353: 			#ifdef _CHINA_
  354: 					len = sprintf( str, "已投入金额: %u", CoinSum );	
  355: 			#else
  356: 					len = sprintf( str, "Insert coin: %u", CoinSum );		
809138 7B80              MOV     R3,#BYTE2 0800DE1H
80913A 7A0D              MOV     R2,#HIGH 0800DE1H
80913C 79E1              MOV     R1,#LOW 0800DE1H
80913E 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
809141 A5128007B6        ECALL   ?C?PSTXDATA
809146 90173F            MOV     DPTR,#CoinSum
809149 E0                MOVX    A,@DPTR
80914A FF                MOV     R7,A
80914B A3                INC     DPTR
80914C E0                MOVX    A,@DPTR
80914D 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
809150 CF                XCH     A,R7
809151 F0                MOVX    @DPTR,A
809152 A3                INC     DPTR
809153 EF                MOV     A,R7
  357: 			#endif	
  358: 				break;				
809154 0291E7            LJMP    ?C0271?DEVICECHECK
  359: 				case 10:
809157         ?C0044?DEVICECHECK:
  360: 			#ifdef _CHINA_
  361: 					len = sprintf( str, "已投入金额: %u.%u", CoinSum/SystemParameter.curUnit, CoinSum%SystemParameter.curUnit );
>> 	
  362: 			#else
  363: 					len = sprintf( str, "Insert coin: %u.%u", CoinSum/SystemParameter.curUnit, CoinSum%SystemParameter.curUnit )
>> ;		
809157 7B80              MOV     R3,#BYTE2 0800DF1H
809159 7A0D              MOV     R2,#HIGH 0800DF1H
80915B 79F1              MOV     R1,#LOW 0800DF1H
80915D 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
809160 A5128007B6        ECALL   ?C?PSTXDATA
809165 900466            MOV     DPTR,#SystemParameter+048H
809168 E0                MOVX    A,@DPTR
809169 FA                MOV     R2,A
80916A A3                INC     DPTR
80916B E0                MOVX    A,@DPTR
80916C FB                MOV     R3,A
80916D 90173F            MOV     DPTR,#CoinSum
809170 E0                MOVX    A,@DPTR
809171 FE                MOV     R6,A
809172 A3                INC     DPTR
809173 E0                MOVX    A,@DPTR
809174 FF                MOV     R7,A
809175 AD03              MOV     R5,AR3
809177 AC02              MOV     R4,AR2
809179 A51280056C        ECALL   ?C?UIDIV
80917E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
809181 EE                MOV     A,R6
809182 F0                MOVX    @DPTR,A
809183 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 330


809184 EF                MOV     A,R7
809185 F0                MOVX    @DPTR,A
809186 90173F            MOV     DPTR,#CoinSum
809189 E0                MOVX    A,@DPTR
80918A FE                MOV     R6,A
80918B A3                INC     DPTR
80918C E0                MOVX    A,@DPTR
80918D FF                MOV     R7,A
80918E AD03              MOV     R5,AR3
809190 AC02              MOV     R4,AR2
809192 A51280056C        ECALL   ?C?UIDIV
809197 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80919A EC                MOV     A,R4
80919B F0                MOVX    @DPTR,A
80919C A3                INC     DPTR
80919D ED                MOV     A,R5
80919E         
  364: 			#endif	
  365: 				break;
80919E 8047              SJMP    ?C0271?DEVICECHECK
  366: 				case 100:
8091A0         ?C0045?DEVICECHECK:
  367: 			#ifdef _CHINA_
  368: 					len = sprintf( str, "已投入金额: %u.%02u", CoinSum/SystemParameter.curUnit, CoinSum%SystemParameter.curUnit 
>> );	
  369: 			#else
  370: 					len = sprintf( str, "Insert coin: %u.%02u", CoinSum/SystemParameter.curUnit, CoinSum%SystemParameter.curUnit
>>  );		
8091A0 7B80              MOV     R3,#BYTE2 0800E04H
8091A2 7A0E              MOV     R2,#HIGH 0800E04H
8091A4 7904              MOV     R1,#LOW 0800E04H
8091A6 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8091A9 A5128007B6        ECALL   ?C?PSTXDATA
8091AE 900466            MOV     DPTR,#SystemParameter+048H
8091B1 E0                MOVX    A,@DPTR
8091B2 FA                MOV     R2,A
8091B3 A3                INC     DPTR
8091B4 E0                MOVX    A,@DPTR
8091B5 FB                MOV     R3,A
8091B6 90173F            MOV     DPTR,#CoinSum
8091B9 E0                MOVX    A,@DPTR
8091BA FE                MOV     R6,A
8091BB A3                INC     DPTR
8091BC E0                MOVX    A,@DPTR
8091BD FF                MOV     R7,A
8091BE AD03              MOV     R5,AR3
8091C0 AC02              MOV     R4,AR2
8091C2 A51280056C        ECALL   ?C?UIDIV
8091C7 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8091CA EE                MOV     A,R6
8091CB F0                MOVX    @DPTR,A
8091CC A3                INC     DPTR
8091CD EF                MOV     A,R7
8091CE F0                MOVX    @DPTR,A
8091CF 90173F            MOV     DPTR,#CoinSum
8091D2 E0                MOVX    A,@DPTR
8091D3 FE                MOV     R6,A
8091D4 A3                INC     DPTR
8091D5 E0                MOVX    A,@DPTR
8091D6 FF                MOV     R7,A
8091D7 AD03              MOV     R5,AR3
8091D9 AC02              MOV     R4,AR2
8091DB A51280056C        ECALL   ?C?UIDIV
8091E0 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
8091E3 EC                MOV     A,R4
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 331


8091E4 F0                MOVX    @DPTR,A
8091E5 A3                INC     DPTR
8091E6 ED                MOV     A,R5
8091E7         
8091E7 F0                MOVX    @DPTR,A
8091E8 7B00              MOV     R3,#?C?XDATASEG
8091EA 7A17              MOV     R2,#HIGH str
8091EC 7943              MOV     R1,#LOW str
8091EE A512800949        ECALL   _sprintf
8091F3 901758            MOV     DPTR,#len
8091F6 EF                MOV     A,R7
8091F7 F0                MOVX    @DPTR,A
  371: 			#endif	
  372: 				break;
8091F8 8014              SJMP    ?C0042?DEVICECHECK
  373: 				default:
8091FA         ?C0046?DEVICECHECK:
  374: 					len = 0;
8091FA E4                CLR     A
8091FB 901758            MOV     DPTR,#len
8091FE F0                MOVX    @DPTR,A
  375: 					memset( str, 0, sizeof( str ) );
8091FF FE                MOV     R6,A
809200 7F14              MOV     R7,#014H
809202 FD                MOV     R5,A
809203 7B00              MOV     R3,#?C?XDATASEG
809205 7A17              MOV     R2,#HIGH str
809207 7943              MOV     R1,#LOW str
809209 A5128008A6        ECALL   ?C?MEMSET
  376: 				break;
  377: 			}
80920E         ?C0042?DEVICECHECK:
  378: 			if( len != 0 )
80920E 901758            MOV     DPTR,#len
809211 E0                MOVX    A,@DPTR
809212 FF                MOV     R7,A
809213 6023              JZ      ?C0041?DEVICECHECK
  379: 			{
  380: 				DisplayStr( 0, 1, 1, str, len );
809215 D21A              SETB    ?_DisplayStr?BIT
809217 7B00              MOV     R3,#?C?XDATASEG
809219 7A17              MOV     R2,#HIGH str
80921B 7943              MOV     R1,#LOW str
80921D 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
809220 A5128007B6        ECALL   ?C?PSTXDATA
809225 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
809228 EF                MOV     A,R7
809229 F0                MOVX    @DPTR,A
80922A 7D01              MOV     R5,#01H
80922C E4                CLR     A
80922D FF                MOV     R7,A
80922E A512808062        ECALL   _DisplayStr
  381: 				flag = 0;
809233 E4                CLR     A
809234 901757            MOV     DPTR,#flag
809237 F0                MOVX    @DPTR,A
  382: 			}
  383: 		}
809238         ?C0041?DEVICECHECK:
  384: 		MyKey = GetKey();		
809238 A512809275        ECALL   GetKey
80923D 901759            MOV     DPTR,#MyKey
809240 EF                MOV     A,R7
809241 F0                MOVX    @DPTR,A
  385: 		if( ( MyKey  == KEY_SUBMIT ) || ( MyKey  == KEY_CANCEL ) )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 332


809242 640D              XRL     A,#0DH
809244 6008              JZ      ?C0037?DEVICECHECK
809246 E0                MOVX    A,@DPTR
809247 641B              XRL     A,#01BH
809249 6003              JZ      $ + 5H
80924B 0290C4            LJMP    ?C0036?DEVICECHECK
  386: 			break;
  387: 	}		
80924E         ?C0037?DEVICECHECK:
  388: 	CoinerDisable();//禁能硬币器
80924E A5128096E2        ECALL   CoinerDisable
  389: #ifdef _CHINA_
  390: 	len = ChooseReturn( "  硬币器是否\xd5\xfd常?" );
  391: #else
  392: 	len = ChooseReturn( "Coin Acceptor OK ?" );	
809253 7B80              MOV     R3,#BYTE2 0800E19H
809255 7A0E              MOV     R2,#HIGH 0800E19H
809257 7919              MOV     R1,#LOW 0800E19H
809259 A5128092D5        ECALL   _ChooseReturn
80925E 901758            MOV     DPTR,#len
809261 EF                MOV     A,R7
809262 F0                MOVX    @DPTR,A
  393: #endif	
  394: 	if( len == 0 )//正常		
809263 900B17            MOV     DPTR,#DeviceStatus+01H
809266 7003              JNZ     ?C0050?DEVICECHECK
  395: 		DeviceStatus.CoinAccepter = 0;		
809268 F0                MOVX    @DPTR,A
809269 8003              SJMP    ?C0052?DEVICECHECK
80926B         ?C0050?DEVICECHECK:
  396: 	else 		
  397: 		DeviceStatus.CoinAccepter = 1;	
80926B 7401              MOV     A,#01H
80926D F0                MOVX    @DPTR,A
  398: }
80926E         ?C0052?DEVICECHECK:
80926E A522              ERET    
----- FUNCTION CoinerTest (END) -------


----- FUNCTION ?L?COM003D (BEGIN) -----
809270 E4                CLR     A
809271 901754            MOV     DPTR,#i
809274 F0                MOVX    @DPTR,A
----- FUNCTION GetKey (BEGIN) -----
 FILE: 'key.c'
   55: uchar GetKey( void )
   56: {
   57: 	uchar data i;
   58: 	uchar data ch;
   59: 	if ( ! ZhkKeyPermission ) return KEY_NULL;
809275 902DEB            MOV     DPTR,#ZhkKeyPermission
809278 E0                MOVX    A,@DPTR
809279 7004              JNZ     ?C0004?KEY
80927B 7FFF              MOV     R7,#0FFH
80927D 8054              SJMP    ?C0005?KEY
80927F         ?C0004?KEY:
   60: 	ch = ZhkKeyBuf[ 0 ];
80927F 902DED            MOV     DPTR,#ZhkKeyBuf
809282 E0                MOVX    A,@DPTR
809283 F529              MOV     ch,A
   61: 	for( i = 0 ; i < sizeof( ZhkKeyBuf ) - 1 ; i ++ )
809285 E4                CLR     A
809286 F528              MOV     i,A
809288         ?C0006?KEY:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 333


809288 E528              MOV     A,i
80928A C3                CLR     C
80928B 9400              SUBB    A,#00H
80928D 501E              JNC     ?C0007?KEY
   62: 		ZhkKeyBuf[ i ] = ZhkKeyBuf[ i + 1 ];
80928F 74EE              MOV     A,#LOW ZhkKeyBuf+01H
809291 2528              ADD     A,i
809293 F582              MOV     DPL,A
809295 E4                CLR     A
809296 342D              ADDC    A,#HIGH ZhkKeyBuf+01H
809298 F583              MOV     DPH,A
80929A E0                MOVX    A,@DPTR
80929B FF                MOV     R7,A
80929C 74ED              MOV     A,#LOW ZhkKeyBuf
80929E 2528              ADD     A,i
8092A0 F582              MOV     DPL,A
8092A2 E4                CLR     A
8092A3 342D              ADDC    A,#HIGH ZhkKeyBuf
8092A5 F583              MOV     DPH,A
8092A7 EF                MOV     A,R7
8092A8 F0                MOVX    @DPTR,A
8092A9 0528              INC     i
8092AB 80DB              SJMP    ?C0006?KEY
8092AD         ?C0007?KEY:
   63: 	ZhkKeyBuf[ i ] = KEY_NULL;
8092AD 74ED              MOV     A,#LOW ZhkKeyBuf
8092AF 2528              ADD     A,i
8092B1 F582              MOV     DPL,A
8092B3 E4                CLR     A
8092B4 342D              ADDC    A,#HIGH ZhkKeyBuf
8092B6 F583              MOV     DPH,A
8092B8 74FF              MOV     A,#0FFH
8092BA F0                MOVX    @DPTR,A
   64: 	if ( ZhkKeyBufPtr > 0 ) ZhkKeyBufPtr --;
8092BB 902DEC            MOV     DPTR,#ZhkKeyBufPtr
8092BE E0                MOVX    A,@DPTR
8092BF D3                SETB    C
8092C0 9400              SUBB    A,#00H
8092C2 4003              JC      ?C0009?KEY
8092C4 E0                MOVX    A,@DPTR
8092C5 14                DEC     A
8092C6 F0                MOVX    @DPTR,A
8092C7         ?C0009?KEY:
   65: 	if ( ch != KEY_NULL ) Beep();
8092C7 E529              MOV     A,ch
8092C9 F4                CPL     A
8092CA 6005              JZ      ?C0010?KEY
8092CC A5128096C2        ECALL   Beep
8092D1         ?C0010?KEY:
   66: 	return ch;
8092D1 AF29              MOV     R7,ch
   67: }
8092D3         ?C0005?KEY:
8092D3 A522              ERET    
----- FUNCTION GetKey (END) -------


----- FUNCTION _ChooseReturn (BEGIN) -----
 FILE: 'devicecheck.c'
   82: u_char ChooseReturn( u_char *str )
   83: {	
8092D5 90175A            MOV     DPTR,#str
8092D8 A5128007B6        ECALL   ?C?PSTXDATA
   84: 	u_char xdata MyKey = 0;
   85: 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 334


8092DD E4                CLR     A
8092DE 90175D            MOV     DPTR,#MyKey
8092E1 F0                MOVX    @DPTR,A
   86: 	ClearKey();	
8092E2 A5128087A8        ECALL   ClearKey
   87: 	//显示字符	
   88: 	DisplayInfo( 0, 0 , str );
8092E7 90175A            MOV     DPTR,#str
8092EA A5128007AC        ECALL   ?C?PLDXDATA
8092EF E4                CLR     A
8092F0 FD                MOV     R5,A
8092F1 FF                MOV     R7,A
8092F2 A51280D14F        ECALL   _DisplayInfo
   89: #ifdef _CHINA_
   90: 	DisplayStr( 0, 1, 1, "确定Enter 取消Cancel", 20 );
   91: #else
   92: 	DisplayStr( 0, 1, 1, "    Enter  Cancel", 17 );
8092F7 D21A              SETB    ?_DisplayStr?BIT
8092F9 7B80              MOV     R3,#BYTE2 0800CFEH
8092FB 7A0C              MOV     R2,#HIGH 0800CFEH
8092FD 79FE              MOV     R1,#LOW 0800CFEH
8092FF 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
809302 A5128007B6        ECALL   ?C?PSTXDATA
809307 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80930A 7411              MOV     A,#011H
80930C F0                MOVX    @DPTR,A
80930D 7D01              MOV     R5,#01H
80930F E4                CLR     A
809310 FF                MOV     R7,A
809311 A512808062        ECALL   _DisplayStr
   93: #endif
   94:     
   95: 	//等待选择
   96: 	SgwSecTimer= 6;
809316 751E06            MOV     SgwSecTimer,#06H
809319         ?C0001?DEVICECHECK:
   97: 	while( SgwSecTimer )
809319 E51E              MOV     A,SgwSecTimer
80931B 6023              JZ      ?C0002?DEVICECHECK
   98: 	{
   99: 		WaitForWork( 50, NULL ); 
80931D E4                CLR     A
80931E 7F32              MOV     R7,#032H
809320 FE                MOV     R6,A
809321 A512807B35        ECALL   ?L?COM000D
  100: 		MyKey = GetKey();		
809326 A512809275        ECALL   GetKey
80932B 90175D            MOV     DPTR,#MyKey
80932E EF                MOV     A,R7
80932F F0                MOVX    @DPTR,A
  101: 		switch ( MyKey )
809330 24E5              ADD     A,#0E5H
809332 6008              JZ      ?C0006?DEVICECHECK
809334 240E              ADD     A,#0EH
809336 70E1              JNZ     ?C0001?DEVICECHECK
  102: 	 	{
  103: 			case KEY_SUBMIT:				
809338         ?C0004?DEVICECHECK:
  104: 				return 0 ;			
809338 7F00              MOV     R7,#00H
80933A 8006              SJMP    ?C0005?DEVICECHECK
  105: 			case KEY_CANCEL:				
80933C         ?C0006?DEVICECHECK:
  106: 				return 1 ;					
80933C 7F01              MOV     R7,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 335


80933E 8002              SJMP    ?C0005?DEVICECHECK
  107: 			default:
  108: 				continue;
  109: 		}	
  110: 	}
809340         ?C0002?DEVICECHECK:
  111: 	return 2;
809340 7F02              MOV     R7,#02H
  112: }
809342         ?C0005?DEVICECHECK:
809342 A522              ERET    
----- FUNCTION _ChooseReturn (END) -------


----- FUNCTION GetCoin (BEGIN) -----
 FILE: 'IOInput.c'
  669: 	uint GetCoin( void )
  670: 	{
  671: 		uint data ch=0;	
  672: 		EA = 0;
809344 E4                CLR     A
809345 F528              MOV     ch,A
809347 F529              MOV     ch+01H,A
  673: 		if( ZhkCoiner.Count >= 1 )
809349 C2AF              CLR     EA
  674: 		{
80934B 902DD0            MOV     DPTR,#ZhkCoiner+01H
80934E E0                MOVX    A,@DPTR
80934F FF                MOV     R7,A
809350 C3                CLR     C
809351 9401              SUBB    A,#01H
809353 401B              JC      ?C0120?IOINPUT
  675: 		    //ch = ZhkCoiner.Count * 25;
  676:             ch = ZhkCoiner.Count * SystemParameter.coinValue[0];
809355 7E00              MOV     R6,#00H
809357 900457            MOV     DPTR,#SystemParameter+039H
80935A E0                MOVX    A,@DPTR
80935B FC                MOV     R4,A
80935C A3                INC     DPTR
80935D E0                MOVX    A,@DPTR
80935E FD                MOV     R5,A
80935F A512800559        ECALL   ?C?IMUL
809364 8E28              MOV     ch,R6
809366 8F29              MOV     ch+01H,R7
  677: 	    	ZhkCoiner.Count = 0;
809368 E4                CLR     A
809369 902DD0            MOV     DPTR,#ZhkCoiner+01H
80936C F0                MOVX    @DPTR,A
  678: 		}
80936D 029448            LJMP    ?C0121?IOINPUT
809370         ?C0120?IOINPUT:
  679: 		else if( ZhkCoiner.CountChn1 >= 1 )
809370 902DD1            MOV     DPTR,#ZhkCoiner+02H
809373 E0                MOVX    A,@DPTR
809374 FF                MOV     R7,A
809375 C3                CLR     C
809376 9401              SUBB    A,#01H
809378 401B              JC      ?C0122?IOINPUT
  680: 		{
  681: 		    //ch = ZhkCoiner.CountChn1 * 1;
  682: 			//ch = ZhkCoiner.CountChn1 * CoinSet.Line1;
  683:             ch = ZhkCoiner.CountChn1 * SystemParameter.coinValue[0];
80937A 7E00              MOV     R6,#00H
80937C 900457            MOV     DPTR,#SystemParameter+039H
80937F E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 336


809380 FC                MOV     R4,A
809381 A3                INC     DPTR
809382 E0                MOVX    A,@DPTR
809383 FD                MOV     R5,A
809384 A512800559        ECALL   ?C?IMUL
809389 8E28              MOV     ch,R6
80938B 8F29              MOV     ch+01H,R7
  684: 			ZhkCoiner.CountChn1 = 0;
80938D E4                CLR     A
80938E 902DD1            MOV     DPTR,#ZhkCoiner+02H
809391 F0                MOVX    @DPTR,A
  685: 		}
809392 029448            LJMP    ?C0121?IOINPUT
809395         ?C0122?IOINPUT:
  686: 	    else if( ZhkCoiner.CountChn2 >= 1 )
809395 902DD2            MOV     DPTR,#ZhkCoiner+03H
809398 E0                MOVX    A,@DPTR
809399 FF                MOV     R7,A
80939A C3                CLR     C
80939B 9401              SUBB    A,#01H
80939D 401B              JC      ?C0124?IOINPUT
  687: 		{
  688: 		    //ch = ZhkCoiner.CountChn2 * 2;
  689: 			//ch = ZhkCoiner.CountChn2 * CoinSet.Line2;
  690:             ch = ZhkCoiner.CountChn2 * SystemParameter.coinValue[1];
80939F 7E00              MOV     R6,#00H
8093A1 900459            MOV     DPTR,#SystemParameter+03BH
8093A4 E0                MOVX    A,@DPTR
8093A5 FC                MOV     R4,A
8093A6 A3                INC     DPTR
8093A7 E0                MOVX    A,@DPTR
8093A8 FD                MOV     R5,A
8093A9 A512800559        ECALL   ?C?IMUL
8093AE 8E28              MOV     ch,R6
8093B0 8F29              MOV     ch+01H,R7
  691: 			ZhkCoiner.CountChn2 = 0;
8093B2 E4                CLR     A
8093B3 902DD2            MOV     DPTR,#ZhkCoiner+03H
8093B6 F0                MOVX    @DPTR,A
  692: 		}
8093B7 029448            LJMP    ?C0121?IOINPUT
8093BA         ?C0124?IOINPUT:
  693: 		else if( ZhkCoiner.CountChn3 >= 1 )
8093BA 902DD3            MOV     DPTR,#ZhkCoiner+04H
8093BD E0                MOVX    A,@DPTR
8093BE FF                MOV     R7,A
8093BF C3                CLR     C
8093C0 9401              SUBB    A,#01H
8093C2 401A              JC      ?C0126?IOINPUT
  694: 		{
  695: 		    //ch = ZhkCoiner.CountChn3 * 5;
  696: 			//ch = ZhkCoiner.CountChn3 * CoinSet.Line3;
  697:             ch = ZhkCoiner.CountChn3 * SystemParameter.coinValue[2];
8093C4 7E00              MOV     R6,#00H
8093C6 90045B            MOV     DPTR,#SystemParameter+03DH
8093C9 E0                MOVX    A,@DPTR
8093CA FC                MOV     R4,A
8093CB A3                INC     DPTR
8093CC E0                MOVX    A,@DPTR
8093CD FD                MOV     R5,A
8093CE A512800559        ECALL   ?C?IMUL
8093D3 8E28              MOV     ch,R6
8093D5 8F29              MOV     ch+01H,R7
  698: 			ZhkCoiner.CountChn3 = 0;
8093D7 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 337


8093D8 902DD3            MOV     DPTR,#ZhkCoiner+04H
8093DB F0                MOVX    @DPTR,A
  699: 		}
8093DC 806A              SJMP    ?C0121?IOINPUT
8093DE         ?C0126?IOINPUT:
  700: 		else if( ZhkCoiner.CountChn4 >= 1 )
8093DE 902DD4            MOV     DPTR,#ZhkCoiner+05H
8093E1 E0                MOVX    A,@DPTR
8093E2 FF                MOV     R7,A
8093E3 C3                CLR     C
8093E4 9401              SUBB    A,#01H
8093E6 401A              JC      ?C0128?IOINPUT
  701: 		{
  702: 		    //ch = ZhkCoiner.CountChn4 * SystemParameter.Exchange;    //30,
  703: 			//ch = ZhkCoiner.CountChn4 * CoinSet.Line4;
  704:             ch = ZhkCoiner.CountChn4 * SystemParameter.coinValue[3];
8093E8 7E00              MOV     R6,#00H
8093EA 90045D            MOV     DPTR,#SystemParameter+03FH
8093ED E0                MOVX    A,@DPTR
8093EE FC                MOV     R4,A
8093EF A3                INC     DPTR
8093F0 E0                MOVX    A,@DPTR
8093F1 FD                MOV     R5,A
8093F2 A512800559        ECALL   ?C?IMUL
8093F7 8E28              MOV     ch,R6
8093F9 8F29              MOV     ch+01H,R7
  705: 			ZhkCoiner.CountChn4 = 0;
8093FB E4                CLR     A
8093FC 902DD4            MOV     DPTR,#ZhkCoiner+05H
8093FF F0                MOVX    @DPTR,A
  706: 		}
809400 8046              SJMP    ?C0121?IOINPUT
809402         ?C0128?IOINPUT:
  707: 		else if( ZhkCoiner.CountChn5 >= 1 )
809402 902DD5            MOV     DPTR,#ZhkCoiner+06H
809405 E0                MOVX    A,@DPTR
809406 FF                MOV     R7,A
809407 C3                CLR     C
809408 9401              SUBB    A,#01H
80940A 401A              JC      ?C0130?IOINPUT
  708: 		{
  709: 		    //ch = ZhkCoiner.CountChn5 * SystemParameter.Exchange;    //60,
  710: 			//ch = ZhkCoiner.CountChn5 * CoinSet.Line5;
  711:             ch = ZhkCoiner.CountChn5 * SystemParameter.coinValue[4];
80940C 7E00              MOV     R6,#00H
80940E 90045F            MOV     DPTR,#SystemParameter+041H
809411 E0                MOVX    A,@DPTR
809412 FC                MOV     R4,A
809413 A3                INC     DPTR
809414 E0                MOVX    A,@DPTR
809415 FD                MOV     R5,A
809416 A512800559        ECALL   ?C?IMUL
80941B 8E28              MOV     ch,R6
80941D 8F29              MOV     ch+01H,R7
  712: 			ZhkCoiner.CountChn5 = 0;
80941F E4                CLR     A
809420 902DD5            MOV     DPTR,#ZhkCoiner+06H
809423 F0                MOVX    @DPTR,A
  713: 		}
809424 8022              SJMP    ?C0121?IOINPUT
809426         ?C0130?IOINPUT:
  714: 		else if( ZhkCoiner.CountChn6 >= 1 )
809426 902DD6            MOV     DPTR,#ZhkCoiner+07H
809429 E0                MOVX    A,@DPTR
80942A FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 338


80942B C3                CLR     C
80942C 9401              SUBB    A,#01H
80942E 4018              JC      ?C0121?IOINPUT
  715: 		{
  716: 		    //ch = ZhkCoiner.CountChn6 * SystemParameter.Exchange;
  717: 			//ch = ZhkCoiner.CountChn6 * CoinSet.Line6;
  718:             ch = ZhkCoiner.CountChn6 * SystemParameter.coinValue[5];
809430 7E00              MOV     R6,#00H
809432 900461            MOV     DPTR,#SystemParameter+043H
809435 E0                MOVX    A,@DPTR
809436 FC                MOV     R4,A
809437 A3                INC     DPTR
809438 E0                MOVX    A,@DPTR
809439 FD                MOV     R5,A
80943A A512800559        ECALL   ?C?IMUL
80943F 8E28              MOV     ch,R6
809441 8F29              MOV     ch+01H,R7
  719: 			ZhkCoiner.CountChn6 = 0;
809443 E4                CLR     A
809444 902DD6            MOV     DPTR,#ZhkCoiner+07H
809447 F0                MOVX    @DPTR,A
  720: 		}
809448         ?C0121?IOINPUT:
  721: 		EA = 1;
809448 D2AF              SETB    EA
  722: 		return ch;          
80944A AE28              MOV     R6,ch
80944C AF29              MOV     R7,ch+01H
  723: 	}
80944E         ?C0133?IOINPUT:
80944E A522              ERET    
----- FUNCTION GetCoin (END) -------


----- FUNCTION ?L?COM003E (BEGIN) -----
809450 A512807ADC        ECALL   CoreProcessCycle
----- FUNCTION IsInsertBill (BEGIN) -----
 FILE: 'mainflow.c'
 1782: u_char  IsInsertBill()
 1783: {	
 1784: 	u_int xdata CoinSum = 0;
 1785: 	u_char xdata flag = 0;
809455 E4                CLR     A
809456 901596            MOV     DPTR,#CoinSum
809459 F0                MOVX    @DPTR,A
80945A A3                INC     DPTR
80945B F0                MOVX    @DPTR,A
 1786: 
80945C A3                INC     DPTR
80945D F0                MOVX    @DPTR,A
 1787: //	Trace( "\n IsInsertBill" );	
 1788: 	if( SystemParameter.BillNo == 1 )
80945E 900425            MOV     DPTR,#SystemParameter+07H
809461 E0                MOVX    A,@DPTR
809462 B40117            CJNE    A,#01H,?C0400?MAINFLOW
 1789: 	{
 1790: 		if ( CasherIsCashIn())
809465 A5128096F1        ECALL   CasherIsCashIn
80946A EF                MOV     A,R7
80946B 6006              JZ      ?C0401?MAINFLOW
 1791: 		{
 1792: 			Trace( "\n Casher" ); 
 1793: 			flag = 1;
80946D 901598            MOV     DPTR,#flag
809470 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 339


809472 F0                MOVX    @DPTR,A
 1794: 		}
809473         ?C0401?MAINFLOW:
 1795: 		WaitForWork( 10, NULL );
809473 E4                CLR     A
809474 7F0A              MOV     R7,#0AH
809476 FE                MOV     R6,A
809477 A512807B35        ECALL   ?L?COM000D
 1796: 	}
80947C         ?C0400?MAINFLOW:
 1797: 
 1798: 	CoinSum = GetCoin();
80947C A512809344        ECALL   GetCoin
809481 901596            MOV     DPTR,#CoinSum
809484 EE                MOV     A,R6
809485 F0                MOVX    @DPTR,A
809486 A3                INC     DPTR
809487 EF                MOV     A,R7
809488 F0                MOVX    @DPTR,A
809489         ?C0402?MAINFLOW:
 1799: 	while ( CoinSum ) 
809489 901596            MOV     DPTR,#CoinSum
80948C E0                MOVX    A,@DPTR
80948D 7002              JNZ     ?C0998?MAINFLOW
80948F A3                INC     DPTR
809490 E0                MOVX    A,@DPTR
809491         ?C0998?MAINFLOW:
809491 7003              JNZ     $ + 5H
809493 029519            LJMP    ?C0403?MAINFLOW
 1800: 	{	
 1801: 	#ifdef _COIN_INPUT_PARALLEL	
 1802: 		CurrentPayed += CoinSum ;
809496 901596            MOV     DPTR,#CoinSum
809499 E0                MOVX    A,@DPTR
80949A FE                MOV     R6,A
80949B A3                INC     DPTR
80949C E0                MOVX    A,@DPTR
80949D FF                MOV     R7,A
80949E 900B1F            MOV     DPTR,#CurrentPayed
8094A1 EE                MOV     A,R6
8094A2 8FF0              MOV     B,R7
8094A4 A512800600        ECALL   ?C?IILDX
 1803: 		TradeCounter.TrueCurrencySum += CoinSum;
8094A9 900AEC            MOV     DPTR,#TradeCounter
8094AC A51280073E        ECALL   ?C?LLDXDATA0
8094B1 E4                CLR     A
8094B2 FC                MOV     R4,A
8094B3 FD                MOV     R5,A
8094B4 A51280062E        ECALL   ?C?LADD
8094B9 900AEC            MOV     DPTR,#TradeCounter
8094BC A512800792        ECALL   ?C?LSTXDATA
 1804: 		TradeCounter.CoinSum += CoinSum;
8094C1 900AF4            MOV     DPTR,#TradeCounter+08H
8094C4 A51280073E        ECALL   ?C?LLDXDATA0
8094C9 901596            MOV     DPTR,#CoinSum
8094CC E0                MOVX    A,@DPTR
8094CD FE                MOV     R6,A
8094CE A3                INC     DPTR
8094CF E0                MOVX    A,@DPTR
8094D0 FF                MOV     R7,A
8094D1 E4                CLR     A
8094D2 FC                MOV     R4,A
8094D3 FD                MOV     R5,A
8094D4 A51280062E        ECALL   ?C?LADD
8094D9 900AF4            MOV     DPTR,#TradeCounter+08H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 340


8094DC A512800792        ECALL   ?C?LSTXDATA
 1805: 	#else
 1806: 		CurrentPayed += CoinSum * COINMULTIPLE ;
 1807: 		TradeCounter.TrueCurrencySum += CoinSum * COINMULTIPLE;
 1808: 		TradeCounter.CoinSum += CoinSum * COINMULTIPLE;
 1809: 	#endif		
 1810: 		SchedulerProcess();
8094E1 A512809545        ECALL   SchedulerProcess
 1811: 		CoinSum = GetCoin();
8094E6 A512809344        ECALL   GetCoin
8094EB 901596            MOV     DPTR,#CoinSum
8094EE EE                MOV     A,R6
8094EF F0                MOVX    @DPTR,A
8094F0 A3                INC     DPTR
8094F1 EF                MOV     A,R7
8094F2 F0                MOVX    @DPTR,A
 1812: 		if( QueryFlag == 1 )
8094F3 30271A            JNB     QueryFlag,?C0404?MAINFLOW
 1813: 		{
 1814: 			DisplayCursorState( 0, 1, 1, 0, 1 );
8094F6 D21A              SETB    ?_DisplayCursorState?BIT
8094F8 E4                CLR     A
8094F9 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8094FC F0                MOVX    @DPTR,A
8094FD D21B              SETB    ?_DisplayCursorState?BIT+01H
8094FF 7D01              MOV     R5,#01H
809501 FF                MOV     R7,A
809502 A51280817F        ECALL   _DisplayCursorState
 1815: 			QueryFlag = 0;
809507 C227              CLR     QueryFlag
 1816: 			QueryTimer = 0;
809509 E4                CLR     A
80950A F514              MOV     QueryTimer,A
 1817: 			CurrentStockCode = 0;
80950C 900B22            MOV     DPTR,#CurrentStockCode
80950F F0                MOVX    @DPTR,A
 1818: 		}
809510         ?C0404?MAINFLOW:
 1819: 		flag = 1;
809510 901598            MOV     DPTR,#flag
809513 7401              MOV     A,#01H
809515 F0                MOVX    @DPTR,A
 1820: 	}
809516 029489            LJMP    ?C0402?MAINFLOW
809519         ?C0403?MAINFLOW:
 1821: 			
 1822: 	WaitForWork( 10, NULL );
809519 E4                CLR     A
80951A 7F0A              MOV     R7,#0AH
80951C FE                MOV     R6,A
80951D A512807B35        ECALL   ?L?COM000D
 1823: 	if( flag == 0 )
809522 901598            MOV     DPTR,#flag
809525 E0                MOVX    A,@DPTR
809526 7F01              MOV     R7,#01H
809528 7001              JNZ     ?C0405?MAINFLOW
 1824: 	{	
 1825: //		Trace( "\n NOT Bill Insert" );
 1826: 		return 0;
80952A FF                MOV     R7,A
 1827: 	}
80952B         ?C0405?MAINFLOW:
 1828: 	else
 1829: 	{
 1830: //		Trace( "\n Have Bill Insert" );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 341


 1831: 		return	1;
 1832: 	}
 1833: }
80952B         ?C0406?MAINFLOW:
80952B A522              ERET    
----- FUNCTION IsInsertBill (END) -------


----- FUNCTION ?L?COM0020 (BEGIN) -----
80952D E0                MOVX    A,@DPTR
80952E FE                MOV     R6,A
80952F A3                INC     DPTR
809530 E0                MOVX    A,@DPTR
809531 FF                MOV     R7,A
809532 E4                CLR     A
809533 FC                MOV     R4,A
809534 FD                MOV     R5,A
809535 A51280062E        ECALL   ?C?LADD
80953A 900AF4            MOV     DPTR,#TradeCounter+08H
80953D A512800792        ECALL   ?C?LSTXDATA
809542 751690            MOV     LzjMSecTimer,#090H
----- FUNCTION SchedulerProcess (BEGIN) -----
 FILE: 'scheduler.c'
  198: uchar SchedulerProcess( void )
  199: {
  200: 	struct DEVICE xdata* data CurrentDevice;
  201: 
  202: #ifndef _DEBUG_NO_MOBILE
  203: 	if( IsPressMobile == 1 )
809545 9023B4            MOV     DPTR,#IsPressMobile
809548 E0                MOVX    A,@DPTR
809549 B40105            CJNE    A,#01H,?C0005?SCHEDULER
  204: 		ZhkMobileProcess();
80954C A512813218        ECALL   ZhkMobileProcess
809551         ?C0005?SCHEDULER:
  205: #endif	
  206: 	//Trace( "SchedulerRouteDevice\n" );
  207: 	// 分析当前任务关联的设备
  208: 	switch( ZhkChkAddr( CurrentTask.Id ) )
809551 9028A6            MOV     DPTR,#CurrentTask+01H
809554 E0                MOVX    A,@DPTR
809555 FF                MOV     R7,A
809556 A5128138DD        ECALL   _ZhkChkAddr
80955B EF                MOV     A,R7
80955C 24F9              ADD     A,#0F9H
80955E 6013              JZ      ?C0008?SCHEDULER
809560 14                DEC     A
809561 6018              JZ      ?C0009?SCHEDULER
809563 24FB              ADD     A,#0FBH
809565 603A              JZ      ?C0015?SCHEDULER
809567 240B              ADD     A,#0BH
809569 703E              JNZ     ?C0016?SCHEDULER
  209: 	{
  210: 	case EQUIP_CASHER:
80956B         ?C0007?SCHEDULER:
  211: 		CurrentDevice = &Casher;
80956B 752823            MOV     CurrentDevice,#HIGH Casher
80956E 7529CB            MOV     CurrentDevice+01H,#LOW Casher
  212: 		break;
809571 803B              SJMP    ?C0006?SCHEDULER
  213: //	case EQUIP_COINER:
  214: //		CurrentDevice = &Coiner;
  215: //		break;
  216: 	case EQUIP_LCD:
809573         ?C0008?SCHEDULER:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 342


  217: 		CurrentDevice = &Lcd;
809573 752823            MOV     CurrentDevice,#HIGH Lcd
809576 752960            MOV     CurrentDevice+01H,#LOW Lcd
  218: 		break;
809579 8033              SJMP    ?C0006?SCHEDULER
  219: //	case EQUIP_HUB:
  220: //		CurrentDevice = &Hub;
  221: //		break;
  222: 	case EQUIP_HOPPER:		
80957B         ?C0009?SCHEDULER:
  223: 		switch( CurrentTask.Id - ID_HOPPER1 )
80957B 9028A6            MOV     DPTR,#CurrentTask+01H
80957E E0                MOVX    A,@DPTR
80957F 14                DEC     A
809580 600F              JZ      ?C0012?SCHEDULER
809582 14                DEC     A
809583 6014              JZ      ?C0013?SCHEDULER
809585 2402              ADD     A,#02H
809587 7020              JNZ     ?C0325?SCHEDULER
  224: 		{
  225: 		case 0:
809589         ?C0011?SCHEDULER:
  226: 			CurrentDevice = &Hopper1;
809589 752823            MOV     CurrentDevice,#HIGH Hopper1
80958C 752975            MOV     CurrentDevice+01H,#LOW Hopper1
  227: 			break;
80958F 801D              SJMP    ?C0006?SCHEDULER
  228: 		case 1:
809591         ?C0012?SCHEDULER:
  229: 			CurrentDevice = &Hopper2;
809591 752823            MOV     CurrentDevice,#HIGH Hopper2
809594 75298A            MOV     CurrentDevice+01H,#LOW Hopper2
  230: 			break;
809597 8015              SJMP    ?C0006?SCHEDULER
  231: 		case 2:
809599         ?C0013?SCHEDULER:
  232: 			CurrentDevice = &Hopper3;
809599 752823            MOV     CurrentDevice,#HIGH Hopper3
80959C 75299F            MOV     CurrentDevice+01H,#LOW Hopper3
  233: 			break;
80959F 800D              SJMP    ?C0006?SCHEDULER
  234: 		default:
  235: 			ZhkSchedulerState = TASK_NULL;
  236: 		}
  237: 		break;	
  238: 	case EQUIP_CHANNEL:
8095A1         ?C0015?SCHEDULER:
  239: 		CurrentDevice = &Channel;
8095A1 752823            MOV     CurrentDevice,#HIGH Channel
8095A4 7529B5            MOV     CurrentDevice+01H,#LOW Channel
  240: 		break;
8095A7 8005              SJMP    ?C0006?SCHEDULER
  241: 	default:
8095A9         ?C0016?SCHEDULER:
  242: 		ZhkSchedulerState = TASK_NULL;
8095A9         
8095A9 E4                CLR     A
8095AA 9023CA            MOV     DPTR,#ZhkSchedulerState
8095AD F0                MOVX    @DPTR,A
  243: 	}	
8095AE         ?C0006?SCHEDULER:
  244: 	// 设备调度流程控制
  245: 	switch( ZhkSchedulerState )
8095AE 9023CA            MOV     DPTR,#ZhkSchedulerState
8095B1 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 343


8095B2 14                DEC     A
8095B3 24FB              ADD     A,#0FBH
8095B5 500B              JNC     ?C0023?SCHEDULER
8095B7 2406              ADD     A,#06H
8095B9 705A              JNZ     ?C0033?SCHEDULER
  246: 	{
  247: 	case TASK_NULL:
8095BB         ?C0018?SCHEDULER:
  248: 		ZhkNullTask();
8095BB A512806EEE        ECALL   ZhkNullTask
  249: 		break;
8095C0 8058              SJMP    ?C0017?SCHEDULER
  250: 	case TASK_REDAY:
  251: 	case TASK_WAIT:
  252: 	case TASK_REWAIT:
  253: 	case TASK_ERROR:
  254: 	case TASK_FINISH:
8095C2         ?C0023?SCHEDULER:
  255: 		if ( CurrentDevice == -1 ) 
8095C2 AE28              MOV     R6,CurrentDevice
8095C4 AF29              MOV     R7,CurrentDevice+01H
8095C6 BEFF08            CJNE    R6,#0FFH,?C0024?SCHEDULER
8095C9 BFFF05            CJNE    R7,#0FFH,?C0024?SCHEDULER
  256: 			ZhkSchedulerState = TASK_NULL;
8095CC E4                CLR     A
8095CD 9023CA            MOV     DPTR,#ZhkSchedulerState
8095D0 F0                MOVX    @DPTR,A
8095D1         ?C0024?SCHEDULER:
  257: 		switch( CurrentTask.Id )
8095D1 9028A6            MOV     DPTR,#CurrentTask+01H
8095D4 E0                MOVX    A,@DPTR
8095D5 24FD              ADD     A,#0FDH
8095D7 500E              JNC     ?C0028?SCHEDULER
8095D9 24FA              ADD     A,#0FAH
8095DB 6015              JZ      ?C0029?SCHEDULER
8095DD 24FC              ADD     A,#0FCH
8095DF 601C              JZ      ?C0030?SCHEDULER
8095E1 24F8              ADD     A,#0F8H
8095E3 6023              JZ      ?C0031?SCHEDULER
8095E5 802C              SJMP    ?C0032?SCHEDULER
  258: 		{
  259: 		case ID_HOPPER1:
  260: 		case ID_HOPPER2:
  261: 		case ID_HOPPER3:
8095E7         ?C0028?SCHEDULER:
  262: 			ZhkHopperTask( &CurrentTask );
8095E7 7E28              MOV     R6,#HIGH CurrentTask
8095E9 7FA5              MOV     R7,#LOW CurrentTask
8095EB A5128115BF        ECALL   _ZhkHopperTask
  263: 	//		Trace( "\n ZhkSchedulerState = %bu", ZhkSchedulerState );
  264: 			break;
8095F0 8028              SJMP    ?C0017?SCHEDULER
  265: 		case ID_LCD:
8095F2         ?C0029?SCHEDULER:
  266: 			ZhkLcdTask( &CurrentTask );
8095F2 7E28              MOV     R6,#HIGH CurrentTask
8095F4 7FA5              MOV     R7,#LOW CurrentTask
8095F6 A5128117A3        ECALL   _ZhkLcdTask
  267: 			break;		
8095FB 801D              SJMP    ?C0017?SCHEDULER
  268: 		case ID_CASHER:
8095FD         ?C0030?SCHEDULER:
  269: 			ZhkCasherTask( &CurrentTask );
8095FD 7E28              MOV     R6,#HIGH CurrentTask
8095FF 7FA5              MOV     R7,#LOW CurrentTask
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 344


809601 A51281222F        ECALL   _ZhkCasherTask
  270: 			break;	
809606 8012              SJMP    ?C0017?SCHEDULER
  271: //		case ID_HUB:
  272: //			ZhkHubTask( &CurrentTask );
  273: //			break;
  274: //		case ID_COINER1:
  275: //			CoinerTask( &CurrentTask );
  276: //			break;
  277: 		case ID_CHANNEL:
809608         ?C0031?SCHEDULER:
  278: 			ZhkChannelTask( &CurrentTask );
809608 7E28              MOV     R6,#HIGH CurrentTask
80960A 7FA5              MOV     R7,#LOW CurrentTask
80960C A512811DDF        ECALL   _ZhkChannelTask
  279: 			break;		
809611 8007              SJMP    ?C0017?SCHEDULER
  280: 		default:
809613         ?C0032?SCHEDULER:
  281: 			ZhkSchedulerState = TASK_NULL; 
  282: 		}
  283: 		break;
809613 8000              SJMP    ?C0326?SCHEDULER
  284: 	default:
809615         ?C0033?SCHEDULER:
  285: 		ZhkSchedulerState = TASK_NULL; 
809615         
809615 E4                CLR     A
809616 9023CA            MOV     DPTR,#ZhkSchedulerState
809619 F0                MOVX    @DPTR,A
  286: 		break;
  287: 	}
80961A         ?C0017?SCHEDULER:
  288: /*	if( ( AlarmTimer == 0 ) && ( MaintFlag == 0 ) )
  289: 	{
  290: 		if( ( IfShakeAlarm() == 1 ) && ( AlarmFlag == 0 ) )
  291: 		{
  292: 			Trace( "\n Have Alarm" );
  293: 			SetAlertOn();
  294: 			AlarmTimer = 30;//90秒钟
  295: 			AlarmFlag = 1;		
  296: 		}
  297: 		else if( ( AlarmFlag == 1 ) )
  298: 		{				
  299: 			SetAlertOff();
  300: 			AlarmFlag = 0;
  301: 		}
  302: 	}*/
  303: 	return ZhkSchedulerState;	
80961A 9023CA            MOV     DPTR,#ZhkSchedulerState
80961D E0                MOVX    A,@DPTR
80961E FF                MOV     R7,A
  304: }
80961F         ?C0034?SCHEDULER:
80961F A522              ERET    
----- FUNCTION SchedulerProcess (END) -------


----- FUNCTION GetOneMoneyKey (BEGIN) -----
 FILE: 'CommonFunction.c'
  239: u_char GetOneMoneyKey()
  240: {
  241: 	u_char xdata k = KEY_NULL ;
  242: 	u_char xdata m_str[2];
809621 90176F            MOV     DPTR,#k
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 345


809624 74FF              MOV     A,#0FFH
809626 F0                MOVX    @DPTR,A
  243: //	u_char xdata line[2];	
  244: 	unsigned int xdata interval = 500;   //超时时间5秒
809627 901772            MOV     DPTR,#interval
80962A 7401              MOV     A,#01H
80962C F0                MOVX    @DPTR,A
80962D A3                INC     DPTR
80962E 74F4              MOV     A,#0F4H
809630 F0                MOVX    @DPTR,A
  245: 	
  246: 	memset( m_str, 0 , sizeof (m_str ) );
809631 7E00              MOV     R6,#00H
809633 7F02              MOV     R7,#02H
809635 7D00              MOV     R5,#00H
809637 7B00              MOV     R3,#?C?XDATASEG
809639 7A17              MOV     R2,#HIGH m_str
80963B 7970              MOV     R1,#LOW m_str
80963D A5128008A6        ECALL   ?C?MEMSET
809642         ?C0054?COMMONFUNCTION:
  247: 	while( ( k == KEY_NULL ) && ( interval != 0 ) )
809642 90176F            MOV     DPTR,#k
809645 E0                MOVX    A,@DPTR
809646 B4FF30            CJNE    A,#0FFH,?C0055?COMMONFUNCTION
809649 901772            MOV     DPTR,#interval
80964C E0                MOVX    A,@DPTR
80964D 7002              JNZ     ?C0206?COMMONFUNCTION
80964F A3                INC     DPTR
809650 E0                MOVX    A,@DPTR
809651         ?C0206?COMMONFUNCTION:
809651 6026              JZ      ?C0055?COMMONFUNCTION
  248: 	{
  249: 		SchedulerProcess();
809653 A512809545        ECALL   SchedulerProcess
  250: 		WaitForWork( 50, NULL );
809658 E4                CLR     A
809659 7F32              MOV     R7,#032H
80965B FE                MOV     R6,A
80965C A512807B35        ECALL   ?L?COM000D
  251: 		k = GetKey();			
809661 A512809275        ECALL   GetKey
809666 90176F            MOV     DPTR,#k
809669 EF                MOV     A,R7
80966A F0                MOVX    @DPTR,A
  252: 		interval --;
80966B 901772            MOV     DPTR,#interval
80966E 74FF              MOV     A,#0FFH
809670 F5F0              MOV     B,A
809672 A512800600        ECALL   ?C?IILDX
  253: 	}
809677 80C9              SJMP    ?C0054?COMMONFUNCTION
809679         ?C0055?COMMONFUNCTION:
  254: 	switch( k )
809679 90176F            MOV     DPTR,#k
80967C E0                MOVX    A,@DPTR
80967D FF                MOV     R7,A
80967E 24F6              ADD     A,#0F6H
809680 5002              JNC     ?C0066?COMMONFUNCTION
809682 8029              SJMP    ?C0056?COMMONFUNCTION
  255: 	{
  256: 		case KEY_0:
  257: 		case KEY_1:
  258: 		case KEY_2:
  259: 		case KEY_3:
  260: 		case KEY_4:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 346


  261: 		case KEY_5:
  262: 		case KEY_6:
  263: 		case KEY_7:
  264: 		case KEY_8:
  265: 		case KEY_9:			
809684         ?C0066?COMMONFUNCTION:
  266: 			NumberToString( k ,  m_str , 1  );				
809684 E4                CLR     A
809685 FC                MOV     R4,A
809686 FD                MOV     R5,A
809687 FE                MOV     R6,A
809688 7B00              MOV     R3,#?C?XDATASEG
80968A 7A17              MOV     R2,#HIGH m_str
80968C 7970              MOV     R1,#LOW m_str
80968E A512811130        ECALL   ?L?COM003B
  267: 		//	sprintf( m_str,"%bu", k );
  268: 			DisplayStr( 0, 0, 0, m_str, 1 );
809693 C21A              CLR     ?_DisplayStr?BIT
809695 7B00              MOV     R3,#?C?XDATASEG
809697 7A17              MOV     R2,#HIGH m_str
809699 7970              MOV     R1,#LOW m_str
80969B 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80969E A5128007B6        ECALL   ?C?PSTXDATA
8096A3 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8096A6 7401              MOV     A,#01H
8096A8 A51280805E        ECALL   ?L?COM0007
  269: 		    break;	
  270: 	}	
8096AD         ?C0056?COMMONFUNCTION:
  271: 	if(interval == 0)
8096AD 901772            MOV     DPTR,#interval
8096B0 E0                MOVX    A,@DPTR
8096B1 7002              JNZ     ?C0207?COMMONFUNCTION
8096B3 A3                INC     DPTR
8096B4 E0                MOVX    A,@DPTR
8096B5         ?C0207?COMMONFUNCTION:
8096B5 7004              JNZ     ?C0067?COMMONFUNCTION
  272: 		return KEY_NULL;	
8096B7 7FFF              MOV     R7,#0FFH
8096B9 8005              SJMP    ?C0068?COMMONFUNCTION
8096BB         ?C0067?COMMONFUNCTION:
  273: 	return k;	
8096BB 90176F            MOV     DPTR,#k
8096BE E0                MOVX    A,@DPTR
8096BF FF                MOV     R7,A
  274: }
8096C0         ?C0068?COMMONFUNCTION:
8096C0 A522              ERET    
----- FUNCTION GetOneMoneyKey (END) -------


----- FUNCTION Beep (BEGIN) -----
 FILE: 'IOInput.c'
   66: void Beep( void )
   67: {
   68: 	ZhkBuzzerTimer = 20;
   69: 	ZhkHardBuzzerOn();
8096C2 751814            MOV     ZhkBuzzerTimer,#014H
   70: }
8096C5 A5028096CA        EJMP    ZhkHardBuzzerOn
----- FUNCTION Beep (END) -------


----- FUNCTION ZhkHardBuzzerOn (BEGIN) -----
 FILE: 'device.c'
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 347


   28: void ZhkHardBuzzerOn( void )
   29: {
   30: 	ZhkHardSramSelect();
   31: 	EA = 0;
8096CA 759008            MOV     P1,#08H
   32: 	ZhkHardIOOutputReg &= ~ BitBuzzer;
8096CD C2AF              CLR     EA
   33: 	ZhkHardNullSelect();
8096CF 534EF7            ANL     ZhkHardIOOutputReg,#0F7H
   34: 	P0 = ZhkHardIOOutputReg;
8096D2 759004            MOV     P1,#04H
   35: 	ZhkHardIOOutputSelect();
8096D5 854E80            MOV     P0,ZhkHardIOOutputReg
   36: 	ZhkHardOutputLock();
8096D8 759014            MOV     P1,#014H
   37: 	EA = 1;
8096DB 759008            MOV     P1,#08H
   38: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
8096DE D2AF              SETB    EA
   39: //	Trace( "P0State=%bxH\n" , P0State );
   40: 	
   41: }
8096E0 A522              ERET    
----- FUNCTION ZhkHardBuzzerOn (END) -------


----- FUNCTION CoinerDisable (BEGIN) -----
 FILE: 'IOInput.c'
  174: bit CoinerDisable( void )
  175: {
  176: 	ZhkCoiner.State |= 0x20;
  177: 	ZhkHardCoinerEnable();
8096E2 902DCF            MOV     DPTR,#ZhkCoiner
8096E5 E0                MOVX    A,@DPTR
8096E6 4420              ORL     A,#020H
8096E8 F0                MOVX    @DPTR,A
  178: //	ZhkCoiner.State &= ~ 0x20;
8096E9 A512809712        ECALL   ZhkHardCoinerEnable
  179: //	ZhkHardCoinerDisable();
  180: 	return 1;
8096EE D3                SETB    C
  181: }
8096EF         ?C0016?IOINPUT:
8096EF A522              ERET    
----- FUNCTION CoinerDisable (END) -------


----- FUNCTION CasherIsCashIn (BEGIN) -----
 FILE: 'scheduler.c'
 1346: uchar CasherIsCashIn( void )
 1347: {
 1348: 	return Casher.State & 0x10;
 1349: }
8096F1 9023CE            MOV     DPTR,#Casher+03H
8096F4 E0                MOVX    A,@DPTR
8096F5 5410              ANL     A,#010H
8096F7 FF                MOV     R7,A
 1350: 
8096F8         ?C0246?SCHEDULER:
8096F8 A522              ERET    
----- FUNCTION CasherIsCashIn (END) -------


----- FUNCTION ZhkHardCoinerDisable (BEGIN) -----
 FILE: 'device.c'
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 348


   55: void ZhkHardCoinerDisable( void )
   56: {
   57: 	ZhkHardSramSelect();
   58: 	EA = 0;
8096FA 759008            MOV     P1,#08H
   59: 	ZhkHardIOOutputReg &= ~ BitCoinerEn;
8096FD C2AF              CLR     EA
   60: 	ZhkHardNullSelect();
8096FF 534EEF            ANL     ZhkHardIOOutputReg,#0EFH
   61: 	P0 = ZhkHardIOOutputReg;
809702 759004            MOV     P1,#04H
   62: 	ZhkHardIOOutputSelect();
809705 854E80            MOV     P0,ZhkHardIOOutputReg
   63: 	ZhkHardOutputLock();
809708 759014            MOV     P1,#014H
   64: 	EA = 1;
80970B 759008            MOV     P1,#08H
   65: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
80970E D2AF              SETB    EA
   66: //	Trace( "P0State=%bxH\n" , P0State );
   67: 	
   68: }
809710 A522              ERET    
----- FUNCTION ZhkHardCoinerDisable (END) -------


----- FUNCTION ZhkHardCoinerEnable (BEGIN) -----
 FILE: 'device.c'
   69: void ZhkHardCoinerEnable( void )
   70: {
   71: 	ZhkHardSramSelect();
   72: 	EA = 0;
809712 759008            MOV     P1,#08H
   73: 	ZhkHardIOOutputReg |= BitCoinerEn;
809715 C2AF              CLR     EA
   74: 	ZhkHardNullSelect();
809717 434E10            ORL     ZhkHardIOOutputReg,#010H
   75: 	P0 = ZhkHardIOOutputReg;
80971A 759004            MOV     P1,#04H
   76: 	ZhkHardIOOutputSelect();
80971D 854E80            MOV     P0,ZhkHardIOOutputReg
   77: 	ZhkHardOutputLock();
809720 759014            MOV     P1,#014H
   78: 	EA = 1;
809723 759008            MOV     P1,#08H
   79: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
809726 D2AF              SETB    EA
   80: //	Trace( "P0State=%bxH\n" , P0State );
   81: }
809728 A522              ERET    
----- FUNCTION ZhkHardCoinerEnable (END) -------


----- FUNCTION ZhkIOInit (BEGIN) -----
 FILE: 'IOInput.c'
  268: 	void ZhkIOInit( void )
  269: 	{	
  270: 		ZhkHardPowerOff();
  271: 		ZhkHardBuzzerOff();
80972A A5128097E4        ECALL   ZhkHardPowerOff
  272: 		ZhkHardStatusOn();
80972F A51280979C        ECALL   ZhkHardBuzzerOff
  273: 		ZhkHardCoinerEnable();
809734 A5128097B4        ECALL   ZhkHardStatusOn
  274: 		ZhkHardSramSelect();
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 349


809739 A512809712        ECALL   ZhkHardCoinerEnable
  275: 	
80973E A51280977D        ECALL   ?L?COM0018
  276: 		DelayMs( 250 );
  277: 		DelayMs( 250 );
  278: 	//	DelayMs( 250 );
  279: 	//	DelayMs( 250 );
  280: 		ZhkHardPowerOn();
809743 A5128097CC        ECALL   ZhkHardPowerOn
  281: 		ZhkHardSramSelect();
809748 A51280977D        ECALL   ?L?COM0018
  282: 		DelayMs( 250 );
  283: 		DelayMs( 250 );
  284: 		DelayMs( 250 );
80974D A512809780        ECALL   ?L?COM0019
  285: 		DelayMs( 250 );
  286: 	//	ZhkCoiner.State = 0;
  287: 		ZhkCoiner.Count = 0;
809752 E4                CLR     A
809753 902DD0            MOV     DPTR,#ZhkCoiner+01H
809756 F0                MOVX    @DPTR,A
  288: 		ZhkCoiner.CountChn1 = 0;
809757 A3                INC     DPTR
809758 F0                MOVX    @DPTR,A
  289: 		ZhkCoiner.CountChn2 = 0;
809759 A3                INC     DPTR
80975A F0                MOVX    @DPTR,A
  290: 		ZhkCoiner.CountChn3 = 0;
80975B A3                INC     DPTR
80975C F0                MOVX    @DPTR,A
  291: 		ZhkCoiner.CountChn4 = 0;
80975D A3                INC     DPTR
80975E F0                MOVX    @DPTR,A
  292: 		ZhkCoiner.CountChn5 = 0;
80975F A3                INC     DPTR
809760 F0                MOVX    @DPTR,A
  293: 		ZhkCoiner.CountChn6 = 0;
809761 A3                INC     DPTR
809762 F0                MOVX    @DPTR,A
  294: 		///硬币器通道面值
  295: 		memset( &CoinSet, 0, sizeof(struct COINAPCCEPTOR));
809763 FE                MOV     R6,A
809764 7F0E              MOV     R7,#0EH
809766 FD                MOV     R5,A
809767 7B00              MOV     R3,#?C?XDATASEG
809769 7A2D              MOV     R2,#HIGH CoinSet
80976B 79D7              MOV     R1,#LOW CoinSet
80976D A5128008A6        ECALL   ?C?MEMSET
  296: 		ZhkModeState    = 0;
809772 E4                CLR     A
809773 902DE5            MOV     DPTR,#ZhkModeState
809776 F0                MOVX    @DPTR,A
  297: 		ZhkPowerState   = 0;
809777 A3                INC     DPTR
809778 F0                MOVX    @DPTR,A
  298: 		ZhkBuzzerTimer  = 0;
809779 F518              MOV     ZhkBuzzerTimer,A
  299: 	}
80977B A522              ERET    
----- FUNCTION ZhkIOInit (END) -------


----- FUNCTION ?L?COM0018 (BEGIN) -----
80977D 759008            MOV     P1,#08H
809780         ?L?COM0019:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 350


809780 7FFA              MOV     R7,#0FAH
809782 A512809789        ECALL   _DelayMs
809787 7FFA              MOV     R7,#0FAH
----- FUNCTION _DelayMs (BEGIN) -----
 FILE: 'common.c'
   13: void DelayMs( uchar MicroSecond )
   14: {
;---- Variable 'iCycle' assigned to Register 'R6' ----
;---- Variable 'MicroSecond' assigned to Register 'R7' ----
   15: 	uchar xdata iCycle;
   16: 
   17: 	MicroSecond ++;
809789 0F                INC     R7
80978A         ?C0004?COMMON:
   18: 	while( -- MicroSecond )
80978A 1F                DEC     R7
80978B EF                MOV     A,R7
80978C 600C              JZ      ?C0010?COMMON
   19: 	{
   20: 		iCycle = 224;
80978E 7EE0              MOV     R6,#0E0H
809790         ?C0006?COMMON:
   21: 		while( iCycle ) 
   22: 			iCycle --;
809790 DEFE              DJNZ    R6,?C0006?COMMON
809792         ?C0007?COMMON:
   23: 
   24: 		iCycle = 224;
809792 7EE0              MOV     R6,#0E0H
809794         ?C0008?COMMON:
   25: 		while( iCycle ) 
809794 EE                MOV     A,R6
809795 60F3              JZ      ?C0004?COMMON
   26: 			iCycle --;		 
809797 1E                DEC     R6
809798 80FA              SJMP    ?C0008?COMMON
   27: 	}
   28: }
80979A         ?C0010?COMMON:
80979A A522              ERET    
----- FUNCTION _DelayMs (END) -------


----- FUNCTION ZhkHardBuzzerOff (BEGIN) -----
 FILE: 'device.c'
   42: void ZhkHardBuzzerOff( void )
   43: {
   44: 	ZhkHardSramSelect();
   45: 	EA = 0;
80979C 759008            MOV     P1,#08H
   46: 	ZhkHardIOOutputReg |= BitBuzzer;
80979F C2AF              CLR     EA
   47: 	ZhkHardNullSelect();
8097A1 434E08            ORL     ZhkHardIOOutputReg,#08H
   48: 	P0 = ZhkHardIOOutputReg;
8097A4 759004            MOV     P1,#04H
   49: 	ZhkHardIOOutputSelect();
8097A7 854E80            MOV     P0,ZhkHardIOOutputReg
   50: 	ZhkHardOutputLock();
8097AA 759014            MOV     P1,#014H
   51: 	EA = 1;
8097AD 759008            MOV     P1,#08H
   52: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
8097B0 D2AF              SETB    EA
   53: //	Trace( "P0State=%bxH\n" , P0State );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 351


   54: }
8097B2 A522              ERET    
----- FUNCTION ZhkHardBuzzerOff (END) -------


----- FUNCTION ZhkHardStatusOn (BEGIN) -----
 FILE: 'device.c'
   82: void ZhkHardStatusOn( void )
   83: {
   84: 	ZhkHardSramSelect();
   85: 	EA = 0;
8097B4 759008            MOV     P1,#08H
   86: 	ZhkHardIOOutputReg &= ~ BitStatus;
8097B7 C2AF              CLR     EA
   87: 	ZhkHardNullSelect();
8097B9 534EDF            ANL     ZhkHardIOOutputReg,#0DFH
   88: 	P0 = ZhkHardIOOutputReg;
8097BC 759004            MOV     P1,#04H
   89: 	ZhkHardIOOutputSelect();
8097BF 854E80            MOV     P0,ZhkHardIOOutputReg
   90: 	ZhkHardOutputLock();
8097C2 759014            MOV     P1,#014H
   91: 	EA = 1;
8097C5 759008            MOV     P1,#08H
   92: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
8097C8 D2AF              SETB    EA
   93: //	Trace( "P0State=%bxH\n" , P0State );
   94: 	
   95: }
8097CA A522              ERET    
----- FUNCTION ZhkHardStatusOn (END) -------


----- FUNCTION ZhkHardPowerOn (BEGIN) -----
 FILE: 'device.c'
   98: void ZhkHardPowerOn( void )
   99: {
  100: 	ZhkHardSramSelect();
  101: 	EA = 0;
8097CC 759008            MOV     P1,#08H
  102: 	ZhkHardIOOutputReg &= ~ BitPowerCtrl;
8097CF C2AF              CLR     EA
  103: 	ZhkHardNullSelect();
8097D1 534EBF            ANL     ZhkHardIOOutputReg,#0BFH
  104: 	P0 = ZhkHardIOOutputReg;
8097D4 759004            MOV     P1,#04H
  105: 	ZhkHardIOOutputSelect();
8097D7 854E80            MOV     P0,ZhkHardIOOutputReg
  106: 	ZhkHardOutputLock();
8097DA 759014            MOV     P1,#014H
  107: 	EA = 1;
8097DD 759008            MOV     P1,#08H
  108: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
8097E0 D2AF              SETB    EA
  109: //	Trace( "P0State=%bxH\n" , P0State );
  110: }
8097E2 A522              ERET    
----- FUNCTION ZhkHardPowerOn (END) -------


----- FUNCTION ZhkHardPowerOff (BEGIN) -----
 FILE: 'device.c'
  112: void ZhkHardPowerOff( void )
  113: {
  114: 	ZhkHardSramSelect();
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 352


  115: 	EA = 0;
8097E4 759008            MOV     P1,#08H
  116: 	ZhkHardIOOutputReg |= BitPowerCtrl;
8097E7 C2AF              CLR     EA
  117: 	ZhkHardNullSelect();
8097E9 434E40            ORL     ZhkHardIOOutputReg,#040H
  118: 	P0 = ZhkHardIOOutputReg;
8097EC 759004            MOV     P1,#04H
  119: 	ZhkHardIOOutputSelect();
8097EF 854E80            MOV     P0,ZhkHardIOOutputReg
  120: 	ZhkHardOutputLock();
8097F2 759014            MOV     P1,#014H
  121: 	EA = 1;
8097F5 759008            MOV     P1,#08H
  122: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
8097F8 D2AF              SETB    EA
  123: //	Trace( "P0State=%bxH\n" , P0State );
  124: }
8097FA A522              ERET    
----- FUNCTION ZhkHardPowerOff (END) -------


----- FUNCTION SetOffFlag (BEGIN) -----
 FILE: 'mainflow.c'
  318: u_char SetOffFlag()
  319: {
  320: ///	Trace( "\n SetOffFlag");
  321: 	SystemStatus = 2; /* 标志设为OUT_OF_SERVICES状态 */
8097FC 9001C4            MOV     DPTR,#SystemStatus
8097FF 7402              MOV     A,#02H
809801 F0                MOVX    @DPTR,A
  322: 	DisableBillDev();	
809802 A512808FD7        ECALL   DisableBillDev
  323: 	KeyLock();
809807 A5128087F1        ECALL   KeyLock
  324: 	return 1;
80980C 7F01              MOV     R7,#01H
  325: }
80980E         ?C0067?MAINFLOW:
80980E A522              ERET    
----- FUNCTION SetOffFlag (END) -------


----- FUNCTION LogicOpen (BEGIN) -----
 FILE: 'mainflow.c'
  327: u_char LogicOpen()
  328: {
  329: //	Trace( "\n LogicOpen");
  330: 	SystemStatus = 1;	
809810 9001C4            MOV     DPTR,#SystemStatus
809813 7401              MOV     A,#01H
809815 F0                MOVX    @DPTR,A
  331: 	if( KeyLockFlag == 1 )
809816 302907            JNB     KeyLockFlag,?C0068?MAINFLOW
  332: 	{
  333: 		KeyUnLock(); /* 打开键盘，允许客户进行交易,硬币和纸币在运行过程中再打开 */
809819 A5128077AE        ECALL   KeyUnLock
  334: 		KeyLockFlag = 0;
80981E C229              CLR     KeyLockFlag
  335: 	}
809820         ?C0068?MAINFLOW:
  336: 	return 1;
809820 7F01              MOV     R7,#01H
  337: }
809822         ?C0069?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 353


809822 A522              ERET    
----- FUNCTION LogicOpen (END) -------


----- FUNCTION ?L?COM002E (BEGIN) -----
809824 A512807ADC        ECALL   CoreProcessCycle
----- FUNCTION CheckGoodsSumAndLoad (BEGIN) -----
 FILE: 'mainflow.c'
 1719: u_char CheckGoodsSumAndLoad()
 1720: {
 1721: 	u_char xdata i = 0;	
 1722: 	u_char xdata j = 0;
;---- Variable 'i' assigned to Register 'R7' ----
809829 E4                CLR     A
80982A FF                MOV     R7,A
 1723: 
80982B 901595            MOV     DPTR,#j
80982E F0                MOVX    @DPTR,A
 1724: //	Trace( "\n CheckCardSumAndLoad" );
 1725: 	for( i = 0; i < GOODSWAYNUM; i ++ )
80982F         ?C0381?MAINFLOW:
 1726: 	{
 1727: 		if(( GoodsWaySetVal[i].GoodsCurrentSum != 0 ) && ( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 ) && 
80982F 75F005            MOV     B,#05H
809832 EF                MOV     A,R7
809833 900006            MOV     DPTR,#GoodsWaySetVal+04H
809836 A51280079F        ECALL   ?C?OFFXADD
80983B E0                MOVX    A,@DPTR
80983C 6024              JZ      ?C0383?MAINFLOW
80983E 75F005            MOV     B,#05H
809841 EF                MOV     A,R7
809842 900003            MOV     DPTR,#GoodsWaySetVal+01H
809845 A51280079F        ECALL   ?C?OFFXADD
80984A E0                MOVX    A,@DPTR
80984B 540A              ANL     A,#0AH
80984D 7013              JNZ     ?C0383?MAINFLOW
80984F 75F005            MOV     B,#05H
809852 EF                MOV     A,R7
809853 900004            MOV     DPTR,#GoodsWaySetVal+02H
809856 A51280079F        ECALL   ?C?OFFXADD
80985B E0                MOVX    A,@DPTR
80985C FC                MOV     R4,A
80985D A3                INC     DPTR
80985E E0                MOVX    A,@DPTR
80985F 4C                ORL     A,R4
809860 7005              JNZ     ?C0382?MAINFLOW
 1728: 						( GoodsWaySetVal[i].Price != 0 ) )
 1729: 			break;
 1730: 	}
809862         ?C0383?MAINFLOW:
809862 0F                INC     R7
809863 EF                MOV     A,R7
809864 B440C8            CJNE    A,#040H,?C0381?MAINFLOW
809867         ?C0382?MAINFLOW:
 1731: 
 1732: 	if( i == GOODSWAYNUM )
809867 EF                MOV     A,R7
809868 6440              XRL     A,#040H
80986A 7058              JNZ     ?C0385?MAINFLOW
 1733: 	{
 1734: //		Trace( "\n HardWareErr |= 0x0080 " );
 1735: 		HardWareErr |= 0x0080;
80986C 900480            MOV     DPTR,#HardWareErr+01H
80986F E0                MOVX    A,@DPTR
809870 4480              ORL     A,#080H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 354


809872 F0                MOVX    @DPTR,A
 1736: 		SystemStatus = 1;
809873 9001C4            MOV     DPTR,#SystemStatus
809876 7401              MOV     A,#01H
809878 F0                MOVX    @DPTR,A
 1737: 		for( i = 0; i < GOODSWAYNUM; i ++ )
809879 E4                CLR     A
80987A FF                MOV     R7,A
80987B         ?C0386?MAINFLOW:
 1738: 		{
 1739: 			if( GoodsWaySetVal[i].GoodsCurrentSum != 0 ) 
80987B 75F005            MOV     B,#05H
80987E EF                MOV     A,R7
80987F 900006            MOV     DPTR,#GoodsWaySetVal+04H
809882 A51280079F        ECALL   ?C?OFFXADD
809887 E0                MOVX    A,@DPTR
809888 7005              JNZ     ?C0387?MAINFLOW
 1740: 				break;
 1741: 		}	
80988A         ?C0388?MAINFLOW:
80988A 0F                INC     R7
80988B EF                MOV     A,R7
80988C B440EC            CJNE    A,#040H,?C0386?MAINFLOW
80988F         ?C0387?MAINFLOW:
 1742: 		if( i == GOODSWAYNUM )
80988F EF                MOV     A,R7
809890 B44008            CJNE    A,#040H,?C0390?MAINFLOW
 1743: 		{
 1744: 			HardWareErr |= 0x0010;
809893 900480            MOV     DPTR,#HardWareErr+01H
809896 E0                MOVX    A,@DPTR
809897 4410              ORL     A,#010H
 1745: 			SystemStatus = 1;		
 1746: //			Trace( "\n CheckCardSumAndLoad all no goods" );
 1747: 		}
809899 8022              SJMP    ?C1044?MAINFLOW
80989B         ?C0390?MAINFLOW:
 1748: 		else
 1749: 		{
 1750: 			for( i = 0; i < GOODSWAYNUM; i ++ )
80989B E4                CLR     A
80989C FF                MOV     R7,A
80989D         ?C0392?MAINFLOW:
 1751: 			{
 1752: 				if( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 )
80989D 75F005            MOV     B,#05H
8098A0 EF                MOV     A,R7
8098A1 900003            MOV     DPTR,#GoodsWaySetVal+01H
8098A4 A51280079F        ECALL   ?C?OFFXADD
8098A9 E0                MOVX    A,@DPTR
8098AA 540A              ANL     A,#0AH
8098AC 6005              JZ      ?C0393?MAINFLOW
 1753: 					break;
 1754: 			}
8098AE         ?C0394?MAINFLOW:
8098AE 0F                INC     R7
8098AF EF                MOV     A,R7
8098B0 B440EA            CJNE    A,#040H,?C0392?MAINFLOW
8098B3         ?C0393?MAINFLOW:
 1755: 			if( i == GOODSWAYNUM )
8098B3 EF                MOV     A,R7
8098B4 B4400D            CJNE    A,#040H,?C0385?MAINFLOW
 1756: 			{			
 1757: //				Trace( "\n CheckCardSumAndLoad colnum no ok" );
 1758: 				HardWareErr |= 0x0020;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 355


8098B7 900480            MOV     DPTR,#HardWareErr+01H
8098BA E0                MOVX    A,@DPTR
8098BB 4420              ORL     A,#020H
8098BD         
8098BD F0                MOVX    @DPTR,A
 1759: 				SystemStatus = 1;
8098BE 9001C4            MOV     DPTR,#SystemStatus
8098C1 7401              MOV     A,#01H
8098C3 F0                MOVX    @DPTR,A
 1760: 			}
 1761: //			else
 1762: //				Trace( "\n CheckCardSumAndLoad colnum someone ok" );
 1763: 		}		
 1764: 	}
8098C4         ?C0385?MAINFLOW:
 1765: 
 1766: 	if( HardWareErr == 0 )	
8098C4 90047F            MOV     DPTR,#HardWareErr
8098C7 E0                MOVX    A,@DPTR
8098C8 7002              JNZ     ?C0997?MAINFLOW
8098CA A3                INC     DPTR
8098CB E0                MOVX    A,@DPTR
8098CC         ?C0997?MAINFLOW:
8098CC 7009              JNZ     ?C0397?MAINFLOW
 1767: 	{
 1768: 		LogicOpen();
8098CE A512809810        ECALL   LogicOpen
 1769: 		return 0;
8098D3 7F00              MOV     R7,#00H
8098D5 8002              SJMP    ?C0398?MAINFLOW
 1770: 	}
8098D7         ?C0397?MAINFLOW:
 1771: 	else 
 1772: 	{
 1773: 		#ifndef _DEBUG_TRACE		
 1774: 			return 1;
8098D7 7F01              MOV     R7,#01H
 1775: 		#else
 1776: 			return 0;
 1777: 		#endif
 1778: 	}
 1779: }
8098D9         ?C0398?MAINFLOW:
8098D9 A522              ERET    
----- FUNCTION CheckGoodsSumAndLoad (END) -------


----- FUNCTION _Cal (BEGIN) -----
 FILE: 'mainflow.c'
  383: u_char Cal( u_int Money , u_char* m_Hopper1, u_char* m_Hopper2, u_char* m_Hopper3 )
  384: {
8098DB 9015A4            MOV     DPTR,#m_Hopper1
8098DE A5128007B6        ECALL   ?C?PSTXDATA
8098E3 9015A2            MOV     DPTR,#Money
8098E6 EE                MOV     A,R6
8098E7 F0                MOVX    @DPTR,A
8098E8 A3                INC     DPTR
8098E9 EF                MOV     A,R7
8098EA F0                MOVX    @DPTR,A
  385: 	u_char xdata m_L = 0;
  386: 	u_char xdata m_H = 0;	
8098EB E4                CLR     A
8098EC 9015AD            MOV     DPTR,#m_L
8098EF F0                MOVX    @DPTR,A
  387: 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 356


8098F0 A3                INC     DPTR
8098F1 F0                MOVX    @DPTR,A
  388: //	Trace( "\n in Cal");	
  389: //	Trace( "\n Money = %d", Money );	
  390: 
  391: 	if( Money < HopperSetList[2].price )//无法配币
8098F2 D3                SETB    C
8098F3 900AE8            MOV     DPTR,#HopperSetList+09H
8098F6 E0                MOVX    A,@DPTR
8098F7 9F                SUBB    A,R7
8098F8 900AE7            MOV     DPTR,#HopperSetList+08H
8098FB E0                MOVX    A,@DPTR
8098FC 9E                SUBB    A,R6
8098FD 4005              JC      ?C0078?MAINFLOW
  392: 		return 1;
8098FF 7F01              MOV     R7,#01H
809901 029AFB            LJMP    ?C0079?MAINFLOW
809904         ?C0078?MAINFLOW:
  393: 	
  394: 	m_L = Money / HopperSetList[0].price;			
809904 900ADF            MOV     DPTR,#HopperSetList
809907 E0                MOVX    A,@DPTR
809908 FC                MOV     R4,A
809909 A3                INC     DPTR
80990A E0                MOVX    A,@DPTR
80990B FD                MOV     R5,A
80990C 9015A2            MOV     DPTR,#Money
80990F E0                MOVX    A,@DPTR
809910 FE                MOV     R6,A
809911 A3                INC     DPTR
809912 E0                MOVX    A,@DPTR
809913 FF                MOV     R7,A
809914 A51280056C        ECALL   ?C?UIDIV
809919 9015AD            MOV     DPTR,#m_L
80991C EF                MOV     A,R7
80991D F0                MOVX    @DPTR,A
  395: 	m_H = m_L;
80991E A3                INC     DPTR
80991F F0                MOVX    @DPTR,A
  396: //	Trace("\n HopperSetList[0].HopperState = %bu", HopperSetList[0].HopperState );
  397: //	Trace("\n HopperSetList[0].HopperIndex = %bu", HopperSetList[0].HopperIndex );
  398: 	if( HopperSetList[0].HopperState == 1 )
809920 900AE2            MOV     DPTR,#HopperSetList+03H
809923 E0                MOVX    A,@DPTR
809924 6401              XRL     A,#01H
809926 7035              JNZ     ?C0080?MAINFLOW
  399: 	{
  400: 		switch( HopperSetList[0].HopperIndex )
809928 900AE1            MOV     DPTR,#HopperSetList+02H
80992B E0                MOVX    A,@DPTR
80992C 24FE              ADD     A,#0FEH
80992E 6011              JZ      ?C0083?MAINFLOW
809930 14                DEC     A
809931 6018              JZ      ?C0084?MAINFLOW
809933 2402              ADD     A,#02H
809935 704E              JNZ     ?C0085?MAINFLOW
  401: 		{
  402: 			case 1:											
809937         ?C0082?MAINFLOW:
  403: 				*m_Hopper1 = m_L;			
809937 9015AD            MOV     DPTR,#m_L
80993A E0                MOVX    A,@DPTR
80993B FF                MOV     R7,A
80993C 9015A4            MOV     DPTR,#m_Hopper1
  404: 			break;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 357


80993F 8012              SJMP    ?C1018?MAINFLOW
  405: 			case 2:			
809941         ?C0083?MAINFLOW:
  406: 				*m_Hopper2 = m_L;
809941 9015AD            MOV     DPTR,#m_L
809944 E0                MOVX    A,@DPTR
809945 FF                MOV     R7,A
809946 9015A7            MOV     DPTR,#m_Hopper2
809949         
  407: 			break;
809949 8008              SJMP    ?C1018?MAINFLOW
  408: 			case 3:				
80994B         ?C0084?MAINFLOW:
  409: 				*m_Hopper3 = m_L;
80994B 9015AD            MOV     DPTR,#m_L
80994E E0                MOVX    A,@DPTR
80994F FF                MOV     R7,A
809950 9015AA            MOV     DPTR,#m_Hopper3
809953         
809953 A5128007AC        ECALL   ?C?PLDXDATA
809958 EF                MOV     A,R7
809959 A558              EMOV    @PR0,A
  410: 			break;
80995B 8028              SJMP    ?C0085?MAINFLOW
  411: 		}
  412: 	}
80995D         ?C0080?MAINFLOW:
  413: 	else
  414: 	{
  415: 		switch( HopperSetList[0].HopperIndex )
80995D 900AE1            MOV     DPTR,#HopperSetList+02H
809960 E0                MOVX    A,@DPTR
809961 24FE              ADD     A,#0FEH
809963 600C              JZ      ?C0088?MAINFLOW
809965 14                DEC     A
809966 600E              JZ      ?C0089?MAINFLOW
809968 2402              ADD     A,#02H
80996A 7019              JNZ     ?C0085?MAINFLOW
  416: 		{
  417: 			case 1:						
80996C         ?C0087?MAINFLOW:
  418: 				*m_Hopper1 = 0;
80996C 9015A4            MOV     DPTR,#m_Hopper1
  419: 				m_H = 0;		
  420: 			break;
80996F 8008              SJMP    ?C1020?MAINFLOW
  421: 			case 2:
809971         ?C0088?MAINFLOW:
  422: 				*m_Hopper2 = 0;
809971 9015A7            MOV     DPTR,#m_Hopper2
809974         
  423: 				m_H = 0;
  424: 			break;
809974 8003              SJMP    ?C1020?MAINFLOW
  425: 			case 3:
809976         ?C0089?MAINFLOW:
  426: 				*m_Hopper3 = 0;
809976 9015AA            MOV     DPTR,#m_Hopper3
809979         
809979 A5128007AC        ECALL   ?C?PLDXDATA
80997E E4                CLR     A
80997F A558              EMOV    @PR0,A
  427: 				m_H = 0;
809981 9015AE            MOV     DPTR,#m_H
809984 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 358


  428: 			break;
  429: 		}	
  430: 	}
809985         ?C0085?MAINFLOW:
  431: 
  432: 	Money = Money - m_H * HopperSetList[0].price;			
809985 9015AE            MOV     DPTR,#m_H
809988 E0                MOVX    A,@DPTR
809989 FF                MOV     R7,A
80998A 7E00              MOV     R6,#00H
80998C 900ADF            MOV     DPTR,#HopperSetList
80998F E0                MOVX    A,@DPTR
809990 FC                MOV     R4,A
809991 A3                INC     DPTR
809992 E0                MOVX    A,@DPTR
809993 FD                MOV     R5,A
809994 A512800559        ECALL   ?C?IMUL
809999 C3                CLR     C
80999A 9015A3            MOV     DPTR,#Money+01H
80999D E0                MOVX    A,@DPTR
80999E 9F                SUBB    A,R7
80999F FF                MOV     R7,A
8099A0 9015A2            MOV     DPTR,#Money
8099A3 E0                MOVX    A,@DPTR
8099A4 9E                SUBB    A,R6
8099A5 FE                MOV     R6,A
8099A6 F0                MOVX    @DPTR,A
8099A7 A3                INC     DPTR
8099A8 EF                MOV     A,R7
8099A9 F0                MOVX    @DPTR,A
  433: 	m_H = 0;
8099AA E4                CLR     A
8099AB 9015AE            MOV     DPTR,#m_H
8099AE F0                MOVX    @DPTR,A
  434: 	m_L = 0;
8099AF 9015AD            MOV     DPTR,#m_L
8099B2 F0                MOVX    @DPTR,A
  435: 
  436: 	m_L = Money / HopperSetList[1].price;			
8099B3 900AE3            MOV     DPTR,#HopperSetList+04H
8099B6 E0                MOVX    A,@DPTR
8099B7 FC                MOV     R4,A
8099B8 A3                INC     DPTR
8099B9 E0                MOVX    A,@DPTR
8099BA FD                MOV     R5,A
8099BB A51280056C        ECALL   ?C?UIDIV
8099C0 9015AD            MOV     DPTR,#m_L
8099C3 EF                MOV     A,R7
8099C4 F0                MOVX    @DPTR,A
  437: 	m_H = m_L;
8099C5 A3                INC     DPTR
8099C6 F0                MOVX    @DPTR,A
  438: //	Trace("\n HopperSetList[1].HopperState = %bu", HopperSetList[1].HopperState );
  439: //	Trace("\n HopperSetList[1].HopperIndex = %bu", HopperSetList[1].HopperIndex );
  440: 	if( HopperSetList[1].HopperState == 1 )
8099C7 900AE6            MOV     DPTR,#HopperSetList+07H
8099CA E0                MOVX    A,@DPTR
8099CB 6401              XRL     A,#01H
8099CD 7035              JNZ     ?C0090?MAINFLOW
  441: 	{
  442: 		switch( HopperSetList[1].HopperIndex )
8099CF 900AE5            MOV     DPTR,#HopperSetList+06H
8099D2 E0                MOVX    A,@DPTR
8099D3 24FE              ADD     A,#0FEH
8099D5 6011              JZ      ?C0093?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 359


8099D7 14                DEC     A
8099D8 6018              JZ      ?C0094?MAINFLOW
8099DA 2402              ADD     A,#02H
8099DC 704E              JNZ     ?C0095?MAINFLOW
  443: 		{
  444: 			case 1:			
8099DE         ?C0092?MAINFLOW:
  445: 				*m_Hopper1 = m_L;
8099DE 9015AD            MOV     DPTR,#m_L
8099E1 E0                MOVX    A,@DPTR
8099E2 FF                MOV     R7,A
8099E3 9015A4            MOV     DPTR,#m_Hopper1
  446: 			break;
8099E6 8012              SJMP    ?C1022?MAINFLOW
  447: 			case 2:				
8099E8         ?C0093?MAINFLOW:
  448: 				*m_Hopper2 = m_L;
8099E8 9015AD            MOV     DPTR,#m_L
8099EB E0                MOVX    A,@DPTR
8099EC FF                MOV     R7,A
8099ED 9015A7            MOV     DPTR,#m_Hopper2
8099F0         
  449: 			break;
8099F0 8008              SJMP    ?C1022?MAINFLOW
  450: 			case 3:				
8099F2         ?C0094?MAINFLOW:
  451: 				*m_Hopper3 = m_L;
8099F2 9015AD            MOV     DPTR,#m_L
8099F5 E0                MOVX    A,@DPTR
8099F6 FF                MOV     R7,A
8099F7 9015AA            MOV     DPTR,#m_Hopper3
8099FA         
8099FA A5128007AC        ECALL   ?C?PLDXDATA
8099FF EF                MOV     A,R7
809A00 A558              EMOV    @PR0,A
  452: 			break;
809A02 8028              SJMP    ?C0095?MAINFLOW
  453: 		}
  454: 	}
809A04         ?C0090?MAINFLOW:
  455: 	else
  456: 	{
  457: 		switch( HopperSetList[1].HopperIndex )
809A04 900AE5            MOV     DPTR,#HopperSetList+06H
809A07 E0                MOVX    A,@DPTR
809A08 24FE              ADD     A,#0FEH
809A0A 600C              JZ      ?C0098?MAINFLOW
809A0C 14                DEC     A
809A0D 600E              JZ      ?C0099?MAINFLOW
809A0F 2402              ADD     A,#02H
809A11 7019              JNZ     ?C0095?MAINFLOW
  458: 		{
  459: 			case 1:						
809A13         ?C0097?MAINFLOW:
  460: 				*m_Hopper1 = 0;
809A13 9015A4            MOV     DPTR,#m_Hopper1
  461: 				m_H = 0;		
  462: 			break;
809A16 8008              SJMP    ?C1024?MAINFLOW
  463: 			case 2:
809A18         ?C0098?MAINFLOW:
  464: 				*m_Hopper2 = 0;
809A18 9015A7            MOV     DPTR,#m_Hopper2
809A1B         
  465: 				m_H = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 360


  466: 			break;
809A1B 8003              SJMP    ?C1024?MAINFLOW
  467: 			case 3:
809A1D         ?C0099?MAINFLOW:
  468: 				*m_Hopper3 = 0;
809A1D 9015AA            MOV     DPTR,#m_Hopper3
809A20         
809A20 A5128007AC        ECALL   ?C?PLDXDATA
809A25 E4                CLR     A
809A26 A558              EMOV    @PR0,A
  469: 				m_H = 0;
809A28 9015AE            MOV     DPTR,#m_H
809A2B F0                MOVX    @DPTR,A
  470: 			break;
  471: 		}	
  472: 	}
809A2C         ?C0095?MAINFLOW:
  473: 
  474: 	Money = Money - m_H * HopperSetList[1].price;			
809A2C 9015AE            MOV     DPTR,#m_H
809A2F E0                MOVX    A,@DPTR
809A30 FF                MOV     R7,A
809A31 7E00              MOV     R6,#00H
809A33 900AE3            MOV     DPTR,#HopperSetList+04H
809A36 E0                MOVX    A,@DPTR
809A37 FC                MOV     R4,A
809A38 A3                INC     DPTR
809A39 E0                MOVX    A,@DPTR
809A3A FD                MOV     R5,A
809A3B A512800559        ECALL   ?C?IMUL
809A40 C3                CLR     C
809A41 9015A3            MOV     DPTR,#Money+01H
809A44 E0                MOVX    A,@DPTR
809A45 9F                SUBB    A,R7
809A46 FF                MOV     R7,A
809A47 9015A2            MOV     DPTR,#Money
809A4A E0                MOVX    A,@DPTR
809A4B 9E                SUBB    A,R6
809A4C FE                MOV     R6,A
809A4D F0                MOVX    @DPTR,A
809A4E A3                INC     DPTR
809A4F EF                MOV     A,R7
809A50 F0                MOVX    @DPTR,A
  475: 	m_H = 0;
809A51 E4                CLR     A
809A52 9015AE            MOV     DPTR,#m_H
809A55 F0                MOVX    @DPTR,A
  476: 	m_L = 0;
809A56 9015AD            MOV     DPTR,#m_L
809A59 F0                MOVX    @DPTR,A
  477: 	
  478: //	Trace("\n HopperSetList[2].HopperState = %bu", HopperSetList[2].HopperState );
  479: //	Trace("\n HopperSetList[2].HopperIndex = %bu", HopperSetList[2].HopperIndex );
  480: 	m_L = Money / HopperSetList[2].price;
809A5A 900AE7            MOV     DPTR,#HopperSetList+08H
809A5D E0                MOVX    A,@DPTR
809A5E FC                MOV     R4,A
809A5F A3                INC     DPTR
809A60 E0                MOVX    A,@DPTR
809A61 FD                MOV     R5,A
809A62 A51280056C        ECALL   ?C?UIDIV
809A67 9015AD            MOV     DPTR,#m_L
809A6A EF                MOV     A,R7
809A6B F0                MOVX    @DPTR,A
  481: 	if( HopperSetList[2].HopperState == 1 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 361


809A6C 900AEA            MOV     DPTR,#HopperSetList+0BH
809A6F E0                MOVX    A,@DPTR
809A70 6401              XRL     A,#01H
809A72 7035              JNZ     ?C0100?MAINFLOW
  482: 	{			
  483: 		switch( HopperSetList[2].HopperIndex )
809A74 900AE9            MOV     DPTR,#HopperSetList+0AH
809A77 E0                MOVX    A,@DPTR
809A78 24FE              ADD     A,#0FEH
809A7A 6011              JZ      ?C0103?MAINFLOW
809A7C 14                DEC     A
809A7D 6018              JZ      ?C0104?MAINFLOW
809A7F 2402              ADD     A,#02H
809A81 704E              JNZ     ?C0105?MAINFLOW
  484: 		{
  485: 			case 1:						
809A83         ?C0102?MAINFLOW:
  486: 				*m_Hopper1 = m_L;
809A83 9015AD            MOV     DPTR,#m_L
809A86 E0                MOVX    A,@DPTR
809A87 FF                MOV     R7,A
809A88 9015A4            MOV     DPTR,#m_Hopper1
  487: 			break;
809A8B 8012              SJMP    ?C1026?MAINFLOW
  488: 			case 2:							
809A8D         ?C0103?MAINFLOW:
  489: 				*m_Hopper2 = m_L;
809A8D 9015AD            MOV     DPTR,#m_L
809A90 E0                MOVX    A,@DPTR
809A91 FF                MOV     R7,A
809A92 9015A7            MOV     DPTR,#m_Hopper2
809A95         
  490: 			break;
809A95 8008              SJMP    ?C1026?MAINFLOW
  491: 			case 3:						
809A97         ?C0104?MAINFLOW:
  492: 				*m_Hopper3 = m_L;
809A97 9015AD            MOV     DPTR,#m_L
809A9A E0                MOVX    A,@DPTR
809A9B FF                MOV     R7,A
809A9C 9015AA            MOV     DPTR,#m_Hopper3
809A9F         
809A9F A5128007AC        ECALL   ?C?PLDXDATA
809AA4 EF                MOV     A,R7
809AA5 A558              EMOV    @PR0,A
  493: 			break;
809AA7 8028              SJMP    ?C0105?MAINFLOW
  494: 		}
  495: 	}
809AA9         ?C0100?MAINFLOW:
  496: 	else
  497: 	{
  498: 		switch( HopperSetList[2].HopperIndex )
809AA9 900AE9            MOV     DPTR,#HopperSetList+0AH
809AAC E0                MOVX    A,@DPTR
809AAD 24FE              ADD     A,#0FEH
809AAF 600C              JZ      ?C0108?MAINFLOW
809AB1 14                DEC     A
809AB2 600E              JZ      ?C0109?MAINFLOW
809AB4 2402              ADD     A,#02H
809AB6 7019              JNZ     ?C0105?MAINFLOW
  499: 		{
  500: 			case 1:						
809AB8         ?C0107?MAINFLOW:
  501: 				*m_Hopper1 = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 362


809AB8 9015A4            MOV     DPTR,#m_Hopper1
  502: 				m_H = 0;		
  503: 			break;
809ABB 8008              SJMP    ?C1028?MAINFLOW
  504: 			case 2:
809ABD         ?C0108?MAINFLOW:
  505: 				*m_Hopper2 = 0;
809ABD 9015A7            MOV     DPTR,#m_Hopper2
809AC0         
  506: 				m_H = 0;
  507: 			break;
809AC0 8003              SJMP    ?C1028?MAINFLOW
  508: 			case 3:
809AC2         ?C0109?MAINFLOW:
  509: 				*m_Hopper3 = 0;
809AC2 9015AA            MOV     DPTR,#m_Hopper3
809AC5         
809AC5 A5128007AC        ECALL   ?C?PLDXDATA
809ACA E4                CLR     A
809ACB A558              EMOV    @PR0,A
  510: 				m_H = 0;
809ACD 9015AE            MOV     DPTR,#m_H
809AD0 F0                MOVX    @DPTR,A
  511: 			break;
  512: 		}	
  513: 	}
809AD1         ?C0105?MAINFLOW:
  514: 		
  515: 
  516: //	Trace( "\n *Hopper1 = %bu", *m_Hopper1 );
  517: //	Trace( "\n *Hopper2 = %bu", *m_Hopper2 );
  518: //	Trace( "\n *Hopper3 = %bu", *m_Hopper3 );	
  519: 	if (( *m_Hopper1 == 0) && ( *m_Hopper2 == 0 ) && ( *m_Hopper3 == 0) ) 
809AD1 9015A4            MOV     DPTR,#m_Hopper1
809AD4 A5128007AC        ECALL   ?C?PLDXDATA
809AD9 A548              EMOV    A,@PR0
809ADB 701C              JNZ     ?C0110?MAINFLOW
809ADD 9015A7            MOV     DPTR,#m_Hopper2
809AE0 A5128007AC        ECALL   ?C?PLDXDATA
809AE5 A548              EMOV    A,@PR0
809AE7 7010              JNZ     ?C0110?MAINFLOW
809AE9 9015AA            MOV     DPTR,#m_Hopper3
809AEC A5128007AC        ECALL   ?C?PLDXDATA
809AF1 A548              EMOV    A,@PR0
809AF3 7004              JNZ     ?C0110?MAINFLOW
  520: 	// 配币错误 
  521: 		return 1;	
809AF5 7F01              MOV     R7,#01H
809AF7 8002              SJMP    ?C0079?MAINFLOW
809AF9         ?C0110?MAINFLOW:
  522: 	return 0 ;		
809AF9 7F00              MOV     R7,#00H
  523: }
809AFB         ?C0079?MAINFLOW:
809AFB A522              ERET    
----- FUNCTION _Cal (END) -------


----- FUNCTION ?L?COM0037 (BEGIN) -----
809AFD E4                CLR     A
809AFE FF                MOV     R7,A
809AFF A5128075BC        ECALL   _CheckHardWare
----- FUNCTION GetHopperList (BEGIN) -----
 FILE: 'mainflow.c'
  556: void GetHopperList()
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 363


  557: {		
  558: 	u_int xdata i = 0;
  559: 	u_int xdata j = 0;
;---- Variable 'i' assigned to Register 'R4/R5' ----
809B04 E4                CLR     A
  560: 	u_int xdata z = 0;	
809B05 90159B            MOV     DPTR,#j
809B08 F0                MOVX    @DPTR,A
809B09 A3                INC     DPTR
809B0A F0                MOVX    @DPTR,A
  561: 
809B0B A3                INC     DPTR
809B0C F0                MOVX    @DPTR,A
809B0D A3                INC     DPTR
809B0E F0                MOVX    @DPTR,A
  562: 	 i = SystemParameter.HopperCoinPrice1;
809B0F 90041F            MOV     DPTR,#SystemParameter+01H
809B12 E0                MOVX    A,@DPTR
809B13 FC                MOV     R4,A
809B14 A3                INC     DPTR
809B15 E0                MOVX    A,@DPTR
809B16 FD                MOV     R5,A
  563: 	 j = SystemParameter.HopperCoinPrice2;
809B17 A3                INC     DPTR
809B18 E0                MOVX    A,@DPTR
809B19 FF                MOV     R7,A
809B1A A3                INC     DPTR
809B1B E0                MOVX    A,@DPTR
809B1C 90159B            MOV     DPTR,#j
809B1F CF                XCH     A,R7
809B20 F0                MOVX    @DPTR,A
809B21 A3                INC     DPTR
809B22 EF                MOV     A,R7
809B23 F0                MOVX    @DPTR,A
  564: 	 z = SystemParameter.HopperCoinPrice3;
809B24 900423            MOV     DPTR,#SystemParameter+05H
809B27 E0                MOVX    A,@DPTR
809B28 FF                MOV     R7,A
809B29 A3                INC     DPTR
809B2A E0                MOVX    A,@DPTR
809B2B 90159D            MOV     DPTR,#z
809B2E CF                XCH     A,R7
809B2F F0                MOVX    @DPTR,A
809B30 A3                INC     DPTR
809B31 EF                MOV     A,R7
809B32 F0                MOVX    @DPTR,A
  565: 	 
  566: 	//找出最大的斗		
  567: 	if( ( i >= j ) && ( i >= z ) )
809B33 D3                SETB    C
809B34 90159C            MOV     DPTR,#j+01H
809B37 E0                MOVX    A,@DPTR
809B38 9D                SUBB    A,R5
809B39 90159B            MOV     DPTR,#j
809B3C E0                MOVX    A,@DPTR
809B3D 9C                SUBB    A,R4
809B3E 505E              JNC     ?C0117?MAINFLOW
809B40 90159E            MOV     DPTR,#z+01H
809B43 E0                MOVX    A,@DPTR
809B44 9D                SUBB    A,R5
809B45 90159D            MOV     DPTR,#z
809B48 E0                MOVX    A,@DPTR
809B49 9C                SUBB    A,R4
809B4A 5052              JNC     ?C0117?MAINFLOW
  568: 	{	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 364


  569: 		HopperSetList[0].price = i;
809B4C 900ADF            MOV     DPTR,#HopperSetList
809B4F EC                MOV     A,R4
809B50 F0                MOVX    @DPTR,A
809B51 A3                INC     DPTR
809B52 ED                MOV     A,R5
809B53 F0                MOVX    @DPTR,A
  570: 		HopperSetList[0].HopperIndex = 1;
809B54 A3                INC     DPTR
809B55 7401              MOV     A,#01H
809B57 F0                MOVX    @DPTR,A
  571: 		if( j >= z )
809B58 90159D            MOV     DPTR,#z
809B5B E0                MOVX    A,@DPTR
809B5C FE                MOV     R6,A
809B5D A3                INC     DPTR
809B5E E0                MOVX    A,@DPTR
809B5F FF                MOV     R7,A
809B60 90159B            MOV     DPTR,#j
809B63 E0                MOVX    A,@DPTR
809B64 FA                MOV     R2,A
809B65 A3                INC     DPTR
809B66 E0                MOVX    A,@DPTR
809B67 FB                MOV     R3,A
809B68 C3                CLR     C
809B69 9F                SUBB    A,R7
809B6A EA                MOV     A,R2
809B6B 9E                SUBB    A,R6
809B6C 4013              JC      ?C0118?MAINFLOW
  572: 		{
  573: 			HopperSetList[1].price = j;
809B6E 900AE3            MOV     DPTR,#HopperSetList+04H
809B71 EA                MOV     A,R2
809B72 F0                MOVX    @DPTR,A
809B73 A3                INC     DPTR
809B74 EB                MOV     A,R3
809B75 F0                MOVX    @DPTR,A
  574: 			HopperSetList[1].HopperIndex = 2;		
809B76 A3                INC     DPTR
809B77 7402              MOV     A,#02H
809B79 F0                MOVX    @DPTR,A
  575: 			HopperSetList[2].price = z;
809B7A 900AE7            MOV     DPTR,#HopperSetList+08H
809B7D EE                MOV     A,R6
  576: 			HopperSetList[2].HopperIndex = 3;
  577: 		}
809B7E 029C26            LJMP    ?C1031?MAINFLOW
809B81         ?C0118?MAINFLOW:
  578: 		else
  579: 		{		
  580: 			HopperSetList[1].price = z;
809B81 90159D            MOV     DPTR,#z
809B84 E0                MOVX    A,@DPTR
809B85 FF                MOV     R7,A
809B86 A3                INC     DPTR
809B87 E0                MOVX    A,@DPTR
809B88 900AE3            MOV     DPTR,#HopperSetList+04H
809B8B CF                XCH     A,R7
809B8C F0                MOVX    @DPTR,A
809B8D A3                INC     DPTR
809B8E EF                MOV     A,R7
809B8F F0                MOVX    @DPTR,A
  581: 			HopperSetList[1].HopperIndex = 3;		
809B90 A3                INC     DPTR
809B91 7403              MOV     A,#03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 365


809B93 F0                MOVX    @DPTR,A
  582: 			HopperSetList[2].price = j;
809B94 900AE7            MOV     DPTR,#HopperSetList+08H
809B97 EA                MOV     A,R2
809B98 F0                MOVX    @DPTR,A
809B99 A3                INC     DPTR
809B9A EB                MOV     A,R3
  583: 			HopperSetList[2].HopperIndex = 2;
  584: 		}
  585: 	}
809B9B 029CC8            LJMP    ?C1033?MAINFLOW
809B9E         ?C0117?MAINFLOW:
  586: 	else if( ( i >= j ) && ( i <= z ) )
809B9E D3                SETB    C
809B9F 90159C            MOV     DPTR,#j+01H
809BA2 E0                MOVX    A,@DPTR
809BA3 9D                SUBB    A,R5
809BA4 90159B            MOV     DPTR,#j
809BA7 E0                MOVX    A,@DPTR
809BA8 9C                SUBB    A,R4
809BA9 5037              JNC     ?C0121?MAINFLOW
809BAB 90159D            MOV     DPTR,#z
809BAE E0                MOVX    A,@DPTR
809BAF FE                MOV     R6,A
809BB0 A3                INC     DPTR
809BB1 E0                MOVX    A,@DPTR
809BB2 FF                MOV     R7,A
809BB3 C3                CLR     C
809BB4 9D                SUBB    A,R5
809BB5 EE                MOV     A,R6
809BB6 9C                SUBB    A,R4
809BB7 4029              JC      ?C0121?MAINFLOW
  587: 	{
  588: 		HopperSetList[0].price = z;
809BB9 900ADF            MOV     DPTR,#HopperSetList
809BBC EE                MOV     A,R6
809BBD F0                MOVX    @DPTR,A
809BBE A3                INC     DPTR
809BBF EF                MOV     A,R7
809BC0 F0                MOVX    @DPTR,A
  589: 		HopperSetList[0].HopperIndex = 3;
809BC1 A3                INC     DPTR
809BC2 7403              MOV     A,#03H
809BC4 F0                MOVX    @DPTR,A
  590: 		HopperSetList[1].price = i;
809BC5 900AE3            MOV     DPTR,#HopperSetList+04H
809BC8 EC                MOV     A,R4
809BC9 F0                MOVX    @DPTR,A
809BCA A3                INC     DPTR
809BCB ED                MOV     A,R5
809BCC F0                MOVX    @DPTR,A
  591: 		HopperSetList[1].HopperIndex = 1;	
809BCD A3                INC     DPTR
809BCE 7401              MOV     A,#01H
809BD0 F0                MOVX    @DPTR,A
  592: 		HopperSetList[2].price = j;
809BD1 90159B            MOV     DPTR,#j
809BD4 E0                MOVX    A,@DPTR
809BD5 FF                MOV     R7,A
809BD6 A3                INC     DPTR
809BD7 E0                MOVX    A,@DPTR
809BD8 900AE7            MOV     DPTR,#HopperSetList+08H
809BDB CF                XCH     A,R7
809BDC F0                MOVX    @DPTR,A
809BDD A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 366


809BDE EF                MOV     A,R7
809BDF         
  593: 		HopperSetList[2].HopperIndex = 2;
  594: 	}
809BDF 029CC8            LJMP    ?C1033?MAINFLOW
809BE2         ?C0121?MAINFLOW:
  595: 	else if( ( j >= i ) && ( i >= z ) )
809BE2 C3                CLR     C
809BE3 90159C            MOV     DPTR,#j+01H
809BE6 E0                MOVX    A,@DPTR
809BE7 9D                SUBB    A,R5
809BE8 90159B            MOV     DPTR,#j
809BEB E0                MOVX    A,@DPTR
809BEC 9C                SUBB    A,R4
809BED 4042              JC      ?C0123?MAINFLOW
809BEF D3                SETB    C
809BF0 90159E            MOV     DPTR,#z+01H
809BF3 E0                MOVX    A,@DPTR
809BF4 9D                SUBB    A,R5
809BF5 90159D            MOV     DPTR,#z
809BF8 E0                MOVX    A,@DPTR
809BF9 9C                SUBB    A,R4
809BFA 5035              JNC     ?C0123?MAINFLOW
  596: 	{	
  597: 		HopperSetList[0].price = j;
809BFC 90159B            MOV     DPTR,#j
809BFF E0                MOVX    A,@DPTR
809C00 FF                MOV     R7,A
809C01 A3                INC     DPTR
809C02 E0                MOVX    A,@DPTR
809C03 900ADF            MOV     DPTR,#HopperSetList
809C06 CF                XCH     A,R7
809C07 F0                MOVX    @DPTR,A
809C08 A3                INC     DPTR
809C09 EF                MOV     A,R7
809C0A F0                MOVX    @DPTR,A
  598: 		HopperSetList[0].HopperIndex = 2;	
809C0B A3                INC     DPTR
809C0C 7402              MOV     A,#02H
809C0E F0                MOVX    @DPTR,A
  599: 		HopperSetList[1].price = i;
809C0F 900AE3            MOV     DPTR,#HopperSetList+04H
809C12 EC                MOV     A,R4
809C13 F0                MOVX    @DPTR,A
809C14 A3                INC     DPTR
809C15 ED                MOV     A,R5
809C16 F0                MOVX    @DPTR,A
  600: 		HopperSetList[1].HopperIndex = 1;
809C17 A3                INC     DPTR
809C18 7401              MOV     A,#01H
809C1A F0                MOVX    @DPTR,A
  601: 		HopperSetList[2].price = z;
809C1B 90159D            MOV     DPTR,#z
809C1E E0                MOVX    A,@DPTR
809C1F FF                MOV     R7,A
809C20 A3                INC     DPTR
809C21 E0                MOVX    A,@DPTR
809C22 900AE7            MOV     DPTR,#HopperSetList+08H
809C25 CF                XCH     A,R7
809C26         
809C26 F0                MOVX    @DPTR,A
809C27 A3                INC     DPTR
809C28 EF                MOV     A,R7
809C29 F0                MOVX    @DPTR,A
  602: 		HopperSetList[2].HopperIndex = 3;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 367


809C2A A3                INC     DPTR
809C2B 7403              MOV     A,#03H
809C2D F0                MOVX    @DPTR,A
  603: 	}
809C2E 029CCD            LJMP    ?C0120?MAINFLOW
809C31         ?C0123?MAINFLOW:
  604: 	else if( ( j >= i ) && ( i <= z ) )
809C31 C3                CLR     C
809C32 90159C            MOV     DPTR,#j+01H
809C35 E0                MOVX    A,@DPTR
809C36 9D                SUBB    A,R5
809C37 90159B            MOV     DPTR,#j
809C3A E0                MOVX    A,@DPTR
809C3B 9C                SUBB    A,R4
809C3C 5003              JNC     $ + 5H
809C3E 029CCD            LJMP    ?C0120?MAINFLOW
809C41 90159E            MOV     DPTR,#z+01H
809C44 E0                MOVX    A,@DPTR
809C45 9D                SUBB    A,R5
809C46 90159D            MOV     DPTR,#z
809C49 E0                MOVX    A,@DPTR
809C4A 9C                SUBB    A,R4
809C4B 5003              JNC     $ + 5H
809C4D 029CCD            LJMP    ?C0120?MAINFLOW
  605: 	{		
  606: 		HopperSetList[2].price = i;
809C50 900AE7            MOV     DPTR,#HopperSetList+08H
809C53 EC                MOV     A,R4
809C54 F0                MOVX    @DPTR,A
809C55 A3                INC     DPTR
809C56 ED                MOV     A,R5
809C57 F0                MOVX    @DPTR,A
  607: 		HopperSetList[2].HopperIndex = 1;
809C58 A3                INC     DPTR
809C59 7401              MOV     A,#01H
809C5B F0                MOVX    @DPTR,A
  608: 		if( j >= z )
809C5C 90159D            MOV     DPTR,#z
809C5F E0                MOVX    A,@DPTR
809C60 FE                MOV     R6,A
809C61 A3                INC     DPTR
809C62 E0                MOVX    A,@DPTR
809C63 FF                MOV     R7,A
809C64 90159B            MOV     DPTR,#j
809C67 E0                MOVX    A,@DPTR
809C68 FA                MOV     R2,A
809C69 A3                INC     DPTR
809C6A E0                MOVX    A,@DPTR
809C6B FB                MOV     R3,A
809C6C 9F                SUBB    A,R7
809C6D EA                MOV     A,R2
809C6E 9E                SUBB    A,R6
809C6F 4036              JC      ?C0126?MAINFLOW
  609: 		{
  610: 			HopperSetList[0].price = j;
809C71 900ADF            MOV     DPTR,#HopperSetList
809C74 EA                MOV     A,R2
809C75 F0                MOVX    @DPTR,A
809C76 A3                INC     DPTR
809C77 EB                MOV     A,R3
809C78 F0                MOVX    @DPTR,A
  611: 			HopperSetList[0].HopperIndex = 2;
809C79 A3                INC     DPTR
809C7A 7402              MOV     A,#02H
809C7C F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 368


  612: 			if( DeviceStatus.ChangeUnit2 == 1 )
809C7D 900B19            MOV     DPTR,#DeviceStatus+03H
809C80 E0                MOVX    A,@DPTR
809C81 FF                MOV     R7,A
809C82 B40106            CJNE    A,#01H,?C0127?MAINFLOW
  613: 				HopperSetList[0].HopperState = 2;
809C85 900AE2            MOV     DPTR,#HopperSetList+03H
809C88 7402              MOV     A,#02H
809C8A F0                MOVX    @DPTR,A
809C8B         ?C0127?MAINFLOW:
  614: 			HopperSetList[1].price = z;
809C8B 90159D            MOV     DPTR,#z
809C8E E0                MOVX    A,@DPTR
809C8F FB                MOV     R3,A
809C90 A3                INC     DPTR
809C91 E0                MOVX    A,@DPTR
809C92 900AE3            MOV     DPTR,#HopperSetList+04H
809C95 CB                XCH     A,R3
809C96 F0                MOVX    @DPTR,A
809C97 A3                INC     DPTR
809C98 EB                MOV     A,R3
809C99 F0                MOVX    @DPTR,A
  615: 			HopperSetList[1].HopperIndex = 3;
809C9A A3                INC     DPTR
809C9B 7403              MOV     A,#03H
809C9D F0                MOVX    @DPTR,A
  616: 			if( DeviceStatus.ChangeUnit2 == 1 )
809C9E EF                MOV     A,R7
809C9F B4012B            CJNE    A,#01H,?C0120?MAINFLOW
  617: 				HopperSetList[0].HopperState = 2;
809CA2 900AE2            MOV     DPTR,#HopperSetList+03H
  618: 		}
809CA5 8023              SJMP    ?C1034?MAINFLOW
809CA7         ?C0126?MAINFLOW:
  619: 		else
  620: 		{
  621: 			HopperSetList[0].price = z;
809CA7 90159D            MOV     DPTR,#z
809CAA E0                MOVX    A,@DPTR
809CAB FF                MOV     R7,A
809CAC A3                INC     DPTR
809CAD E0                MOVX    A,@DPTR
809CAE 900ADF            MOV     DPTR,#HopperSetList
809CB1 CF                XCH     A,R7
809CB2 F0                MOVX    @DPTR,A
809CB3 A3                INC     DPTR
809CB4 EF                MOV     A,R7
809CB5 F0                MOVX    @DPTR,A
  622: 			HopperSetList[0].HopperIndex = 3;			
809CB6 A3                INC     DPTR
809CB7 7403              MOV     A,#03H
809CB9 F0                MOVX    @DPTR,A
  623: 			HopperSetList[1].price = j;
809CBA 90159B            MOV     DPTR,#j
809CBD E0                MOVX    A,@DPTR
809CBE FF                MOV     R7,A
809CBF A3                INC     DPTR
809CC0 E0                MOVX    A,@DPTR
809CC1 900AE3            MOV     DPTR,#HopperSetList+04H
809CC4 CF                XCH     A,R7
809CC5 F0                MOVX    @DPTR,A
809CC6 A3                INC     DPTR
809CC7 EF                MOV     A,R7
809CC8         
809CC8 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 369


  624: 			HopperSetList[1].HopperIndex = 2;
809CC9 A3                INC     DPTR
809CCA         
809CCA 7402              MOV     A,#02H
809CCC F0                MOVX    @DPTR,A
  625: 		}
  626: 	}
809CCD         ?C0120?MAINFLOW:
  627: 
  628: 	for( i = 0; i < 3; i ++ )
809CCD E4                CLR     A
809CCE FC                MOV     R4,A
809CCF FD                MOV     R5,A
809CD0         ?C0130?MAINFLOW:
  629: 	{
  630: 		if( HopperSetList[i].price == 0 )		
809CD0 ED                MOV     A,R5
809CD1 AE04              MOV     R6,AR4
809CD3 7802              MOV     R0,#02H
809CD5         ?C0968?MAINFLOW:
809CD5 C3                CLR     C
809CD6 33                RLC     A
809CD7 CE                XCH     A,R6
809CD8 33                RLC     A
809CD9 CE                XCH     A,R6
809CDA D8F9              DJNZ    R0,?C0968?MAINFLOW
809CDC 24DF              ADD     A,#LOW HopperSetList
809CDE F582              MOV     DPL,A
809CE0 740A              MOV     A,#HIGH HopperSetList
809CE2 3E                ADDC    A,R6
809CE3 F583              MOV     DPH,A
809CE5 E0                MOVX    A,@DPTR
809CE6 FE                MOV     R6,A
809CE7 A3                INC     DPTR
809CE8 E0                MOVX    A,@DPTR
809CE9 4E                ORL     A,R6
809CEA 600B              JZ      ?C0131?MAINFLOW
  631: 			break;
  632: 	}
809CEC         ?C0132?MAINFLOW:
809CEC 0D                INC     R5
809CED BD0001            CJNE    R5,#00H,?C0969?MAINFLOW
809CF0 0C                INC     R4
809CF1         ?C0969?MAINFLOW:
809CF1 ED                MOV     A,R5
809CF2 6403              XRL     A,#03H
809CF4 4C                ORL     A,R4
809CF5 70D9              JNZ     ?C0130?MAINFLOW
809CF7         ?C0131?MAINFLOW:
  633: 	if( i > 0 )
809CF7 D3                SETB    C
809CF8 ED                MOV     A,R5
809CF9 9400              SUBB    A,#00H
809CFB EC                MOV     A,R4
809CFC 9400              SUBB    A,#00H
809CFE 4005              JC      ?C0134?MAINFLOW
  634: 		i--;
809D00 ED                MOV     A,R5
809D01 1D                DEC     R5
809D02 7001              JNZ     ?C0970?MAINFLOW
809D04 1C                DEC     R4
809D05         ?C0970?MAINFLOW:
809D05         ?C0134?MAINFLOW:
  635: 	for( j = 0; j < 3; j ++ )
809D05 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 370


809D06 90159B            MOV     DPTR,#j
809D09 F0                MOVX    @DPTR,A
809D0A A3                INC     DPTR
809D0B F0                MOVX    @DPTR,A
809D0C         ?C0135?MAINFLOW:
809D0C 90159B            MOV     DPTR,#j
809D0F E0                MOVX    A,@DPTR
809D10 FE                MOV     R6,A
809D11 A3                INC     DPTR
809D12 E0                MOVX    A,@DPTR
809D13 FF                MOV     R7,A
809D14 C3                CLR     C
809D15 9403              SUBB    A,#03H
809D17 EE                MOV     A,R6
809D18 9400              SUBB    A,#00H
809D1A 4003              JC      $ + 5H
809D1C 029E6D            LJMP    ?C0136?MAINFLOW
  636: 	{
  637: 		switch( HopperSetList[j].HopperIndex )
809D1F EF                MOV     A,R7
809D20 7802              MOV     R0,#02H
809D22         ?C0971?MAINFLOW:
809D22 C3                CLR     C
809D23 33                RLC     A
809D24 CE                XCH     A,R6
809D25 33                RLC     A
809D26 CE                XCH     A,R6
809D27 D8F9              DJNZ    R0,?C0971?MAINFLOW
809D29 FF                MOV     R7,A
809D2A 24E1              ADD     A,#LOW HopperSetList+02H
809D2C F582              MOV     DPL,A
809D2E 740A              MOV     A,#HIGH HopperSetList+02H
809D30 3E                ADDC    A,R6
809D31 F583              MOV     DPH,A
809D33 E0                MOVX    A,@DPTR
809D34 24FE              ADD     A,#0FEH
809D36 6067              JZ      ?C0144?MAINFLOW
809D38 14                DEC     A
809D39 7003              JNZ     $ + 5H
809D3B 029E01            LJMP    ?C0149?MAINFLOW
809D3E 2402              ADD     A,#02H
809D40 6003              JZ      $ + 5H
809D42 029E5E            LJMP    ?C0137?MAINFLOW
  638: 		{
  639: 			case 1:
809D45         ?C0139?MAINFLOW:
  640: 				if( SystemParameter.HopperCoinPrice1 == 0 )
809D45 90041F            MOV     DPTR,#SystemParameter+01H
809D48 E0                MOVX    A,@DPTR
809D49 7002              JNZ     ?C0972?MAINFLOW
809D4B A3                INC     DPTR
809D4C E0                MOVX    A,@DPTR
809D4D         ?C0972?MAINFLOW:
809D4D 7003              JNZ     $ + 5H
809D4F 029E5E            LJMP    ?C0137?MAINFLOW
  641: 					break;			
809D52         ?C0140?MAINFLOW:
  642: 				if( DeviceStatus.ChangeUnit1 == 1 )
809D52 900B18            MOV     DPTR,#DeviceStatus+02H
809D55 E0                MOVX    A,@DPTR
809D56 F9                MOV     R1,A
809D57 B4010F            CJNE    A,#01H,?C0141?MAINFLOW
  643: 					HopperSetList[j].HopperState = 2;
809D5A 74E2              MOV     A,#LOW HopperSetList+03H
809D5C 2F                ADD     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 371


809D5D F582              MOV     DPL,A
809D5F 740A              MOV     A,#HIGH HopperSetList+03H
809D61 3E                ADDC    A,R6
809D62 F583              MOV     DPH,A
809D64 7402              MOV     A,#02H
809D66 F0                MOVX    @DPTR,A
809D67 801C              SJMP    ?C0142?MAINFLOW
809D69         ?C0141?MAINFLOW:
  644: 				else
  645: 					HopperSetList[j].HopperState = 1;
809D69 90159B            MOV     DPTR,#j
809D6C E0                MOVX    A,@DPTR
809D6D FE                MOV     R6,A
809D6E A3                INC     DPTR
809D6F E0                MOVX    A,@DPTR
809D70 7802              MOV     R0,#02H
809D72         ?C0973?MAINFLOW:
809D72 C3                CLR     C
809D73 33                RLC     A
809D74 CE                XCH     A,R6
809D75 33                RLC     A
809D76 CE                XCH     A,R6
809D77 D8F9              DJNZ    R0,?C0973?MAINFLOW
809D79 24E2              ADD     A,#LOW HopperSetList+03H
809D7B F582              MOV     DPL,A
809D7D 740A              MOV     A,#HIGH HopperSetList+03H
809D7F 3E                ADDC    A,R6
809D80 F583              MOV     DPH,A
809D82 7401              MOV     A,#01H
809D84 F0                MOVX    @DPTR,A
809D85         ?C0142?MAINFLOW:
  646: 				if( ( j == i ) && ( DeviceStatus.ChangeUnit1 != 0 ) )
809D85 90159B            MOV     DPTR,#j
809D88 E0                MOVX    A,@DPTR
809D89 6C                XRL     A,R4
809D8A 7003              JNZ     ?C0974?MAINFLOW
809D8C A3                INC     DPTR
809D8D E0                MOVX    A,@DPTR
809D8E 6D                XRL     A,R5
809D8F         ?C0974?MAINFLOW:
809D8F 6003              JZ      $ + 5H
809D91 029E5E            LJMP    ?C0137?MAINFLOW
809D94 E9                MOV     A,R1
809D95 7003              JNZ     $ + 5H
809D97 029E5E            LJMP    ?C0137?MAINFLOW
  647: 					IsCanInCashFlag = 0;				
809D9A C226              CLR     IsCanInCashFlag
  648: 			break;
809D9C 029E5E            LJMP    ?C0137?MAINFLOW
  649: 			case 2:
809D9F         ?C0144?MAINFLOW:
  650: 				if( SystemParameter.HopperCoinPrice2 == 0 )
809D9F 900421            MOV     DPTR,#SystemParameter+03H
809DA2 E0                MOVX    A,@DPTR
809DA3 7002              JNZ     ?C0975?MAINFLOW
809DA5 A3                INC     DPTR
809DA6 E0                MOVX    A,@DPTR
809DA7         ?C0975?MAINFLOW:
809DA7 7003              JNZ     $ + 5H
809DA9 029E5E            LJMP    ?C0137?MAINFLOW
  651: 					break;			
809DAC         ?C0145?MAINFLOW:
  652: 				if( DeviceStatus.ChangeUnit2 == 1 )
809DAC 900B19            MOV     DPTR,#DeviceStatus+03H
809DAF E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 372


809DB0 F9                MOV     R1,A
809DB1 B4011E            CJNE    A,#01H,?C0146?MAINFLOW
  653: 					HopperSetList[j].HopperState = 2;
809DB4 90159B            MOV     DPTR,#j
809DB7 E0                MOVX    A,@DPTR
809DB8 FE                MOV     R6,A
809DB9 A3                INC     DPTR
809DBA E0                MOVX    A,@DPTR
809DBB 7802              MOV     R0,#02H
809DBD         ?C0976?MAINFLOW:
809DBD C3                CLR     C
809DBE 33                RLC     A
809DBF CE                XCH     A,R6
809DC0 33                RLC     A
809DC1 CE                XCH     A,R6
809DC2 D8F9              DJNZ    R0,?C0976?MAINFLOW
809DC4 24E2              ADD     A,#LOW HopperSetList+03H
809DC6 F582              MOV     DPL,A
809DC8 740A              MOV     A,#HIGH HopperSetList+03H
809DCA 3E                ADDC    A,R6
809DCB F583              MOV     DPH,A
809DCD 7402              MOV     A,#02H
809DCF F0                MOVX    @DPTR,A
809DD0 801C              SJMP    ?C0147?MAINFLOW
809DD2         ?C0146?MAINFLOW:
  654: 				else
  655: 					HopperSetList[j].HopperState = 1;
809DD2 90159B            MOV     DPTR,#j
809DD5 E0                MOVX    A,@DPTR
809DD6 FE                MOV     R6,A
809DD7 A3                INC     DPTR
809DD8 E0                MOVX    A,@DPTR
809DD9 7802              MOV     R0,#02H
809DDB         ?C0977?MAINFLOW:
809DDB C3                CLR     C
809DDC 33                RLC     A
809DDD CE                XCH     A,R6
809DDE 33                RLC     A
809DDF CE                XCH     A,R6
809DE0 D8F9              DJNZ    R0,?C0977?MAINFLOW
809DE2 24E2              ADD     A,#LOW HopperSetList+03H
809DE4 F582              MOV     DPL,A
809DE6 740A              MOV     A,#HIGH HopperSetList+03H
809DE8 3E                ADDC    A,R6
809DE9 F583              MOV     DPH,A
809DEB 7401              MOV     A,#01H
809DED F0                MOVX    @DPTR,A
809DEE         ?C0147?MAINFLOW:
  656: 				if( ( j == i ) && ( DeviceStatus.ChangeUnit2 != 0 ) )
809DEE 90159B            MOV     DPTR,#j
809DF1 E0                MOVX    A,@DPTR
809DF2 6C                XRL     A,R4
809DF3 7003              JNZ     ?C0978?MAINFLOW
809DF5 A3                INC     DPTR
809DF6 E0                MOVX    A,@DPTR
809DF7 6D                XRL     A,R5
809DF8         ?C0978?MAINFLOW:
809DF8 7064              JNZ     ?C0137?MAINFLOW
809DFA E9                MOV     A,R1
809DFB 6061              JZ      ?C0137?MAINFLOW
  657: 					IsCanInCashFlag = 0;
809DFD C226              CLR     IsCanInCashFlag
  658: 			break;
809DFF 805D              SJMP    ?C0137?MAINFLOW
  659: 			case 3:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 373


809E01         ?C0149?MAINFLOW:
  660: 				if( SystemParameter.HopperCoinPrice3 == 0 )
809E01 900423            MOV     DPTR,#SystemParameter+05H
809E04 E0                MOVX    A,@DPTR
809E05 7002              JNZ     ?C0979?MAINFLOW
809E07 A3                INC     DPTR
809E08 E0                MOVX    A,@DPTR
809E09         ?C0979?MAINFLOW:
809E09 6053              JZ      ?C0137?MAINFLOW
  661: 					break;			
809E0B         ?C0150?MAINFLOW:
  662: 				if( DeviceStatus.ChangeUnit3 == 1 )
809E0B 900B1A            MOV     DPTR,#DeviceStatus+04H
809E0E E0                MOVX    A,@DPTR
809E0F F9                MOV     R1,A
809E10 B4011E            CJNE    A,#01H,?C0151?MAINFLOW
  663: 					HopperSetList[j].HopperState = 2;
809E13 90159B            MOV     DPTR,#j
809E16 E0                MOVX    A,@DPTR
809E17 FE                MOV     R6,A
809E18 A3                INC     DPTR
809E19 E0                MOVX    A,@DPTR
809E1A 7802              MOV     R0,#02H
809E1C         ?C0980?MAINFLOW:
809E1C C3                CLR     C
809E1D 33                RLC     A
809E1E CE                XCH     A,R6
809E1F 33                RLC     A
809E20 CE                XCH     A,R6
809E21 D8F9              DJNZ    R0,?C0980?MAINFLOW
809E23 24E2              ADD     A,#LOW HopperSetList+03H
809E25 F582              MOV     DPL,A
809E27 740A              MOV     A,#HIGH HopperSetList+03H
809E29 3E                ADDC    A,R6
809E2A F583              MOV     DPH,A
809E2C 7402              MOV     A,#02H
809E2E F0                MOVX    @DPTR,A
809E2F 801C              SJMP    ?C0152?MAINFLOW
809E31         ?C0151?MAINFLOW:
  664: 				else
  665: 					HopperSetList[j].HopperState = 1;
809E31 90159B            MOV     DPTR,#j
809E34 E0                MOVX    A,@DPTR
809E35 FE                MOV     R6,A
809E36 A3                INC     DPTR
809E37 E0                MOVX    A,@DPTR
809E38 7802              MOV     R0,#02H
809E3A         ?C0981?MAINFLOW:
809E3A C3                CLR     C
809E3B 33                RLC     A
809E3C CE                XCH     A,R6
809E3D 33                RLC     A
809E3E CE                XCH     A,R6
809E3F D8F9              DJNZ    R0,?C0981?MAINFLOW
809E41 24E2              ADD     A,#LOW HopperSetList+03H
809E43 F582              MOV     DPL,A
809E45 740A              MOV     A,#HIGH HopperSetList+03H
809E47 3E                ADDC    A,R6
809E48 F583              MOV     DPH,A
809E4A 7401              MOV     A,#01H
809E4C F0                MOVX    @DPTR,A
809E4D         ?C0152?MAINFLOW:
  666: 				if( ( j == i ) && ( DeviceStatus.ChangeUnit3 != 0 ) )
809E4D 90159B            MOV     DPTR,#j
809E50 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 374


809E51 B5040A            CJNE    A,AR4,?C0137?MAINFLOW
809E54 A3                INC     DPTR
809E55 E0                MOVX    A,@DPTR
809E56 B50505            CJNE    A,AR5,?C0137?MAINFLOW
809E59 E9                MOV     A,R1
809E5A 6002              JZ      ?C0137?MAINFLOW
  667: 					IsCanInCashFlag = 0;
809E5C C226              CLR     IsCanInCashFlag
  668: 			break;
  669: 			default:
  670: 				continue;	
  671: 		}
  672: 	}
809E5E         ?C0137?MAINFLOW:
809E5E 90159B            MOV     DPTR,#j
809E61 E4                CLR     A
809E62 75F001            MOV     B,#01H
809E65 A512800600        ECALL   ?C?IILDX
809E6A 029D0C            LJMP    ?C0135?MAINFLOW
809E6D         ?C0136?MAINFLOW:
  673: 	//如果HOPPER内的面值为0则此HOPPER不能参数配币
  674: 	for( i = 0; i < 3; i ++ )
809E6D E4                CLR     A
809E6E FC                MOV     R4,A
809E6F FD                MOV     R5,A
809E70         ?C0155?MAINFLOW:
  675: 	{
  676: 		if( HopperSetList[i].price == 0 )		
809E70 ED                MOV     A,R5
809E71 AE04              MOV     R6,AR4
809E73 7802              MOV     R0,#02H
809E75         ?C0983?MAINFLOW:
809E75 C3                CLR     C
809E76 33                RLC     A
809E77 CE                XCH     A,R6
809E78 33                RLC     A
809E79 CE                XCH     A,R6
809E7A D8F9              DJNZ    R0,?C0983?MAINFLOW
809E7C FF                MOV     R7,A
809E7D 24DF              ADD     A,#LOW HopperSetList
809E7F F582              MOV     DPL,A
809E81 740A              MOV     A,#HIGH HopperSetList
809E83 3E                ADDC    A,R6
809E84 F583              MOV     DPH,A
809E86 E0                MOVX    A,@DPTR
809E87 FA                MOV     R2,A
809E88 A3                INC     DPTR
809E89 E0                MOVX    A,@DPTR
809E8A 4A                ORL     A,R2
809E8B 700D              JNZ     ?C0157?MAINFLOW
  677: 			HopperSetList[i].HopperState = 2;				
809E8D 74E2              MOV     A,#LOW HopperSetList+03H
809E8F 2F                ADD     A,R7
809E90 F582              MOV     DPL,A
809E92 740A              MOV     A,#HIGH HopperSetList+03H
809E94 3E                ADDC    A,R6
809E95 F583              MOV     DPH,A
809E97 7402              MOV     A,#02H
809E99 F0                MOVX    @DPTR,A
  678: 	}
809E9A         ?C0157?MAINFLOW:
809E9A 0D                INC     R5
809E9B BD0001            CJNE    R5,#00H,?C0984?MAINFLOW
809E9E 0C                INC     R4
809E9F         ?C0984?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 375


809E9F ED                MOV     A,R5
809EA0 6403              XRL     A,#03H
809EA2 4C                ORL     A,R4
809EA3 70CB              JNZ     ?C0155?MAINFLOW
809EA5         ?C0156?MAINFLOW:
  679: 	//如果HOPPER内的面值为0则此HOPPER不能参数配币
  680: 	for( i = 0; i < 3; i ++ )
809EA5 E4                CLR     A
809EA6 FC                MOV     R4,A
809EA7 FD                MOV     R5,A
809EA8         ?C0159?MAINFLOW:
  681: 	{
  682: 		if( HopperSetList[i].price == 0 )		
809EA8 ED                MOV     A,R5
809EA9 AE04              MOV     R6,AR4
809EAB 7802              MOV     R0,#02H
809EAD         ?C0985?MAINFLOW:
809EAD C3                CLR     C
809EAE 33                RLC     A
809EAF CE                XCH     A,R6
809EB0 33                RLC     A
809EB1 CE                XCH     A,R6
809EB2 D8F9              DJNZ    R0,?C0985?MAINFLOW
809EB4 24DF              ADD     A,#LOW HopperSetList
809EB6 F582              MOV     DPL,A
809EB8 740A              MOV     A,#HIGH HopperSetList
809EBA 3E                ADDC    A,R6
809EBB F583              MOV     DPH,A
809EBD E0                MOVX    A,@DPTR
809EBE FE                MOV     R6,A
809EBF A3                INC     DPTR
809EC0 E0                MOVX    A,@DPTR
809EC1 4E                ORL     A,R6
809EC2 600B              JZ      ?C0160?MAINFLOW
  683: 			break;
  684: 	}
809EC4         ?C0161?MAINFLOW:
809EC4 0D                INC     R5
809EC5 BD0001            CJNE    R5,#00H,?C0986?MAINFLOW
809EC8 0C                INC     R4
809EC9         ?C0986?MAINFLOW:
809EC9 ED                MOV     A,R5
809ECA 6403              XRL     A,#03H
809ECC 4C                ORL     A,R4
809ECD 70D9              JNZ     ?C0159?MAINFLOW
809ECF         ?C0160?MAINFLOW:
  685: 	if( ( i > 0 )&& ( HopperSetList[i - 1].HopperState != 1 ) )
809ECF D3                SETB    C
809ED0 ED                MOV     A,R5
809ED1 9400              SUBB    A,#00H
809ED3 EC                MOV     A,R4
809ED4 9400              SUBB    A,#00H
809ED6 401C              JC      ?C0163?MAINFLOW
809ED8 AE04              MOV     R6,AR4
809EDA ED                MOV     A,R5
809EDB 7802              MOV     R0,#02H
809EDD         ?C0987?MAINFLOW:
809EDD C3                CLR     C
809EDE 33                RLC     A
809EDF CE                XCH     A,R6
809EE0 33                RLC     A
809EE1 CE                XCH     A,R6
809EE2 D8F9              DJNZ    R0,?C0987?MAINFLOW
809EE4 24DE              ADD     A,#LOW HopperSetList-01H
809EE6 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 376


809EE8 740A              MOV     A,#HIGH HopperSetList-01H
809EEA 3E                ADDC    A,R6
809EEB F583              MOV     DPH,A
809EED E0                MOVX    A,@DPTR
809EEE 6401              XRL     A,#01H
809EF0 6002              JZ      ?C0163?MAINFLOW
  686: 		IsCanInCashFlag = 0;
809EF2 C226              CLR     IsCanInCashFlag
809EF4         ?C0163?MAINFLOW:
  687: 
  688: 	if( HardWareErr & 0x0004 )
809EF4 900480            MOV     DPTR,#HardWareErr+01H
809EF7 E0                MOVX    A,@DPTR
809EF8 30E207            JNB     ACC.2,?C0165?MAINFLOW
  689: 		HardWareErr = 0;
809EFB E4                CLR     A
809EFC 90047F            MOV     DPTR,#HardWareErr
809EFF F0                MOVX    @DPTR,A
809F00 A3                INC     DPTR
809F01 F0                MOVX    @DPTR,A
  690: }
809F02         ?C0165?MAINFLOW:
809F02 A522              ERET    
----- FUNCTION GetHopperList (END) -------


----- FUNCTION GetMinHopper (BEGIN) -----
 FILE: 'mainflow.c'
  694: u_char GetMinHopper()
  695: {
  696: 	if( HopperSetList[2].price != 0 )
  697: 		return 2;
809F04 900AE7            MOV     DPTR,#HopperSetList+08H
809F07 E0                MOVX    A,@DPTR
809F08 7002              JNZ     ?C0988?MAINFLOW
809F0A A3                INC     DPTR
809F0B E0                MOVX    A,@DPTR
809F0C         ?C0988?MAINFLOW:
809F0C 6004              JZ      ?C0166?MAINFLOW
  698: 	else if( HopperSetList[1].price != 0 )
809F0E 7F02              MOV     R7,#02H
809F10 800E              SJMP    ?C0167?MAINFLOW
809F12         ?C0166?MAINFLOW:
  699: 		return 1;
809F12 900AE3            MOV     DPTR,#HopperSetList+04H
809F15 E0                MOVX    A,@DPTR
809F16 7002              JNZ     ?C0989?MAINFLOW
809F18 A3                INC     DPTR
809F19 E0                MOVX    A,@DPTR
809F1A         ?C0989?MAINFLOW:
809F1A 7F00              MOV     R7,#00H
809F1C 6002              JZ      ?C0169?MAINFLOW
  700: 	else
809F1E 7F01              MOV     R7,#01H
809F20         ?C0169?MAINFLOW:
  701: 		return 0;
  702: }
809F20         ?C0167?MAINFLOW:
809F20 A522              ERET    
----- FUNCTION GetMinHopper (END) -------


----- FUNCTION ?L?COM0031 (BEGIN) -----
809F22 E4                CLR     A
809F23 901595            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 377


809F26 F0                MOVX    @DPTR,A
----- FUNCTION IsCanChange (BEGIN) -----
 FILE: 'mainflow.c'
  705: u_char IsCanChange()
  706: {
  707: 	u_char i = 0;
  708: 
;---- Variable 'i' assigned to Register 'R7' ----
809F27 E4                CLR     A
809F28 FF                MOV     R7,A
  709: 	for(i = 0; i < 3; i ++ )
809F29         ?C0171?MAINFLOW:
  710: 	{
  711: 		if( ( HopperSetList[i].HopperState == 1 ) && ( HopperSetList[i].price != 0 ) )
809F29 EF                MOV     A,R7
809F2A 25E0              ADD     A,ACC
809F2C 25E0              ADD     A,ACC
809F2E 24E2              ADD     A,#LOW HopperSetList+03H
809F30 F582              MOV     DPL,A
809F32 E4                CLR     A
809F33 340A              ADDC    A,#HIGH HopperSetList+03H
809F35 F583              MOV     DPH,A
809F37 E0                MOVX    A,@DPTR
809F38 B40115            CJNE    A,#01H,?C0173?MAINFLOW
809F3B EF                MOV     A,R7
809F3C 25E0              ADD     A,ACC
809F3E 25E0              ADD     A,ACC
809F40 24DF              ADD     A,#LOW HopperSetList
809F42 F582              MOV     DPL,A
809F44 E4                CLR     A
809F45 340A              ADDC    A,#HIGH HopperSetList
809F47 F583              MOV     DPH,A
809F49 E0                MOVX    A,@DPTR
809F4A FC                MOV     R4,A
809F4B A3                INC     DPTR
809F4C E0                MOVX    A,@DPTR
809F4D 4C                ORL     A,R4
809F4E 7005              JNZ     ?C0172?MAINFLOW
  712: 			break;
  713: 	}
809F50         ?C0173?MAINFLOW:
809F50 0F                INC     R7
809F51 EF                MOV     A,R7
809F52 B403D4            CJNE    A,#03H,?C0171?MAINFLOW
809F55         ?C0172?MAINFLOW:
  714: 	if( i == 3 )
809F55 EF                MOV     A,R7
809F56 7F01              MOV     R7,#01H
809F58 B40302            CJNE    A,#03H,?C0175?MAINFLOW
  715: 		return 0;
809F5B 7F00              MOV     R7,#00H
809F5D         ?C0175?MAINFLOW:
  716: 	else
  717: 		return 1;
  718: }
809F5D         ?C0176?MAINFLOW:
809F5D A522              ERET    
----- FUNCTION IsCanChange (END) -------


----- FUNCTION ColnumIsCanServer (BEGIN) -----
 FILE: 'mainflow.c'
  721: u_char ColnumIsCanServer()
  722: {
  723: 	u_char i = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 378


  724: 
;---- Variable 'i' assigned to Register 'R7' ----
809F5F E4                CLR     A
809F60 FF                MOV     R7,A
  725: 	for( i = 0; i < GOODSWAYNUM; i ++ )
809F61         ?C0178?MAINFLOW:
  726: 	{
  727: 		if( ( ( GoodsWaySetVal[i].WayState & 0x01 ) == 0x01 ) && ( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 ) && (
>>  GoodsWaySetVal[i].GoodsCurrentSum != 0 ) && \
809F61 75F005            MOV     B,#05H
809F64 EF                MOV     A,R7
809F65 900003            MOV     DPTR,#GoodsWaySetVal+01H
809F68 A51280079F        ECALL   ?C?OFFXADD
809F6D E0                MOVX    A,@DPTR
809F6E 30E026            JNB     ACC.0,?C0180?MAINFLOW
809F71 540A              ANL     A,#0AH
809F73 7022              JNZ     ?C0180?MAINFLOW
809F75 75F005            MOV     B,#05H
809F78 EF                MOV     A,R7
809F79 900006            MOV     DPTR,#GoodsWaySetVal+04H
809F7C A51280079F        ECALL   ?C?OFFXADD
809F81 E0                MOVX    A,@DPTR
809F82 6013              JZ      ?C0180?MAINFLOW
809F84 75F005            MOV     B,#05H
809F87 EF                MOV     A,R7
809F88 900004            MOV     DPTR,#GoodsWaySetVal+02H
809F8B A51280079F        ECALL   ?C?OFFXADD
809F90 E0                MOVX    A,@DPTR
809F91 FC                MOV     R4,A
809F92 A3                INC     DPTR
809F93 E0                MOVX    A,@DPTR
809F94 4C                ORL     A,R4
809F95 7005              JNZ     ?C0179?MAINFLOW
  728: 				( GoodsWaySetVal[i].Price != 0 ) )
  729: 			break;
  730: 	}
809F97         ?C0180?MAINFLOW:
809F97 0F                INC     R7
809F98 EF                MOV     A,R7
809F99 B440C5            CJNE    A,#040H,?C0178?MAINFLOW
809F9C         ?C0179?MAINFLOW:
  731: 	if( i == GOODSWAYNUM )
809F9C EF                MOV     A,R7
809F9D 7F01              MOV     R7,#01H
809F9F B44002            CJNE    A,#040H,?C0182?MAINFLOW
  732: 		return 0;
809FA2 7F00              MOV     R7,#00H
809FA4         ?C0182?MAINFLOW:
  733: 	else
  734: 		return 1;
  735: }
809FA4         ?C0183?MAINFLOW:
809FA4 A522              ERET    
----- FUNCTION ColnumIsCanServer (END) -------


----- FUNCTION ScanIsSendAlarm (BEGIN) -----
 FILE: 'mainflow.c'
  737: u_char	ScanIsSendAlarm()
  738: {
  739: 	u_char xdata str1[6];
  740: 	u_char xdata m_SMSMessage[MAX_SMS_LEN];
  741: 	u_int  xdata len = 0;
809FA6 E4                CLR     A
809FA7 90163E            MOV     DPTR,#len
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 379


809FAA F0                MOVX    @DPTR,A
809FAB A3                INC     DPTR
809FAC F0                MOVX    @DPTR,A
  742: 	//bit0表示已添加了至少一个消息包;	
  743: 	u_char xdata flag = 0;
809FAD A3                INC     DPTR
809FAE F0                MOVX    @DPTR,A
  744: 	u_char xdata i = 0;
809FAF A3                INC     DPTR
809FB0 F0                MOVX    @DPTR,A
  745: 	u_char xdata Index = 0;
809FB1 A3                INC     DPTR
809FB2 F0                MOVX    @DPTR,A
  746: 	u_char xdata IsMorePage = 0;
809FB3 A3                INC     DPTR
809FB4 F0                MOVX    @DPTR,A
  747: 
  748: 	if( SystemParameter.MobileON != 1 )
809FB5 900444            MOV     DPTR,#SystemParameter+026H
809FB8 E0                MOVX    A,@DPTR
809FB9 6401              XRL     A,#01H
809FBB 6005              JZ      ?C0185?MAINFLOW
  749: 		return 1;
809FBD 7F01              MOV     R7,#01H
809FBF 02A8F4            LJMP    ?C0186?MAINFLOW
809FC2         ?C0185?MAINFLOW:
  750: 
  751: 	//是否可以向短信发送队列中添加短信
  752: 	if( !SMSCommStatus() )
809FC2 A51280AE9F        ECALL   SMSCommStatus
809FC7 4005              JC      ?C0187?MAINFLOW
  753: 	{
  754: 		//已不能向短信发送队列中添加短信了
  755: //		Trace("\n not add sms1");
  756: 		return 1;
809FC9 7F01              MOV     R7,#01H
809FCB 02A8F4            LJMP    ?C0186?MAINFLOW
  757: 	}
809FCE         ?C0187?MAINFLOW:
  758: 
  759: 	//是否可以向短信发送队列中添加短信
  760: /*	for( i = 0; i < MAX_SMS_LIST; i++ )
  761: 	{
  762: 		if( ( SMSMessage[i].SendTime == 0 ) && ( SMSMessage[i].SMSLen == 0 ) )
  763: 		//短信队列里还有空闲位置
  764: 			break;
  765: 	}
  766: 	if( i == MAX_SMS_LIST )
  767: 	{
  768: 		//短信队列里没有空闲位置
  769: 		for( i = 0; i < ( MAX_SMS_LIST - 1 ); i ++ )
  770: 		{	
  771: 			memcpy( &SMSMessage[ i ], &SMSMessage[ i + 1 ],sizeof(struct SMSMessageList ) );			
  772: 		}
  773: 		memset( &SMSMessage[ MAX_SMS_LIST - 1 ], 0, sizeof(struct SMSMessageList ) );		
  774: 		Index = MAX_SMS_LIST - 1;
  775: 	}
  776:    	else
  777: 		Index = i;
  778: */
  779: 	memset( m_SMSMessage, 0, sizeof( m_SMSMessage ) );	
809FCE 7E00              MOV     R6,#00H
809FD0 7FA0              MOV     R7,#0A0H
809FD2 7D00              MOV     R5,#00H
809FD4 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 380


809FD6 7A15              MOV     R2,#HIGH m_SMSMessage
809FD8 799E              MOV     R1,#LOW m_SMSMessage
809FDA A5128008A6        ECALL   ?C?MEMSET
  780: 	//添加短信头部
  781: 	memcpy( m_SMSMessage, "VMMSG", 5 );
809FDF 789E              MOV     R0,#LOW m_SMSMessage
809FE1 7C15              MOV     R4,#HIGH m_SMSMessage
809FE3 7D00              MOV     R5,#?C?XDATASEG
809FE5 7B80              MOV     R3,#BYTE2 080031FH
809FE7 7A03              MOV     R2,#HIGH 080031FH
809FE9 791F              MOV     R1,#LOW 080031FH
809FEB 7E00              MOV     R6,#00H
809FED 7F05              MOV     R7,#05H
809FEF A51280052D        ECALL   ?C?COPY
  782: 	len += 5;
809FF4 90163E            MOV     DPTR,#len
809FF7 E4                CLR     A
809FF8 75F005            MOV     B,#05H
809FFB A512800600        ECALL   ?C?IILDX
  783: 	for( i = 0; i < 5; i ++ )
80A000 E4                CLR     A
80A001 901641            MOV     DPTR,#i
80A004 F0                MOVX    @DPTR,A
80A005         ?C0188?MAINFLOW:
  784: 		sprintf( m_SMSMessage + len + i, "%bu", SystemParameter.VmID[i] );
80A005 90163E            MOV     DPTR,#len
80A008 E0                MOVX    A,@DPTR
80A009 FE                MOV     R6,A
80A00A A3                INC     DPTR
80A00B E0                MOVX    A,@DPTR
80A00C 249E              ADD     A,#LOW m_SMSMessage
80A00E F9                MOV     R1,A
80A00F 7415              MOV     A,#HIGH m_SMSMessage
80A011 3E                ADDC    A,R6
80A012 FA                MOV     R2,A
80A013 7B00              MOV     R3,#?C?XDATASEG
80A015 901641            MOV     DPTR,#i
80A018 E0                MOVX    A,@DPTR
80A019 FF                MOV     R7,A
80A01A 29                ADD     A,R1
80A01B F9                MOV     R1,A
80A01C E4                CLR     A
80A01D 3A                ADDC    A,R2
80A01E FA                MOV     R2,A
80A01F C003              PUSH    AR3
80A021 C002              PUSH    AR2
80A023 C001              PUSH    AR1
80A025 7B80              MOV     R3,#BYTE2 0800325H
80A027 7A03              MOV     R2,#HIGH 0800325H
80A029 7925              MOV     R1,#LOW 0800325H
80A02B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80A02E A5128007B6        ECALL   ?C?PSTXDATA
80A033 742F              MOV     A,#LOW SystemParameter+011H
80A035 2F                ADD     A,R7
80A036 F582              MOV     DPL,A
80A038 E4                CLR     A
80A039 3404              ADDC    A,#HIGH SystemParameter+011H
80A03B F583              MOV     DPH,A
80A03D E0                MOVX    A,@DPTR
80A03E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80A041 F0                MOVX    @DPTR,A
80A042 D001              POP     AR1
80A044 D002              POP     AR2
80A046 D003              POP     AR3
80A048 A512800949        ECALL   _sprintf
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 381


80A04D 901641            MOV     DPTR,#i
80A050 E0                MOVX    A,@DPTR
80A051 04                INC     A
80A052 F0                MOVX    @DPTR,A
80A053 E0                MOVX    A,@DPTR
80A054 C3                CLR     C
80A055 9405              SUBB    A,#05H
80A057 40AC              JC      ?C0188?MAINFLOW
80A059         ?C0189?MAINFLOW:
  785: 	len += 5;	
80A059 90163E            MOV     DPTR,#len
80A05C E4                CLR     A
80A05D 75F005            MOV     B,#05H
80A060 A512800600        ECALL   ?C?IILDX
  786: 	m_SMSMessage[len++] = '\r';
80A065 90163E            MOV     DPTR,#len
80A068 E4                CLR     A
80A069 75F001            MOV     B,#01H
80A06C A512800617        ECALL   ?C?ILDIX
80A071 FE                MOV     R6,A
80A072 749E              MOV     A,#LOW m_SMSMessage
80A074 25F0              ADD     A,B
80A076 F582              MOV     DPL,A
80A078 7415              MOV     A,#HIGH m_SMSMessage
80A07A 3E                ADDC    A,R6
80A07B F583              MOV     DPH,A
80A07D 740D              MOV     A,#0DH
80A07F F0                MOVX    @DPTR,A
  787: 	//处理系统故障
  788: 	//暂停服务
  789: 	if( ( SystemStatus == 2 ) && ( ( SystemErrorAlarm & 0x01 ) != 0x01 ) )
80A080 9001C4            MOV     DPTR,#SystemStatus
80A083 E0                MOVX    A,@DPTR
80A084 6402              XRL     A,#02H
80A086 705D              JNZ     ?C0191?MAINFLOW
80A088 900142            MOV     DPTR,#SystemErrorAlarm
80A08B E0                MOVX    A,@DPTR
80A08C 20E056            JB      ACC.0,?C0191?MAINFLOW
  790: 	{
  791: 		memcpy( m_SMSMessage + len, "S0090", 5 );		
80A08F 90163E            MOV     DPTR,#len
80A092 A3                INC     DPTR
80A093 E0                MOVX    A,@DPTR
80A094 249E              ADD     A,#LOW m_SMSMessage
80A096 F9                MOV     R1,A
80A097 E4                CLR     A
80A098 3415              ADDC    A,#HIGH m_SMSMessage
80A09A A801              MOV     R0,AR1
80A09C FC                MOV     R4,A
80A09D 7D00              MOV     R5,#?C?XDATASEG
80A09F 7B80              MOV     R3,#BYTE2 0800329H
80A0A1 7A03              MOV     R2,#HIGH 0800329H
80A0A3 7929              MOV     R1,#LOW 0800329H
80A0A5 7E00              MOV     R6,#00H
80A0A7 7F05              MOV     R7,#05H
80A0A9 A51280052D        ECALL   ?C?COPY
  792: 		len += 5;	
80A0AE 90163E            MOV     DPTR,#len
80A0B1 E4                CLR     A
80A0B2 75F005            MOV     B,#05H
80A0B5 A512800600        ECALL   ?C?IILDX
  793: 		flag |= 0x03;
80A0BA 901640            MOV     DPTR,#flag
80A0BD E0                MOVX    A,@DPTR
80A0BE 4403              ORL     A,#03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 382


80A0C0 F0                MOVX    @DPTR,A
  794: 		m_SMSMessage[len++] = '\r';				
80A0C1 90163E            MOV     DPTR,#len
80A0C4 E4                CLR     A
80A0C5 75F001            MOV     B,#01H
80A0C8 A512800617        ECALL   ?C?ILDIX
80A0CD FE                MOV     R6,A
80A0CE 749E              MOV     A,#LOW m_SMSMessage
80A0D0 25F0              ADD     A,B
80A0D2 F582              MOV     DPL,A
80A0D4 7415              MOV     A,#HIGH m_SMSMessage
80A0D6 3E                ADDC    A,R6
80A0D7 F583              MOV     DPH,A
80A0D9 740D              MOV     A,#0DH
80A0DB F0                MOVX    @DPTR,A
  795: 		SystemErrorAlarm |= 0x01;		
80A0DC 900142            MOV     DPTR,#SystemErrorAlarm
80A0DF E0                MOVX    A,@DPTR
80A0E0 4401              ORL     A,#01H
80A0E2 F0                MOVX    @DPTR,A
  796: 	}
80A0E3 800E              SJMP    ?C0192?MAINFLOW
80A0E5         ?C0191?MAINFLOW:
  797: 	else if( SystemStatus == 1 )
80A0E5 9001C4            MOV     DPTR,#SystemStatus
80A0E8 E0                MOVX    A,@DPTR
80A0E9 B40107            CJNE    A,#01H,?C0192?MAINFLOW
  798: 		SystemErrorAlarm &= 0xfe;	
80A0EC 900142            MOV     DPTR,#SystemErrorAlarm
80A0EF E0                MOVX    A,@DPTR
80A0F0 54FE              ANL     A,#0FEH
80A0F2 F0                MOVX    @DPTR,A
80A0F3         ?C0192?MAINFLOW:
  799: 	//参数校验错误
  800: 	if( ( ( HardWareErr & 0x0100 ) == 0x0100 ) && ( ( SystemErrorAlarm & 0x02 ) != 0x02 ) )
80A0F3 90047F            MOV     DPTR,#HardWareErr
80A0F6 E0                MOVX    A,@DPTR
80A0F7 30E071            JNB     ACC.0,?C0194?MAINFLOW
80A0FA 900142            MOV     DPTR,#SystemErrorAlarm
80A0FD E0                MOVX    A,@DPTR
80A0FE 20E16A            JB      ACC.1,?C0194?MAINFLOW
  801: 	{		
  802: 		if( ( flag & 0x02 ) == 0x02 )
80A101 901640            MOV     DPTR,#flag
80A104 E0                MOVX    A,@DPTR
80A105 30E117            JNB     ACC.1,?C0195?MAINFLOW
  803: 			memcpy( m_SMSMessage - 5, "S0010", 5 );
80A108 7899              MOV     R0,#LOW m_SMSMessage-05H
80A10A 7C15              MOV     R4,#HIGH m_SMSMessage-05H
80A10C 7D00              MOV     R5,#?C?XDATASEG
80A10E 7B80              MOV     R3,#BYTE2 080032FH
80A110 7A03              MOV     R2,#HIGH 080032FH
80A112 792F              MOV     R1,#LOW 080032FH
80A114 7E00              MOV     R6,#00H
80A116 7F05              MOV     R7,#05H
80A118 A51280052D        ECALL   ?C?COPY
80A11D 8028              SJMP    ?C0196?MAINFLOW
80A11F         ?C0195?MAINFLOW:
  804: 		else
  805: 		{
  806: 			memcpy( m_SMSMessage, "S0010", 5 );
80A11F 789E              MOV     R0,#LOW m_SMSMessage
80A121 7C15              MOV     R4,#HIGH m_SMSMessage
80A123 7D00              MOV     R5,#?C?XDATASEG
80A125 7B80              MOV     R3,#BYTE2 080032FH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 383


80A127 7A03              MOV     R2,#HIGH 080032FH
80A129 792F              MOV     R1,#LOW 080032FH
80A12B 7E00              MOV     R6,#00H
80A12D 7F05              MOV     R7,#05H
80A12F A51280052D        ECALL   ?C?COPY
  807: 			len += 5;	
80A134 90163E            MOV     DPTR,#len
80A137 E4                CLR     A
80A138 75F005            MOV     B,#05H
80A13B A512800600        ECALL   ?C?IILDX
  808: 			flag |= 0x03;
80A140 901640            MOV     DPTR,#flag
80A143 E0                MOVX    A,@DPTR
80A144 4403              ORL     A,#03H
80A146 F0                MOVX    @DPTR,A
  809: 		}
80A147         ?C0196?MAINFLOW:
  810: 		m_SMSMessage[len++] = '\r';			
80A147 90163E            MOV     DPTR,#len
80A14A E4                CLR     A
80A14B 75F001            MOV     B,#01H
80A14E A512800617        ECALL   ?C?ILDIX
80A153 FE                MOV     R6,A
80A154 749E              MOV     A,#LOW m_SMSMessage
80A156 25F0              ADD     A,B
80A158 F582              MOV     DPL,A
80A15A 7415              MOV     A,#HIGH m_SMSMessage
80A15C 3E                ADDC    A,R6
80A15D F583              MOV     DPH,A
80A15F 740D              MOV     A,#0DH
80A161 F0                MOVX    @DPTR,A
  811: 		SystemErrorAlarm |= 0x02;
80A162 900142            MOV     DPTR,#SystemErrorAlarm
80A165 E0                MOVX    A,@DPTR
80A166 4402              ORL     A,#02H
80A168 F0                MOVX    @DPTR,A
  812: 	}
80A169 800E              SJMP    ?C0197?MAINFLOW
80A16B         ?C0194?MAINFLOW:
  813: 	else if( ( HardWareErr & 0x0100 ) == 0 )
80A16B 90047F            MOV     DPTR,#HardWareErr
80A16E E0                MOVX    A,@DPTR
80A16F 20E007            JB      ACC.0,?C0197?MAINFLOW
  814: 		SystemErrorAlarm &= 0xfd;	
80A172 900142            MOV     DPTR,#SystemErrorAlarm
80A175 E0                MOVX    A,@DPTR
80A176 54FD              ANL     A,#0FDH
80A178 F0                MOVX    @DPTR,A
80A179         ?C0197?MAINFLOW:
  815: 	//显示板通讯故障
  816: 	if( ( ( HardWareErr & 0x0200 ) == 0x0200 ) && ( ( SystemErrorAlarm & 0x04 ) != 0x04 ) )
80A179 90047F            MOV     DPTR,#HardWareErr
80A17C E0                MOVX    A,@DPTR
80A17D 30E15D            JNB     ACC.1,?C0199?MAINFLOW
80A180 900142            MOV     DPTR,#SystemErrorAlarm
80A183 E0                MOVX    A,@DPTR
80A184 20E256            JB      ACC.2,?C0199?MAINFLOW
  817: 	{
  818: 		Trace( "\n ScanIsSendAlarm lcd error");		
  819: 		memcpy( m_SMSMessage + len, "H0120", 5 );
80A187 90163E            MOV     DPTR,#len
80A18A A3                INC     DPTR
80A18B E0                MOVX    A,@DPTR
80A18C 249E              ADD     A,#LOW m_SMSMessage
80A18E F9                MOV     R1,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 384


80A18F E4                CLR     A
80A190 3415              ADDC    A,#HIGH m_SMSMessage
80A192 A801              MOV     R0,AR1
80A194 FC                MOV     R4,A
80A195 7D00              MOV     R5,#?C?XDATASEG
80A197 7B80              MOV     R3,#BYTE2 0800335H
80A199 7A03              MOV     R2,#HIGH 0800335H
80A19B 7935              MOV     R1,#LOW 0800335H
80A19D 7E00              MOV     R6,#00H
80A19F 7F05              MOV     R7,#05H
80A1A1 A51280052D        ECALL   ?C?COPY
  820: 		len += 5;	
80A1A6 90163E            MOV     DPTR,#len
80A1A9 E4                CLR     A
80A1AA 75F005            MOV     B,#05H
80A1AD A512800600        ECALL   ?C?IILDX
  821: 		flag |= 0x01;
80A1B2 901640            MOV     DPTR,#flag
80A1B5 E0                MOVX    A,@DPTR
80A1B6 4401              ORL     A,#01H
80A1B8 F0                MOVX    @DPTR,A
  822: 		m_SMSMessage[len++] = '\r';		
80A1B9 90163E            MOV     DPTR,#len
80A1BC E4                CLR     A
80A1BD 75F001            MOV     B,#01H
80A1C0 A512800617        ECALL   ?C?ILDIX
80A1C5 FE                MOV     R6,A
80A1C6 749E              MOV     A,#LOW m_SMSMessage
80A1C8 25F0              ADD     A,B
80A1CA F582              MOV     DPL,A
80A1CC 7415              MOV     A,#HIGH m_SMSMessage
80A1CE 3E                ADDC    A,R6
80A1CF F583              MOV     DPH,A
80A1D1 740D              MOV     A,#0DH
80A1D3 F0                MOVX    @DPTR,A
  823: 		SystemErrorAlarm |= 0x04;
80A1D4 900142            MOV     DPTR,#SystemErrorAlarm
80A1D7 E0                MOVX    A,@DPTR
80A1D8 4404              ORL     A,#04H
80A1DA F0                MOVX    @DPTR,A
  824: 	}
80A1DB 800E              SJMP    ?C0200?MAINFLOW
80A1DD         ?C0199?MAINFLOW:
  825: 	else if( ( HardWareErr & 0x0200 ) == 0 )
80A1DD 90047F            MOV     DPTR,#HardWareErr
80A1E0 E0                MOVX    A,@DPTR
80A1E1 20E107            JB      ACC.1,?C0200?MAINFLOW
  826: 		SystemErrorAlarm &= 0xfb;
80A1E4 900142            MOV     DPTR,#SystemErrorAlarm
80A1E7 E0                MOVX    A,@DPTR
80A1E8 54FB              ANL     A,#0FBH
80A1EA F0                MOVX    @DPTR,A
80A1EB         ?C0200?MAINFLOW:
  827: 	////货道驱动板扫描		
  828: 	if( ( ( HardWareErr & 0x0040 ) == 0x0040 ) && ( ( SystemErrorAlarm & 0x40 ) != 0x40 ) )
80A1EB 900480            MOV     DPTR,#HardWareErr+01H
80A1EE E0                MOVX    A,@DPTR
80A1EF 30E65D            JNB     ACC.6,?C0202?MAINFLOW
80A1F2 900142            MOV     DPTR,#SystemErrorAlarm
80A1F5 E0                MOVX    A,@DPTR
80A1F6 20E656            JB      ACC.6,?C0202?MAINFLOW
  829: 	{
  830: 		Trace( "\n ScanIsSendAlarm link error");
  831: 		//都与主板通讯不上
  832: 		memcpy( m_SMSMessage+len, "S0320", 5 );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 385


80A1F9 90163E            MOV     DPTR,#len
80A1FC A3                INC     DPTR
80A1FD E0                MOVX    A,@DPTR
80A1FE 249E              ADD     A,#LOW m_SMSMessage
80A200 F9                MOV     R1,A
80A201 E4                CLR     A
80A202 3415              ADDC    A,#HIGH m_SMSMessage
80A204 A801              MOV     R0,AR1
80A206 FC                MOV     R4,A
80A207 7D00              MOV     R5,#?C?XDATASEG
80A209 7B80              MOV     R3,#BYTE2 080033BH
80A20B 7A03              MOV     R2,#HIGH 080033BH
80A20D 793B              MOV     R1,#LOW 080033BH
80A20F 7E00              MOV     R6,#00H
80A211 7F05              MOV     R7,#05H
80A213 A51280052D        ECALL   ?C?COPY
  833: 		len  += 5;
80A218 90163E            MOV     DPTR,#len
80A21B E4                CLR     A
80A21C 75F005            MOV     B,#05H
80A21F A512800600        ECALL   ?C?IILDX
  834: 		m_SMSMessage[len++] = '\r';	
80A224 90163E            MOV     DPTR,#len
80A227 E4                CLR     A
80A228 75F001            MOV     B,#01H
80A22B A512800617        ECALL   ?C?ILDIX
80A230 FE                MOV     R6,A
80A231 749E              MOV     A,#LOW m_SMSMessage
80A233 25F0              ADD     A,B
80A235 F582              MOV     DPL,A
80A237 7415              MOV     A,#HIGH m_SMSMessage
80A239 3E                ADDC    A,R6
80A23A F583              MOV     DPH,A
80A23C 740D              MOV     A,#0DH
80A23E F0                MOVX    @DPTR,A
  835: 		flag |= 0x01;	
80A23F 901640            MOV     DPTR,#flag
80A242 E0                MOVX    A,@DPTR
80A243 4401              ORL     A,#01H
80A245 F0                MOVX    @DPTR,A
  836: 		SystemErrorAlarm |= 0x40;		
80A246 900142            MOV     DPTR,#SystemErrorAlarm
80A249 E0                MOVX    A,@DPTR
80A24A 4440              ORL     A,#040H
80A24C F0                MOVX    @DPTR,A
  837: 	}
80A24D 800E              SJMP    ?C0203?MAINFLOW
80A24F         ?C0202?MAINFLOW:
  838: 	else if( ( HardWareErr & 0x0040 ) == 0x0040 )
80A24F 900480            MOV     DPTR,#HardWareErr+01H
80A252 E0                MOVX    A,@DPTR
80A253 30E607            JNB     ACC.6,?C0203?MAINFLOW
  839: 		SystemErrorAlarm &= 0xbf;//复位已发送标志	
80A256 900142            MOV     DPTR,#SystemErrorAlarm
80A259 E0                MOVX    A,@DPTR
80A25A 54BF              ANL     A,#0BFH
80A25C F0                MOVX    @DPTR,A
80A25D         ?C0203?MAINFLOW:
  840: 
  841: 	//纸币器
  842: 	if( SystemParameter.BillNo == 1 )
80A25D 900425            MOV     DPTR,#SystemParameter+07H
80A260 E0                MOVX    A,@DPTR
80A261 6401              XRL     A,#01H
80A263 706A              JNZ     ?C0205?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 386


  843: 	{
  844: 		//开启了纸币器
  845: 		if( DeviceStatus.BillAccepter == 0 )
80A265 900B16            MOV     DPTR,#DeviceStatus
80A268 E0                MOVX    A,@DPTR
80A269 7009              JNZ     ?C0206?MAINFLOW
  846: 			MoneyDevAlarm &= 0x7f;
80A26B 90041D            MOV     DPTR,#MoneyDevAlarm
80A26E E0                MOVX    A,@DPTR
80A26F 547F              ANL     A,#07FH
80A271 F0                MOVX    @DPTR,A
80A272 805B              SJMP    ?C0205?MAINFLOW
80A274         ?C0206?MAINFLOW:
  847: 	   	else if( ( MoneyDevAlarm & 0x80 ) != 0x80 )
80A274 90041D            MOV     DPTR,#MoneyDevAlarm
80A277 E0                MOVX    A,@DPTR
80A278 20E754            JB      ACC.7,?C0205?MAINFLOW
  848: 		{
  849: 			Trace( "\n ScanIsSendAlarm bill error");
  850: 			//还没有发送报警,准备发送			
  851: 			memcpy( m_SMSMessage+len, "A0210", 5 );
80A27B 90163E            MOV     DPTR,#len
80A27E A3                INC     DPTR
80A27F E0                MOVX    A,@DPTR
80A280 249E              ADD     A,#LOW m_SMSMessage
80A282 F9                MOV     R1,A
80A283 E4                CLR     A
80A284 3415              ADDC    A,#HIGH m_SMSMessage
80A286 A801              MOV     R0,AR1
80A288 FC                MOV     R4,A
80A289 7D00              MOV     R5,#?C?XDATASEG
80A28B 7B80              MOV     R3,#BYTE2 0800341H
80A28D 7A03              MOV     R2,#HIGH 0800341H
80A28F 7941              MOV     R1,#LOW 0800341H
80A291 7E00              MOV     R6,#00H
80A293 7F05              MOV     R7,#05H
80A295 A51280052D        ECALL   ?C?COPY
  852: 			len += 5;			
80A29A 90163E            MOV     DPTR,#len
80A29D E4                CLR     A
80A29E 75F005            MOV     B,#05H
80A2A1 A512800600        ECALL   ?C?IILDX
  853: 			m_SMSMessage[len++] = '\r';	
80A2A6 90163E            MOV     DPTR,#len
80A2A9 E4                CLR     A
80A2AA 75F001            MOV     B,#01H
80A2AD A512800617        ECALL   ?C?ILDIX
80A2B2 FE                MOV     R6,A
80A2B3 749E              MOV     A,#LOW m_SMSMessage
80A2B5 25F0              ADD     A,B
80A2B7 F582              MOV     DPL,A
80A2B9 7415              MOV     A,#HIGH m_SMSMessage
80A2BB 3E                ADDC    A,R6
80A2BC F583              MOV     DPH,A
80A2BE 740D              MOV     A,#0DH
80A2C0 F0                MOVX    @DPTR,A
  854: 			flag |= 0x01;		
80A2C1 901640            MOV     DPTR,#flag
80A2C4 E0                MOVX    A,@DPTR
80A2C5 4401              ORL     A,#01H
80A2C7 F0                MOVX    @DPTR,A
  855: 			MoneyDevAlarm |= 0x80;		   
80A2C8 90041D            MOV     DPTR,#MoneyDevAlarm
80A2CB E0                MOVX    A,@DPTR
80A2CC 4480              ORL     A,#080H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 387


80A2CE F0                MOVX    @DPTR,A
  856: 		}
  857: 	}		
80A2CF         ?C0205?MAINFLOW:
  858: 	//硬币器
  859: 	if( DeviceStatus.CoinAccepter == 0 )
80A2CF 900B17            MOV     DPTR,#DeviceStatus+01H
80A2D2 E0                MOVX    A,@DPTR
80A2D3 7009              JNZ     ?C0209?MAINFLOW
  860: 		MoneyDevAlarm &= 0xbf;
80A2D5 90041D            MOV     DPTR,#MoneyDevAlarm
80A2D8 E0                MOVX    A,@DPTR
80A2D9 54BF              ANL     A,#0BFH
80A2DB F0                MOVX    @DPTR,A
80A2DC 805B              SJMP    ?C0210?MAINFLOW
80A2DE         ?C0209?MAINFLOW:
  861: 	else if( ( MoneyDevAlarm & 0x40 ) != 0x40 )
80A2DE 90041D            MOV     DPTR,#MoneyDevAlarm
80A2E1 E0                MOVX    A,@DPTR
80A2E2 20E654            JB      ACC.6,?C0210?MAINFLOW
  862: 	{
  863: 		Trace( "\n ScanIsSendAlarm coin error");
  864: 		//还没有发送报警,准备发送
  865: 		memcpy( m_SMSMessage + len, "A0110", 5 );
80A2E5 90163E            MOV     DPTR,#len
80A2E8 A3                INC     DPTR
80A2E9 E0                MOVX    A,@DPTR
80A2EA 249E              ADD     A,#LOW m_SMSMessage
80A2EC F9                MOV     R1,A
80A2ED E4                CLR     A
80A2EE 3415              ADDC    A,#HIGH m_SMSMessage
80A2F0 A801              MOV     R0,AR1
80A2F2 FC                MOV     R4,A
80A2F3 7D00              MOV     R5,#?C?XDATASEG
80A2F5 7B80              MOV     R3,#BYTE2 0800347H
80A2F7 7A03              MOV     R2,#HIGH 0800347H
80A2F9 7947              MOV     R1,#LOW 0800347H
80A2FB 7E00              MOV     R6,#00H
80A2FD 7F05              MOV     R7,#05H
80A2FF A51280052D        ECALL   ?C?COPY
  866: 		len += 5;
80A304 90163E            MOV     DPTR,#len
80A307 E4                CLR     A
80A308 75F005            MOV     B,#05H
80A30B A512800600        ECALL   ?C?IILDX
  867: 		m_SMSMessage[len++] = '\r';	
80A310 90163E            MOV     DPTR,#len
80A313 E4                CLR     A
80A314 75F001            MOV     B,#01H
80A317 A512800617        ECALL   ?C?ILDIX
80A31C FE                MOV     R6,A
80A31D 749E              MOV     A,#LOW m_SMSMessage
80A31F 25F0              ADD     A,B
80A321 F582              MOV     DPL,A
80A323 7415              MOV     A,#HIGH m_SMSMessage
80A325 3E                ADDC    A,R6
80A326 F583              MOV     DPH,A
80A328 740D              MOV     A,#0DH
80A32A F0                MOVX    @DPTR,A
  868: 		flag |= 0x01;	
80A32B 901640            MOV     DPTR,#flag
80A32E E0                MOVX    A,@DPTR
80A32F 4401              ORL     A,#01H
80A331 F0                MOVX    @DPTR,A
  869: 		MoneyDevAlarm |= 0x40;	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 388


80A332 90041D            MOV     DPTR,#MoneyDevAlarm
80A335 E0                MOVX    A,@DPTR
80A336 4440              ORL     A,#040H
80A338 F0                MOVX    @DPTR,A
  870: 	}	
80A339         ?C0210?MAINFLOW:
  871: 	//HOPPER1
  872: 	//flag的bit7表示已添加了一种HOPPER故障，扫描其它HOPPER则重置它	
  873: 	memset( str1, 0, sizeof( str1 ) );
80A339 7E00              MOV     R6,#00H
80A33B 7F06              MOV     R7,#06H
80A33D 7D00              MOV     R5,#00H
80A33F 7B00              MOV     R3,#?C?XDATASEG
80A341 7A15              MOV     R2,#HIGH str1
80A343 7998              MOV     R1,#LOW str1
80A345 A5128008A6        ECALL   ?C?MEMSET
  874: 	flag &= 0x7f;
80A34A 901640            MOV     DPTR,#flag
80A34D E0                MOVX    A,@DPTR
80A34E 547F              ANL     A,#07FH
80A350 F0                MOVX    @DPTR,A
  875: 	if( ( SystemParameter.HopperCoinPrice1 ) != 0 )
80A351 90041F            MOV     DPTR,#SystemParameter+01H
80A354 E0                MOVX    A,@DPTR
80A355 7002              JNZ     ?C0990?MAINFLOW
80A357 A3                INC     DPTR
80A358 E0                MOVX    A,@DPTR
80A359         ?C0990?MAINFLOW:
80A359 7003              JNZ     $ + 5H
80A35B 02A42A            LJMP    ?C0212?MAINFLOW
  876: 	{
  877: 		if( DeviceStatus.ChangeUnit1 == 0 )
80A35E 900B18            MOV     DPTR,#DeviceStatus+02H
80A361 E0                MOVX    A,@DPTR
80A362 FD                MOV     R5,A
80A363 7009              JNZ     ?C0213?MAINFLOW
  878: 			MoneyDevAlarm &= 0xfc;
80A365 90041D            MOV     DPTR,#MoneyDevAlarm
80A368 E0                MOVX    A,@DPTR
80A369 54FC              ANL     A,#0FCH
80A36B F0                MOVX    @DPTR,A
80A36C 8068              SJMP    ?C0214?MAINFLOW
80A36E         ?C0213?MAINFLOW:
  879: 		else if( ( ( DeviceStatus.ChangeUnit1 & 0x01 ) == 0x01 ) && ( ( MoneyDevAlarm & 0x01 ) != 0x01 ) )
80A36E ED                MOV     A,R5
80A36F 30E028            JNB     ACC.0,?C0215?MAINFLOW
80A372 90041D            MOV     DPTR,#MoneyDevAlarm
80A375 E0                MOVX    A,@DPTR
80A376 20E021            JB      ACC.0,?C0215?MAINFLOW
  880: 		{
  881: 			Trace( "\n ScanIsSendAlarm hopper1 error");
  882: 			//HOPPER故障,还没有发送报警,准备发送
  883: 			strcpy( str1,"D0110");			
80A379 7898              MOV     R0,#LOW str1
80A37B 7C15              MOV     R4,#HIGH str1
80A37D 7D00              MOV     R5,#?C?XDATASEG
80A37F 7B80              MOV     R3,#BYTE2 080034DH
80A381 7A03              MOV     R2,#HIGH 080034DH
80A383 794D              MOV     R1,#LOW 080034DH
80A385 A512800854        ECALL   ?C?STRCPY
  884: 			flag |= 0x80;		
80A38A 901640            MOV     DPTR,#flag
80A38D E0                MOVX    A,@DPTR
80A38E 4480              ORL     A,#080H
80A390 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 389


  885: 			MoneyDevAlarm |= 0x01;
80A391 90041D            MOV     DPTR,#MoneyDevAlarm
80A394 E0                MOVX    A,@DPTR
80A395 4401              ORL     A,#01H
80A397 F0                MOVX    @DPTR,A
  886: 		}
80A398 803C              SJMP    ?C0214?MAINFLOW
80A39A         ?C0215?MAINFLOW:
  887: 		else if( ( ( DeviceStatus.ChangeUnit1 & 0x02 ) == 0x02 ) && ( ( MoneyDevAlarm & 0x02 ) != 0x02 ) )
80A39A 900B18            MOV     DPTR,#DeviceStatus+02H
80A39D E0                MOVX    A,@DPTR
80A39E 30E135            JNB     ACC.1,?C0214?MAINFLOW
80A3A1 90041D            MOV     DPTR,#MoneyDevAlarm
80A3A4 E0                MOVX    A,@DPTR
80A3A5 20E12E            JB      ACC.1,?C0214?MAINFLOW
  888: 		{
  889: 			//缺币, 还没有发送报警,准备发送
  890: 			if( ( flag & 0x80 ) == 0x80 )			
80A3A8 901640            MOV     DPTR,#flag
80A3AB E0                MOVX    A,@DPTR
80A3AC 7898              MOV     R0,#LOW str1
80A3AE 7C15              MOV     R4,#HIGH str1
80A3B0 7D00              MOV     R5,#?C?XDATASEG
80A3B2 30E708            JNB     ACC.7,?C0218?MAINFLOW
  891: 				//已记录了一条故障
  892: 				strcpy( str1,"D0111");						
80A3B5 7B80              MOV     R3,#BYTE2 0800353H
80A3B7 7A03              MOV     R2,#HIGH 0800353H
80A3B9 7953              MOV     R1,#LOW 0800353H
80A3BB 8006              SJMP    ?C1035?MAINFLOW
80A3BD         ?C0218?MAINFLOW:
  893: 			else
  894: 				strcpy( str1,"D0101");
80A3BD 7B80              MOV     R3,#BYTE2 0800359H
80A3BF 7A03              MOV     R2,#HIGH 0800359H
80A3C1 7959              MOV     R1,#LOW 0800359H
80A3C3         
80A3C3 A512800854        ECALL   ?C?STRCPY
80A3C8         ?C0219?MAINFLOW:
  895: 			flag |= 0x80;		
80A3C8 901640            MOV     DPTR,#flag
80A3CB E0                MOVX    A,@DPTR
80A3CC 4480              ORL     A,#080H
80A3CE F0                MOVX    @DPTR,A
  896: 			MoneyDevAlarm |= 0x02;
80A3CF 90041D            MOV     DPTR,#MoneyDevAlarm
80A3D2 E0                MOVX    A,@DPTR
80A3D3 4402              ORL     A,#02H
80A3D5 F0                MOVX    @DPTR,A
  897: 		}
80A3D6         ?C0214?MAINFLOW:
  898: 		if( ( flag & 0x80 ) == 0x80 )
80A3D6 901640            MOV     DPTR,#flag
80A3D9 E0                MOVX    A,@DPTR
80A3DA 30E74D            JNB     ACC.7,?C0212?MAINFLOW
  899: 		{
  900: 			memcpy( m_SMSMessage + len, str1, 5 );
80A3DD 90163E            MOV     DPTR,#len
80A3E0 A3                INC     DPTR
80A3E1 E0                MOVX    A,@DPTR
80A3E2 249E              ADD     A,#LOW m_SMSMessage
80A3E4 F9                MOV     R1,A
80A3E5 E4                CLR     A
80A3E6 3415              ADDC    A,#HIGH m_SMSMessage
80A3E8 A801              MOV     R0,AR1
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 390


80A3EA FC                MOV     R4,A
80A3EB 7D00              MOV     R5,#?C?XDATASEG
80A3ED 7B00              MOV     R3,#?C?XDATASEG
80A3EF 7A15              MOV     R2,#HIGH str1
80A3F1 7998              MOV     R1,#LOW str1
80A3F3 7E00              MOV     R6,#00H
80A3F5 7F05              MOV     R7,#05H
80A3F7 A51280052D        ECALL   ?C?COPY
  901: 			len += 5;	
80A3FC 90163E            MOV     DPTR,#len
80A3FF E4                CLR     A
80A400 75F005            MOV     B,#05H
80A403 A512800600        ECALL   ?C?IILDX
  902: 			m_SMSMessage[len++] = '\r';	
80A408 90163E            MOV     DPTR,#len
80A40B E4                CLR     A
80A40C 75F001            MOV     B,#01H
80A40F A512800617        ECALL   ?C?ILDIX
80A414 FE                MOV     R6,A
80A415 749E              MOV     A,#LOW m_SMSMessage
80A417 25F0              ADD     A,B
80A419 F582              MOV     DPL,A
80A41B 7415              MOV     A,#HIGH m_SMSMessage
80A41D 3E                ADDC    A,R6
80A41E F583              MOV     DPH,A
80A420 740D              MOV     A,#0DH
80A422 F0                MOVX    @DPTR,A
  903: 			flag |= 0x01;
80A423 901640            MOV     DPTR,#flag
80A426 E0                MOVX    A,@DPTR
80A427 4401              ORL     A,#01H
80A429 F0                MOVX    @DPTR,A
  904: 		}
  905: 	}	
80A42A         ?C0212?MAINFLOW:
  906: 	memset( str1, 0, sizeof( str1 ) );
80A42A 7E00              MOV     R6,#00H
80A42C 7F06              MOV     R7,#06H
80A42E 7D00              MOV     R5,#00H
80A430 7B00              MOV     R3,#?C?XDATASEG
80A432 7A15              MOV     R2,#HIGH str1
80A434 7998              MOV     R1,#LOW str1
80A436 A5128008A6        ECALL   ?C?MEMSET
  907: 	flag &= 0x7f;
80A43B 901640            MOV     DPTR,#flag
80A43E E0                MOVX    A,@DPTR
80A43F 547F              ANL     A,#07FH
80A441 F0                MOVX    @DPTR,A
  908: 	//HOPPER2
  909: 	if( SystemParameter.HopperCoinPrice2 != 0 )
80A442 900421            MOV     DPTR,#SystemParameter+03H
80A445 E0                MOVX    A,@DPTR
80A446 7002              JNZ     ?C0991?MAINFLOW
80A448 A3                INC     DPTR
80A449 E0                MOVX    A,@DPTR
80A44A         ?C0991?MAINFLOW:
80A44A 7003              JNZ     $ + 5H
80A44C 02A51B            LJMP    ?C0221?MAINFLOW
  910: 	{
  911: 		if( DeviceStatus.ChangeUnit2 == 0 )
80A44F 900B19            MOV     DPTR,#DeviceStatus+03H
80A452 E0                MOVX    A,@DPTR
80A453 FD                MOV     R5,A
80A454 7009              JNZ     ?C0222?MAINFLOW
  912: 			MoneyDevAlarm &= 0xf3;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 391


80A456 90041D            MOV     DPTR,#MoneyDevAlarm
80A459 E0                MOVX    A,@DPTR
80A45A 54F3              ANL     A,#0F3H
80A45C F0                MOVX    @DPTR,A
80A45D 8068              SJMP    ?C0223?MAINFLOW
80A45F         ?C0222?MAINFLOW:
  913: 		else if( ( ( DeviceStatus.ChangeUnit2 & 0x01 ) == 0x01 ) && ( ( MoneyDevAlarm & 0x04 ) != 0x04 ) )
80A45F ED                MOV     A,R5
80A460 30E028            JNB     ACC.0,?C0224?MAINFLOW
80A463 90041D            MOV     DPTR,#MoneyDevAlarm
80A466 E0                MOVX    A,@DPTR
80A467 20E221            JB      ACC.2,?C0224?MAINFLOW
  914: 		{
  915: 			Trace( "\n ScanIsSendAlarm hopper2 error");
  916: 			//还没有发送报警,准备发送
  917: 			strcpy( str1,"D0210");			
80A46A 7898              MOV     R0,#LOW str1
80A46C 7C15              MOV     R4,#HIGH str1
80A46E 7D00              MOV     R5,#?C?XDATASEG
80A470 7B80              MOV     R3,#BYTE2 080035FH
80A472 7A03              MOV     R2,#HIGH 080035FH
80A474 795F              MOV     R1,#LOW 080035FH
80A476 A512800854        ECALL   ?C?STRCPY
  918: 			flag |= 0x80;		
80A47B 901640            MOV     DPTR,#flag
80A47E E0                MOVX    A,@DPTR
80A47F 4480              ORL     A,#080H
80A481 F0                MOVX    @DPTR,A
  919: 			MoneyDevAlarm |= 0x04;
80A482 90041D            MOV     DPTR,#MoneyDevAlarm
80A485 E0                MOVX    A,@DPTR
80A486 4404              ORL     A,#04H
80A488 F0                MOVX    @DPTR,A
  920: 		}
80A489 803C              SJMP    ?C0223?MAINFLOW
80A48B         ?C0224?MAINFLOW:
  921: 		else if( ( ( DeviceStatus.ChangeUnit2 & 0x02 ) == 0x02 ) && ( ( MoneyDevAlarm & 0x08 ) != 0x08 ) )
80A48B 900B19            MOV     DPTR,#DeviceStatus+03H
80A48E E0                MOVX    A,@DPTR
80A48F 30E135            JNB     ACC.1,?C0223?MAINFLOW
80A492 90041D            MOV     DPTR,#MoneyDevAlarm
80A495 E0                MOVX    A,@DPTR
80A496 20E32E            JB      ACC.3,?C0223?MAINFLOW
  922: 		{
  923: 			//还没有发送报警,准备发送
  924: 			if( ( flag & 0x80 ) == 0x80 )			
80A499 901640            MOV     DPTR,#flag
80A49C E0                MOVX    A,@DPTR
80A49D 7898              MOV     R0,#LOW str1
80A49F 7C15              MOV     R4,#HIGH str1
80A4A1 7D00              MOV     R5,#?C?XDATASEG
80A4A3 30E708            JNB     ACC.7,?C0227?MAINFLOW
  925: 				//已记录了一条故障
  926: 				strcpy( str1,"D0211");						
80A4A6 7B80              MOV     R3,#BYTE2 0800365H
80A4A8 7A03              MOV     R2,#HIGH 0800365H
80A4AA 7965              MOV     R1,#LOW 0800365H
80A4AC 8006              SJMP    ?C1036?MAINFLOW
80A4AE         ?C0227?MAINFLOW:
  927: 			else
  928: 				strcpy( str1,"D0201");
80A4AE 7B80              MOV     R3,#BYTE2 080036BH
80A4B0 7A03              MOV     R2,#HIGH 080036BH
80A4B2 796B              MOV     R1,#LOW 080036BH
80A4B4         
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 392


80A4B4 A512800854        ECALL   ?C?STRCPY
80A4B9         ?C0228?MAINFLOW:
  929: 			flag |= 0x80;		
80A4B9 901640            MOV     DPTR,#flag
80A4BC E0                MOVX    A,@DPTR
80A4BD 4480              ORL     A,#080H
80A4BF F0                MOVX    @DPTR,A
  930: 			MoneyDevAlarm |= 0x08;
80A4C0 90041D            MOV     DPTR,#MoneyDevAlarm
80A4C3 E0                MOVX    A,@DPTR
80A4C4 4408              ORL     A,#08H
80A4C6 F0                MOVX    @DPTR,A
  931: 		}
80A4C7         ?C0223?MAINFLOW:
  932: 		if( ( flag & 0x80 ) == 0x80 )
80A4C7 901640            MOV     DPTR,#flag
80A4CA E0                MOVX    A,@DPTR
80A4CB 30E74D            JNB     ACC.7,?C0221?MAINFLOW
  933: 		{
  934: 			memcpy( m_SMSMessage + len, str1, 5 );
80A4CE 90163E            MOV     DPTR,#len
80A4D1 A3                INC     DPTR
80A4D2 E0                MOVX    A,@DPTR
80A4D3 249E              ADD     A,#LOW m_SMSMessage
80A4D5 F9                MOV     R1,A
80A4D6 E4                CLR     A
80A4D7 3415              ADDC    A,#HIGH m_SMSMessage
80A4D9 A801              MOV     R0,AR1
80A4DB FC                MOV     R4,A
80A4DC 7D00              MOV     R5,#?C?XDATASEG
80A4DE 7B00              MOV     R3,#?C?XDATASEG
80A4E0 7A15              MOV     R2,#HIGH str1
80A4E2 7998              MOV     R1,#LOW str1
80A4E4 7E00              MOV     R6,#00H
80A4E6 7F05              MOV     R7,#05H
80A4E8 A51280052D        ECALL   ?C?COPY
  935: 			len += 5;
80A4ED 90163E            MOV     DPTR,#len
80A4F0 E4                CLR     A
80A4F1 75F005            MOV     B,#05H
80A4F4 A512800600        ECALL   ?C?IILDX
  936: 			m_SMSMessage[len++] = '\r';			
80A4F9 90163E            MOV     DPTR,#len
80A4FC E4                CLR     A
80A4FD 75F001            MOV     B,#01H
80A500 A512800617        ECALL   ?C?ILDIX
80A505 FE                MOV     R6,A
80A506 749E              MOV     A,#LOW m_SMSMessage
80A508 25F0              ADD     A,B
80A50A F582              MOV     DPL,A
80A50C 7415              MOV     A,#HIGH m_SMSMessage
80A50E 3E                ADDC    A,R6
80A50F F583              MOV     DPH,A
80A511 740D              MOV     A,#0DH
80A513 F0                MOVX    @DPTR,A
  937: 			flag |= 0x01;
80A514 901640            MOV     DPTR,#flag
80A517 E0                MOVX    A,@DPTR
80A518 4401              ORL     A,#01H
80A51A F0                MOVX    @DPTR,A
  938: 		}
  939: 	}	
80A51B         ?C0221?MAINFLOW:
  940: 	memset( str1, 0, sizeof( str1 ) );
80A51B 7E00              MOV     R6,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 393


80A51D 7F06              MOV     R7,#06H
80A51F 7D00              MOV     R5,#00H
80A521 7B00              MOV     R3,#?C?XDATASEG
80A523 7A15              MOV     R2,#HIGH str1
80A525 7998              MOV     R1,#LOW str1
80A527 A5128008A6        ECALL   ?C?MEMSET
  941: 	flag &= 0x7f;
80A52C 901640            MOV     DPTR,#flag
80A52F E0                MOVX    A,@DPTR
80A530 547F              ANL     A,#07FH
80A532 F0                MOVX    @DPTR,A
  942: 	//HOPPER3
  943: 	if( SystemParameter.HopperCoinPrice3 != 0 )
80A533 900423            MOV     DPTR,#SystemParameter+05H
80A536 E0                MOVX    A,@DPTR
80A537 7002              JNZ     ?C0992?MAINFLOW
80A539 A3                INC     DPTR
80A53A E0                MOVX    A,@DPTR
80A53B         ?C0992?MAINFLOW:
80A53B 7003              JNZ     $ + 5H
80A53D 02A60C            LJMP    ?C0230?MAINFLOW
  944: 	{
  945: 		if( DeviceStatus.ChangeUnit3 == 0 )
80A540 900B1A            MOV     DPTR,#DeviceStatus+04H
80A543 E0                MOVX    A,@DPTR
80A544 FD                MOV     R5,A
80A545 7009              JNZ     ?C0231?MAINFLOW
  946: 			MoneyDevAlarm &= 0xcf;
80A547 90041D            MOV     DPTR,#MoneyDevAlarm
80A54A E0                MOVX    A,@DPTR
80A54B 54CF              ANL     A,#0CFH
80A54D F0                MOVX    @DPTR,A
80A54E 8068              SJMP    ?C0232?MAINFLOW
80A550         ?C0231?MAINFLOW:
  947: 		else if( ( ( DeviceStatus.ChangeUnit3 & 0x01 ) == 0x01 ) && ( ( MoneyDevAlarm & 0x10 ) != 0x10 ) )
80A550 ED                MOV     A,R5
80A551 30E028            JNB     ACC.0,?C0233?MAINFLOW
80A554 90041D            MOV     DPTR,#MoneyDevAlarm
80A557 E0                MOVX    A,@DPTR
80A558 20E421            JB      ACC.4,?C0233?MAINFLOW
  948: 		{
  949: 			Trace( "\n ScanIsSendAlarm hopper3 error");
  950: 			//还没有发送报警,准备发送
  951: 			strcpy( str1,"D0310");			
80A55B 7898              MOV     R0,#LOW str1
80A55D 7C15              MOV     R4,#HIGH str1
80A55F 7D00              MOV     R5,#?C?XDATASEG
80A561 7B80              MOV     R3,#BYTE2 0800371H
80A563 7A03              MOV     R2,#HIGH 0800371H
80A565 7971              MOV     R1,#LOW 0800371H
80A567 A512800854        ECALL   ?C?STRCPY
  952: 			flag |= 0x80;		
80A56C 901640            MOV     DPTR,#flag
80A56F E0                MOVX    A,@DPTR
80A570 4480              ORL     A,#080H
80A572 F0                MOVX    @DPTR,A
  953: 			MoneyDevAlarm |= 0x10;
80A573 90041D            MOV     DPTR,#MoneyDevAlarm
80A576 E0                MOVX    A,@DPTR
80A577 4410              ORL     A,#010H
80A579 F0                MOVX    @DPTR,A
  954: 		}
80A57A 803C              SJMP    ?C0232?MAINFLOW
80A57C         ?C0233?MAINFLOW:
  955: 		else if( ( ( DeviceStatus.ChangeUnit3 & 0x02 ) == 0x02 ) && ( ( MoneyDevAlarm & 0x20 ) != 0x20 ) )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 394


80A57C 900B1A            MOV     DPTR,#DeviceStatus+04H
80A57F E0                MOVX    A,@DPTR
80A580 30E135            JNB     ACC.1,?C0232?MAINFLOW
80A583 90041D            MOV     DPTR,#MoneyDevAlarm
80A586 E0                MOVX    A,@DPTR
80A587 20E52E            JB      ACC.5,?C0232?MAINFLOW
  956: 		{
  957: 			//还没有发送报警,准备发送
  958: 			if( ( flag & 0x80 ) == 0x80 )			
80A58A 901640            MOV     DPTR,#flag
80A58D E0                MOVX    A,@DPTR
80A58E 7898              MOV     R0,#LOW str1
80A590 7C15              MOV     R4,#HIGH str1
80A592 7D00              MOV     R5,#?C?XDATASEG
80A594 30E708            JNB     ACC.7,?C0236?MAINFLOW
  959: 				//已记录了一条故障
  960: 				strcpy( str1,"D0311");						
80A597 7B80              MOV     R3,#BYTE2 0800377H
80A599 7A03              MOV     R2,#HIGH 0800377H
80A59B 7977              MOV     R1,#LOW 0800377H
80A59D 8006              SJMP    ?C1037?MAINFLOW
80A59F         ?C0236?MAINFLOW:
  961: 			else
  962: 				strcpy( str1,"D0301");
80A59F 7B80              MOV     R3,#BYTE2 080037DH
80A5A1 7A03              MOV     R2,#HIGH 080037DH
80A5A3 797D              MOV     R1,#LOW 080037DH
80A5A5         
80A5A5 A512800854        ECALL   ?C?STRCPY
80A5AA         ?C0237?MAINFLOW:
  963: 			flag |= 0x80;		
80A5AA 901640            MOV     DPTR,#flag
80A5AD E0                MOVX    A,@DPTR
80A5AE 4480              ORL     A,#080H
80A5B0 F0                MOVX    @DPTR,A
  964: 			MoneyDevAlarm |= 0x20;
80A5B1 90041D            MOV     DPTR,#MoneyDevAlarm
80A5B4 E0                MOVX    A,@DPTR
80A5B5 4420              ORL     A,#020H
80A5B7 F0                MOVX    @DPTR,A
  965: 		}
80A5B8         ?C0232?MAINFLOW:
  966: 		if( ( flag & 0x80 ) == 0x80 )
80A5B8 901640            MOV     DPTR,#flag
80A5BB E0                MOVX    A,@DPTR
80A5BC 30E74D            JNB     ACC.7,?C0230?MAINFLOW
  967: 		{
  968: 			memcpy( m_SMSMessage + len, str1, 5 );
80A5BF 90163E            MOV     DPTR,#len
80A5C2 A3                INC     DPTR
80A5C3 E0                MOVX    A,@DPTR
80A5C4 249E              ADD     A,#LOW m_SMSMessage
80A5C6 F9                MOV     R1,A
80A5C7 E4                CLR     A
80A5C8 3415              ADDC    A,#HIGH m_SMSMessage
80A5CA A801              MOV     R0,AR1
80A5CC FC                MOV     R4,A
80A5CD 7D00              MOV     R5,#?C?XDATASEG
80A5CF 7B00              MOV     R3,#?C?XDATASEG
80A5D1 7A15              MOV     R2,#HIGH str1
80A5D3 7998              MOV     R1,#LOW str1
80A5D5 7E00              MOV     R6,#00H
80A5D7 7F05              MOV     R7,#05H
80A5D9 A51280052D        ECALL   ?C?COPY
  969: 			len += 5;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 395


80A5DE 90163E            MOV     DPTR,#len
80A5E1 E4                CLR     A
80A5E2 75F005            MOV     B,#05H
80A5E5 A512800600        ECALL   ?C?IILDX
  970: 			m_SMSMessage[len++] = '\r';	
80A5EA 90163E            MOV     DPTR,#len
80A5ED E4                CLR     A
80A5EE 75F001            MOV     B,#01H
80A5F1 A512800617        ECALL   ?C?ILDIX
80A5F6 FE                MOV     R6,A
80A5F7 749E              MOV     A,#LOW m_SMSMessage
80A5F9 25F0              ADD     A,B
80A5FB F582              MOV     DPL,A
80A5FD 7415              MOV     A,#HIGH m_SMSMessage
80A5FF 3E                ADDC    A,R6
80A600 F583              MOV     DPH,A
80A602 740D              MOV     A,#0DH
80A604 F0                MOVX    @DPTR,A
  971: 			flag |= 0x01;
80A605 901640            MOV     DPTR,#flag
80A608 E0                MOVX    A,@DPTR
80A609 4401              ORL     A,#01H
80A60B F0                MOVX    @DPTR,A
  972: 		}
  973: 	}		
80A60C         ?C0230?MAINFLOW:
  974: 	memset( str1, 0, sizeof( str1 ) );
80A60C 7E00              MOV     R6,#00H
80A60E 7F06              MOV     R7,#06H
80A610 7D00              MOV     R5,#00H
80A612 7B00              MOV     R3,#?C?XDATASEG
80A614 7A15              MOV     R2,#HIGH str1
80A616 7998              MOV     R1,#LOW str1
80A618 A5128008A6        ECALL   ?C?MEMSET
  975: 	flag &= 0x7f;
80A61D 901640            MOV     DPTR,#flag
80A620 E0                MOVX    A,@DPTR
80A621 547F              ANL     A,#07FH
80A623 F0                MOVX    @DPTR,A
  976: 	////货道扫描	
  977: /*	if( ( ( HardWareErr & 0x0080 ) == 0x0080 ) && ( ( SystemErrorAlarm & 0x20 ) != 0x20 ) )
  978: 	{
  979: 		Trace( "\n ScanIsSendAlarm colunm not work error");
  980: 		//货道全不能工作
  981: 		memcpy( SMSMessage+len, "C0003", 5 );
  982: 		len  += 5;
  983: 		SMSMessage[len++] = '\r';	
  984: 		flag |= 0x01;
  985: 		if( SystemStatus != 2 )
  986: 			SystemErrorAlarm |= 0x20;//置已发送标志位		
  987: 	}
  988: 	else if( ( HardWareErr & 0x0080 ) == 0x0000 )
  989: 		SystemErrorAlarm &= 0xdf;//复位已发送标志
  990: */	
  991: 	if( ( ( HardWareErr & 0x0010 ) == 0x0010 ) && ( ( SystemErrorAlarm & 0x08 ) != 0x08 ) )
80A624 900480            MOV     DPTR,#HardWareErr+01H
80A627 E0                MOVX    A,@DPTR
80A628 30E45D            JNB     ACC.4,?C0239?MAINFLOW
80A62B 900142            MOV     DPTR,#SystemErrorAlarm
80A62E E0                MOVX    A,@DPTR
80A62F 20E356            JB      ACC.3,?C0239?MAINFLOW
  992: 	{
  993: 		Trace( "\n ScanIsSendAlarm colunm out all error");
  994: 		//都无货
  995: 		memcpy( m_SMSMessage+len, "C0001", 5 );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 396


80A632 90163E            MOV     DPTR,#len
80A635 A3                INC     DPTR
80A636 E0                MOVX    A,@DPTR
80A637 249E              ADD     A,#LOW m_SMSMessage
80A639 F9                MOV     R1,A
80A63A E4                CLR     A
80A63B 3415              ADDC    A,#HIGH m_SMSMessage
80A63D A801              MOV     R0,AR1
80A63F FC                MOV     R4,A
80A640 7D00              MOV     R5,#?C?XDATASEG
80A642 7B80              MOV     R3,#BYTE2 0800383H
80A644 7A03              MOV     R2,#HIGH 0800383H
80A646 7983              MOV     R1,#LOW 0800383H
80A648 7E00              MOV     R6,#00H
80A64A 7F05              MOV     R7,#05H
80A64C A51280052D        ECALL   ?C?COPY
  996: 		len  += 5;
80A651 90163E            MOV     DPTR,#len
80A654 E4                CLR     A
80A655 75F005            MOV     B,#05H
80A658 A512800600        ECALL   ?C?IILDX
  997: 		m_SMSMessage[len++] = '\r';	
80A65D 90163E            MOV     DPTR,#len
80A660 E4                CLR     A
80A661 75F001            MOV     B,#01H
80A664 A512800617        ECALL   ?C?ILDIX
80A669 FE                MOV     R6,A
80A66A 749E              MOV     A,#LOW m_SMSMessage
80A66C 25F0              ADD     A,B
80A66E F582              MOV     DPL,A
80A670 7415              MOV     A,#HIGH m_SMSMessage
80A672 3E                ADDC    A,R6
80A673 F583              MOV     DPH,A
80A675 740D              MOV     A,#0DH
80A677 F0                MOVX    @DPTR,A
  998: 		flag |= 0x01;	
80A678 901640            MOV     DPTR,#flag
80A67B E0                MOVX    A,@DPTR
80A67C 4401              ORL     A,#01H
80A67E F0                MOVX    @DPTR,A
  999: 		SystemErrorAlarm |= 0x08;		
80A67F 900142            MOV     DPTR,#SystemErrorAlarm
80A682 E0                MOVX    A,@DPTR
80A683 4408              ORL     A,#08H
80A685 F0                MOVX    @DPTR,A
 1000: 	}
80A686 800E              SJMP    ?C0240?MAINFLOW
80A688         ?C0239?MAINFLOW:
 1001: 	else if( ( HardWareErr & 0x0010 ) == 0x0000 )
80A688 900480            MOV     DPTR,#HardWareErr+01H
80A68B E0                MOVX    A,@DPTR
80A68C 20E407            JB      ACC.4,?C0240?MAINFLOW
 1002: 		SystemErrorAlarm &= 0xf7;//复位已发送标志	
80A68F 900142            MOV     DPTR,#SystemErrorAlarm
80A692 E0                MOVX    A,@DPTR
80A693 54F7              ANL     A,#0F7H
80A695 F0                MOVX    @DPTR,A
80A696         ?C0240?MAINFLOW:
 1003: 	if( ( ( HardWareErr & 0x0020 ) == 0x0020 ) && ( ( SystemErrorAlarm & 0x10 ) != 0x10 ) )
80A696 900480            MOV     DPTR,#HardWareErr+01H
80A699 E0                MOVX    A,@DPTR
80A69A 30E55D            JNB     ACC.5,?C0242?MAINFLOW
80A69D 900142            MOV     DPTR,#SystemErrorAlarm
80A6A0 E0                MOVX    A,@DPTR
80A6A1 20E456            JB      ACC.4,?C0242?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 397


 1004: 	{
 1005: 		Trace( "\n ScanIsSendAlarm colunm all error");
 1006: 		//都故障
 1007: 		memcpy( m_SMSMessage+len, "C0010", 5 );
80A6A4 90163E            MOV     DPTR,#len
80A6A7 A3                INC     DPTR
80A6A8 E0                MOVX    A,@DPTR
80A6A9 249E              ADD     A,#LOW m_SMSMessage
80A6AB F9                MOV     R1,A
80A6AC E4                CLR     A
80A6AD 3415              ADDC    A,#HIGH m_SMSMessage
80A6AF A801              MOV     R0,AR1
80A6B1 FC                MOV     R4,A
80A6B2 7D00              MOV     R5,#?C?XDATASEG
80A6B4 7B80              MOV     R3,#BYTE2 0800389H
80A6B6 7A03              MOV     R2,#HIGH 0800389H
80A6B8 7989              MOV     R1,#LOW 0800389H
80A6BA 7E00              MOV     R6,#00H
80A6BC 7F05              MOV     R7,#05H
80A6BE A51280052D        ECALL   ?C?COPY
 1008: 		len  += 5;
80A6C3 90163E            MOV     DPTR,#len
80A6C6 E4                CLR     A
80A6C7 75F005            MOV     B,#05H
80A6CA A512800600        ECALL   ?C?IILDX
 1009: 		m_SMSMessage[len++] = '\r';	
80A6CF 90163E            MOV     DPTR,#len
80A6D2 E4                CLR     A
80A6D3 75F001            MOV     B,#01H
80A6D6 A512800617        ECALL   ?C?ILDIX
80A6DB FE                MOV     R6,A
80A6DC 749E              MOV     A,#LOW m_SMSMessage
80A6DE 25F0              ADD     A,B
80A6E0 F582              MOV     DPL,A
80A6E2 7415              MOV     A,#HIGH m_SMSMessage
80A6E4 3E                ADDC    A,R6
80A6E5 F583              MOV     DPH,A
80A6E7 740D              MOV     A,#0DH
80A6E9 F0                MOVX    @DPTR,A
 1010: 		flag |= 0x01;
80A6EA 901640            MOV     DPTR,#flag
80A6ED E0                MOVX    A,@DPTR
80A6EE 4401              ORL     A,#01H
80A6F0 F0                MOVX    @DPTR,A
 1011: 		SystemErrorAlarm |= 0x10;		
80A6F1 900142            MOV     DPTR,#SystemErrorAlarm
80A6F4 E0                MOVX    A,@DPTR
80A6F5 4410              ORL     A,#010H
80A6F7 F0                MOVX    @DPTR,A
 1012: 	}
80A6F8 800E              SJMP    ?C0243?MAINFLOW
80A6FA         ?C0242?MAINFLOW:
 1013: 	else if ( ( HardWareErr & 0x0020 ) == 0x0020 )
80A6FA 900480            MOV     DPTR,#HardWareErr+01H
80A6FD E0                MOVX    A,@DPTR
80A6FE 30E507            JNB     ACC.5,?C0243?MAINFLOW
 1014: 		SystemErrorAlarm &= 0xef;//复位已发送标志
80A701 900142            MOV     DPTR,#SystemErrorAlarm
80A704 E0                MOVX    A,@DPTR
80A705 54EF              ANL     A,#0EFH
80A707 F0                MOVX    @DPTR,A
80A708         ?C0243?MAINFLOW:
 1015: 	for( i = 0; i < GOODSWAYNUM; i ++ )
80A708 E4                CLR     A
80A709 901641            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 398


80A70C F0                MOVX    @DPTR,A
80A70D         ?C0245?MAINFLOW:
80A70D 901641            MOV     DPTR,#i
80A710 E0                MOVX    A,@DPTR
80A711 FF                MOV     R7,A
80A712 C3                CLR     C
80A713 9440              SUBB    A,#040H
80A715 4003              JC      $ + 5H
80A717 02A8CD            LJMP    ?C0246?MAINFLOW
 1016: 	{
 1017: 		if( GoodsWaySetVal[i].WayNo == 0 )
80A71A 75F005            MOV     B,#05H
80A71D EF                MOV     A,R7
80A71E 900002            MOV     DPTR,#GoodsWaySetVal
80A721 A51280079F        ECALL   ?C?OFFXADD
80A726 E0                MOVX    A,@DPTR
80A727 7003              JNZ     $ + 5H
80A729 02A8C4            LJMP    ?C0247?MAINFLOW
 1018: 			continue;
80A72C         ?C0248?MAINFLOW:
 1019: 		if( ( GoodsWaySetVal[i].WayState & 0x01 ) != 0x01 )
80A72C 901641            MOV     DPTR,#i
80A72F E0                MOVX    A,@DPTR
80A730 75F005            MOV     B,#05H
80A733 900003            MOV     DPTR,#GoodsWaySetVal+01H
80A736 A51280079F        ECALL   ?C?OFFXADD
80A73B E0                MOVX    A,@DPTR
80A73C FF                MOV     R7,A
80A73D 20E003            JB      ACC.0,$ + 6H
80A740 02A8C4            LJMP    ?C0247?MAINFLOW
 1020: 	    	continue;
80A743         ?C0249?MAINFLOW:
 1021: //		Trace( "\n GoodsWaySetVal[%bu].WayState = %bu", i, GoodsWaySetVal[i].WayState );
 1022: 		 //货道正常了
 1023: 		if( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 )
80A743 EF                MOV     A,R7
80A744 540A              ANL     A,#0AH
80A746 7013              JNZ     ?C0250?MAINFLOW
 1024: 		 	 GoodsWaySetVal[i].WayState &= 0xbf;//重置bit6
80A748 901641            MOV     DPTR,#i
80A74B E0                MOVX    A,@DPTR
80A74C 75F005            MOV     B,#05H
80A74F 900003            MOV     DPTR,#GoodsWaySetVal+01H
80A752 A51280079F        ECALL   ?C?OFFXADD
80A757 E0                MOVX    A,@DPTR
80A758 54BF              ANL     A,#0BFH
80A75A F0                MOVX    @DPTR,A
80A75B         ?C0250?MAINFLOW:
 1025: 		//货道有货了
 1026: 		if( GoodsWaySetVal[i].GoodsCurrentSum != 0 )
80A75B 901641            MOV     DPTR,#i
80A75E E0                MOVX    A,@DPTR
80A75F FF                MOV     R7,A
80A760 75F005            MOV     B,#05H
80A763 900006            MOV     DPTR,#GoodsWaySetVal+04H
80A766 A51280079F        ECALL   ?C?OFFXADD
80A76B E0                MOVX    A,@DPTR
80A76C 6010              JZ      ?C0251?MAINFLOW
 1027: 		 	GoodsWaySetVal[i].WayState &= 0xdf;	//重置bit5
80A76E 75F005            MOV     B,#05H
80A771 EF                MOV     A,R7
80A772 900003            MOV     DPTR,#GoodsWaySetVal+01H
80A775 A51280079F        ECALL   ?C?OFFXADD
80A77A E0                MOVX    A,@DPTR
80A77B 54DF              ANL     A,#0DFH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 399


80A77D F0                MOVX    @DPTR,A
80A77E         ?C0251?MAINFLOW:
 1028: 		 	flag &= 0x01;
80A77E 901640            MOV     DPTR,#flag
80A781 E0                MOVX    A,@DPTR
80A782 5401              ANL     A,#01H
80A784 F0                MOVX    @DPTR,A
 1029: 		if( ( ( GoodsWaySetVal[i].WayState & 0x02 ) == 0x02 ) && ( ( GoodsWaySetVal[i].WayState & 0x40 ) != 0x40 ) )			
>> 
80A785 A3                INC     DPTR
80A786 E0                MOVX    A,@DPTR
80A787 75F005            MOV     B,#05H
80A78A 900003            MOV     DPTR,#GoodsWaySetVal+01H
80A78D A51280079F        ECALL   ?C?OFFXADD
80A792 E0                MOVX    A,@DPTR
80A793 30E10A            JNB     ACC.1,?C0252?MAINFLOW
80A796 20E607            JB      ACC.6,?C0252?MAINFLOW
 1030: 			//货道故障				
 1031: 			flag |= 0x20;//bit5			
80A799 901640            MOV     DPTR,#flag
80A79C E0                MOVX    A,@DPTR
80A79D 4420              ORL     A,#020H
80A79F F0                MOVX    @DPTR,A
80A7A0         ?C0252?MAINFLOW:
 1032: 		if( ( GoodsWaySetVal[i].GoodsCurrentSum == 0 ) && ( ( GoodsWaySetVal[i].WayState & 0x20 ) != 0x20 ) )
80A7A0 901641            MOV     DPTR,#i
80A7A3 E0                MOVX    A,@DPTR
80A7A4 FF                MOV     R7,A
80A7A5 75F005            MOV     B,#05H
80A7A8 900006            MOV     DPTR,#GoodsWaySetVal+04H
80A7AB A51280079F        ECALL   ?C?OFFXADD
80A7B0 E0                MOVX    A,@DPTR
80A7B1 7017              JNZ     ?C0253?MAINFLOW
80A7B3 75F005            MOV     B,#05H
80A7B6 EF                MOV     A,R7
80A7B7 900003            MOV     DPTR,#GoodsWaySetVal+01H
80A7BA A51280079F        ECALL   ?C?OFFXADD
80A7BF E0                MOVX    A,@DPTR
80A7C0 20E507            JB      ACC.5,?C0253?MAINFLOW
 1033: 			flag |= 0x10;//bit4			
80A7C3 901640            MOV     DPTR,#flag
80A7C6 E0                MOVX    A,@DPTR
80A7C7 4410              ORL     A,#010H
80A7C9 F0                MOVX    @DPTR,A
80A7CA         ?C0253?MAINFLOW:
 1034: 		if( ( flag & 0x30 ) != 0 )
80A7CA 901640            MOV     DPTR,#flag
80A7CD E0                MOVX    A,@DPTR
80A7CE 5430              ANL     A,#030H
80A7D0 7003              JNZ     $ + 5H
80A7D2 02A8C4            LJMP    ?C0247?MAINFLOW
 1035: 		{
 1036: //			Trace( "\n GoodsWaySetVal[%bu].WayNo = %bu error", i, GoodsWaySetVal[i].WayNo );
 1037: 			memset( str1, 0, sizeof( str1 ) );
80A7D5 7E00              MOV     R6,#00H
80A7D7 7F06              MOV     R7,#06H
80A7D9 7D00              MOV     R5,#00H
80A7DB 7B00              MOV     R3,#?C?XDATASEG
80A7DD 7A15              MOV     R2,#HIGH str1
80A7DF 7998              MOV     R1,#LOW str1
80A7E1 A5128008A6        ECALL   ?C?MEMSET
 1038: 			sprintf( str1, "C%02bu00", GoodsWaySetVal[i].WayNo );			
80A7E6 7B80              MOV     R3,#BYTE2 080038FH
80A7E8 7A03              MOV     R2,#HIGH 080038FH
80A7EA 798F              MOV     R1,#LOW 080038FH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 400


80A7EC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80A7EF A5128007B6        ECALL   ?C?PSTXDATA
80A7F4 901641            MOV     DPTR,#i
80A7F7 E0                MOVX    A,@DPTR
80A7F8 75F005            MOV     B,#05H
80A7FB 900002            MOV     DPTR,#GoodsWaySetVal
80A7FE A51280079F        ECALL   ?C?OFFXADD
80A803 E0                MOVX    A,@DPTR
80A804 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80A807 F0                MOVX    @DPTR,A
80A808 7B00              MOV     R3,#?C?XDATASEG
80A80A 7A15              MOV     R2,#HIGH str1
80A80C 7998              MOV     R1,#LOW str1
80A80E A512800949        ECALL   _sprintf
 1039: 			if( ( flag & 0x20 ) == 0x20 )
80A813 901640            MOV     DPTR,#flag
80A816 E0                MOVX    A,@DPTR
80A817 FF                MOV     R7,A
80A818 30E519            JNB     ACC.5,?C0255?MAINFLOW
 1040: 			{
 1041: 				//故障
 1042: 				str1[3] = '1';			
80A81B 90159B            MOV     DPTR,#str1+03H
80A81E 7431              MOV     A,#031H
80A820 F0                MOVX    @DPTR,A
 1043: 				GoodsWaySetVal[i].WayState |= 0x40; 
80A821 901641            MOV     DPTR,#i
80A824 E0                MOVX    A,@DPTR
80A825 75F005            MOV     B,#05H
80A828 900003            MOV     DPTR,#GoodsWaySetVal+01H
80A82B A51280079F        ECALL   ?C?OFFXADD
80A830 E0                MOVX    A,@DPTR
80A831 4440              ORL     A,#040H
80A833 F0                MOVX    @DPTR,A
 1044: 			}				
80A834         ?C0255?MAINFLOW:
 1045: 			if( ( flag & 0x10 ) == 0x10 ) 
80A834 EF                MOV     A,R7
80A835 30E419            JNB     ACC.4,?C0256?MAINFLOW
 1046: 			{
 1047: 				//缺货
 1048: 				str1[4] = '1';		
80A838 90159C            MOV     DPTR,#str1+04H
80A83B 7431              MOV     A,#031H
80A83D F0                MOVX    @DPTR,A
 1049: 				GoodsWaySetVal[i].WayState |= 0x20;
80A83E 901641            MOV     DPTR,#i
80A841 E0                MOVX    A,@DPTR
80A842 75F005            MOV     B,#05H
80A845 900003            MOV     DPTR,#GoodsWaySetVal+01H
80A848 A51280079F        ECALL   ?C?OFFXADD
80A84D E0                MOVX    A,@DPTR
80A84E 4420              ORL     A,#020H
80A850 F0                MOVX    @DPTR,A
 1050: 			}		
80A851         ?C0256?MAINFLOW:
 1051: //			Trace( "\n str1 = %s", str1 );
 1052: 			memcpy( m_SMSMessage + len, str1, 5 );
80A851 90163E            MOV     DPTR,#len
80A854 A3                INC     DPTR
80A855 E0                MOVX    A,@DPTR
80A856 249E              ADD     A,#LOW m_SMSMessage
80A858 F9                MOV     R1,A
80A859 E4                CLR     A
80A85A 3415              ADDC    A,#HIGH m_SMSMessage
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 401


80A85C A801              MOV     R0,AR1
80A85E FC                MOV     R4,A
80A85F 7D00              MOV     R5,#?C?XDATASEG
80A861 7B00              MOV     R3,#?C?XDATASEG
80A863 7A15              MOV     R2,#HIGH str1
80A865 7998              MOV     R1,#LOW str1
80A867 7E00              MOV     R6,#00H
80A869 7F05              MOV     R7,#05H
80A86B A51280052D        ECALL   ?C?COPY
 1053: 			len += 5;
80A870 90163E            MOV     DPTR,#len
80A873 E4                CLR     A
80A874 75F005            MOV     B,#05H
80A877 A512800600        ECALL   ?C?IILDX
 1054: 			m_SMSMessage[len++] = '\r';
80A87C 90163E            MOV     DPTR,#len
80A87F E4                CLR     A
80A880 75F001            MOV     B,#01H
80A883 A512800617        ECALL   ?C?ILDIX
80A888 FE                MOV     R6,A
80A889 749E              MOV     A,#LOW m_SMSMessage
80A88B 25F0              ADD     A,B
80A88D F582              MOV     DPL,A
80A88F 7415              MOV     A,#HIGH m_SMSMessage
80A891 3E                ADDC    A,R6
80A892 F583              MOV     DPH,A
80A894 740D              MOV     A,#0DH
80A896 F0                MOVX    @DPTR,A
 1055: 			flag |= 0x01;
80A897 901640            MOV     DPTR,#flag
80A89A E0                MOVX    A,@DPTR
80A89B 4401              ORL     A,#01H
80A89D F0                MOVX    @DPTR,A
 1056: 			if( ( len + 5 ) >= MAX_SMS_LEN )
80A89E 90163F            MOV     DPTR,#len+01H
80A8A1 E0                MOVX    A,@DPTR
80A8A2 2405              ADD     A,#05H
80A8A4 FF                MOV     R7,A
80A8A5 90163E            MOV     DPTR,#len
80A8A8 E0                MOVX    A,@DPTR
80A8A9 3400              ADDC    A,#00H
80A8AB FE                MOV     R6,A
80A8AC C3                CLR     C
80A8AD EF                MOV     A,R7
80A8AE 94A0              SUBB    A,#0A0H
80A8B0 EE                MOV     A,R6
80A8B1 9400              SUBB    A,#00H
80A8B3 400F              JC      ?C0247?MAINFLOW
 1057: 			{
 1058: 				SMSQuery |= 0x40;
80A8B5 900143            MOV     DPTR,#SMSQuery
80A8B8 E0                MOVX    A,@DPTR
80A8B9 4440              ORL     A,#040H
80A8BB F0                MOVX    @DPTR,A
 1059: 				IsMorePage = 1;
80A8BC 901643            MOV     DPTR,#IsMorePage
80A8BF 7401              MOV     A,#01H
80A8C1 F0                MOVX    @DPTR,A
 1060: 				break;
80A8C2 8009              SJMP    ?C0246?MAINFLOW
 1061: 			}
 1062: 		}				
 1063: 	}		
80A8C4         ?C0247?MAINFLOW:
80A8C4 901641            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 402


80A8C7 E0                MOVX    A,@DPTR
80A8C8 04                INC     A
80A8C9 F0                MOVX    @DPTR,A
80A8CA 02A70D            LJMP    ?C0245?MAINFLOW
80A8CD         ?C0246?MAINFLOW:
 1064: 	if( ( flag & 0x01 ) == 0x01 )
80A8CD 901640            MOV     DPTR,#flag
80A8D0 E0                MOVX    A,@DPTR
80A8D1 30E00F            JNB     ACC.0,?C0258?MAINFLOW
 1065: 	{
 1066: 		//有报警信息要发送		
 1067: 		m_SMSMessage[len--] = 0;		   
80A8D4 A51280A8F6        ECALL   ?L?COM0017
 1068: 		SendSMS( m_SMSMessage, len );
 1069: 		
 1070: /*		if( ( 255 - AlarmSpacing ) > 60 )
 1071: 		{
 1072: 			SMSMessage[ Index ].Flag = 0;
 1073: 			SMSMessage[ Index ].SendTime = AlarmSpacing + 60;	//发送时间		
 1074: 		}
 1075: 		else
 1076: 		{
 1077: 			SMSMessage[ Index ].SendTime = 60- ( 255 - AlarmSpacing );
 1078: 			SMSMessage[ Index ].Flag = 1;	
 1079: 		}
 1080: 		SMSMessage[ Index ].SMSLen = len;		//短信长度
 1081: 		memcpy( SMSMessage[ Index ].SMSMessage, m_SMSMessage, len );
 1082: */  
 1083:    		if( ( SMSQuery & 0x04 ) == 0 )
80A8D9 900143            MOV     DPTR,#SMSQuery
80A8DC E0                MOVX    A,@DPTR
80A8DD 20E203            JB      ACC.2,?C0258?MAINFLOW
 1084: 			SMSQuery |= 0x04;
80A8E0 4404              ORL     A,#04H
80A8E2 F0                MOVX    @DPTR,A
 1085: 	}
80A8E3         ?C0258?MAINFLOW:
 1086: 	if( IsMorePage != 1 )
80A8E3 901643            MOV     DPTR,#IsMorePage
80A8E6 E0                MOVX    A,@DPTR
80A8E7 6401              XRL     A,#01H
80A8E9 6007              JZ      ?C0260?MAINFLOW
 1087: 		SMSQuery = ( SMSQuery & 0xBF );
80A8EB 900143            MOV     DPTR,#SMSQuery
80A8EE E0                MOVX    A,@DPTR
80A8EF 54BF              ANL     A,#0BFH
80A8F1 F0                MOVX    @DPTR,A
80A8F2         ?C0260?MAINFLOW:
 1088: 	return 0;
80A8F2 7F00              MOV     R7,#00H
 1089: }
80A8F4         ?C0186?MAINFLOW:
80A8F4 A522              ERET    
----- FUNCTION ScanIsSendAlarm (END) -------


----- FUNCTION ?L?COM0017 (BEGIN) -----
80A8F6 90163E            MOV     DPTR,#len
80A8F9 74FF              MOV     A,#0FFH
80A8FB F5F0              MOV     B,A
80A8FD A512800617        ECALL   ?C?ILDIX
80A902 FE                MOV     R6,A
80A903 749E              MOV     A,#LOW m_SMSMessage
80A905 25F0              ADD     A,B
80A907 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 403


80A909 7415              MOV     A,#HIGH m_SMSMessage
80A90B 3E                ADDC    A,R6
80A90C F583              MOV     DPH,A
80A90E E4                CLR     A
80A90F F0                MOVX    @DPTR,A
80A910 7B00              MOV     R3,#?C?XDATASEG
80A912 7A15              MOV     R2,#HIGH m_SMSMessage
80A914 799E              MOV     R1,#LOW m_SMSMessage
80A916 90163E            MOV     DPTR,#len
80A919 A3                INC     DPTR
80A91A E0                MOVX    A,@DPTR
80A91B FD                MOV     R5,A
----- FUNCTION _SendSMS (BEGIN) -----
 FILE: 'communication.c'
   27: 	void SendSMS( unsigned char* pSMS, unsigned char byLen )
   28: 	{
80A91C 901644            MOV     DPTR,#pSMS
80A91F A5128007B6        ECALL   ?C?PSTXDATA
80A924 901647            MOV     DPTR,#byLen
80A927 ED                MOV     A,R5
80A928 F0                MOVX    @DPTR,A
   29: 		while( byLen > MAX_SMS_LEN )
80A929         ?C0006?COMMUNICATION:
   30: 		{
80A929 901647            MOV     DPTR,#byLen
80A92C E0                MOVX    A,@DPTR
80A92D D3                SETB    C
80A92E 94A0              SUBB    A,#0A0H
80A930 4024              JC      ?C0007?COMMUNICATION
   31: 			commAdd2SMSSendBuffer( pSMS, MAX_SMS_LEN );
   32: 			pSMS += MAX_SMS_LEN;
80A932 901644            MOV     DPTR,#pSMS
80A935 A5128007AC        ECALL   ?C?PLDXDATA
80A93A 7DA0              MOV     R5,#0A0H
80A93C A51280A96C        ECALL   _commAdd2SMSSendBuffer
   33: 			byLen -= MAX_SMS_LEN;
80A941 901645            MOV     DPTR,#pSMS+01H
80A944 E4                CLR     A
80A945 75F0A0            MOV     B,#0A0H
80A948 A512800600        ECALL   ?C?IILDX
   34: 		}
80A94D 901647            MOV     DPTR,#byLen
80A950 E0                MOVX    A,@DPTR
80A951 2460              ADD     A,#060H
80A953 F0                MOVX    @DPTR,A
   35: 		if( byLen )
80A954 80D3              SJMP    ?C0006?COMMUNICATION
80A956         ?C0007?COMMUNICATION:
   36: 		{
80A956 901647            MOV     DPTR,#byLen
80A959 E0                MOVX    A,@DPTR
80A95A FD                MOV     R5,A
80A95B 600D              JZ      ?C0009?COMMUNICATION
   37: 			commAdd2SMSSendBuffer( pSMS, byLen );
   38: 		}
80A95D 901644            MOV     DPTR,#pSMS
80A960 A5128007AC        ECALL   ?C?PLDXDATA
80A965 A51280A96C        ECALL   _commAdd2SMSSendBuffer
   39: 	}
   40: #endif
80A96A         ?C0009?COMMUNICATION:
80A96A A522              ERET    
----- FUNCTION _SendSMS (END) -------


LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 404


----- FUNCTION _commAdd2SMSSendBuffer (BEGIN) -----
 FILE: 'CommModule.c'
  265: 	void commAdd2SMSSendBuffer( unsigned char* pSMS, unsigned char byLen )
  266: 	{
80A96C 901648            MOV     DPTR,#byLen
80A96F ED                MOV     A,R5
80A970 F0                MOVX    @DPTR,A
;---- Variable 'pSMS' assigned to Register 'R1/R2/R3' ----
  267: 		unsigned char data byEndIndex = g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex
  268: 			+ g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;
80A971 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
80A974 E0                MOVX    A,@DPTR
80A975 FF                MOV     R7,A
80A976 902358            MOV     DPTR,#g_SMSCommModuleInfo+064AH
80A979 E0                MOVX    A,@DPTR
80A97A 2F                ADD     A,R7
80A97B F528              MOV     byEndIndex,A
  269: 		if( byEndIndex >= MAX_BUFFERED_SMS_COUNT )
80A97D C3                CLR     C
80A97E 940A              SUBB    A,#0AH
80A980 4006              JC      ?C0048?COMMMODULE
  270: 		{
  271: 			byEndIndex -= MAX_BUFFERED_SMS_COUNT;
80A982 74F6              MOV     A,#0F6H
80A984 2528              ADD     A,byEndIndex
80A986 F528              MOV     byEndIndex,A
  272: 		}
80A988         ?C0048?COMMMODULE:
  273: 		
  274: 		if( byLen > MAX_SMS_LEN )
80A988 901648            MOV     DPTR,#byLen
80A98B E0                MOVX    A,@DPTR
80A98C D3                SETB    C
80A98D 94A0              SUBB    A,#0A0H
80A98F 4003              JC      ?C0049?COMMMODULE
  275: 		{
  276: 			byLen = MAX_SMS_LEN;				
80A991 74A0              MOV     A,#0A0H
80A993 F0                MOVX    @DPTR,A
  277: 		}
80A994         ?C0049?COMMMODULE:
  278: 		Trace("\n commAdd2SMSSendBuffer");
  279: 		memcpy( g_SMSCommModuleInfo.m_SMSBuffer.m_bySMSs[ byEndIndex ]
80A994 901648            MOV     DPTR,#byLen
80A997 E0                MOVX    A,@DPTR
80A998 F582              MOV     DPL,A
80A99A 758300            MOV     DPH,#00H
80A99D C083              PUSH    DPH
80A99F C082              PUSH    DPL
80A9A1 C001              PUSH    AR1
80A9A3 E528              MOV     A,byEndIndex
80A9A5 75F0A0            MOV     B,#0A0H
80A9A8 A4                MUL     AB
80A9A9 240E              ADD     A,#LOW g_SMSCommModuleInfo
80A9AB F9                MOV     R1,A
80A9AC 741D              MOV     A,#HIGH g_SMSCommModuleInfo
80A9AE 35F0              ADDC    A,B
80A9B0 A801              MOV     R0,AR1
80A9B2 FC                MOV     R4,A
80A9B3 7D00              MOV     R5,#?C?XDATASEG
80A9B5 D001              POP     AR1
80A9B7 D007              POP     AR7
80A9B9 D006              POP     AR6
80A9BB A51280052D        ECALL   ?C?COPY
  280: 			, pSMS, byLen );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 405


  281: 		g_SMSCommModuleInfo.m_SMSBuffer.m_byLens[ byEndIndex ] = byLen;		
80A9C0 901648            MOV     DPTR,#byLen
80A9C3 E0                MOVX    A,@DPTR
80A9C4 FF                MOV     R7,A
80A9C5 744E              MOV     A,#LOW g_SMSCommModuleInfo+0640H
80A9C7 2528              ADD     A,byEndIndex
80A9C9 F582              MOV     DPL,A
80A9CB E4                CLR     A
80A9CC 3423              ADDC    A,#HIGH g_SMSCommModuleInfo+0640H
80A9CE F583              MOV     DPH,A
80A9D0 EF                MOV     A,R7
80A9D1 F0                MOVX    @DPTR,A
  282: 		
  283: 		if( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount == MAX_BUFFERED_SMS_COUNT )	//drop first one
80A9D2 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
80A9D5 E0                MOVX    A,@DPTR
80A9D6 B40A0D            CJNE    A,#0AH,?C0050?COMMMODULE
  284: 		{
  285: 			if( ++g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex == MAX_BUFFERED_SMS_COUNT )
80A9D9 902358            MOV     DPTR,#g_SMSCommModuleInfo+064AH
80A9DC E0                MOVX    A,@DPTR
80A9DD 04                INC     A
80A9DE F0                MOVX    @DPTR,A
80A9DF B40A0A            CJNE    A,#0AH,?C0053?COMMMODULE
  286: 			{
  287: 				g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex = 0;
80A9E2 E4                CLR     A
80A9E3 F0                MOVX    @DPTR,A
  288: 			}
  289: 		}
80A9E4 8006              SJMP    ?C0053?COMMMODULE
80A9E6         ?C0050?COMMMODULE:
  290: 		else
  291: 		{
  292: 			++g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;
80A9E6 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
80A9E9 E0                MOVX    A,@DPTR
80A9EA 04                INC     A
80A9EB F0                MOVX    @DPTR,A
  293: 		}
  294: 	}
80A9EC         ?C0053?COMMMODULE:
80A9EC A522              ERET    
----- FUNCTION _commAdd2SMSSendBuffer (END) -------


----- FUNCTION TradePack (BEGIN) -----
 FILE: 'mainflow.c'
 1373: u_char	TradePack()
 1374: {
 1375: 	u_char xdata m_SMSMessage[MAX_SMS_LEN];
 1376: 	u_int  xdata len = 0;	
80A9EE E4                CLR     A
80A9EF 901638            MOV     DPTR,#len
80A9F2 F0                MOVX    @DPTR,A
80A9F3 A3                INC     DPTR
80A9F4 F0                MOVX    @DPTR,A
 1377: 	u_char xdata i = 0;	
80A9F5 A3                INC     DPTR
80A9F6 F0                MOVX    @DPTR,A
 1378: 	
 1379: 	if( SystemParameter.MobileON != 1 )
80A9F7 900444            MOV     DPTR,#SystemParameter+026H
80A9FA E0                MOVX    A,@DPTR
80A9FB 6401              XRL     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 406


80A9FD 6005              JZ      ?C0315?MAINFLOW
 1380: 		return 1;
80A9FF 7F01              MOV     R7,#01H
80AA01 02AE9D            LJMP    ?C0316?MAINFLOW
80AA04         ?C0315?MAINFLOW:
 1381: 	//是否可以向短信发送队列中添加短信
 1382: 	if( !SMSCommStatus() )
80AA04 A51280AE9F        ECALL   SMSCommStatus
80AA09 4005              JC      ?C0317?MAINFLOW
 1383: 		//已不能向短信发送队列中添加短信了
 1384: 		return 1;
80AA0B 7F01              MOV     R7,#01H
80AA0D 02AE9D            LJMP    ?C0316?MAINFLOW
80AA10         ?C0317?MAINFLOW:
 1385: 
 1386: 	memset( m_SMSMessage, 0, sizeof( m_SMSMessage ) );	
80AA10 7E00              MOV     R6,#00H
80AA12 7FA0              MOV     R7,#0A0H
80AA14 7D00              MOV     R5,#00H
80AA16 7B00              MOV     R3,#?C?XDATASEG
80AA18 7A15              MOV     R2,#HIGH m_SMSMessage
80AA1A 7998              MOV     R1,#LOW m_SMSMessage
80AA1C A5128008A6        ECALL   ?C?MEMSET
 1387: 	//添加短信头部
 1388: 	memcpy( m_SMSMessage, "VMSUM", 5 );
80AA21 7898              MOV     R0,#LOW m_SMSMessage
80AA23 7C15              MOV     R4,#HIGH m_SMSMessage
80AA25 7D00              MOV     R5,#?C?XDATASEG
80AA27 7B80              MOV     R3,#BYTE2 080039EH
80AA29 7A03              MOV     R2,#HIGH 080039EH
80AA2B 799E              MOV     R1,#LOW 080039EH
80AA2D 7E00              MOV     R6,#00H
80AA2F 7F05              MOV     R7,#05H
80AA31 A51280052D        ECALL   ?C?COPY
 1389: 	len += 5;
80AA36 901638            MOV     DPTR,#len
80AA39 E4                CLR     A
80AA3A 75F005            MOV     B,#05H
80AA3D A512800600        ECALL   ?C?IILDX
 1390: 	for( i = 0; i < 5; i ++ )
80AA42 E4                CLR     A
80AA43 90163A            MOV     DPTR,#i
80AA46 F0                MOVX    @DPTR,A
80AA47         ?C0318?MAINFLOW:
 1391: 		sprintf( m_SMSMessage + len + i, "%bu", SystemParameter.VmID[i] );
80AA47 901638            MOV     DPTR,#len
80AA4A E0                MOVX    A,@DPTR
80AA4B FE                MOV     R6,A
80AA4C A3                INC     DPTR
80AA4D E0                MOVX    A,@DPTR
80AA4E 2498              ADD     A,#LOW m_SMSMessage
80AA50 F9                MOV     R1,A
80AA51 7415              MOV     A,#HIGH m_SMSMessage
80AA53 3E                ADDC    A,R6
80AA54 FA                MOV     R2,A
80AA55 7B00              MOV     R3,#?C?XDATASEG
80AA57 A3                INC     DPTR
80AA58 E0                MOVX    A,@DPTR
80AA59 FF                MOV     R7,A
80AA5A 29                ADD     A,R1
80AA5B F9                MOV     R1,A
80AA5C E4                CLR     A
80AA5D 3A                ADDC    A,R2
80AA5E FA                MOV     R2,A
80AA5F C003              PUSH    AR3
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 407


80AA61 C002              PUSH    AR2
80AA63 C001              PUSH    AR1
80AA65 7B80              MOV     R3,#BYTE2 0800325H
80AA67 7A03              MOV     R2,#HIGH 0800325H
80AA69 7925              MOV     R1,#LOW 0800325H
80AA6B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80AA6E A5128007B6        ECALL   ?C?PSTXDATA
80AA73 742F              MOV     A,#LOW SystemParameter+011H
80AA75 2F                ADD     A,R7
80AA76 F582              MOV     DPL,A
80AA78 E4                CLR     A
80AA79 3404              ADDC    A,#HIGH SystemParameter+011H
80AA7B F583              MOV     DPH,A
80AA7D E0                MOVX    A,@DPTR
80AA7E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80AA81 F0                MOVX    @DPTR,A
80AA82 D001              POP     AR1
80AA84 D002              POP     AR2
80AA86 D003              POP     AR3
80AA88 A512800949        ECALL   _sprintf
80AA8D 90163A            MOV     DPTR,#i
80AA90 E0                MOVX    A,@DPTR
80AA91 04                INC     A
80AA92 F0                MOVX    @DPTR,A
80AA93 E0                MOVX    A,@DPTR
80AA94 C3                CLR     C
80AA95 9405              SUBB    A,#05H
80AA97 40AE              JC      ?C0318?MAINFLOW
80AA99         ?C0319?MAINFLOW:
 1392: 	len += 5;	
80AA99 901638            MOV     DPTR,#len
80AA9C E4                CLR     A
80AA9D 75F005            MOV     B,#05H
80AAA0 A512800600        ECALL   ?C?IILDX
 1393: 	m_SMSMessage[len++] = '\r';
80AAA5 901638            MOV     DPTR,#len
80AAA8 E4                CLR     A
80AAA9 75F001            MOV     B,#01H
80AAAC A512800617        ECALL   ?C?ILDIX
80AAB1 FE                MOV     R6,A
80AAB2 7498              MOV     A,#LOW m_SMSMessage
80AAB4 25F0              ADD     A,B
80AAB6 F582              MOV     DPL,A
80AAB8 7415              MOV     A,#HIGH m_SMSMessage
80AABA 3E                ADDC    A,R6
80AABB F583              MOV     DPH,A
80AABD 740D              MOV     A,#0DH
80AABF F0                MOVX    @DPTR,A
 1394: 	//收款记录	
 1395: 	//收入总金额					
 1396: 	len += sprintf( m_SMSMessage + len, "R00-%08lu", TradeCounter.TrueCurrencySum/SystemParameter.curUnit );
80AAC0 901638            MOV     DPTR,#len
80AAC3 A3                INC     DPTR
80AAC4 E0                MOVX    A,@DPTR
80AAC5 2498              ADD     A,#LOW m_SMSMessage
80AAC7 F9                MOV     R1,A
80AAC8 E4                CLR     A
80AAC9 3415              ADDC    A,#HIGH m_SMSMessage
80AACB FA                MOV     R2,A
80AACC 7B00              MOV     R3,#?C?XDATASEG
80AACE C003              PUSH    AR3
80AAD0 C002              PUSH    AR2
80AAD2 C001              PUSH    AR1
80AAD4 7B80              MOV     R3,#BYTE2 08003A4H
80AAD6 7A03              MOV     R2,#HIGH 08003A4H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 408


80AAD8 79A4              MOV     R1,#LOW 08003A4H
80AADA 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80AADD A5128007B6        ECALL   ?C?PSTXDATA
80AAE2 900466            MOV     DPTR,#SystemParameter+048H
80AAE5 E0                MOVX    A,@DPTR
80AAE6 FE                MOV     R6,A
80AAE7 A3                INC     DPTR
80AAE8 E0                MOVX    A,@DPTR
80AAE9 FF                MOV     R7,A
80AAEA FB                MOV     R3,A
80AAEB AA06              MOV     R2,AR6
80AAED E4                CLR     A
80AAEE F9                MOV     R1,A
80AAEF F8                MOV     R0,A
80AAF0 900AEC            MOV     DPTR,#TradeCounter
80AAF3 A512800720        ECALL   ?C?LLDXDATA
80AAF8 A512800679        ECALL   ?C?ULDIV
80AAFD 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80AB00 A512800792        ECALL   ?C?LSTXDATA
80AB05 D001              POP     AR1
80AB07 D002              POP     AR2
80AB09 D003              POP     AR3
80AB0B A512800949        ECALL   _sprintf
80AB10 901638            MOV     DPTR,#len
80AB13 EE                MOV     A,R6
80AB14 8FF0              MOV     B,R7
80AB16 A512800600        ECALL   ?C?IILDX
 1397: 	m_SMSMessage[len++] = '\r';
80AB1B 901638            MOV     DPTR,#len
80AB1E E4                CLR     A
80AB1F 75F001            MOV     B,#01H
80AB22 A512800617        ECALL   ?C?ILDIX
80AB27 FE                MOV     R6,A
80AB28 7498              MOV     A,#LOW m_SMSMessage
80AB2A 25F0              ADD     A,B
80AB2C F582              MOV     DPL,A
80AB2E 7415              MOV     A,#HIGH m_SMSMessage
80AB30 3E                ADDC    A,R6
80AB31 F583              MOV     DPH,A
80AB33 740D              MOV     A,#0DH
80AB35 F0                MOVX    @DPTR,A
 1398: 	//收入硬总金额					
 1399: 	len += sprintf( m_SMSMessage + len, "R01-%08lu", TradeCounter.CoinSum/SystemParameter.curUnit );
80AB36 901638            MOV     DPTR,#len
80AB39 A3                INC     DPTR
80AB3A E0                MOVX    A,@DPTR
80AB3B 2498              ADD     A,#LOW m_SMSMessage
80AB3D F9                MOV     R1,A
80AB3E E4                CLR     A
80AB3F 3415              ADDC    A,#HIGH m_SMSMessage
80AB41 FA                MOV     R2,A
80AB42 7B00              MOV     R3,#?C?XDATASEG
80AB44 C003              PUSH    AR3
80AB46 C002              PUSH    AR2
80AB48 C001              PUSH    AR1
80AB4A 7B80              MOV     R3,#BYTE2 08003AEH
80AB4C 7A03              MOV     R2,#HIGH 08003AEH
80AB4E 79AE              MOV     R1,#LOW 08003AEH
80AB50 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80AB53 A5128007B6        ECALL   ?C?PSTXDATA
80AB58 900466            MOV     DPTR,#SystemParameter+048H
80AB5B E0                MOVX    A,@DPTR
80AB5C FE                MOV     R6,A
80AB5D A3                INC     DPTR
80AB5E E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 409


80AB5F FF                MOV     R7,A
80AB60 FB                MOV     R3,A
80AB61 AA06              MOV     R2,AR6
80AB63 E4                CLR     A
80AB64 F9                MOV     R1,A
80AB65 F8                MOV     R0,A
80AB66 900AF4            MOV     DPTR,#TradeCounter+08H
80AB69 A512800720        ECALL   ?C?LLDXDATA
80AB6E A512800679        ECALL   ?C?ULDIV
80AB73 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80AB76 A512800792        ECALL   ?C?LSTXDATA
80AB7B D001              POP     AR1
80AB7D D002              POP     AR2
80AB7F D003              POP     AR3
80AB81 A512800949        ECALL   _sprintf
80AB86 901638            MOV     DPTR,#len
80AB89 EE                MOV     A,R6
80AB8A 8FF0              MOV     B,R7
80AB8C A512800600        ECALL   ?C?IILDX
 1400: 	m_SMSMessage[len++] = '\r';
80AB91 901638            MOV     DPTR,#len
80AB94 E4                CLR     A
80AB95 75F001            MOV     B,#01H
80AB98 A512800617        ECALL   ?C?ILDIX
80AB9D FE                MOV     R6,A
80AB9E 7498              MOV     A,#LOW m_SMSMessage
80ABA0 25F0              ADD     A,B
80ABA2 F582              MOV     DPL,A
80ABA4 7415              MOV     A,#HIGH m_SMSMessage
80ABA6 3E                ADDC    A,R6
80ABA7 F583              MOV     DPH,A
80ABA9 740D              MOV     A,#0DH
80ABAB F0                MOVX    @DPTR,A
 1401: 	//收入纸币总金额					
 1402: 	len += sprintf( m_SMSMessage + len, "R02-%08lu", TradeCounter.CashSum/SystemParameter.curUnit );		
80ABAC 901638            MOV     DPTR,#len
80ABAF A3                INC     DPTR
80ABB0 E0                MOVX    A,@DPTR
80ABB1 2498              ADD     A,#LOW m_SMSMessage
80ABB3 F9                MOV     R1,A
80ABB4 E4                CLR     A
80ABB5 3415              ADDC    A,#HIGH m_SMSMessage
80ABB7 FA                MOV     R2,A
80ABB8 7B00              MOV     R3,#?C?XDATASEG
80ABBA C003              PUSH    AR3
80ABBC C002              PUSH    AR2
80ABBE C001              PUSH    AR1
80ABC0 7B80              MOV     R3,#BYTE2 08003B8H
80ABC2 7A03              MOV     R2,#HIGH 08003B8H
80ABC4 79B8              MOV     R1,#LOW 08003B8H
80ABC6 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80ABC9 A5128007B6        ECALL   ?C?PSTXDATA
80ABCE 900466            MOV     DPTR,#SystemParameter+048H
80ABD1 E0                MOVX    A,@DPTR
80ABD2 FE                MOV     R6,A
80ABD3 A3                INC     DPTR
80ABD4 E0                MOVX    A,@DPTR
80ABD5 FF                MOV     R7,A
80ABD6 FB                MOV     R3,A
80ABD7 AA06              MOV     R2,AR6
80ABD9 E4                CLR     A
80ABDA F9                MOV     R1,A
80ABDB F8                MOV     R0,A
80ABDC 900AF0            MOV     DPTR,#TradeCounter+04H
80ABDF A512800720        ECALL   ?C?LLDXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 410


80ABE4 A512800679        ECALL   ?C?ULDIV
80ABE9 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80ABEC A512800792        ECALL   ?C?LSTXDATA
80ABF1 D001              POP     AR1
80ABF3 D002              POP     AR2
80ABF5 D003              POP     AR3
80ABF7 A512800949        ECALL   _sprintf
80ABFC 901638            MOV     DPTR,#len
80ABFF EE                MOV     A,R6
80AC00 8FF0              MOV     B,R7
80AC02 A512800600        ECALL   ?C?IILDX
 1403: 	m_SMSMessage[len++] = '\r';
80AC07 901638            MOV     DPTR,#len
80AC0A E4                CLR     A
80AC0B 75F001            MOV     B,#01H
80AC0E A512800617        ECALL   ?C?ILDIX
80AC13 FE                MOV     R6,A
80AC14 7498              MOV     A,#LOW m_SMSMessage
80AC16 25F0              ADD     A,B
80AC18 F582              MOV     DPL,A
80AC1A 7415              MOV     A,#HIGH m_SMSMessage
80AC1C 3E                ADDC    A,R6
80AC1D F583              MOV     DPH,A
80AC1F 740D              MOV     A,#0DH
80AC21 F0                MOVX    @DPTR,A
 1404: 
 1405: 	//找出总金额			
 1406: 	len += sprintf( m_SMSMessage + len, "P00-%08lu", TradeCounter.ChangeSum/SystemParameter.curUnit );
80AC22 901638            MOV     DPTR,#len
80AC25 A3                INC     DPTR
80AC26 E0                MOVX    A,@DPTR
80AC27 2498              ADD     A,#LOW m_SMSMessage
80AC29 F9                MOV     R1,A
80AC2A E4                CLR     A
80AC2B 3415              ADDC    A,#HIGH m_SMSMessage
80AC2D FA                MOV     R2,A
80AC2E 7B00              MOV     R3,#?C?XDATASEG
80AC30 C003              PUSH    AR3
80AC32 C002              PUSH    AR2
80AC34 C001              PUSH    AR1
80AC36 7B80              MOV     R3,#BYTE2 08003C2H
80AC38 7A03              MOV     R2,#HIGH 08003C2H
80AC3A 79C2              MOV     R1,#LOW 08003C2H
80AC3C 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80AC3F A5128007B6        ECALL   ?C?PSTXDATA
80AC44 900466            MOV     DPTR,#SystemParameter+048H
80AC47 E0                MOVX    A,@DPTR
80AC48 FE                MOV     R6,A
80AC49 A3                INC     DPTR
80AC4A E0                MOVX    A,@DPTR
80AC4B FF                MOV     R7,A
80AC4C FB                MOV     R3,A
80AC4D AA06              MOV     R2,AR6
80AC4F E4                CLR     A
80AC50 F9                MOV     R1,A
80AC51 F8                MOV     R0,A
80AC52 900B00            MOV     DPTR,#TradeCounter+014H
80AC55 A512800720        ECALL   ?C?LLDXDATA
80AC5A A512800679        ECALL   ?C?ULDIV
80AC5F 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80AC62 A512800792        ECALL   ?C?LSTXDATA
80AC67 D001              POP     AR1
80AC69 D002              POP     AR2
80AC6B D003              POP     AR3
80AC6D A512800949        ECALL   _sprintf
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 411


80AC72 901638            MOV     DPTR,#len
80AC75 EE                MOV     A,R6
80AC76 8FF0              MOV     B,R7
80AC78 A512800600        ECALL   ?C?IILDX
 1407: 	m_SMSMessage[len++] = '\r';
80AC7D 901638            MOV     DPTR,#len
80AC80 E4                CLR     A
80AC81 75F001            MOV     B,#01H
80AC84 A512800617        ECALL   ?C?ILDIX
80AC89 FE                MOV     R6,A
80AC8A 7498              MOV     A,#LOW m_SMSMessage
80AC8C 25F0              ADD     A,B
80AC8E F582              MOV     DPL,A
80AC90 7415              MOV     A,#HIGH m_SMSMessage
80AC92 3E                ADDC    A,R6
80AC93 F583              MOV     DPH,A
80AC95 740D              MOV     A,#0DH
80AC97 F0                MOVX    @DPTR,A
 1408: 	//找出硬币的总金额
 1409: 	len += sprintf( m_SMSMessage + len, "P01-%08lu", 
80AC98 901638            MOV     DPTR,#len
80AC9B A3                INC     DPTR
80AC9C E0                MOVX    A,@DPTR
80AC9D 2498              ADD     A,#LOW m_SMSMessage
80AC9F F9                MOV     R1,A
80ACA0 E4                CLR     A
80ACA1 3415              ADDC    A,#HIGH m_SMSMessage
80ACA3 FA                MOV     R2,A
80ACA4 7B00              MOV     R3,#?C?XDATASEG
80ACA6 C003              PUSH    AR3
80ACA8 C002              PUSH    AR2
80ACAA C001              PUSH    AR1
80ACAC 7B80              MOV     R3,#BYTE2 08003CCH
80ACAE 7A03              MOV     R2,#HIGH 08003CCH
80ACB0 79CC              MOV     R1,#LOW 08003CCH
80ACB2 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80ACB5 A5128007B6        ECALL   ?C?PSTXDATA
80ACBA 900B08            MOV     DPTR,#TradeCounter+01CH
80ACBD A512800720        ECALL   ?C?LLDXDATA
80ACC2 900B04            MOV     DPTR,#TradeCounter+018H
80ACC5 A51280073E        ECALL   ?C?LLDXDATA0
80ACCA A51280062E        ECALL   ?C?LADD
80ACCF 900B0C            MOV     DPTR,#TradeCounter+020H
80ACD2 A51280073E        ECALL   ?C?LLDXDATA0
80ACD7 A51280062E        ECALL   ?C?LADD
80ACDC C006              PUSH    AR6
80ACDE C007              PUSH    AR7
80ACE0 900466            MOV     DPTR,#SystemParameter+048H
80ACE3 E0                MOVX    A,@DPTR
80ACE4 FE                MOV     R6,A
80ACE5 A3                INC     DPTR
80ACE6 E0                MOVX    A,@DPTR
80ACE7 FB                MOV     R3,A
80ACE8 AA06              MOV     R2,AR6
80ACEA E4                CLR     A
80ACEB F9                MOV     R1,A
80ACEC F8                MOV     R0,A
80ACED D007              POP     AR7
80ACEF D006              POP     AR6
80ACF1 A512800679        ECALL   ?C?ULDIV
80ACF6 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80ACF9 A512800792        ECALL   ?C?LSTXDATA
80ACFE D001              POP     AR1
80AD00 D002              POP     AR2
80AD02 D003              POP     AR3
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 412


80AD04 A512800949        ECALL   _sprintf
80AD09 901638            MOV     DPTR,#len
80AD0C EE                MOV     A,R6
80AD0D 8FF0              MOV     B,R7
80AD0F A512800600        ECALL   ?C?IILDX
 1410:         //TradeCounter.Hopper1Sum + TradeCounter.Hopper2Sum + TradeCounter.Hopper3Sum
 1411: 		(TradeCounter.Hopper1Sum + TradeCounter.Hopper2Sum + TradeCounter.Hopper3Sum)/SystemParameter.curUnit ); //Chan
>> ged by Andy on 2010.8.26
 1412: 	m_SMSMessage[len++] = '\r';
80AD14 901638            MOV     DPTR,#len
80AD17 E4                CLR     A
80AD18 75F001            MOV     B,#01H
80AD1B A512800617        ECALL   ?C?ILDIX
80AD20 FE                MOV     R6,A
80AD21 7498              MOV     A,#LOW m_SMSMessage
80AD23 25F0              ADD     A,B
80AD25 F582              MOV     DPL,A
80AD27 7415              MOV     A,#HIGH m_SMSMessage
80AD29 3E                ADDC    A,R6
80AD2A F583              MOV     DPH,A
80AD2C 740D              MOV     A,#0DH
80AD2E F0                MOVX    @DPTR,A
 1413: 
 1414: 	//交易总金额			
 1415: 	len += sprintf( m_SMSMessage + len, "V00-%08lu", TradeCounter.TradeCurrencySum/SystemParameter.curUnit );
80AD2F 901638            MOV     DPTR,#len
80AD32 A3                INC     DPTR
80AD33 E0                MOVX    A,@DPTR
80AD34 2498              ADD     A,#LOW m_SMSMessage
80AD36 F9                MOV     R1,A
80AD37 E4                CLR     A
80AD38 3415              ADDC    A,#HIGH m_SMSMessage
80AD3A FA                MOV     R2,A
80AD3B 7B00              MOV     R3,#?C?XDATASEG
80AD3D C003              PUSH    AR3
80AD3F C002              PUSH    AR2
80AD41 C001              PUSH    AR1
80AD43 7B80              MOV     R3,#BYTE2 08003D6H
80AD45 7A03              MOV     R2,#HIGH 08003D6H
80AD47 79D6              MOV     R1,#LOW 08003D6H
80AD49 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80AD4C A5128007B6        ECALL   ?C?PSTXDATA
80AD51 900466            MOV     DPTR,#SystemParameter+048H
80AD54 E0                MOVX    A,@DPTR
80AD55 FE                MOV     R6,A
80AD56 A3                INC     DPTR
80AD57 E0                MOVX    A,@DPTR
80AD58 FF                MOV     R7,A
80AD59 FB                MOV     R3,A
80AD5A AA06              MOV     R2,AR6
80AD5C E4                CLR     A
80AD5D F9                MOV     R1,A
80AD5E F8                MOV     R0,A
80AD5F 900AF8            MOV     DPTR,#TradeCounter+0CH
80AD62 A512800720        ECALL   ?C?LLDXDATA
80AD67 A512800679        ECALL   ?C?ULDIV
80AD6C 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80AD6F A512800792        ECALL   ?C?LSTXDATA
80AD74 D001              POP     AR1
80AD76 D002              POP     AR2
80AD78 D003              POP     AR3
80AD7A A512800949        ECALL   _sprintf
80AD7F 901638            MOV     DPTR,#len
80AD82 EE                MOV     A,R6
80AD83 8FF0              MOV     B,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 413


80AD85 A512800600        ECALL   ?C?IILDX
 1416: 	m_SMSMessage[len++] = '\r';
80AD8A 901638            MOV     DPTR,#len
80AD8D E4                CLR     A
80AD8E 75F001            MOV     B,#01H
80AD91 A512800617        ECALL   ?C?ILDIX
80AD96 FE                MOV     R6,A
80AD97 7498              MOV     A,#LOW m_SMSMessage
80AD99 25F0              ADD     A,B
80AD9B F582              MOV     DPL,A
80AD9D 7415              MOV     A,#HIGH m_SMSMessage
80AD9F 3E                ADDC    A,R6
80ADA0 F583              MOV     DPH,A
80ADA2 740D              MOV     A,#0DH
80ADA4 F0                MOVX    @DPTR,A
 1417: 	//正常交易次数	
 1418: 	len += sprintf( m_SMSMessage + len, "V01-%08u", TradeCounter.GoodTraceSum );
80ADA5 901638            MOV     DPTR,#len
80ADA8 A3                INC     DPTR
80ADA9 E0                MOVX    A,@DPTR
80ADAA 2498              ADD     A,#LOW m_SMSMessage
80ADAC F9                MOV     R1,A
80ADAD E4                CLR     A
80ADAE 3415              ADDC    A,#HIGH m_SMSMessage
80ADB0 FA                MOV     R2,A
80ADB1 7B00              MOV     R3,#?C?XDATASEG
80ADB3 C003              PUSH    AR3
80ADB5 C002              PUSH    AR2
80ADB7 C001              PUSH    AR1
80ADB9 7B80              MOV     R3,#BYTE2 08003E0H
80ADBB 7A03              MOV     R2,#HIGH 08003E0H
80ADBD 79E0              MOV     R1,#LOW 08003E0H
80ADBF 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80ADC2 A5128007B6        ECALL   ?C?PSTXDATA
80ADC7 900AFC            MOV     DPTR,#TradeCounter+010H
80ADCA E0                MOVX    A,@DPTR
80ADCB FF                MOV     R7,A
80ADCC A3                INC     DPTR
80ADCD E0                MOVX    A,@DPTR
80ADCE 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80ADD1 CF                XCH     A,R7
80ADD2 F0                MOVX    @DPTR,A
80ADD3 A3                INC     DPTR
80ADD4 EF                MOV     A,R7
80ADD5 F0                MOVX    @DPTR,A
80ADD6 D001              POP     AR1
80ADD8 D002              POP     AR2
80ADDA D003              POP     AR3
80ADDC A512800949        ECALL   _sprintf
80ADE1 901638            MOV     DPTR,#len
80ADE4 EE                MOV     A,R6
80ADE5 8FF0              MOV     B,R7
80ADE7 A512800600        ECALL   ?C?IILDX
 1419: 	m_SMSMessage[len++] = '\r';
80ADEC 901638            MOV     DPTR,#len
80ADEF E4                CLR     A
80ADF0 75F001            MOV     B,#01H
80ADF3 A512800617        ECALL   ?C?ILDIX
80ADF8 FE                MOV     R6,A
80ADF9 7498              MOV     A,#LOW m_SMSMessage
80ADFB 25F0              ADD     A,B
80ADFD F582              MOV     DPL,A
80ADFF 7415              MOV     A,#HIGH m_SMSMessage
80AE01 3E                ADDC    A,R6
80AE02 F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 414


80AE04 740D              MOV     A,#0DH
80AE06 F0                MOVX    @DPTR,A
 1420: 	//有疑问出货交易次数
 1421: 	len += sprintf( m_SMSMessage + len, "V02-%08u", TradeCounter.GoodDoubtTraceSum );
80AE07 901638            MOV     DPTR,#len
80AE0A A3                INC     DPTR
80AE0B E0                MOVX    A,@DPTR
80AE0C 2498              ADD     A,#LOW m_SMSMessage
80AE0E F9                MOV     R1,A
80AE0F E4                CLR     A
80AE10 3415              ADDC    A,#HIGH m_SMSMessage
80AE12 FA                MOV     R2,A
80AE13 7B00              MOV     R3,#?C?XDATASEG
80AE15 C003              PUSH    AR3
80AE17 C002              PUSH    AR2
80AE19 C001              PUSH    AR1
80AE1B 7B80              MOV     R3,#BYTE2 08003E9H
80AE1D 7A03              MOV     R2,#HIGH 08003E9H
80AE1F 79E9              MOV     R1,#LOW 08003E9H
80AE21 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80AE24 A5128007B6        ECALL   ?C?PSTXDATA
80AE29 900AFE            MOV     DPTR,#TradeCounter+012H
80AE2C E0                MOVX    A,@DPTR
80AE2D FF                MOV     R7,A
80AE2E A3                INC     DPTR
80AE2F E0                MOVX    A,@DPTR
80AE30 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80AE33 CF                XCH     A,R7
80AE34 F0                MOVX    @DPTR,A
80AE35 A3                INC     DPTR
80AE36 EF                MOV     A,R7
80AE37 F0                MOVX    @DPTR,A
80AE38 D001              POP     AR1
80AE3A D002              POP     AR2
80AE3C D003              POP     AR3
80AE3E A512800949        ECALL   _sprintf
80AE43 901638            MOV     DPTR,#len
80AE46 EE                MOV     A,R6
80AE47 8FF0              MOV     B,R7
80AE49 A512800600        ECALL   ?C?IILDX
 1422: 	m_SMSMessage[len++] = '\r';
80AE4E 901638            MOV     DPTR,#len
80AE51 E4                CLR     A
80AE52 75F001            MOV     B,#01H
80AE55 A512800617        ECALL   ?C?ILDIX
80AE5A FE                MOV     R6,A
80AE5B 7498              MOV     A,#LOW m_SMSMessage
80AE5D 25F0              ADD     A,B
80AE5F F582              MOV     DPL,A
80AE61 7415              MOV     A,#HIGH m_SMSMessage
80AE63 3E                ADDC    A,R6
80AE64 F583              MOV     DPH,A
80AE66 740D              MOV     A,#0DH
80AE68 F0                MOVX    @DPTR,A
 1423: 	
 1424: 	
 1425: 	//有统计信息要发送		
 1426: 	m_SMSMessage[len--] = 0;
80AE69 901638            MOV     DPTR,#len
80AE6C 74FF              MOV     A,#0FFH
80AE6E F5F0              MOV     B,A
80AE70 A512800617        ECALL   ?C?ILDIX
80AE75 FE                MOV     R6,A
80AE76 7498              MOV     A,#LOW m_SMSMessage
80AE78 25F0              ADD     A,B
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 415


80AE7A F582              MOV     DPL,A
80AE7C 7415              MOV     A,#HIGH m_SMSMessage
80AE7E 3E                ADDC    A,R6
80AE7F F583              MOV     DPH,A
80AE81 E4                CLR     A
80AE82 F0                MOVX    @DPTR,A
 1427: 	Trace( "\n TradePack m_SMSMessage[%u] = %s", len, m_SMSMessage );	
 1428: #ifdef _MOBILE_SMS_1
 1429: 	SendSMS( m_SMSMessage, len );
80AE83 7B00              MOV     R3,#?C?XDATASEG
80AE85 7A15              MOV     R2,#HIGH m_SMSMessage
80AE87 7998              MOV     R1,#LOW m_SMSMessage
80AE89 901638            MOV     DPTR,#len
80AE8C A3                INC     DPTR
80AE8D E0                MOVX    A,@DPTR
80AE8E FD                MOV     R5,A
80AE8F A51280A91C        ECALL   _SendSMS
 1430: 	SMSQuery &= 0xFD;						
80AE94 900143            MOV     DPTR,#SMSQuery
80AE97 E0                MOVX    A,@DPTR
80AE98 54FD              ANL     A,#0FDH
80AE9A F0                MOVX    @DPTR,A
 1431: #endif
 1432: 	return 0;
80AE9B 7F00              MOV     R7,#00H
 1433: }
80AE9D         ?C0316?MAINFLOW:
80AE9D A522              ERET    
----- FUNCTION TradePack (END) -------


----- FUNCTION SMSCommStatus (BEGIN) -----
 FILE: 'communication.c'
   17: 	bit SMSCommStatus()
   18: 	{	
   19: 		///待发的短信已装满待发区，不能再加入了
   20: 		if( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount >= MAX_BUFFERED_SMS_COUNT )
80AE9F 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
80AEA2 E0                MOVX    A,@DPTR
80AEA3 C3                CLR     C
80AEA4 940A              SUBB    A,#0AH
80AEA6 4002              JC      ?C0003?COMMUNICATION
   21: 			return 0;	
80AEA8 800A              SJMP    ?C0004?COMMUNICATION
80AEAA         ?C0003?COMMUNICATION:
   22: 		if( g_SMSCommModuleInfo.m_byCommStatus != COMM_STATUS_OK )
80AEAA 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
80AEAD E0                MOVX    A,@DPTR
80AEAE 6404              XRL     A,#04H
80AEB0 D3                SETB    C
80AEB1 6001              JZ      ?C0005?COMMUNICATION
   23: 			return 0;
80AEB3 C3                CLR     C
80AEB4         ?C0005?COMMUNICATION:
   24: 		return 1;	
   25: 	}
80AEB4         ?C0004?COMMUNICATION:
80AEB4 A522              ERET    
----- FUNCTION SMSCommStatus (END) -------


----- FUNCTION CycleSendSMS (BEGIN) -----
 FILE: 'mainflow.c'
 1668: u_char CycleSendSMS()
 1669: {
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 416


 1670: 	u_char xdata i = 0;
 1671: 	
80AEB6 E4                CLR     A
80AEB7 901597            MOV     DPTR,#i
80AEBA F0                MOVX    @DPTR,A
 1672: 	if( SystemParameter.MobileON != 1 )
80AEBB 900444            MOV     DPTR,#SystemParameter+026H
80AEBE E0                MOVX    A,@DPTR
80AEBF 6401              XRL     A,#01H
80AEC1 6004              JZ      ?C0371?MAINFLOW
 1673: 		return 0;
80AEC3 7F00              MOV     R7,#00H
80AEC5 805C              SJMP    ?C0372?MAINFLOW
80AEC7         ?C0371?MAINFLOW:
 1674: /*	//用于有重发机制的协议
 1675: 	for( i = 0; i < MAX_SMS_LIST; i++ )
 1676: 	{
 1677: 		if( ( AlarmSpacing >= 0 ) && ( AlarmSpacing <= 2 ) && ( SMSMessage[ i ].Flag == 1 ) )
 1678: 		{
 1679: 			SMSMessage[ i ].Flag = 0;			
 1680: 		}
 1681: 	}
 1682: 	for( i = 0; i < MAX_SMS_LIST; i ++ )
 1683: 	{
 1684: 		if( ( SMSMessage[ i ].SendTime <= AlarmSpacing ) && ( SMSMessage[ i ].Flag == 0 ) && 
 1685: 			( SMSCommStatus() ) && ( SMSMessage[ i ].SMSLen != 0 ) )
 1686: 		{				
 1687: 			SendSMS( SMSMessage[ i ].SMSMessage, SMSMessage[ i ].SMSLen );
 1688: 			memset( &SMSMessage[ i ], 0, sizeof(struct SMSMessageList ) );
 1689: 		}
 1690: 	}
 1691: */
 1692: 	//报警信息如果有页，则再次组包
 1693: 	if( ( SMSQuery & 0x40 ) == 0x40 )
80AEC7 900143            MOV     DPTR,#SMSQuery
80AECA E0                MOVX    A,@DPTR
80AECB 30E605            JNB     ACC.6,?C0373?MAINFLOW
 1694: 		ScanIsSendAlarm();
80AECE A512809FA6        ECALL   ScanIsSendAlarm
80AED3         ?C0373?MAINFLOW:
 1695: 
 1696: 	//查询设备状态如果有分页，则再次组包
 1697: 	if( ( SMSQuery & 0x80 ) == 0x80 )
80AED3 900143            MOV     DPTR,#SMSQuery
80AED6 E0                MOVX    A,@DPTR
80AED7 30E705            JNB     ACC.7,?C0374?MAINFLOW
 1698: 		ScanDeviceStatus();
80AEDA A51280AF25        ECALL   ScanDeviceStatus
80AEDF         ?C0374?MAINFLOW:
 1699: 
 1700: 	if( ( SMSQuery & 0x01 ) == 0x01 )
80AEDF 900143            MOV     DPTR,#SMSQuery
80AEE2 E0                MOVX    A,@DPTR
80AEE3 30E00F            JNB     ACC.0,?C0375?MAINFLOW
 1701: 	{
 1702: 		//有查询设备状态的命令
 1703: 		if( ScanDeviceStatus() == 0 )
80AEE6 A51280AF25        ECALL   ScanDeviceStatus
80AEEB EF                MOV     A,R7
80AEEC 7007              JNZ     ?C0375?MAINFLOW
 1704: 			SMSQuery &= 0xFE;
80AEEE 900143            MOV     DPTR,#SMSQuery
80AEF1 E0                MOVX    A,@DPTR
80AEF2 54FE              ANL     A,#0FEH
80AEF4 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 417


 1705: 	}
80AEF5         ?C0375?MAINFLOW:
 1706: 	if(( SMSQuery & 0x02 ) == 0x02 )
80AEF5 900143            MOV     DPTR,#SMSQuery
80AEF8 E0                MOVX    A,@DPTR
80AEF9 30E10F            JNB     ACC.1,?C0377?MAINFLOW
 1707: 	{
 1708: 		if( TradePack() == 0 )
80AEFC A51280A9EE        ECALL   TradePack
80AF01 EF                MOV     A,R7
80AF02 7007              JNZ     ?C0377?MAINFLOW
 1709: 			SMSQuery &= 0xFD;
80AF04 900143            MOV     DPTR,#SMSQuery
80AF07 E0                MOVX    A,@DPTR
80AF08 54FD              ANL     A,#0FDH
80AF0A F0                MOVX    @DPTR,A
 1710: 	}
80AF0B         ?C0377?MAINFLOW:
 1711: 	if( ( SMSQuery & 0x04 ) == 0x00 ) 
80AF0B 900143            MOV     DPTR,#SMSQuery
80AF0E E0                MOVX    A,@DPTR
80AF0F 20E20F            JB      ACC.2,?C0379?MAINFLOW
 1712: 	{	
 1713: 		if( ScanIsSendAlarm() == 0 )
80AF12 A512809FA6        ECALL   ScanIsSendAlarm
80AF17 EF                MOV     A,R7
80AF18 7007              JNZ     ?C0379?MAINFLOW
 1714: 			SMSQuery |= 0x04;
80AF1A 900143            MOV     DPTR,#SMSQuery
80AF1D E0                MOVX    A,@DPTR
80AF1E 4404              ORL     A,#04H
80AF20 F0                MOVX    @DPTR,A
 1715: 	}		
80AF21         ?C0379?MAINFLOW:
 1716: 	return 0;
80AF21 7F00              MOV     R7,#00H
 1717: }
80AF23         ?C0372?MAINFLOW:
80AF23 A522              ERET    
----- FUNCTION CycleSendSMS (END) -------


----- FUNCTION ScanDeviceStatus (BEGIN) -----
 FILE: 'mainflow.c'
 1093: u_char	ScanDeviceStatus()
 1094: {
 1095: 	u_char xdata str1[6];
 1096: 	u_char xdata m_SMSMessage[MAX_SMS_LEN];
 1097: 	u_int  xdata len = 0;
80AF25 E4                CLR     A
80AF26 90163E            MOV     DPTR,#len
80AF29 F0                MOVX    @DPTR,A
80AF2A A3                INC     DPTR
80AF2B F0                MOVX    @DPTR,A
 1098: 	//bit0表示已添加了至少一个消息包	
 1099: 	u_char xdata flag = 0;
80AF2C A3                INC     DPTR
80AF2D F0                MOVX    @DPTR,A
 1100: 	u_char xdata i = 0;
80AF2E A3                INC     DPTR
80AF2F F0                MOVX    @DPTR,A
 1101: 	u_char xdata Index = 0;
80AF30 A3                INC     DPTR
80AF31 F0                MOVX    @DPTR,A
 1102: 	u_char xdata IsMorePage = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 418


80AF32 A3                INC     DPTR
80AF33 F0                MOVX    @DPTR,A
 1103: 
 1104: 	if( SystemParameter.MobileON != 1 )
80AF34 900444            MOV     DPTR,#SystemParameter+026H
80AF37 E0                MOVX    A,@DPTR
80AF38 6401              XRL     A,#01H
80AF3A 6005              JZ      ?C0261?MAINFLOW
 1105: 		return 1;
80AF3C 7F01              MOV     R7,#01H
80AF3E 02B6D7            LJMP    ?C0262?MAINFLOW
80AF41         ?C0261?MAINFLOW:
 1106: 	//是否可以向短信发送队列中添加短信
 1107: 	if( !SMSCommStatus() )
80AF41 A51280AE9F        ECALL   SMSCommStatus
80AF46 4005              JC      ?C0263?MAINFLOW
 1108: 		//已不能向短信发送队列中添加短信了
 1109: 		return 1;
80AF48 7F01              MOV     R7,#01H
80AF4A 02B6D7            LJMP    ?C0262?MAINFLOW
80AF4D         ?C0263?MAINFLOW:
 1110: 	
 1111: 	memset( m_SMSMessage, 0, sizeof( m_SMSMessage ) );	
80AF4D 7E00              MOV     R6,#00H
80AF4F 7FA0              MOV     R7,#0A0H
80AF51 7D00              MOV     R5,#00H
80AF53 7B00              MOV     R3,#?C?XDATASEG
80AF55 7A15              MOV     R2,#HIGH m_SMSMessage
80AF57 799E              MOV     R1,#LOW m_SMSMessage
80AF59 A5128008A6        ECALL   ?C?MEMSET
 1112: 	//添加短信头部
 1113: 	memcpy( m_SMSMessage, "VMMSG", 5 );
80AF5E 789E              MOV     R0,#LOW m_SMSMessage
80AF60 7C15              MOV     R4,#HIGH m_SMSMessage
80AF62 7D00              MOV     R5,#?C?XDATASEG
80AF64 7B80              MOV     R3,#BYTE2 080031FH
80AF66 7A03              MOV     R2,#HIGH 080031FH
80AF68 791F              MOV     R1,#LOW 080031FH
80AF6A 7E00              MOV     R6,#00H
80AF6C 7F05              MOV     R7,#05H
80AF6E A51280052D        ECALL   ?C?COPY
 1114: 	len += 5;
80AF73 90163E            MOV     DPTR,#len
80AF76 E4                CLR     A
80AF77 75F005            MOV     B,#05H
80AF7A A512800600        ECALL   ?C?IILDX
 1115: 	for( i = 0; i < 5; i ++ )
80AF7F E4                CLR     A
80AF80 901641            MOV     DPTR,#i
80AF83 F0                MOVX    @DPTR,A
80AF84         ?C0264?MAINFLOW:
 1116: 		sprintf( m_SMSMessage + len + i, "%bu", SystemParameter.VmID[i] );
80AF84 90163E            MOV     DPTR,#len
80AF87 E0                MOVX    A,@DPTR
80AF88 FE                MOV     R6,A
80AF89 A3                INC     DPTR
80AF8A E0                MOVX    A,@DPTR
80AF8B 249E              ADD     A,#LOW m_SMSMessage
80AF8D F9                MOV     R1,A
80AF8E 7415              MOV     A,#HIGH m_SMSMessage
80AF90 3E                ADDC    A,R6
80AF91 FA                MOV     R2,A
80AF92 7B00              MOV     R3,#?C?XDATASEG
80AF94 901641            MOV     DPTR,#i
80AF97 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 419


80AF98 FF                MOV     R7,A
80AF99 29                ADD     A,R1
80AF9A F9                MOV     R1,A
80AF9B E4                CLR     A
80AF9C 3A                ADDC    A,R2
80AF9D FA                MOV     R2,A
80AF9E C003              PUSH    AR3
80AFA0 C002              PUSH    AR2
80AFA2 C001              PUSH    AR1
80AFA4 7B80              MOV     R3,#BYTE2 0800325H
80AFA6 7A03              MOV     R2,#HIGH 0800325H
80AFA8 7925              MOV     R1,#LOW 0800325H
80AFAA 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80AFAD A5128007B6        ECALL   ?C?PSTXDATA
80AFB2 742F              MOV     A,#LOW SystemParameter+011H
80AFB4 2F                ADD     A,R7
80AFB5 F582              MOV     DPL,A
80AFB7 E4                CLR     A
80AFB8 3404              ADDC    A,#HIGH SystemParameter+011H
80AFBA F583              MOV     DPH,A
80AFBC E0                MOVX    A,@DPTR
80AFBD 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80AFC0 F0                MOVX    @DPTR,A
80AFC1 D001              POP     AR1
80AFC3 D002              POP     AR2
80AFC5 D003              POP     AR3
80AFC7 A512800949        ECALL   _sprintf
80AFCC 901641            MOV     DPTR,#i
80AFCF E0                MOVX    A,@DPTR
80AFD0 04                INC     A
80AFD1 F0                MOVX    @DPTR,A
80AFD2 E0                MOVX    A,@DPTR
80AFD3 C3                CLR     C
80AFD4 9405              SUBB    A,#05H
80AFD6 40AC              JC      ?C0264?MAINFLOW
80AFD8         ?C0265?MAINFLOW:
 1117: 	len += 5;	
80AFD8 90163E            MOV     DPTR,#len
80AFDB E4                CLR     A
80AFDC 75F005            MOV     B,#05H
80AFDF A512800600        ECALL   ?C?IILDX
 1118: 	m_SMSMessage[len++] = '\r';
80AFE4 90163E            MOV     DPTR,#len
80AFE7 E4                CLR     A
80AFE8 75F001            MOV     B,#01H
80AFEB A512800617        ECALL   ?C?ILDIX
80AFF0 FE                MOV     R6,A
80AFF1 749E              MOV     A,#LOW m_SMSMessage
80AFF3 25F0              ADD     A,B
80AFF5 F582              MOV     DPL,A
80AFF7 7415              MOV     A,#HIGH m_SMSMessage
80AFF9 3E                ADDC    A,R6
80AFFA F583              MOV     DPH,A
80AFFC 740D              MOV     A,#0DH
80AFFE F0                MOVX    @DPTR,A
 1119: 	//处理系统故障
 1120: 	//暂停服务
 1121: 	if( SystemStatus == 2 ) 
80AFFF 9001C4            MOV     DPTR,#SystemStatus
80B002 E0                MOVX    A,@DPTR
80B003 6402              XRL     A,#02H
80B005 704D              JNZ     ?C0267?MAINFLOW
 1122: 	{
 1123: 		memcpy( m_SMSMessage + len, "S0090", 5 );		
80B007 90163E            MOV     DPTR,#len
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 420


80B00A A3                INC     DPTR
80B00B E0                MOVX    A,@DPTR
80B00C 249E              ADD     A,#LOW m_SMSMessage
80B00E F9                MOV     R1,A
80B00F E4                CLR     A
80B010 3415              ADDC    A,#HIGH m_SMSMessage
80B012 A801              MOV     R0,AR1
80B014 FC                MOV     R4,A
80B015 7D00              MOV     R5,#?C?XDATASEG
80B017 7B80              MOV     R3,#BYTE2 0800329H
80B019 7A03              MOV     R2,#HIGH 0800329H
80B01B 7929              MOV     R1,#LOW 0800329H
80B01D 7E00              MOV     R6,#00H
80B01F 7F05              MOV     R7,#05H
80B021 A51280052D        ECALL   ?C?COPY
 1124: 		len += 5;	
80B026 90163E            MOV     DPTR,#len
80B029 E4                CLR     A
80B02A 75F005            MOV     B,#05H
80B02D A512800600        ECALL   ?C?IILDX
 1125: 		flag |= 0x03;
80B032 901640            MOV     DPTR,#flag
80B035 E0                MOVX    A,@DPTR
80B036 4403              ORL     A,#03H
80B038 F0                MOVX    @DPTR,A
 1126: 		m_SMSMessage[len++] = '\r';		
80B039 90163E            MOV     DPTR,#len
80B03C E4                CLR     A
80B03D 75F001            MOV     B,#01H
80B040 A512800617        ECALL   ?C?ILDIX
80B045 FE                MOV     R6,A
80B046 749E              MOV     A,#LOW m_SMSMessage
80B048 25F0              ADD     A,B
80B04A F582              MOV     DPL,A
80B04C 7415              MOV     A,#HIGH m_SMSMessage
80B04E 3E                ADDC    A,R6
80B04F F583              MOV     DPH,A
80B051 740D              MOV     A,#0DH
80B053 F0                MOVX    @DPTR,A
 1127: 	}
80B054         ?C0267?MAINFLOW:
 1128: 
 1129: 	//参数校验错误
 1130: 	if(( HardWareErr & 0x0100 ) == 0x0100 )
80B054 90047F            MOV     DPTR,#HardWareErr
80B057 E0                MOVX    A,@DPTR
80B058 30E061            JNB     ACC.0,?C0268?MAINFLOW
 1131: 	{		
 1132: 		if( ( flag & 0x02 ) == 0x02 )
80B05B 901640            MOV     DPTR,#flag
80B05E E0                MOVX    A,@DPTR
80B05F 30E117            JNB     ACC.1,?C0269?MAINFLOW
 1133: 			memcpy( m_SMSMessage - 5, "S0010", 5 );
80B062 7899              MOV     R0,#LOW m_SMSMessage-05H
80B064 7C15              MOV     R4,#HIGH m_SMSMessage-05H
80B066 7D00              MOV     R5,#?C?XDATASEG
80B068 7B80              MOV     R3,#BYTE2 080032FH
80B06A 7A03              MOV     R2,#HIGH 080032FH
80B06C 792F              MOV     R1,#LOW 080032FH
80B06E 7E00              MOV     R6,#00H
80B070 7F05              MOV     R7,#05H
80B072 A51280052D        ECALL   ?C?COPY
80B077 8028              SJMP    ?C0270?MAINFLOW
80B079         ?C0269?MAINFLOW:
 1134: 		else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 421


 1135: 		{
 1136: 			memcpy( m_SMSMessage, "S0010", 5 );
80B079 789E              MOV     R0,#LOW m_SMSMessage
80B07B 7C15              MOV     R4,#HIGH m_SMSMessage
80B07D 7D00              MOV     R5,#?C?XDATASEG
80B07F 7B80              MOV     R3,#BYTE2 080032FH
80B081 7A03              MOV     R2,#HIGH 080032FH
80B083 792F              MOV     R1,#LOW 080032FH
80B085 7E00              MOV     R6,#00H
80B087 7F05              MOV     R7,#05H
80B089 A51280052D        ECALL   ?C?COPY
 1137: 			len += 5;	
80B08E 90163E            MOV     DPTR,#len
80B091 E4                CLR     A
80B092 75F005            MOV     B,#05H
80B095 A512800600        ECALL   ?C?IILDX
 1138: 			flag |= 0x03;
80B09A 901640            MOV     DPTR,#flag
80B09D E0                MOVX    A,@DPTR
80B09E 4403              ORL     A,#03H
80B0A0 F0                MOVX    @DPTR,A
 1139: 		}
80B0A1         ?C0270?MAINFLOW:
 1140: 		m_SMSMessage[len++] = '\r';				
80B0A1 90163E            MOV     DPTR,#len
80B0A4 E4                CLR     A
80B0A5 75F001            MOV     B,#01H
80B0A8 A512800617        ECALL   ?C?ILDIX
80B0AD FE                MOV     R6,A
80B0AE 749E              MOV     A,#LOW m_SMSMessage
80B0B0 25F0              ADD     A,B
80B0B2 F582              MOV     DPL,A
80B0B4 7415              MOV     A,#HIGH m_SMSMessage
80B0B6 3E                ADDC    A,R6
80B0B7 F583              MOV     DPH,A
80B0B9 740D              MOV     A,#0DH
80B0BB F0                MOVX    @DPTR,A
 1141: 	}
80B0BC         ?C0268?MAINFLOW:
 1142: 	
 1143: 	//显示板通讯故障
 1144: 	if ( ( HardWareErr & 0x0200 ) == 0x0200 ) 
80B0BC 90047F            MOV     DPTR,#HardWareErr
80B0BF E0                MOVX    A,@DPTR
80B0C0 30E14D            JNB     ACC.1,?C0271?MAINFLOW
 1145: 	{		
 1146: 		memcpy( m_SMSMessage + len, "S0420", 5 );
80B0C3 90163E            MOV     DPTR,#len
80B0C6 A3                INC     DPTR
80B0C7 E0                MOVX    A,@DPTR
80B0C8 249E              ADD     A,#LOW m_SMSMessage
80B0CA F9                MOV     R1,A
80B0CB E4                CLR     A
80B0CC 3415              ADDC    A,#HIGH m_SMSMessage
80B0CE A801              MOV     R0,AR1
80B0D0 FC                MOV     R4,A
80B0D1 7D00              MOV     R5,#?C?XDATASEG
80B0D3 7B80              MOV     R3,#BYTE2 0800398H
80B0D5 7A03              MOV     R2,#HIGH 0800398H
80B0D7 7998              MOV     R1,#LOW 0800398H
80B0D9 7E00              MOV     R6,#00H
80B0DB 7F05              MOV     R7,#05H
80B0DD A51280052D        ECALL   ?C?COPY
 1147: 		len += 5;	
80B0E2 90163E            MOV     DPTR,#len
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 422


80B0E5 E4                CLR     A
80B0E6 75F005            MOV     B,#05H
80B0E9 A512800600        ECALL   ?C?IILDX
 1148: 		flag |= 0x01;
80B0EE 901640            MOV     DPTR,#flag
80B0F1 E0                MOVX    A,@DPTR
80B0F2 4401              ORL     A,#01H
80B0F4 F0                MOVX    @DPTR,A
 1149: 		m_SMSMessage[len++] = '\r';			
80B0F5 90163E            MOV     DPTR,#len
80B0F8 E4                CLR     A
80B0F9 75F001            MOV     B,#01H
80B0FC A512800617        ECALL   ?C?ILDIX
80B101 FE                MOV     R6,A
80B102 749E              MOV     A,#LOW m_SMSMessage
80B104 25F0              ADD     A,B
80B106 F582              MOV     DPL,A
80B108 7415              MOV     A,#HIGH m_SMSMessage
80B10A 3E                ADDC    A,R6
80B10B F583              MOV     DPH,A
80B10D 740D              MOV     A,#0DH
80B10F F0                MOVX    @DPTR,A
 1150: 	}
80B110         ?C0271?MAINFLOW:
 1151: 	
 1152: 	////货道驱动板扫描		
 1153: 	if( ( HardWareErr & 0x0040 ) == 0x0040 ) 
80B110 900480            MOV     DPTR,#HardWareErr+01H
80B113 E0                MOVX    A,@DPTR
80B114 30E64D            JNB     ACC.6,?C0272?MAINFLOW
 1154: 	{
 1155: 		Trace( "\n ScanIsSendAlarm link error");
 1156: 		//都与主板通讯不上
 1157: 		memcpy( m_SMSMessage+len, "H0120", 5 );
80B117 90163E            MOV     DPTR,#len
80B11A A3                INC     DPTR
80B11B E0                MOVX    A,@DPTR
80B11C 249E              ADD     A,#LOW m_SMSMessage
80B11E F9                MOV     R1,A
80B11F E4                CLR     A
80B120 3415              ADDC    A,#HIGH m_SMSMessage
80B122 A801              MOV     R0,AR1
80B124 FC                MOV     R4,A
80B125 7D00              MOV     R5,#?C?XDATASEG
80B127 7B80              MOV     R3,#BYTE2 0800335H
80B129 7A03              MOV     R2,#HIGH 0800335H
80B12B 7935              MOV     R1,#LOW 0800335H
80B12D 7E00              MOV     R6,#00H
80B12F 7F05              MOV     R7,#05H
80B131 A51280052D        ECALL   ?C?COPY
 1158: 		len  += 5;
80B136 90163E            MOV     DPTR,#len
80B139 E4                CLR     A
80B13A 75F005            MOV     B,#05H
80B13D A512800600        ECALL   ?C?IILDX
 1159: 		m_SMSMessage[len++] = '\r';	
80B142 90163E            MOV     DPTR,#len
80B145 E4                CLR     A
80B146 75F001            MOV     B,#01H
80B149 A512800617        ECALL   ?C?ILDIX
80B14E FE                MOV     R6,A
80B14F 749E              MOV     A,#LOW m_SMSMessage
80B151 25F0              ADD     A,B
80B153 F582              MOV     DPL,A
80B155 7415              MOV     A,#HIGH m_SMSMessage
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 423


80B157 3E                ADDC    A,R6
80B158 F583              MOV     DPH,A
80B15A 740D              MOV     A,#0DH
80B15C F0                MOVX    @DPTR,A
 1160: 		flag |= 0x01;		
80B15D 901640            MOV     DPTR,#flag
80B160 E0                MOVX    A,@DPTR
80B161 4401              ORL     A,#01H
80B163 F0                MOVX    @DPTR,A
 1161: 	}	
80B164         ?C0272?MAINFLOW:
 1162: 
 1163: 	//纸币器
 1164: 	if( SystemParameter.BillNo == 1 )
80B164 900425            MOV     DPTR,#SystemParameter+07H
80B167 E0                MOVX    A,@DPTR
80B168 6401              XRL     A,#01H
80B16A 7053              JNZ     ?C0273?MAINFLOW
 1165: 	{
 1166: 		//开启了纸币器
 1167: 		if( DeviceStatus.BillAccepter != 0 )			
80B16C 900B16            MOV     DPTR,#DeviceStatus
80B16F E0                MOVX    A,@DPTR
80B170 604D              JZ      ?C0273?MAINFLOW
 1168: 		{
 1169: 			Trace( "\n ScanIsSendAlarm bill error");
 1170: 			//还没有发送报警,准备发送			
 1171: 			memcpy( m_SMSMessage+len, "A0210", 5 );
80B172 90163E            MOV     DPTR,#len
80B175 A3                INC     DPTR
80B176 E0                MOVX    A,@DPTR
80B177 249E              ADD     A,#LOW m_SMSMessage
80B179 F9                MOV     R1,A
80B17A E4                CLR     A
80B17B 3415              ADDC    A,#HIGH m_SMSMessage
80B17D A801              MOV     R0,AR1
80B17F FC                MOV     R4,A
80B180 7D00              MOV     R5,#?C?XDATASEG
80B182 7B80              MOV     R3,#BYTE2 0800341H
80B184 7A03              MOV     R2,#HIGH 0800341H
80B186 7941              MOV     R1,#LOW 0800341H
80B188 7E00              MOV     R6,#00H
80B18A 7F05              MOV     R7,#05H
80B18C A51280052D        ECALL   ?C?COPY
 1172: 			len += 5;			
80B191 90163E            MOV     DPTR,#len
80B194 E4                CLR     A
80B195 75F005            MOV     B,#05H
80B198 A512800600        ECALL   ?C?IILDX
 1173: 			m_SMSMessage[len++] = '\r';	
80B19D 90163E            MOV     DPTR,#len
80B1A0 E4                CLR     A
80B1A1 75F001            MOV     B,#01H
80B1A4 A512800617        ECALL   ?C?ILDIX
80B1A9 FE                MOV     R6,A
80B1AA 749E              MOV     A,#LOW m_SMSMessage
80B1AC 25F0              ADD     A,B
80B1AE F582              MOV     DPL,A
80B1B0 7415              MOV     A,#HIGH m_SMSMessage
80B1B2 3E                ADDC    A,R6
80B1B3 F583              MOV     DPH,A
80B1B5 740D              MOV     A,#0DH
80B1B7 F0                MOVX    @DPTR,A
 1174: 			flag |= 0x01;			
80B1B8 901640            MOV     DPTR,#flag
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 424


80B1BB E0                MOVX    A,@DPTR
80B1BC 4401              ORL     A,#01H
80B1BE F0                MOVX    @DPTR,A
 1175: 		}
 1176: 	}	
80B1BF         ?C0273?MAINFLOW:
 1177: 	
 1178: 	//硬币器
 1179: 	if( DeviceStatus.CoinAccepter != 0 )		
80B1BF 900B17            MOV     DPTR,#DeviceStatus+01H
80B1C2 E0                MOVX    A,@DPTR
80B1C3 604D              JZ      ?C0275?MAINFLOW
 1180: 	{
 1181: 		Trace( "\n ScanIsSendAlarm coin error");
 1182: 		//还没有发送报警,准备发送
 1183: 		memcpy( m_SMSMessage + len, "A0110", 5 );
80B1C5 90163E            MOV     DPTR,#len
80B1C8 A3                INC     DPTR
80B1C9 E0                MOVX    A,@DPTR
80B1CA 249E              ADD     A,#LOW m_SMSMessage
80B1CC F9                MOV     R1,A
80B1CD E4                CLR     A
80B1CE 3415              ADDC    A,#HIGH m_SMSMessage
80B1D0 A801              MOV     R0,AR1
80B1D2 FC                MOV     R4,A
80B1D3 7D00              MOV     R5,#?C?XDATASEG
80B1D5 7B80              MOV     R3,#BYTE2 0800347H
80B1D7 7A03              MOV     R2,#HIGH 0800347H
80B1D9 7947              MOV     R1,#LOW 0800347H
80B1DB 7E00              MOV     R6,#00H
80B1DD 7F05              MOV     R7,#05H
80B1DF A51280052D        ECALL   ?C?COPY
 1184: 		len += 5;
80B1E4 90163E            MOV     DPTR,#len
80B1E7 E4                CLR     A
80B1E8 75F005            MOV     B,#05H
80B1EB A512800600        ECALL   ?C?IILDX
 1185: 		m_SMSMessage[len++] = '\r';	
80B1F0 90163E            MOV     DPTR,#len
80B1F3 E4                CLR     A
80B1F4 75F001            MOV     B,#01H
80B1F7 A512800617        ECALL   ?C?ILDIX
80B1FC FE                MOV     R6,A
80B1FD 749E              MOV     A,#LOW m_SMSMessage
80B1FF 25F0              ADD     A,B
80B201 F582              MOV     DPL,A
80B203 7415              MOV     A,#HIGH m_SMSMessage
80B205 3E                ADDC    A,R6
80B206 F583              MOV     DPH,A
80B208 740D              MOV     A,#0DH
80B20A F0                MOVX    @DPTR,A
 1186: 		flag |= 0x01;		
80B20B 901640            MOV     DPTR,#flag
80B20E E0                MOVX    A,@DPTR
80B20F 4401              ORL     A,#01H
80B211 F0                MOVX    @DPTR,A
 1187: 	}	
80B212         ?C0275?MAINFLOW:
 1188: 
 1189: 	//HOPPER1
 1190: 	//flag的bit7表示已添加了一种HOPPER故障，扫描其它HOPPER则重置它	
 1191: 	memset( str1, 0, sizeof( str1 ) );
80B212 7E00              MOV     R6,#00H
80B214 7F06              MOV     R7,#06H
80B216 7D00              MOV     R5,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 425


80B218 7B00              MOV     R3,#?C?XDATASEG
80B21A 7A15              MOV     R2,#HIGH str1
80B21C 7998              MOV     R1,#LOW str1
80B21E A5128008A6        ECALL   ?C?MEMSET
 1192: 	flag &= 0x7f;
80B223 901640            MOV     DPTR,#flag
80B226 E0                MOVX    A,@DPTR
80B227 547F              ANL     A,#07FH
80B229 F0                MOVX    @DPTR,A
 1193: 	if( ( SystemParameter.HopperCoinPrice1 ) != 0 )
80B22A 90041F            MOV     DPTR,#SystemParameter+01H
80B22D E0                MOVX    A,@DPTR
80B22E 7002              JNZ     ?C0993?MAINFLOW
80B230 A3                INC     DPTR
80B231 E0                MOVX    A,@DPTR
80B232         ?C0993?MAINFLOW:
80B232 7003              JNZ     $ + 5H
80B234 02B2D3            LJMP    ?C0276?MAINFLOW
 1194: 	{
 1195: 		if( ( DeviceStatus.ChangeUnit1 & 0x01 ) == 0x01 )
80B237 900B18            MOV     DPTR,#DeviceStatus+02H
80B23A E0                MOVX    A,@DPTR
80B23B 30E013            JNB     ACC.0,?C0277?MAINFLOW
 1196: 		{
 1197: 			Trace( "\n ScanIsSendAlarm hopper1 error");
 1198: 			//HOPPER故障,还没有发送报警,准备发送
 1199: 			strcpy( str1,"D0110");			
80B23E 7898              MOV     R0,#LOW str1
80B240 7C15              MOV     R4,#HIGH str1
80B242 7D00              MOV     R5,#?C?XDATASEG
80B244 7B80              MOV     R3,#BYTE2 080034DH
80B246 7A03              MOV     R2,#HIGH 080034DH
80B248 794D              MOV     R1,#LOW 080034DH
80B24A A512800854        ECALL   ?C?STRCPY
 1200: 			flag |= 0x80;			
 1201: 		}
80B24F 8027              SJMP    ?C1038?MAINFLOW
80B251         ?C0277?MAINFLOW:
 1202: 		else if( ( DeviceStatus.ChangeUnit1 & 0x02 ) == 0x02 ) 
80B251 900B18            MOV     DPTR,#DeviceStatus+02H
80B254 E0                MOVX    A,@DPTR
80B255 30E127            JNB     ACC.1,?C0278?MAINFLOW
 1203: 		{
 1204: 			//缺币, 还没有发送报警,准备发送
 1205: 			if( ( flag & 0x80 ) == 0x80 )			
80B258 901640            MOV     DPTR,#flag
80B25B E0                MOVX    A,@DPTR
80B25C 7898              MOV     R0,#LOW str1
80B25E 7C15              MOV     R4,#HIGH str1
80B260 7D00              MOV     R5,#?C?XDATASEG
80B262 30E708            JNB     ACC.7,?C0280?MAINFLOW
 1206: 				//已记录了一条故障
 1207: 				strcpy( str1,"D0111");						
80B265 7B80              MOV     R3,#BYTE2 0800353H
80B267 7A03              MOV     R2,#HIGH 0800353H
80B269 7953              MOV     R1,#LOW 0800353H
80B26B 8006              SJMP    ?C1039?MAINFLOW
80B26D         ?C0280?MAINFLOW:
 1208: 			else
 1209: 				strcpy( str1,"D0101");
80B26D 7B80              MOV     R3,#BYTE2 0800359H
80B26F 7A03              MOV     R2,#HIGH 0800359H
80B271 7959              MOV     R1,#LOW 0800359H
80B273         
80B273 A512800854        ECALL   ?C?STRCPY
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 426


80B278         ?C0281?MAINFLOW:
 1210: 			flag |= 0x80;			
80B278         
80B278 901640            MOV     DPTR,#flag
80B27B E0                MOVX    A,@DPTR
80B27C 4480              ORL     A,#080H
80B27E F0                MOVX    @DPTR,A
 1211: 		}
80B27F         ?C0278?MAINFLOW:
 1212: 		if( ( flag & 0x80 ) == 0x80 )
80B27F 901640            MOV     DPTR,#flag
80B282 E0                MOVX    A,@DPTR
80B283 30E74D            JNB     ACC.7,?C0276?MAINFLOW
 1213: 		{
 1214: 			memcpy( m_SMSMessage + len, str1, 5 );
80B286 90163E            MOV     DPTR,#len
80B289 A3                INC     DPTR
80B28A E0                MOVX    A,@DPTR
80B28B 249E              ADD     A,#LOW m_SMSMessage
80B28D F9                MOV     R1,A
80B28E E4                CLR     A
80B28F 3415              ADDC    A,#HIGH m_SMSMessage
80B291 A801              MOV     R0,AR1
80B293 FC                MOV     R4,A
80B294 7D00              MOV     R5,#?C?XDATASEG
80B296 7B00              MOV     R3,#?C?XDATASEG
80B298 7A15              MOV     R2,#HIGH str1
80B29A 7998              MOV     R1,#LOW str1
80B29C 7E00              MOV     R6,#00H
80B29E 7F05              MOV     R7,#05H
80B2A0 A51280052D        ECALL   ?C?COPY
 1215: 			len += 5;	
80B2A5 90163E            MOV     DPTR,#len
80B2A8 E4                CLR     A
80B2A9 75F005            MOV     B,#05H
80B2AC A512800600        ECALL   ?C?IILDX
 1216: 			m_SMSMessage[len++] = '\r';	
80B2B1 90163E            MOV     DPTR,#len
80B2B4 E4                CLR     A
80B2B5 75F001            MOV     B,#01H
80B2B8 A512800617        ECALL   ?C?ILDIX
80B2BD FE                MOV     R6,A
80B2BE 749E              MOV     A,#LOW m_SMSMessage
80B2C0 25F0              ADD     A,B
80B2C2 F582              MOV     DPL,A
80B2C4 7415              MOV     A,#HIGH m_SMSMessage
80B2C6 3E                ADDC    A,R6
80B2C7 F583              MOV     DPH,A
80B2C9 740D              MOV     A,#0DH
80B2CB F0                MOVX    @DPTR,A
 1217: 			flag |= 0x01;
80B2CC 901640            MOV     DPTR,#flag
80B2CF E0                MOVX    A,@DPTR
80B2D0 4401              ORL     A,#01H
80B2D2 F0                MOVX    @DPTR,A
 1218: 		}
 1219: 	}
80B2D3         ?C0276?MAINFLOW:
 1220: 	
 1221: 	memset( str1, 0, sizeof( str1 ) );
80B2D3 7E00              MOV     R6,#00H
80B2D5 7F06              MOV     R7,#06H
80B2D7 7D00              MOV     R5,#00H
80B2D9 7B00              MOV     R3,#?C?XDATASEG
80B2DB 7A15              MOV     R2,#HIGH str1
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 427


80B2DD 7998              MOV     R1,#LOW str1
80B2DF A5128008A6        ECALL   ?C?MEMSET
 1222: 	flag &= 0x7f;
80B2E4 901640            MOV     DPTR,#flag
80B2E7 E0                MOVX    A,@DPTR
80B2E8 547F              ANL     A,#07FH
80B2EA F0                MOVX    @DPTR,A
 1223: 	//HOPPER2
 1224: 	if( SystemParameter.HopperCoinPrice2 != 0 )
80B2EB 900421            MOV     DPTR,#SystemParameter+03H
80B2EE E0                MOVX    A,@DPTR
80B2EF 7002              JNZ     ?C0994?MAINFLOW
80B2F1 A3                INC     DPTR
80B2F2 E0                MOVX    A,@DPTR
80B2F3         ?C0994?MAINFLOW:
80B2F3 7003              JNZ     $ + 5H
80B2F5 02B394            LJMP    ?C0283?MAINFLOW
 1225: 	{
 1226: 		if( ( DeviceStatus.ChangeUnit2 & 0x01 ) == 0x01 ) 
80B2F8 900B19            MOV     DPTR,#DeviceStatus+03H
80B2FB E0                MOVX    A,@DPTR
80B2FC 30E013            JNB     ACC.0,?C0284?MAINFLOW
 1227: 		{
 1228: 			Trace( "\n ScanIsSendAlarm hopper2 error");
 1229: 			//还没有发送报警,准备发送
 1230: 			strcpy( str1,"D0210");			
80B2FF 7898              MOV     R0,#LOW str1
80B301 7C15              MOV     R4,#HIGH str1
80B303 7D00              MOV     R5,#?C?XDATASEG
80B305 7B80              MOV     R3,#BYTE2 080035FH
80B307 7A03              MOV     R2,#HIGH 080035FH
80B309 795F              MOV     R1,#LOW 080035FH
80B30B A512800854        ECALL   ?C?STRCPY
 1231: 			flag |= 0x80;			
 1232: 		}
80B310 8027              SJMP    ?C1040?MAINFLOW
80B312         ?C0284?MAINFLOW:
 1233: 		else if( ( DeviceStatus.ChangeUnit2 & 0x02 ) == 0x02 ) 
80B312 900B19            MOV     DPTR,#DeviceStatus+03H
80B315 E0                MOVX    A,@DPTR
80B316 30E127            JNB     ACC.1,?C0285?MAINFLOW
 1234: 		{
 1235: 			//还没有发送报警,准备发送
 1236: 			if( ( flag & 0x80 ) == 0x80 )			
80B319 901640            MOV     DPTR,#flag
80B31C E0                MOVX    A,@DPTR
80B31D 7898              MOV     R0,#LOW str1
80B31F 7C15              MOV     R4,#HIGH str1
80B321 7D00              MOV     R5,#?C?XDATASEG
80B323 30E708            JNB     ACC.7,?C0287?MAINFLOW
 1237: 				//已记录了一条故障
 1238: 				strcpy( str1,"D0211");						
80B326 7B80              MOV     R3,#BYTE2 0800365H
80B328 7A03              MOV     R2,#HIGH 0800365H
80B32A 7965              MOV     R1,#LOW 0800365H
80B32C 8006              SJMP    ?C1041?MAINFLOW
80B32E         ?C0287?MAINFLOW:
 1239: 			else
 1240: 				strcpy( str1,"D0201");
80B32E 7B80              MOV     R3,#BYTE2 080036BH
80B330 7A03              MOV     R2,#HIGH 080036BH
80B332 796B              MOV     R1,#LOW 080036BH
80B334         
80B334 A512800854        ECALL   ?C?STRCPY
80B339         ?C0288?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 428


 1241: 			flag |= 0x80;			
80B339         
80B339 901640            MOV     DPTR,#flag
80B33C E0                MOVX    A,@DPTR
80B33D 4480              ORL     A,#080H
80B33F F0                MOVX    @DPTR,A
 1242: 		}
80B340         ?C0285?MAINFLOW:
 1243: 		if( ( flag & 0x80 ) == 0x80 )
80B340 901640            MOV     DPTR,#flag
80B343 E0                MOVX    A,@DPTR
80B344 30E74D            JNB     ACC.7,?C0283?MAINFLOW
 1244: 		{
 1245: 			memcpy( m_SMSMessage + len, str1, 5 );
80B347 90163E            MOV     DPTR,#len
80B34A A3                INC     DPTR
80B34B E0                MOVX    A,@DPTR
80B34C 249E              ADD     A,#LOW m_SMSMessage
80B34E F9                MOV     R1,A
80B34F E4                CLR     A
80B350 3415              ADDC    A,#HIGH m_SMSMessage
80B352 A801              MOV     R0,AR1
80B354 FC                MOV     R4,A
80B355 7D00              MOV     R5,#?C?XDATASEG
80B357 7B00              MOV     R3,#?C?XDATASEG
80B359 7A15              MOV     R2,#HIGH str1
80B35B 7998              MOV     R1,#LOW str1
80B35D 7E00              MOV     R6,#00H
80B35F 7F05              MOV     R7,#05H
80B361 A51280052D        ECALL   ?C?COPY
 1246: 			len += 5;
80B366 90163E            MOV     DPTR,#len
80B369 E4                CLR     A
80B36A 75F005            MOV     B,#05H
80B36D A512800600        ECALL   ?C?IILDX
 1247: 			m_SMSMessage[len++] = '\r';			
80B372 90163E            MOV     DPTR,#len
80B375 E4                CLR     A
80B376 75F001            MOV     B,#01H
80B379 A512800617        ECALL   ?C?ILDIX
80B37E FE                MOV     R6,A
80B37F 749E              MOV     A,#LOW m_SMSMessage
80B381 25F0              ADD     A,B
80B383 F582              MOV     DPL,A
80B385 7415              MOV     A,#HIGH m_SMSMessage
80B387 3E                ADDC    A,R6
80B388 F583              MOV     DPH,A
80B38A 740D              MOV     A,#0DH
80B38C F0                MOVX    @DPTR,A
 1248: 			flag |= 0x01;
80B38D 901640            MOV     DPTR,#flag
80B390 E0                MOVX    A,@DPTR
80B391 4401              ORL     A,#01H
80B393 F0                MOVX    @DPTR,A
 1249: 		}
 1250: 	}	
80B394         ?C0283?MAINFLOW:
 1251: 
 1252: 	memset( str1, 0, sizeof( str1 ) );
80B394 7E00              MOV     R6,#00H
80B396 7F06              MOV     R7,#06H
80B398 7D00              MOV     R5,#00H
80B39A 7B00              MOV     R3,#?C?XDATASEG
80B39C 7A15              MOV     R2,#HIGH str1
80B39E 7998              MOV     R1,#LOW str1
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 429


80B3A0 A5128008A6        ECALL   ?C?MEMSET
 1253: 	flag &= 0x7f;
80B3A5 901640            MOV     DPTR,#flag
80B3A8 E0                MOVX    A,@DPTR
80B3A9 547F              ANL     A,#07FH
80B3AB F0                MOVX    @DPTR,A
 1254: 	//HOPPER3
 1255: 	if( SystemParameter.HopperCoinPrice3 != 0 )
80B3AC 900423            MOV     DPTR,#SystemParameter+05H
80B3AF E0                MOVX    A,@DPTR
80B3B0 7002              JNZ     ?C0995?MAINFLOW
80B3B2 A3                INC     DPTR
80B3B3 E0                MOVX    A,@DPTR
80B3B4         ?C0995?MAINFLOW:
80B3B4 7003              JNZ     $ + 5H
80B3B6 02B455            LJMP    ?C0290?MAINFLOW
 1256: 	{		
 1257: 		if( ( DeviceStatus.ChangeUnit3 & 0x01 ) == 0x01 )
80B3B9 900B1A            MOV     DPTR,#DeviceStatus+04H
80B3BC E0                MOVX    A,@DPTR
80B3BD 30E013            JNB     ACC.0,?C0291?MAINFLOW
 1258: 		{
 1259: 			Trace( "\n ScanIsSendAlarm hopper3 error");
 1260: 			//还没有发送报警,准备发送
 1261: 			strcpy( str1,"D0310");			
80B3C0 7898              MOV     R0,#LOW str1
80B3C2 7C15              MOV     R4,#HIGH str1
80B3C4 7D00              MOV     R5,#?C?XDATASEG
80B3C6 7B80              MOV     R3,#BYTE2 0800371H
80B3C8 7A03              MOV     R2,#HIGH 0800371H
80B3CA 7971              MOV     R1,#LOW 0800371H
80B3CC A512800854        ECALL   ?C?STRCPY
 1262: 			flag |= 0x80;			
 1263: 		}
80B3D1 8027              SJMP    ?C1042?MAINFLOW
80B3D3         ?C0291?MAINFLOW:
 1264: 		else if( ( DeviceStatus.ChangeUnit3 & 0x02 ) == 0x02 ) 
80B3D3 900B1A            MOV     DPTR,#DeviceStatus+04H
80B3D6 E0                MOVX    A,@DPTR
80B3D7 30E127            JNB     ACC.1,?C0292?MAINFLOW
 1265: 		{
 1266: 			//还没有发送报警,准备发送
 1267: 			if( ( flag & 0x80 ) == 0x80 )			
80B3DA 901640            MOV     DPTR,#flag
80B3DD E0                MOVX    A,@DPTR
80B3DE 7898              MOV     R0,#LOW str1
80B3E0 7C15              MOV     R4,#HIGH str1
80B3E2 7D00              MOV     R5,#?C?XDATASEG
80B3E4 30E708            JNB     ACC.7,?C0294?MAINFLOW
 1268: 				//已记录了一条故障
 1269: 				strcpy( str1,"D0311");						
80B3E7 7B80              MOV     R3,#BYTE2 0800377H
80B3E9 7A03              MOV     R2,#HIGH 0800377H
80B3EB 7977              MOV     R1,#LOW 0800377H
80B3ED 8006              SJMP    ?C1043?MAINFLOW
80B3EF         ?C0294?MAINFLOW:
 1270: 			else
 1271: 				strcpy( str1,"D0301");
80B3EF 7B80              MOV     R3,#BYTE2 080037DH
80B3F1 7A03              MOV     R2,#HIGH 080037DH
80B3F3 797D              MOV     R1,#LOW 080037DH
80B3F5         
80B3F5 A512800854        ECALL   ?C?STRCPY
80B3FA         ?C0295?MAINFLOW:
 1272: 			flag |= 0x80;			
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 430


80B3FA         
80B3FA 901640            MOV     DPTR,#flag
80B3FD E0                MOVX    A,@DPTR
80B3FE 4480              ORL     A,#080H
80B400 F0                MOVX    @DPTR,A
 1273: 		}
80B401         ?C0292?MAINFLOW:
 1274: 		if( ( flag & 0x80 ) == 0x80 )
80B401 901640            MOV     DPTR,#flag
80B404 E0                MOVX    A,@DPTR
80B405 30E74D            JNB     ACC.7,?C0290?MAINFLOW
 1275: 		{
 1276: 			memcpy( m_SMSMessage + len, str1, 5 );
80B408 90163E            MOV     DPTR,#len
80B40B A3                INC     DPTR
80B40C E0                MOVX    A,@DPTR
80B40D 249E              ADD     A,#LOW m_SMSMessage
80B40F F9                MOV     R1,A
80B410 E4                CLR     A
80B411 3415              ADDC    A,#HIGH m_SMSMessage
80B413 A801              MOV     R0,AR1
80B415 FC                MOV     R4,A
80B416 7D00              MOV     R5,#?C?XDATASEG
80B418 7B00              MOV     R3,#?C?XDATASEG
80B41A 7A15              MOV     R2,#HIGH str1
80B41C 7998              MOV     R1,#LOW str1
80B41E 7E00              MOV     R6,#00H
80B420 7F05              MOV     R7,#05H
80B422 A51280052D        ECALL   ?C?COPY
 1277: 			len += 5;
80B427 90163E            MOV     DPTR,#len
80B42A E4                CLR     A
80B42B 75F005            MOV     B,#05H
80B42E A512800600        ECALL   ?C?IILDX
 1278: 			m_SMSMessage[len++] = '\r';	
80B433 90163E            MOV     DPTR,#len
80B436 E4                CLR     A
80B437 75F001            MOV     B,#01H
80B43A A512800617        ECALL   ?C?ILDIX
80B43F FE                MOV     R6,A
80B440 749E              MOV     A,#LOW m_SMSMessage
80B442 25F0              ADD     A,B
80B444 F582              MOV     DPL,A
80B446 7415              MOV     A,#HIGH m_SMSMessage
80B448 3E                ADDC    A,R6
80B449 F583              MOV     DPH,A
80B44B 740D              MOV     A,#0DH
80B44D F0                MOVX    @DPTR,A
 1279: 			flag |= 0x01;
80B44E 901640            MOV     DPTR,#flag
80B451 E0                MOVX    A,@DPTR
80B452 4401              ORL     A,#01H
80B454 F0                MOVX    @DPTR,A
 1280: 		}
 1281: 	}	
80B455         ?C0290?MAINFLOW:
 1282: 	
 1283: 	memset( str1, 0, sizeof( str1 ) );
80B455 7E00              MOV     R6,#00H
80B457 7F06              MOV     R7,#06H
80B459 7D00              MOV     R5,#00H
80B45B 7B00              MOV     R3,#?C?XDATASEG
80B45D 7A15              MOV     R2,#HIGH str1
80B45F 7998              MOV     R1,#LOW str1
80B461 A5128008A6        ECALL   ?C?MEMSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 431


 1284: 	flag &= 0x7f;
80B466 901640            MOV     DPTR,#flag
80B469 E0                MOVX    A,@DPTR
80B46A 547F              ANL     A,#07FH
80B46C F0                MOVX    @DPTR,A
 1285: 	////货道扫描	
 1286: 	if( ( HardWareErr & 0x0010 ) == 0x0010 ) 
80B46D 900480            MOV     DPTR,#HardWareErr+01H
80B470 E0                MOVX    A,@DPTR
80B471 30E44D            JNB     ACC.4,?C0297?MAINFLOW
 1287: 	{
 1288: 		Trace( "\n ScanIsSendAlarm colunm out all error");
 1289: 		//都无货
 1290: 		memcpy( m_SMSMessage+len, "C0001", 5 );
80B474 90163E            MOV     DPTR,#len
80B477 A3                INC     DPTR
80B478 E0                MOVX    A,@DPTR
80B479 249E              ADD     A,#LOW m_SMSMessage
80B47B F9                MOV     R1,A
80B47C E4                CLR     A
80B47D 3415              ADDC    A,#HIGH m_SMSMessage
80B47F A801              MOV     R0,AR1
80B481 FC                MOV     R4,A
80B482 7D00              MOV     R5,#?C?XDATASEG
80B484 7B80              MOV     R3,#BYTE2 0800383H
80B486 7A03              MOV     R2,#HIGH 0800383H
80B488 7983              MOV     R1,#LOW 0800383H
80B48A 7E00              MOV     R6,#00H
80B48C 7F05              MOV     R7,#05H
80B48E A51280052D        ECALL   ?C?COPY
 1291: 		len  += 5;
80B493 90163E            MOV     DPTR,#len
80B496 E4                CLR     A
80B497 75F005            MOV     B,#05H
80B49A A512800600        ECALL   ?C?IILDX
 1292: 		m_SMSMessage[len++] = '\r';	
80B49F 90163E            MOV     DPTR,#len
80B4A2 E4                CLR     A
80B4A3 75F001            MOV     B,#01H
80B4A6 A512800617        ECALL   ?C?ILDIX
80B4AB FE                MOV     R6,A
80B4AC 749E              MOV     A,#LOW m_SMSMessage
80B4AE 25F0              ADD     A,B
80B4B0 F582              MOV     DPL,A
80B4B2 7415              MOV     A,#HIGH m_SMSMessage
80B4B4 3E                ADDC    A,R6
80B4B5 F583              MOV     DPH,A
80B4B7 740D              MOV     A,#0DH
80B4B9 F0                MOVX    @DPTR,A
 1293: 		flag |= 0x01;		
80B4BA 901640            MOV     DPTR,#flag
80B4BD E0                MOVX    A,@DPTR
80B4BE 4401              ORL     A,#01H
80B4C0 F0                MOVX    @DPTR,A
 1294: 	}
80B4C1         ?C0297?MAINFLOW:
 1295: 	
 1296: 	if( ( HardWareErr & 0x0020 ) == 0x0020 ) 
80B4C1 900480            MOV     DPTR,#HardWareErr+01H
80B4C4 E0                MOVX    A,@DPTR
80B4C5 30E54D            JNB     ACC.5,?C0298?MAINFLOW
 1297: 	{
 1298: 		Trace( "\n ScanIsSendAlarm colunm all error");
 1299: 		//都故障
 1300: 		memcpy( m_SMSMessage+len, "C0010", 5 );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 432


80B4C8 90163E            MOV     DPTR,#len
80B4CB A3                INC     DPTR
80B4CC E0                MOVX    A,@DPTR
80B4CD 249E              ADD     A,#LOW m_SMSMessage
80B4CF F9                MOV     R1,A
80B4D0 E4                CLR     A
80B4D1 3415              ADDC    A,#HIGH m_SMSMessage
80B4D3 A801              MOV     R0,AR1
80B4D5 FC                MOV     R4,A
80B4D6 7D00              MOV     R5,#?C?XDATASEG
80B4D8 7B80              MOV     R3,#BYTE2 0800389H
80B4DA 7A03              MOV     R2,#HIGH 0800389H
80B4DC 7989              MOV     R1,#LOW 0800389H
80B4DE 7E00              MOV     R6,#00H
80B4E0 7F05              MOV     R7,#05H
80B4E2 A51280052D        ECALL   ?C?COPY
 1301: 		len  += 5;
80B4E7 90163E            MOV     DPTR,#len
80B4EA E4                CLR     A
80B4EB 75F005            MOV     B,#05H
80B4EE A512800600        ECALL   ?C?IILDX
 1302: 		m_SMSMessage[len++] = '\r';	
80B4F3 90163E            MOV     DPTR,#len
80B4F6 E4                CLR     A
80B4F7 75F001            MOV     B,#01H
80B4FA A512800617        ECALL   ?C?ILDIX
80B4FF FE                MOV     R6,A
80B500 749E              MOV     A,#LOW m_SMSMessage
80B502 25F0              ADD     A,B
80B504 F582              MOV     DPL,A
80B506 7415              MOV     A,#HIGH m_SMSMessage
80B508 3E                ADDC    A,R6
80B509 F583              MOV     DPH,A
80B50B 740D              MOV     A,#0DH
80B50D F0                MOVX    @DPTR,A
 1303: 		flag |= 0x01;		
80B50E 901640            MOV     DPTR,#flag
80B511 E0                MOVX    A,@DPTR
80B512 4401              ORL     A,#01H
80B514 F0                MOVX    @DPTR,A
 1304: 	}
80B515         ?C0298?MAINFLOW:
 1305: 	
 1306: 	for( i = 0; i < GOODSWAYNUM; i ++ )
80B515 E4                CLR     A
80B516 901641            MOV     DPTR,#i
80B519 F0                MOVX    @DPTR,A
80B51A         ?C0299?MAINFLOW:
80B51A 901641            MOV     DPTR,#i
80B51D E0                MOVX    A,@DPTR
80B51E FF                MOV     R7,A
80B51F C3                CLR     C
80B520 9440              SUBB    A,#040H
80B522 4003              JC      $ + 5H
80B524 02B6C1            LJMP    ?C0300?MAINFLOW
 1307: 	{
 1308: 		if( GoodsWaySetVal[i].WayNo == 0 )
80B527 75F005            MOV     B,#05H
80B52A EF                MOV     A,R7
80B52B 900002            MOV     DPTR,#GoodsWaySetVal
80B52E A51280079F        ECALL   ?C?OFFXADD
80B533 E0                MOVX    A,@DPTR
80B534 7003              JNZ     $ + 5H
80B536 02B6B8            LJMP    ?C0301?MAINFLOW
 1309: 			continue;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 433


80B539         ?C0302?MAINFLOW:
 1310: 		if( ( GoodsWaySetVal[i].WayState & 0x01 ) != 0x01 )
80B539 901641            MOV     DPTR,#i
80B53C E0                MOVX    A,@DPTR
80B53D 75F005            MOV     B,#05H
80B540 900003            MOV     DPTR,#GoodsWaySetVal+01H
80B543 A51280079F        ECALL   ?C?OFFXADD
80B548 E0                MOVX    A,@DPTR
80B549 FF                MOV     R7,A
80B54A 20E003            JB      ACC.0,$ + 6H
80B54D 02B6B8            LJMP    ?C0301?MAINFLOW
 1311: 	    	continue;
80B550         ?C0303?MAINFLOW:
 1312: //		Trace( "\n GoodsWaySetVal[%bu].WayState = %bu", i, GoodsWaySetVal[i].WayState );
 1313: 		 //货道正常了
 1314: 		if( ( GoodsWaySetVal[i].WayState & 0x0A ) == 0x00 )
80B550 EF                MOV     A,R7
80B551 540A              ANL     A,#0AH
80B553 7013              JNZ     ?C0304?MAINFLOW
 1315: 		 	 GoodsWaySetVal[i].WayState &= 0xbf;//重置bit6
80B555 901641            MOV     DPTR,#i
80B558 E0                MOVX    A,@DPTR
80B559 75F005            MOV     B,#05H
80B55C 900003            MOV     DPTR,#GoodsWaySetVal+01H
80B55F A51280079F        ECALL   ?C?OFFXADD
80B564 E0                MOVX    A,@DPTR
80B565 54BF              ANL     A,#0BFH
80B567 F0                MOVX    @DPTR,A
80B568         ?C0304?MAINFLOW:
 1316: 		//货道有货了
 1317: 		if( GoodsWaySetVal[i].GoodsCurrentSum != 0 )
80B568 901641            MOV     DPTR,#i
80B56B E0                MOVX    A,@DPTR
80B56C FF                MOV     R7,A
80B56D 75F005            MOV     B,#05H
80B570 900006            MOV     DPTR,#GoodsWaySetVal+04H
80B573 A51280079F        ECALL   ?C?OFFXADD
80B578 E0                MOVX    A,@DPTR
80B579 6010              JZ      ?C0305?MAINFLOW
 1318: 		 	GoodsWaySetVal[i].WayState &= 0xdf;	//重置bit5
80B57B 75F005            MOV     B,#05H
80B57E EF                MOV     A,R7
80B57F 900003            MOV     DPTR,#GoodsWaySetVal+01H
80B582 A51280079F        ECALL   ?C?OFFXADD
80B587 E0                MOVX    A,@DPTR
80B588 54DF              ANL     A,#0DFH
80B58A F0                MOVX    @DPTR,A
80B58B         ?C0305?MAINFLOW:
 1319: 		 	flag &= 0x01;
80B58B 901640            MOV     DPTR,#flag
80B58E E0                MOVX    A,@DPTR
80B58F 5401              ANL     A,#01H
80B591 F0                MOVX    @DPTR,A
 1320: 		if(  ( GoodsWaySetVal[i].WayState & 0x02 ) == 0x02 )			
80B592 A3                INC     DPTR
80B593 E0                MOVX    A,@DPTR
80B594 FD                MOV     R5,A
80B595 75F005            MOV     B,#05H
80B598 900003            MOV     DPTR,#GoodsWaySetVal+01H
80B59B A51280079F        ECALL   ?C?OFFXADD
80B5A0 E0                MOVX    A,@DPTR
80B5A1 30E107            JNB     ACC.1,?C0306?MAINFLOW
 1321: 			//货道故障				
 1322: 			flag |= 0x20;//bit5			
80B5A4 901640            MOV     DPTR,#flag
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 434


80B5A7 E0                MOVX    A,@DPTR
80B5A8 4420              ORL     A,#020H
80B5AA F0                MOVX    @DPTR,A
80B5AB         ?C0306?MAINFLOW:
 1323: 		if( GoodsWaySetVal[i].GoodsCurrentSum == 0 )
80B5AB 75F005            MOV     B,#05H
80B5AE ED                MOV     A,R5
80B5AF 900006            MOV     DPTR,#GoodsWaySetVal+04H
80B5B2 A51280079F        ECALL   ?C?OFFXADD
80B5B7 E0                MOVX    A,@DPTR
80B5B8 7007              JNZ     ?C0307?MAINFLOW
 1324: 			flag |= 0x10;//bit4			
80B5BA 901640            MOV     DPTR,#flag
80B5BD E0                MOVX    A,@DPTR
80B5BE 4410              ORL     A,#010H
80B5C0 F0                MOVX    @DPTR,A
80B5C1         ?C0307?MAINFLOW:
 1325: 		if( ( flag & 0x30 ) != 0 )
80B5C1 901640            MOV     DPTR,#flag
80B5C4 E0                MOVX    A,@DPTR
80B5C5 5430              ANL     A,#030H
80B5C7 7003              JNZ     $ + 5H
80B5C9 02B6B8            LJMP    ?C0301?MAINFLOW
 1326: 		{
 1327: //			Trace( "\n GoodsWaySetVal[%bu].WayNo = %bu error", i, GoodsWaySetVal[i].WayNo );
 1328: 			memset( str1, 0, sizeof( str1 ) );
80B5CC 7E00              MOV     R6,#00H
80B5CE 7F06              MOV     R7,#06H
80B5D0 7D00              MOV     R5,#00H
80B5D2 7B00              MOV     R3,#?C?XDATASEG
80B5D4 7A15              MOV     R2,#HIGH str1
80B5D6 7998              MOV     R1,#LOW str1
80B5D8 A5128008A6        ECALL   ?C?MEMSET
 1329: 			sprintf( str1, "C%02bu00", GoodsWaySetVal[i].WayNo );			
80B5DD 7B80              MOV     R3,#BYTE2 080038FH
80B5DF 7A03              MOV     R2,#HIGH 080038FH
80B5E1 798F              MOV     R1,#LOW 080038FH
80B5E3 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80B5E6 A5128007B6        ECALL   ?C?PSTXDATA
80B5EB 901641            MOV     DPTR,#i
80B5EE E0                MOVX    A,@DPTR
80B5EF 75F005            MOV     B,#05H
80B5F2 900002            MOV     DPTR,#GoodsWaySetVal
80B5F5 A51280079F        ECALL   ?C?OFFXADD
80B5FA E0                MOVX    A,@DPTR
80B5FB 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80B5FE F0                MOVX    @DPTR,A
80B5FF 7B00              MOV     R3,#?C?XDATASEG
80B601 7A15              MOV     R2,#HIGH str1
80B603 7998              MOV     R1,#LOW str1
80B605 A512800949        ECALL   _sprintf
 1330: 			if( ( flag & 0x20 ) == 0x20 )
80B60A 901640            MOV     DPTR,#flag
80B60D E0                MOVX    A,@DPTR
80B60E FF                MOV     R7,A
80B60F 30E506            JNB     ACC.5,?C0309?MAINFLOW
 1331: 			{
 1332: 				//故障
 1333: 				str1[3] = '1';				
80B612 90159B            MOV     DPTR,#str1+03H
80B615 7431              MOV     A,#031H
80B617 F0                MOVX    @DPTR,A
 1334: 			}				
80B618         ?C0309?MAINFLOW:
 1335: 			if( ( flag & 0x10 ) == 0x10 ) 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 435


80B618 EF                MOV     A,R7
80B619 30E406            JNB     ACC.4,?C0310?MAINFLOW
 1336: 			{
 1337: 				//缺货
 1338: 				str1[4] = '1';				
80B61C 90159C            MOV     DPTR,#str1+04H
80B61F 7431              MOV     A,#031H
80B621 F0                MOVX    @DPTR,A
 1339: 			}		
80B622         ?C0310?MAINFLOW:
 1340: 			memcpy( m_SMSMessage + len, str1, 5 );
80B622 90163E            MOV     DPTR,#len
80B625 A3                INC     DPTR
80B626 E0                MOVX    A,@DPTR
80B627 249E              ADD     A,#LOW m_SMSMessage
80B629 F9                MOV     R1,A
80B62A E4                CLR     A
80B62B 3415              ADDC    A,#HIGH m_SMSMessage
80B62D A801              MOV     R0,AR1
80B62F FC                MOV     R4,A
80B630 7D00              MOV     R5,#?C?XDATASEG
80B632 7B00              MOV     R3,#?C?XDATASEG
80B634 7A15              MOV     R2,#HIGH str1
80B636 7998              MOV     R1,#LOW str1
80B638 7E00              MOV     R6,#00H
80B63A 7F05              MOV     R7,#05H
80B63C A51280052D        ECALL   ?C?COPY
 1341: 			len += 5;
80B641 90163E            MOV     DPTR,#len
80B644 E4                CLR     A
80B645 75F005            MOV     B,#05H
80B648 A512800600        ECALL   ?C?IILDX
 1342: 			m_SMSMessage[len++] = '\r';
80B64D 90163E            MOV     DPTR,#len
80B650 E4                CLR     A
80B651 75F001            MOV     B,#01H
80B654 A512800617        ECALL   ?C?ILDIX
80B659 FE                MOV     R6,A
80B65A 749E              MOV     A,#LOW m_SMSMessage
80B65C 25F0              ADD     A,B
80B65E F582              MOV     DPL,A
80B660 7415              MOV     A,#HIGH m_SMSMessage
80B662 3E                ADDC    A,R6
80B663 F583              MOV     DPH,A
80B665 740D              MOV     A,#0DH
80B667 F0                MOVX    @DPTR,A
 1343: 			flag |= 0x01;
80B668 901640            MOV     DPTR,#flag
80B66B E0                MOVX    A,@DPTR
80B66C 4401              ORL     A,#01H
80B66E F0                MOVX    @DPTR,A
 1344: 			if( ( len + 5 ) >= MAX_SMS_LEN )
80B66F 90163F            MOV     DPTR,#len+01H
80B672 E0                MOVX    A,@DPTR
80B673 2405              ADD     A,#05H
80B675 FF                MOV     R7,A
80B676 90163E            MOV     DPTR,#len
80B679 E0                MOVX    A,@DPTR
80B67A 3400              ADDC    A,#00H
80B67C FE                MOV     R6,A
80B67D C3                CLR     C
80B67E EF                MOV     A,R7
80B67F 94A0              SUBB    A,#0A0H
80B681 EE                MOV     A,R6
80B682 9400              SUBB    A,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 436


80B684 4032              JC      ?C0301?MAINFLOW
 1345: 			{				
 1346: 				if( ( SMSQuery & 0x80 ) == 0x80 )
80B686 900143            MOV     DPTR,#SMSQuery
80B689 E0                MOVX    A,@DPTR
80B68A 30E71C            JNB     ACC.7,?C0312?MAINFLOW
 1347: 				{
 1348: 					Trace("\n ScanDeviceStatus 2");
 1349: 					memset( m_SMSMessage + 11, 0, sizeof( m_SMSMessage)-11 );
80B68D 7E00              MOV     R6,#00H
80B68F 7F95              MOV     R7,#095H
80B691 7D00              MOV     R5,#00H
80B693 7B00              MOV     R3,#?C?XDATASEG
80B695 7A15              MOV     R2,#HIGH m_SMSMessage+0BH
80B697 79A9              MOV     R1,#LOW m_SMSMessage+0BH
80B699 A5128008A6        ECALL   ?C?MEMSET
 1350: 					len = 11;	
80B69E 90163E            MOV     DPTR,#len
80B6A1 E4                CLR     A
80B6A2 F0                MOVX    @DPTR,A
80B6A3 A3                INC     DPTR
80B6A4 740B              MOV     A,#0BH
80B6A6 F0                MOVX    @DPTR,A
 1351: 					continue;
80B6A7 800F              SJMP    ?C0301?MAINFLOW
 1352: 				}
80B6A9         ?C0312?MAINFLOW:
 1353: 				else
 1354: 				{
 1355: 					Trace("\n ScanDeviceStatus 1");
 1356: 					SMSQuery |= 0x80;
80B6A9 900143            MOV     DPTR,#SMSQuery
80B6AC E0                MOVX    A,@DPTR
80B6AD 4480              ORL     A,#080H
80B6AF F0                MOVX    @DPTR,A
 1357: 					IsMorePage = 1;
80B6B0 901643            MOV     DPTR,#IsMorePage
80B6B3 7401              MOV     A,#01H
80B6B5 F0                MOVX    @DPTR,A
 1358: 					break;
80B6B6 8009              SJMP    ?C0300?MAINFLOW
 1359: 				}
 1360: 			}
 1361: 		}				
 1362: 	}
80B6B8         ?C0301?MAINFLOW:
80B6B8 901641            MOV     DPTR,#i
80B6BB E0                MOVX    A,@DPTR
80B6BC 04                INC     A
80B6BD F0                MOVX    @DPTR,A
80B6BE 02B51A            LJMP    ?C0299?MAINFLOW
80B6C1         ?C0300?MAINFLOW:
 1363: 	//有状态信息要发送		
 1364: 	Trace( "\n ScanDeviceStatus m_SMSMessage[%u] = %s", len, m_SMSMessage );	
 1365: 	m_SMSMessage[len--] = 0;	
80B6C1 A51280A8F6        ECALL   ?L?COM0017
 1366: 	SendSMS( m_SMSMessage, len );
 1367: 	if( IsMorePage != 1 )
80B6C6 901643            MOV     DPTR,#IsMorePage
80B6C9 E0                MOVX    A,@DPTR
80B6CA 6401              XRL     A,#01H
80B6CC 6007              JZ      ?C0314?MAINFLOW
 1368: 		SMSQuery = ( SMSQuery & 0x7F );
80B6CE 900143            MOV     DPTR,#SMSQuery
80B6D1 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 437


80B6D2 547F              ANL     A,#07FH
80B6D4 F0                MOVX    @DPTR,A
80B6D5         ?C0314?MAINFLOW:
 1369: 	return 0;
80B6D5 7F00              MOV     R7,#00H
 1370: }
80B6D7         ?C0262?MAINFLOW:
80B6D7 A522              ERET    
----- FUNCTION ScanDeviceStatus (END) -------


----- FUNCTION DeviceDefaultSetting (BEGIN) -----
 FILE: 'mainflow.c'
 1454: u_char DeviceDefaultSetting()
 1455: {	
 1456: 	u_char xdata i = 0;
 1457: 
80B6D9 E4                CLR     A
80B6DA 901595            MOV     DPTR,#i
80B6DD F0                MOVX    @DPTR,A
 1458: 	WaitForWork( 100, NULL );
80B6DE 7F64              MOV     R7,#064H
80B6E0 FE                MOV     R6,A
80B6E1 A512807B35        ECALL   ?L?COM000D
 1459: 	memset( &DeviceStatus, 0, sizeof( struct DEVICESTATUS ) );		
80B6E6 7E00              MOV     R6,#00H
80B6E8 7F09              MOV     R7,#09H
80B6EA 7D00              MOV     R5,#00H
80B6EC 7B00              MOV     R3,#?C?XDATASEG
80B6EE 7A0B              MOV     R2,#HIGH DeviceStatus
80B6F0 7916              MOV     R1,#LOW DeviceStatus
80B6F2 A5128008A6        ECALL   ?C?MEMSET
 1460: 	return 0;
80B6F7 7F00              MOV     R7,#00H
 1461: }
80B6F9         ?C0322?MAINFLOW:
80B6F9 A522              ERET    
----- FUNCTION DeviceDefaultSetting (END) -------


----- FUNCTION DisplayOutServer (BEGIN) -----
 FILE: 'mainflow.c'
 1464: u_char DisplayOutServer()
 1465: {	
 1466: 	SetOffFlag();
 1467: //	DispWelOrOutServ();	
80B6FB A5128097FC        ECALL   SetOffFlag
 1468: 	KeyLock(); //锁定键盘，不让客户按键
80B700 A5128087F1        ECALL   KeyLock
 1469: 	KeyLockFlag = 1;
80B705 D229              SETB    KeyLockFlag
 1470: 	return 0;
80B707 7F00              MOV     R7,#00H
 1471: }
80B709         ?C0323?MAINFLOW:
80B709 A522              ERET    
----- FUNCTION DisplayOutServer (END) -------


----- FUNCTION SysInitParam (BEGIN) -----
 FILE: 'mainflow.c'
 1474: u_char SysInitParam()
 1475: {	
 1476: 	u_char xdata i = 0;
 1477: 	u_char xdata j = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 438


80B70B E4                CLR     A
80B70C 901595            MOV     DPTR,#i
80B70F F0                MOVX    @DPTR,A
 1478: 	u_char xdata x = 0 ;
80B710 A3                INC     DPTR
80B711 F0                MOVX    @DPTR,A
 1479: 	u_char xdata y = 0;
80B712 A3                INC     DPTR
80B713 F0                MOVX    @DPTR,A
 1480: 	u_char xdata z = 0;
80B714 A3                INC     DPTR
80B715 F0                MOVX    @DPTR,A
 1481: 	u_char xdata iRack = 0;
80B716 A3                INC     DPTR
80B717 F0                MOVX    @DPTR,A
 1482: 	
80B718 A3                INC     DPTR
80B719 F0                MOVX    @DPTR,A
 1483: //	Trace( "\n SysInitParam" );
 1484: 	for( i = 0; i < 50; i++ )
80B71A 901595            MOV     DPTR,#i
80B71D F0                MOVX    @DPTR,A
80B71E         ?C0324?MAINFLOW:
 1485: 		CoreProcessCycle();
80B71E A512807ADC        ECALL   CoreProcessCycle
80B723 901595            MOV     DPTR,#i
80B726 E0                MOVX    A,@DPTR
80B727 04                INC     A
80B728 F0                MOVX    @DPTR,A
80B729 E0                MOVX    A,@DPTR
80B72A C3                CLR     C
80B72B 9432              SUBB    A,#032H
80B72D 40EF              JC      ?C0324?MAINFLOW
80B72F         ?C0325?MAINFLOW:
 1486: 
 1487: 	IsCanInCashFlag = 1;
80B72F D226              SETB    IsCanInCashFlag
 1488: 	// 如果不是新机器,这里要从flash里把东西读出来,变量初始化 
 1489: 	memset( HopperSetList, 0, sizeof( HopperSetList ) );	
80B731 7E00              MOV     R6,#00H
80B733 7F0C              MOV     R7,#0CH
80B735 7D00              MOV     R5,#00H
80B737 7B00              MOV     R3,#?C?XDATASEG
80B739 7A0A              MOV     R2,#HIGH HopperSetList
80B73B 79DF              MOV     R1,#LOW HopperSetList
80B73D A5128008A6        ECALL   ?C?MEMSET
 1490: 	LoadGlobalParam(); // 获取全程变量参数
80B742 A51280C22C        ECALL   LoadGlobalParam
 1491: 
 1492: 	//检验系统参数的校验位
 1493: 	i = 0;
80B747 E4                CLR     A
80B748 901595            MOV     DPTR,#i
80B74B F0                MOVX    @DPTR,A
 1494: 	i = sizeof( struct SYSTEMPARAMETER ) - 1;
80B74C 744A              MOV     A,#04AH
80B74E F0                MOVX    @DPTR,A
 1495: 	x = 0;
80B74F E4                CLR     A
80B750 901597            MOV     DPTR,#x
80B753 F0                MOVX    @DPTR,A
 1496: 	for( j = 0; j < i; j++ )	
80B754 901596            MOV     DPTR,#j
80B757 F0                MOVX    @DPTR,A
80B758         ?C0327?MAINFLOW:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 439


80B758 901595            MOV     DPTR,#i
80B75B E0                MOVX    A,@DPTR
80B75C FF                MOV     R7,A
80B75D A3                INC     DPTR
80B75E E0                MOVX    A,@DPTR
80B75F FE                MOV     R6,A
80B760 C3                CLR     C
80B761 9F                SUBB    A,R7
80B762 501D              JNC     ?C0328?MAINFLOW
 1497: 		x ^= (( u_char* )&SystemParameter)[j];		
80B764 A3                INC     DPTR
80B765 E0                MOVX    A,@DPTR
80B766 FF                MOV     R7,A
80B767 EE                MOV     A,R6
80B768 7C00              MOV     R4,#00H
80B76A 7B00              MOV     R3,#?C?XDATASEG
80B76C 241E              ADD     A,#LOW SystemParameter
80B76E F9                MOV     R1,A
80B76F EC                MOV     A,R4
80B770 3404              ADDC    A,#HIGH SystemParameter
80B772 FA                MOV     R2,A
80B773 A548              EMOV    A,@PR0
80B775 FE                MOV     R6,A
80B776 EF                MOV     A,R7
80B777 6E                XRL     A,R6
80B778 F0                MOVX    @DPTR,A
80B779 901596            MOV     DPTR,#j
80B77C E0                MOVX    A,@DPTR
80B77D 04                INC     A
80B77E F0                MOVX    @DPTR,A
80B77F 80D7              SJMP    ?C0327?MAINFLOW
80B781         ?C0328?MAINFLOW:
 1498: 	if( x != SystemParameter.Checkbyte )
80B781 900468            MOV     DPTR,#SystemParameter+04AH
80B784 E0                MOVX    A,@DPTR
80B785 FF                MOV     R7,A
80B786 901597            MOV     DPTR,#x
80B789 E0                MOVX    A,@DPTR
80B78A 6F                XRL     A,R7
80B78B 600A              JZ      ?C0330?MAINFLOW
 1499: 	{
 1500: 		//参数校验错
 1501: 		Trace( "\n SysParam check error" );
 1502: 		HardWareErr |= 0x0100;//ERR_SYSTEM_CHECK;//ERR_SYSPARAMETER_ERR;	
80B78D 90047F            MOV     DPTR,#HardWareErr
80B790 E0                MOVX    A,@DPTR
80B791 4401              ORL     A,#01H
80B793 F0                MOVX    @DPTR,A
80B794 A3                INC     DPTR
80B795 E0                MOVX    A,@DPTR
80B796 F0                MOVX    @DPTR,A
 1503: 	}	
80B797         ?C0330?MAINFLOW:
 1504: 
 1505: 	GetHopperList();
80B797 A512809B04        ECALL   GetHopperList
 1506: 
 1507: 	CheckHardWare( 0 );
80B79C A512809AFD        ECALL   ?L?COM0037
 1508: 
 1509: 	GetHopperList();//获取Hopper的排序列表.
 1510: 	if( ( ( DeviceStatus.BillAccepter != 0 ) || ( IsCanInCashFlag == 0 ) ) && ( DeviceStatus.CoinAccepter != 0 ) )
80B7A1 900B16            MOV     DPTR,#DeviceStatus
80B7A4 E0                MOVX    A,@DPTR
80B7A5 7003              JNZ     ?C0332?MAINFLOW
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 440


80B7A7 20260D            JB      IsCanInCashFlag,?C0331?MAINFLOW
80B7AA         ?C0332?MAINFLOW:
80B7AA 900B17            MOV     DPTR,#DeviceStatus+01H
80B7AD E0                MOVX    A,@DPTR
80B7AE 6007              JZ      ?C0331?MAINFLOW
 1511: 		HardWareErr |= 0x0002;
80B7B0 900480            MOV     DPTR,#HardWareErr+01H
80B7B3 E0                MOVX    A,@DPTR
80B7B4 4402              ORL     A,#02H
80B7B6 F0                MOVX    @DPTR,A
80B7B7         ?C0331?MAINFLOW:
 1512: 
 1513: 	//根据层架设置来配置货道设置
 1514: 	memset( InputGoodsWayList, 0, sizeof( InputGoodsWayList )*GOODSWAYNUM );
80B7B7 7E40              MOV     R6,#040H
80B7B9 7F00              MOV     R7,#00H
80B7BB 7D00              MOV     R5,#00H
80B7BD 7B00              MOV     R3,#?C?XDATASEG
80B7BF 7A2B              MOV     R2,#HIGH InputGoodsWayList
80B7C1 79D3              MOV     R1,#LOW InputGoodsWayList
80B7C3 A5128008A6        ECALL   ?C?MEMSET
 1515: 	z = 0;
80B7C8 E4                CLR     A
80B7C9 901599            MOV     DPTR,#z
80B7CC F0                MOVX    @DPTR,A
 1516: 
 1517: 	///根据flash值确定物理货道与逻辑货道的关系
 1518: 	for( i = 0; i < RACKNUM; i++ )//货架层数
80B7CD 901595            MOV     DPTR,#i
80B7D0 F0                MOVX    @DPTR,A
80B7D1         ?C0333?MAINFLOW:
 1519: 		iRackSet[ i ].RackNo = i + 1;
80B7D1 901595            MOV     DPTR,#i
80B7D4 E0                MOVX    A,@DPTR
80B7D5 FF                MOV     R7,A
80B7D6 04                INC     A
80B7D7 FE                MOV     R6,A
80B7D8 EF                MOV     A,R7
80B7D9 75F003            MOV     B,#03H
80B7DC A4                MUL     AB
80B7DD 2405              ADD     A,#LOW iRackSet
80B7DF F582              MOV     DPL,A
80B7E1 E4                CLR     A
80B7E2 3404              ADDC    A,#HIGH iRackSet
80B7E4 F583              MOV     DPH,A
80B7E6 EE                MOV     A,R6
80B7E7 F0                MOVX    @DPTR,A
80B7E8 901595            MOV     DPTR,#i
80B7EB E0                MOVX    A,@DPTR
80B7EC 04                INC     A
80B7ED F0                MOVX    @DPTR,A
80B7EE E0                MOVX    A,@DPTR
80B7EF B408DF            CJNE    A,#08H,?C0333?MAINFLOW
80B7F2         ?C0334?MAINFLOW:
 1520: 	iRack = 0;
80B7F2 E4                CLR     A
80B7F3 90159A            MOV     DPTR,#iRack
80B7F6 F0                MOVX    @DPTR,A
 1521: 	for( i = 0; i < RACKNUM; i++ )//货架层数
80B7F7 901595            MOV     DPTR,#i
80B7FA F0                MOVX    @DPTR,A
80B7FB         ?C0336?MAINFLOW:
80B7FB 901595            MOV     DPTR,#i
80B7FE E0                MOVX    A,@DPTR
80B7FF FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 441


80B800 C3                CLR     C
80B801 9408              SUBB    A,#08H
80B803 4003              JC      $ + 5H
80B805 02B8F9            LJMP    ?C0337?MAINFLOW
 1522: 	{
 1523: 		if( iRackSet[ i ].UseState == 1 )//如果此层开启了
80B808 EF                MOV     A,R7
80B809 75F003            MOV     B,#03H
80B80C A4                MUL     AB
80B80D 2406              ADD     A,#LOW iRackSet+01H
80B80F F582              MOV     DPL,A
80B811 E4                CLR     A
80B812 3404              ADDC    A,#HIGH iRackSet+01H
80B814 F583              MOV     DPH,A
80B816 E0                MOVX    A,@DPTR
80B817 6401              XRL     A,#01H
80B819 6003              JZ      $ + 5H
80B81B 02B8F0            LJMP    ?C0338?MAINFLOW
 1524: 		{
 1525: 			j = iRackSet[ i ].GoodsMax;//此层中各货道最大存货量
80B81E 901595            MOV     DPTR,#i
80B821 E0                MOVX    A,@DPTR
80B822 75F003            MOV     B,#03H
80B825 A4                MUL     AB
80B826 2407              ADD     A,#LOW iRackSet+02H
80B828 F582              MOV     DPL,A
80B82A E4                CLR     A
80B82B 3404              ADDC    A,#HIGH iRackSet+02H
80B82D F583              MOV     DPH,A
80B82F E0                MOVX    A,@DPTR
80B830 901596            MOV     DPTR,#j
80B833 F0                MOVX    @DPTR,A
 1526: 			x = 1;//辑逻货道编号的个位	
80B834 A3                INC     DPTR
80B835 7401              MOV     A,#01H
80B837 F0                MOVX    @DPTR,A
 1527: 			for( y = 0; y < RACKCOLUMNNUM; y ++ )//检索每层中开启的货道数
80B838 E4                CLR     A
80B839 A3                INC     DPTR
80B83A F0                MOVX    @DPTR,A
80B83B         ?C0340?MAINFLOW:
80B83B 901598            MOV     DPTR,#y
80B83E E0                MOVX    A,@DPTR
80B83F FF                MOV     R7,A
80B840 C3                CLR     C
80B841 9408              SUBB    A,#08H
80B843 4003              JC      $ + 5H
80B845 02B8EA            LJMP    ?C0341?MAINFLOW
 1528: 			{
 1529: 				if( iRackColumnSet[i][y].UseState == 1)
80B848 901595            MOV     DPTR,#i
80B84B E0                MOVX    A,@DPTR
80B84C FE                MOV     R6,A
80B84D C4                SWAP    A
80B84E 54F0              ANL     A,#0F0H
80B850 2445              ADD     A,#LOW iRackColumnSet+01H
80B852 F582              MOV     DPL,A
80B854 E4                CLR     A
80B855 3401              ADDC    A,#HIGH iRackColumnSet+01H
80B857 F583              MOV     DPH,A
80B859 75F002            MOV     B,#02H
80B85C EF                MOV     A,R7
80B85D A51280079F        ECALL   ?C?OFFXADD
80B862 E0                MOVX    A,@DPTR
80B863 6401              XRL     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 442


80B865 707A              JNZ     ?C0342?MAINFLOW
 1530: 				{
 1531: 					InputGoodsWayList[ z ].GoodsWayNo = ( iRack + 1 ) * 10 + x;//逻辑货道  			
80B867 90159A            MOV     DPTR,#iRack
80B86A E0                MOVX    A,@DPTR
80B86B 04                INC     A
80B86C 75F00A            MOV     B,#0AH
80B86F A4                MUL     AB
80B870 FF                MOV     R7,A
80B871 901597            MOV     DPTR,#x
80B874 E0                MOVX    A,@DPTR
80B875 2F                ADD     A,R7
80B876 FF                MOV     R7,A
80B877 901599            MOV     DPTR,#z
80B87A E0                MOVX    A,@DPTR
80B87B FD                MOV     R5,A
80B87C 25E0              ADD     A,ACC
80B87E 25E0              ADD     A,ACC
80B880 24D3              ADD     A,#LOW InputGoodsWayList
80B882 F582              MOV     DPL,A
80B884 E4                CLR     A
80B885 342B              ADDC    A,#HIGH InputGoodsWayList
80B887 F583              MOV     DPH,A
80B889 EF                MOV     A,R7
80B88A F0                MOVX    @DPTR,A
 1532: 					InputGoodsWayList[ z ].SetArrayNo = 64 - i*RACKCOLUMNNUM - 8 + y + 1;//物理货道
80B88B EE                MOV     A,R6
80B88C 75F008            MOV     B,#08H
80B88F A4                MUL     AB
80B890 F4                CPL     A
80B891 04                INC     A
80B892 FF                MOV     R7,A
80B893 901598            MOV     DPTR,#y
80B896 E0                MOVX    A,@DPTR
80B897 2F                ADD     A,R7
80B898 2439              ADD     A,#039H
80B89A FF                MOV     R7,A
80B89B ED                MOV     A,R5
80B89C 25E0              ADD     A,ACC
80B89E 25E0              ADD     A,ACC
80B8A0 24D4              ADD     A,#LOW InputGoodsWayList+01H
80B8A2 F582              MOV     DPL,A
80B8A4 E4                CLR     A
80B8A5 342B              ADDC    A,#HIGH InputGoodsWayList+01H
80B8A7 F583              MOV     DPH,A
80B8A9 EF                MOV     A,R7
80B8AA F0                MOVX    @DPTR,A
 1533: 					InputGoodsWayList[ z ].UseState = 1;//开启状态
80B8AB 901599            MOV     DPTR,#z
80B8AE E0                MOVX    A,@DPTR
80B8AF FF                MOV     R7,A
80B8B0 25E0              ADD     A,ACC
80B8B2 25E0              ADD     A,ACC
80B8B4 24D5              ADD     A,#LOW InputGoodsWayList+02H
80B8B6 F582              MOV     DPL,A
80B8B8 E4                CLR     A
80B8B9 342B              ADDC    A,#HIGH InputGoodsWayList+02H
80B8BB F583              MOV     DPH,A
80B8BD 7401              MOV     A,#01H
80B8BF F0                MOVX    @DPTR,A
 1534: 					InputGoodsWayList[ z ].GoodsMax = j;//最大存货量
80B8C0 901596            MOV     DPTR,#j
80B8C3 E0                MOVX    A,@DPTR
80B8C4 FE                MOV     R6,A
80B8C5 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 443


80B8C6 25E0              ADD     A,ACC
80B8C8 25E0              ADD     A,ACC
80B8CA 24D6              ADD     A,#LOW InputGoodsWayList+03H
80B8CC F582              MOV     DPL,A
80B8CE E4                CLR     A
80B8CF 342B              ADDC    A,#HIGH InputGoodsWayList+03H
80B8D1 F583              MOV     DPH,A
80B8D3 EE                MOV     A,R6
80B8D4 F0                MOVX    @DPTR,A
 1535: 					x += 1;
80B8D5 901597            MOV     DPTR,#x
80B8D8 E0                MOVX    A,@DPTR
80B8D9 04                INC     A
80B8DA F0                MOVX    @DPTR,A
 1536: 					z += 1;
80B8DB 901599            MOV     DPTR,#z
80B8DE E0                MOVX    A,@DPTR
80B8DF 04                INC     A
80B8E0 F0                MOVX    @DPTR,A
 1537: 				}
 1538: 			}
80B8E1         ?C0342?MAINFLOW:
80B8E1 901598            MOV     DPTR,#y
80B8E4 E0                MOVX    A,@DPTR
80B8E5 04                INC     A
80B8E6 F0                MOVX    @DPTR,A
80B8E7 02B83B            LJMP    ?C0340?MAINFLOW
80B8EA         ?C0341?MAINFLOW:
 1539: 			iRack++;
80B8EA 90159A            MOV     DPTR,#iRack
80B8ED E0                MOVX    A,@DPTR
80B8EE 04                INC     A
80B8EF F0                MOVX    @DPTR,A
 1540: 		}
 1541: 	}	
80B8F0         ?C0338?MAINFLOW:
80B8F0 901595            MOV     DPTR,#i
80B8F3 E0                MOVX    A,@DPTR
80B8F4 04                INC     A
80B8F5 F0                MOVX    @DPTR,A
80B8F6 02B7FB            LJMP    ?C0336?MAINFLOW
80B8F9         ?C0337?MAINFLOW:
 1542: 
 1543: 	//货道数组中的货道代码初始化,确认逻辑货道的参数值	
 1544: 	for( i = 0; i < GOODSWAYNUM; i++ )
80B8F9 E4                CLR     A
80B8FA 901595            MOV     DPTR,#i
80B8FD F0                MOVX    @DPTR,A
80B8FE         ?C0344?MAINFLOW:
80B8FE 901595            MOV     DPTR,#i
80B901 E0                MOVX    A,@DPTR
80B902 FF                MOV     R7,A
80B903 C3                CLR     C
80B904 9440              SUBB    A,#040H
80B906 5071              JNC     ?C0345?MAINFLOW
 1545: 	{		
 1546: 		GoodsWaySetVal[i].WayNo = InputGoodsWayList[i].GoodsWayNo;	
80B908 E0                MOVX    A,@DPTR
80B909 FE                MOV     R6,A
80B90A 25E0              ADD     A,ACC
80B90C 25E0              ADD     A,ACC
80B90E 24D3              ADD     A,#LOW InputGoodsWayList
80B910 F582              MOV     DPL,A
80B912 E4                CLR     A
80B913 342B              ADDC    A,#HIGH InputGoodsWayList
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 444


80B915 F583              MOV     DPH,A
80B917 E0                MOVX    A,@DPTR
80B918 FD                MOV     R5,A
80B919 75F005            MOV     B,#05H
80B91C EE                MOV     A,R6
80B91D 900002            MOV     DPTR,#GoodsWaySetVal
80B920 A51280079F        ECALL   ?C?OFFXADD
80B925 ED                MOV     A,R5
80B926 F0                MOVX    @DPTR,A
 1547: #ifdef _DEBUG_TRACE
 1548: 		GoodsWaySetVal[i].WayState = 0x01;	
 1549: #else			
 1550: 		if( ( GoodsWaySetVal[i].GoodsCurrentSum != 0 ) && ( ( GoodsWaySetVal[i].WayState & 0x0B ) == 0x01 ) )
80B927 75F005            MOV     B,#05H
80B92A EF                MOV     A,R7
80B92B 900006            MOV     DPTR,#GoodsWaySetVal+04H
80B92E A51280079F        ECALL   ?C?OFFXADD
80B933 E0                MOVX    A,@DPTR
80B934 6028              JZ      ?C0347?MAINFLOW
80B936 901595            MOV     DPTR,#i
80B939 E0                MOVX    A,@DPTR
80B93A FF                MOV     R7,A
80B93B 75F005            MOV     B,#05H
80B93E 900003            MOV     DPTR,#GoodsWaySetVal+01H
80B941 A51280079F        ECALL   ?C?OFFXADD
80B946 E0                MOVX    A,@DPTR
80B947 540B              ANL     A,#0BH
80B949 FE                MOV     R6,A
80B94A BE0111            CJNE    R6,#01H,?C0347?MAINFLOW
 1551: 			GoodsWaySetVal[i].WayState = 0x01;	
80B94D 75F005            MOV     B,#05H
80B950 EF                MOV     A,R7
80B951 900003            MOV     DPTR,#GoodsWaySetVal+01H
80B954 A51280079F        ECALL   ?C?OFFXADD
80B959 7401              MOV     A,#01H
80B95B F0                MOVX    @DPTR,A
80B95C 8013              SJMP    ?C0346?MAINFLOW
80B95E         ?C0347?MAINFLOW:
 1552: 		else
 1553: 			GoodsWaySetVal[i].WayState = ( GoodsWaySetVal[i].WayState & 0x0F );
80B95E 901595            MOV     DPTR,#i
80B961 E0                MOVX    A,@DPTR
80B962 75F005            MOV     B,#05H
80B965 900003            MOV     DPTR,#GoodsWaySetVal+01H
80B968 A51280079F        ECALL   ?C?OFFXADD
80B96D E0                MOVX    A,@DPTR
80B96E 540F              ANL     A,#0FH
80B970 F0                MOVX    @DPTR,A
 1554: #endif
 1555: 	}		
80B971         ?C0346?MAINFLOW:
80B971 901595            MOV     DPTR,#i
80B974 E0                MOVX    A,@DPTR
80B975 04                INC     A
80B976 F0                MOVX    @DPTR,A
80B977 8085              SJMP    ?C0344?MAINFLOW
80B979         ?C0345?MAINFLOW:
 1556: 	
 1557: 	for( i = 0; i < GOODSWAYNUM; i ++ )	
80B979 E4                CLR     A
80B97A 901595            MOV     DPTR,#i
80B97D F0                MOVX    @DPTR,A
80B97E         ?C0349?MAINFLOW:
80B97E 901595            MOV     DPTR,#i
80B981 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 445


80B982 FF                MOV     R7,A
80B983 C3                CLR     C
80B984 9440              SUBB    A,#040H
80B986 505D              JNC     ?C0350?MAINFLOW
 1558: 	{
 1559: 		if( ( GoodsWaySetVal[i].WayNo == InputGoodsWayList[i].GoodsWayNo ) && 
80B988 E0                MOVX    A,@DPTR
80B989 FE                MOV     R6,A
80B98A 25E0              ADD     A,ACC
80B98C 25E0              ADD     A,ACC
80B98E 24D3              ADD     A,#LOW InputGoodsWayList
80B990 F582              MOV     DPL,A
80B992 E4                CLR     A
80B993 342B              ADDC    A,#HIGH InputGoodsWayList
80B995 F583              MOV     DPH,A
80B997 E0                MOVX    A,@DPTR
80B998 FD                MOV     R5,A
80B999 75F005            MOV     B,#05H
80B99C EE                MOV     A,R6
80B99D 900002            MOV     DPTR,#GoodsWaySetVal
80B9A0 A51280079F        ECALL   ?C?OFFXADD
80B9A5 E0                MOVX    A,@DPTR
80B9A6 6D                XRL     A,R5
80B9A7 7034              JNZ     ?C0351?MAINFLOW
80B9A9 EF                MOV     A,R7
80B9AA 25E0              ADD     A,ACC
80B9AC 25E0              ADD     A,ACC
80B9AE 24D5              ADD     A,#LOW InputGoodsWayList+02H
80B9B0 F582              MOV     DPL,A
80B9B2 E4                CLR     A
80B9B3 342B              ADDC    A,#HIGH InputGoodsWayList+02H
80B9B5 F583              MOV     DPH,A
80B9B7 E0                MOVX    A,@DPTR
80B9B8 B40122            CJNE    A,#01H,?C0351?MAINFLOW
80B9BB 901595            MOV     DPTR,#i
80B9BE E0                MOVX    A,@DPTR
80B9BF 75F005            MOV     B,#05H
80B9C2 900004            MOV     DPTR,#GoodsWaySetVal+02H
80B9C5 A51280079F        ECALL   ?C?OFFXADD
80B9CA E0                MOVX    A,@DPTR
80B9CB FE                MOV     R6,A
80B9CC A3                INC     DPTR
80B9CD E0                MOVX    A,@DPTR
80B9CE 4E                ORL     A,R6
80B9CF 700C              JNZ     ?C0351?MAINFLOW
 1560: 			( InputGoodsWayList[ i ].UseState == 1 ) &&
 1561: 			( GoodsWaySetVal[i].Price == 0 ) )
 1562: 		{
 1563: 			HardWareErr |= 0x0400;
80B9D1 90047F            MOV     DPTR,#HardWareErr
80B9D4 E0                MOVX    A,@DPTR
80B9D5 4404              ORL     A,#04H
80B9D7 F0                MOVX    @DPTR,A
80B9D8 A3                INC     DPTR
80B9D9 E0                MOVX    A,@DPTR
80B9DA F0                MOVX    @DPTR,A
 1564: 			break;
80B9DB 8008              SJMP    ?C0350?MAINFLOW
 1565: 		}
 1566: 	}
80B9DD         ?C0351?MAINFLOW:
80B9DD 901595            MOV     DPTR,#i
80B9E0 E0                MOVX    A,@DPTR
80B9E1 04                INC     A
80B9E2 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 446


80B9E3 8099              SJMP    ?C0349?MAINFLOW
80B9E5         ?C0350?MAINFLOW:
 1567: 
 1568: 	//清货道控制板的SN
 1569: 	if( ChannelTask( 0, CHANNEL_CLEAR ) == 2 )
80B9E5 7D53              MOV     R5,#053H
80B9E7 E4                CLR     A
80B9E8 FF                MOV     R7,A
80B9E9 A51280BA5C        ECALL   _ChannelTask
80B9EE BF022D            CJNE    R7,#02H,?C0353?MAINFLOW
 1570: 	{
 1571: 		//执行命令超时,应是主板与货道驱动板通讯故障
 1572: 		Trace("\n Channel are break");
 1573: 		for( i = 0; i < GOODSWAYNUM; i ++ )	
80B9F1 E4                CLR     A
80B9F2 901595            MOV     DPTR,#i
80B9F5 F0                MOVX    @DPTR,A
80B9F6         ?C0354?MAINFLOW:
80B9F6 901595            MOV     DPTR,#i
80B9F9 E0                MOVX    A,@DPTR
80B9FA FF                MOV     R7,A
80B9FB C3                CLR     C
80B9FC 9440              SUBB    A,#040H
80B9FE 5017              JNC     ?C0355?MAINFLOW
 1574: 			GoodsWaySetVal[i].WayState = 0x09;
80BA00 75F005            MOV     B,#05H
80BA03 EF                MOV     A,R7
80BA04 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BA07 A51280079F        ECALL   ?C?OFFXADD
80BA0C 7409              MOV     A,#09H
80BA0E F0                MOVX    @DPTR,A
80BA0F 901595            MOV     DPTR,#i
80BA12 E0                MOVX    A,@DPTR
80BA13 04                INC     A
80BA14 F0                MOVX    @DPTR,A
80BA15 80DF              SJMP    ?C0354?MAINFLOW
80BA17         ?C0355?MAINFLOW:
 1575: 		HardWareErr |= 0x0040;	
80BA17 900480            MOV     DPTR,#HardWareErr+01H
80BA1A E0                MOVX    A,@DPTR
80BA1B 4440              ORL     A,#040H
80BA1D F0                MOVX    @DPTR,A
 1576: 	}
80BA1E         ?C0353?MAINFLOW:
 1577: 
 1578: 	IOUFlag = 0;	
80BA1E C22B              CLR     IOUFlag
 1579: 	UpdataDisp = 0;
80BA20 E4                CLR     A
80BA21 900B23            MOV     DPTR,#UpdataDisp
80BA24 F0                MOVX    @DPTR,A
 1580: 	SystemErrorAlarm = 0;
80BA25 900142            MOV     DPTR,#SystemErrorAlarm
80BA28 F0                MOVX    @DPTR,A
 1581: 	MoneyDevAlarm = 0;
80BA29 90041D            MOV     DPTR,#MoneyDevAlarm
80BA2C F0                MOVX    @DPTR,A
 1582: 	AlarmTime = 0;
80BA2D 900000            MOV     DPTR,#AlarmTime
80BA30 F0                MOVX    @DPTR,A
 1583: 	QueryFlag = 0;
80BA31 C227              CLR     QueryFlag
 1584: 	memset( SMSMessage, 0, sizeof( struct SMSMessageList )* MAX_SMS_LIST );
80BA33 7E06              MOV     R6,#06H
80BA35 7F5E              MOV     R7,#05EH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 447


80BA37 FD                MOV     R5,A
80BA38 7B00              MOV     R3,#?C?XDATASEG
80BA3A 7A04              MOV     R2,#HIGH SMSMessage
80BA3C 7981              MOV     R1,#LOW SMSMessage
80BA3E A5128008A6        ECALL   ?C?MEMSET
 1585: //	ListIndex = 0;
 1586: 	return 0;	
80BA43 7F00              MOV     R7,#00H
 1587: }
80BA45         ?C0357?MAINFLOW:
80BA45 A522              ERET    
----- FUNCTION SysInitParam (END) -------


----- FUNCTION ?L?COM0024 (BEGIN) -----
80BA47 900B22            MOV     DPTR,#CurrentStockCode
80BA4A E0                MOVX    A,@DPTR
80BA4B 25E0              ADD     A,ACC
80BA4D 25E0              ADD     A,ACC
80BA4F 24D4              ADD     A,#LOW InputGoodsWayList+01H
80BA51 F582              MOV     DPL,A
80BA53 E4                CLR     A
80BA54 342B              ADDC    A,#HIGH InputGoodsWayList+01H
80BA56 F583              MOV     DPH,A
80BA58 E0                MOVX    A,@DPTR
80BA59 FF                MOV     R7,A
80BA5A 7D50              MOV     R5,#050H
----- FUNCTION _ChannelTask (BEGIN) -----
 FILE: 'CommonFunction.c'
  564: u_char ChannelTask( u_char ChannelNum, u_char TaskId )
  565: {	
80BA5C 901757            MOV     DPTR,#ChannelNum
80BA5F EF                MOV     A,R7
80BA60 F0                MOVX    @DPTR,A
80BA61 A3                INC     DPTR
80BA62 ED                MOV     A,R5
80BA63 F0                MOVX    @DPTR,A
  566: 	u_char xdata i = 0;
  567: 	u_char xdata j = 0;
80BA64 E4                CLR     A
80BA65 A3                INC     DPTR
80BA66 F0                MOVX    @DPTR,A
  568: 	u_char xdata z = 0;
80BA67 A3                INC     DPTR
80BA68 F0                MOVX    @DPTR,A
  569: 
80BA69 A3                INC     DPTR
80BA6A F0                MOVX    @DPTR,A
80BA6B         ?C0145?COMMONFUNCTION:
  570: 	while( z < 2 )
80BA6B 90175B            MOV     DPTR,#z
80BA6E E0                MOVX    A,@DPTR
80BA6F FD                MOV     R5,A
80BA70 C3                CLR     C
80BA71 9402              SUBB    A,#02H
80BA73 4003              JC      $ + 5H
80BA75 02BB23            LJMP    ?C0146?COMMONFUNCTION
  571: 	{
  572: 		switch( TaskId )
80BA78 901758            MOV     DPTR,#TaskId
80BA7B E0                MOVX    A,@DPTR
80BA7C 24AF              ADD     A,#0AFH
80BA7E 6016              JZ      ?C0149?COMMONFUNCTION
80BA80 14                DEC     A
80BA81 601A              JZ      ?C0150?COMMONFUNCTION
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 448


80BA83 14                DEC     A
80BA84 6023              JZ      ?C0151?COMMONFUNCTION
80BA86 2403              ADD     A,#03H
80BA88 7026              JNZ     ?C0152?COMMONFUNCTION
  573: 		{
  574: 			case CHANNEL_EXEC://出货			
80BA8A         ?C0148?COMMONFUNCTION:
  575: 				ZhkChannelExec( ChannelNum, z );			
80BA8A 901757            MOV     DPTR,#ChannelNum
80BA8D E0                MOVX    A,@DPTR
80BA8E FF                MOV     R7,A
80BA8F A5128125DB        ECALL   _ZhkChannelExec
  576: 				break;
80BA94 801F              SJMP    ?C0147?COMMONFUNCTION
  577: 			case CHANNEL_QUERY://查询命令执行情况
80BA96         ?C0149?COMMONFUNCTION:
  578: 				ZhkChannelQuery();
80BA96 A51280BF90        ECALL   ZhkChannelQuery
  579: 				break;
80BA9B 8018              SJMP    ?C0147?COMMONFUNCTION
  580: 			case CHANNEL_TEST://货道测试
80BA9D         ?C0150?COMMONFUNCTION:
  581: 				ZhkChannelTest( ChannelNum );			
80BA9D 901757            MOV     DPTR,#ChannelNum
80BAA0 E0                MOVX    A,@DPTR
80BAA1 FF                MOV     R7,A
80BAA2 A512812636        ECALL   _ZhkChannelTest
  582: 				break;
80BAA7 800C              SJMP    ?C0147?COMMONFUNCTION
  583: 			case CHANNEL_CLEAR://同步SN
80BAA9         ?C0151?COMMONFUNCTION:
  584: 				ZhkChannelClear();
80BAA9 A51280BFC5        ECALL   ZhkChannelClear
  585: 				break;		
80BAAE 8005              SJMP    ?C0147?COMMONFUNCTION
  586: 			default:
80BAB0         ?C0152?COMMONFUNCTION:
  587: 				return 0;
80BAB0 7F00              MOV     R7,#00H
80BAB2 02BB6A            LJMP    ?C0153?COMMONFUNCTION
  588: 		}
80BAB5         ?C0147?COMMONFUNCTION:
  589: 		i = 0;
80BAB5 E4                CLR     A
80BAB6 901759            MOV     DPTR,#i
80BAB9 F0                MOVX    @DPTR,A
  590: 		j = 0;
80BABA A3                INC     DPTR
80BABB F0                MOVX    @DPTR,A
80BABC         ?C0154?COMMONFUNCTION:
  591: 		while( ! ( i || j ) )
80BABC 901759            MOV     DPTR,#i
80BABF E0                MOVX    A,@DPTR
80BAC0 702A              JNZ     ?C0155?COMMONFUNCTION
80BAC2 A3                INC     DPTR
80BAC3 E0                MOVX    A,@DPTR
80BAC4 7026              JNZ     ?C0155?COMMONFUNCTION
  592: 		{
  593: 			WaitForWork( 50, NULL );
80BAC6 7F32              MOV     R7,#032H
80BAC8 FE                MOV     R6,A
80BAC9 A512807B35        ECALL   ?L?COM000D
  594: 			i = TestDeviceTimeOut( &Channel );
80BACE 7E23              MOV     R6,#HIGH Channel
80BAD0 7FB5              MOV     R7,#LOW Channel
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 449


80BAD2 A512808000        ECALL   _TestDeviceTimeOut
80BAD7 901759            MOV     DPTR,#i
80BADA EF                MOV     A,R7
80BADB F0                MOVX    @DPTR,A
  595: 			j = TestDeviceCommOK( &Channel );		
80BADC 7E23              MOV     R6,#HIGH Channel
80BADE 7FB5              MOV     R7,#LOW Channel
80BAE0 A512807FDE        ECALL   _TestDeviceCommOK
80BAE5 90175A            MOV     DPTR,#j
80BAE8 EF                MOV     A,R7
80BAE9 F0                MOVX    @DPTR,A
  596: 		}
80BAEA 80D0              SJMP    ?C0154?COMMONFUNCTION
80BAEC         ?C0155?COMMONFUNCTION:
  597: 	//	Trace("\n i = %bu, j = %bu", i, j );
  598: 		if( i ) //超时，货道故障	
80BAEC 901759            MOV     DPTR,#i
80BAEF E0                MOVX    A,@DPTR
80BAF0 6031              JZ      ?C0146?COMMONFUNCTION
  599: 		{
  600: 			if( ( TaskId == CHANNEL_EXEC ) || ( TaskId == CHANNEL_TEST ) )
80BAF2 901758            MOV     DPTR,#TaskId
80BAF5 E0                MOVX    A,@DPTR
80BAF6 FF                MOV     R7,A
80BAF7 6450              XRL     A,#050H
80BAF9 6004              JZ      ?C0158?COMMONFUNCTION
80BAFB EF                MOV     A,R7
80BAFC B45220            CJNE    A,#052H,?C0157?COMMONFUNCTION
80BAFF         ?C0158?COMMONFUNCTION:
  601: 			{
  602: 				if( Channel.ExtState[2] == 0 )	//没有收到命令ACK，重试一次
80BAFF 9023BB            MOV     DPTR,#Channel+06H
80BB02 E0                MOVX    A,@DPTR
80BB03 FF                MOV     R7,A
80BB04 7002              JNZ     ?C0159?COMMONFUNCTION
  603: 				{
  604: 					z++;
  605: 					continue;
80BB06 800E              SJMP    ?C0221?COMMONFUNCTION
  606: 				}
80BB08         ?C0159?COMMONFUNCTION:
  607: 				else if( Channel.ExtState[2] == 1 )//收到命令ACK，但没有收到消息ACK，则查询命令执行情况
80BB08 EF                MOV     A,R7
80BB09 6401              XRL     A,#01H
80BB0B 6003              JZ      $ + 5H
80BB0D 02BA6B            LJMP    ?C0145?COMMONFUNCTION
  608: 				{
  609: 					TaskId = CHANNEL_QUERY;
80BB10 901758            MOV     DPTR,#TaskId
80BB13 7451              MOV     A,#051H
80BB15 F0                MOVX    @DPTR,A
  610: 					z++;
80BB16         
80BB16 90175B            MOV     DPTR,#z
80BB19 E0                MOVX    A,@DPTR
80BB1A 04                INC     A
80BB1B F0                MOVX    @DPTR,A
  611: 			//		Trace("\n CHANNEL_QUERY" );
  612: 					continue;
80BB1C 02BA6B            LJMP    ?C0145?COMMONFUNCTION
  613: 				}
  614: 			}
80BB1F         ?C0157?COMMONFUNCTION:
  615: 			else
  616: 			{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 450


  617: 		//		Trace("\n TimeOut" );
  618: 				return 2;
80BB1F 7F02              MOV     R7,#02H
80BB21 8047              SJMP    ?C0153?COMMONFUNCTION
  619: 			}
  620: 		}
  621: 		else
  622: 			break;
  623: 	}
80BB23         ?C0146?COMMONFUNCTION:
  624: 	if( i )
80BB23 901759            MOV     DPTR,#i
80BB26 E0                MOVX    A,@DPTR
80BB27 6004              JZ      ?C0164?COMMONFUNCTION
  625: 		return 2;
80BB29 7F02              MOV     R7,#02H
80BB2B 803D              SJMP    ?C0153?COMMONFUNCTION
80BB2D         ?C0164?COMMONFUNCTION:
  626: 	/*状态字节中各位的意义
  627: 	  Bit 6: 接收到的命令包有错误
  628: 	  Bit 5: 货物没有通过出货检测口
  629: 	  Bit 4: 在限定的时间内电机不能到位
  630: 	  Bit 3: 电机没有转动
  631: 	  Bit 2: 在转动前电机没有到位
  632: 	  Bit 1: 商品卖空，保留
  633: 	  Bit 0: 命令失败 */
  634: 	switch( TaskId )
80BB2D 901758            MOV     DPTR,#TaskId
80BB30 E0                MOVX    A,@DPTR
80BB31 24B0              ADD     A,#0B0H
80BB33 24FD              ADD     A,#0FDH
80BB35 5002              JNC     ?C0168?COMMONFUNCTION
80BB37 802F              SJMP    ?C0165?COMMONFUNCTION
  635: 	{
  636: 		case CHANNEL_EXEC:
  637: 		case CHANNEL_QUERY:	
  638: 		case CHANNEL_TEST:			
80BB39         ?C0168?COMMONFUNCTION:
  639: 			if ( Channel.State & 0x01 ) 
80BB39 9023B8            MOV     DPTR,#Channel+03H
80BB3C E0                MOVX    A,@DPTR
80BB3D 30E028            JNB     ACC.0,?C0165?COMMONFUNCTION
  640: 			{	
  641: 				if( Channel.State & 0x04 )
80BB40 30E204            JNB     ACC.2,?C0170?COMMONFUNCTION
  642: 					return 3;//在转动前电机没有到位，没有出货，此货道已不能工作了
80BB43 7F03              MOV     R7,#03H
80BB45 8023              SJMP    ?C0153?COMMONFUNCTION
80BB47         ?C0170?COMMONFUNCTION:
  643: 				if( Channel.State & 0x08 )
80BB47 9023B8            MOV     DPTR,#Channel+03H
80BB4A E0                MOVX    A,@DPTR
80BB4B FE                MOV     R6,A
80BB4C 30E304            JNB     ACC.3,?C0171?COMMONFUNCTION
  644: 					return 4;//电机没有转动，没有出货，可以重试一次
80BB4F 7F04              MOV     R7,#04H
80BB51 8017              SJMP    ?C0153?COMMONFUNCTION
80BB53         ?C0171?COMMONFUNCTION:
  645: 				if( Channel.State & 0x10 )
80BB53 EE                MOV     A,R6
80BB54 30E404            JNB     ACC.4,?C0172?COMMONFUNCTION
  646: 					return 5;//在限定的时间内电机不能到位（但货已出成功，货道有硬件故障）
80BB57 7F05              MOV     R7,#05H
80BB59 800F              SJMP    ?C0153?COMMONFUNCTION
80BB5B         ?C0172?COMMONFUNCTION:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 451


  647: 				if( Channel.State & 0x40 )
80BB5B 9023B8            MOV     DPTR,#Channel+03H
80BB5E E0                MOVX    A,@DPTR
80BB5F 7F01              MOV     R7,#01H
80BB61 30E606            JNB     ACC.6,?C0153?COMMONFUNCTION
  648: 					return 7;//接收到的命令包有错误，但货没有出，可以重试一次
80BB64 7F07              MOV     R7,#07H
80BB66         ?C0173?COMMONFUNCTION:
  649: 				return 1;//命令失败
80BB66 8002              SJMP    ?C0153?COMMONFUNCTION
  650: 			}
  651: 			break;		
  652: 		case CHANNEL_CLEAR:
  653: 			break;
  654: 	}	
80BB68         ?C0165?COMMONFUNCTION:
  655: 	return 0;//出货成功
80BB68 7F00              MOV     R7,#00H
  656: }
80BB6A         ?C0153?COMMONFUNCTION:
80BB6A A522              ERET    
----- FUNCTION _ChannelTask (END) -------


----- FUNCTION GoodsWayTest (BEGIN) -----
 FILE: 'devicecheck.c'
  115: void  GoodsWayTest()
  116: {
  117: 	u_char xdata m_ChannelNum = 0;
  118: 	u_char xdata m_Index = 0;
80BB6C E4                CLR     A
80BB6D 90173E            MOV     DPTR,#m_ChannelNum
80BB70 F0                MOVX    @DPTR,A
  119: 	u_char xdata m_str[20];
80BB71 A3                INC     DPTR
80BB72 F0                MOVX    @DPTR,A
  120: 	u_char xdata i = 0;
80BB73 901754            MOV     DPTR,#i
80BB76 F0                MOVX    @DPTR,A
  121: 	u_char xdata len = 0;
80BB77 A3                INC     DPTR
80BB78 F0                MOVX    @DPTR,A
  122: 	u_char xdata j = 0;
80BB79 A3                INC     DPTR
80BB7A F0                MOVX    @DPTR,A
  123: 	
  124: 	m_ChannelNum = InputGoodsWayNo( 0 );
80BB7B FF                MOV     R7,A
80BB7C A51280CFCD        ECALL   _InputGoodsWayNo
80BB81 90173E            MOV     DPTR,#m_ChannelNum
80BB84 EF                MOV     A,R7
80BB85 F0                MOVX    @DPTR,A
  125: 	if( m_ChannelNum == 100 )
80BB86 6464              XRL     A,#064H
80BB88 7003              JNZ     $ + 5H
80BB8A 02BF8E            LJMP    ?C0009?DEVICECHECK
80BB8D         ?C0008?DEVICECHECK:
  126: 		return;
  127: 	if( m_ChannelNum == 99 )//货道全检
80BB8D 90173E            MOV     DPTR,#m_ChannelNum
80BB90 E0                MOVX    A,@DPTR
80BB91 6463              XRL     A,#063H
80BB93 6003              JZ      $ + 5H
80BB95 02BDC1            LJMP    ?C0010?DEVICECHECK
  128: 	{	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 452


  129: 		GoodsSetSave = 1;
80BB98 902DEF            MOV     DPTR,#GoodsSetSave
80BB9B 04                INC     A
80BB9C F0                MOVX    @DPTR,A
  130: 	//	Trace("\n GoodsSetSave = %bu", GoodsSetSave );
  131: 		for( m_Index = 0; m_Index < GOODSWAYNUM; m_Index ++ )					
80BB9D E4                CLR     A
80BB9E 90173F            MOV     DPTR,#m_Index
80BBA1 F0                MOVX    @DPTR,A
80BBA2         ?C0011?DEVICECHECK:
  132: 		{			
  133: 			i = 0;	
80BBA2 A512809270        ECALL   ?L?COM003D
80BBA7 901754            MOV     DPTR,#i
80BBAA EF                MOV     A,R7
80BBAB F0                MOVX    @DPTR,A
  134: 			i = GetKey();
  135: 			if ( i == KEY_CANCEL )
80BBAC BF1B03            CJNE    R7,#01BH,?C0014?DEVICECHECK
  136:  		    {
  137: 				ClearKey();
80BBAF 02BDA7            LJMP    ?C0267?DEVICECHECK
  138: 				return;
  139: 			}
80BBB2         ?C0014?DEVICECHECK:
  140: 			WaitForWork( 100, NULL );	
80BBB2 E4                CLR     A
80BBB3 7F64              MOV     R7,#064H
80BBB5 FE                MOV     R6,A
80BBB6 A512807B35        ECALL   ?L?COM000D
  141: 			if( InputGoodsWayList[m_Index].UseState == 0 )
80BBBB 90173F            MOV     DPTR,#m_Index
80BBBE E0                MOVX    A,@DPTR
80BBBF 25E0              ADD     A,ACC
80BBC1 25E0              ADD     A,ACC
80BBC3 24D5              ADD     A,#LOW InputGoodsWayList+02H
80BBC5 F582              MOV     DPL,A
80BBC7 E4                CLR     A
80BBC8 342B              ADDC    A,#HIGH InputGoodsWayList+02H
80BBCA F583              MOV     DPH,A
80BBCC E0                MOVX    A,@DPTR
80BBCD 7003              JNZ     $ + 5H
80BBCF 02BDAF            LJMP    ?C0013?DEVICECHECK
  142: 				continue;
80BBD2         ?C0015?DEVICECHECK:
  143: 			m_ChannelNum = InputGoodsWayList[m_Index].SetArrayNo;
80BBD2 90173F            MOV     DPTR,#m_Index
80BBD5 E0                MOVX    A,@DPTR
80BBD6 FF                MOV     R7,A
80BBD7 25E0              ADD     A,ACC
80BBD9 25E0              ADD     A,ACC
80BBDB 24D4              ADD     A,#LOW InputGoodsWayList+01H
80BBDD F582              MOV     DPL,A
80BBDF E4                CLR     A
80BBE0 342B              ADDC    A,#HIGH InputGoodsWayList+01H
80BBE2 F583              MOV     DPH,A
80BBE4 E0                MOVX    A,@DPTR
80BBE5 90173E            MOV     DPTR,#m_ChannelNum
80BBE8 F0                MOVX    @DPTR,A
  144: 			//清除其它状态位
  145: 			GoodsWaySetVal[ m_Index ].WayState = 0x01;		
80BBE9 75F005            MOV     B,#05H
80BBEC EF                MOV     A,R7
80BBED 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BBF0 A51280079F        ECALL   ?C?OFFXADD
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 453


80BBF5 7401              MOV     A,#01H
80BBF7 F0                MOVX    @DPTR,A
  146: 		#ifdef _CHINA_
  147: 			len = sprintf( m_str, "\xd5\xfd在检测 %02bu 货道", InputGoodsWayList[m_Index].GoodsWayNo );	
  148: 		#else
  149: 			len = sprintf( m_str, "Checking column %02bu", InputGoodsWayList[m_Index].GoodsWayNo );
80BBF8 7B80              MOV     R3,#BYTE2 0800D10H
80BBFA 7A0D              MOV     R2,#HIGH 0800D10H
80BBFC 7910              MOV     R1,#LOW 0800D10H
80BBFE 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80BC01 A5128007B6        ECALL   ?C?PSTXDATA
80BC06 90173F            MOV     DPTR,#m_Index
80BC09 E0                MOVX    A,@DPTR
80BC0A 25E0              ADD     A,ACC
80BC0C 25E0              ADD     A,ACC
80BC0E 24D3              ADD     A,#LOW InputGoodsWayList
80BC10 F582              MOV     DPL,A
80BC12 E4                CLR     A
80BC13 342B              ADDC    A,#HIGH InputGoodsWayList
80BC15 F583              MOV     DPH,A
80BC17 E0                MOVX    A,@DPTR
80BC18 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80BC1B F0                MOVX    @DPTR,A
80BC1C 7B00              MOV     R3,#?C?XDATASEG
80BC1E 7A17              MOV     R2,#HIGH m_str
80BC20 7940              MOV     R1,#LOW m_str
80BC22 A512800949        ECALL   _sprintf
80BC27 901755            MOV     DPTR,#len
80BC2A EF                MOV     A,R7
80BC2B F0                MOVX    @DPTR,A
  150: 		#endif
  151: 			DisplayStr( 0, 0, 1, m_str, len );
80BC2C D21A              SETB    ?_DisplayStr?BIT
80BC2E 7B00              MOV     R3,#?C?XDATASEG
80BC30 7A17              MOV     R2,#HIGH m_str
80BC32 7940              MOV     R1,#LOW m_str
80BC34 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80BC37 A5128007B6        ECALL   ?C?PSTXDATA
80BC3C 901755            MOV     DPTR,#len
80BC3F E0                MOVX    A,@DPTR
80BC40 A51280805B        ECALL   ?L?COM0006
  152: 		#ifdef _CHINA_
  153: 			len = sprintf( m_str,  "    请稍等..." );
  154: 		#else
  155: 			len = sprintf( m_str,  "please wait..." );
80BC45 7B80              MOV     R3,#BYTE2 0800D26H
80BC47 7A0D              MOV     R2,#HIGH 0800D26H
80BC49 7926              MOV     R1,#LOW 0800D26H
80BC4B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80BC4E A5128007B6        ECALL   ?C?PSTXDATA
80BC53 7B00              MOV     R3,#?C?XDATASEG
80BC55 7A17              MOV     R2,#HIGH m_str
80BC57 7940              MOV     R1,#LOW m_str
80BC59 A512800949        ECALL   _sprintf
80BC5E 901755            MOV     DPTR,#len
80BC61 EF                MOV     A,R7
80BC62 F0                MOVX    @DPTR,A
  156: 		#endif
  157: 			DisplayStr( 0, 1, 1, m_str, len );
80BC63 D21A              SETB    ?_DisplayStr?BIT
80BC65 7B00              MOV     R3,#?C?XDATASEG
80BC67 7A17              MOV     R2,#HIGH m_str
80BC69 7940              MOV     R1,#LOW m_str
80BC6B 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80BC6E A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 454


80BC73 901755            MOV     DPTR,#len
80BC76 E0                MOVX    A,@DPTR
80BC77 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80BC7A F0                MOVX    @DPTR,A
80BC7B 7D01              MOV     R5,#01H
80BC7D E4                CLR     A
80BC7E FF                MOV     R7,A
80BC7F A512808062        ECALL   _DisplayStr
  158: 			WaitForWork( 500, NULL );	
80BC84 E4                CLR     A
80BC85 7FF4              MOV     R7,#0F4H
80BC87 7E01              MOV     R6,#01H
80BC89 A512807B35        ECALL   ?L?COM000D
  159: 			i = 0;
80BC8E E4                CLR     A
80BC8F 901754            MOV     DPTR,#i
80BC92 F0                MOVX    @DPTR,A
  160: 			j = 0;
80BC93 901756            MOV     DPTR,#j
80BC96 F0                MOVX    @DPTR,A
  161: 			i = ChannelTask( m_ChannelNum, CHANNEL_TEST );			
80BC97 90173E            MOV     DPTR,#m_ChannelNum
80BC9A E0                MOVX    A,@DPTR
80BC9B FF                MOV     R7,A
80BC9C 7D52              MOV     R5,#052H
80BC9E A51280BA5C        ECALL   _ChannelTask
80BCA3 901754            MOV     DPTR,#i
80BCA6 EF                MOV     A,R7
80BCA7 F0                MOVX    @DPTR,A
  162: 		#ifdef _CHINA_			
  163: 			if( i )
  164: 			{
  165: 				if( i == 2 )//主板与货道板通讯超时
  166: 				{				
  167: 					len = sprintf( m_str, "  货道板: 故障   " );
  168: 					for( i = 0; i < GOODSWAYNUM; i ++ )
  169: 						GoodsWaySetVal[ i ].WayState |= 0x09;
  170: 					j = 1;			
  171: 				}				
  172: 				else
  173: 				{
  174: 					GoodsWaySetVal[ m_Index ].WayState |= 0x03;
  175: 					len = sprintf( m_str, "  货道%02bu: 故障   ", InputGoodsWayList[m_Index].GoodsWayNo );
  176: 				}
  177: 			}
  178: 			else
  179: 			{
  180: 				GoodsWaySetVal[ m_Index ].WayState = 0x01;
  181: 				len = sprintf( m_str, "  货道 %02bu:  \xd5\xfd常 ", InputGoodsWayList[m_Index].GoodsWayNo );
  182: 			}
  183: 		#else
  184: 			if( i )
80BCA8 606E              JZ      ?C0016?DEVICECHECK
  185: 			{
  186: 				if( i == 2 )
80BCAA E0                MOVX    A,@DPTR
80BCAB 6402              XRL     A,#02H
80BCAD 704D              JNZ     ?C0017?DEVICECHECK
  187: 				{				
  188: 					len = sprintf( m_str, "Broad:    Error " );
80BCAF 7B80              MOV     R3,#BYTE2 0800D35H
80BCB1 7A0D              MOV     R2,#HIGH 0800D35H
80BCB3 7935              MOV     R1,#LOW 0800D35H
80BCB5 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80BCB8 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 455


80BCBD 7B00              MOV     R3,#?C?XDATASEG
80BCBF 7A17              MOV     R2,#HIGH m_str
80BCC1 7940              MOV     R1,#LOW m_str
80BCC3 A512800949        ECALL   _sprintf
80BCC8 901755            MOV     DPTR,#len
80BCCB EF                MOV     A,R7
80BCCC F0                MOVX    @DPTR,A
  189: 					for( i = 0; i < GOODSWAYNUM; i ++ )
80BCCD E4                CLR     A
80BCCE 901754            MOV     DPTR,#i
80BCD1 F0                MOVX    @DPTR,A
80BCD2         ?C0018?DEVICECHECK:
80BCD2 901754            MOV     DPTR,#i
80BCD5 E0                MOVX    A,@DPTR
80BCD6 FF                MOV     R7,A
80BCD7 C3                CLR     C
80BCD8 9440              SUBB    A,#040H
80BCDA 5018              JNC     ?C0019?DEVICECHECK
  190: 						GoodsWaySetVal[ i ].WayState |= 0x09;
80BCDC 75F005            MOV     B,#05H
80BCDF EF                MOV     A,R7
80BCE0 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BCE3 A51280079F        ECALL   ?C?OFFXADD
80BCE8 E0                MOVX    A,@DPTR
80BCE9 4409              ORL     A,#09H
80BCEB F0                MOVX    @DPTR,A
80BCEC 901754            MOV     DPTR,#i
80BCEF E0                MOVX    A,@DPTR
80BCF0 04                INC     A
80BCF1 F0                MOVX    @DPTR,A
80BCF2 80DE              SJMP    ?C0018?DEVICECHECK
80BCF4         ?C0019?DEVICECHECK:
  191: 					j = 1;
80BCF4 901756            MOV     DPTR,#j
80BCF7 7401              MOV     A,#01H
80BCF9 F0                MOVX    @DPTR,A
  192: 				}				
80BCFA 8060              SJMP    ?C0022?DEVICECHECK
80BCFC         ?C0017?DEVICECHECK:
  193: 				else
  194: 				{
  195: 					GoodsWaySetVal[ m_Index ].WayState |= 0x03;
80BCFC 90173F            MOV     DPTR,#m_Index
80BCFF E0                MOVX    A,@DPTR
80BD00 FF                MOV     R7,A
80BD01 75F005            MOV     B,#05H
80BD04 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BD07 A51280079F        ECALL   ?C?OFFXADD
80BD0C E0                MOVX    A,@DPTR
80BD0D 4403              ORL     A,#03H
80BD0F F0                MOVX    @DPTR,A
  196: 					len = sprintf( m_str, "column %02bu: Error", InputGoodsWayList[m_Index].GoodsWayNo );
80BD10 7B80              MOV     R3,#BYTE2 0800D46H
80BD12 7A0D              MOV     R2,#HIGH 0800D46H
80BD14 7946              MOV     R1,#LOW 0800D46H
  197: 				}
  198: 			}
80BD16 8019              SJMP    ?C0268?DEVICECHECK
80BD18         ?C0016?DEVICECHECK:
  199: 			else
  200: 			{
  201: 				GoodsWaySetVal[ m_Index ].WayState = 0x01;
80BD18 90173F            MOV     DPTR,#m_Index
80BD1B E0                MOVX    A,@DPTR
80BD1C FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 456


80BD1D 75F005            MOV     B,#05H
80BD20 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BD23 A51280079F        ECALL   ?C?OFFXADD
80BD28 7401              MOV     A,#01H
80BD2A F0                MOVX    @DPTR,A
  202: 				len = sprintf( m_str, "column %02bu:    OK", InputGoodsWayList[m_Index].GoodsWayNo );
80BD2B 7B80              MOV     R3,#BYTE2 0800D5AH
80BD2D 7A0D              MOV     R2,#HIGH 0800D5AH
80BD2F 795A              MOV     R1,#LOW 0800D5AH
80BD31         
80BD31 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80BD34 A5128007B6        ECALL   ?C?PSTXDATA
80BD39 EF                MOV     A,R7
80BD3A 25E0              ADD     A,ACC
80BD3C 25E0              ADD     A,ACC
80BD3E 24D3              ADD     A,#LOW InputGoodsWayList
80BD40 F582              MOV     DPL,A
80BD42 E4                CLR     A
80BD43 342B              ADDC    A,#HIGH InputGoodsWayList
80BD45 F583              MOV     DPH,A
80BD47 E0                MOVX    A,@DPTR
80BD48 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80BD4B F0                MOVX    @DPTR,A
80BD4C 7B00              MOV     R3,#?C?XDATASEG
80BD4E 7A17              MOV     R2,#HIGH m_str
80BD50 7940              MOV     R1,#LOW m_str
80BD52 A512800949        ECALL   _sprintf
80BD57 901755            MOV     DPTR,#len
80BD5A EF                MOV     A,R7
80BD5B F0                MOVX    @DPTR,A
  203: 			}		
80BD5C         ?C0022?DEVICECHECK:
  204: 		#endif
  205: //			Trace( " \n SystemParameter.BanknoteMax = %d", SystemParameter.BanknoteMax );
  206: 			ClearDisplayLine( 1 );
80BD5C 7F01              MOV     R7,#01H
80BD5E A5128087BB        ECALL   _ClearDisplayLine
  207: 			DisplayStr( 0, 1, 1, m_str, len );
80BD63 D21A              SETB    ?_DisplayStr?BIT
80BD65 7B00              MOV     R3,#?C?XDATASEG
80BD67 7A17              MOV     R2,#HIGH m_str
80BD69 7940              MOV     R1,#LOW m_str
80BD6B 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80BD6E A5128007B6        ECALL   ?C?PSTXDATA
80BD73 901755            MOV     DPTR,#len
80BD76 E0                MOVX    A,@DPTR
80BD77 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80BD7A F0                MOVX    @DPTR,A
80BD7B 7D01              MOV     R5,#01H
80BD7D E4                CLR     A
80BD7E FF                MOV     R7,A
80BD7F A512808062        ECALL   _DisplayStr
  208: 			WaitForWork( 1000, NULL );
80BD84 E4                CLR     A
80BD85 7FE8              MOV     R7,#0E8H
80BD87 7E03              MOV     R6,#03H
80BD89 A512807B35        ECALL   ?L?COM000D
  209: 			if( j == 1 )
80BD8E 901756            MOV     DPTR,#j
80BD91 E0                MOVX    A,@DPTR
80BD92 B40105            CJNE    A,#01H,?C0023?DEVICECHECK
  210: 			{
  211: 				j = 0;
80BD95 E4                CLR     A
80BD96 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 457


  212: 				break;
80BD97 02BF8E            LJMP    ?C0009?DEVICECHECK
  213: 			}
80BD9A         ?C0023?DEVICECHECK:
  214: 			i = 0;	
80BD9A A512809270        ECALL   ?L?COM003D
80BD9F 901754            MOV     DPTR,#i
80BDA2 EF                MOV     A,R7
80BDA3 F0                MOVX    @DPTR,A
  215: 			i = GetKey();
  216: 			if ( i == KEY_CANCEL )
80BDA4 BF1B08            CJNE    R7,#01BH,?C0013?DEVICECHECK
  217:  		    {
  218: 				ClearKey();
80BDA7         
80BDA7 A5128087A8        ECALL   ClearKey
80BDAC 02BF8E            LJMP    ?C0009?DEVICECHECK
  219: 				return;
  220: 			}				
  221: 		}	
80BDAF         ?C0013?DEVICECHECK:
80BDAF 90173F            MOV     DPTR,#m_Index
80BDB2 E0                MOVX    A,@DPTR
80BDB3 04                INC     A
80BDB4 F0                MOVX    @DPTR,A
80BDB5 E0                MOVX    A,@DPTR
80BDB6 C3                CLR     C
80BDB7 9440              SUBB    A,#040H
80BDB9 5003              JNC     $ + 5H
80BDBB 02BBA2            LJMP    ?C0011?DEVICECHECK
80BDBE 02BF8E            LJMP    ?C0009?DEVICECHECK
  222: 		return;		
  223: 	}
80BDC1         ?C0010?DEVICECHECK:
  224: 	//单检指定货道
  225: //	if( InputGoodsWayList[m_Index].UseState != 1 )
  226: //			continue;
  227: 	memset( m_str,0, sizeof( m_str ) );
80BDC1 7E00              MOV     R6,#00H
80BDC3 7F14              MOV     R7,#014H
80BDC5 7D00              MOV     R5,#00H
80BDC7 7B00              MOV     R3,#?C?XDATASEG
80BDC9 7A17              MOV     R2,#HIGH m_str
80BDCB 7940              MOV     R1,#LOW m_str
80BDCD A5128008A6        ECALL   ?C?MEMSET
  228: 	m_Index = InputGoodsWayList[m_ChannelNum].SetArrayNo;				
80BDD2 90173E            MOV     DPTR,#m_ChannelNum
80BDD5 E0                MOVX    A,@DPTR
80BDD6 FF                MOV     R7,A
80BDD7 25E0              ADD     A,ACC
80BDD9 25E0              ADD     A,ACC
80BDDB 24D4              ADD     A,#LOW InputGoodsWayList+01H
80BDDD F582              MOV     DPL,A
80BDDF E4                CLR     A
80BDE0 342B              ADDC    A,#HIGH InputGoodsWayList+01H
80BDE2 F583              MOV     DPH,A
80BDE4 E0                MOVX    A,@DPTR
80BDE5 90173F            MOV     DPTR,#m_Index
80BDE8 F0                MOVX    @DPTR,A
  229: //	m_ChannelNum = InputGoodsWayList[m_Index].SetArrayNo;
  230: #ifdef _CHINA_
  231: 	sprintf( m_str, "\xd5\xfd在检测 %02bu 货道", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
  232: 	DisplayStr( 0, 0, 1, m_str, 16 );
  233: 	sprintf( m_str,  "    请稍等..." );			
  234: 	DisplayStr( 0, 1, 1, m_str, 13 );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 458


  235: #else				
  236: 	sprintf( m_str, "Checking Column %02bu", InputGoodsWayList[m_ChannelNum].GoodsWayNo );	
80BDE9 7B80              MOV     R3,#BYTE2 0800D6EH
80BDEB 7A0D              MOV     R2,#HIGH 0800D6EH
80BDED 796E              MOV     R1,#LOW 0800D6EH
80BDEF 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80BDF2 A5128007B6        ECALL   ?C?PSTXDATA
80BDF7 EF                MOV     A,R7
80BDF8 25E0              ADD     A,ACC
80BDFA 25E0              ADD     A,ACC
80BDFC 24D3              ADD     A,#LOW InputGoodsWayList
80BDFE F582              MOV     DPL,A
80BE00 E4                CLR     A
80BE01 342B              ADDC    A,#HIGH InputGoodsWayList
80BE03 F583              MOV     DPH,A
80BE05 E0                MOVX    A,@DPTR
80BE06 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80BE09 F0                MOVX    @DPTR,A
80BE0A 7B00              MOV     R3,#?C?XDATASEG
80BE0C 7A17              MOV     R2,#HIGH m_str
80BE0E 7940              MOV     R1,#LOW m_str
80BE10 A512800949        ECALL   _sprintf
  237: //		Trace( "\n Test goodsCode = %bu", m_ChannelNum );
  238: 	DisplayStr( 0, 0, 1, m_str, 18 );
80BE15 D21A              SETB    ?_DisplayStr?BIT
80BE17 7B00              MOV     R3,#?C?XDATASEG
80BE19 7A17              MOV     R2,#HIGH m_str
80BE1B 7940              MOV     R1,#LOW m_str
80BE1D 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80BE20 A5128007B6        ECALL   ?C?PSTXDATA
80BE25 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80BE28 7412              MOV     A,#012H
80BE2A A51280805E        ECALL   ?L?COM0007
  239: 	sprintf( m_str,  "please wait..." );
80BE2F 7B80              MOV     R3,#BYTE2 0800D26H
80BE31 7A0D              MOV     R2,#HIGH 0800D26H
80BE33 7926              MOV     R1,#LOW 0800D26H
80BE35 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80BE38 A5128007B6        ECALL   ?C?PSTXDATA
80BE3D 7B00              MOV     R3,#?C?XDATASEG
80BE3F 7A17              MOV     R2,#HIGH m_str
80BE41 7940              MOV     R1,#LOW m_str
80BE43 A512800949        ECALL   _sprintf
  240: 	DisplayStr( 0, 1, 1, m_str, 14 );
80BE48 D21A              SETB    ?_DisplayStr?BIT
80BE4A 7B00              MOV     R3,#?C?XDATASEG
80BE4C 7A17              MOV     R2,#HIGH m_str
80BE4E 7940              MOV     R1,#LOW m_str
80BE50 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80BE53 A5128007B6        ECALL   ?C?PSTXDATA
80BE58 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80BE5B 740E              MOV     A,#0EH
80BE5D F0                MOVX    @DPTR,A
80BE5E 7D01              MOV     R5,#01H
80BE60 E4                CLR     A
80BE61 FF                MOV     R7,A
80BE62 A512808062        ECALL   _DisplayStr
  241: #endif	
  242: 	WaitForWork( 100, NULL );		
80BE67 E4                CLR     A
80BE68 7F64              MOV     R7,#064H
80BE6A FE                MOV     R6,A
80BE6B A512807B35        ECALL   ?L?COM000D
  243: 	i = 0;
80BE70 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 459


80BE71 901754            MOV     DPTR,#i
80BE74 F0                MOVX    @DPTR,A
  244: //	i = ChannelExec( m_Index );
  245: 	Trace("\n GoodsWayTest m_Index = %bu", m_Index);
  246: 	i = ChannelTask( m_Index, CHANNEL_TEST );
80BE75 90173F            MOV     DPTR,#m_Index
80BE78 E0                MOVX    A,@DPTR
80BE79 FF                MOV     R7,A
80BE7A 7D52              MOV     R5,#052H
80BE7C A51280BA5C        ECALL   _ChannelTask
80BE81 901754            MOV     DPTR,#i
80BE84 EF                MOV     A,R7
80BE85 F0                MOVX    @DPTR,A
  247: 	//清除其它状态位
  248: 	GoodsWaySetVal[ m_ChannelNum ].WayState = 0x01;
80BE86 90173E            MOV     DPTR,#m_ChannelNum
80BE89 E0                MOVX    A,@DPTR
80BE8A 75F005            MOV     B,#05H
80BE8D 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BE90 A51280079F        ECALL   ?C?OFFXADD
80BE95 7401              MOV     A,#01H
80BE97 F0                MOVX    @DPTR,A
  249: #ifdef _CHINA_
  250: 	if( i )
  251: 	{
  252: 		if( i == 2 )
  253: 		{
  254: 			sprintf( m_str, "  货道板: 故障   " );
  255: 			for( i = 0; i < GOODSWAYNUM; i ++ )
  256: 				GoodsWaySetVal[ i ].WayState |= 0x09;			
  257: 		}				
  258: 		else
  259: 		{
  260: 			GoodsWaySetVal[ m_ChannelNum ].WayState |= 0x03;
  261: 			sprintf( m_str, "  货道%02bu: 故障   ", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
  262: 		}
  263: 	}
  264: 	else
  265: 	{
  266: 		GoodsWaySetVal[ m_ChannelNum ].WayState = 0x01;
  267: 		sprintf( m_str, "  货道 %02bu:  \xd5\xfd常 ", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
  268: 	}
  269: #else
  270: 	if( i )
80BE98 EF                MOV     A,R7
80BE99 6064              JZ      ?C0025?DEVICECHECK
  271: 	{
  272: 		if( i == 2 )
80BE9B 901754            MOV     DPTR,#i
80BE9E E0                MOVX    A,@DPTR
80BE9F 6402              XRL     A,#02H
80BEA1 7040              JNZ     ?C0026?DEVICECHECK
  273: 		{
  274: 			sprintf( m_str, "Broad:   Error   " );
80BEA3 7B80              MOV     R3,#BYTE2 0800D84H
80BEA5 7A0D              MOV     R2,#HIGH 0800D84H
80BEA7 7984              MOV     R1,#LOW 0800D84H
80BEA9 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80BEAC A5128007B6        ECALL   ?C?PSTXDATA
80BEB1 7B00              MOV     R3,#?C?XDATASEG
80BEB3 7A17              MOV     R2,#HIGH m_str
80BEB5 7940              MOV     R1,#LOW m_str
80BEB7 A512800949        ECALL   _sprintf
  275: 			for( i = 0; i < GOODSWAYNUM; i ++ )
80BEBC E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 460


80BEBD 901754            MOV     DPTR,#i
80BEC0 F0                MOVX    @DPTR,A
80BEC1         ?C0027?DEVICECHECK:
80BEC1 901754            MOV     DPTR,#i
80BEC4 E0                MOVX    A,@DPTR
80BEC5 FF                MOV     R7,A
80BEC6 C3                CLR     C
80BEC7 9440              SUBB    A,#040H
80BEC9 5073              JNC     ?C0031?DEVICECHECK
  276: 				GoodsWaySetVal[ i ].WayState |= 0x09;			
80BECB 75F005            MOV     B,#05H
80BECE EF                MOV     A,R7
80BECF 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BED2 A51280079F        ECALL   ?C?OFFXADD
80BED7 E0                MOVX    A,@DPTR
80BED8 4409              ORL     A,#09H
80BEDA F0                MOVX    @DPTR,A
80BEDB 901754            MOV     DPTR,#i
80BEDE E0                MOVX    A,@DPTR
80BEDF 04                INC     A
80BEE0 F0                MOVX    @DPTR,A
80BEE1 80DE              SJMP    ?C0027?DEVICECHECK
  277: 		}			
80BEE3         ?C0026?DEVICECHECK:
  278: 		else
  279: 		{
  280: 			GoodsWaySetVal[ m_ChannelNum ].WayState |= 0x03;
80BEE3 90173E            MOV     DPTR,#m_ChannelNum
80BEE6 E0                MOVX    A,@DPTR
80BEE7 FF                MOV     R7,A
80BEE8 75F005            MOV     B,#05H
80BEEB 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BEEE A51280079F        ECALL   ?C?OFFXADD
80BEF3 E0                MOVX    A,@DPTR
80BEF4 4403              ORL     A,#03H
80BEF6 F0                MOVX    @DPTR,A
  281: 			sprintf( m_str, "column %02bu: Error ", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
80BEF7 7B80              MOV     R3,#BYTE2 0800D96H
80BEF9 7A0D              MOV     R2,#HIGH 0800D96H
80BEFB 7996              MOV     R1,#LOW 0800D96H
  282: 		}
  283: 	}
80BEFD 8019              SJMP    ?C0269?DEVICECHECK
80BEFF         ?C0025?DEVICECHECK:
  284: 	else
  285: 	{
  286: 		GoodsWaySetVal[ m_ChannelNum ].WayState = 0x01;
80BEFF 90173E            MOV     DPTR,#m_ChannelNum
80BF02 E0                MOVX    A,@DPTR
80BF03 FF                MOV     R7,A
80BF04 75F005            MOV     B,#05H
80BF07 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BF0A A51280079F        ECALL   ?C?OFFXADD
80BF0F 7401              MOV     A,#01H
80BF11 F0                MOVX    @DPTR,A
  287: 		sprintf( m_str, "column %02bu:    OK ", InputGoodsWayList[m_ChannelNum].GoodsWayNo );
80BF12 7B80              MOV     R3,#BYTE2 0800DABH
80BF14 7A0D              MOV     R2,#HIGH 0800DABH
80BF16 79AB              MOV     R1,#LOW 0800DABH
80BF18         
80BF18 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80BF1B A5128007B6        ECALL   ?C?PSTXDATA
80BF20 EF                MOV     A,R7
80BF21 25E0              ADD     A,ACC
80BF23 25E0              ADD     A,ACC
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 461


80BF25 24D3              ADD     A,#LOW InputGoodsWayList
80BF27 F582              MOV     DPL,A
80BF29 E4                CLR     A
80BF2A 342B              ADDC    A,#HIGH InputGoodsWayList
80BF2C F583              MOV     DPH,A
80BF2E E0                MOVX    A,@DPTR
80BF2F 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80BF32 F0                MOVX    @DPTR,A
80BF33 7B00              MOV     R3,#?C?XDATASEG
80BF35 7A17              MOV     R2,#HIGH m_str
80BF37 7940              MOV     R1,#LOW m_str
80BF39 A512800949        ECALL   _sprintf
  288: 	}				
80BF3E         ?C0031?DEVICECHECK:
  289: #endif
  290: 	GoodsSetSave = 1;
80BF3E 902DEF            MOV     DPTR,#GoodsSetSave
80BF41 7401              MOV     A,#01H
80BF43 F0                MOVX    @DPTR,A
  291: 	Trace("\n GoodsWayTest GoodsWaySetVal[%bu].WayState = %02bx", m_ChannelNum,GoodsWaySetVal[ m_ChannelNum ].WaySta
>> te );
  292: 	ClearDisplayLine( 1 );
80BF44 FF                MOV     R7,A
80BF45 A5128087BB        ECALL   _ClearDisplayLine
  293: 	DisplayStr( 0, 1, 1, m_str, 17 );
80BF4A D21A              SETB    ?_DisplayStr?BIT
80BF4C 7B00              MOV     R3,#?C?XDATASEG
80BF4E 7A17              MOV     R2,#HIGH m_str
80BF50 7940              MOV     R1,#LOW m_str
80BF52 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80BF55 A5128007B6        ECALL   ?C?PSTXDATA
80BF5A 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80BF5D 7411              MOV     A,#011H
80BF5F A512807B26        ECALL   ?L?COM000B
  294: 	WaitForWork( 2000, NULL );
  295: 	if( i == 3 )
80BF64 901754            MOV     DPTR,#i
80BF67 E0                MOVX    A,@DPTR
80BF68 B40323            CJNE    A,#03H,?C0009?DEVICECHECK
  296: 	{
  297: 		for( i = 0; i < GOODSWAYNUM; i ++ )
80BF6B E4                CLR     A
80BF6C F0                MOVX    @DPTR,A
80BF6D         ?C0033?DEVICECHECK:
80BF6D 901754            MOV     DPTR,#i
80BF70 E0                MOVX    A,@DPTR
80BF71 FF                MOV     R7,A
80BF72 C3                CLR     C
80BF73 9440              SUBB    A,#040H
80BF75 5017              JNC     ?C0009?DEVICECHECK
  298: 		{
  299: 			//清除其它状态位
  300: //			GoodsWaySetVal[ i ].WayState = 0x00;
  301: 			GoodsWaySetVal[ i ].WayState = 0x09;
80BF77 75F005            MOV     B,#05H
80BF7A EF                MOV     A,R7
80BF7B 900003            MOV     DPTR,#GoodsWaySetVal+01H
80BF7E A51280079F        ECALL   ?C?OFFXADD
80BF83 7409              MOV     A,#09H
80BF85 F0                MOVX    @DPTR,A
  302: 		}
80BF86 901754            MOV     DPTR,#i
80BF89 E0                MOVX    A,@DPTR
80BF8A 04                INC     A
80BF8B F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 462


80BF8C 80DF              SJMP    ?C0033?DEVICECHECK
  303: 	}
  304: }
80BF8E         ?C0009?DEVICECHECK:
80BF8E A522              ERET    
----- FUNCTION GoodsWayTest (END) -------


----- FUNCTION ZhkChannelQuery (BEGIN) -----
 FILE: 'scheduler.c'
 1630: bit ZhkChannelQuery( )
 1631: {
 1632: 	struct COMMTASK xdata TaskTemp;
 1633: 	
 1634: 	Channel.CommState       = COMM_BUZY;
80BF90 9023B7            MOV     DPTR,#Channel+02H
80BF93 7401              MOV     A,#01H
80BF95 F0                MOVX    @DPTR,A
 1635: 	TaskTemp.Id 		= ID_CHANNEL;
80BF96 90175D            MOV     DPTR,#TaskTemp+01H
80BF99 7415              MOV     A,#015H
80BF9B F0                MOVX    @DPTR,A
 1636: 	TaskTemp.Cmd 		= CHANNEL_QUERY;
80BF9C A3                INC     DPTR
80BF9D 7451              MOV     A,#051H
80BF9F F0                MOVX    @DPTR,A
 1637: 	TaskTemp.Sn		= Channel.Sn;
80BFA0 9023B6            MOV     DPTR,#Channel+01H
80BFA3 E0                MOVX    A,@DPTR
80BFA4 90175F            MOV     DPTR,#TaskTemp+03H
80BFA7 F0                MOVX    @DPTR,A
 1638: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
80BFA8 90175C            MOV     DPTR,#TaskTemp
80BFAB 7442              MOV     A,#042H
80BFAD F0                MOVX    @DPTR,A
 1639: 	TaskTemp.ParamLen	= 1;
80BFAE 901761            MOV     DPTR,#TaskTemp+05H
80BFB1 7401              MOV     A,#01H
80BFB3 F0                MOVX    @DPTR,A
 1640: 	TaskTemp.Param[ 0 ]     = 0x00;
80BFB4 E4                CLR     A
80BFB5 A3                INC     DPTR
80BFB6 F0                MOVX    @DPTR,A
 1641: 	return ZhkSchedulerAddTask( &TaskTemp );
80BFB7 7E17              MOV     R6,#HIGH TaskTemp
80BFB9 7F5C              MOV     R7,#LOW TaskTemp
80BFBB A5128088CE        ECALL   _ZhkSchedulerAddTask
80BFC0 EF                MOV     A,R7
80BFC1 24FF              ADD     A,#0FFH
 1642: }
80BFC3         ?C0300?SCHEDULER:
80BFC3 A522              ERET    
----- FUNCTION ZhkChannelQuery (END) -------


----- FUNCTION ZhkChannelClear (BEGIN) -----
 FILE: 'scheduler.c'
 1662: bit ZhkChannelClear( )
 1663: {
 1664: 	struct COMMTASK xdata TaskTemp;
 1665: 	
 1666: 	Trace("\nZhkChannelClear" );
 1667: 	Channel.CommState       = COMM_BUZY;
80BFC5 9023B7            MOV     DPTR,#Channel+02H
80BFC8 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 463


80BFCA F0                MOVX    @DPTR,A
 1668: 	TaskTemp.Id 		= ID_CHANNEL;
80BFCB 90175D            MOV     DPTR,#TaskTemp+01H
80BFCE 7415              MOV     A,#015H
80BFD0 F0                MOVX    @DPTR,A
 1669: 	TaskTemp.Cmd 		= CHANNEL_CLEAR;
80BFD1 A3                INC     DPTR
80BFD2 7453              MOV     A,#053H
80BFD4 F0                MOVX    @DPTR,A
 1670: 	TaskTemp.Sn		= Channel.Sn;
80BFD5 9023B6            MOV     DPTR,#Channel+01H
80BFD8 E0                MOVX    A,@DPTR
80BFD9 90175F            MOV     DPTR,#TaskTemp+03H
80BFDC F0                MOVX    @DPTR,A
 1671: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
80BFDD 90175C            MOV     DPTR,#TaskTemp
80BFE0 7442              MOV     A,#042H
80BFE2 F0                MOVX    @DPTR,A
 1672: 	TaskTemp.ParamLen	= 1;
80BFE3 901761            MOV     DPTR,#TaskTemp+05H
80BFE6 7401              MOV     A,#01H
80BFE8 F0                MOVX    @DPTR,A
 1673: 	TaskTemp.Param[ 0 ]     = 0x00;
80BFE9 E4                CLR     A
80BFEA A3                INC     DPTR
80BFEB F0                MOVX    @DPTR,A
 1674: 	return ZhkSchedulerAddTask( &TaskTemp );
80BFEC 7E17              MOV     R6,#HIGH TaskTemp
80BFEE 7F5C              MOV     R7,#LOW TaskTemp
80BFF0 A5128088CE        ECALL   _ZhkSchedulerAddTask
80BFF5 EF                MOV     A,R7
80BFF6 24FF              ADD     A,#0FFH
 1675: }
80BFF8         ?C0302?SCHEDULER:
80BFF8 A522              ERET    
----- FUNCTION ZhkChannelClear (END) -------


----- FUNCTION CheckOperStatus (BEGIN) -----
 FILE: 'mainflow.c'
 1590: u_char CheckOperStatus()
 1591: {	
 1592: 	CurrentPayed = 0; //用户付款计数清零 
 1593: //	CurrentTransType = 0; // 设置空闲状态 	
80BFFA E4                CLR     A
80BFFB 900B1F            MOV     DPTR,#CurrentPayed
80BFFE F0                MOVX    @DPTR,A
80BFFF A3                INC     DPTR
80C000 F0                MOVX    @DPTR,A
 1594: 	CasherGetMachineState( 0 );//空闲状态
80C001 FF                MOV     R7,A
80C002 A51280C01D        ECALL   _CasherGetMachineState
 1595: 	WaitForWork( 10, NULL );
80C007 E4                CLR     A
80C008 7F0A              MOV     R7,#0AH
80C00A FE                MOV     R6,A
80C00B A512807B35        ECALL   ?L?COM000D
 1596: 	if ( IsModeOff() )// 是否模式开关处于关闭状态	
80C010 A51280C416        ECALL   IsModeOff
80C015 7F00              MOV     R7,#00H
80C017 5002              JNC     ?C0358?MAINFLOW
 1597: 		return 1;	
80C019 7F01              MOV     R7,#01H
80C01B         ?C0358?MAINFLOW:
 1598: 	return 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 464


 1599: }
80C01B         ?C0359?MAINFLOW:
80C01B A522              ERET    
----- FUNCTION CheckOperStatus (END) -------


----- FUNCTION _CasherGetMachineState (BEGIN) -----
 FILE: 'scheduler.c'
 1396: void CasherGetMachineState( uchar state )
 1397: {
;---- Variable 'state' assigned to Register 'R7' ----
 1398: 	Casher.ExtState[ 15 ] = state;
 1399: }
80C01D 9023DE            MOV     DPTR,#Casher+013H
80C020 EF                MOV     A,R7
80C021 F0                MOVX    @DPTR,A
 1400: 
80C022 A522              ERET    
----- FUNCTION _CasherGetMachineState (END) -------


----- FUNCTION SellCodeOver (BEGIN) -----
 FILE: 'mainflow.c'
 3417: u_char SellCodeOver()
 3418: {	
 3419: 	KeyLock( );		
 3420: 	SaveTradeParam();
80C024 A5128087F1        ECALL   KeyLock
 3421: 	CasherGetMachineState( 0 );//空闲状态
80C029 A51280C04A        ECALL   SaveTradeParam
 3422: 	CasherResetOuttime();
80C02E E4                CLR     A
80C02F FF                MOV     R7,A
80C030 A51280C01D        ECALL   _CasherGetMachineState
 3423: 	CheckHardWare( 1 );		
80C035 A51280C420        ECALL   CasherResetOuttime
 3424: 	KeyUnLock( );
80C03A 7F01              MOV     R7,#01H
80C03C A5128075BC        ECALL   _CheckHardWare
 3425: //	ChangeOver(); 
80C041 A5128077AE        ECALL   KeyUnLock
 3426: /////////////////////////
 3427: //	LoadGlobalParam();
 3428: ///////////////////////////
 3429: 	return( 1 );
80C046 7F01              MOV     R7,#01H
 3430: }
80C048         ?C0745?MAINFLOW:
80C048 A522              ERET    
----- FUNCTION SellCodeOver (END) -------


----- FUNCTION SaveTradeParam (BEGIN) -----
 FILE: 'CommonFunction.c'
  846: void  SaveTradeParam()
  847: {
  848: 	//本机运行参数
  849: 	MovSramToFlash( ADDRF_TRADECOUNTER , ( unsigned char xdata * )&TradeCounter , sizeof(struct TRADECOUNTER) );
80C04A 7F00              MOV     R7,#00H
80C04C 7E04              MOV     R6,#04H
80C04E 7D08              MOV     R5,#08H
80C050 7C00              MOV     R4,#00H
80C052 752C0A            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH TradeCounter
80C055 752DEC            MOV     ?_MovSramToFlash?BYTE+05H,#LOW TradeCounter
80C058 752E00            MOV     ?_MovSramToFlash?BYTE+06H,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 465


80C05B 752F2A            MOV     ?_MovSramToFlash?BYTE+07H,#02AH
80C05E A50280C063        EJMP    _MovSramToFlash
----- FUNCTION SaveTradeParam (END) -------


----- FUNCTION _MovSramToFlash (BEGIN) -----
 FILE: 'DataExchange.c'
   57: bit MovSramToFlash( ulong FlashAddr , uchar xdata* SramAddr , uint len ) small
   58: {
80C063 8F2B              MOV     FlashAddr+03H,R7
80C065 8E2A              MOV     FlashAddr+02H,R6
80C067 8D29              MOV     FlashAddr+01H,R5
80C069 8C28              MOV     FlashAddr,R4
80C06B         ?C0016?DATAEXCHANGE:
   59: 	uchar xdata TempBuf[ SECTORSIZE ];
   60: 	uint  data len1;
   61: 	uint  data len2;
   62: 
   63: //	Trace("\n FlashAddr2 = 0x%02lx", FlashAddr );
   64: 	while( len > 0)
80C06B D3                SETB    C
80C06C E52F              MOV     A,len+01H
80C06E 9400              SUBB    A,#00H
80C070 E52E              MOV     A,len
80C072 9400              SUBB    A,#00H
80C074 5003              JNC     $ + 5H
80C076 02C178            LJMP    ?C0017?DATAEXCHANGE
   65: 	{
   66: 		len1 = FlashAddr % SECTORSIZE;
80C079 E52B              MOV     A,FlashAddr+03H
80C07B 547F              ANL     A,#07FH
80C07D FF                MOV     R7,A
80C07E E4                CLR     A
80C07F F530              MOV     len1,A
80C081 8F31              MOV     len1+01H,R7
   67: 		len2 = SECTORSIZE - len1;
80C083 7480              MOV     A,#080H
80C085 9531              SUBB    A,len1+01H
80C087 F533              MOV     len2+01H,A
80C089 E4                CLR     A
80C08A 9530              SUBB    A,len1
80C08C F532              MOV     len2,A
   68: 
   69: 		if( len1 > 0 || len2 > len )
80C08E D3                SETB    C
80C08F E531              MOV     A,len1+01H
80C091 9400              SUBB    A,#00H
80C093 E530              MOV     A,len1
80C095 9400              SUBB    A,#00H
80C097 500A              JNC     ?C0019?DATAEXCHANGE
80C099 E533              MOV     A,len2+01H
80C09B 952F              SUBB    A,len+01H
80C09D E532              MOV     A,len2
80C09F 952E              SUBB    A,len
80C0A1 402C              JC      ?C0018?DATAEXCHANGE
80C0A3         ?C0019?DATAEXCHANGE:
   70: 			MovFlashToSram( FlashAddr - len1, TempBuf, SECTORSIZE );
80C0A3 AE30              MOV     R6,len1
80C0A5 AF31              MOV     R7,len1+01H
80C0A7 AB07              MOV     R3,AR7
80C0A9 AA06              MOV     R2,AR6
80C0AB C3                CLR     C
80C0AC E52B              MOV     A,FlashAddr+03H
80C0AE 9B                SUBB    A,R3
80C0AF FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 466


80C0B0 E52A              MOV     A,FlashAddr+02H
80C0B2 9A                SUBB    A,R2
80C0B3 FE                MOV     R6,A
80C0B4 E529              MOV     A,FlashAddr+01H
80C0B6 9400              SUBB    A,#00H
80C0B8 FD                MOV     R5,A
80C0B9 E528              MOV     A,FlashAddr
80C0BB 9400              SUBB    A,#00H
80C0BD FC                MOV     R4,A
80C0BE 753817            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TempBuf
80C0C1 753933            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TempBuf
80C0C4 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80C0C7 753B80            MOV     ?_MovFlashToSram?BYTE+07H,#080H
80C0CA A51280C181        ECALL   _MovFlashToSram
80C0CF         ?C0018?DATAEXCHANGE:
   71: 
   72: 		len2 = (len > len2) ? len2 : len;
80C0CF D3                SETB    C
80C0D0 E52F              MOV     A,len+01H
80C0D2 9533              SUBB    A,len2+01H
80C0D4 E52E              MOV     A,len
80C0D6 9532              SUBB    A,len2
80C0D8 4006              JC      ?C0020?DATAEXCHANGE
80C0DA AE32              MOV     R6,len2
80C0DC AF33              MOV     R7,len2+01H
80C0DE 8004              SJMP    ?C0021?DATAEXCHANGE
80C0E0         ?C0020?DATAEXCHANGE:
80C0E0 AE2E              MOV     R6,len
80C0E2 AF2F              MOV     R7,len+01H
80C0E4         ?C0021?DATAEXCHANGE:
80C0E4 8E32              MOV     len2,R6
80C0E6 8F33              MOV     len2+01H,R7
   73: 		MovSramToSram( SramAddr, TempBuf + len1, len2 );		
80C0E8 7433              MOV     A,#LOW TempBuf
80C0EA 2531              ADD     A,len1+01H
80C0EC F582              MOV     DPL,A
80C0EE E4                CLR     A
80C0EF 3417              ADDC    A,#HIGH TempBuf
80C0F1 AD82              MOV     R5,DPL
80C0F3 FC                MOV     R4,A
80C0F4 AB33              MOV     R3,len2+01H
80C0F6 AA32              MOV     R2,len2
80C0F8 AF2D              MOV     R7,SramAddr+01H
80C0FA AE2C              MOV     R6,SramAddr
80C0FC A51280C4B5        ECALL   _MovSramToSram
   74: 
   75: 		if ( FlashAddr & 0x80000 == 0) 
   76: 			P1 = 0x09;
80C101         ?C0022?DATAEXCHANGE:
   77: 		else
   78: 			P1 = 0x0a;		
80C101 75900A            MOV     P1,#0AH
80C104         ?C0023?DATAEXCHANGE:
   79: 
   80: 		SstFlashSectorErase( FlashAddr );
80C104 AF2B              MOV     R7,FlashAddr+03H
80C106 AE2A              MOV     R6,FlashAddr+02H
80C108 AD29              MOV     R5,FlashAddr+01H
80C10A AC28              MOV     R4,FlashAddr
80C10C A51280C5AC        ECALL   _SstFlashSectorErase
   81: 		ZhkHardSramSelect();		
80C111 759008            MOV     P1,#08H
   82: 		PogramFlash( FlashAddr - len1, TempBuf, SECTORSIZE );
80C114 AE30              MOV     R6,len1
80C116 AF31              MOV     R7,len1+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 467


80C118 AB07              MOV     R3,AR7
80C11A AA06              MOV     R2,AR6
80C11C C3                CLR     C
80C11D E52B              MOV     A,FlashAddr+03H
80C11F 9B                SUBB    A,R3
80C120 FF                MOV     R7,A
80C121 E52A              MOV     A,FlashAddr+02H
80C123 9A                SUBB    A,R2
80C124 FE                MOV     R6,A
80C125 E529              MOV     A,FlashAddr+01H
80C127 9400              SUBB    A,#00H
80C129 FD                MOV     R5,A
80C12A E528              MOV     A,FlashAddr
80C12C 9400              SUBB    A,#00H
80C12E FC                MOV     R4,A
80C12F 753817            MOV     ?_PogramFlash?BYTE+04H,#HIGH TempBuf
80C132 753933            MOV     ?_PogramFlash?BYTE+05H,#LOW TempBuf
80C135 753A00            MOV     ?_PogramFlash?BYTE+06H,#00H
80C138 753B80            MOV     ?_PogramFlash?BYTE+07H,#080H
80C13B A51280C378        ECALL   _PogramFlash
   83: 
   84: 		FlashAddr += len2;
80C140 E4                CLR     A
80C141 FC                MOV     R4,A
80C142 FD                MOV     R5,A
80C143 E52B              MOV     A,FlashAddr+03H
80C145 2533              ADD     A,len2+01H
80C147 FF                MOV     R7,A
80C148 E52A              MOV     A,FlashAddr+02H
80C14A 3532              ADDC    A,len2
80C14C FE                MOV     R6,A
80C14D ED                MOV     A,R5
80C14E 3529              ADDC    A,FlashAddr+01H
80C150 FD                MOV     R5,A
80C151 EC                MOV     A,R4
80C152 3528              ADDC    A,FlashAddr
80C154 8F2B              MOV     FlashAddr+03H,R7
80C156 8E2A              MOV     FlashAddr+02H,R6
80C158 8D29              MOV     FlashAddr+01H,R5
80C15A F528              MOV     FlashAddr,A
   85: 		SramAddr += len2;
80C15C E533              MOV     A,len2+01H
80C15E 252D              ADD     A,SramAddr+01H
80C160 F52D              MOV     SramAddr+01H,A
80C162 E532              MOV     A,len2
80C164 352C              ADDC    A,SramAddr
80C166 F52C              MOV     SramAddr,A
   86: 		len -= len2;
80C168 C3                CLR     C
80C169 E52F              MOV     A,len+01H
80C16B 9533              SUBB    A,len2+01H
80C16D F52F              MOV     len+01H,A
80C16F E52E              MOV     A,len
80C171 9532              SUBB    A,len2
80C173 F52E              MOV     len,A
   87: 	}
80C175 02C06B            LJMP    ?C0016?DATAEXCHANGE
80C178         ?C0017?DATAEXCHANGE:
   88: 
   89: 	return 1;
80C178 D3                SETB    C
   90: }
80C179         ?C0024?DATAEXCHANGE:
80C179 A522              ERET    
----- FUNCTION _MovSramToFlash (END) -------
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 468




----- FUNCTION ?L?COM0030 (BEGIN) -----
80C17B 753A01            MOV     ?_MovFlashToSram?BYTE+06H,#01H
80C17E 753B40            MOV     ?_MovFlashToSram?BYTE+07H,#040H
----- FUNCTION _MovFlashToSram (BEGIN) -----
 FILE: 'DataExchange.c'
   92: bit MovFlashToSram( ulong FlashAddr , uchar xdata* SramAddr , uint len ) small
   93: {
80C181 8F37              MOV     FlashAddr+03H,R7
80C183 8E36              MOV     FlashAddr+02H,R6
80C185 8D35              MOV     FlashAddr+01H,R5
80C187 8C34              MOV     FlashAddr,R4
80C189         ?C0025?DATAEXCHANGE:
   94: 	uint data lentemp;
   95: 	
   96: 	while( len > 0 )
80C189 D3                SETB    C
80C18A E53B              MOV     A,len+01H
80C18C 9400              SUBB    A,#00H
80C18E E53A              MOV     A,len
80C190 9400              SUBB    A,#00H
80C192 5003              JNC     $ + 5H
80C194 02C229            LJMP    ?C0026?DATAEXCHANGE
   97: 	{
   98: 		lentemp = (len > sizeof( Cache )) ? sizeof( Cache ) : len;
80C197 D3                SETB    C
80C198 E53B              MOV     A,len+01H
80C19A 9440              SUBB    A,#040H
80C19C E53A              MOV     A,len
80C19E 9400              SUBB    A,#00H
80C1A0 4006              JC      ?C0027?DATAEXCHANGE
80C1A2 7E00              MOV     R6,#00H
80C1A4 7F40              MOV     R7,#040H
80C1A6 8004              SJMP    ?C0028?DATAEXCHANGE
80C1A8         ?C0027?DATAEXCHANGE:
80C1A8 AE3A              MOV     R6,len
80C1AA AF3B              MOV     R7,len+01H
80C1AC         ?C0028?DATAEXCHANGE:
80C1AC 8E3C              MOV     lentemp,R6
80C1AE 8F3D              MOV     lentemp+01H,R7
   99: 		////////////////////////
  100: //		MovDataFromFlash( FlashAddr, Cache, lentemp );
  101: /*		if ( (FlashAddr & 0x80000) == 0) 
  102: 			ZhkHardFlashSelect();			
  103: 		else
  104: 			ZhkHardFlash1Select();	
  105: */			
  106: 		if ( (FlashAddr & 0x80000) == 0) 			
80C1B0 E4                CLR     A
80C1B1 FF                MOV     R7,A
80C1B2 FE                MOV     R6,A
80C1B3 E535              MOV     A,FlashAddr+01H
80C1B5 5408              ANL     A,#08H
80C1B7 FD                MOV     R5,A
80C1B8 E4                CLR     A
80C1B9 FC                MOV     R4,A
80C1BA FB                MOV     R3,A
80C1BB FA                MOV     R2,A
80C1BC F9                MOV     R1,A
80C1BD F8                MOV     R0,A
80C1BE C3                CLR     C
80C1BF A51280070E        ECALL   ?C?ULCMP
80C1C4 7005              JNZ     ?C0029?DATAEXCHANGE
  107: 			P1 = 0x09;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 469


80C1C6 759009            MOV     P1,#09H
80C1C9 8003              SJMP    ?C0030?DATAEXCHANGE
80C1CB         ?C0029?DATAEXCHANGE:
  108: 		else			
  109: 			P1 = 0x0a;
80C1CB 75900A            MOV     P1,#0AH
80C1CE         ?C0030?DATAEXCHANGE:
  110: 
  111: 		SstFlashReadString( FlashAddr ,Cache , lentemp );
80C1CE AF37              MOV     R7,FlashAddr+03H
80C1D0 AE36              MOV     R6,FlashAddr+02H
80C1D2 AD35              MOV     R5,FlashAddr+01H
80C1D4 AC34              MOV     R4,FlashAddr
80C1D6 754250            MOV     ?_SstFlashReadString?BYTE+04H,#LOW Cache
80C1D9 853D43            MOV     ?_SstFlashReadString?BYTE+05H,lentemp+01H
80C1DC A51280C4F8        ECALL   _SstFlashReadString
  112: 		ZhkHardSramSelect();		
80C1E1 759008            MOV     P1,#08H
  113: 
  114: 		MovDataToSram( SramAddr,Cache,lentemp);	
80C1E4 7D50              MOV     R5,#LOW Cache
80C1E6 AB3D              MOV     R3,lentemp+01H
80C1E8 AF39              MOV     R7,SramAddr+01H
80C1EA AE38              MOV     R6,SramAddr
80C1EC A51280C488        ECALL   _MovDataToSram
  115: //		memcpy( SramAddr,Cache,lentemp);	
  116: 
  117: 		FlashAddr += lentemp;
80C1F1 E4                CLR     A
80C1F2 FC                MOV     R4,A
80C1F3 FD                MOV     R5,A
80C1F4 E537              MOV     A,FlashAddr+03H
80C1F6 253D              ADD     A,lentemp+01H
80C1F8 FF                MOV     R7,A
80C1F9 E536              MOV     A,FlashAddr+02H
80C1FB 353C              ADDC    A,lentemp
80C1FD FE                MOV     R6,A
80C1FE ED                MOV     A,R5
80C1FF 3535              ADDC    A,FlashAddr+01H
80C201 FD                MOV     R5,A
80C202 EC                MOV     A,R4
80C203 3534              ADDC    A,FlashAddr
80C205 8F37              MOV     FlashAddr+03H,R7
80C207 8E36              MOV     FlashAddr+02H,R6
80C209 8D35              MOV     FlashAddr+01H,R5
80C20B F534              MOV     FlashAddr,A
  118: 		SramAddr += lentemp;
80C20D E53D              MOV     A,lentemp+01H
80C20F 2539              ADD     A,SramAddr+01H
80C211 F539              MOV     SramAddr+01H,A
80C213 E53C              MOV     A,lentemp
80C215 3538              ADDC    A,SramAddr
80C217 F538              MOV     SramAddr,A
  119: 		len -= lentemp;
80C219 C3                CLR     C
80C21A E53B              MOV     A,len+01H
80C21C 953D              SUBB    A,lentemp+01H
80C21E F53B              MOV     len+01H,A
80C220 E53A              MOV     A,len
80C222 953C              SUBB    A,lentemp
80C224 F53A              MOV     len,A
  120: 	}
80C226 02C189            LJMP    ?C0025?DATAEXCHANGE
80C229         ?C0026?DATAEXCHANGE:
  121: 	return 1;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 470


80C229 D3                SETB    C
  122: }
80C22A         ?C0031?DATAEXCHANGE:
80C22A A522              ERET    
----- FUNCTION _MovFlashToSram (END) -------


----- FUNCTION LoadGlobalParam (BEGIN) -----
 FILE: 'CommonFunction.c'
  798: void   LoadGlobalParam()
  799: {
  800: 	u_char xdata i = 0;		
  801: 	
80C22C E4                CLR     A
80C22D 90159B            MOV     DPTR,#i
80C230 F0                MOVX    @DPTR,A
  802: 	memset( &SystemParameter, 0, sizeof( SystemParameter ) );
80C231 FE                MOV     R6,A
80C232 7F4B              MOV     R7,#04BH
80C234 FD                MOV     R5,A
80C235 7B00              MOV     R3,#?C?XDATASEG
80C237 7A04              MOV     R2,#HIGH SystemParameter
80C239 791E              MOV     R1,#LOW SystemParameter
80C23B A5128008A6        ECALL   ?C?MEMSET
  803: 	memset( GoodsWaySetVal, 0, sizeof( GoodsWaySetVal ) );
80C240 7E01              MOV     R6,#01H
80C242 7F40              MOV     R7,#040H
80C244 7D00              MOV     R5,#00H
80C246 7B00              MOV     R3,#?C?XDATASEG
80C248 7A00              MOV     R2,#HIGH GoodsWaySetVal
80C24A 7902              MOV     R1,#LOW GoodsWaySetVal
80C24C A5128008A6        ECALL   ?C?MEMSET
  804: 	memset( &TradeCounter, 0, sizeof(struct TRADECOUNTER) ); 
80C251 7E00              MOV     R6,#00H
80C253 7F2A              MOV     R7,#02AH
80C255 7D00              MOV     R5,#00H
80C257 7B00              MOV     R3,#?C?XDATASEG
80C259 7A0A              MOV     R2,#HIGH TradeCounter
80C25B 79EC              MOV     R1,#LOW TradeCounter
80C25D A5128008A6        ECALL   ?C?MEMSET
  805: 	memset( TradeLog, 0, sizeof(struct TRADELOG) * GOODSWAYNUM ); 	
80C262 7E02              MOV     R6,#02H
80C264 7F40              MOV     R7,#040H
80C266 7D00              MOV     R5,#00H
80C268 7B00              MOV     R3,#?C?XDATASEG
80C26A 7A01              MOV     R2,#HIGH TradeLog
80C26C 79C5              MOV     R1,#LOW TradeLog
80C26E A5128008A6        ECALL   ?C?MEMSET
  806: 	memset( iRackSet, 0, sizeof(struct RackSet) * RACKNUM ); 	
80C273 7E00              MOV     R6,#00H
80C275 7F18              MOV     R7,#018H
80C277 7D00              MOV     R5,#00H
80C279 7B00              MOV     R3,#?C?XDATASEG
80C27B 7A04              MOV     R2,#HIGH iRackSet
80C27D 7905              MOV     R1,#LOW iRackSet
80C27F A5128008A6        ECALL   ?C?MEMSET
  807: 	memset( iRackColumnSet, 0, sizeof(struct RackColumnSet) * RACKNUM * RACKCOLUMNNUM );
80C284 7E00              MOV     R6,#00H
80C286 7F80              MOV     R7,#080H
80C288 7D00              MOV     R5,#00H
80C28A 7B00              MOV     R3,#?C?XDATASEG
80C28C 7A01              MOV     R2,#HIGH iRackColumnSet
80C28E 7944              MOV     R1,#LOW iRackColumnSet
80C290 A5128008A6        ECALL   ?C?MEMSET
  808: 	//本机系统参数
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 471


  809: 	MovFlashToSram( ADDRF_SYSTEMPARAM , ( unsigned char xdata * )&SystemParameter , sizeof(struct SYSTEMPARAMETER) )
>> ;	
80C295 7F80              MOV     R7,#080H
80C297 7E01              MOV     R6,#01H
80C299 7D08              MOV     R5,#08H
80C29B 7C00              MOV     R4,#00H
80C29D 753804            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH SystemParameter
80C2A0 75391E            MOV     ?_MovFlashToSram?BYTE+05H,#LOW SystemParameter
80C2A3 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80C2A6 753B4B            MOV     ?_MovFlashToSram?BYTE+07H,#04BH
80C2A9 A51280C181        ECALL   _MovFlashToSram
  810: 	MovFlashToSram( ADDRF_GOODSWAYS_SET , ( unsigned char xdata * )GoodsWaySetVal , sizeof( GoodsWaySetVal ) );	
80C2AE 7F80              MOV     R7,#080H
80C2B0 7E02              MOV     R6,#02H
80C2B2 7D08              MOV     R5,#08H
80C2B4 7C00              MOV     R4,#00H
80C2B6 753800            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH GoodsWaySetVal
80C2B9 753902            MOV     ?_MovFlashToSram?BYTE+05H,#LOW GoodsWaySetVal
80C2BC A51280C17B        ECALL   ?L?COM0030
  811: 	//交易记录
  812: 	MovFlashToSram( ADDRF_TRADECOUNTER , ( unsigned char xdata * )&TradeCounter , sizeof(struct TRADECOUNTER) );		
80C2C1 7F00              MOV     R7,#00H
80C2C3 7E04              MOV     R6,#04H
80C2C5 7D08              MOV     R5,#08H
80C2C7 7C00              MOV     R4,#00H
80C2C9 75380A            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TradeCounter
80C2CC 7539EC            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TradeCounter
80C2CF 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80C2D2 753B2A            MOV     ?_MovFlashToSram?BYTE+07H,#02AH
80C2D5 A51280C181        ECALL   _MovFlashToSram
  813: 	//货道交易LOG设置
  814: 	MovFlashToSram( ADDRF_WAYSTARDE_LOG , ( unsigned char xdata * )TradeLog , sizeof(struct TRADELOG) * GOODSWAYNUM 
>> );	
80C2DA 7F80              MOV     R7,#080H
80C2DC 7E04              MOV     R6,#04H
80C2DE 7D08              MOV     R5,#08H
80C2E0 7C00              MOV     R4,#00H
80C2E2 753801            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH TradeLog
80C2E5 7539C5            MOV     ?_MovFlashToSram?BYTE+05H,#LOW TradeLog
80C2E8 753A02            MOV     ?_MovFlashToSram?BYTE+06H,#02H
80C2EB 753B40            MOV     ?_MovFlashToSram?BYTE+07H,#040H
80C2EE A51280C181        ECALL   _MovFlashToSram
  815: 	//货架配置
  816: 	MovFlashToSram( ADDRF_RACK_SET , ( unsigned char xdata * )iRackSet , sizeof(struct RackSet) * RACKNUM );		
80C2F3 7F00              MOV     R7,#00H
80C2F5 7E07              MOV     R6,#07H
80C2F7 7D08              MOV     R5,#08H
80C2F9 7C00              MOV     R4,#00H
80C2FB 753804            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH iRackSet
80C2FE 753905            MOV     ?_MovFlashToSram?BYTE+05H,#LOW iRackSet
80C301 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80C304 753B18            MOV     ?_MovFlashToSram?BYTE+07H,#018H
80C307 A51280C181        ECALL   _MovFlashToSram
  817: 	//货道配置
  818: 	MovFlashToSram( ADDRF_RACK_COLUMN_SET , ( unsigned char xdata * )iRackColumnSet , sizeof(struct RackColumnSet) *
>>  RACKNUM * RACKCOLUMNNUM );		
80C30C 7F00              MOV     R7,#00H
80C30E 7E08              MOV     R6,#08H
80C310 7D08              MOV     R5,#08H
80C312 7C00              MOV     R4,#00H
80C314 753801            MOV     ?_MovFlashToSram?BYTE+04H,#HIGH iRackColumnSet
80C317 753944            MOV     ?_MovFlashToSram?BYTE+05H,#LOW iRackColumnSet
80C31A 753A00            MOV     ?_MovFlashToSram?BYTE+06H,#00H
80C31D 753B80            MOV     ?_MovFlashToSram?BYTE+07H,#080H
80C320 A50280C181        EJMP    _MovFlashToSram
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 472


----- FUNCTION LoadGlobalParam (END) -------


----- FUNCTION ?L?COM002C (BEGIN) -----
80C325 A51280079F        ECALL   ?C?OFFXADD
80C32A E4                CLR     A
80C32B 75F001            MOV     B,#01H
80C32E A512800600        ECALL   ?C?IILDX
----- FUNCTION SaveTradeCounter (BEGIN) -----
 FILE: 'CommonFunction.c'
  853: void SaveTradeCounter()
  854: {
  855: 	//货道交易LOG设置
  856: 	MovSramToFlash( ADDRF_WAYSTARDE_LOG , ( unsigned char xdata * )TradeLog , sizeof(struct TRADELOG) * GOODSWAYNUM 
>> );		
80C333 7F80              MOV     R7,#080H
80C335 7E04              MOV     R6,#04H
80C337 7D08              MOV     R5,#08H
80C339 7C00              MOV     R4,#00H
80C33B 752C01            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH TradeLog
80C33E 752DC5            MOV     ?_MovSramToFlash?BYTE+05H,#LOW TradeLog
80C341 752E02            MOV     ?_MovSramToFlash?BYTE+06H,#02H
80C344 752F40            MOV     ?_MovSramToFlash?BYTE+07H,#040H
80C347 A50280C063        EJMP    _MovSramToFlash
----- FUNCTION SaveTradeCounter (END) -------


----- FUNCTION ?L?COM0027 (BEGIN) -----
80C34C 900B22            MOV     DPTR,#CurrentStockCode
80C34F E0                MOVX    A,@DPTR
80C350 75F005            MOV     B,#05H
80C353 900003            MOV     DPTR,#GoodsWaySetVal+01H
80C356 A51280079F        ECALL   ?C?OFFXADD
80C35B E0                MOVX    A,@DPTR
80C35C 4402              ORL     A,#02H
80C35E F0                MOVX    @DPTR,A
----- FUNCTION SaveGoodsSet (BEGIN) -----
 FILE: 'CommonFunction.c'
  823: void SaveGoodsSet()
  824: {	
  825: 	MovSramToFlash( ADDRF_GOODSWAYS_SET , ( unsigned char xdata * )GoodsWaySetVal , sizeof(GoodsWaySetVal) );	
  826: }
80C35F 7F80              MOV     R7,#080H
80C361 7E02              MOV     R6,#02H
80C363 7D08              MOV     R5,#08H
80C365 7C00              MOV     R4,#00H
80C367 752C00            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH GoodsWaySetVal
80C36A 752D02            MOV     ?_MovSramToFlash?BYTE+05H,#LOW GoodsWaySetVal
80C36D 752E01            MOV     ?_MovSramToFlash?BYTE+06H,#01H
80C370 752F40            MOV     ?_MovSramToFlash?BYTE+07H,#040H
80C373 A50280C063        EJMP    _MovSramToFlash
----- FUNCTION SaveGoodsSet (END) -------


----- FUNCTION _PogramFlash (BEGIN) -----
 FILE: 'DataExchange.c'
   32: bit PogramFlash( ulong FlashAddr , uchar xdata* SramAddr , uint len ) small
   33: {
80C378 8F37              MOV     FlashAddr+03H,R7
80C37A 8E36              MOV     FlashAddr+02H,R6
80C37C 8D35              MOV     FlashAddr+01H,R5
80C37E 8C34              MOV     FlashAddr,R4
80C380         ?C0010?DATAEXCHANGE:
   34: 	uchar data lentemp;
   35: 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 473


   36: 	while( len )
80C380 E53B              MOV     A,len+01H
80C382 453A              ORL     A,len
80C384 7003              JNZ     $ + 5H
80C386 02C413            LJMP    ?C0011?DATAEXCHANGE
   37: 	{
   38: 		lentemp = sizeof( Cache );
80C389 753C40            MOV     lentemp,#040H
   39: 		if ( len < sizeof( Cache ) ) 
80C38C C3                CLR     C
80C38D E53B              MOV     A,len+01H
80C38F 9440              SUBB    A,#040H
80C391 E53A              MOV     A,len
80C393 9400              SUBB    A,#00H
80C395 5003              JNC     ?C0012?DATAEXCHANGE
   40: 			lentemp = len;		
80C397 853B3C            MOV     lentemp,len+01H
80C39A         ?C0012?DATAEXCHANGE:
   41: 
   42: 		MovDataFromSram( SramAddr , Cache , lentemp );
80C39A 7D50              MOV     R5,#LOW Cache
80C39C AB3C              MOV     R3,lentemp
80C39E AF39              MOV     R7,SramAddr+01H
80C3A0 AE38              MOV     R6,SramAddr
80C3A2 A51280C45D        ECALL   _MovDataFromSram
   43: 		if ( (FlashAddr & 0x80000) == 0) 			
80C3A7 E4                CLR     A
80C3A8 FF                MOV     R7,A
80C3A9 FE                MOV     R6,A
80C3AA E535              MOV     A,FlashAddr+01H
80C3AC 5408              ANL     A,#08H
80C3AE FD                MOV     R5,A
80C3AF E4                CLR     A
80C3B0 FC                MOV     R4,A
80C3B1 FB                MOV     R3,A
80C3B2 FA                MOV     R2,A
80C3B3 F9                MOV     R1,A
80C3B4 F8                MOV     R0,A
80C3B5 C3                CLR     C
80C3B6 A51280070E        ECALL   ?C?ULCMP
80C3BB 7005              JNZ     ?C0013?DATAEXCHANGE
   44: 			P1 = 0x09;
80C3BD 759009            MOV     P1,#09H
80C3C0 8003              SJMP    ?C0014?DATAEXCHANGE
80C3C2         ?C0013?DATAEXCHANGE:
   45: 		else			
   46: 			P1 = 0x0a;
80C3C2 75900A            MOV     P1,#0AH
80C3C5         ?C0014?DATAEXCHANGE:
   47: 
   48: 		SstFlashStringProgam( FlashAddr , Cache , lentemp );
80C3C5 AF37              MOV     R7,FlashAddr+03H
80C3C7 AE36              MOV     R6,FlashAddr+02H
80C3C9 AD35              MOV     R5,FlashAddr+01H
80C3CB AC34              MOV     R4,FlashAddr
80C3CD 754150            MOV     ?_SstFlashStringProgam?BYTE+04H,#LOW Cache
80C3D0 853C42            MOV     ?_SstFlashStringProgam?BYTE+05H,lentemp
80C3D3 A51280C61A        ECALL   _SstFlashStringProgam
   49: 		ZhkHardSramSelect();
80C3D8 759008            MOV     P1,#08H
   50: 		FlashAddr += lentemp;
80C3DB E4                CLR     A
80C3DC FC                MOV     R4,A
80C3DD FD                MOV     R5,A
80C3DE FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 474


80C3DF E537              MOV     A,FlashAddr+03H
80C3E1 253C              ADD     A,lentemp
80C3E3 FF                MOV     R7,A
80C3E4 EE                MOV     A,R6
80C3E5 3536              ADDC    A,FlashAddr+02H
80C3E7 FE                MOV     R6,A
80C3E8 ED                MOV     A,R5
80C3E9 3535              ADDC    A,FlashAddr+01H
80C3EB FD                MOV     R5,A
80C3EC EC                MOV     A,R4
80C3ED 3534              ADDC    A,FlashAddr
80C3EF 8F37              MOV     FlashAddr+03H,R7
80C3F1 8E36              MOV     FlashAddr+02H,R6
80C3F3 8D35              MOV     FlashAddr+01H,R5
80C3F5 F534              MOV     FlashAddr,A
   51: 		SramAddr  += lentemp;		
80C3F7 AF3C              MOV     R7,lentemp
80C3F9 7E00              MOV     R6,#00H
80C3FB EF                MOV     A,R7
80C3FC 2539              ADD     A,SramAddr+01H
80C3FE F539              MOV     SramAddr+01H,A
80C400 EE                MOV     A,R6
80C401 3538              ADDC    A,SramAddr
80C403 F538              MOV     SramAddr,A
   52: 		len       -= lentemp;
80C405 C3                CLR     C
80C406 E53B              MOV     A,len+01H
80C408 9F                SUBB    A,R7
80C409 F53B              MOV     len+01H,A
80C40B E53A              MOV     A,len
80C40D 9E                SUBB    A,R6
80C40E F53A              MOV     len,A
   53: 	}	
80C410 02C380            LJMP    ?C0010?DATAEXCHANGE
80C413         ?C0011?DATAEXCHANGE:
   54: 	return 1;
80C413 D3                SETB    C
   55: }
80C414         ?C0015?DATAEXCHANGE:
80C414 A522              ERET    
----- FUNCTION _PogramFlash (END) -------


----- FUNCTION IsModeOff (BEGIN) -----
 FILE: 'IOInput.c'
   43: bit IsModeOff( void )
   44: {
   45: 	return ZhkModeState == 0;
   46: }
80C416 902DE5            MOV     DPTR,#ZhkModeState
80C419 E0                MOVX    A,@DPTR
80C41A C3                CLR     C
80C41B 7001              JNZ     ?C0001?IOINPUT
80C41D D3                SETB    C
80C41E         ?C0001?IOINPUT:
80C41E         ?C0002?IOINPUT:
   47: 
80C41E         ?C0003?IOINPUT:
80C41E A522              ERET    
----- FUNCTION IsModeOff (END) -------


----- FUNCTION CasherResetOuttime (BEGIN) -----
 FILE: 'scheduler.c'
 1413: void CasherResetOuttime( void )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 475


 1414: {	
 1415: 	Casher.CommState  = COMM_COMMOK;	
 1416: 	QueryCashTimer = 0;
80C420 9023CD            MOV     DPTR,#Casher+02H
80C423 7404              MOV     A,#04H
80C425 F0                MOVX    @DPTR,A
 1417: }
80C426 E4                CLR     A
80C427 F515              MOV     QueryCashTimer,A
 1418: 
80C429 A522              ERET    
----- FUNCTION CasherResetOuttime (END) -------


----- FUNCTION SaveRackSet (BEGIN) -----
 FILE: 'CommonFunction.c'
  860: void SaveRackSet()
  861: {
  862: 	//货架配置
  863: 	MovSramToFlash( ADDRF_RACK_SET , ( unsigned char xdata * )iRackSet , sizeof(struct RackSet) * RACKNUM );		
80C42B 7F00              MOV     R7,#00H
80C42D 7E07              MOV     R6,#07H
80C42F 7D08              MOV     R5,#08H
80C431 7C00              MOV     R4,#00H
80C433 752C04            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH iRackSet
80C436 752D05            MOV     ?_MovSramToFlash?BYTE+05H,#LOW iRackSet
80C439 752E00            MOV     ?_MovSramToFlash?BYTE+06H,#00H
80C43C 752F18            MOV     ?_MovSramToFlash?BYTE+07H,#018H
80C43F A50280C063        EJMP    _MovSramToFlash
----- FUNCTION SaveRackSet (END) -------


----- FUNCTION SaveRackColumnSet (BEGIN) -----
 FILE: 'CommonFunction.c'
  867: void SaveRackColumnSet()
  868: {
  869: 	//货道配置
  870: 	MovSramToFlash( ADDRF_RACK_COLUMN_SET , ( unsigned char xdata * )iRackColumnSet , sizeof(struct RackColumnSet) *
>>  RACKNUM * RACKCOLUMNNUM );		
80C444 7F00              MOV     R7,#00H
80C446 7E08              MOV     R6,#08H
80C448 7D08              MOV     R5,#08H
80C44A 7C00              MOV     R4,#00H
80C44C 752C01            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH iRackColumnSet
80C44F 752D44            MOV     ?_MovSramToFlash?BYTE+05H,#LOW iRackColumnSet
80C452 752E00            MOV     ?_MovSramToFlash?BYTE+06H,#00H
80C455 752F80            MOV     ?_MovSramToFlash?BYTE+07H,#080H
80C458 A50280C063        EJMP    _MovSramToFlash
----- FUNCTION SaveRackColumnSet (END) -------


----- FUNCTION _MovDataFromSram (BEGIN) -----
 FILE: 'DataExchange.c'
    9: bit MovDataFromSram( uchar xdata* SramAddr , uchar idata* RamAddr , uchar len )
   10: {
80C45D 9017B3            MOV     DPTR,#SramAddr
80C460 EE                MOV     A,R6
80C461 F0                MOVX    @DPTR,A
80C462 A3                INC     DPTR
80C463 EF                MOV     A,R7
80C464 F0                MOVX    @DPTR,A
;---- Variable 'len' assigned to Register 'R3' ----
;---- Variable 'RamAddr' assigned to Register 'R5' ----
   11: 	while(len --)
80C465         ?C0001?DATAEXCHANGE:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 476


   12: 		*RamAddr ++ = *SramAddr ++;
80C465 AF03              MOV     R7,AR3
80C467 1B                DEC     R3
80C468 EF                MOV     A,R7
80C469 601A              JZ      ?C0002?DATAEXCHANGE
   13: 
80C46B 9017B3            MOV     DPTR,#SramAddr
80C46E E4                CLR     A
80C46F 75F001            MOV     B,#01H
80C472 A512800617        ECALL   ?C?ILDIX
80C477 85F082            MOV     DPL,B
80C47A F583              MOV     DPH,A
80C47C E0                MOVX    A,@DPTR
80C47D AE05              MOV     R6,AR5
80C47F 0D                INC     R5
80C480 A806              MOV     R0,AR6
80C482 F6                MOV     @R0,A
80C483 80E0              SJMP    ?C0001?DATAEXCHANGE
80C485         ?C0002?DATAEXCHANGE:
   14: 	return 1;	
80C485 D3                SETB    C
   15: }
80C486         ?C0003?DATAEXCHANGE:
80C486 A522              ERET    
----- FUNCTION _MovDataFromSram (END) -------


----- FUNCTION _MovDataToSram (BEGIN) -----
 FILE: 'DataExchange.c'
   17: bit MovDataToSram( uchar xdata* SramAddr , uchar idata* RamAddr , uchar len )
   18: {
80C488 9017B3            MOV     DPTR,#SramAddr
80C48B EE                MOV     A,R6
80C48C F0                MOVX    @DPTR,A
80C48D A3                INC     DPTR
80C48E EF                MOV     A,R7
80C48F F0                MOVX    @DPTR,A
;---- Variable 'len' assigned to Register 'R3' ----
;---- Variable 'RamAddr' assigned to Register 'R5' ----
   19: 	while(len --)
80C490         ?C0004?DATAEXCHANGE:
   20: 		*SramAddr ++ = *RamAddr ++;
80C490 AF03              MOV     R7,AR3
80C492 1B                DEC     R3
80C493 EF                MOV     A,R7
80C494 601C              JZ      ?C0005?DATAEXCHANGE
   21: 
80C496 AF05              MOV     R7,AR5
80C498 0D                INC     R5
80C499 A807              MOV     R0,AR7
80C49B E6                MOV     A,@R0
80C49C FF                MOV     R7,A
80C49D 9017B3            MOV     DPTR,#SramAddr
80C4A0 E4                CLR     A
80C4A1 75F001            MOV     B,#01H
80C4A4 A512800617        ECALL   ?C?ILDIX
80C4A9 85F082            MOV     DPL,B
80C4AC F583              MOV     DPH,A
80C4AE EF                MOV     A,R7
80C4AF F0                MOVX    @DPTR,A
80C4B0 80DE              SJMP    ?C0004?DATAEXCHANGE
80C4B2         ?C0005?DATAEXCHANGE:
   22: 	return 1;
80C4B2 D3                SETB    C
   23: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 477


80C4B3         ?C0006?DATAEXCHANGE:
80C4B3 A522              ERET    
----- FUNCTION _MovDataToSram (END) -------


----- FUNCTION _MovSramToSram (BEGIN) -----
 FILE: 'DataExchange.c'
   25: bit MovSramToSram( uchar xdata* Sourse , uchar xdata* Object , uint len ) 
   26: {
80C4B5 901871            MOV     DPTR,#Sourse
80C4B8 EE                MOV     A,R6
80C4B9 F0                MOVX    @DPTR,A
80C4BA A3                INC     DPTR
80C4BB EF                MOV     A,R7
80C4BC F0                MOVX    @DPTR,A
80C4BD A3                INC     DPTR
80C4BE EC                MOV     A,R4
80C4BF F0                MOVX    @DPTR,A
80C4C0 A3                INC     DPTR
80C4C1 ED                MOV     A,R5
80C4C2 F0                MOVX    @DPTR,A
;---- Variable 'len' assigned to Register 'R2/R3' ----
   27: 	while( len -- )
80C4C3         ?C0007?DATAEXCHANGE:
   28: 		*Object ++ = *Sourse ++;
80C4C3 EB                MOV     A,R3
80C4C4 1B                DEC     R3
80C4C5 AE02              MOV     R6,AR2
80C4C7 7001              JNZ     ?C0032?DATAEXCHANGE
80C4C9 1A                DEC     R2
80C4CA         ?C0032?DATAEXCHANGE:
80C4CA 4E                ORL     A,R6
80C4CB 6028              JZ      ?C0008?DATAEXCHANGE
   29: 	return 1;
80C4CD 901871            MOV     DPTR,#Sourse
80C4D0 E4                CLR     A
80C4D1 75F001            MOV     B,#01H
80C4D4 A512800617        ECALL   ?C?ILDIX
80C4D9 85F082            MOV     DPL,B
80C4DC F583              MOV     DPH,A
80C4DE E0                MOVX    A,@DPTR
80C4DF FF                MOV     R7,A
80C4E0 901873            MOV     DPTR,#Object
80C4E3 E4                CLR     A
80C4E4 75F001            MOV     B,#01H
80C4E7 A512800617        ECALL   ?C?ILDIX
80C4EC 85F082            MOV     DPL,B
80C4EF F583              MOV     DPH,A
80C4F1 EF                MOV     A,R7
80C4F2 F0                MOVX    @DPTR,A
80C4F3 80CE              SJMP    ?C0007?DATAEXCHANGE
80C4F5         ?C0008?DATAEXCHANGE:
   30: }
80C4F5 D3                SETB    C
   31: 
80C4F6         ?C0009?DATAEXCHANGE:
80C4F6 A522              ERET    
----- FUNCTION _MovSramToSram (END) -------


----- FUNCTION _SstFlashReadString (BEGIN) -----
 FILE: 'SstFlash.c'
  118: bit SstFlashReadString( unsigned long FlashAddr , unsigned char idata* RamAddr , unsigned char len )		small
  119: {
80C4F8 8F41              MOV     FlashAddr+03H,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 478


80C4FA 8E40              MOV     FlashAddr+02H,R6
80C4FC 8D3F              MOV     FlashAddr+01H,R5
80C4FE 8C3E              MOV     FlashAddr,R4
80C500         ?C0016?SSTFLASH:
  120: 	unsigned int  data FlashAddrL;
  121: 	unsigned char data FlashAddrH;
  122: 
  123: 	while( len -- )
80C500 AF43              MOV     R7,len
80C502 1543              DEC     len
80C504 EF                MOV     A,R7
80C505 6042              JZ      ?C0017?SSTFLASH
  124: 	{	
  125: 		FlashAddrH = ( ( uchar data* )&FlashAddr )[ 1 ];
80C507 783F              MOV     R0,#LOW FlashAddr+01H
80C509 E6                MOV     A,@R0
;---- Variable 'FlashAddrH' assigned to Register 'R3' ----
80C50A FB                MOV     R3,A
  126: 		FlashAddrL = FlashAddr & 0xFFFF;
80C50B E541              MOV     A,FlashAddr+03H
80C50D FF                MOV     R7,A
80C50E E540              MOV     A,FlashAddr+02H
80C510 FE                MOV     R6,A
80C511 8E44              MOV     FlashAddrL,R6
80C513 8F45              MOV     FlashAddrL+01H,R7
  127: 		PinAddr18 = FlashAddrH & 0x04;
80C515 EB                MOV     A,R3
80C516 A2E2              MOV     C,ACC.2
80C518 9297              MOV     PinAddr18,C
  128: 		PinAddr17 = FlashAddrH & 0x02;
80C51A A2E1              MOV     C,ACC.1
80C51C 9296              MOV     PinAddr17,C
  129: 		PinAddr16 = FlashAddrH & 0x01;
80C51E 13                RRC     A
80C51F 9295              MOV     PinAddr16,C
  130: 		*RamAddr ++ = XBYTE[ FlashAddrL ];
80C521 854582            MOV     DPL,FlashAddrL+01H
80C524 854483            MOV     DPH,FlashAddrL
80C527 E0                MOVX    A,@DPTR
80C528 AE42              MOV     R6,RamAddr
80C52A 0542              INC     RamAddr
80C52C A806              MOV     R0,AR6
80C52E F6                MOV     @R0,A
  131: 		FlashAddr ++;
80C52F E541              MOV     A,FlashAddr+03H
80C531 2401              ADD     A,#01H
80C533 FF                MOV     R7,A
80C534 E4                CLR     A
80C535 3540              ADDC    A,FlashAddr+02H
80C537 FE                MOV     R6,A
80C538 E4                CLR     A
80C539 353F              ADDC    A,FlashAddr+01H
80C53B FD                MOV     R5,A
80C53C E4                CLR     A
80C53D 353E              ADDC    A,FlashAddr
80C53F 8F41              MOV     FlashAddr+03H,R7
80C541 8E40              MOV     FlashAddr+02H,R6
80C543 8D3F              MOV     FlashAddr+01H,R5
80C545 F53E              MOV     FlashAddr,A
  132: 	}
80C547 80B7              SJMP    ?C0016?SSTFLASH
80C549         ?C0017?SSTFLASH:
  133: 	return 1;
80C549 D3                SETB    C
  134: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 479


80C54A         ?C0018?SSTFLASH:
80C54A A522              ERET    
----- FUNCTION _SstFlashReadString (END) -------


----- FUNCTION SaveGlobalParam (BEGIN) -----
 FILE: 'CommonFunction.c'
  829: void   SaveGlobalParam()
  830: {
  831: 	//本机系统参数	
  832: 	u_char xdata i = 0;
80C54C E4                CLR     A
80C54D 901726            MOV     DPTR,#i
80C550 F0                MOVX    @DPTR,A
  833: 	u_char xdata j = 0;
80C551 A3                INC     DPTR
80C552 F0                MOVX    @DPTR,A
  834: 	u_char xdata z = 0;
80C553 A3                INC     DPTR
80C554 F0                MOVX    @DPTR,A
  835: 	//本机系统参数	
  836: 	//生成系统参数的校验位	
  837: 	i = sizeof( struct SYSTEMPARAMETER ) - 1;
80C555 901726            MOV     DPTR,#i
80C558 744A              MOV     A,#04AH
80C55A F0                MOVX    @DPTR,A
  838: 	j = 0;
80C55B E4                CLR     A
80C55C A3                INC     DPTR
80C55D F0                MOVX    @DPTR,A
  839: 	for( z = 0; z < i; z++ )			
80C55E A3                INC     DPTR
80C55F F0                MOVX    @DPTR,A
80C560         ?C0194?COMMONFUNCTION:
80C560 901726            MOV     DPTR,#i
80C563 E0                MOVX    A,@DPTR
80C564 FF                MOV     R7,A
80C565 901728            MOV     DPTR,#z
80C568 E0                MOVX    A,@DPTR
80C569 FE                MOV     R6,A
80C56A C3                CLR     C
80C56B 9F                SUBB    A,R7
80C56C 501D              JNC     ?C0195?COMMONFUNCTION
  840: 		j ^= (( u_char* )&SystemParameter)[z];			
80C56E 901727            MOV     DPTR,#j
80C571 E0                MOVX    A,@DPTR
80C572 FF                MOV     R7,A
80C573 EE                MOV     A,R6
80C574 7C00              MOV     R4,#00H
80C576 7B00              MOV     R3,#?C?XDATASEG
80C578 241E              ADD     A,#LOW SystemParameter
80C57A F9                MOV     R1,A
80C57B EC                MOV     A,R4
80C57C 3404              ADDC    A,#HIGH SystemParameter
80C57E FA                MOV     R2,A
80C57F A548              EMOV    A,@PR0
80C581 FE                MOV     R6,A
80C582 EF                MOV     A,R7
80C583 6E                XRL     A,R6
80C584 F0                MOVX    @DPTR,A
80C585 A3                INC     DPTR
80C586 E0                MOVX    A,@DPTR
80C587 04                INC     A
80C588 F0                MOVX    @DPTR,A
80C589 80D5              SJMP    ?C0194?COMMONFUNCTION
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 480


80C58B         ?C0195?COMMONFUNCTION:
  841: 	SystemParameter.Checkbyte = j;
80C58B 901727            MOV     DPTR,#j
80C58E E0                MOVX    A,@DPTR
80C58F 900468            MOV     DPTR,#SystemParameter+04AH
80C592 F0                MOVX    @DPTR,A
  842: 
  843: 	MovSramToFlash( ADDRF_SYSTEMPARAM , ( unsigned char xdata * )&SystemParameter , sizeof(struct SYSTEMPARAMETER) )
>> ;	
80C593 7F80              MOV     R7,#080H
80C595 7E01              MOV     R6,#01H
80C597 7D08              MOV     R5,#08H
80C599 7C00              MOV     R4,#00H
80C59B 752C04            MOV     ?_MovSramToFlash?BYTE+04H,#HIGH SystemParameter
80C59E 752D1E            MOV     ?_MovSramToFlash?BYTE+05H,#LOW SystemParameter
80C5A1 752E00            MOV     ?_MovSramToFlash?BYTE+06H,#00H
80C5A4 752F4B            MOV     ?_MovSramToFlash?BYTE+07H,#04BH
80C5A7 A50280C063        EJMP    _MovSramToFlash
----- FUNCTION SaveGlobalParam (END) -------


----- FUNCTION _SstFlashSectorErase (BEGIN) -----
 FILE: 'SstFlash.c'
   57: bit SstFlashSectorErase( unsigned long FlashAddr )		small
   58: {
80C5AC 8F37              MOV     FlashAddr+03H,R7
80C5AE 8E36              MOV     FlashAddr+02H,R6
80C5B0 8D35              MOV     FlashAddr+01H,R5
80C5B2 8C34              MOV     FlashAddr,R4
   59: 	unsigned  int data FlashAddrL;
   60: 	unsigned char data FlashAddrH;
   61: 	unsigned char data i;
   62: 
   63: 	XBYTE[ 0x555 ] = 0xAA;
80C5B4 900555            MOV     DPTR,#0555H
80C5B7 74AA              MOV     A,#0AAH
80C5B9 F0                MOVX    @DPTR,A
   64: 	XBYTE[ 0x2AA ] = 0x55;
80C5BA 9002AA            MOV     DPTR,#02AAH
80C5BD 7455              MOV     A,#055H
80C5BF F0                MOVX    @DPTR,A
   65: 	XBYTE[ 0x555 ] = 0x80;
80C5C0 900555            MOV     DPTR,#0555H
80C5C3 7480              MOV     A,#080H
80C5C5 F0                MOVX    @DPTR,A
   66: 	XBYTE[ 0x555 ] = 0xAA;
80C5C6 74AA              MOV     A,#0AAH
80C5C8 F0                MOVX    @DPTR,A
   67: 	XBYTE[ 0x2AA ] = 0x55;	
80C5C9 9002AA            MOV     DPTR,#02AAH
80C5CC 7455              MOV     A,#055H
80C5CE F0                MOVX    @DPTR,A
   68: 
   69: 	FlashAddrH = ( ( uchar data* )&FlashAddr )[ 1 ];
80C5CF 7835              MOV     R0,#LOW FlashAddr+01H
80C5D1 E6                MOV     A,@R0
;---- Variable 'FlashAddrH' assigned to Register 'R1' ----
80C5D2 F9                MOV     R1,A
   70: 	FlashAddrL = FlashAddr & 0xFFFF;
;---- Variable 'FlashAddrL' assigned to Register 'R6/R7' ----
   71: 	PinAddr18 = FlashAddrH & 0x04;
80C5D3 E9                MOV     A,R1
80C5D4 A2E2              MOV     C,ACC.2
80C5D6 9297              MOV     PinAddr18,C
   72: 	PinAddr17 = FlashAddrH & 0x02;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 481


80C5D8 A2E1              MOV     C,ACC.1
80C5DA 9296              MOV     PinAddr17,C
   73: 	PinAddr16 = FlashAddrH & 0x01;	
80C5DC 13                RRC     A
80C5DD 9295              MOV     PinAddr16,C
   74: 	XBYTE[ FlashAddrL ] = 0x20;
80C5DF 8F82              MOV     DPL,R7
80C5E1 8E83              MOV     DPH,R6
80C5E3 7420              MOV     A,#020H
80C5E5 F0                MOVX    @DPTR,A
80C5E6         ?C0004?SSTFLASH:
   75: 
   76: 	while( (XBYTE[0] & 0x40) != (XBYTE[0] & 0x40) )
80C5E6 900000            MOV     DPTR,#00H
80C5E9 E0                MOVX    A,@DPTR
80C5EA 5440              ANL     A,#040H
80C5EC FD                MOV     R5,A
80C5ED E0                MOVX    A,@DPTR
80C5EE 5440              ANL     A,#040H
80C5F0 6D                XRL     A,R5
80C5F1 6003              JZ      ?C0005?SSTFLASH
   77: 		_nop_();
80C5F3 00                NOP     
80C5F4 80F0              SJMP    ?C0004?SSTFLASH
80C5F6         ?C0005?SSTFLASH:
   78: 
   79: 	FlashAddrL  = FlashAddr & 0xffffff80;
80C5F6 E537              MOV     A,FlashAddr+03H
80C5F8 5480              ANL     A,#080H
80C5FA FF                MOV     R7,A
80C5FB E536              MOV     A,FlashAddr+02H
80C5FD FE                MOV     R6,A
   80: 	for( i = 0 ; i < SECTORSIZE ; i ++ )
;---- Variable 'i' assigned to Register 'R5' ----
80C5FE E4                CLR     A
80C5FF FD                MOV     R5,A
80C600         ?C0006?SSTFLASH:
   81: 	{
   82: 		if ( XBYTE[ FlashAddrL ++ ] != 0xFF ) 
80C600 0F                INC     R7
80C601 EF                MOV     A,R7
80C602 AA06              MOV     R2,AR6
80C604 7001              JNZ     ?C0019?SSTFLASH
80C606 0E                INC     R6
80C607         ?C0019?SSTFLASH:
80C607 14                DEC     A
80C608 F582              MOV     DPL,A
80C60A 8A83              MOV     DPH,R2
80C60C E0                MOVX    A,@DPTR
80C60D F4                CPL     A
80C60E 6003              JZ      ?C0008?SSTFLASH
   83: 			return 0;
80C610 C3                CLR     C
80C611 8005              SJMP    ?C0010?SSTFLASH
   84: 	}
80C613         ?C0008?SSTFLASH:
80C613 0D                INC     R5
80C614 BD80E9            CJNE    R5,#080H,?C0006?SSTFLASH
80C617         ?C0007?SSTFLASH:
   85: 	return 1;
80C617 D3                SETB    C
   86: }
80C618         ?C0010?SSTFLASH:
80C618 A522              ERET    
----- FUNCTION _SstFlashSectorErase (END) -------
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 482




----- FUNCTION _SstFlashStringProgam (BEGIN) -----
 FILE: 'SstFlash.c'
   88: bit SstFlashStringProgam( unsigned long FlashAddr , unsigned char idata* RamAddr , unsigned char len )		small
   89: {
80C61A 8F40              MOV     FlashAddr+03H,R7
80C61C 8E3F              MOV     FlashAddr+02H,R6
80C61E 8D3E              MOV     FlashAddr+01H,R5
80C620 8C3D              MOV     FlashAddr,R4
80C622         ?C0011?SSTFLASH:
   90: 	unsigned  int data FlashAddrL;
   91: 	unsigned char data FlashAddrH;
   92: 
   93: 	while( len -- )
80C622 AF42              MOV     R7,len
80C624 1542              DEC     len
80C626 EF                MOV     A,R7
80C627 6068              JZ      ?C0012?SSTFLASH
   94: 	{		
   95: 		PinAddr18 = 0;
80C629 C297              CLR     PinAddr18
   96: 		PinAddr17 = 0;
80C62B C296              CLR     PinAddr17
   97: 		PinAddr16 = 0;
80C62D C295              CLR     PinAddr16
   98: 		XBYTE[ 0x555 ] = 0xAA;
80C62F 900555            MOV     DPTR,#0555H
80C632 74AA              MOV     A,#0AAH
80C634 F0                MOVX    @DPTR,A
   99: 		XBYTE[ 0x2AA ] = 0x55;
80C635 9002AA            MOV     DPTR,#02AAH
80C638 7455              MOV     A,#055H
80C63A F0                MOVX    @DPTR,A
  100: 		XBYTE[ 0x555 ] = 0xA0;
80C63B 900555            MOV     DPTR,#0555H
80C63E 74A0              MOV     A,#0A0H
80C640 F0                MOVX    @DPTR,A
  101: 		
  102: 		FlashAddrH = ( ( uchar data* )&FlashAddr )[ 1 ];
80C641 783E              MOV     R0,#LOW FlashAddr+01H
80C643 E6                MOV     A,@R0
;---- Variable 'FlashAddrH' assigned to Register 'R3' ----
80C644 FB                MOV     R3,A
  103: 		FlashAddrL = FlashAddr & 0xFFFF;
80C645 E540              MOV     A,FlashAddr+03H
80C647 FF                MOV     R7,A
80C648 E53F              MOV     A,FlashAddr+02H
80C64A FE                MOV     R6,A
80C64B 8E43              MOV     FlashAddrL,R6
80C64D 8F44              MOV     FlashAddrL+01H,R7
  104: 		PinAddr18 = FlashAddrH & 0x04;
80C64F EB                MOV     A,R3
80C650 A2E2              MOV     C,ACC.2
80C652 9297              MOV     PinAddr18,C
  105: 		PinAddr17 = FlashAddrH & 0x02;
80C654 A2E1              MOV     C,ACC.1
80C656 9296              MOV     PinAddr17,C
  106: 		PinAddr16 = FlashAddrH & 0x01;
80C658 13                RRC     A
80C659 9295              MOV     PinAddr16,C
  107: 		XBYTE[ FlashAddrL ] = *RamAddr;
80C65B A841              MOV     R0,RamAddr
80C65D E6                MOV     A,@R0
80C65E 854482            MOV     DPL,FlashAddrL+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 483


80C661 854383            MOV     DPH,FlashAddrL
80C664 F0                MOVX    @DPTR,A
80C665         ?C0013?SSTFLASH:
  108: 	
  109: 		while( (XBYTE[0] & 0x40) != (XBYTE[0] & 0x40) )
80C665 900000            MOV     DPTR,#00H
80C668 E0                MOVX    A,@DPTR
80C669 5440              ANL     A,#040H
80C66B FF                MOV     R7,A
80C66C E0                MOVX    A,@DPTR
80C66D 5440              ANL     A,#040H
80C66F 6F                XRL     A,R7
80C670 6003              JZ      ?C0014?SSTFLASH
  110: 			_nop_();
80C672 00                NOP     
80C673 80F0              SJMP    ?C0013?SSTFLASH
80C675         ?C0014?SSTFLASH:
  111: 
  112: 		FlashAddr++;
80C675 E540              MOV     A,FlashAddr+03H
80C677 2401              ADD     A,#01H
80C679 FF                MOV     R7,A
80C67A E4                CLR     A
80C67B 353F              ADDC    A,FlashAddr+02H
80C67D FE                MOV     R6,A
80C67E E4                CLR     A
80C67F 353E              ADDC    A,FlashAddr+01H
80C681 FD                MOV     R5,A
80C682 E4                CLR     A
80C683 353D              ADDC    A,FlashAddr
80C685 8F40              MOV     FlashAddr+03H,R7
80C687 8E3F              MOV     FlashAddr+02H,R6
80C689 8D3E              MOV     FlashAddr+01H,R5
80C68B F53D              MOV     FlashAddr,A
  113: 		RamAddr++;
80C68D 0541              INC     RamAddr
  114: 	}
80C68F 8091              SJMP    ?C0011?SSTFLASH
80C691         ?C0012?SSTFLASH:
  115: 	return 1;
80C691 D3                SETB    C
  116: }
80C692         ?C0015?SSTFLASH:
80C692 A522              ERET    
----- FUNCTION _SstFlashStringProgam (END) -------


----- FUNCTION CheckHardwareState (BEGIN) -----
 FILE: 'mainflow.c'
 1602: u_char CheckHardwareState()	
 1603: {	
 1604: //	Trace( "\n HardWareErr1 = %u", HardWareErr );	
 1605: //#ifndef _DEBUG_TRACE	
 1606: 	if( CasherRealTimeState() == 1 )
80C694 A51280C6B8        ECALL   CasherRealTimeState
80C699 BF0108            CJNE    R7,#01H,?C0360?MAINFLOW
 1607: 		DeviceStatus.BillAccepter = 1;
80C69C 900B16            MOV     DPTR,#DeviceStatus
80C69F 7401              MOV     A,#01H
80C6A1 F0                MOVX    @DPTR,A
80C6A2 8005              SJMP    ?C0361?MAINFLOW
80C6A4         ?C0360?MAINFLOW:
 1608: 	else 
 1609: 		DeviceStatus.BillAccepter = 0;
80C6A4 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 484


80C6A5 900B16            MOV     DPTR,#DeviceStatus
80C6A8 F0                MOVX    @DPTR,A
80C6A9         ?C0361?MAINFLOW:
 1610: 		
 1611:    	if( HardWareErr == 0 )
80C6A9 90047F            MOV     DPTR,#HardWareErr
80C6AC E0                MOVX    A,@DPTR
80C6AD 7002              JNZ     ?C0996?MAINFLOW
80C6AF A3                INC     DPTR
80C6B0 E0                MOVX    A,@DPTR
80C6B1         ?C0996?MAINFLOW:
80C6B1 7F01              MOV     R7,#01H
80C6B3 7001              JNZ     ?C0362?MAINFLOW
 1612: 		return 0;
80C6B5 FF                MOV     R7,A
80C6B6         ?C0362?MAINFLOW:
 1613: 	else 
 1614: 		return 1;
 1615: //#else
 1616: //	return 0;
 1617: //#endif
 1618: }
80C6B6         ?C0363?MAINFLOW:
80C6B6 A522              ERET    
----- FUNCTION CheckHardwareState (END) -------


----- FUNCTION CasherRealTimeState (BEGIN) -----
 FILE: 'scheduler.c'
 1401: uchar CasherRealTimeState( )
 1402: {
 1403: 	return Casher.ExtState[ 13 ];
 1404: }
80C6B8 9023DC            MOV     DPTR,#Casher+011H
80C6BB E0                MOVX    A,@DPTR
80C6BC FF                MOV     R7,A
 1405: 
80C6BD         ?C0255?SCHEDULER:
80C6BD A522              ERET    
----- FUNCTION CasherRealTimeState (END) -------


----- FUNCTION CheckQureyCmd (BEGIN) -----
 FILE: 'mainflow.c'
 1620: u_char CheckQureyCmd()
 1621: {
 1622: //	Trace("\n CheckQureyCmd" );
 1623: 	struct SHORTMSG xdata ShortMsg;
 1624: 	uchar xdata QueryCmdstr[11];
 1625: 
 1626: 	if( SystemParameter.MobileON != 1 )
80C6BF 900444            MOV     DPTR,#SystemParameter+026H
80C6C2 E0                MOVX    A,@DPTR
80C6C3 6401              XRL     A,#01H
80C6C5 6005              JZ      ?C0365?MAINFLOW
 1627: 		return 0;
80C6C7 7F00              MOV     R7,#00H
80C6C9 02C814            LJMP    ?C0366?MAINFLOW
80C6CC         ?C0365?MAINFLOW:
 1628: 	
 1629: #ifndef _DEBUG_NO_MOBILE	
 1630: //	if ( !SMSCommStatus() )			
 1631: //		return 0;	
 1632: 	if ( IsShortMessageIn != 1 )
80C6CC 900AEB            MOV     DPTR,#IsShortMessageIn
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 485


80C6CF E0                MOVX    A,@DPTR
80C6D0 6401              XRL     A,#01H
80C6D2 6005              JZ      ?C0367?MAINFLOW
 1633: 		return 0;
80C6D4 7F00              MOV     R7,#00H
80C6D6 02C814            LJMP    ?C0366?MAINFLOW
80C6D9         ?C0367?MAINFLOW:
 1634: 
 1635: //	Trace("\n GET Query SMS ");
 1636: 	memset( &ShortMsg, 0, sizeof( struct SHORTMSG ) );		
80C6D9 7E00              MOV     R6,#00H
80C6DB 7FB2              MOV     R7,#0B2H
80C6DD 7D00              MOV     R5,#00H
80C6DF 7B00              MOV     R3,#?C?XDATASEG
80C6E1 7A15              MOV     R2,#HIGH ShortMsg
80C6E3 7995              MOV     R1,#LOW ShortMsg
80C6E5 A5128008A6        ECALL   ?C?MEMSET
 1637: 	if( GetShortMsg( &ShortMsg ) == 1 )
80C6EA 7B00              MOV     R3,#?C?XDATASEG
80C6EC 7A15              MOV     R2,#HIGH ShortMsg
80C6EE 7995              MOV     R1,#LOW ShortMsg
80C6F0 A512813C98        ECALL   _GetShortMsg
80C6F5 BF0105            CJNE    R7,#01H,?C0368?MAINFLOW
 1638: 	{
 1639: 	//	Trace("\n have not SMS");
 1640: 		return 0;
80C6F8 7F00              MOV     R7,#00H
80C6FA 02C814            LJMP    ?C0366?MAINFLOW
 1641: 	}
80C6FD         ?C0368?MAINFLOW:
 1642: 	IsShortMessageIn = 0;
80C6FD E4                CLR     A
80C6FE 900AEB            MOV     DPTR,#IsShortMessageIn
80C701 F0                MOVX    @DPTR,A
 1643: 	memset( QueryCmdstr, 0, sizeof(QueryCmdstr) );		
80C702 FE                MOV     R6,A
80C703 7F0B              MOV     R7,#0BH
80C705 FD                MOV     R5,A
80C706 7B00              MOV     R3,#?C?XDATASEG
80C708 7A16              MOV     R2,#HIGH QueryCmdstr
80C70A 7947              MOV     R1,#LOW QueryCmdstr
80C70C A5128008A6        ECALL   ?C?MEMSET
 1644: 	sprintf( QueryCmdstr, "%s%bx%bx%bx%bx%bx",QueryCmd[0].str, 
80C711 7B80              MOV     R3,#BYTE2 08003F2H
80C713 7A03              MOV     R2,#HIGH 08003F2H
80C715 79F2              MOV     R1,#LOW 08003F2H
80C717 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80C71A A5128007B6        ECALL   ?C?PSTXDATA
80C71F 900525            MOV     DPTR,#QueryCmd
80C722 A5128007C0        ECALL   ?C?PLDCODE
80C727 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80C72A A5128007B6        ECALL   ?C?PSTXDATA
80C72F 90042F            MOV     DPTR,#SystemParameter+011H
80C732 E0                MOVX    A,@DPTR
80C733 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80C736 F0                MOVX    @DPTR,A
80C737 900430            MOV     DPTR,#SystemParameter+012H
80C73A E0                MOVX    A,@DPTR
80C73B 901B87            MOV     DPTR,#?_sprintf?BYTE+0AH
80C73E F0                MOVX    @DPTR,A
80C73F 900431            MOV     DPTR,#SystemParameter+013H
80C742 E0                MOVX    A,@DPTR
80C743 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
80C746 F0                MOVX    @DPTR,A
80C747 900432            MOV     DPTR,#SystemParameter+014H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 486


80C74A E0                MOVX    A,@DPTR
80C74B 901B89            MOV     DPTR,#?_sprintf?BYTE+0CH
80C74E F0                MOVX    @DPTR,A
80C74F 900433            MOV     DPTR,#SystemParameter+015H
80C752 E0                MOVX    A,@DPTR
80C753 901B8A            MOV     DPTR,#?_sprintf?BYTE+0DH
80C756 F0                MOVX    @DPTR,A
80C757 900434            MOV     DPTR,#SystemParameter+016H
80C75A E0                MOVX    A,@DPTR
80C75B 901B8B            MOV     DPTR,#?_sprintf?BYTE+0EH
80C75E F0                MOVX    @DPTR,A
80C75F 7B00              MOV     R3,#?C?XDATASEG
80C761 7A16              MOV     R2,#HIGH QueryCmdstr
80C763 7947              MOV     R1,#LOW QueryCmdstr
80C765 A512800949        ECALL   _sprintf
 1645: 			SystemParameter.VmID[0],SystemParameter.VmID[1],SystemParameter.VmID[2],
 1646: 			SystemParameter.VmID[3],SystemParameter.VmID[4],SystemParameter.VmID[5]);
 1647: 	if( memcmp( QueryCmdstr, ShortMsg.msg, 10 ) == 0 )	
80C76A 7847              MOV     R0,#LOW QueryCmdstr
80C76C 7C16              MOV     R4,#HIGH QueryCmdstr
80C76E 7D00              MOV     R5,#?C?XDATASEG
80C770 7B00              MOV     R3,#?C?XDATASEG
80C772 7A15              MOV     R2,#HIGH ShortMsg+012H
80C774 79A7              MOV     R1,#LOW ShortMsg+012H
80C776 7E00              MOV     R6,#00H
80C778 7F0A              MOV     R7,#0AH
80C77A A51280086D        ECALL   ?C?MEMCMP
80C77F EF                MOV     A,R7
80C780 7007              JNZ     ?C0369?MAINFLOW
 1648: 	{
 1649: 		//查询设备状态
 1650: 		SMSQuery |= 0x01;
80C782 900143            MOV     DPTR,#SMSQuery
80C785 E0                MOVX    A,@DPTR
80C786 4401              ORL     A,#01H
80C788 F0                MOVX    @DPTR,A
 1651: 	//	Trace("\n Query Device status SMS ");
 1652: 	}
80C789         ?C0369?MAINFLOW:
 1653: 
 1654: 	memset( QueryCmdstr, 0, sizeof(QueryCmdstr) );		
80C789 7E00              MOV     R6,#00H
80C78B 7F0B              MOV     R7,#0BH
80C78D 7D00              MOV     R5,#00H
80C78F 7B00              MOV     R3,#?C?XDATASEG
80C791 7A16              MOV     R2,#HIGH QueryCmdstr
80C793 7947              MOV     R1,#LOW QueryCmdstr
80C795 A5128008A6        ECALL   ?C?MEMSET
 1655: 	sprintf( QueryCmdstr, "%s%bx%bx%bx%bx%bx",QueryCmd[1].str, 
80C79A 7B80              MOV     R3,#BYTE2 08003F2H
80C79C 7A03              MOV     R2,#HIGH 08003F2H
80C79E 79F2              MOV     R1,#LOW 08003F2H
80C7A0 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80C7A3 A5128007B6        ECALL   ?C?PSTXDATA
80C7A8 900529            MOV     DPTR,#QueryCmd+04H
80C7AB A5128007C0        ECALL   ?C?PLDCODE
80C7B0 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80C7B3 A5128007B6        ECALL   ?C?PSTXDATA
80C7B8 90042F            MOV     DPTR,#SystemParameter+011H
80C7BB E0                MOVX    A,@DPTR
80C7BC 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80C7BF F0                MOVX    @DPTR,A
80C7C0 900430            MOV     DPTR,#SystemParameter+012H
80C7C3 E0                MOVX    A,@DPTR
80C7C4 901B87            MOV     DPTR,#?_sprintf?BYTE+0AH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 487


80C7C7 F0                MOVX    @DPTR,A
80C7C8 900431            MOV     DPTR,#SystemParameter+013H
80C7CB E0                MOVX    A,@DPTR
80C7CC 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
80C7CF F0                MOVX    @DPTR,A
80C7D0 900432            MOV     DPTR,#SystemParameter+014H
80C7D3 E0                MOVX    A,@DPTR
80C7D4 901B89            MOV     DPTR,#?_sprintf?BYTE+0CH
80C7D7 F0                MOVX    @DPTR,A
80C7D8 900433            MOV     DPTR,#SystemParameter+015H
80C7DB E0                MOVX    A,@DPTR
80C7DC 901B8A            MOV     DPTR,#?_sprintf?BYTE+0DH
80C7DF F0                MOVX    @DPTR,A
80C7E0 900434            MOV     DPTR,#SystemParameter+016H
80C7E3 E0                MOVX    A,@DPTR
80C7E4 901B8B            MOV     DPTR,#?_sprintf?BYTE+0EH
80C7E7 F0                MOVX    @DPTR,A
80C7E8 7B00              MOV     R3,#?C?XDATASEG
80C7EA 7A16              MOV     R2,#HIGH QueryCmdstr
80C7EC 7947              MOV     R1,#LOW QueryCmdstr
80C7EE A512800949        ECALL   _sprintf
 1656: 			SystemParameter.VmID[0],SystemParameter.VmID[1],SystemParameter.VmID[2],
 1657: 			SystemParameter.VmID[3],SystemParameter.VmID[4],SystemParameter.VmID[5]);
 1658: 	if( memcmp( QueryCmdstr, ShortMsg.msg, 10 ) == 0 )	
80C7F3 7847              MOV     R0,#LOW QueryCmdstr
80C7F5 7C16              MOV     R4,#HIGH QueryCmdstr
80C7F7 7D00              MOV     R5,#?C?XDATASEG
80C7F9 7B00              MOV     R3,#?C?XDATASEG
80C7FB 7A15              MOV     R2,#HIGH ShortMsg+012H
80C7FD 79A7              MOV     R1,#LOW ShortMsg+012H
80C7FF 7E00              MOV     R6,#00H
80C801 7F0A              MOV     R7,#0AH
80C803 A51280086D        ECALL   ?C?MEMCMP
80C808 EF                MOV     A,R7
80C809 7007              JNZ     ?C0370?MAINFLOW
 1659: 	{
 1660: 		//查询交易记录
 1661: 		SMSQuery |= 0x02;	
80C80B 900143            MOV     DPTR,#SMSQuery
80C80E E0                MOVX    A,@DPTR
80C80F 4402              ORL     A,#02H
80C811 F0                MOVX    @DPTR,A
 1662: 	//	Trace("\n Query trane SMS ");
 1663: 	}
80C812         ?C0370?MAINFLOW:
 1664: #endif
 1665: 	return 0;
80C812 7F00              MOV     R7,#00H
 1666: }
80C814         ?C0366?MAINFLOW:
80C814 A522              ERET    
----- FUNCTION CheckQureyCmd (END) -------


----- FUNCTION ?L?COM003F (BEGIN) -----
80C816 A512807ADC        ECALL   CoreProcessCycle
----- FUNCTION CheckKeyPress (BEGIN) -----
 FILE: 'mainflow.c'
 1836: u_char CheckKeyPress()
 1837: {
 1838: 	u_char xdata key = 0;
 1839: 
;---- Variable 'key' assigned to Register 'R6' ----
80C81B E4                CLR     A
80C81C FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 488


 1840: //	Trace( "\n CheckKeyPress" );
 1841: 	if ( SystemStatus != 1 ) 
80C81D 9001C4            MOV     DPTR,#SystemStatus
80C820 E0                MOVX    A,@DPTR
80C821 6401              XRL     A,#01H
80C823 6004              JZ      ?C0408?MAINFLOW
 1842: 		return 2; // 系统关闭，按键不理,当做没按		
80C825 7F02              MOV     R7,#02H
80C827 8075              SJMP    ?C0409?MAINFLOW
80C829         ?C0408?MAINFLOW:
 1843: 	key = GetKey();
80C829 A512809275        ECALL   GetKey
80C82E AE07              MOV     R6,AR7
 1844: //	Trace( "\n CheckKeyPress key1 = %bu", key );
 1845: 	if( ( key > 0 ) && ( key <= 9 ) )
80C830 EE                MOV     A,R6
80C831 D3                SETB    C
80C832 9400              SUBB    A,#00H
80C834 401C              JC      ?C0410?MAINFLOW
80C836 EE                MOV     A,R6
80C837 D3                SETB    C
80C838 9409              SUBB    A,#09H
80C83A 5016              JNC     ?C0410?MAINFLOW
 1846: 	{
 1847: //		Trace( "\n CheckKeyPress key2 = %bu", key );
 1848: 		CurrentStockCode = key + CurrentStockCode*10;
80C83C 900B22            MOV     DPTR,#CurrentStockCode
80C83F E0                MOVX    A,@DPTR
80C840 75F00A            MOV     B,#0AH
80C843 A4                MUL     AB
80C844 2E                ADD     A,R6
80C845 F0                MOVX    @DPTR,A
 1849: 		if( QueryFlag == 0 )
80C846 202705            JB      QueryFlag,?C0411?MAINFLOW
 1850: 		{
 1851: 			QueryFlag = 1;
80C849 D227              SETB    QueryFlag
 1852: 			QueryTimer = 30;
80C84B 75141E            MOV     QueryTimer,#01EH
 1853: 		}
80C84E         ?C0411?MAINFLOW:
 1854: 		return 1;
80C84E 7F01              MOV     R7,#01H
80C850 804C              SJMP    ?C0409?MAINFLOW
 1855: 	}
80C852         ?C0410?MAINFLOW:
 1856: 	else if( key == KEY_CANCEL )
80C852 EE                MOV     A,R6
80C853 B41B22            CJNE    A,#01BH,?C0413?MAINFLOW
 1857: 	{
 1858: 		DisplayCursorState( 0, 1, 1, 0, 1 );
80C856 D21A              SETB    ?_DisplayCursorState?BIT
80C858 E4                CLR     A
80C859 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80C85C F0                MOVX    @DPTR,A
80C85D D21B              SETB    ?_DisplayCursorState?BIT+01H
80C85F 7D01              MOV     R5,#01H
80C861 FF                MOV     R7,A
80C862 A51280817F        ECALL   _DisplayCursorState
 1859: 		QueryFlag = 0;
80C867 C227              CLR     QueryFlag
 1860: 		QueryTimer = 0;
80C869 E4                CLR     A
80C86A F514              MOV     QueryTimer,A
 1861: 		CurrentStockCode = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 489


80C86C 900B22            MOV     DPTR,#CurrentStockCode
80C86F F0                MOVX    @DPTR,A
 1862: 		UpdataDisp = 6;
80C870 A3                INC     DPTR
80C871 7406              MOV     A,#06H
80C873 F0                MOVX    @DPTR,A
 1863: 		return 2;
80C874 7F02              MOV     R7,#02H
80C876 8026              SJMP    ?C0409?MAINFLOW
 1864: 	}		
80C878         ?C0413?MAINFLOW:
 1865: 	else
 1866: 	{
 1867: 		if( ( QueryFlag == 1 ) && ( QueryTimer == 0 ) )
80C878 302721            JNB     QueryFlag,?C0415?MAINFLOW
80C87B E514              MOV     A,QueryTimer
80C87D 701D              JNZ     ?C0415?MAINFLOW
 1868: 		{
 1869: 			DisplayCursorState( 0, 1, 1, 0, 1 );
80C87F D21A              SETB    ?_DisplayCursorState?BIT
80C881 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80C884 F0                MOVX    @DPTR,A
80C885 D21B              SETB    ?_DisplayCursorState?BIT+01H
80C887 7D01              MOV     R5,#01H
80C889 FF                MOV     R7,A
80C88A A51280817F        ECALL   _DisplayCursorState
 1870: 			QueryFlag = 0;
80C88F C227              CLR     QueryFlag
 1871: 			QueryTimer = 0;
80C891 E4                CLR     A
80C892 F514              MOV     QueryTimer,A
 1872: 			CurrentStockCode = 0;
80C894 900B22            MOV     DPTR,#CurrentStockCode
80C897 F0                MOVX    @DPTR,A
 1873: 			UpdataDisp = 6;
80C898 A3                INC     DPTR
80C899 7406              MOV     A,#06H
80C89B F0                MOVX    @DPTR,A
 1874: 		}
80C89C         ?C0415?MAINFLOW:
 1875: 		return 2;	
80C89C 7F02              MOV     R7,#02H
 1876: 	}
80C89E         ?C0409?MAINFLOW:
80C89E A522              ERET    
----- FUNCTION CheckKeyPress (END) -------


----- FUNCTION QueryIsGoodsWay (BEGIN) -----
 FILE: 'mainflow.c'
 1960: u_char QueryIsGoodsWay()
 1961: {
 1962: 	uchar xdata i = 0;
 1963: 
80C8A0 E4                CLR     A
80C8A1 901595            MOV     DPTR,#i
80C8A4 F0                MOVX    @DPTR,A
 1964: 	Trace( "\n QueryIsGoodsWay" );	
 1965: 	Trace("\n GoodsWayTest GoodsWaySetVal[%bu].WayState = %02bx", CurrentStockCode,GoodsWaySetVal[ CurrentStockCode 
>> ].WayState );
 1966: 	Trace("\n GoodsWaySetVal[%bu].Price = %u", CurrentStockCode,GoodsWaySetVal[CurrentStockCode].Price );
 1967: 	memset( DisplayBuffer, 0, sizeof( DisplayBuffer ) );	
80C8A5 FE                MOV     R6,A
80C8A6 7F14              MOV     R7,#014H
80C8A8 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 490


80C8A9 7B00              MOV     R3,#?C?XDATASEG
80C8AB 7A04              MOV     R2,#HIGH DisplayBuffer
80C8AD 796B              MOV     R1,#LOW DisplayBuffer
80C8AF A5128008A6        ECALL   ?C?MEMSET
 1968: 	if( GoodsWaySetVal[CurrentStockCode].GoodsCurrentSum == 0 )
80C8B4 900B22            MOV     DPTR,#CurrentStockCode
80C8B7 E0                MOVX    A,@DPTR
80C8B8 FF                MOV     R7,A
80C8B9 75F005            MOV     B,#05H
80C8BC 900006            MOV     DPTR,#GoodsWaySetVal+04H
80C8BF A51280079F        ECALL   ?C?OFFXADD
80C8C4 E0                MOVX    A,@DPTR
80C8C5 7048              JNZ     ?C0428?MAINFLOW
 1969: 	{	
 1970: 		DisplayLine = STR_COLUMN;	
80C8C7 900B21            MOV     DPTR,#DisplayLine
80C8CA 7428              MOV     A,#028H
80C8CC F0                MOVX    @DPTR,A
 1971: 		i = sprintf( DisplayBuffer, "%s %bu - %s", DispInformationTable[DisplayLine].str, GoodsWaySetVal[CurrentStockCo
>> de].WayNo,
80C8CD 7B80              MOV     R3,#BYTE2 080040AH
80C8CF 7A04              MOV     R2,#HIGH 080040AH
80C8D1 790A              MOV     R1,#LOW 080040AH
80C8D3 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80C8D6 A5128007B6        ECALL   ?C?PSTXDATA
80C8DB 900B21            MOV     DPTR,#DisplayLine
80C8DE E0                MOVX    A,@DPTR
80C8DF 25E0              ADD     A,ACC
80C8E1 25E0              ADD     A,ACC
80C8E3 2471              ADD     A,#LOW DispInformationTable
80C8E5 F582              MOV     DPL,A
80C8E7 E4                CLR     A
80C8E8 3404              ADDC    A,#HIGH DispInformationTable
80C8EA F583              MOV     DPH,A
80C8EC A5128007C0        ECALL   ?C?PLDCODE
80C8F1 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80C8F4 A5128007B6        ECALL   ?C?PSTXDATA
80C8F9 75F005            MOV     B,#05H
80C8FC EF                MOV     A,R7
80C8FD 900002            MOV     DPTR,#GoodsWaySetVal
80C900 A51280079F        ECALL   ?C?OFFXADD
80C905 E0                MOVX    A,@DPTR
80C906 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80C909 F0                MOVX    @DPTR,A
80C90A 900515            MOV     DPTR,#DispInformationTable+0A4H
 1972: 	 			DispInformationTable[STR_GOODS_OUT].str );				
 1973: 	}
80C90D 8076              SJMP    ?C1047?MAINFLOW
80C90F         ?C0428?MAINFLOW:
 1974: 	else if( ( ( GoodsWaySetVal[CurrentStockCode].WayState & 0x0A ) != 0x00 ) || 
80C90F 900B22            MOV     DPTR,#CurrentStockCode
80C912 E0                MOVX    A,@DPTR
80C913 FF                MOV     R7,A
80C914 75F005            MOV     B,#05H
80C917 900003            MOV     DPTR,#GoodsWaySetVal+01H
80C91A A51280079F        ECALL   ?C?OFFXADD
80C91F E0                MOVX    A,@DPTR
80C920 FE                MOV     R6,A
80C921 540A              ANL     A,#0AH
80C923 7017              JNZ     ?C0431?MAINFLOW
80C925 75F005            MOV     B,#05H
80C928 EF                MOV     A,R7
80C929 900004            MOV     DPTR,#GoodsWaySetVal+02H
80C92C A51280079F        ECALL   ?C?OFFXADD
80C931 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 491


80C932 FC                MOV     R4,A
80C933 A3                INC     DPTR
80C934 E0                MOVX    A,@DPTR
80C935 4C                ORL     A,R4
80C936 6004              JZ      ?C0431?MAINFLOW
80C938 EE                MOV     A,R6
80C939 20E059            JB      ACC.0,?C0430?MAINFLOW
80C93C         ?C0431?MAINFLOW:
 1975: 			( GoodsWaySetVal[CurrentStockCode].Price == 0 ) || ( ( GoodsWaySetVal[CurrentStockCode].WayState & 0x01 ) != 0
>> x01 ) )
 1976: 			//货道故障或单价为0		
 1977: 	{
 1978: 		DisplayLine = STR_COLUMN;	
80C93C 900B21            MOV     DPTR,#DisplayLine
80C93F 7428              MOV     A,#028H
80C941 F0                MOVX    @DPTR,A
 1979: 		i = sprintf( DisplayBuffer, "%s %bu - %s", DispInformationTable[DisplayLine].str, GoodsWaySetVal[CurrentStockCo
>> de].WayNo,
80C942 7B80              MOV     R3,#BYTE2 080040AH
80C944 7A04              MOV     R2,#HIGH 080040AH
80C946 790A              MOV     R1,#LOW 080040AH
80C948 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80C94B A5128007B6        ECALL   ?C?PSTXDATA
80C950 900B21            MOV     DPTR,#DisplayLine
80C953 E0                MOVX    A,@DPTR
80C954 25E0              ADD     A,ACC
80C956 25E0              ADD     A,ACC
80C958 2471              ADD     A,#LOW DispInformationTable
80C95A F582              MOV     DPL,A
80C95C E4                CLR     A
80C95D 3404              ADDC    A,#HIGH DispInformationTable
80C95F F583              MOV     DPH,A
80C961 A5128007C0        ECALL   ?C?PLDCODE
80C966 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80C969 A5128007B6        ECALL   ?C?PSTXDATA
80C96E 900B22            MOV     DPTR,#CurrentStockCode
80C971 E0                MOVX    A,@DPTR
80C972 75F005            MOV     B,#05H
80C975 900002            MOV     DPTR,#GoodsWaySetVal
80C978 A51280079F        ECALL   ?C?OFFXADD
80C97D E0                MOVX    A,@DPTR
80C97E 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80C981 F0                MOVX    @DPTR,A
80C982 900519            MOV     DPTR,#DispInformationTable+0A8H
80C985         
80C985 A5128007C0        ECALL   ?C?PLDCODE
80C98A 901B87            MOV     DPTR,#?_sprintf?BYTE+0AH
80C98D A5128007B6        ECALL   ?C?PSTXDATA
 1980: 	 			DispInformationTable[STR_COLUMN_ERROR].str );			
 1981: 	}
80C992 02CAEC            LJMP    ?C1050?MAINFLOW
80C995         ?C0430?MAINFLOW:
 1982: 	else
 1983: 	{		
 1984: 		DisplayLine = STR_PRICE;
80C995 900B21            MOV     DPTR,#DisplayLine
80C998 7427              MOV     A,#027H
80C99A F0                MOVX    @DPTR,A
 1985: 		switch( SystemParameter.curUnit )
80C99B 900466            MOV     DPTR,#SystemParameter+048H
80C99E E0                MOVX    A,@DPTR
80C99F FE                MOV     R6,A
80C9A0 A3                INC     DPTR
80C9A1 E0                MOVX    A,@DPTR
80C9A2 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 492


80C9A3 EE                MOV     A,R6
80C9A4 6003              JZ      $ + 5H
80C9A6 02CAFC            LJMP    ?C0429?MAINFLOW
80C9A9 EF                MOV     A,R7
80C9AA 24F6              ADD     A,#0F6H
80C9AC 6058              JZ      ?C0435?MAINFLOW
80C9AE 24A6              ADD     A,#0A6H
80C9B0 7003              JNZ     $ + 5H
80C9B2 02CA7A            LJMP    ?C0436?MAINFLOW
80C9B5 2463              ADD     A,#063H
80C9B7 6003              JZ      $ + 5H
80C9B9 02CAFC            LJMP    ?C0429?MAINFLOW
 1986: 		{
 1987: 			case 1:
80C9BC         ?C0434?MAINFLOW:
 1988: 				i = sprintf( DisplayBuffer, "%s %u", DispInformationTable[DisplayLine].str,	GoodsWaySetVal[CurrentStockCode].
>> Price );
80C9BC 7B80              MOV     R3,#BYTE2 0800416H
80C9BE 7A04              MOV     R2,#HIGH 0800416H
80C9C0 7916              MOV     R1,#LOW 0800416H
80C9C2 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80C9C5 A5128007B6        ECALL   ?C?PSTXDATA
80C9CA 900B21            MOV     DPTR,#DisplayLine
80C9CD E0                MOVX    A,@DPTR
80C9CE 25E0              ADD     A,ACC
80C9D0 25E0              ADD     A,ACC
80C9D2 2471              ADD     A,#LOW DispInformationTable
80C9D4 F582              MOV     DPL,A
80C9D6 E4                CLR     A
80C9D7 3404              ADDC    A,#HIGH DispInformationTable
80C9D9 F583              MOV     DPH,A
80C9DB A5128007C0        ECALL   ?C?PLDCODE
80C9E0 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80C9E3 A5128007B6        ECALL   ?C?PSTXDATA
80C9E8 900B22            MOV     DPTR,#CurrentStockCode
80C9EB E0                MOVX    A,@DPTR
80C9EC 75F005            MOV     B,#05H
80C9EF 900004            MOV     DPTR,#GoodsWaySetVal+02H
80C9F2 A51280079F        ECALL   ?C?OFFXADD
80C9F7 E0                MOVX    A,@DPTR
80C9F8 FF                MOV     R7,A
80C9F9 A3                INC     DPTR
80C9FA E0                MOVX    A,@DPTR
80C9FB 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80C9FE CF                XCH     A,R7
80C9FF F0                MOVX    @DPTR,A
80CA00 A3                INC     DPTR
80CA01 EF                MOV     A,R7
80CA02 F0                MOVX    @DPTR,A
80CA03         
 1989: 				break;				
80CA03 02CAEC            LJMP    ?C1050?MAINFLOW
 1990: 			case 10:
80CA06         ?C0435?MAINFLOW:
 1991: 				i = sprintf( DisplayBuffer, "%s %u.%u", DispInformationTable[DisplayLine].str,
80CA06 7B80              MOV     R3,#BYTE2 080041CH
80CA08 7A04              MOV     R2,#HIGH 080041CH
80CA0A 791C              MOV     R1,#LOW 080041CH
80CA0C 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80CA0F A5128007B6        ECALL   ?C?PSTXDATA
80CA14 900B21            MOV     DPTR,#DisplayLine
80CA17 E0                MOVX    A,@DPTR
80CA18 25E0              ADD     A,ACC
80CA1A 25E0              ADD     A,ACC
80CA1C 2471              ADD     A,#LOW DispInformationTable
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 493


80CA1E F582              MOV     DPL,A
80CA20 E4                CLR     A
80CA21 3404              ADDC    A,#HIGH DispInformationTable
80CA23 F583              MOV     DPH,A
80CA25 A5128007C0        ECALL   ?C?PLDCODE
80CA2A 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80CA2D A5128007B6        ECALL   ?C?PSTXDATA
80CA32 900B22            MOV     DPTR,#CurrentStockCode
80CA35 E0                MOVX    A,@DPTR
80CA36 75F005            MOV     B,#05H
80CA39 900004            MOV     DPTR,#GoodsWaySetVal+02H
80CA3C A51280079F        ECALL   ?C?OFFXADD
80CA41 E0                MOVX    A,@DPTR
80CA42 FA                MOV     R2,A
80CA43 A3                INC     DPTR
80CA44 E0                MOVX    A,@DPTR
80CA45 FB                MOV     R3,A
80CA46 900466            MOV     DPTR,#SystemParameter+048H
80CA49 E0                MOVX    A,@DPTR
80CA4A FC                MOV     R4,A
80CA4B A3                INC     DPTR
80CA4C E0                MOVX    A,@DPTR
80CA4D FD                MOV     R5,A
80CA4E AF03              MOV     R7,AR3
80CA50 AE02              MOV     R6,AR2
80CA52 A51280056C        ECALL   ?C?UIDIV
80CA57 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80CA5A EE                MOV     A,R6
80CA5B F0                MOVX    @DPTR,A
80CA5C A3                INC     DPTR
80CA5D EF                MOV     A,R7
80CA5E F0                MOVX    @DPTR,A
80CA5F 900466            MOV     DPTR,#SystemParameter+048H
80CA62 E0                MOVX    A,@DPTR
80CA63 FC                MOV     R4,A
80CA64 A3                INC     DPTR
80CA65 E0                MOVX    A,@DPTR
80CA66 FD                MOV     R5,A
80CA67 AF03              MOV     R7,AR3
80CA69 AE02              MOV     R6,AR2
80CA6B A51280056C        ECALL   ?C?UIDIV
80CA70 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
80CA73 EC                MOV     A,R4
80CA74 F0                MOVX    @DPTR,A
80CA75 A3                INC     DPTR
80CA76 ED                MOV     A,R5
80CA77 F0                MOVX    @DPTR,A
80CA78         
 1992: 					GoodsWaySetVal[CurrentStockCode].Price/SystemParameter.curUnit,GoodsWaySetVal[CurrentStockCode].Price%System
>> Parameter.curUnit );				
 1993: 				break;
80CA78 8072              SJMP    ?C1050?MAINFLOW
 1994: 			case 100:
80CA7A         ?C0436?MAINFLOW:
 1995: 				i = sprintf( DisplayBuffer, "%s %u.%02u", DispInformationTable[DisplayLine].str,
80CA7A 7B80              MOV     R3,#BYTE2 0800425H
80CA7C 7A04              MOV     R2,#HIGH 0800425H
80CA7E 7925              MOV     R1,#LOW 0800425H
80CA80 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80CA83 A5128007B6        ECALL   ?C?PSTXDATA
80CA88 900B21            MOV     DPTR,#DisplayLine
80CA8B E0                MOVX    A,@DPTR
80CA8C 25E0              ADD     A,ACC
80CA8E 25E0              ADD     A,ACC
80CA90 2471              ADD     A,#LOW DispInformationTable
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 494


80CA92 F582              MOV     DPL,A
80CA94 E4                CLR     A
80CA95 3404              ADDC    A,#HIGH DispInformationTable
80CA97 F583              MOV     DPH,A
80CA99 A5128007C0        ECALL   ?C?PLDCODE
80CA9E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80CAA1 A5128007B6        ECALL   ?C?PSTXDATA
80CAA6 900B22            MOV     DPTR,#CurrentStockCode
80CAA9 E0                MOVX    A,@DPTR
80CAAA 75F005            MOV     B,#05H
80CAAD 900004            MOV     DPTR,#GoodsWaySetVal+02H
80CAB0 A51280079F        ECALL   ?C?OFFXADD
80CAB5 E0                MOVX    A,@DPTR
80CAB6 FA                MOV     R2,A
80CAB7 A3                INC     DPTR
80CAB8 E0                MOVX    A,@DPTR
80CAB9 FB                MOV     R3,A
80CABA 900466            MOV     DPTR,#SystemParameter+048H
80CABD E0                MOVX    A,@DPTR
80CABE FC                MOV     R4,A
80CABF A3                INC     DPTR
80CAC0 E0                MOVX    A,@DPTR
80CAC1 FD                MOV     R5,A
80CAC2 AF03              MOV     R7,AR3
80CAC4 AE02              MOV     R6,AR2
80CAC6 A51280056C        ECALL   ?C?UIDIV
80CACB 901B86            MOV     DPTR,#?_sprintf?BYTE+09H
80CACE EE                MOV     A,R6
80CACF F0                MOVX    @DPTR,A
80CAD0 A3                INC     DPTR
80CAD1 EF                MOV     A,R7
80CAD2 F0                MOVX    @DPTR,A
80CAD3 900466            MOV     DPTR,#SystemParameter+048H
80CAD6 E0                MOVX    A,@DPTR
80CAD7 FC                MOV     R4,A
80CAD8 A3                INC     DPTR
80CAD9 E0                MOVX    A,@DPTR
80CADA FD                MOV     R5,A
80CADB AF03              MOV     R7,AR3
80CADD AE02              MOV     R6,AR2
80CADF A51280056C        ECALL   ?C?UIDIV
80CAE4 901B88            MOV     DPTR,#?_sprintf?BYTE+0BH
80CAE7 EC                MOV     A,R4
80CAE8 F0                MOVX    @DPTR,A
80CAE9 A3                INC     DPTR
80CAEA ED                MOV     A,R5
80CAEB F0                MOVX    @DPTR,A
80CAEC         
80CAEC 7B00              MOV     R3,#?C?XDATASEG
80CAEE 7A04              MOV     R2,#HIGH DisplayBuffer
80CAF0 796B              MOV     R1,#LOW DisplayBuffer
80CAF2 A512800949        ECALL   _sprintf
80CAF7 901595            MOV     DPTR,#i
80CAFA EF                MOV     A,R7
80CAFB F0                MOVX    @DPTR,A
 1996: 					GoodsWaySetVal[CurrentStockCode].Price/SystemParameter.curUnit,GoodsWaySetVal[CurrentStockCode].Price%System
>> Parameter.curUnit );				
 1997: 			break;		
 1998: 		}				
 1999: 	}
80CAFC         ?C0429?MAINFLOW:
 2000: 	DisplayStr( 0, __LINE1__, 1, DisplayBuffer, i );
80CAFC D21A              SETB    ?_DisplayStr?BIT
80CAFE 7B00              MOV     R3,#?C?XDATASEG
80CB00 7A04              MOV     R2,#HIGH DisplayBuffer
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 495


80CB02 796B              MOV     R1,#LOW DisplayBuffer
80CB04 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80CB07 A5128007B6        ECALL   ?C?PSTXDATA
80CB0C 901595            MOV     DPTR,#i
80CB0F E0                MOVX    A,@DPTR
80CB10 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80CB13 F0                MOVX    @DPTR,A
80CB14 7D01              MOV     R5,#01H
80CB16 E4                CLR     A
80CB17 FF                MOV     R7,A
80CB18 A512808062        ECALL   _DisplayStr
 2001: 	WaitForWork( 3000, NULL );
80CB1D E4                CLR     A
80CB1E 7FB8              MOV     R7,#0B8H
80CB20 7E0B              MOV     R6,#0BH
80CB22 A512807B35        ECALL   ?L?COM000D
 2002: 	ClearKey();
80CB27 A5128087A8        ECALL   ClearKey
 2003: 	QueryFlag = 0;
80CB2C C227              CLR     QueryFlag
 2004: 	QueryTimer = 0;
80CB2E E4                CLR     A
80CB2F F514              MOV     QueryTimer,A
 2005: 	CurrentStockCode = 0;
80CB31 900B22            MOV     DPTR,#CurrentStockCode
80CB34 F0                MOVX    @DPTR,A
 2006: 	UpdataDisp = 6;
80CB35 A3                INC     DPTR
80CB36 7406              MOV     A,#06H
80CB38 F0                MOVX    @DPTR,A
 2007: 	return 0;
80CB39 7F00              MOV     R7,#00H
 2008: }
80CB3B         ?C0437?MAINFLOW:
80CB3B A522              ERET    
----- FUNCTION QueryIsGoodsWay (END) -------


----- FUNCTION IsInputGoodsNo (BEGIN) -----
 FILE: 'mainflow.c'
 2275: u_char IsInputGoodsNo()
 2276: {
 2277: 	u_char xdata key = 0;
 2278: 
;---- Variable 'key' assigned to Register 'R7' ----
80CB3D E4                CLR     A
80CB3E FF                MOV     R7,A
 2279: //	Trace( "\n IsInputGoodsNo" );
 2280: 	if ( SystemStatus != 1 ) 
80CB3F 9001C4            MOV     DPTR,#SystemStatus
80CB42 E0                MOVX    A,@DPTR
80CB43 6401              XRL     A,#01H
80CB45 6003              JZ      ?C0494?MAINFLOW
 2281: 		return 1; // 系统关闭，按键不理,当做没按
80CB47 0F                INC     R7
80CB48 803A              SJMP    ?C0495?MAINFLOW
80CB4A         ?C0494?MAINFLOW:
 2282: 	if( CurrentPayed <= 0 )
80CB4A D3                SETB    C
80CB4B 900B20            MOV     DPTR,#CurrentPayed+01H
80CB4E E0                MOVX    A,@DPTR
80CB4F 9400              SUBB    A,#00H
80CB51 900B1F            MOV     DPTR,#CurrentPayed
80CB54 E0                MOVX    A,@DPTR
80CB55 9400              SUBB    A,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 496


80CB57 5004              JNC     ?C0496?MAINFLOW
 2283: 		return 2;	
80CB59 7F02              MOV     R7,#02H
80CB5B 8027              SJMP    ?C0495?MAINFLOW
80CB5D         ?C0496?MAINFLOW:
 2284: 	WaitForWork( 10, NULL );		
80CB5D E4                CLR     A
80CB5E 7F0A              MOV     R7,#0AH
80CB60 FE                MOV     R6,A
80CB61 A512807B35        ECALL   ?L?COM000D
 2285: 	key = GetKey();
80CB66 A512809275        ECALL   GetKey
 2286: 	if( ( key >= 0 ) && ( key <= 9 ) )
80CB6B EF                MOV     A,R7
80CB6C C3                CLR     C
80CB6D 9400              SUBB    A,#00H
80CB6F 4011              JC      ?C0497?MAINFLOW
80CB71 EF                MOV     A,R7
80CB72 D3                SETB    C
80CB73 9409              SUBB    A,#09H
80CB75 500B              JNC     ?C0497?MAINFLOW
 2287: 	{
 2288: 		CurrentStockCode = key + 0x30;
80CB77 EF                MOV     A,R7
80CB78 2430              ADD     A,#030H
80CB7A 900B22            MOV     DPTR,#CurrentStockCode
80CB7D F0                MOVX    @DPTR,A
 2289: //		Trace( "\n IsInputGoodsNo key = %bu", key );
 2290: 		return 0;
80CB7E 7F00              MOV     R7,#00H
80CB80 8002              SJMP    ?C0495?MAINFLOW
 2291: 	}
80CB82         ?C0497?MAINFLOW:
 2292: 	else				
 2293: 		return 1;	
80CB82 7F01              MOV     R7,#01H
 2294: }
80CB84         ?C0495?MAINFLOW:
80CB84 A522              ERET    
----- FUNCTION IsInputGoodsNo (END) -------


----- FUNCTION IsMoneyEnough (BEGIN) -----
 FILE: 'mainflow.c'
 2485: u_char IsMoneyEnough()
 2486: {
 2487: //	Trace( "\n Price = %d", GoodsWaySetVal[CurrentStockCode].Price );		
 2488: //	Trace( "\n CurrentPayed = %d", CurrentPayed );		
 2489: 	if( GoodsWaySetVal[CurrentStockCode].Price > CurrentPayed )	
80CB86 900B22            MOV     DPTR,#CurrentStockCode
80CB89 E0                MOVX    A,@DPTR
80CB8A 75F005            MOV     B,#05H
80CB8D 900004            MOV     DPTR,#GoodsWaySetVal+02H
80CB90 A51280079F        ECALL   ?C?OFFXADD
80CB95 E0                MOVX    A,@DPTR
80CB96 FE                MOV     R6,A
80CB97 A3                INC     DPTR
80CB98 E0                MOVX    A,@DPTR
80CB99 FF                MOV     R7,A
80CB9A 900B1F            MOV     DPTR,#CurrentPayed
80CB9D E0                MOVX    A,@DPTR
80CB9E FC                MOV     R4,A
80CB9F A3                INC     DPTR
80CBA0 E0                MOVX    A,@DPTR
80CBA1 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 497


80CBA2 D3                SETB    C
80CBA3 EF                MOV     A,R7
80CBA4 9D                SUBB    A,R5
80CBA5 EE                MOV     A,R6
80CBA6 9C                SUBB    A,R4
80CBA7 4009              JC      ?C0541?MAINFLOW
 2490: 	{
 2491: 		CurrentStockCode = 0;	
80CBA9 E4                CLR     A
80CBAA 900B22            MOV     DPTR,#CurrentStockCode
80CBAD F0                MOVX    @DPTR,A
 2492: 		return 1;	
80CBAE 7F01              MOV     R7,#01H
80CBB0 8002              SJMP    ?C0542?MAINFLOW
 2493: 	}
80CBB2         ?C0541?MAINFLOW:
 2494: 	return 0;
80CBB2 7F00              MOV     R7,#00H
 2495: }
80CBB4         ?C0542?MAINFLOW:
80CBB4 A522              ERET    
----- FUNCTION IsMoneyEnough (END) -------


----- FUNCTION TestHardWare (BEGIN) -----
 FILE: 'mainflow.c'
 2935: u_char TestHardWare()
 2936: {
 2937: //	bit data z = 0;
 2938: 		
 2939: 	if ( HardWareErr ) 		
80CBB6 90047F            MOV     DPTR,#HardWareErr
80CBB9 E0                MOVX    A,@DPTR
80CBBA 7002              JNZ     ?C1005?MAINFLOW
80CBBC A3                INC     DPTR
80CBBD E0                MOVX    A,@DPTR
80CBBE         ?C1005?MAINFLOW:
80CBBE 6007              JZ      ?C0634?MAINFLOW
 2940: 		CheckHardWare( 3 ); //查检硬件故障	
80CBC0 7F03              MOV     R7,#03H
80CBC2 A5128075BC        ECALL   _CheckHardWare
80CBC7         ?C0634?MAINFLOW:
 2941: 	if ( HardWareErr == 0 ) 
80CBC7 90047F            MOV     DPTR,#HardWareErr
80CBCA E0                MOVX    A,@DPTR
80CBCB 7002              JNZ     ?C1006?MAINFLOW
80CBCD A3                INC     DPTR
80CBCE E0                MOVX    A,@DPTR
80CBCF         ?C1006?MAINFLOW:
80CBCF 7004              JNZ     ?C0635?MAINFLOW
 2942: 		isShowLcd = 1;
80CBD1 D228              SETB    isShowLcd
80CBD3 8004              SJMP    ?C0636?MAINFLOW
80CBD5         ?C0635?MAINFLOW:
 2943: 	else			
 2944: 		return 0;	
80CBD5 7F00              MOV     R7,#00H
80CBD7 8002              SJMP    ?C0637?MAINFLOW
80CBD9         ?C0636?MAINFLOW:
 2945: 	return 0 ;
80CBD9 7F00              MOV     R7,#00H
 2946: }
80CBDB         ?C0637?MAINFLOW:
80CBDB A522              ERET    
----- FUNCTION TestHardWare (END) -------
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 498




----- FUNCTION ExistAnyChoose (BEGIN) -----
 FILE: 'mainflow.c'
 3294: u_char ExistAnyChoose()
 3295: {
 3296: 	u_char xdata i;
 3297: 	
 3298: 	for( i= 0 ; i <= GOODSWAYNUM ; i++)
;---- Variable 'i' assigned to Register 'R7' ----
80CBDD E4                CLR     A
80CBDE FF                MOV     R7,A
80CBDF         ?C0722?MAINFLOW:
 3299: 	{		
 3300: 		if ( CurrentPayed >= GoodsWaySetVal[i].Price )		 	
80CBDF 75F005            MOV     B,#05H
80CBE2 EF                MOV     A,R7
80CBE3 900004            MOV     DPTR,#GoodsWaySetVal+02H
80CBE6 A51280079F        ECALL   ?C?OFFXADD
80CBEB E0                MOVX    A,@DPTR
80CBEC FC                MOV     R4,A
80CBED A3                INC     DPTR
80CBEE E0                MOVX    A,@DPTR
80CBEF FD                MOV     R5,A
80CBF0 C3                CLR     C
80CBF1 900B20            MOV     DPTR,#CurrentPayed+01H
80CBF4 E0                MOVX    A,@DPTR
80CBF5 9D                SUBB    A,R5
80CBF6 900B1F            MOV     DPTR,#CurrentPayed
80CBF9 E0                MOVX    A,@DPTR
80CBFA 9C                SUBB    A,R4
80CBFB 4004              JC      ?C0724?MAINFLOW
 3301: 			return 0 ; //找到同类更便宜卡	
80CBFD 7F00              MOV     R7,#00H
80CBFF 8016              SJMP    ?C0726?MAINFLOW
 3302: 	}
80CC01         ?C0724?MAINFLOW:
80CC01 0F                INC     R7
80CC02 EF                MOV     A,R7
80CC03 B441D9            CJNE    A,#041H,?C0722?MAINFLOW
80CC06         ?C0723?MAINFLOW:
 3303: 	//Trace( "\n Cheaper stock Not Found! Ready to Reject Coin=%d" , CurrentPayed );
 3304: 	CurrentDispenseCoin = CurrentPayed;
80CC06 900B1F            MOV     DPTR,#CurrentPayed
80CC09 E0                MOVX    A,@DPTR
80CC0A FF                MOV     R7,A
80CC0B A3                INC     DPTR
80CC0C E0                MOVX    A,@DPTR
80CC0D 900469            MOV     DPTR,#CurrentDispenseCoin
80CC10 CF                XCH     A,R7
80CC11 F0                MOVX    @DPTR,A
80CC12 A3                INC     DPTR
80CC13 EF                MOV     A,R7
80CC14 F0                MOVX    @DPTR,A
 3305: 	return( 1 ); //没的选择，必需要退币 
80CC15 7F01              MOV     R7,#01H
 3306: }
80CC17         ?C0726?MAINFLOW:
80CC17 A522              ERET    
----- FUNCTION ExistAnyChoose (END) -------


----- FUNCTION ReturnChange (BEGIN) -----
 FILE: 'mainflow.c'
 3391: u_char ReturnChange()
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 499


 3392: {
 3393: //	Trace( "\n ReturnChange");
 3394: //	LightBlinkFlag = 0;    
 3395: //	LightBlinkFlag = 1; 			
 3396: //	if ( CurrentPayed > GoodsWaySetVal[CurrentStockCode].Price )
 3397: //	{	
 3398: 	CurrentDispenseCoin = CurrentPayed;// - GoodsWaySetVal[CurrentStockCode].Price; 
80CC19 A512803648        ECALL   ?L?COM0023
80CC1E EF                MOV     A,R7
80CC1F 7F01              MOV     R7,#01H
80CC21 7001              JNZ     ?C0741?MAINFLOW
 3399: 	CurrentPayed = 0;
 3400: 	if( DispenseCoin() == 0 )					
 3401: 		return( 0 );		
80CC23 FF                MOV     R7,A
80CC24         ?C0741?MAINFLOW:
 3402: 	else					
 3403: 		return 1;//找零失败		
 3404: //	}	
 3405: //	return  0 ;
 3406: }
80CC24         ?C0742?MAINFLOW:
80CC24 A522              ERET    
----- FUNCTION ReturnChange (END) -------


----- FUNCTION Mission (BEGIN) -----
 FILE: 'mainflow.c'
 3515: void Mission()
 3516: {		
 3517: 	if ( IsShortMsgIn())
 3518: 	{	
80CC26 A51280CC35        ECALL   IsShortMsgIn
80CC2B 5006              JNC     ?C0766?MAINFLOW
 3519:  		IsShortMessageIn = 1;
 3520: 		Trace("Have SMS come in ");
80CC2D 900AEB            MOV     DPTR,#IsShortMessageIn
80CC30 7401              MOV     A,#01H
80CC32 F0                MOVX    @DPTR,A
 3521: 	}
 3522: }
80CC33         ?C0766?MAINFLOW:
80CC33 A522              ERET    
----- FUNCTION Mission (END) -------


----- FUNCTION IsShortMsgIn (BEGIN) -----
 FILE: 'mobile.c'
  662: 	bit IsShortMsgIn( void )
  663: 	{
  664: 	//	Trace("\n IsShortMsgIn");
  665: 		return ! ( ZhkSmsRxNum == 0 );
80CC35 901581            MOV     DPTR,#ZhkSmsRxNum
80CC38 E0                MOVX    A,@DPTR
80CC39 C3                CLR     C
80CC3A 7001              JNZ     ?C0126?MOBILE
80CC3C D3                SETB    C
80CC3D         ?C0126?MOBILE:
80CC3D         ?C0127?MOBILE:
80CC3D B3                CPL     C
  666: 	}
80CC3E         ?C0128?MOBILE:
80CC3E A522              ERET    
----- FUNCTION IsShortMsgIn (END) -------

LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 500



----- FUNCTION DeviceCheck (BEGIN) -----
 FILE: 'devicecheck.c'
 1011: void DeviceCheck()
 1012: {
 1013:     //菜单显示数组   
 1014: 	unsigned char  xdata firstNum; //一级菜单编号	
 1015: 	unsigned char  xdata LineNum;  //选中行在屏幕中的行号		
 1016: 	unsigned char  xdata key;
 1017: 	u_char   xdata status;
 1018: 	bit	data Notout;
 1019: 	unsigned char xdata line[20];
 1020: 
 1021: 	memset(line , 0 , sizeof( line ));
80CC40 7E00              MOV     R6,#00H
80CC42 7F14              MOV     R7,#014H
80CC44 7D00              MOV     R5,#00H
80CC46 7B00              MOV     R3,#?C?XDATASEG
80CC48 7A17              MOV     R2,#HIGH line
80CC4A 792A              MOV     R1,#LOW line
80CC4C A5128008A6        ECALL   ?C?MEMSET
 1022: 	key = KEY_NULL;
80CC51 901728            MOV     DPTR,#key
80CC54 74FF              MOV     A,#0FFH
80CC56 F0                MOVX    @DPTR,A
 1023: 	status = 0;
80CC57 E4                CLR     A
80CC58 A3                INC     DPTR
80CC59 F0                MOVX    @DPTR,A
 1024: 	firstNum = 1;
80CC5A 901726            MOV     DPTR,#firstNum
80CC5D 04                INC     A
80CC5E F0                MOVX    @DPTR,A
 1025: 	LineNum = 2;	
80CC5F A3                INC     DPTR
80CC60 04                INC     A
80CC61 F0                MOVX    @DPTR,A
 1026: 	Notout = 1;
80CC62 D218              SETB    Notout
 1027: 
 1028: 	ClearKey();
80CC64 A5128087A8        ECALL   ClearKey
 1029: 	/*菜单初始化显示（第1，2行）*/	  	
 1030: //	DisplayStr( 0, 0, 1, WMenuStr[0].str, WMenuStr[0].len );		
 1031: //#ifndef _HAVE_CASHER
 1032: 	m_iCheckDevice = 0;
80CC69 E4                CLR     A
80CC6A 902DF2            MOV     DPTR,#m_iCheckDevice
80CC6D F0                MOVX    @DPTR,A
 1033: 	if( SystemParameter.BillNo != 1 )
80CC6E 900425            MOV     DPTR,#SystemParameter+07H
80CC71 E0                MOVX    A,@DPTR
80CC72 6401              XRL     A,#01H
80CC74 6006              JZ      ?C0227?DEVICECHECK
 1034: //		GetDeviceStatus( 0 );	
 1035: //	else
 1036: 		DeviceStatus.BillAccepter = 128;
80CC76 900B16            MOV     DPTR,#DeviceStatus
80CC79 7480              MOV     A,#080H
80CC7B F0                MOVX    @DPTR,A
80CC7C         ?C0227?DEVICECHECK:
 1037: //	GetDeviceStatus( 1 );	
 1038: //#endif
 1039: 	DispDeviceStatus( 0, 0, 0 );	
80CC7C C219              CLR     ?_DispDeviceStatus?BIT
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 501


80CC7E E4                CLR     A
80CC7F FD                MOV     R5,A
80CC80 FF                MOV     R7,A
80CC81 A512804FBB        ECALL   _DispDeviceStatus
 1040: 	DispDeviceStatus( 1, 1, 0 );
80CC86 C219              CLR     ?_DispDeviceStatus?BIT
80CC88 7D01              MOV     R5,#01H
80CC8A 7F01              MOV     R7,#01H
80CC8C A512804FBB        ECALL   _DispDeviceStatus
 1041: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置当在第二行上且为整行光标状态
80CC91 A512808171        ECALL   ?L?COM000F
 1042: 	//Trace( "in Menu select begin\n" );		
 1043: 	m_iCheckDevice = 1;
80CC96 902DF2            MOV     DPTR,#m_iCheckDevice
80CC99 7401              MOV     A,#01H
80CC9B F0                MOVX    @DPTR,A
80CC9C         ?C0228?DEVICECHECK:
 1044: 	while( Notout )    //超时或客户退出
80CC9C 201803            JB      Notout,$ + 6H
80CC9F 02CE21            LJMP    ?C0229?DEVICECHECK
 1045: 	{				
 1046: 		key = GetKey();
80CCA2 A512809275        ECALL   GetKey
80CCA7 901728            MOV     DPTR,#key
80CCAA EF                MOV     A,R7
80CCAB F0                MOVX    @DPTR,A
 1047: 		switch( key )		
80CCAC 24F3              ADD     A,#0F3H
80CCAE 7003              JNZ     $ + 5H
80CCB0 02CD75            LJMP    ?C0246?DEVICECHECK
80CCB3 24F2              ADD     A,#0F2H
80CCB5 7003              JNZ     $ + 5H
80CCB7 02CD70            LJMP    ?C0245?DEVICECHECK
80CCBA 24CB              ADD     A,#0CBH
80CCBC 6067              JZ      ?C0238?DEVICECHECK
80CCBE 2408              ADD     A,#08H
80CCC0 6003              JZ      $ + 5H
80CCC2 02CE12            LJMP    ?C0230?DEVICECHECK
 1048: 		{
 1049: 			case KEY_UP://上移  	
80CCC5         ?C0231?DEVICECHECK:
 1050: 			     if( LineNum == 2 )//选中标记上移
80CCC5 901727            MOV     DPTR,#LineNum
80CCC8 E0                MOVX    A,@DPTR
80CCC9 6402              XRL     A,#02H
80CCCB 702D              JNZ     ?C0232?DEVICECHECK
 1051: 			     {			     
 1052: 			     	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
80CCCD D21A              SETB    ?_DisplayCursorState?BIT
80CCCF 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80CCD2 7402              MOV     A,#02H
80CCD4 F0                MOVX    @DPTR,A
80CCD5 D21B              SETB    ?_DisplayCursorState?BIT+01H
80CCD7 E4                CLR     A
80CCD8 FD                MOV     R5,A
80CCD9 FF                MOV     R7,A
80CCDA A51280817F        ECALL   _DisplayCursorState
 1053: 			     	LineNum = 1;			   
80CCDF 901727            MOV     DPTR,#LineNum
80CCE2 7401              MOV     A,#01H
80CCE4 F0                MOVX    @DPTR,A
 1054: 					if( firstNum == 0 )
80CCE5 901726            MOV     DPTR,#firstNum
80CCE8 E0                MOVX    A,@DPTR
80CCE9 7006              JNZ     ?C0233?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 502


 1055: 						firstNum = MENU_COUNT(WMenuStr)-1;					
80CCEB 7408              MOV     A,#08H
80CCED F0                MOVX    @DPTR,A
80CCEE 02CE12            LJMP    ?C0230?DEVICECHECK
80CCF1         ?C0233?DEVICECHECK:
 1056: 					else
 1057: 						firstNum--;
80CCF1 901726            MOV     DPTR,#firstNum
80CCF4 E0                MOVX    A,@DPTR
80CCF5 14                DEC     A
80CCF6 F0                MOVX    @DPTR,A
 1058: 			     }
80CCF7 02CE12            LJMP    ?C0230?DEVICECHECK
80CCFA         ?C0232?DEVICECHECK:
 1059: 			     else//菜单上翻
 1060: 			     {
 1061: 			      	/*当firstNum<=1不能上翻了*/			      	
 1062: 					DispDeviceMenu( firstNum, 1);									    
80CCFA A51280514A        ECALL   ?L?COM0036
 1063: 					if( firstNum == 0 )
80CCFF 901726            MOV     DPTR,#firstNum
80CD02 E0                MOVX    A,@DPTR
80CD03 7005              JNZ     ?C0236?DEVICECHECK
 1064: 						firstNum = MENU_COUNT(WMenuStr)-1;					
80CD05 7408              MOV     A,#08H
80CD07 F0                MOVX    @DPTR,A
80CD08 8006              SJMP    ?C0237?DEVICECHECK
80CD0A         ?C0236?DEVICECHECK:
 1065: 					else
 1066: 						firstNum--;
80CD0A 901726            MOV     DPTR,#firstNum
80CD0D E0                MOVX    A,@DPTR
80CD0E 14                DEC     A
80CD0F F0                MOVX    @DPTR,A
80CD10         ?C0237?DEVICECHECK:
 1067: 					DispDeviceMenu( firstNum, 0);						
80CD10 901726            MOV     DPTR,#firstNum
80CD13 E0                MOVX    A,@DPTR
80CD14 FF                MOV     R7,A
80CD15 E4                CLR     A
80CD16 FD                MOV     R5,A
80CD17 A512805151        ECALL   _DispDeviceMenu
 1068: 					LineNum = 1;					
80CD1C 901727            MOV     DPTR,#LineNum
80CD1F 7401              MOV     A,#01H
80CD21 F0                MOVX    @DPTR,A
 1069: 			     }
 1070: 				 break;
80CD22 02CE12            LJMP    ?C0230?DEVICECHECK
 1071: 			case KEY_DOWN://下移				
80CD25         ?C0238?DEVICECHECK:
 1072: 				if( LineNum == 1 )//选中标记下移
80CD25 901727            MOV     DPTR,#LineNum
80CD28 E0                MOVX    A,@DPTR
80CD29 6401              XRL     A,#01H
80CD2B 7018              JNZ     ?C0239?DEVICECHECK
 1073: 				{				 
 1074: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标				   
80CD2D A512808171        ECALL   ?L?COM000F
 1075: 					if( firstNum == MENU_COUNT(WMenuStr)-1 )
80CD32 901726            MOV     DPTR,#firstNum
80CD35 E0                MOVX    A,@DPTR
80CD36 B40804            CJNE    A,#08H,?C0240?DEVICECHECK
 1076: 						firstNum = 0;					
80CD39 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 503


80CD3A F0                MOVX    @DPTR,A
80CD3B 802A              SJMP    ?C0313?DEVICECHECK
80CD3D         ?C0240?DEVICECHECK:
 1077: 					else
 1078: 						firstNum++;
80CD3D 901726            MOV     DPTR,#firstNum
80CD40 E0                MOVX    A,@DPTR
80CD41 04                INC     A
80CD42 F0                MOVX    @DPTR,A
80CD43         ?C0241?DEVICECHECK:
 1079: 				     LineNum = 2;				     
 1080: 				 }
80CD43 8022              SJMP    ?C0313?DEVICECHECK
80CD45         ?C0239?DEVICECHECK:
 1081: 				 else//菜单下翻
 1082: 				 {
 1083: 				    /*当firstNum<=2不能上翻了*/				    				
 1084: 					DispDeviceMenu( firstNum, 0);						
80CD45 901726            MOV     DPTR,#firstNum
80CD48 E0                MOVX    A,@DPTR
80CD49 FF                MOV     R7,A
80CD4A E4                CLR     A
80CD4B FD                MOV     R5,A
80CD4C A512805151        ECALL   _DispDeviceMenu
 1085: 			      	if( firstNum == MENU_COUNT(WMenuStr)-1 )
80CD51 901726            MOV     DPTR,#firstNum
80CD54 E0                MOVX    A,@DPTR
80CD55 B40804            CJNE    A,#08H,?C0243?DEVICECHECK
 1086: 						firstNum = 0;					
80CD58 E4                CLR     A
80CD59 F0                MOVX    @DPTR,A
80CD5A 8006              SJMP    ?C0244?DEVICECHECK
80CD5C         ?C0243?DEVICECHECK:
 1087: 					else
 1088: 						firstNum++;
80CD5C 901726            MOV     DPTR,#firstNum
80CD5F E0                MOVX    A,@DPTR
80CD60 04                INC     A
80CD61 F0                MOVX    @DPTR,A
80CD62         ?C0244?DEVICECHECK:
 1089: 					DispDeviceMenu( firstNum, 1);		  
80CD62 A51280514A        ECALL   ?L?COM0036
 1090: 					LineNum = 2;					
80CD67         
80CD67 901727            MOV     DPTR,#LineNum
80CD6A 7402              MOV     A,#02H
80CD6C F0                MOVX    @DPTR,A
 1091: 				}
 1092: 				break;
80CD6D 02CE12            LJMP    ?C0230?DEVICECHECK
 1093: 			case KEY_CANCEL:
80CD70         ?C0245?DEVICECHECK:
 1094: 				Notout = 0;
80CD70 C218              CLR     Notout
 1095: 				break;
80CD72 02CE12            LJMP    ?C0230?DEVICECHECK
 1096: 			case KEY_SUBMIT://Enter,选中了某项菜单	
80CD75         ?C0246?DEVICECHECK:
 1097: 				DisplayCursorState( 0, 0, 0, 0, 1 );//第二行整光标
80CD75 C21A              CLR     ?_DisplayCursorState?BIT
80CD77 E4                CLR     A
80CD78 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80CD7B F0                MOVX    @DPTR,A
80CD7C D21B              SETB    ?_DisplayCursorState?BIT+01H
80CD7E FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 504


80CD7F A5128087A2        ECALL   ?L?COM0012
 1098: 				ClearKey();				
 1099: 				switch(firstNum)
80CD84 901726            MOV     DPTR,#firstNum
80CD87 E0                MOVX    A,@DPTR
80CD88 FF                MOV     R7,A
80CD89 24FB              ADD     A,#0FBH
80CD8B 500D              JNC     ?C0252?DEVICECHECK
80CD8D 6012              JZ      ?C0254?DEVICECHECK
80CD8F 14                DEC     A
80CD90 600F              JZ      ?C0254?DEVICECHECK
80CD92 14                DEC     A
80CD93 601D              JZ      ?C0255?DEVICECHECK
80CD95 14                DEC     A
80CD96 6021              JZ      ?C0256?DEVICECHECK
80CD98 8024              SJMP    ?C0247?DEVICECHECK
 1100: 				{			
 1101: 					case 0:       //1纸币器状态					
 1102: 					case 1:       //2硬币器状态//					
 1103: 					case 2:       //#1退币器测试						
 1104: 					case 3:       //#1退币器测试
 1105: 					case 4:       //#1退币器测试
80CD9A         ?C0252?DEVICECHECK:
 1106: 						GetDeviceStatus( firstNum );
80CD9A A512807C69        ECALL   _GetDeviceStatus
 1107: 					break;	
80CD9F 801D              SJMP    ?C0247?DEVICECHECK
 1108: 					case 5: //用AT指令测试主板与手机模块的连接情况										
 1109: 					case 6: //发送短信测试
80CDA1         ?C0254?DEVICECHECK:
 1110: 						TestAndDispMobileStates( firstNum - 4, LineNum );
80CDA1 901726            MOV     DPTR,#firstNum
80CDA4 E0                MOVX    A,@DPTR
80CDA5 24FC              ADD     A,#0FCH
80CDA7 FF                MOV     R7,A
80CDA8 A3                INC     DPTR
80CDA9 E0                MOVX    A,@DPTR
80CDAA FD                MOV     R5,A
80CDAB A5128055FF        ECALL   _TestAndDispMobileStates
 1111: 					break;
80CDB0 800C              SJMP    ?C0247?DEVICECHECK
 1112: 					case 7://货道状态
80CDB2         ?C0255?DEVICECHECK:
 1113: 						DispGoodsWaysStates();	
80CDB2 A5128051BE        ECALL   DispGoodsWaysStates
 1114: 						break;				
80CDB7 8005              SJMP    ?C0247?DEVICECHECK
 1115: 					case 8:       //货道测试
80CDB9         ?C0256?DEVICECHECK:
 1116: 						GoodsWayTest();
80CDB9 A51280BB6C        ECALL   GoodsWayTest
 1117: 	//					Trace("\n GoodsSetSave1 = %bu", GoodsSetSave );
 1118: 						break;					
 1119: 				}
80CDBE         ?C0247?DEVICECHECK:
 1120: 				if(LineNum ==2)
80CDBE 901727            MOV     DPTR,#LineNum
80CDC1 E0                MOVX    A,@DPTR
80CDC2 6402              XRL     A,#02H
80CDC4 7021              JNZ     ?C0257?DEVICECHECK
 1121: 				{	
 1122: 					if( firstNum == 0 )						
80CDC6 901726            MOV     DPTR,#firstNum
80CDC9 E0                MOVX    A,@DPTR
80CDCA 7005              JNZ     ?C0258?DEVICECHECK
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 505


 1123: 						DispDeviceMenu( MENU_COUNT(WMenuStr)-1, 0);
80CDCC FD                MOV     R5,A
80CDCD 7F08              MOV     R7,#08H
80CDCF 8008              SJMP    ?C0314?DEVICECHECK
80CDD1         ?C0258?DEVICECHECK:
 1124: 					else						
 1125: 						DispDeviceMenu( firstNum - 1, 0);
80CDD1 901726            MOV     DPTR,#firstNum
80CDD4 E0                MOVX    A,@DPTR
80CDD5 14                DEC     A
80CDD6 FF                MOV     R7,A
80CDD7 E4                CLR     A
80CDD8 FD                MOV     R5,A
80CDD9         
80CDD9 A512805151        ECALL   _DispDeviceMenu
80CDDE         ?C0259?DEVICECHECK:
 1126: 					DispDeviceMenu( firstNum, 1);					
80CDDE 901726            MOV     DPTR,#firstNum
80CDE1 E0                MOVX    A,@DPTR
80CDE2 FF                MOV     R7,A
80CDE3 7D01              MOV     R5,#01H
 1127: 				}
80CDE5 8021              SJMP    ?C0315?DEVICECHECK
80CDE7         ?C0257?DEVICECHECK:
 1128: 				else
 1129: 				{												
 1130: 					if( firstNum == ( MENU_COUNT(WMenuStr)-1 ) )
80CDE7 901726            MOV     DPTR,#firstNum
80CDEA E0                MOVX    A,@DPTR
80CDEB B40806            CJNE    A,#08H,?C0261?DEVICECHECK
 1131: 						DispDeviceMenu( 0, 1);					
80CDEE 7D01              MOV     R5,#01H
80CDF0 E4                CLR     A
80CDF1 FF                MOV     R7,A
80CDF2 8008              SJMP    ?C0316?DEVICECHECK
80CDF4         ?C0261?DEVICECHECK:
 1132: 					else						
 1133: 						DispDeviceMenu( firstNum + 1, 1);					
80CDF4 901726            MOV     DPTR,#firstNum
80CDF7 E0                MOVX    A,@DPTR
80CDF8 04                INC     A
80CDF9 FF                MOV     R7,A
80CDFA 7D01              MOV     R5,#01H
80CDFC         
80CDFC A512805151        ECALL   _DispDeviceMenu
80CE01         ?C0262?DEVICECHECK:
 1134: 					DispDeviceMenu( firstNum, 0);
80CE01 901726            MOV     DPTR,#firstNum
80CE04 E0                MOVX    A,@DPTR
80CE05 FF                MOV     R7,A
80CE06 E4                CLR     A
80CE07 FD                MOV     R5,A
80CE08         
80CE08 A512805151        ECALL   _DispDeviceMenu
 1135: 				}				
80CE0D         ?C0260?DEVICECHECK:
 1136: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//第二行整光标
80CE0D A512808791        ECALL   ?L?COM0010
 1137: 				ClearKey();	
 1138: 				break;
 1139: 		}
80CE12         ?C0230?DEVICECHECK:
 1140: 		CoreProcessCycle();//让出时间片
80CE12 A512807ADC        ECALL   CoreProcessCycle
 1141: 		DelayMs( 10 );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 506


80CE17 7F0A              MOV     R7,#0AH
80CE19 A512809789        ECALL   _DelayMs
 1142: 	}		
80CE1E 02CC9C            LJMP    ?C0228?DEVICECHECK
80CE21         ?C0229?DEVICECHECK:
 1143: 	m_iCheckDevice = 0;
80CE21 E4                CLR     A
80CE22 902DF2            MOV     DPTR,#m_iCheckDevice
80CE25 F0                MOVX    @DPTR,A
 1144: }
80CE26 A522              ERET    
----- FUNCTION DeviceCheck (END) -------


----- FUNCTION GetOneKey (BEGIN) -----
 FILE: 'CommonFunction.c'
  388: u_char GetOneKey()
  389: {
  390: 	u_char xdata k = KEY_NULL ;
  391: 	u_char xdata m_str[2];
80CE28 901788            MOV     DPTR,#k
80CE2B 74FF              MOV     A,#0FFH
80CE2D F0                MOVX    @DPTR,A
  392: //	u_char xdata line[2];	
  393: 	unsigned int xdata interval = 500;   //超时时间5秒
80CE2E 90178B            MOV     DPTR,#interval
80CE31 7401              MOV     A,#01H
80CE33 F0                MOVX    @DPTR,A
80CE34 A3                INC     DPTR
80CE35 74F4              MOV     A,#0F4H
80CE37 F0                MOVX    @DPTR,A
  394: 	
  395: 	memset( m_str, 0 , sizeof (m_str ) );
80CE38 7E00              MOV     R6,#00H
80CE3A 7F02              MOV     R7,#02H
80CE3C 7D00              MOV     R5,#00H
80CE3E 7B00              MOV     R3,#?C?XDATASEG
80CE40 7A17              MOV     R2,#HIGH m_str
80CE42 7989              MOV     R1,#LOW m_str
80CE44 A5128008A6        ECALL   ?C?MEMSET
80CE49         ?C0095?COMMONFUNCTION:
  396: 	while( ( k == KEY_NULL ) && ( interval != 0 ) )
80CE49 901788            MOV     DPTR,#k
80CE4C E0                MOVX    A,@DPTR
80CE4D B4FF30            CJNE    A,#0FFH,?C0096?COMMONFUNCTION
80CE50 90178B            MOV     DPTR,#interval
80CE53 E0                MOVX    A,@DPTR
80CE54 7002              JNZ     ?C0208?COMMONFUNCTION
80CE56 A3                INC     DPTR
80CE57 E0                MOVX    A,@DPTR
80CE58         ?C0208?COMMONFUNCTION:
80CE58 6026              JZ      ?C0096?COMMONFUNCTION
  397: 	{
  398: 		CoreProcessCycle();
80CE5A A512807ADC        ECALL   CoreProcessCycle
  399: 		WaitForWork( 50, NULL );
80CE5F E4                CLR     A
80CE60 7F32              MOV     R7,#032H
80CE62 FE                MOV     R6,A
80CE63 A512807B35        ECALL   ?L?COM000D
  400: 		k = GetKey();			
80CE68 A512809275        ECALL   GetKey
80CE6D 901788            MOV     DPTR,#k
80CE70 EF                MOV     A,R7
80CE71 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 507


  401: 		interval --;
80CE72 90178B            MOV     DPTR,#interval
80CE75 74FF              MOV     A,#0FFH
80CE77 F5F0              MOV     B,A
80CE79 A512800600        ECALL   ?C?IILDX
  402: 	}
80CE7E 80C9              SJMP    ?C0095?COMMONFUNCTION
80CE80         ?C0096?COMMONFUNCTION:
  403: 	switch( k )
80CE80 901788            MOV     DPTR,#k
80CE83 E0                MOVX    A,@DPTR
80CE84 FF                MOV     R7,A
80CE85 24F6              ADD     A,#0F6H
80CE87 5002              JNC     ?C0107?COMMONFUNCTION
80CE89 8029              SJMP    ?C0097?COMMONFUNCTION
  404: 	{
  405: 		case KEY_0:
  406: 		case KEY_1:
  407: 		case KEY_2:
  408: 		case KEY_3:
  409: 		case KEY_4:
  410: 		case KEY_5:
  411: 		case KEY_6:
  412: 		case KEY_7:
  413: 		case KEY_8:
  414: 		case KEY_9:			
80CE8B         ?C0107?COMMONFUNCTION:
  415: 			NumberToString( k ,  m_str , 1  );				
80CE8B E4                CLR     A
80CE8C FC                MOV     R4,A
80CE8D FD                MOV     R5,A
80CE8E FE                MOV     R6,A
80CE8F 7B00              MOV     R3,#?C?XDATASEG
80CE91 7A17              MOV     R2,#HIGH m_str
80CE93 7989              MOV     R1,#LOW m_str
80CE95 A512811130        ECALL   ?L?COM003B
  416: 		//	sprintf( m_str,"%bu", k );
  417: 			DisplayStr( 0, 0, 0, m_str, 1 );
80CE9A C21A              CLR     ?_DisplayStr?BIT
80CE9C 7B00              MOV     R3,#?C?XDATASEG
80CE9E 7A17              MOV     R2,#HIGH m_str
80CEA0 7989              MOV     R1,#LOW m_str
80CEA2 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80CEA5 A5128007B6        ECALL   ?C?PSTXDATA
80CEAA 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80CEAD 7401              MOV     A,#01H
80CEAF A51280805E        ECALL   ?L?COM0007
  418: 		    break;
  419: 	//	case KEY_DOT:		
  420: 	//		m_str[0] = 0x2e;
  421:     //      DisplayStr( 0, 0, 0, m_str, 1 );  
  422: 	//		break;
  423: 	}	
80CEB4         ?C0097?COMMONFUNCTION:
  424: 	if(interval == 0)
80CEB4 90178B            MOV     DPTR,#interval
80CEB7 E0                MOVX    A,@DPTR
80CEB8 7002              JNZ     ?C0209?COMMONFUNCTION
80CEBA A3                INC     DPTR
80CEBB E0                MOVX    A,@DPTR
80CEBC         ?C0209?COMMONFUNCTION:
80CEBC 7004              JNZ     ?C0108?COMMONFUNCTION
  425: 		return KEY_NULL;	
80CEBE 7FFF              MOV     R7,#0FFH
80CEC0 8005              SJMP    ?C0109?COMMONFUNCTION
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 508


80CEC2         ?C0108?COMMONFUNCTION:
  426: 	return k;	
80CEC2 901788            MOV     DPTR,#k
80CEC5 E0                MOVX    A,@DPTR
80CEC6 FF                MOV     R7,A
  427: }
80CEC7         ?C0109?COMMONFUNCTION:
80CEC7 A522              ERET    
----- FUNCTION GetOneKey (END) -------


----- FUNCTION _LenOfNum (BEGIN) -----
 FILE: 'CommonFunction.c'
  431: u_char LenOfNum( unsigned long num )
  432: {
80CEC9 90174C            MOV     DPTR,#num
80CECC A512800792        ECALL   ?C?LSTXDATA
  433: 	if(num >= 1000000000 )
  434: 		return 10;
80CED1 7F00              MOV     R7,#00H
80CED3 7ECA              MOV     R6,#0CAH
80CED5 7D9A              MOV     R5,#09AH
80CED7 7C3B              MOV     R4,#03BH
80CED9 90174C            MOV     DPTR,#num
80CEDC A51280073E        ECALL   ?C?LLDXDATA0
80CEE1 C3                CLR     C
80CEE2 A51280070E        ECALL   ?C?ULCMP
80CEE7 4005              JC      ?C0110?COMMONFUNCTION
  435: 	if(num >= 100000000 )
80CEE9 7F0A              MOV     R7,#0AH
80CEEB 02CFCB            LJMP    ?C0111?COMMONFUNCTION
80CEEE         ?C0110?COMMONFUNCTION:
  436: 		return 9;
80CEEE 7F00              MOV     R7,#00H
80CEF0 7EE1              MOV     R6,#0E1H
80CEF2 7DF5              MOV     R5,#0F5H
80CEF4 7C05              MOV     R4,#05H
80CEF6 90174C            MOV     DPTR,#num
80CEF9 A51280073E        ECALL   ?C?LLDXDATA0
80CEFE C3                CLR     C
80CEFF A51280070E        ECALL   ?C?ULCMP
80CF04 4005              JC      ?C0112?COMMONFUNCTION
  437: 	if(num >= 10000000 )
80CF06 7F09              MOV     R7,#09H
80CF08 02CFCB            LJMP    ?C0111?COMMONFUNCTION
80CF0B         ?C0112?COMMONFUNCTION:
  438: 		return 8;
80CF0B 7F80              MOV     R7,#080H
80CF0D 7E96              MOV     R6,#096H
80CF0F 7D98              MOV     R5,#098H
80CF11 7C00              MOV     R4,#00H
80CF13 90174C            MOV     DPTR,#num
80CF16 A51280073E        ECALL   ?C?LLDXDATA0
80CF1B C3                CLR     C
80CF1C A51280070E        ECALL   ?C?ULCMP
80CF21 4005              JC      ?C0113?COMMONFUNCTION
  439: 	if(num >= 1000000 )
80CF23 7F08              MOV     R7,#08H
80CF25 02CFCB            LJMP    ?C0111?COMMONFUNCTION
80CF28         ?C0113?COMMONFUNCTION:
  440: 		return 7;
80CF28 7F40              MOV     R7,#040H
80CF2A 7E42              MOV     R6,#042H
80CF2C 7D0F              MOV     R5,#0FH
80CF2E 7C00              MOV     R4,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 509


80CF30 90174C            MOV     DPTR,#num
80CF33 A51280073E        ECALL   ?C?LLDXDATA0
80CF38 C3                CLR     C
80CF39 A51280070E        ECALL   ?C?ULCMP
80CF3E 4005              JC      ?C0114?COMMONFUNCTION
  441: 	if(num >= 100000 )
80CF40 7F07              MOV     R7,#07H
80CF42 02CFCB            LJMP    ?C0111?COMMONFUNCTION
80CF45         ?C0114?COMMONFUNCTION:
  442: 		return 6;
80CF45 7FA0              MOV     R7,#0A0H
80CF47 7E86              MOV     R6,#086H
80CF49 7D01              MOV     R5,#01H
80CF4B 7C00              MOV     R4,#00H
80CF4D 90174C            MOV     DPTR,#num
80CF50 A51280073E        ECALL   ?C?LLDXDATA0
80CF55 C3                CLR     C
80CF56 A51280070E        ECALL   ?C?ULCMP
80CF5B 4004              JC      ?C0115?COMMONFUNCTION
  443: 	if(num >= 10000 )
80CF5D 7F06              MOV     R7,#06H
80CF5F 806A              SJMP    ?C0111?COMMONFUNCTION
80CF61         ?C0115?COMMONFUNCTION:
  444: 		return 5;
80CF61 E4                CLR     A
80CF62 7F10              MOV     R7,#010H
80CF64 7E27              MOV     R6,#027H
80CF66 FD                MOV     R5,A
80CF67 FC                MOV     R4,A
80CF68 90174C            MOV     DPTR,#num
80CF6B A51280073E        ECALL   ?C?LLDXDATA0
80CF70 C3                CLR     C
80CF71 A51280070E        ECALL   ?C?ULCMP
80CF76 4004              JC      ?C0116?COMMONFUNCTION
  445: 	else if(num >= 1000 )
80CF78 7F05              MOV     R7,#05H
80CF7A 804F              SJMP    ?C0111?COMMONFUNCTION
80CF7C         ?C0116?COMMONFUNCTION:
  446: 		return 4;
80CF7C E4                CLR     A
80CF7D 7FE8              MOV     R7,#0E8H
80CF7F 7E03              MOV     R6,#03H
80CF81 FD                MOV     R5,A
80CF82 FC                MOV     R4,A
80CF83 90174C            MOV     DPTR,#num
80CF86 A51280073E        ECALL   ?C?LLDXDATA0
80CF8B C3                CLR     C
80CF8C A51280070E        ECALL   ?C?ULCMP
80CF91 4004              JC      ?C0118?COMMONFUNCTION
  447: 	else if(num >= 100 )
80CF93 7F04              MOV     R7,#04H
80CF95 8034              SJMP    ?C0111?COMMONFUNCTION
80CF97         ?C0118?COMMONFUNCTION:
  448: 		return 3;
80CF97 E4                CLR     A
80CF98 7F64              MOV     R7,#064H
80CF9A FE                MOV     R6,A
80CF9B FD                MOV     R5,A
80CF9C FC                MOV     R4,A
80CF9D 90174C            MOV     DPTR,#num
80CFA0 A51280073E        ECALL   ?C?LLDXDATA0
80CFA5 C3                CLR     C
80CFA6 A51280070E        ECALL   ?C?ULCMP
80CFAB 4004              JC      ?C0120?COMMONFUNCTION
  449: 	else if(num >= 10 ) 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 510


80CFAD 7F03              MOV     R7,#03H
80CFAF 801A              SJMP    ?C0111?COMMONFUNCTION
80CFB1         ?C0120?COMMONFUNCTION:
  450: 		return 2;
80CFB1 E4                CLR     A
80CFB2 7F0A              MOV     R7,#0AH
80CFB4 FE                MOV     R6,A
80CFB5 FD                MOV     R5,A
80CFB6 FC                MOV     R4,A
80CFB7 90174C            MOV     DPTR,#num
80CFBA A51280073E        ECALL   ?C?LLDXDATA0
80CFBF C3                CLR     C
80CFC0 A51280070E        ECALL   ?C?ULCMP
80CFC5 7F01              MOV     R7,#01H
80CFC7 4002              JC      ?C0122?COMMONFUNCTION
  451: 	else
80CFC9 7F02              MOV     R7,#02H
80CFCB         ?C0122?COMMONFUNCTION:
  452: 		return 1;
  453: } 
80CFCB         ?C0111?COMMONFUNCTION:
80CFCB A522              ERET    
----- FUNCTION _LenOfNum (END) -------


----- FUNCTION _InputGoodsWayNo (BEGIN) -----
 FILE: 'CommonFunction.c'
  484: u_char InputGoodsWayNo( u_char x )
  485: {
80CFCD 901757            MOV     DPTR,#x
80CFD0 EF                MOV     A,R7
80CFD1 F0                MOVX    @DPTR,A
  486: 	u_char xdata key = 0;
  487: 	u_char xdata m_InputCode;
80CFD2 E4                CLR     A
80CFD3 A3                INC     DPTR
80CFD4 F0                MOVX    @DPTR,A
  488: 	u_char xdata m_GoodsWayNo;
  489: 	u_char xdata Tempstr[8];
  490: 	u_char xdata len = 0;
80CFD5 901763            MOV     DPTR,#len
80CFD8 F0                MOVX    @DPTR,A
  491: 	u_char xdata i = 0;
80CFD9 A3                INC     DPTR
80CFDA F0                MOVX    @DPTR,A
  492: 	
  493: 	ClearKey();
80CFDB A5128087A8        ECALL   ClearKey
80CFE0         ?C0128?COMMONFUNCTION:
  494: 	while( 1 )
  495: 	{		
  496: 		ClearDisplayLine( 1 );
80CFE0 A5128087B2        ECALL   ?L?COM0014
  497: 		ClearDisplayLine( 2 );		
  498: 		len = 2;
80CFE5 901763            MOV     DPTR,#len
80CFE8 7402              MOV     A,#02H
80CFEA F0                MOVX    @DPTR,A
  499: 		memset( Tempstr,0, sizeof( Tempstr ) );	
80CFEB 7E00              MOV     R6,#00H
80CFED 7F08              MOV     R7,#08H
80CFEF 7D00              MOV     R5,#00H
80CFF1 7B00              MOV     R3,#?C?XDATASEG
80CFF3 7A17              MOV     R2,#HIGH Tempstr
80CFF5 795B              MOV     R1,#LOW Tempstr
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 511


80CFF7 A5128008A6        ECALL   ?C?MEMSET
  500: 	#ifdef _CHINA_
  501: 		key = GetLine( "请输入编号: ", 12 , 0, Tempstr, &len );
  502: 	#else	
  503: 		key = GetLine( "Input column code:", 18 , 0, Tempstr, &len );
80CFFC E4                CLR     A
80CFFD 901769            MOV     DPTR,#?_GetLine?BYTE+04H
80D000 F0                MOVX    @DPTR,A
80D001 7B00              MOV     R3,#?C?XDATASEG
80D003 7A17              MOV     R2,#HIGH Tempstr
80D005 795B              MOV     R1,#LOW Tempstr
80D007 A3                INC     DPTR
80D008 A5128007B6        ECALL   ?C?PSTXDATA
80D00D 7A17              MOV     R2,#HIGH len
80D00F 7963              MOV     R1,#LOW len
80D011 90176D            MOV     DPTR,#?_GetLine?BYTE+08H
80D014 A5128007B6        ECALL   ?C?PSTXDATA
80D019 7B80              MOV     R3,#BYTE2 080177CH
80D01B 7A17              MOV     R2,#HIGH 080177CH
80D01D 797C              MOV     R1,#LOW 080177CH
80D01F 7D12              MOV     R5,#012H
80D021 A512808C2C        ECALL   _GetLine
80D026 901758            MOV     DPTR,#key
80D029 EF                MOV     A,R7
80D02A F0                MOVX    @DPTR,A
  504: 	#endif
  505: 		WaitForWork( 500, NULL );	
80D02B E4                CLR     A
80D02C 7FF4              MOV     R7,#0F4H
80D02E 7E01              MOV     R6,#01H
80D030 A512807B35        ECALL   ?L?COM000D
  506: 		m_GoodsWayNo = 100;
80D035 90175A            MOV     DPTR,#m_GoodsWayNo
80D038 7464              MOV     A,#064H
80D03A F0                MOVX    @DPTR,A
  507: 		m_InputCode = 0;
80D03B E4                CLR     A
80D03C 901759            MOV     DPTR,#m_InputCode
80D03F F0                MOVX    @DPTR,A
  508: 		ClearKey();				
80D040 A5128087A8        ECALL   ClearKey
  509: 		if( key == 1 )//Enter	
80D045 901758            MOV     DPTR,#key
80D048 E0                MOVX    A,@DPTR
80D049 6401              XRL     A,#01H
80D04B 6003              JZ      $ + 5H
80D04D 02D148            LJMP    ?C0130?COMMONFUNCTION
  510: 		{			
  511: 			DisplayCursorState( 0, 0, 0, 0, 1 );			
80D050 C21A              CLR     ?_DisplayCursorState?BIT
80D052 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80D055 F0                MOVX    @DPTR,A
80D056 D21B              SETB    ?_DisplayCursorState?BIT+01H
80D058 FD                MOV     R5,A
80D059 FF                MOV     R7,A
80D05A A51280817F        ECALL   _DisplayCursorState
  512: 			for( i = 0; i < len; i ++ )
80D05F E4                CLR     A
80D060 901764            MOV     DPTR,#i
80D063 F0                MOVX    @DPTR,A
80D064         ?C0131?COMMONFUNCTION:
80D064 901763            MOV     DPTR,#len
80D067 E0                MOVX    A,@DPTR
80D068 FF                MOV     R7,A
80D069 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 512


80D06A E0                MOVX    A,@DPTR
80D06B FE                MOV     R6,A
80D06C C3                CLR     C
80D06D 9F                SUBB    A,R7
80D06E 502B              JNC     ?C0132?COMMONFUNCTION
  513: 			{
  514: 	//			Trace( "\n GoodsNo1 = %bu", Tempstr[i] );		
  515: 				if( ( Tempstr[i] >= 0 ) && ( Tempstr[i] <= 9 ) )
80D070 745B              MOV     A,#LOW Tempstr
80D072 2E                ADD     A,R6
80D073 F582              MOV     DPL,A
80D075 E4                CLR     A
80D076 3417              ADDC    A,#HIGH Tempstr
80D078 F583              MOV     DPH,A
80D07A E0                MOVX    A,@DPTR
80D07B FF                MOV     R7,A
80D07C C3                CLR     C
80D07D 9400              SUBB    A,#00H
80D07F 4012              JC      ?C0133?COMMONFUNCTION
80D081 EF                MOV     A,R7
80D082 D3                SETB    C
80D083 9409              SUBB    A,#09H
80D085 500C              JNC     ?C0133?COMMONFUNCTION
  516: 					m_InputCode = m_InputCode * 10 + Tempstr[i];				
80D087 901759            MOV     DPTR,#m_InputCode
80D08A E0                MOVX    A,@DPTR
80D08B 75F00A            MOV     B,#0AH
80D08E A4                MUL     AB
80D08F FE                MOV     R6,A
80D090 EF                MOV     A,R7
80D091 2E                ADD     A,R6
80D092 F0                MOVX    @DPTR,A
  517: 			}
80D093         ?C0133?COMMONFUNCTION:
80D093 901764            MOV     DPTR,#i
80D096 E0                MOVX    A,@DPTR
80D097 04                INC     A
80D098 F0                MOVX    @DPTR,A
80D099 80C9              SJMP    ?C0131?COMMONFUNCTION
80D09B         ?C0132?COMMONFUNCTION:
  518: 			if( ( m_InputCode == 99 ) && ( x == 0 ) )
80D09B 901759            MOV     DPTR,#m_InputCode
80D09E E0                MOVX    A,@DPTR
80D09F B4630B            CJNE    A,#063H,?C0135?COMMONFUNCTION
80D0A2 901757            MOV     DPTR,#x
80D0A5 E0                MOVX    A,@DPTR
80D0A6 7005              JNZ     ?C0135?COMMONFUNCTION
  519: 				return 99;					
80D0A8 7F63              MOV     R7,#063H
80D0AA 02D14D            LJMP    ?C0136?COMMONFUNCTION
80D0AD         ?C0135?COMMONFUNCTION:
  520: 			ClearKey();	
80D0AD A5128087A8        ECALL   ClearKey
  521: 			if( m_InputCode != 0 )
80D0B2 901759            MOV     DPTR,#m_InputCode
80D0B5 E0                MOVX    A,@DPTR
80D0B6 603B              JZ      ?C0137?COMMONFUNCTION
  522: 			{
  523: 				for( i = 0; i < GOODSWAYNUM; i ++ )
80D0B8 E4                CLR     A
80D0B9 901764            MOV     DPTR,#i
80D0BC F0                MOVX    @DPTR,A
80D0BD         ?C0138?COMMONFUNCTION:
80D0BD 901764            MOV     DPTR,#i
80D0C0 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 513


80D0C1 FF                MOV     R7,A
80D0C2 C3                CLR     C
80D0C3 9440              SUBB    A,#040H
80D0C5 5032              JNC     ?C0142?COMMONFUNCTION
  524: 				{
  525: 					if( InputGoodsWayList[i].GoodsWayNo == m_InputCode )
80D0C7 EF                MOV     A,R7
80D0C8 25E0              ADD     A,ACC
80D0CA 25E0              ADD     A,ACC
80D0CC 24D3              ADD     A,#LOW InputGoodsWayList
80D0CE F582              MOV     DPL,A
80D0D0 E4                CLR     A
80D0D1 342B              ADDC    A,#HIGH InputGoodsWayList
80D0D3 F583              MOV     DPH,A
80D0D5 E0                MOVX    A,@DPTR
80D0D6 FF                MOV     R7,A
80D0D7 901759            MOV     DPTR,#m_InputCode
80D0DA E0                MOVX    A,@DPTR
80D0DB FE                MOV     R6,A
80D0DC EF                MOV     A,R7
80D0DD B5060B            CJNE    A,AR6,?C0140?COMMONFUNCTION
  526: 					{
  527: 						m_GoodsWayNo = i;					
80D0E0 901764            MOV     DPTR,#i
80D0E3 E0                MOVX    A,@DPTR
80D0E4 FF                MOV     R7,A
80D0E5 90175A            MOV     DPTR,#m_GoodsWayNo
80D0E8 F0                MOVX    @DPTR,A
  528: 						return i;
80D0E9 8062              SJMP    ?C0136?COMMONFUNCTION
  529: 					}
  530: 				}		
80D0EB         ?C0140?COMMONFUNCTION:
80D0EB 901764            MOV     DPTR,#i
80D0EE E0                MOVX    A,@DPTR
80D0EF 04                INC     A
80D0F0 F0                MOVX    @DPTR,A
80D0F1 80CA              SJMP    ?C0138?COMMONFUNCTION
  531: 			}
80D0F3         ?C0137?COMMONFUNCTION:
  532: 			else
  533: 				i = GOODSWAYNUM;
80D0F3 901764            MOV     DPTR,#i
80D0F6 7440              MOV     A,#040H
80D0F8 F0                MOVX    @DPTR,A
80D0F9         ?C0142?COMMONFUNCTION:
  534: 			if( i == GOODSWAYNUM )
80D0F9 901764            MOV     DPTR,#i
80D0FC E0                MOVX    A,@DPTR
80D0FD 6440              XRL     A,#040H
80D0FF 7047              JNZ     ?C0220?COMMONFUNCTION
  535: 	 	    {
  536: 			#ifdef _CHINA_
  537: 				DisplayStr( 0, 0, 1, "编号输入错误", 12 );
  538: 				DisplayStr( 0, 1, 1, "请输入其它编号", 14 );
  539: 			#else
  540: 				DisplayStr( 0, 0, 1, "Input code error", 16 );
80D101 D21A              SETB    ?_DisplayStr?BIT
80D103 7B80              MOV     R3,#BYTE2 080178FH
80D105 7A17              MOV     R2,#HIGH 080178FH
80D107 798F              MOV     R1,#LOW 080178FH
80D109 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D10C A5128007B6        ECALL   ?C?PSTXDATA
80D111 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D114 7410              MOV     A,#010H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 514


80D116 A51280805E        ECALL   ?L?COM0007
  541: 				DisplayStr( 0, 1, 1, "Input other code", 16 );
80D11B D21A              SETB    ?_DisplayStr?BIT
80D11D 7B80              MOV     R3,#BYTE2 08017A0H
80D11F 7A17              MOV     R2,#HIGH 08017A0H
80D121 79A0              MOV     R1,#LOW 08017A0H
80D123 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D126 A5128007B6        ECALL   ?C?PSTXDATA
80D12B 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D12E 7410              MOV     A,#010H
80D130 F0                MOVX    @DPTR,A
80D131 7D01              MOV     R5,#01H
80D133 E4                CLR     A
80D134 FF                MOV     R7,A
80D135 A512808062        ECALL   _DisplayStr
  542: 			#endif
  543: 				m_GoodsWayNo = 100;			
80D13A 90175A            MOV     DPTR,#m_GoodsWayNo
80D13D 7464              MOV     A,#064H
80D13F F0                MOVX    @DPTR,A
  544: 				WaitForWork( 2000, NULL );
80D140 A512807B30        ECALL   ?L?COM000C
  545: 				continue;
80D145 02CFE0            LJMP    ?C0128?COMMONFUNCTION
  546: 			}			
  547: 	//		Trace( "\n m_SetArrayNo = %bu", m_GoodsWayNo );
  548: 	//		Trace( "\n return 0" );
  549: 			return m_GoodsWayNo;
  550: 		}
80D148         ?C0130?COMMONFUNCTION:
  551: 		else
  552: 			return m_GoodsWayNo;
80D148         
80D148 90175A            MOV     DPTR,#m_GoodsWayNo
80D14B E0                MOVX    A,@DPTR
80D14C FF                MOV     R7,A
  553: 	}
  554: }
80D14D         ?C0136?COMMONFUNCTION:
80D14D A522              ERET    
----- FUNCTION _InputGoodsWayNo (END) -------


----- FUNCTION _DisplayInfo (BEGIN) -----
 FILE: 'CommonFunction.c'
  788: u_char DisplayInfo( u_char line , u_char offset , u_char * buffer )
  789: {
80D14F 90175E            MOV     DPTR,#line
80D152 EF                MOV     A,R7
80D153 F0                MOVX    @DPTR,A
80D154 A3                INC     DPTR
80D155 ED                MOV     A,R5
80D156 F0                MOVX    @DPTR,A
80D157 A3                INC     DPTR
80D158 A5128007B6        ECALL   ?C?PSTXDATA
  790: 	u_char xdata length;
  791: 
  792: 	length = strlen( buffer );
80D15D A512800010        ECALL   _strlen
;---- Variable 'length' assigned to Register 'R6' ----
80D162 AE07              MOV     R6,AR7
  793: 	DisplayStr( offset , line , 1 , buffer , length );
80D164 90175F            MOV     DPTR,#offset
80D167 E0                MOVX    A,@DPTR
80D168 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 515


80D169 90175E            MOV     DPTR,#line
80D16C E0                MOVX    A,@DPTR
80D16D FD                MOV     R5,A
80D16E D21A              SETB    ?_DisplayStr?BIT
80D170 901760            MOV     DPTR,#buffer
80D173 A5128007AC        ECALL   ?C?PLDXDATA
80D178 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
80D17B A5128007B6        ECALL   ?C?PSTXDATA
80D180 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
80D183 EE                MOV     A,R6
80D184 F0                MOVX    @DPTR,A
80D185 A512808062        ECALL   _DisplayStr
  794: 	return( 0 );
80D18A 7F00              MOV     R7,#00H
  795: }
80D18C         ?C0191?COMMONFUNCTION:
80D18C A522              ERET    
----- FUNCTION _DisplayInfo (END) -------


----- FUNCTION ?L?COM0016 (BEGIN) -----
80D18E 901734            MOV     DPTR,#Num
80D191 E0                MOVX    A,@DPTR
80D192 FF                MOV     R7,A
80D193 25E0              ADD     A,ACC
80D195 25E0              ADD     A,ACC
80D197 2458              ADD     A,#LOW GoodsWaystr+03H
80D199 F582              MOV     DPL,A
80D19B E4                CLR     A
80D19C 3417              ADDC    A,#HIGH GoodsWaystr+03H
80D19E F583              MOV     DPH,A
80D1A0 E4                CLR     A
80D1A1 93                MOVC    A,@A+DPTR
80D1A2 2435              ADD     A,#LOW y_displaystr
80D1A4 F582              MOV     DPL,A
80D1A6 E4                CLR     A
80D1A7 3417              ADDC    A,#HIGH y_displaystr
80D1A9 AD82              MOV     R5,DPL
80D1AB FC                MOV     R4,A
80D1AC 901751            MOV     DPTR,#?_ReadWriteGoodsParam?BYTE+05H
80D1AF 7417              MOV     A,#HIGH len
80D1B1 F0                MOVX    @DPTR,A
80D1B2 A3                INC     DPTR
80D1B3 744B              MOV     A,#LOW len
80D1B5 F0                MOVX    @DPTR,A
80D1B6 C21A              CLR     ?_ReadWriteGoodsParam?BIT
80D1B8 E4                CLR     A
80D1B9 FB                MOV     R3,A
80D1BA FA                MOV     R2,A
----- FUNCTION _ReadWriteGoodsParam (BEGIN) -----
 FILE: 'GoodsWaySet.c'
   43: void ReadWriteGoodsParam( u_char Num,u_char xdata *OutStr,u_char xdata *InStr ,u_char xdata *len, bit OutInFlag )
>> 
   44: {	
80D1BB 90174D            MOV     DPTR,#OutStr
80D1BE EC                MOV     A,R4
80D1BF F0                MOVX    @DPTR,A
80D1C0 A3                INC     DPTR
80D1C1 ED                MOV     A,R5
80D1C2 F0                MOVX    @DPTR,A
80D1C3 A3                INC     DPTR
80D1C4 EA                MOV     A,R2
80D1C5 F0                MOVX    @DPTR,A
80D1C6 A3                INC     DPTR
80D1C7 EB                MOV     A,R3
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 516


80D1C8 F0                MOVX    @DPTR,A
;---- Variable 'Num' assigned to Register 'R7' ----
   45: 	u_char  xdata Templen = 0;	
   46: 	u_char	xdata  i = 0;
80D1C9 E4                CLR     A
80D1CA 901753            MOV     DPTR,#Templen
80D1CD F0                MOVX    @DPTR,A
   47: 	uint	xdata temp = 0;	
80D1CE A3                INC     DPTR
80D1CF F0                MOVX    @DPTR,A
   48: 
80D1D0 A3                INC     DPTR
80D1D1 F0                MOVX    @DPTR,A
80D1D2 A3                INC     DPTR
80D1D3 F0                MOVX    @DPTR,A
   49: 	switch( Num )
80D1D4 EF                MOV     A,R7
80D1D5 14                DEC     A
80D1D6 6069              JZ      ?C0004?GOODSWAYSET
80D1D8 14                DEC     A
80D1D9 7003              JNZ     $ + 5H
80D1DB 02D430            LJMP    ?C0017?GOODSWAYSET
80D1DE 14                DEC     A
80D1DF 7003              JNZ     $ + 5H
80D1E1 02D52A            LJMP    ?C0027?GOODSWAYSET
80D1E4 2403              ADD     A,#03H
80D1E6 6003              JZ      $ + 5H
80D1E8 02D6B9            LJMP    ?C0050?GOODSWAYSET
   50: 	{
   51: 		case 0:	//货道编号	
80D1EB         ?C0002?GOODSWAYSET:
   52: 			if( OutInFlag == 0 )
80D1EB 301A03            JNB     OutInFlag,$ + 6H
80D1EE 02D6B9            LJMP    ?C0050?GOODSWAYSET
   53: 			{
   54: 				//Trace( "\n Get IP val = ");									
   55: 				//	Trace( " %bd ", SystemParameter.IP[i] );
   56: 				sprintf( OutStr, "%02bu", GoodsWaySetVal[m_SetArrayNo].WayNo );//GoodsWayNoList[m_SetArrayNo].GoodsWayNo)				
>> 
80D1F1 90174D            MOV     DPTR,#OutStr
80D1F4 E0                MOVX    A,@DPTR
80D1F5 FE                MOV     R6,A
80D1F6 A3                INC     DPTR
80D1F7 E0                MOVX    A,@DPTR
80D1F8 AA06              MOV     R2,AR6
80D1FA F9                MOV     R1,A
80D1FB 7B00              MOV     R3,#?C?XDATASEG
80D1FD C003              PUSH    AR3
80D1FF C002              PUSH    AR2
80D201 C001              PUSH    AR1
80D203 7B80              MOV     R3,#BYTE2 0801735H
80D205 7A17              MOV     R2,#HIGH 0801735H
80D207 7935              MOV     R1,#LOW 0801735H
80D209 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80D20C A5128007B6        ECALL   ?C?PSTXDATA
80D211 902DEE            MOV     DPTR,#m_SetArrayNo
80D214 E0                MOVX    A,@DPTR
80D215 75F005            MOV     B,#05H
80D218 900002            MOV     DPTR,#GoodsWaySetVal
80D21B A51280079F        ECALL   ?C?OFFXADD
80D220 E0                MOVX    A,@DPTR
80D221 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80D224 F0                MOVX    @DPTR,A
80D225 D001              POP     AR1
80D227 D002              POP     AR2
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 517


80D229 D003              POP     AR3
80D22B A512800949        ECALL   _sprintf
   57: 				*len = 2;
80D230 901751            MOV     DPTR,#len
80D233 E0                MOVX    A,@DPTR
80D234 FE                MOV     R6,A
80D235 A3                INC     DPTR
80D236 E0                MOVX    A,@DPTR
80D237 F582              MOV     DPL,A
80D239 8E83              MOV     DPH,R6
80D23B 7402              MOV     A,#02H
80D23D F0                MOVX    @DPTR,A
   58: 			}			
   59: 		break;
80D23E 02D6B9            LJMP    ?C0050?GOODSWAYSET
   60: 		case 1://单价
80D241         ?C0004?GOODSWAYSET:
   61: 			////////////////////
   62: 			if( OutInFlag == 0 )
80D241 301A03            JNB     OutInFlag,$ + 6H
80D244 02D38D            LJMP    ?C0005?GOODSWAYSET
   63: 			{
   64: 				switch( SystemParameter.curUnit )
80D247 900466            MOV     DPTR,#SystemParameter+048H
80D24A E0                MOVX    A,@DPTR
80D24B FE                MOV     R6,A
80D24C A3                INC     DPTR
80D24D E0                MOVX    A,@DPTR
80D24E FF                MOV     R7,A
80D24F EE                MOV     A,R6
80D250 6003              JZ      $ + 5H
80D252 02D6B9            LJMP    ?C0050?GOODSWAYSET
80D255 EF                MOV     A,R7
80D256 24F6              ADD     A,#0F6H
80D258 604B              JZ      ?C0008?GOODSWAYSET
80D25A 24A6              ADD     A,#0A6H
80D25C 7003              JNZ     $ + 5H
80D25E 02D30C            LJMP    ?C0009?GOODSWAYSET
80D261 2463              ADD     A,#063H
80D263 6003              JZ      $ + 5H
80D265 02D6B9            LJMP    ?C0050?GOODSWAYSET
   65: 				{
   66: 					case 1:
80D268         ?C0007?GOODSWAYSET:
   67: 						*len = sprintf( OutStr, "%u", GoodsWaySetVal[m_SetArrayNo].Price );
80D268 90174D            MOV     DPTR,#OutStr
80D26B E0                MOVX    A,@DPTR
80D26C FE                MOV     R6,A
80D26D A3                INC     DPTR
80D26E E0                MOVX    A,@DPTR
80D26F AA06              MOV     R2,AR6
80D271 F9                MOV     R1,A
80D272 7B00              MOV     R3,#?C?XDATASEG
80D274 C003              PUSH    AR3
80D276 C002              PUSH    AR2
80D278 C001              PUSH    AR1
80D27A 7B80              MOV     R3,#BYTE2 080173BH
80D27C 7A17              MOV     R2,#HIGH 080173BH
80D27E 793B              MOV     R1,#LOW 080173BH
80D280 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80D283 A5128007B6        ECALL   ?C?PSTXDATA
80D288 902DEE            MOV     DPTR,#m_SetArrayNo
80D28B E0                MOVX    A,@DPTR
80D28C 75F005            MOV     B,#05H
80D28F 900004            MOV     DPTR,#GoodsWaySetVal+02H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 518


80D292 A51280079F        ECALL   ?C?OFFXADD
80D297 E0                MOVX    A,@DPTR
80D298 FF                MOV     R7,A
80D299 A3                INC     DPTR
80D29A E0                MOVX    A,@DPTR
80D29B 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80D29E CF                XCH     A,R7
80D29F F0                MOVX    @DPTR,A
80D2A0 A3                INC     DPTR
80D2A1 EF                MOV     A,R7
   68: 					break;				
80D2A2 02D371            LJMP    ?C0099?GOODSWAYSET
   69: 					case 10:
80D2A5         ?C0008?GOODSWAYSET:
   70: 						*len = sprintf( OutStr, "%u.%u", GoodsWaySetVal[m_SetArrayNo].Price/SystemParameter.curUnit, GoodsWaySetVal
>> [m_SetArrayNo].Price%SystemParameter.curUnit );
80D2A5 90174D            MOV     DPTR,#OutStr
80D2A8 E0                MOVX    A,@DPTR
80D2A9 FE                MOV     R6,A
80D2AA A3                INC     DPTR
80D2AB E0                MOVX    A,@DPTR
80D2AC AA06              MOV     R2,AR6
80D2AE F9                MOV     R1,A
80D2AF 7B00              MOV     R3,#?C?XDATASEG
80D2B1 C003              PUSH    AR3
80D2B3 C002              PUSH    AR2
80D2B5 C001              PUSH    AR1
80D2B7 7B80              MOV     R3,#BYTE2 080173EH
80D2B9 7A17              MOV     R2,#HIGH 080173EH
80D2BB 793E              MOV     R1,#LOW 080173EH
80D2BD 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80D2C0 A5128007B6        ECALL   ?C?PSTXDATA
80D2C5 902DEE            MOV     DPTR,#m_SetArrayNo
80D2C8 E0                MOVX    A,@DPTR
80D2C9 75F005            MOV     B,#05H
80D2CC 900004            MOV     DPTR,#GoodsWaySetVal+02H
80D2CF A51280079F        ECALL   ?C?OFFXADD
80D2D4 E0                MOVX    A,@DPTR
80D2D5 FA                MOV     R2,A
80D2D6 A3                INC     DPTR
80D2D7 E0                MOVX    A,@DPTR
80D2D8 FB                MOV     R3,A
80D2D9 900466            MOV     DPTR,#SystemParameter+048H
80D2DC E0                MOVX    A,@DPTR
80D2DD FC                MOV     R4,A
80D2DE A3                INC     DPTR
80D2DF E0                MOVX    A,@DPTR
80D2E0 FD                MOV     R5,A
80D2E1 AF03              MOV     R7,AR3
80D2E3 AE02              MOV     R6,AR2
80D2E5 A51280056C        ECALL   ?C?UIDIV
80D2EA 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80D2ED EE                MOV     A,R6
80D2EE F0                MOVX    @DPTR,A
80D2EF A3                INC     DPTR
80D2F0 EF                MOV     A,R7
80D2F1 F0                MOVX    @DPTR,A
80D2F2 900466            MOV     DPTR,#SystemParameter+048H
80D2F5 E0                MOVX    A,@DPTR
80D2F6 FC                MOV     R4,A
80D2F7 A3                INC     DPTR
80D2F8 E0                MOVX    A,@DPTR
80D2F9 FD                MOV     R5,A
80D2FA AF03              MOV     R7,AR3
80D2FC AE02              MOV     R6,AR2
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 519


80D2FE A51280056C        ECALL   ?C?UIDIV
80D303 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80D306 EC                MOV     A,R4
80D307 F0                MOVX    @DPTR,A
80D308 A3                INC     DPTR
80D309 ED                MOV     A,R5
80D30A         
   71: 					break;
80D30A 8065              SJMP    ?C0099?GOODSWAYSET
   72: 					case 100:
80D30C         ?C0009?GOODSWAYSET:
   73: 						*len = sprintf( OutStr, "%u.%02u", GoodsWaySetVal[m_SetArrayNo].Price/SystemParameter.curUnit, GoodsWaySetV
>> al[m_SetArrayNo].Price%SystemParameter.curUnit );
80D30C 90174D            MOV     DPTR,#OutStr
80D30F E0                MOVX    A,@DPTR
80D310 FE                MOV     R6,A
80D311 A3                INC     DPTR
80D312 E0                MOVX    A,@DPTR
80D313 AA06              MOV     R2,AR6
80D315 F9                MOV     R1,A
80D316 7B00              MOV     R3,#?C?XDATASEG
80D318 C003              PUSH    AR3
80D31A C002              PUSH    AR2
80D31C C001              PUSH    AR1
80D31E 7B80              MOV     R3,#BYTE2 0801744H
80D320 7A17              MOV     R2,#HIGH 0801744H
80D322 7944              MOV     R1,#LOW 0801744H
80D324 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80D327 A5128007B6        ECALL   ?C?PSTXDATA
80D32C 902DEE            MOV     DPTR,#m_SetArrayNo
80D32F E0                MOVX    A,@DPTR
80D330 75F005            MOV     B,#05H
80D333 900004            MOV     DPTR,#GoodsWaySetVal+02H
80D336 A51280079F        ECALL   ?C?OFFXADD
80D33B E0                MOVX    A,@DPTR
80D33C FA                MOV     R2,A
80D33D A3                INC     DPTR
80D33E E0                MOVX    A,@DPTR
80D33F FB                MOV     R3,A
80D340 900466            MOV     DPTR,#SystemParameter+048H
80D343 E0                MOVX    A,@DPTR
80D344 FC                MOV     R4,A
80D345 A3                INC     DPTR
80D346 E0                MOVX    A,@DPTR
80D347 FD                MOV     R5,A
80D348 AF03              MOV     R7,AR3
80D34A AE02              MOV     R6,AR2
80D34C A51280056C        ECALL   ?C?UIDIV
80D351 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80D354 EE                MOV     A,R6
80D355 F0                MOVX    @DPTR,A
80D356 A3                INC     DPTR
80D357 EF                MOV     A,R7
80D358 F0                MOVX    @DPTR,A
80D359 900466            MOV     DPTR,#SystemParameter+048H
80D35C E0                MOVX    A,@DPTR
80D35D FC                MOV     R4,A
80D35E A3                INC     DPTR
80D35F E0                MOVX    A,@DPTR
80D360 FD                MOV     R5,A
80D361 AF03              MOV     R7,AR3
80D363 AE02              MOV     R6,AR2
80D365 A51280056C        ECALL   ?C?UIDIV
80D36A 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80D36D EC                MOV     A,R4
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 520


80D36E F0                MOVX    @DPTR,A
80D36F A3                INC     DPTR
80D370 ED                MOV     A,R5
80D371         
80D371 F0                MOVX    @DPTR,A
80D372 D001              POP     AR1
80D374 D002              POP     AR2
80D376 D003              POP     AR3
80D378 A512800949        ECALL   _sprintf
80D37D 901751            MOV     DPTR,#len
80D380 E0                MOVX    A,@DPTR
80D381 FC                MOV     R4,A
80D382 A3                INC     DPTR
80D383 E0                MOVX    A,@DPTR
80D384 F582              MOV     DPL,A
80D386 8C83              MOV     DPH,R4
80D388 EF                MOV     A,R7
80D389 F0                MOVX    @DPTR,A
   74: 					break;					
80D38A 02D6B9            LJMP    ?C0050?GOODSWAYSET
   75: 				}
   76: 			}
80D38D         ?C0005?GOODSWAYSET:
   77: 			else
   78: 			{
   79: 				Templen = *len;
80D38D 901751            MOV     DPTR,#len
80D390 E0                MOVX    A,@DPTR
80D391 FE                MOV     R6,A
80D392 A3                INC     DPTR
80D393 E0                MOVX    A,@DPTR
80D394 F582              MOV     DPL,A
80D396 8E83              MOV     DPH,R6
80D398 E0                MOVX    A,@DPTR
80D399 901753            MOV     DPTR,#Templen
80D39C F0                MOVX    @DPTR,A
   80: 				if( Templen == 0 )
80D39D 7003              JNZ     $ + 5H
80D39F 02D6B9            LJMP    ?C0050?GOODSWAYSET
   81: 					break;
80D3A2         ?C0011?GOODSWAYSET:
   82: 				if( Templen > 5 )
80D3A2 901753            MOV     DPTR,#Templen
80D3A5 E0                MOVX    A,@DPTR
80D3A6 D3                SETB    C
80D3A7 9405              SUBB    A,#05H
80D3A9 4003              JC      ?C0012?GOODSWAYSET
   83: 					Templen = 5;
80D3AB 7405              MOV     A,#05H
80D3AD F0                MOVX    @DPTR,A
80D3AE         ?C0012?GOODSWAYSET:
   84: 				GoodsWaySetVal[m_SetArrayNo].Price = 0;
80D3AE 902DEE            MOV     DPTR,#m_SetArrayNo
80D3B1 E0                MOVX    A,@DPTR
80D3B2 75F005            MOV     B,#05H
80D3B5 900004            MOV     DPTR,#GoodsWaySetVal+02H
80D3B8 A51280079F        ECALL   ?C?OFFXADD
80D3BD E4                CLR     A
80D3BE F0                MOVX    @DPTR,A
80D3BF A3                INC     DPTR
80D3C0 F0                MOVX    @DPTR,A
   85: 				for( i = 0; i < Templen; i ++ )
80D3C1 901754            MOV     DPTR,#i
80D3C4 F0                MOVX    @DPTR,A
80D3C5         ?C0013?GOODSWAYSET:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 521


80D3C5 901753            MOV     DPTR,#Templen
80D3C8 E0                MOVX    A,@DPTR
80D3C9 FF                MOV     R7,A
80D3CA A3                INC     DPTR
80D3CB E0                MOVX    A,@DPTR
80D3CC FE                MOV     R6,A
80D3CD C3                CLR     C
80D3CE 9F                SUBB    A,R7
80D3CF 4003              JC      $ + 5H
80D3D1 02D6B3            LJMP    ?C0101?GOODSWAYSET
   86: 				{					
   87: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80D3D4 90174F            MOV     DPTR,#InStr
80D3D7 E0                MOVX    A,@DPTR
80D3D8 FC                MOV     R4,A
80D3D9 A3                INC     DPTR
80D3DA E0                MOVX    A,@DPTR
80D3DB 2E                ADD     A,R6
80D3DC F582              MOV     DPL,A
80D3DE E4                CLR     A
80D3DF 3C                ADDC    A,R4
80D3E0 F583              MOV     DPH,A
80D3E2 E0                MOVX    A,@DPTR
80D3E3 FF                MOV     R7,A
80D3E4 C3                CLR     C
80D3E5 9400              SUBB    A,#00H
80D3E7 403F              JC      ?C0015?GOODSWAYSET
80D3E9 EF                MOV     A,R7
80D3EA D3                SETB    C
80D3EB 9409              SUBB    A,#09H
80D3ED 5039              JNC     ?C0015?GOODSWAYSET
   88: 						GoodsWaySetVal[m_SetArrayNo].Price = GoodsWaySetVal[m_SetArrayNo].Price * 10 + *( InStr + i );					
80D3EF EF                MOV     A,R7
80D3F0 FB                MOV     R3,A
80D3F1 7A00              MOV     R2,#00H
80D3F3 902DEE            MOV     DPTR,#m_SetArrayNo
80D3F6 E0                MOVX    A,@DPTR
80D3F7 F9                MOV     R1,A
80D3F8 75F005            MOV     B,#05H
80D3FB 900004            MOV     DPTR,#GoodsWaySetVal+02H
80D3FE A51280079F        ECALL   ?C?OFFXADD
80D403 E0                MOVX    A,@DPTR
80D404 FE                MOV     R6,A
80D405 A3                INC     DPTR
80D406 E0                MOVX    A,@DPTR
80D407 FF                MOV     R7,A
80D408 7C00              MOV     R4,#00H
80D40A 7D0A              MOV     R5,#0AH
80D40C A512800559        ECALL   ?C?IMUL
80D411 EF                MOV     A,R7
80D412 2B                ADD     A,R3
80D413 FF                MOV     R7,A
80D414 EA                MOV     A,R2
80D415 3E                ADDC    A,R6
80D416 FE                MOV     R6,A
80D417 75F005            MOV     B,#05H
80D41A E9                MOV     A,R1
80D41B 900004            MOV     DPTR,#GoodsWaySetVal+02H
80D41E A51280079F        ECALL   ?C?OFFXADD
80D423 EE                MOV     A,R6
80D424 F0                MOVX    @DPTR,A
80D425 A3                INC     DPTR
80D426 EF                MOV     A,R7
80D427 F0                MOVX    @DPTR,A
   89: 				}	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 522


80D428         ?C0015?GOODSWAYSET:
80D428 901754            MOV     DPTR,#i
80D42B E0                MOVX    A,@DPTR
80D42C 04                INC     A
80D42D F0                MOVX    @DPTR,A
80D42E 8095              SJMP    ?C0013?GOODSWAYSET
   90: 				GoodsSetSave = 1;			
   91: 			}			
   92: 		break;
   93: 		case 2://货品现存量				
80D430         ?C0017?GOODSWAYSET:
   94: 			if(  OutInFlag == 0 )
80D430 201A50            JB      OutInFlag,?C0018?GOODSWAYSET
   95: 			{					
   96: 				sprintf( OutStr, "%3bu", GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum );				
80D433 90174D            MOV     DPTR,#OutStr
80D436 E0                MOVX    A,@DPTR
80D437 FE                MOV     R6,A
80D438 A3                INC     DPTR
80D439 E0                MOVX    A,@DPTR
80D43A AA06              MOV     R2,AR6
80D43C F9                MOV     R1,A
80D43D 7B00              MOV     R3,#?C?XDATASEG
80D43F C003              PUSH    AR3
80D441 C002              PUSH    AR2
80D443 C001              PUSH    AR1
80D445 7B80              MOV     R3,#BYTE2 080174CH
80D447 7A17              MOV     R2,#HIGH 080174CH
80D449 794C              MOV     R1,#LOW 080174CH
80D44B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80D44E A5128007B6        ECALL   ?C?PSTXDATA
80D453 902DEE            MOV     DPTR,#m_SetArrayNo
80D456 E0                MOVX    A,@DPTR
80D457 75F005            MOV     B,#05H
80D45A 900006            MOV     DPTR,#GoodsWaySetVal+04H
80D45D A51280079F        ECALL   ?C?OFFXADD
80D462 E0                MOVX    A,@DPTR
80D463 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80D466 F0                MOVX    @DPTR,A
80D467 D001              POP     AR1
80D469 D002              POP     AR2
80D46B D003              POP     AR3
80D46D A512800949        ECALL   _sprintf
   97: 				*len = 3;								
80D472 901751            MOV     DPTR,#len
80D475 E0                MOVX    A,@DPTR
80D476 FE                MOV     R6,A
80D477 A3                INC     DPTR
80D478 E0                MOVX    A,@DPTR
80D479 F582              MOV     DPL,A
80D47B 8E83              MOV     DPH,R6
80D47D 7403              MOV     A,#03H
80D47F F0                MOVX    @DPTR,A
   98: 			}			
80D480 02D6B9            LJMP    ?C0050?GOODSWAYSET
80D483         ?C0018?GOODSWAYSET:
   99: 			else//存入
  100: 			{
  101: 				Templen = *len;
80D483 901751            MOV     DPTR,#len
80D486 E0                MOVX    A,@DPTR
80D487 FE                MOV     R6,A
80D488 A3                INC     DPTR
80D489 E0                MOVX    A,@DPTR
80D48A F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 523


80D48C 8E83              MOV     DPH,R6
80D48E E0                MOVX    A,@DPTR
80D48F 901753            MOV     DPTR,#Templen
80D492 F0                MOVX    @DPTR,A
  102: 				if( Templen == 0 )
80D493 7003              JNZ     $ + 5H
80D495 02D6B9            LJMP    ?C0050?GOODSWAYSET
  103: 					break;
80D498         ?C0020?GOODSWAYSET:
  104: 				if( Templen > 3 )
80D498 901753            MOV     DPTR,#Templen
80D49B E0                MOVX    A,@DPTR
80D49C D3                SETB    C
80D49D 9403              SUBB    A,#03H
80D49F 4003              JC      ?C0021?GOODSWAYSET
  105: 					Templen = 3;	
80D4A1 7403              MOV     A,#03H
80D4A3 F0                MOVX    @DPTR,A
80D4A4         ?C0021?GOODSWAYSET:
  106: 				GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum = 0;	
80D4A4 902DEE            MOV     DPTR,#m_SetArrayNo
80D4A7 E0                MOVX    A,@DPTR
80D4A8 75F005            MOV     B,#05H
80D4AB 900006            MOV     DPTR,#GoodsWaySetVal+04H
80D4AE A51280079F        ECALL   ?C?OFFXADD
80D4B3 E4                CLR     A
80D4B4 F0                MOVX    @DPTR,A
  107: 				for( i = 0; i < Templen; i ++ )
80D4B5 901754            MOV     DPTR,#i
80D4B8 F0                MOVX    @DPTR,A
80D4B9         ?C0022?GOODSWAYSET:
80D4B9 901753            MOV     DPTR,#Templen
80D4BC E0                MOVX    A,@DPTR
80D4BD FF                MOV     R7,A
80D4BE A3                INC     DPTR
80D4BF E0                MOVX    A,@DPTR
80D4C0 FE                MOV     R6,A
80D4C1 C3                CLR     C
80D4C2 9F                SUBB    A,R7
80D4C3 504A              JNC     ?C0023?GOODSWAYSET
  108: 				{					
  109: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80D4C5 90174F            MOV     DPTR,#InStr
80D4C8 E0                MOVX    A,@DPTR
80D4C9 FC                MOV     R4,A
80D4CA A3                INC     DPTR
80D4CB E0                MOVX    A,@DPTR
80D4CC 2E                ADD     A,R6
80D4CD F582              MOV     DPL,A
80D4CF E4                CLR     A
80D4D0 3C                ADDC    A,R4
80D4D1 F583              MOV     DPH,A
80D4D3 E0                MOVX    A,@DPTR
80D4D4 FF                MOV     R7,A
80D4D5 C3                CLR     C
80D4D6 9400              SUBB    A,#00H
80D4D8 402D              JC      ?C0024?GOODSWAYSET
80D4DA EF                MOV     A,R7
80D4DB D3                SETB    C
80D4DC 9409              SUBB    A,#09H
80D4DE 5027              JNC     ?C0024?GOODSWAYSET
  110: 						GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum = 
80D4E0 902DEE            MOV     DPTR,#m_SetArrayNo
80D4E3 E0                MOVX    A,@DPTR
80D4E4 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 524


80D4E5 75F005            MOV     B,#05H
80D4E8 900006            MOV     DPTR,#GoodsWaySetVal+04H
80D4EB A51280079F        ECALL   ?C?OFFXADD
80D4F0 E0                MOVX    A,@DPTR
80D4F1 75F00A            MOV     B,#0AH
80D4F4 A4                MUL     AB
80D4F5 FD                MOV     R5,A
80D4F6 EF                MOV     A,R7
80D4F7 2D                ADD     A,R5
80D4F8 FF                MOV     R7,A
80D4F9 75F005            MOV     B,#05H
80D4FC EE                MOV     A,R6
80D4FD 900006            MOV     DPTR,#GoodsWaySetVal+04H
80D500 A51280079F        ECALL   ?C?OFFXADD
80D505 EF                MOV     A,R7
80D506 F0                MOVX    @DPTR,A
  111: 								GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum * 10 + *( InStr + i );					
  112: 				}
80D507         ?C0024?GOODSWAYSET:
80D507 901754            MOV     DPTR,#i
80D50A E0                MOVX    A,@DPTR
80D50B 04                INC     A
80D50C F0                MOVX    @DPTR,A
80D50D 80AA              SJMP    ?C0022?GOODSWAYSET
80D50F         ?C0023?GOODSWAYSET:
  113: 				if( GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum == 0 )								
80D50F 902DEE            MOV     DPTR,#m_SetArrayNo
80D512 E0                MOVX    A,@DPTR
80D513 75F005            MOV     B,#05H
80D516 900006            MOV     DPTR,#GoodsWaySetVal+04H
80D519 A51280079F        ECALL   ?C?OFFXADD
80D51E E0                MOVX    A,@DPTR
80D51F 7006              JNZ     ?C0026?GOODSWAYSET
  114: 					Templen = 3;
80D521 901753            MOV     DPTR,#Templen
80D524 7403              MOV     A,#03H
80D526 F0                MOVX    @DPTR,A
80D527         ?C0026?GOODSWAYSET:
  115: 				GoodsSetSave = 1;
80D527         
  116: 			}						
  117: 		break;	
80D527 02D6B3            LJMP    ?C0101?GOODSWAYSET
  118: 		case 3:// 货道状态
80D52A         ?C0027?GOODSWAYSET:
  119: 			if(  OutInFlag == 0 )
80D52A 301A03            JNB     OutInFlag,$ + 6H
80D52D 02D5D3            LJMP    ?C0028?GOODSWAYSET
  120: 			{				
  121: 				Templen = 1;
80D530 901753            MOV     DPTR,#Templen
80D533 7401              MOV     A,#01H
80D535 F0                MOVX    @DPTR,A
  122: 				if( GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum == 0 )
80D536 902DEE            MOV     DPTR,#m_SetArrayNo
80D539 E0                MOVX    A,@DPTR
80D53A FF                MOV     R7,A
80D53B 75F005            MOV     B,#05H
80D53E 900006            MOV     DPTR,#GoodsWaySetVal+04H
80D541 A51280079F        ECALL   ?C?OFFXADD
80D546 E0                MOVX    A,@DPTR
80D547 7006              JNZ     ?C0029?GOODSWAYSET
  123: 					Templen = 3;
80D549 901753            MOV     DPTR,#Templen
80D54C 7403              MOV     A,#03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 525


80D54E F0                MOVX    @DPTR,A
80D54F         ?C0029?GOODSWAYSET:
  124: 				i = ( GoodsWaySetVal[m_SetArrayNo].WayState & 0x0f );				
80D54F 75F005            MOV     B,#05H
80D552 EF                MOV     A,R7
80D553 900003            MOV     DPTR,#GoodsWaySetVal+01H
80D556 A51280079F        ECALL   ?C?OFFXADD
80D55B E0                MOVX    A,@DPTR
80D55C 540F              ANL     A,#0FH
80D55E 901754            MOV     DPTR,#i
80D561 F0                MOVX    @DPTR,A
  125: 				if( ( i & 0x01 ) != 0x01 )
80D562 20E007            JB      ACC.0,?C0030?GOODSWAYSET
  126: 					Templen = 0;				
80D565 E4                CLR     A
80D566 901753            MOV     DPTR,#Templen
80D569 F0                MOVX    @DPTR,A
80D56A 8026              SJMP    ?C0031?GOODSWAYSET
80D56C         ?C0030?GOODSWAYSET:
  127: 				else if( ( i & 0x02 ) == 0x02 )
80D56C 901754            MOV     DPTR,#i
80D56F E0                MOVX    A,@DPTR
80D570 FF                MOV     R7,A
80D571 30E108            JNB     ACC.1,?C0032?GOODSWAYSET
  128: 					Templen = 2;
80D574 901753            MOV     DPTR,#Templen
80D577 7402              MOV     A,#02H
80D579 F0                MOVX    @DPTR,A
80D57A 8016              SJMP    ?C0031?GOODSWAYSET
80D57C         ?C0032?GOODSWAYSET:
  129: 				else if( ( i & 0x04 ) == 0x04 )
80D57C EF                MOV     A,R7
80D57D 30E208            JNB     ACC.2,?C0034?GOODSWAYSET
  130: 					Templen = 3;
80D580 901753            MOV     DPTR,#Templen
80D583 7403              MOV     A,#03H
80D585 F0                MOVX    @DPTR,A
80D586 800A              SJMP    ?C0031?GOODSWAYSET
80D588         ?C0034?GOODSWAYSET:
  131: 				else if( ( i & 0x08 ) == 0x08 )
80D588 EF                MOV     A,R7
80D589 30E306            JNB     ACC.3,?C0031?GOODSWAYSET
  132: 					Templen = 4;				
80D58C 901753            MOV     DPTR,#Templen
80D58F 7404              MOV     A,#04H
80D591 F0                MOVX    @DPTR,A
80D592         ?C0031?GOODSWAYSET:
  133: 				sprintf( OutStr, "%bu", Templen );				
80D592 90174D            MOV     DPTR,#OutStr
80D595 E0                MOVX    A,@DPTR
80D596 FE                MOV     R6,A
80D597 A3                INC     DPTR
80D598 E0                MOVX    A,@DPTR
80D599 AA06              MOV     R2,AR6
80D59B F9                MOV     R1,A
80D59C 7B00              MOV     R3,#?C?XDATASEG
80D59E C003              PUSH    AR3
80D5A0 C002              PUSH    AR2
80D5A2 C001              PUSH    AR1
80D5A4 7B80              MOV     R3,#BYTE2 0801751H
80D5A6 7A17              MOV     R2,#HIGH 0801751H
80D5A8 7951              MOV     R1,#LOW 0801751H
80D5AA 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80D5AD A5128007B6        ECALL   ?C?PSTXDATA
80D5B2 901753            MOV     DPTR,#Templen
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 526


80D5B5 E0                MOVX    A,@DPTR
80D5B6 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80D5B9 F0                MOVX    @DPTR,A
80D5BA D001              POP     AR1
80D5BC D002              POP     AR2
80D5BE D003              POP     AR3
80D5C0 A512800949        ECALL   _sprintf
  134: 				*len = 1;				
80D5C5 901751            MOV     DPTR,#len
80D5C8 E0                MOVX    A,@DPTR
80D5C9 FE                MOV     R6,A
80D5CA A3                INC     DPTR
80D5CB E0                MOVX    A,@DPTR
80D5CC F582              MOV     DPL,A
80D5CE 8E83              MOV     DPH,R6
  135: 			}			
80D5D0 02D6B6            LJMP    ?C0102?GOODSWAYSET
80D5D3         ?C0028?GOODSWAYSET:
  136: 			else//存入
  137: 			{
  138: 				Templen = *len;
80D5D3 901751            MOV     DPTR,#len
80D5D6 E0                MOVX    A,@DPTR
80D5D7 FE                MOV     R6,A
80D5D8 A3                INC     DPTR
80D5D9 E0                MOVX    A,@DPTR
80D5DA F582              MOV     DPL,A
80D5DC 8E83              MOV     DPH,R6
80D5DE E0                MOVX    A,@DPTR
80D5DF 901753            MOV     DPTR,#Templen
80D5E2 F0                MOVX    @DPTR,A
  139: 				if( Templen == 0 )
80D5E3 7003              JNZ     $ + 5H
80D5E5 02D6B9            LJMP    ?C0050?GOODSWAYSET
  140: 					break;
80D5E8         ?C0038?GOODSWAYSET:
  141: 				if( Templen > 1 )
80D5E8 901753            MOV     DPTR,#Templen
80D5EB E0                MOVX    A,@DPTR
80D5EC D3                SETB    C
80D5ED 9401              SUBB    A,#01H
80D5EF 4003              JC      ?C0039?GOODSWAYSET
  142: 					Templen = 1;	
80D5F1 7401              MOV     A,#01H
80D5F3 F0                MOVX    @DPTR,A
80D5F4         ?C0039?GOODSWAYSET:
  143: 				GoodsWaySetVal[m_SetArrayNo].WayState = 0x01;	
80D5F4 902DEE            MOV     DPTR,#m_SetArrayNo
80D5F7 E0                MOVX    A,@DPTR
80D5F8 FF                MOV     R7,A
80D5F9 75F005            MOV     B,#05H
80D5FC 900003            MOV     DPTR,#GoodsWaySetVal+01H
80D5FF A51280079F        ECALL   ?C?OFFXADD
80D604 7401              MOV     A,#01H
80D606 F0                MOVX    @DPTR,A
  144: 				if( *InStr == 0 )//手动设为不确定
80D607 90174F            MOV     DPTR,#InStr
80D60A E0                MOVX    A,@DPTR
80D60B FC                MOV     R4,A
80D60C A3                INC     DPTR
80D60D E0                MOVX    A,@DPTR
80D60E F582              MOV     DPL,A
80D610 8C83              MOV     DPH,R4
80D612 E0                MOVX    A,@DPTR
80D613 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 527


80D614 7009              JNZ     ?C0040?GOODSWAYSET
  145: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x00;
80D616 75F005            MOV     B,#05H
80D619 EF                MOV     A,R7
80D61A 900003            MOV     DPTR,#GoodsWaySetVal+01H
80D61D 8059              SJMP    ?C0103?GOODSWAYSET
80D61F         ?C0040?GOODSWAYSET:
  146: 				else if( *InStr == 1 )//手动设为正常
80D61F EE                MOV     A,R6
80D620 B40114            CJNE    A,#01H,?C0042?GOODSWAYSET
  147: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x01; 
80D623 902DEE            MOV     DPTR,#m_SetArrayNo
80D626 E0                MOVX    A,@DPTR
80D627 75F005            MOV     B,#05H
80D62A 900003            MOV     DPTR,#GoodsWaySetVal+01H
80D62D A51280079F        ECALL   ?C?OFFXADD
80D632 7401              MOV     A,#01H
80D634 F0                MOVX    @DPTR,A
80D635 807C              SJMP    ?C0041?GOODSWAYSET
80D637         ?C0042?GOODSWAYSET:
  148: 				else if( *InStr == 2 )//手动设为故障
80D637 90174F            MOV     DPTR,#InStr
80D63A E0                MOVX    A,@DPTR
80D63B FE                MOV     R6,A
80D63C A3                INC     DPTR
80D63D E0                MOVX    A,@DPTR
80D63E F582              MOV     DPL,A
80D640 8E83              MOV     DPH,R6
80D642 E0                MOVX    A,@DPTR
80D643 FF                MOV     R7,A
80D644 B40214            CJNE    A,#02H,?C0044?GOODSWAYSET
  149: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x03;
80D647 902DEE            MOV     DPTR,#m_SetArrayNo
80D64A E0                MOVX    A,@DPTR
80D64B 75F005            MOV     B,#05H
80D64E 900003            MOV     DPTR,#GoodsWaySetVal+01H
80D651 A51280079F        ECALL   ?C?OFFXADD
80D656 7403              MOV     A,#03H
80D658 F0                MOVX    @DPTR,A
80D659 8058              SJMP    ?C0041?GOODSWAYSET
80D65B         ?C0044?GOODSWAYSET:
  150: 				else if( *InStr == 3 )//手动设为无货
80D65B EF                MOV     A,R7
80D65C B40322            CJNE    A,#03H,?C0046?GOODSWAYSET
  151: 				{
  152: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x05;
80D65F 902DEE            MOV     DPTR,#m_SetArrayNo
80D662 E0                MOVX    A,@DPTR
80D663 FF                MOV     R7,A
80D664 75F005            MOV     B,#05H
80D667 900003            MOV     DPTR,#GoodsWaySetVal+01H
80D66A A51280079F        ECALL   ?C?OFFXADD
80D66F 7405              MOV     A,#05H
80D671 F0                MOVX    @DPTR,A
  153: 					GoodsWaySetVal[m_SetArrayNo].GoodsCurrentSum = 0;
80D672 F5F0              MOV     B,A
80D674 EF                MOV     A,R7
80D675 900006            MOV     DPTR,#GoodsWaySetVal+04H
80D678         
80D678 A51280079F        ECALL   ?C?OFFXADD
80D67D E4                CLR     A
80D67E F0                MOVX    @DPTR,A
  154: 				}
80D67F 8032              SJMP    ?C0041?GOODSWAYSET
80D681         ?C0046?GOODSWAYSET:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 528


  155: 				else if( *InStr == 4 )//手动设为板坏
80D681 90174F            MOV     DPTR,#InStr
80D684 E0                MOVX    A,@DPTR
80D685 FE                MOV     R6,A
80D686 A3                INC     DPTR
80D687 E0                MOVX    A,@DPTR
80D688 F582              MOV     DPL,A
80D68A 8E83              MOV     DPH,R6
80D68C E0                MOVX    A,@DPTR
80D68D FF                MOV     R7,A
80D68E 902DEE            MOV     DPTR,#m_SetArrayNo
80D691 B40411            CJNE    A,#04H,?C0048?GOODSWAYSET
  156: 					GoodsWaySetVal[m_SetArrayNo].WayState = 0x09;
80D694 E0                MOVX    A,@DPTR
80D695 75F005            MOV     B,#05H
80D698 900003            MOV     DPTR,#GoodsWaySetVal+01H
80D69B A51280079F        ECALL   ?C?OFFXADD
80D6A0 7409              MOV     A,#09H
80D6A2 F0                MOVX    @DPTR,A
80D6A3 800E              SJMP    ?C0041?GOODSWAYSET
80D6A5         ?C0048?GOODSWAYSET:
  157: 				else
  158: 					GoodsWaySetVal[m_SetArrayNo].WayState = *InStr;				
80D6A5 E0                MOVX    A,@DPTR
80D6A6 75F005            MOV     B,#05H
80D6A9 900003            MOV     DPTR,#GoodsWaySetVal+01H
80D6AC A51280079F        ECALL   ?C?OFFXADD
80D6B1 EF                MOV     A,R7
80D6B2 F0                MOVX    @DPTR,A
80D6B3         ?C0041?GOODSWAYSET:
  159: 				GoodsSetSave = 1;
80D6B3         
80D6B3 902DEF            MOV     DPTR,#GoodsSetSave
80D6B6         
80D6B6 7401              MOV     A,#01H
80D6B8 F0                MOVX    @DPTR,A
  160: 			}			
  161: 		break;					
  162: 	}
  163: }
80D6B9         ?C0050?GOODSWAYSET:
80D6B9 A522              ERET    
----- FUNCTION _ReadWriteGoodsParam (END) -------


----- FUNCTION _Goods_MenuSelected (BEGIN) -----
 FILE: 'GoodsWaySet.c'
  234: void  Goods_MenuSelected( u_char xdata *SelectedNum, u_char xdata *CursorLine, u_char MoveRange )
  235: {
80D6BB 90172E            MOV     DPTR,#MoveRange
80D6BE EB                MOV     A,R3
80D6BF F0                MOVX    @DPTR,A
80D6C0 90172A            MOV     DPTR,#SelectedNum
80D6C3 EE                MOV     A,R6
80D6C4 F0                MOVX    @DPTR,A
80D6C5 A3                INC     DPTR
80D6C6 EF                MOV     A,R7
80D6C7 F0                MOVX    @DPTR,A
80D6C8 A3                INC     DPTR
80D6C9 EC                MOV     A,R4
80D6CA F0                MOVX    @DPTR,A
80D6CB A3                INC     DPTR
80D6CC ED                MOV     A,R5
80D6CD F0                MOVX    @DPTR,A
  236: 	u_char xdata  MenuNum = *SelectedNum;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 529


  237: 	u_char xdata  Cursor = *CursorLine;
80D6CE 8F82              MOV     DPL,R7
80D6D0 8E83              MOV     DPH,R6
80D6D2 E0                MOVX    A,@DPTR
80D6D3 90172F            MOV     DPTR,#MenuNum
80D6D6 F0                MOVX    @DPTR,A
  238: 	bit	   data  flag = 1;
80D6D7 8D82              MOV     DPL,R5
80D6D9 8C83              MOV     DPH,R4
80D6DB E0                MOVX    A,@DPTR
80D6DC 901730            MOV     DPTR,#Cursor
80D6DF F0                MOVX    @DPTR,A
  239: 	u_char xdata  key = 0xff;
80D6E0 D218              SETB    flag
  240: 	u_char  xdata  len = 0;	
80D6E2 A3                INC     DPTR
80D6E3 74FF              MOV     A,#0FFH
80D6E5 F0                MOVX    @DPTR,A
  241: 
80D6E6 E4                CLR     A
80D6E7 A3                INC     DPTR
80D6E8 F0                MOVX    @DPTR,A
80D6E9         ?C0061?GOODSWAYSET:
  242: 	while( flag )
80D6E9 201803            JB      flag,$ + 6H
80D6EC 02D813            LJMP    ?C0062?GOODSWAYSET
  243: 	{
  244: 		key = GetKey();
80D6EF A512809275        ECALL   GetKey
80D6F4 901731            MOV     DPTR,#key
80D6F7 EF                MOV     A,R7
80D6F8 F0                MOVX    @DPTR,A
  245: 		switch( key )		
80D6F9 24F3              ADD     A,#0F3H
80D6FB 7003              JNZ     $ + 5H
80D6FD 02D7DE            LJMP    ?C0079?GOODSWAYSET
80D700 24C5              ADD     A,#0C5H
80D702 6021              JZ      ?C0065?GOODSWAYSET
80D704 24F8              ADD     A,#0F8H
80D706 7003              JNZ     $ + 5H
80D708 02D78C            LJMP    ?C0072?GOODSWAYSET
80D70B 2435              ADD     A,#035H
80D70D 6003              JZ      $ + 5H
80D70F 02D804            LJMP    ?C0063?GOODSWAYSET
  246: 		{
  247: 			case KEY_CANCEL:
80D712         ?C0064?GOODSWAYSET:
  248: 				flag = 0;
80D712 C218              CLR     flag
  249: 				*SelectedNum = 100;				
80D714 90172A            MOV     DPTR,#SelectedNum
80D717 E0                MOVX    A,@DPTR
80D718 FE                MOV     R6,A
80D719 A3                INC     DPTR
80D71A E0                MOVX    A,@DPTR
80D71B F582              MOV     DPL,A
80D71D 8E83              MOV     DPH,R6
80D71F 7464              MOV     A,#064H
80D721 F0                MOVX    @DPTR,A
  250: 				break;
80D722 02D804            LJMP    ?C0063?GOODSWAYSET
  251: 			case KEY_UP://上移  				
80D725         ?C0065?GOODSWAYSET:
  252: 				if( Cursor == 2 )//选中标记上移
80D725 901730            MOV     DPTR,#Cursor
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 530


80D728 E0                MOVX    A,@DPTR
80D729 6402              XRL     A,#02H
80D72B 7030              JNZ     ?C0066?GOODSWAYSET
  253: 				{			
  254: 					DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标					
80D72D D21A              SETB    ?_DisplayCursorState?BIT
80D72F 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
80D732 7402              MOV     A,#02H
80D734 F0                MOVX    @DPTR,A
80D735 D21B              SETB    ?_DisplayCursorState?BIT+01H
80D737 E4                CLR     A
80D738 FD                MOV     R5,A
80D739 FF                MOV     R7,A
80D73A A51280817F        ECALL   _DisplayCursorState
  255: 					Cursor = 1;
80D73F 901730            MOV     DPTR,#Cursor
80D742 7401              MOV     A,#01H
80D744 F0                MOVX    @DPTR,A
  256: 					if( MenuNum == 0 )
80D745 90172F            MOV     DPTR,#MenuNum
80D748 E0                MOVX    A,@DPTR
80D749 7009              JNZ     ?C0067?GOODSWAYSET
  257: 						MenuNum = MoveRange;					
80D74B 90172E            MOV     DPTR,#MoveRange
80D74E E0                MOVX    A,@DPTR
80D74F A3                INC     DPTR
80D750 F0                MOVX    @DPTR,A
80D751 02D804            LJMP    ?C0063?GOODSWAYSET
80D754         ?C0067?GOODSWAYSET:
  258: 					else									    
  259: 						MenuNum--;					
80D754 90172F            MOV     DPTR,#MenuNum
80D757 E0                MOVX    A,@DPTR
80D758 14                DEC     A
80D759 F0                MOVX    @DPTR,A
  260: 				}
80D75A 02D804            LJMP    ?C0063?GOODSWAYSET
80D75D         ?C0066?GOODSWAYSET:
  261: 				else//菜单上翻
  262: 				{						
  263: 					DisplayGoodsMenuAndVal( 1, MenuNum, 1 );					
80D75D A5128059A1        ECALL   ?L?COM0029
  264: 					if( MenuNum == 0 )
80D762 90172F            MOV     DPTR,#MenuNum
80D765 E0                MOVX    A,@DPTR
80D766 7008              JNZ     ?C0070?GOODSWAYSET
  265: 						MenuNum = MoveRange;					
80D768 90172E            MOV     DPTR,#MoveRange
80D76B E0                MOVX    A,@DPTR
80D76C A3                INC     DPTR
80D76D F0                MOVX    @DPTR,A
80D76E 8006              SJMP    ?C0071?GOODSWAYSET
80D770         ?C0070?GOODSWAYSET:
  266: 					else									    
  267: 						MenuNum--;					
80D770 90172F            MOV     DPTR,#MenuNum
80D773 E0                MOVX    A,@DPTR
80D774 14                DEC     A
80D775 F0                MOVX    @DPTR,A
80D776         ?C0071?GOODSWAYSET:
  268: 					DisplayGoodsMenuAndVal( 0, MenuNum , 1 );																					
80D776 90172F            MOV     DPTR,#MenuNum
80D779 E0                MOVX    A,@DPTR
80D77A FD                MOV     R5,A
80D77B D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 531


80D77D E4                CLR     A
80D77E FF                MOV     R7,A
80D77F A5128059AA        ECALL   _DisplayGoodsMenuAndVal
  269: 					Cursor = 1;						
80D784 901730            MOV     DPTR,#Cursor
80D787 7401              MOV     A,#01H
80D789 F0                MOVX    @DPTR,A
  270: 				}
  271: 				break;
80D78A 8078              SJMP    ?C0063?GOODSWAYSET
  272: 			case KEY_DOWN://下移						
80D78C         ?C0072?GOODSWAYSET:
  273: 				if( Cursor == 1 )//选中标记下移
80D78C 901730            MOV     DPTR,#Cursor
80D78F E0                MOVX    A,@DPTR
80D790 6401              XRL     A,#01H
80D792 701B              JNZ     ?C0073?GOODSWAYSET
  274: 				{
  275: 					DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
80D794 A512808171        ECALL   ?L?COM000F
  276: 					if( MenuNum == MoveRange )
80D799 90172E            MOV     DPTR,#MoveRange
80D79C E0                MOVX    A,@DPTR
80D79D FF                MOV     R7,A
80D79E A3                INC     DPTR
80D79F E0                MOVX    A,@DPTR
80D7A0 B50704            CJNE    A,AR7,?C0074?GOODSWAYSET
  277: 						MenuNum = 0;					
80D7A3 E4                CLR     A
80D7A4 F0                MOVX    @DPTR,A
80D7A5 802F              SJMP    ?C0107?GOODSWAYSET
80D7A7         ?C0074?GOODSWAYSET:
  278: 					else									    						
  279: 						MenuNum++;				     
80D7A7 90172F            MOV     DPTR,#MenuNum
80D7AA E0                MOVX    A,@DPTR
80D7AB 04                INC     A
80D7AC F0                MOVX    @DPTR,A
80D7AD         ?C0075?GOODSWAYSET:
  280: 					Cursor = 2;						
  281: 				}
80D7AD 8027              SJMP    ?C0107?GOODSWAYSET
80D7AF         ?C0073?GOODSWAYSET:
  282: 				else//菜单下翻
  283: 				{					
  284: 					DisplayGoodsMenuAndVal( 0, MenuNum, 1 );						
80D7AF 90172F            MOV     DPTR,#MenuNum
80D7B2 E0                MOVX    A,@DPTR
80D7B3 FD                MOV     R5,A
80D7B4 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80D7B6 E4                CLR     A
80D7B7 FF                MOV     R7,A
80D7B8 A5128059AA        ECALL   _DisplayGoodsMenuAndVal
  285: 					if( MenuNum == MoveRange )
80D7BD 90172E            MOV     DPTR,#MoveRange
80D7C0 E0                MOVX    A,@DPTR
80D7C1 FF                MOV     R7,A
80D7C2 A3                INC     DPTR
80D7C3 E0                MOVX    A,@DPTR
80D7C4 B50704            CJNE    A,AR7,?C0077?GOODSWAYSET
  286: 						MenuNum = 0;					
80D7C7 E4                CLR     A
80D7C8 F0                MOVX    @DPTR,A
80D7C9 8006              SJMP    ?C0078?GOODSWAYSET
80D7CB         ?C0077?GOODSWAYSET:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 532


  287: 					else									    
  288: 						MenuNum++;					
80D7CB 90172F            MOV     DPTR,#MenuNum
80D7CE E0                MOVX    A,@DPTR
80D7CF 04                INC     A
80D7D0 F0                MOVX    @DPTR,A
80D7D1         ?C0078?GOODSWAYSET:
  289: 					DisplayGoodsMenuAndVal( 1, MenuNum , 1 );																					
80D7D1 A5128059A1        ECALL   ?L?COM0029
  290: 					Cursor = 2;
80D7D6         
80D7D6 901730            MOV     DPTR,#Cursor
80D7D9 7402              MOV     A,#02H
80D7DB F0                MOVX    @DPTR,A
  291: 				}
  292: 				break;
80D7DC 8026              SJMP    ?C0063?GOODSWAYSET
  293: 			case KEY_SUBMIT://Enter,选中了某项菜单
80D7DE         ?C0079?GOODSWAYSET:
  294: 				{			
  295: 					*SelectedNum = MenuNum;
80D7DE 90172F            MOV     DPTR,#MenuNum
80D7E1 E0                MOVX    A,@DPTR
80D7E2 FF                MOV     R7,A
80D7E3 90172A            MOV     DPTR,#SelectedNum
80D7E6 E0                MOVX    A,@DPTR
80D7E7 FC                MOV     R4,A
80D7E8 A3                INC     DPTR
80D7E9 E0                MOVX    A,@DPTR
80D7EA F582              MOV     DPL,A
80D7EC 8C83              MOV     DPH,R4
80D7EE EF                MOV     A,R7
80D7EF F0                MOVX    @DPTR,A
  296: 					*CursorLine = Cursor;					
80D7F0 901730            MOV     DPTR,#Cursor
80D7F3 E0                MOVX    A,@DPTR
80D7F4 FF                MOV     R7,A
80D7F5 90172C            MOV     DPTR,#CursorLine
80D7F8 E0                MOVX    A,@DPTR
80D7F9 FC                MOV     R4,A
80D7FA A3                INC     DPTR
80D7FB E0                MOVX    A,@DPTR
80D7FC F582              MOV     DPL,A
80D7FE 8C83              MOV     DPH,R4
80D800 EF                MOV     A,R7
80D801 F0                MOVX    @DPTR,A
  297: 					flag = 0;	
80D802 C218              CLR     flag
  298: 				}
  299: 				break;			
  300: 		}
80D804         ?C0063?GOODSWAYSET:
  301: 		CoreProcessCycle();//让出时间片
80D804 A512807ADC        ECALL   CoreProcessCycle
  302: 		DelayMs( 5 );
80D809 7F05              MOV     R7,#05H
80D80B A512809789        ECALL   _DelayMs
  303: 	}
80D810 02D6E9            LJMP    ?C0061?GOODSWAYSET
80D813         ?C0062?GOODSWAYSET:
  304: 	ClearKey();		
80D813 A5028087A8        EJMP    ClearKey
----- FUNCTION _Goods_MenuSelected (END) -------


LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 533


----- FUNCTION GoodsParamManage (BEGIN) -----
 FILE: 'GoodsWaySet.c'
  309: bit GoodsParamManage()		
  310: {
  311: 	u_char  xdata fristNum ;//一级菜单编号
  312: 	u_char  xdata LineNum ;//选中屏幕的行号	
  313: 	u_char  xdata key = 0;
80D818 E4                CLR     A
80D819 901728            MOV     DPTR,#key
80D81C F0                MOVX    @DPTR,A
  314: 	u_char xdata  i = 0;
80D81D A3                INC     DPTR
80D81E F0                MOVX    @DPTR,A
  315: 	
  316: 	ClearKey();	
80D81F A5128087A8        ECALL   ClearKey
  317: 	GoodsSetSave = 0;
80D824 E4                CLR     A
80D825 902DEF            MOV     DPTR,#GoodsSetSave
80D828 F0                MOVX    @DPTR,A
  318: 	//输入货道编号
  319: 	m_SetArrayNo = 0;
80D829 902DEE            MOV     DPTR,#m_SetArrayNo
80D82C F0                MOVX    @DPTR,A
80D82D         ?C0081?GOODSWAYSET:
  320: //	m_SetArrayNo = InputGoodsWayNo( );
  321: 	/////////////////////////////////////////
  322: 	while( 1 )
  323: 	{		
  324: 		ClearKey();	
80D82D A5128087A8        ECALL   ClearKey
  325: 		//输入货道编号
  326: 		m_SetArrayNo = 0;
80D832 E4                CLR     A
80D833 902DEE            MOV     DPTR,#m_SetArrayNo
80D836 F0                MOVX    @DPTR,A
  327: 		m_SetArrayNo = InputGoodsWayNo( 1 );
80D837 7F01              MOV     R7,#01H
80D839 A51280CFCD        ECALL   _InputGoodsWayNo
80D83E 902DEE            MOV     DPTR,#m_SetArrayNo
80D841 EF                MOV     A,R7
80D842 F0                MOVX    @DPTR,A
  328: 		if( ( m_SetArrayNo == 100 ) || ( m_SetArrayNo == 99 ) )
80D843 6464              XRL     A,#064H
80D845 6004              JZ      ?C0084?GOODSWAYSET
80D847 E0                MOVX    A,@DPTR
80D848 B46304            CJNE    A,#063H,?C0083?GOODSWAYSET
80D84B         ?C0084?GOODSWAYSET:
  329: 			return 0;	
80D84B C3                CLR     C
80D84C 02D91C            LJMP    ?C0085?GOODSWAYSET
80D84F         ?C0083?GOODSWAYSET:
  330: 		Trace("\n input m_SetArrayNo = %bu", m_SetArrayNo );	
  331: 		DisplayGoodsMenuAndVal( 0, 0, 1 );	
80D84F D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80D851 E4                CLR     A
80D852 FD                MOV     R5,A
80D853 FF                MOV     R7,A
80D854 A5128059AA        ECALL   _DisplayGoodsMenuAndVal
  332: 		DisplayGoodsMenuAndVal( 1, 1, 1 );		
80D859 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80D85B 7D01              MOV     R5,#01H
80D85D 7F01              MOV     R7,#01H
80D85F A5128059AA        ECALL   _DisplayGoodsMenuAndVal
  333: 		DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 534


80D864 A512808171        ECALL   ?L?COM000F
  334: 		fristNum = 1;
80D869 901726            MOV     DPTR,#fristNum
80D86C 7401              MOV     A,#01H
80D86E F0                MOVX    @DPTR,A
  335: 		LineNum = 2;
80D86F A3                INC     DPTR
80D870 04                INC     A
80D871 F0                MOVX    @DPTR,A
  336: 		WaitForWork( 300, NULL );
80D872 E4                CLR     A
80D873 7F2C              MOV     R7,#02CH
80D875 7E01              MOV     R6,#01H
80D877 A512807B35        ECALL   ?L?COM000D
80D87C         ?C0086?GOODSWAYSET:
  337: 		while( 1 )
  338: 		{		
  339: 			/*判断按下何键*/			
  340: 			Goods_MenuSelected( &fristNum, &LineNum, MENU_COUNT( GoodsWaystr ) - 1 );			
80D87C 7E17              MOV     R6,#HIGH fristNum
80D87E 7F26              MOV     R7,#LOW fristNum
80D880 7C17              MOV     R4,#HIGH LineNum
80D882 7D27              MOV     R5,#LOW LineNum
80D884 7B03              MOV     R3,#03H
80D886 A51280D6BB        ECALL   _Goods_MenuSelected
  341: 			//选中了某项菜单				
  342: 			if( fristNum == 100 )//选中退出									
80D88B 901726            MOV     DPTR,#fristNum
80D88E E0                MOVX    A,@DPTR
80D88F FF                MOV     R7,A
80D890 6464              XRL     A,#064H
80D892 6099              JZ      ?C0081?GOODSWAYSET
  343: 				break;		
80D894         ?C0088?GOODSWAYSET:
  344: 			else if( fristNum == 0 )//没有选中退出
80D894 EF                MOV     A,R7
80D895 60E5              JZ      ?C0086?GOODSWAYSET
  345: 				continue;
80D897         ?C0090?GOODSWAYSET:
  346: 			else
  347: 			{				
  348: 				ClearKey();									
80D897 A5128087A8        ECALL   ClearKey
  349: 				EditGoodsParam( fristNum, LineNum - 1 );			
80D89C 901726            MOV     DPTR,#fristNum
80D89F E0                MOVX    A,@DPTR
80D8A0 FF                MOV     R7,A
80D8A1 A3                INC     DPTR
80D8A2 E0                MOVX    A,@DPTR
80D8A3 14                DEC     A
80D8A4 FD                MOV     R5,A
80D8A5 A512805B03        ECALL   _EditGoodsParam
  350: 				//重新显示此项参数的值			
  351: 				if( LineNum == 2 )
80D8AA 901727            MOV     DPTR,#LineNum
80D8AD E0                MOVX    A,@DPTR
80D8AE 6402              XRL     A,#02H
80D8B0 7026              JNZ     ?C0092?GOODSWAYSET
  352: 				{			
  353: 					if( fristNum == 0 )
80D8B2 901726            MOV     DPTR,#fristNum
80D8B5 E0                MOVX    A,@DPTR
80D8B6 7006              JNZ     ?C0093?GOODSWAYSET
  354: 						DisplayGoodsMenuAndVal( 0, MENU_COUNT( GoodsWaystr ) - 1, 1 );
80D8B8 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 535


80D8BA 7D03              MOV     R5,#03H
80D8BC 8009              SJMP    ?C0108?GOODSWAYSET
80D8BE         ?C0093?GOODSWAYSET:
  355: 					else						
  356: 						DisplayGoodsMenuAndVal( 0, fristNum-1, 1 );						
80D8BE 901726            MOV     DPTR,#fristNum
80D8C1 E0                MOVX    A,@DPTR
80D8C2 14                DEC     A
80D8C3 FD                MOV     R5,A
80D8C4 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80D8C6 E4                CLR     A
80D8C7         
80D8C7 FF                MOV     R7,A
80D8C8 A5128059AA        ECALL   _DisplayGoodsMenuAndVal
80D8CD         ?C0094?GOODSWAYSET:
  357: 					DisplayGoodsMenuAndVal( 1, fristNum, 1 );	
80D8CD 901726            MOV     DPTR,#fristNum
80D8D0 E0                MOVX    A,@DPTR
80D8D1 FD                MOV     R5,A
80D8D2 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80D8D4 7F01              MOV     R7,#01H
  358: 				}
80D8D6 8025              SJMP    ?C0110?GOODSWAYSET
80D8D8         ?C0092?GOODSWAYSET:
  359: 				else
  360: 				{									
  361: 					if( fristNum == ( MENU_COUNT( GoodsWaystr ) - 1 ) )
80D8D8 901726            MOV     DPTR,#fristNum
80D8DB E0                MOVX    A,@DPTR
80D8DC B40306            CJNE    A,#03H,?C0096?GOODSWAYSET
  362: 						DisplayGoodsMenuAndVal( 1, 0, 1 );	
80D8DF D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80D8E1 E4                CLR     A
80D8E2 FD                MOV     R5,A
80D8E3 8008              SJMP    ?C0109?GOODSWAYSET
80D8E5         ?C0096?GOODSWAYSET:
  363: 					else						
  364: 						DisplayGoodsMenuAndVal( 1, fristNum + 1, 1 );	
80D8E5 901726            MOV     DPTR,#fristNum
80D8E8 E0                MOVX    A,@DPTR
80D8E9 04                INC     A
80D8EA FD                MOV     R5,A
80D8EB D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80D8ED         
80D8ED 7F01              MOV     R7,#01H
80D8EF A5128059AA        ECALL   _DisplayGoodsMenuAndVal
80D8F4         ?C0097?GOODSWAYSET:
  365: 					DisplayGoodsMenuAndVal( 0, fristNum, 1 );
80D8F4 901726            MOV     DPTR,#fristNum
80D8F7 E0                MOVX    A,@DPTR
80D8F8 FD                MOV     R5,A
80D8F9 D219              SETB    ?_DisplayGoodsMenuAndVal?BIT
80D8FB E4                CLR     A
80D8FC FF                MOV     R7,A
80D8FD         
80D8FD A5128059AA        ECALL   _DisplayGoodsMenuAndVal
  366: 				}			
80D902         ?C0095?GOODSWAYSET:
  367: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//设置光标为整行状态			
80D902 901727            MOV     DPTR,#LineNum
80D905 E0                MOVX    A,@DPTR
80D906 14                DEC     A
80D907 FD                MOV     R5,A
80D908 D21A              SETB    ?_DisplayCursorState?BIT
80D90A 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 536


80D90D 7402              MOV     A,#02H
80D90F F0                MOVX    @DPTR,A
80D910 D21B              SETB    ?_DisplayCursorState?BIT+01H
80D912 E4                CLR     A
80D913 FF                MOV     R7,A
80D914 A51280817F        ECALL   _DisplayCursorState
  368: 			}				
  369: 		}
80D919 02D87C            LJMP    ?C0086?GOODSWAYSET
  370: 	}
  371: 	return 0;
  372: }
80D91C         ?C0085?GOODSWAYSET:
80D91C A522              ERET    
----- FUNCTION GoodsParamManage (END) -------


----- FUNCTION _ReadWriteSysParam (BEGIN) -----
 FILE: 'SysParamSet.c'
   91: void ReadWriteSysParam( u_char Num,u_char xdata *OutStr,u_char xdata *InStr ,u_char xdata *len, bit OutInFlag )
   92: {	
80D91E 90174D            MOV     DPTR,#OutStr
80D921 EC                MOV     A,R4
80D922 F0                MOVX    @DPTR,A
80D923 A3                INC     DPTR
80D924 ED                MOV     A,R5
80D925 F0                MOVX    @DPTR,A
80D926 A3                INC     DPTR
80D927 EA                MOV     A,R2
80D928 F0                MOVX    @DPTR,A
80D929 A3                INC     DPTR
80D92A EB                MOV     A,R3
80D92B F0                MOVX    @DPTR,A
;---- Variable 'Num' assigned to Register 'R7' ----
   93: 	u_char  xdata j = 0;	
   94: 	u_char	xdata  i;
80D92C E4                CLR     A
80D92D 901753            MOV     DPTR,#j
80D930 F0                MOVX    @DPTR,A
   95: 	uint	xdata temp = 0;		
80D931 901755            MOV     DPTR,#temp
80D934 F0                MOVX    @DPTR,A
80D935 A3                INC     DPTR
80D936 F0                MOVX    @DPTR,A
   96: 
   97: 	i = 0;
80D937 901754            MOV     DPTR,#i
80D93A F0                MOVX    @DPTR,A
   98: 	switch( Num )
80D93B EF                MOV     A,R7
80D93C A5128007CD        ECALL   ?C?CCASEX
80D941 D999              DW      ?C0002?SYSPARAMSET
80D943 00                DB      00H
80D944 DABD              DW      ?C0014?SYSPARAMSET
80D946 01                DB      01H
80D947 DC12              DW      ?C0026?SYSPARAMSET
80D949 02                DB      02H
80D94A DD67              DW      ?C0038?SYSPARAMSET
80D94C 03                DB      03H
80D94D DDFE              DW      ?C0048?SYSPARAMSET
80D94F 04                DB      04H
80D950 DE88              DW      ?C0057?SYSPARAMSET
80D952 05                DB      05H
80D953 DF12              DW      ?C0066?SYSPARAMSET
80D955 06                DB      06H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 537


80D956 DF94              DW      ?C0071?SYSPARAMSET
80D958 07                DB      07H
80D959 E0E9              DW      ?C0083?SYSPARAMSET
80D95B 08                DB      08H
80D95C E24A              DW      ?C0096?SYSPARAMSET
80D95E 09                DB      09H
80D95F E364              DW      ?C0106?SYSPARAMSET
80D961 0A                DB      0AH
80D962 E442              DW      ?C0116?SYSPARAMSET
80D964 0B                DB      0BH
80D965 E60F              DW      ?C0131?SYSPARAMSET
80D967 0C                DB      0CH
80D968 E729              DW      ?C0141?SYSPARAMSET
80D96A 0D                DB      0DH
80D96B E7F7              DW      ?C0158?SYSPARAMSET
80D96D 0E                DB      0EH
80D96E E988              DW      ?C0171?SYSPARAMSET
80D970 0F                DB      0FH
80D971 EB19              DW      ?C0184?SYSPARAMSET
80D973 10                DB      010H
80D974 ECAA              DW      ?C0197?SYSPARAMSET
80D976 11                DB      011H
80D977 EE3B              DW      ?C0210?SYSPARAMSET
80D979 12                DB      012H
80D97A EFCC              DW      ?C0223?SYSPARAMSET
80D97C 13                DB      013H
80D97D F15D              DW      ?C0236?SYSPARAMSET
80D97F 14                DB      014H
80D980 F2EE              DW      ?C0249?SYSPARAMSET
80D982 15                DB      015H
80D983 F47F              DW      ?C0262?SYSPARAMSET
80D985 16                DB      016H
80D986 F610              DW      ?C0275?SYSPARAMSET
80D988 17                DB      017H
80D989 F7A1              DW      ?C0288?SYSPARAMSET
80D98B 18                DB      018H
80D98C F932              DW      ?C0301?SYSPARAMSET
80D98E 19                DB      019H
80D98F FAC3              DW      ?C0314?SYSPARAMSET
80D991 1A                DB      01AH
80D992 FC54              DW      ?C0327?SYSPARAMSET
80D994 1B                DB      01BH
80D995 0000              DW      00H
80D997 FDF6              DW      ?C0341?SYSPARAMSET
   99: 	{
  100: 		case 0://#1硬币面值			
80D999         ?C0002?SYSPARAMSET:
  101: 			if( OutInFlag == 0 )
80D999 301A03            JNB     OutInFlag,$ + 6H
80D99C 02DA48            LJMP    ?C0003?SYSPARAMSET
  102: 			{				
  103: 				switch( SystemParameter.curUnit )
80D99F 900466            MOV     DPTR,#SystemParameter+048H
80D9A2 E0                MOVX    A,@DPTR
80D9A3 FE                MOV     R6,A
80D9A4 A3                INC     DPTR
80D9A5 E0                MOVX    A,@DPTR
80D9A6 FF                MOV     R7,A
80D9A7 EE                MOV     A,R6
80D9A8 6003              JZ      $ + 5H
80D9AA 02FDF6            LJMP    ?C0341?SYSPARAMSET
80D9AD EF                MOV     A,R7
80D9AE 24F6              ADD     A,#0F6H
80D9B0 6031              JZ      ?C0006?SYSPARAMSET
80D9B2 24A6              ADD     A,#0A6H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 538


80D9B4 6047              JZ      ?C0007?SYSPARAMSET
80D9B6 2463              ADD     A,#063H
80D9B8 6003              JZ      $ + 5H
80D9BA 02FDF6            LJMP    ?C0341?SYSPARAMSET
  104: 				{
  105: 					case 1:
80D9BD         ?C0005?SYSPARAMSET:
  106: 						*len = sprintf( OutStr, "%u", SystemParameter.HopperCoinPrice1 );
80D9BD 90174D            MOV     DPTR,#OutStr
80D9C0 E0                MOVX    A,@DPTR
80D9C1 FE                MOV     R6,A
80D9C2 A3                INC     DPTR
80D9C3 E0                MOVX    A,@DPTR
80D9C4 AA06              MOV     R2,AR6
80D9C6 F9                MOV     R1,A
80D9C7 7B00              MOV     R3,#?C?XDATASEG
80D9C9 C003              PUSH    AR3
80D9CB C002              PUSH    AR2
80D9CD C001              PUSH    AR1
80D9CF 7B80              MOV     R3,#BYTE2 0801088H
80D9D1 7A10              MOV     R2,#HIGH 0801088H
80D9D3 7988              MOV     R1,#LOW 0801088H
80D9D5 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80D9D8 A5128007B6        ECALL   ?C?PSTXDATA
80D9DD 90041F            MOV     DPTR,#SystemParameter+01H
  107: 					break;				
80D9E0 02E841            LJMP    ?C0428?SYSPARAMSET
  108: 					case 10:
80D9E3         ?C0006?SYSPARAMSET:
  109: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.HopperCoinPrice1/SystemParameter.curUnit,SystemParameter.H
>> opperCoinPrice1%SystemParameter.curUnit );
80D9E3 90174D            MOV     DPTR,#OutStr
80D9E6 E0                MOVX    A,@DPTR
80D9E7 FE                MOV     R6,A
80D9E8 A3                INC     DPTR
80D9E9 E0                MOVX    A,@DPTR
80D9EA AA06              MOV     R2,AR6
80D9EC F9                MOV     R1,A
80D9ED 7B00              MOV     R3,#?C?XDATASEG
80D9EF C003              PUSH    AR3
80D9F1 C002              PUSH    AR2
80D9F3 C001              PUSH    AR1
80D9F5 7B80              MOV     R3,#BYTE2 080108BH
80D9F7 7A10              MOV     R2,#HIGH 080108BH
80D9F9 798B              MOV     R1,#LOW 080108BH
  110: 					break;
80D9FB 8018              SJMP    ?C0407?SYSPARAMSET
  111: 					case 100:
80D9FD         ?C0007?SYSPARAMSET:
  112: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.HopperCoinPrice1/SystemParameter.curUnit,SystemParameter
>> .HopperCoinPrice1%SystemParameter.curUnit );
80D9FD 90174D            MOV     DPTR,#OutStr
80DA00 E0                MOVX    A,@DPTR
80DA01 FE                MOV     R6,A
80DA02 A3                INC     DPTR
80DA03 E0                MOVX    A,@DPTR
80DA04 AA06              MOV     R2,AR6
80DA06 F9                MOV     R1,A
80DA07 7B00              MOV     R3,#?C?XDATASEG
80DA09 C003              PUSH    AR3
80DA0B C002              PUSH    AR2
80DA0D C001              PUSH    AR1
80DA0F 7B80              MOV     R3,#BYTE2 0801091H
80DA11 7A10              MOV     R2,#HIGH 0801091H
80DA13 7991              MOV     R1,#LOW 0801091H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 539


80DA15         
80DA15 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DA18 A5128007B6        ECALL   ?C?PSTXDATA
80DA1D 900466            MOV     DPTR,#SystemParameter+048H
80DA20 E0                MOVX    A,@DPTR
80DA21 FC                MOV     R4,A
80DA22 A3                INC     DPTR
80DA23 E0                MOVX    A,@DPTR
80DA24 FD                MOV     R5,A
80DA25 90041F            MOV     DPTR,#SystemParameter+01H
80DA28 E0                MOVX    A,@DPTR
80DA29 FE                MOV     R6,A
80DA2A A3                INC     DPTR
80DA2B E0                MOVX    A,@DPTR
80DA2C FF                MOV     R7,A
80DA2D A51280056C        ECALL   ?C?UIDIV
80DA32 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80DA35 EE                MOV     A,R6
80DA36 F0                MOVX    @DPTR,A
80DA37 A3                INC     DPTR
80DA38 EF                MOV     A,R7
80DA39 F0                MOVX    @DPTR,A
80DA3A 900466            MOV     DPTR,#SystemParameter+048H
80DA3D E0                MOVX    A,@DPTR
80DA3E FC                MOV     R4,A
80DA3F A3                INC     DPTR
80DA40 E0                MOVX    A,@DPTR
80DA41 FD                MOV     R5,A
80DA42 90041F            MOV     DPTR,#SystemParameter+01H
  113: 					break;					
80DA45 02E897            LJMP    ?C0430?SYSPARAMSET
  114: 				}				
  115: 			}
80DA48         ?C0003?SYSPARAMSET:
  116: 			else
  117: 			{				
  118: 				//Trace( "\n set IP val \n");
  119: 				j = *len;											
80DA48 901751            MOV     DPTR,#len
80DA4B E0                MOVX    A,@DPTR
80DA4C FE                MOV     R6,A
80DA4D A3                INC     DPTR
80DA4E E0                MOVX    A,@DPTR
80DA4F F582              MOV     DPL,A
80DA51 8E83              MOV     DPH,R6
80DA53 E0                MOVX    A,@DPTR
80DA54 901753            MOV     DPTR,#j
80DA57 F0                MOVX    @DPTR,A
  120: 				if( j == 0 )
80DA58 7003              JNZ     $ + 5H
80DA5A 02FDF6            LJMP    ?C0341?SYSPARAMSET
  121: 					break;
80DA5D         ?C0009?SYSPARAMSET:
  122: 				SystemParameter.HopperCoinPrice1 = 0;	
80DA5D E4                CLR     A
80DA5E 90041F            MOV     DPTR,#SystemParameter+01H
80DA61 F0                MOVX    @DPTR,A
80DA62 A3                INC     DPTR
80DA63 F0                MOVX    @DPTR,A
  123: 				for( i = 0; i < j; i ++ )
80DA64 901754            MOV     DPTR,#i
80DA67 F0                MOVX    @DPTR,A
80DA68         ?C0010?SYSPARAMSET:
80DA68 901753            MOV     DPTR,#j
80DA6B E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 540


80DA6C FF                MOV     R7,A
80DA6D A3                INC     DPTR
80DA6E E0                MOVX    A,@DPTR
80DA6F FE                MOV     R6,A
80DA70 C3                CLR     C
80DA71 9F                SUBB    A,R7
80DA72 5044              JNC     ?C0011?SYSPARAMSET
  124: 				{
  125: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80DA74 90174F            MOV     DPTR,#InStr
80DA77 E0                MOVX    A,@DPTR
80DA78 FC                MOV     R4,A
80DA79 A3                INC     DPTR
80DA7A E0                MOVX    A,@DPTR
80DA7B 2E                ADD     A,R6
80DA7C F582              MOV     DPL,A
80DA7E E4                CLR     A
80DA7F 3C                ADDC    A,R4
80DA80 F583              MOV     DPH,A
80DA82 E0                MOVX    A,@DPTR
80DA83 FF                MOV     R7,A
80DA84 C3                CLR     C
80DA85 9400              SUBB    A,#00H
80DA87 4027              JC      ?C0012?SYSPARAMSET
80DA89 EF                MOV     A,R7
80DA8A D3                SETB    C
80DA8B 9409              SUBB    A,#09H
80DA8D 5021              JNC     ?C0012?SYSPARAMSET
  126: 						SystemParameter.HopperCoinPrice1 = SystemParameter.HopperCoinPrice1*10 + *( InStr + i );						
80DA8F EF                MOV     A,R7
80DA90 FB                MOV     R3,A
80DA91 7A00              MOV     R2,#00H
80DA93 90041F            MOV     DPTR,#SystemParameter+01H
80DA96 E0                MOVX    A,@DPTR
80DA97 FE                MOV     R6,A
80DA98 A3                INC     DPTR
80DA99 E0                MOVX    A,@DPTR
80DA9A FF                MOV     R7,A
80DA9B 7C00              MOV     R4,#00H
80DA9D 7D0A              MOV     R5,#0AH
80DA9F A512800559        ECALL   ?C?IMUL
80DAA4 EF                MOV     A,R7
80DAA5 2B                ADD     A,R3
80DAA6 FF                MOV     R7,A
80DAA7 EA                MOV     A,R2
80DAA8 3E                ADDC    A,R6
80DAA9 90041F            MOV     DPTR,#SystemParameter+01H
80DAAC F0                MOVX    @DPTR,A
80DAAD A3                INC     DPTR
80DAAE EF                MOV     A,R7
80DAAF F0                MOVX    @DPTR,A
  127: 				}			
80DAB0         ?C0012?SYSPARAMSET:
80DAB0 901754            MOV     DPTR,#i
80DAB3 E0                MOVX    A,@DPTR
80DAB4 04                INC     A
80DAB5 F0                MOVX    @DPTR,A
80DAB6 80B0              SJMP    ?C0010?SYSPARAMSET
80DAB8         ?C0011?SYSPARAMSET:
  128: 				SystemSave = 1;
80DAB8 D22E              SETB    SystemSave
  129: 			}			
  130: 		break;		
80DABA 02FDF6            LJMP    ?C0341?SYSPARAMSET
  131: 		case 1://#2硬币面值			
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 541


80DABD         ?C0014?SYSPARAMSET:
  132: 			if( OutInFlag == 0 )
80DABD 301A03            JNB     OutInFlag,$ + 6H
80DAC0 02DB9D            LJMP    ?C0015?SYSPARAMSET
  133: 			{					
  134: 				switch( SystemParameter.curUnit )
80DAC3 900466            MOV     DPTR,#SystemParameter+048H
80DAC6 E0                MOVX    A,@DPTR
80DAC7 FE                MOV     R6,A
80DAC8 A3                INC     DPTR
80DAC9 E0                MOVX    A,@DPTR
80DACA FF                MOV     R7,A
80DACB EE                MOV     A,R6
80DACC 6003              JZ      $ + 5H
80DACE 02FDF6            LJMP    ?C0341?SYSPARAMSET
80DAD1 EF                MOV     A,R7
80DAD2 24F6              ADD     A,#0F6H
80DAD4 6031              JZ      ?C0018?SYSPARAMSET
80DAD6 24A6              ADD     A,#0A6H
80DAD8 6078              JZ      ?C0019?SYSPARAMSET
80DADA 2463              ADD     A,#063H
80DADC 6003              JZ      $ + 5H
80DADE 02FDF6            LJMP    ?C0341?SYSPARAMSET
  135: 				{
  136: 					case 1:
80DAE1         ?C0017?SYSPARAMSET:
  137: 						*len = sprintf( OutStr, "%u", SystemParameter.HopperCoinPrice2 );
80DAE1 90174D            MOV     DPTR,#OutStr
80DAE4 E0                MOVX    A,@DPTR
80DAE5 FE                MOV     R6,A
80DAE6 A3                INC     DPTR
80DAE7 E0                MOVX    A,@DPTR
80DAE8 AA06              MOV     R2,AR6
80DAEA F9                MOV     R1,A
80DAEB 7B00              MOV     R3,#?C?XDATASEG
80DAED C003              PUSH    AR3
80DAEF C002              PUSH    AR2
80DAF1 C001              PUSH    AR1
80DAF3 7B80              MOV     R3,#BYTE2 0801088H
80DAF5 7A10              MOV     R2,#HIGH 0801088H
80DAF7 7988              MOV     R1,#LOW 0801088H
80DAF9 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DAFC A5128007B6        ECALL   ?C?PSTXDATA
80DB01 900421            MOV     DPTR,#SystemParameter+03H
80DB04         
  138: 					break;				
80DB04 02E841            LJMP    ?C0428?SYSPARAMSET
  139: 					case 10:
80DB07         ?C0018?SYSPARAMSET:
  140: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.HopperCoinPrice2/SystemParameter.curUnit,SystemParameter.H
>> opperCoinPrice2%SystemParameter.curUnit );
80DB07 90174D            MOV     DPTR,#OutStr
80DB0A E0                MOVX    A,@DPTR
80DB0B FE                MOV     R6,A
80DB0C A3                INC     DPTR
80DB0D E0                MOVX    A,@DPTR
80DB0E AA06              MOV     R2,AR6
80DB10 F9                MOV     R1,A
80DB11 7B00              MOV     R3,#?C?XDATASEG
80DB13 C003              PUSH    AR3
80DB15 C002              PUSH    AR2
80DB17 C001              PUSH    AR1
80DB19 7B80              MOV     R3,#BYTE2 080108BH
80DB1B 7A10              MOV     R2,#HIGH 080108BH
80DB1D 798B              MOV     R1,#LOW 080108BH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 542


80DB1F 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DB22 A5128007B6        ECALL   ?C?PSTXDATA
80DB27 900466            MOV     DPTR,#SystemParameter+048H
80DB2A E0                MOVX    A,@DPTR
80DB2B FC                MOV     R4,A
80DB2C A3                INC     DPTR
80DB2D E0                MOVX    A,@DPTR
80DB2E FD                MOV     R5,A
80DB2F 900421            MOV     DPTR,#SystemParameter+03H
80DB32 E0                MOVX    A,@DPTR
80DB33 FE                MOV     R6,A
80DB34 A3                INC     DPTR
80DB35 E0                MOVX    A,@DPTR
80DB36 FF                MOV     R7,A
80DB37 A51280056C        ECALL   ?C?UIDIV
80DB3C 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80DB3F EE                MOV     A,R6
80DB40 F0                MOVX    @DPTR,A
80DB41 A3                INC     DPTR
80DB42 EF                MOV     A,R7
80DB43 F0                MOVX    @DPTR,A
80DB44 900466            MOV     DPTR,#SystemParameter+048H
80DB47 E0                MOVX    A,@DPTR
80DB48 FC                MOV     R4,A
80DB49 A3                INC     DPTR
80DB4A E0                MOVX    A,@DPTR
80DB4B FD                MOV     R5,A
80DB4C 900421            MOV     DPTR,#SystemParameter+03H
80DB4F         
  141: 					break;
80DB4F 02E897            LJMP    ?C0430?SYSPARAMSET
  142: 					case 100:
80DB52         ?C0019?SYSPARAMSET:
  143: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.HopperCoinPrice2/SystemParameter.curUnit,SystemParameter
>> .HopperCoinPrice2%SystemParameter.curUnit );
80DB52 90174D            MOV     DPTR,#OutStr
80DB55 E0                MOVX    A,@DPTR
80DB56 FE                MOV     R6,A
80DB57 A3                INC     DPTR
80DB58 E0                MOVX    A,@DPTR
80DB59 AA06              MOV     R2,AR6
80DB5B F9                MOV     R1,A
80DB5C 7B00              MOV     R3,#?C?XDATASEG
80DB5E C003              PUSH    AR3
80DB60 C002              PUSH    AR2
80DB62 C001              PUSH    AR1
80DB64 7B80              MOV     R3,#BYTE2 0801091H
80DB66 7A10              MOV     R2,#HIGH 0801091H
80DB68 7991              MOV     R1,#LOW 0801091H
80DB6A 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DB6D A5128007B6        ECALL   ?C?PSTXDATA
80DB72 900466            MOV     DPTR,#SystemParameter+048H
80DB75 E0                MOVX    A,@DPTR
80DB76 FC                MOV     R4,A
80DB77 A3                INC     DPTR
80DB78 E0                MOVX    A,@DPTR
80DB79 FD                MOV     R5,A
80DB7A 900421            MOV     DPTR,#SystemParameter+03H
80DB7D E0                MOVX    A,@DPTR
80DB7E FE                MOV     R6,A
80DB7F A3                INC     DPTR
80DB80 E0                MOVX    A,@DPTR
80DB81 FF                MOV     R7,A
80DB82 A51280056C        ECALL   ?C?UIDIV
80DB87 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 543


80DB8A EE                MOV     A,R6
80DB8B F0                MOVX    @DPTR,A
80DB8C A3                INC     DPTR
80DB8D EF                MOV     A,R7
80DB8E F0                MOVX    @DPTR,A
80DB8F 900466            MOV     DPTR,#SystemParameter+048H
80DB92 E0                MOVX    A,@DPTR
80DB93 FC                MOV     R4,A
80DB94 A3                INC     DPTR
80DB95 E0                MOVX    A,@DPTR
80DB96 FD                MOV     R5,A
80DB97 900421            MOV     DPTR,#SystemParameter+03H
80DB9A         
  144: 					break;					
80DB9A 02E897            LJMP    ?C0430?SYSPARAMSET
  145: 				}				
  146: 			}
80DB9D         ?C0015?SYSPARAMSET:
  147: 			else
  148: 			{				
  149: 				//Trace( "\n set IP val \n");
  150: 				j = *len;											
80DB9D 901751            MOV     DPTR,#len
80DBA0 E0                MOVX    A,@DPTR
80DBA1 FE                MOV     R6,A
80DBA2 A3                INC     DPTR
80DBA3 E0                MOVX    A,@DPTR
80DBA4 F582              MOV     DPL,A
80DBA6 8E83              MOV     DPH,R6
80DBA8 E0                MOVX    A,@DPTR
80DBA9 901753            MOV     DPTR,#j
80DBAC F0                MOVX    @DPTR,A
  151: 				if( j == 0 )
80DBAD 7003              JNZ     $ + 5H
80DBAF 02FDF6            LJMP    ?C0341?SYSPARAMSET
  152: 					break;
80DBB2         ?C0021?SYSPARAMSET:
  153: 				SystemParameter.HopperCoinPrice2 = 0;	
80DBB2 E4                CLR     A
80DBB3 900421            MOV     DPTR,#SystemParameter+03H
80DBB6 F0                MOVX    @DPTR,A
80DBB7 A3                INC     DPTR
80DBB8 F0                MOVX    @DPTR,A
  154: 				for( i = 0; i < j; i ++ )
80DBB9 901754            MOV     DPTR,#i
80DBBC F0                MOVX    @DPTR,A
80DBBD         ?C0022?SYSPARAMSET:
80DBBD 901753            MOV     DPTR,#j
80DBC0 E0                MOVX    A,@DPTR
80DBC1 FF                MOV     R7,A
80DBC2 A3                INC     DPTR
80DBC3 E0                MOVX    A,@DPTR
80DBC4 FE                MOV     R6,A
80DBC5 C3                CLR     C
80DBC6 9F                SUBB    A,R7
80DBC7 5044              JNC     ?C0023?SYSPARAMSET
  155: 				{
  156: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80DBC9 90174F            MOV     DPTR,#InStr
80DBCC E0                MOVX    A,@DPTR
80DBCD FC                MOV     R4,A
80DBCE A3                INC     DPTR
80DBCF E0                MOVX    A,@DPTR
80DBD0 2E                ADD     A,R6
80DBD1 F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 544


80DBD3 E4                CLR     A
80DBD4 3C                ADDC    A,R4
80DBD5 F583              MOV     DPH,A
80DBD7 E0                MOVX    A,@DPTR
80DBD8 FF                MOV     R7,A
80DBD9 C3                CLR     C
80DBDA 9400              SUBB    A,#00H
80DBDC 4027              JC      ?C0024?SYSPARAMSET
80DBDE EF                MOV     A,R7
80DBDF D3                SETB    C
80DBE0 9409              SUBB    A,#09H
80DBE2 5021              JNC     ?C0024?SYSPARAMSET
  157: 						SystemParameter.HopperCoinPrice2 = SystemParameter.HopperCoinPrice2*10 + *( InStr + i );						
80DBE4 EF                MOV     A,R7
80DBE5 FB                MOV     R3,A
80DBE6 7A00              MOV     R2,#00H
80DBE8 900421            MOV     DPTR,#SystemParameter+03H
80DBEB E0                MOVX    A,@DPTR
80DBEC FE                MOV     R6,A
80DBED A3                INC     DPTR
80DBEE E0                MOVX    A,@DPTR
80DBEF FF                MOV     R7,A
80DBF0 7C00              MOV     R4,#00H
80DBF2 7D0A              MOV     R5,#0AH
80DBF4 A512800559        ECALL   ?C?IMUL
80DBF9 EF                MOV     A,R7
80DBFA 2B                ADD     A,R3
80DBFB FF                MOV     R7,A
80DBFC EA                MOV     A,R2
80DBFD 3E                ADDC    A,R6
80DBFE 900421            MOV     DPTR,#SystemParameter+03H
80DC01 F0                MOVX    @DPTR,A
80DC02 A3                INC     DPTR
80DC03 EF                MOV     A,R7
80DC04 F0                MOVX    @DPTR,A
  158: 				}			
80DC05         ?C0024?SYSPARAMSET:
80DC05 901754            MOV     DPTR,#i
80DC08 E0                MOVX    A,@DPTR
80DC09 04                INC     A
80DC0A F0                MOVX    @DPTR,A
80DC0B 80B0              SJMP    ?C0022?SYSPARAMSET
80DC0D         ?C0023?SYSPARAMSET:
  159: 				SystemSave = 1;
80DC0D D22E              SETB    SystemSave
  160: 			}			
  161: 		break;		
80DC0F 02FDF6            LJMP    ?C0341?SYSPARAMSET
  162: 		case 2://#3硬币面值			
80DC12         ?C0026?SYSPARAMSET:
  163: 			if( OutInFlag == 0 )
80DC12 301A03            JNB     OutInFlag,$ + 6H
80DC15 02DCF2            LJMP    ?C0027?SYSPARAMSET
  164: 			{													
  165: 				switch( SystemParameter.curUnit )
80DC18 900466            MOV     DPTR,#SystemParameter+048H
80DC1B E0                MOVX    A,@DPTR
80DC1C FE                MOV     R6,A
80DC1D A3                INC     DPTR
80DC1E E0                MOVX    A,@DPTR
80DC1F FF                MOV     R7,A
80DC20 EE                MOV     A,R6
80DC21 6003              JZ      $ + 5H
80DC23 02FDF6            LJMP    ?C0341?SYSPARAMSET
80DC26 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 545


80DC27 24F6              ADD     A,#0F6H
80DC29 6031              JZ      ?C0030?SYSPARAMSET
80DC2B 24A6              ADD     A,#0A6H
80DC2D 6078              JZ      ?C0031?SYSPARAMSET
80DC2F 2463              ADD     A,#063H
80DC31 6003              JZ      $ + 5H
80DC33 02FDF6            LJMP    ?C0341?SYSPARAMSET
  166: 				{
  167: 					case 1:
80DC36         ?C0029?SYSPARAMSET:
  168: 						*len = sprintf( OutStr, "%u", SystemParameter.HopperCoinPrice3 );
80DC36 90174D            MOV     DPTR,#OutStr
80DC39 E0                MOVX    A,@DPTR
80DC3A FE                MOV     R6,A
80DC3B A3                INC     DPTR
80DC3C E0                MOVX    A,@DPTR
80DC3D AA06              MOV     R2,AR6
80DC3F F9                MOV     R1,A
80DC40 7B00              MOV     R3,#?C?XDATASEG
80DC42 C003              PUSH    AR3
80DC44 C002              PUSH    AR2
80DC46 C001              PUSH    AR1
80DC48 7B80              MOV     R3,#BYTE2 0801088H
80DC4A 7A10              MOV     R2,#HIGH 0801088H
80DC4C 7988              MOV     R1,#LOW 0801088H
80DC4E 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DC51 A5128007B6        ECALL   ?C?PSTXDATA
80DC56 900423            MOV     DPTR,#SystemParameter+05H
80DC59         
  169: 					break;				
80DC59 02E841            LJMP    ?C0428?SYSPARAMSET
  170: 					case 10:
80DC5C         ?C0030?SYSPARAMSET:
  171: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.HopperCoinPrice3/SystemParameter.curUnit,SystemParameter.H
>> opperCoinPrice3%SystemParameter.curUnit );
80DC5C 90174D            MOV     DPTR,#OutStr
80DC5F E0                MOVX    A,@DPTR
80DC60 FE                MOV     R6,A
80DC61 A3                INC     DPTR
80DC62 E0                MOVX    A,@DPTR
80DC63 AA06              MOV     R2,AR6
80DC65 F9                MOV     R1,A
80DC66 7B00              MOV     R3,#?C?XDATASEG
80DC68 C003              PUSH    AR3
80DC6A C002              PUSH    AR2
80DC6C C001              PUSH    AR1
80DC6E 7B80              MOV     R3,#BYTE2 080108BH
80DC70 7A10              MOV     R2,#HIGH 080108BH
80DC72 798B              MOV     R1,#LOW 080108BH
80DC74 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DC77 A5128007B6        ECALL   ?C?PSTXDATA
80DC7C 900466            MOV     DPTR,#SystemParameter+048H
80DC7F E0                MOVX    A,@DPTR
80DC80 FC                MOV     R4,A
80DC81 A3                INC     DPTR
80DC82 E0                MOVX    A,@DPTR
80DC83 FD                MOV     R5,A
80DC84 900423            MOV     DPTR,#SystemParameter+05H
80DC87 E0                MOVX    A,@DPTR
80DC88 FE                MOV     R6,A
80DC89 A3                INC     DPTR
80DC8A E0                MOVX    A,@DPTR
80DC8B FF                MOV     R7,A
80DC8C A51280056C        ECALL   ?C?UIDIV
80DC91 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 546


80DC94 EE                MOV     A,R6
80DC95 F0                MOVX    @DPTR,A
80DC96 A3                INC     DPTR
80DC97 EF                MOV     A,R7
80DC98 F0                MOVX    @DPTR,A
80DC99 900466            MOV     DPTR,#SystemParameter+048H
80DC9C E0                MOVX    A,@DPTR
80DC9D FC                MOV     R4,A
80DC9E A3                INC     DPTR
80DC9F E0                MOVX    A,@DPTR
80DCA0 FD                MOV     R5,A
80DCA1 900423            MOV     DPTR,#SystemParameter+05H
80DCA4         
  172: 					break;
80DCA4 02E897            LJMP    ?C0430?SYSPARAMSET
  173: 					case 100:
80DCA7         ?C0031?SYSPARAMSET:
  174: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.HopperCoinPrice3/SystemParameter.curUnit,SystemParameter
>> .HopperCoinPrice3%SystemParameter.curUnit );
80DCA7 90174D            MOV     DPTR,#OutStr
80DCAA E0                MOVX    A,@DPTR
80DCAB FE                MOV     R6,A
80DCAC A3                INC     DPTR
80DCAD E0                MOVX    A,@DPTR
80DCAE AA06              MOV     R2,AR6
80DCB0 F9                MOV     R1,A
80DCB1 7B00              MOV     R3,#?C?XDATASEG
80DCB3 C003              PUSH    AR3
80DCB5 C002              PUSH    AR2
80DCB7 C001              PUSH    AR1
80DCB9 7B80              MOV     R3,#BYTE2 0801091H
80DCBB 7A10              MOV     R2,#HIGH 0801091H
80DCBD 7991              MOV     R1,#LOW 0801091H
80DCBF 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DCC2 A5128007B6        ECALL   ?C?PSTXDATA
80DCC7 900466            MOV     DPTR,#SystemParameter+048H
80DCCA E0                MOVX    A,@DPTR
80DCCB FC                MOV     R4,A
80DCCC A3                INC     DPTR
80DCCD E0                MOVX    A,@DPTR
80DCCE FD                MOV     R5,A
80DCCF 900423            MOV     DPTR,#SystemParameter+05H
80DCD2 E0                MOVX    A,@DPTR
80DCD3 FE                MOV     R6,A
80DCD4 A3                INC     DPTR
80DCD5 E0                MOVX    A,@DPTR
80DCD6 FF                MOV     R7,A
80DCD7 A51280056C        ECALL   ?C?UIDIV
80DCDC 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80DCDF EE                MOV     A,R6
80DCE0 F0                MOVX    @DPTR,A
80DCE1 A3                INC     DPTR
80DCE2 EF                MOV     A,R7
80DCE3 F0                MOVX    @DPTR,A
80DCE4 900466            MOV     DPTR,#SystemParameter+048H
80DCE7 E0                MOVX    A,@DPTR
80DCE8 FC                MOV     R4,A
80DCE9 A3                INC     DPTR
80DCEA E0                MOVX    A,@DPTR
80DCEB FD                MOV     R5,A
80DCEC 900423            MOV     DPTR,#SystemParameter+05H
80DCEF         
  175: 					break;					
80DCEF 02E897            LJMP    ?C0430?SYSPARAMSET
  176: 				}
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 547


  177: 			}
80DCF2         ?C0027?SYSPARAMSET:
  178: 			else
  179: 			{				
  180: 				//Trace( "\n set IP val \n");
  181: 				j = *len;											
80DCF2 901751            MOV     DPTR,#len
80DCF5 E0                MOVX    A,@DPTR
80DCF6 FE                MOV     R6,A
80DCF7 A3                INC     DPTR
80DCF8 E0                MOVX    A,@DPTR
80DCF9 F582              MOV     DPL,A
80DCFB 8E83              MOV     DPH,R6
80DCFD E0                MOVX    A,@DPTR
80DCFE 901753            MOV     DPTR,#j
80DD01 F0                MOVX    @DPTR,A
  182: 				if( j == 0 )
80DD02 7003              JNZ     $ + 5H
80DD04 02FDF6            LJMP    ?C0341?SYSPARAMSET
  183: 					break;
80DD07         ?C0033?SYSPARAMSET:
  184: 				SystemParameter.HopperCoinPrice3 = 0;	
80DD07 E4                CLR     A
80DD08 900423            MOV     DPTR,#SystemParameter+05H
80DD0B F0                MOVX    @DPTR,A
80DD0C A3                INC     DPTR
80DD0D F0                MOVX    @DPTR,A
  185: 				for( i = 0; i < j; i ++ )
80DD0E 901754            MOV     DPTR,#i
80DD11 F0                MOVX    @DPTR,A
80DD12         ?C0034?SYSPARAMSET:
80DD12 901753            MOV     DPTR,#j
80DD15 E0                MOVX    A,@DPTR
80DD16 FF                MOV     R7,A
80DD17 A3                INC     DPTR
80DD18 E0                MOVX    A,@DPTR
80DD19 FE                MOV     R6,A
80DD1A C3                CLR     C
80DD1B 9F                SUBB    A,R7
80DD1C 5044              JNC     ?C0035?SYSPARAMSET
  186: 				{
  187: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80DD1E 90174F            MOV     DPTR,#InStr
80DD21 E0                MOVX    A,@DPTR
80DD22 FC                MOV     R4,A
80DD23 A3                INC     DPTR
80DD24 E0                MOVX    A,@DPTR
80DD25 2E                ADD     A,R6
80DD26 F582              MOV     DPL,A
80DD28 E4                CLR     A
80DD29 3C                ADDC    A,R4
80DD2A F583              MOV     DPH,A
80DD2C E0                MOVX    A,@DPTR
80DD2D FF                MOV     R7,A
80DD2E C3                CLR     C
80DD2F 9400              SUBB    A,#00H
80DD31 4027              JC      ?C0036?SYSPARAMSET
80DD33 EF                MOV     A,R7
80DD34 D3                SETB    C
80DD35 9409              SUBB    A,#09H
80DD37 5021              JNC     ?C0036?SYSPARAMSET
  188: 						SystemParameter.HopperCoinPrice3 = SystemParameter.HopperCoinPrice3*10 + *( InStr + i );						
80DD39 EF                MOV     A,R7
80DD3A FB                MOV     R3,A
80DD3B 7A00              MOV     R2,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 548


80DD3D 900423            MOV     DPTR,#SystemParameter+05H
80DD40 E0                MOVX    A,@DPTR
80DD41 FE                MOV     R6,A
80DD42 A3                INC     DPTR
80DD43 E0                MOVX    A,@DPTR
80DD44 FF                MOV     R7,A
80DD45 7C00              MOV     R4,#00H
80DD47 7D0A              MOV     R5,#0AH
80DD49 A512800559        ECALL   ?C?IMUL
80DD4E EF                MOV     A,R7
80DD4F 2B                ADD     A,R3
80DD50 FF                MOV     R7,A
80DD51 EA                MOV     A,R2
80DD52 3E                ADDC    A,R6
80DD53 900423            MOV     DPTR,#SystemParameter+05H
80DD56 F0                MOVX    @DPTR,A
80DD57 A3                INC     DPTR
80DD58 EF                MOV     A,R7
80DD59 F0                MOVX    @DPTR,A
  189: 				}										
80DD5A         ?C0036?SYSPARAMSET:
80DD5A 901754            MOV     DPTR,#i
80DD5D E0                MOVX    A,@DPTR
80DD5E 04                INC     A
80DD5F F0                MOVX    @DPTR,A
80DD60 80B0              SJMP    ?C0034?SYSPARAMSET
80DD62         ?C0035?SYSPARAMSET:
  190: 				SystemSave = 1;
80DD62 D22E              SETB    SystemSave
  191: 			}			
  192: 		break;		
80DD64 02FDF6            LJMP    ?C0341?SYSPARAMSET
  193: 		case 3://允许多次购买	
80DD67         ?C0038?SYSPARAMSET:
  194: 			if( OutInFlag == 0 )
80DD67 201A26            JB      OutInFlag,?C0039?SYSPARAMSET
  195: 			{				
  196: 				sprintf( OutStr, "%bu", SystemParameter.IsMuliVerd );			
80DD6A 90174D            MOV     DPTR,#OutStr
80DD6D E0                MOVX    A,@DPTR
80DD6E FE                MOV     R6,A
80DD6F A3                INC     DPTR
80DD70 E0                MOVX    A,@DPTR
80DD71 AA06              MOV     R2,AR6
80DD73 F9                MOV     R1,A
80DD74 7B00              MOV     R3,#?C?XDATASEG
80DD76 C003              PUSH    AR3
80DD78 C002              PUSH    AR2
80DD7A C001              PUSH    AR1
80DD7C 7B80              MOV     R3,#BYTE2 0801099H
80DD7E 7A10              MOV     R2,#HIGH 0801099H
80DD80 7999              MOV     R1,#LOW 0801099H
80DD82 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DD85 A5128007B6        ECALL   ?C?PSTXDATA
80DD8A 900426            MOV     DPTR,#SystemParameter+08H
  197: 				*len = 1;
  198: 			}
80DD8D 02DF38            LJMP    ?C0417?SYSPARAMSET
80DD90         ?C0039?SYSPARAMSET:
  199: 			else
  200: 			{
  201: 				j = *len;
80DD90 901751            MOV     DPTR,#len
80DD93 E0                MOVX    A,@DPTR
80DD94 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 549


80DD95 A3                INC     DPTR
80DD96 E0                MOVX    A,@DPTR
80DD97 F582              MOV     DPL,A
80DD99 8E83              MOV     DPH,R6
80DD9B E0                MOVX    A,@DPTR
80DD9C 901753            MOV     DPTR,#j
80DD9F F0                MOVX    @DPTR,A
  202: 				if( j == 0 )
80DDA0 7003              JNZ     $ + 5H
80DDA2 02FDF6            LJMP    ?C0341?SYSPARAMSET
  203: 					break;
80DDA5         ?C0041?SYSPARAMSET:
  204: 				if( j > 1 )
80DDA5 901753            MOV     DPTR,#j
80DDA8 E0                MOVX    A,@DPTR
80DDA9 D3                SETB    C
80DDAA 9401              SUBB    A,#01H
80DDAC 4003              JC      ?C0042?SYSPARAMSET
  205: 					j = 1;
80DDAE 7401              MOV     A,#01H
80DDB0 F0                MOVX    @DPTR,A
80DDB1         ?C0042?SYSPARAMSET:
  206: 				for( i = 0; i < j; i ++ )
80DDB1 E4                CLR     A
80DDB2 901754            MOV     DPTR,#i
80DDB5 F0                MOVX    @DPTR,A
80DDB6         ?C0043?SYSPARAMSET:
80DDB6 901753            MOV     DPTR,#j
80DDB9 E0                MOVX    A,@DPTR
80DDBA FF                MOV     R7,A
80DDBB A3                INC     DPTR
80DDBC E0                MOVX    A,@DPTR
80DDBD FE                MOV     R6,A
80DDBE C3                CLR     C
80DDBF 9F                SUBB    A,R7
80DDC0 502A              JNC     ?C0044?SYSPARAMSET
  207: 				{
  208: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80DDC2 90174F            MOV     DPTR,#InStr
80DDC5 E0                MOVX    A,@DPTR
80DDC6 FC                MOV     R4,A
80DDC7 A3                INC     DPTR
80DDC8 E0                MOVX    A,@DPTR
80DDC9 2E                ADD     A,R6
80DDCA F582              MOV     DPL,A
80DDCC E4                CLR     A
80DDCD 3C                ADDC    A,R4
80DDCE F583              MOV     DPH,A
80DDD0 E0                MOVX    A,@DPTR
80DDD1 FF                MOV     R7,A
80DDD2 C3                CLR     C
80DDD3 9400              SUBB    A,#00H
80DDD5 400D              JC      ?C0045?SYSPARAMSET
80DDD7 EF                MOV     A,R7
80DDD8 D3                SETB    C
80DDD9 9409              SUBB    A,#09H
80DDDB 5007              JNC     ?C0045?SYSPARAMSET
  209: 					{
  210: 						SystemParameter.IsMuliVerd = *( InStr + i );
80DDDD 900426            MOV     DPTR,#SystemParameter+08H
80DDE0 EF                MOV     A,R7
80DDE1 F0                MOVX    @DPTR,A
  211: 						break;
80DDE2 8008              SJMP    ?C0044?SYSPARAMSET
  212: 					}
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 550


  213: 				}
80DDE4         ?C0045?SYSPARAMSET:
80DDE4 901754            MOV     DPTR,#i
80DDE7 E0                MOVX    A,@DPTR
80DDE8 04                INC     A
80DDE9 F0                MOVX    @DPTR,A
80DDEA 80CA              SJMP    ?C0043?SYSPARAMSET
80DDEC         ?C0044?SYSPARAMSET:
  214: 				if( SystemParameter.IsMuliVerd != 1 )
80DDEC 900426            MOV     DPTR,#SystemParameter+08H
80DDEF E0                MOVX    A,@DPTR
80DDF0 6401              XRL     A,#01H
80DDF2 6005              JZ      ?C0047?SYSPARAMSET
  215: 					SystemParameter.Min = 0;	
80DDF4 E4                CLR     A
80DDF5 A3                INC     DPTR
80DDF6 F0                MOVX    @DPTR,A
80DDF7 A3                INC     DPTR
80DDF8 F0                MOVX    @DPTR,A
80DDF9         ?C0047?SYSPARAMSET:
  216: 				SystemSave = 1;
80DDF9 D22E              SETB    SystemSave
  217: 			}
  218: 		break;
80DDFB 02FDF6            LJMP    ?C0341?SYSPARAMSET
  219: 		case 4://允许退币	
80DDFE         ?C0048?SYSPARAMSET:
  220: 			if( OutInFlag == 0 )
80DDFE 201A26            JB      OutInFlag,?C0049?SYSPARAMSET
  221: 			{				
  222: 				sprintf( OutStr, "%bu", SystemParameter.RefundPermission );			
80DE01 90174D            MOV     DPTR,#OutStr
80DE04 E0                MOVX    A,@DPTR
80DE05 FE                MOV     R6,A
80DE06 A3                INC     DPTR
80DE07 E0                MOVX    A,@DPTR
80DE08 AA06              MOV     R2,AR6
80DE0A F9                MOV     R1,A
80DE0B 7B00              MOV     R3,#?C?XDATASEG
80DE0D C003              PUSH    AR3
80DE0F C002              PUSH    AR2
80DE11 C001              PUSH    AR1
80DE13 7B80              MOV     R3,#BYTE2 0801099H
80DE15 7A10              MOV     R2,#HIGH 0801099H
80DE17 7999              MOV     R1,#LOW 0801099H
80DE19 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DE1C A5128007B6        ECALL   ?C?PSTXDATA
80DE21 90041E            MOV     DPTR,#SystemParameter
80DE24         
  223: 				*len = 1;
  224: 			}
80DE24 02DF38            LJMP    ?C0417?SYSPARAMSET
80DE27         ?C0049?SYSPARAMSET:
  225: 			else
  226: 			{
  227: 				j = *len;
80DE27 901751            MOV     DPTR,#len
80DE2A E0                MOVX    A,@DPTR
80DE2B FE                MOV     R6,A
80DE2C A3                INC     DPTR
80DE2D E0                MOVX    A,@DPTR
80DE2E F582              MOV     DPL,A
80DE30 8E83              MOV     DPH,R6
80DE32 E0                MOVX    A,@DPTR
80DE33 901753            MOV     DPTR,#j
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 551


80DE36 F0                MOVX    @DPTR,A
  228: 				if( j == 0 )
80DE37 7003              JNZ     $ + 5H
80DE39 02FDF6            LJMP    ?C0341?SYSPARAMSET
  229: 					break;
80DE3C         ?C0051?SYSPARAMSET:
  230: 				if( j > 1 )
80DE3C 901753            MOV     DPTR,#j
80DE3F E0                MOVX    A,@DPTR
80DE40 D3                SETB    C
80DE41 9401              SUBB    A,#01H
80DE43 4003              JC      ?C0052?SYSPARAMSET
  231: 					j = 1;
80DE45 7401              MOV     A,#01H
80DE47 F0                MOVX    @DPTR,A
80DE48         ?C0052?SYSPARAMSET:
  232: 				for( i = 0; i < j; i ++ )
80DE48 E4                CLR     A
80DE49 901754            MOV     DPTR,#i
80DE4C F0                MOVX    @DPTR,A
80DE4D         ?C0053?SYSPARAMSET:
80DE4D 901753            MOV     DPTR,#j
80DE50 E0                MOVX    A,@DPTR
80DE51 FF                MOV     R7,A
80DE52 A3                INC     DPTR
80DE53 E0                MOVX    A,@DPTR
80DE54 FE                MOV     R6,A
80DE55 C3                CLR     C
80DE56 9F                SUBB    A,R7
80DE57 502A              JNC     ?C0054?SYSPARAMSET
  233: 				{
  234: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80DE59 90174F            MOV     DPTR,#InStr
80DE5C E0                MOVX    A,@DPTR
80DE5D FC                MOV     R4,A
80DE5E A3                INC     DPTR
80DE5F E0                MOVX    A,@DPTR
80DE60 2E                ADD     A,R6
80DE61 F582              MOV     DPL,A
80DE63 E4                CLR     A
80DE64 3C                ADDC    A,R4
80DE65 F583              MOV     DPH,A
80DE67 E0                MOVX    A,@DPTR
80DE68 FF                MOV     R7,A
80DE69 C3                CLR     C
80DE6A 9400              SUBB    A,#00H
80DE6C 400D              JC      ?C0055?SYSPARAMSET
80DE6E EF                MOV     A,R7
80DE6F D3                SETB    C
80DE70 9409              SUBB    A,#09H
80DE72 5007              JNC     ?C0055?SYSPARAMSET
  235: 					{
  236: 						SystemParameter.RefundPermission = *( InStr + i );
80DE74 90041E            MOV     DPTR,#SystemParameter
80DE77 EF                MOV     A,R7
80DE78 F0                MOVX    @DPTR,A
  237: 						break;
80DE79 8008              SJMP    ?C0054?SYSPARAMSET
  238: 					}
  239: 				}		
80DE7B         ?C0055?SYSPARAMSET:
80DE7B 901754            MOV     DPTR,#i
80DE7E E0                MOVX    A,@DPTR
80DE7F 04                INC     A
80DE80 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 552


80DE81 80CA              SJMP    ?C0053?SYSPARAMSET
80DE83         ?C0054?SYSPARAMSET:
  240: 				SystemSave = 1;
80DE83 D22E              SETB    SystemSave
  241: 			}
  242: 		break;
80DE85 02FDF6            LJMP    ?C0341?SYSPARAMSET
  243: 		case 5://是否允许开启纸币器	
80DE88         ?C0057?SYSPARAMSET:
  244: 			if( OutInFlag == 0 )
80DE88 201A26            JB      OutInFlag,?C0058?SYSPARAMSET
  245: 			{				
  246: 				sprintf( OutStr, "%bu", SystemParameter.BillNo );			
80DE8B 90174D            MOV     DPTR,#OutStr
80DE8E E0                MOVX    A,@DPTR
80DE8F FE                MOV     R6,A
80DE90 A3                INC     DPTR
80DE91 E0                MOVX    A,@DPTR
80DE92 AA06              MOV     R2,AR6
80DE94 F9                MOV     R1,A
80DE95 7B00              MOV     R3,#?C?XDATASEG
80DE97 C003              PUSH    AR3
80DE99 C002              PUSH    AR2
80DE9B C001              PUSH    AR1
80DE9D 7B80              MOV     R3,#BYTE2 0801099H
80DE9F 7A10              MOV     R2,#HIGH 0801099H
80DEA1 7999              MOV     R1,#LOW 0801099H
80DEA3 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DEA6 A5128007B6        ECALL   ?C?PSTXDATA
80DEAB 900425            MOV     DPTR,#SystemParameter+07H
80DEAE         
  247: 				*len = 1;
  248: 			}
80DEAE 02DF38            LJMP    ?C0417?SYSPARAMSET
80DEB1         ?C0058?SYSPARAMSET:
  249: 			else
  250: 			{
  251: 				j = *len;
80DEB1 901751            MOV     DPTR,#len
80DEB4 E0                MOVX    A,@DPTR
80DEB5 FE                MOV     R6,A
80DEB6 A3                INC     DPTR
80DEB7 E0                MOVX    A,@DPTR
80DEB8 F582              MOV     DPL,A
80DEBA 8E83              MOV     DPH,R6
80DEBC E0                MOVX    A,@DPTR
80DEBD 901753            MOV     DPTR,#j
80DEC0 F0                MOVX    @DPTR,A
  252: 				if( j == 0 )
80DEC1 7003              JNZ     $ + 5H
80DEC3 02FDF6            LJMP    ?C0341?SYSPARAMSET
  253: 					break;
80DEC6         ?C0060?SYSPARAMSET:
  254: 				if( j > 1 )
80DEC6 901753            MOV     DPTR,#j
80DEC9 E0                MOVX    A,@DPTR
80DECA D3                SETB    C
80DECB 9401              SUBB    A,#01H
80DECD 4003              JC      ?C0061?SYSPARAMSET
  255: 					j = 1;
80DECF 7401              MOV     A,#01H
80DED1 F0                MOVX    @DPTR,A
80DED2         ?C0061?SYSPARAMSET:
  256: 				for( i = 0; i < j; i ++ )
80DED2 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 553


80DED3 901754            MOV     DPTR,#i
80DED6 F0                MOVX    @DPTR,A
80DED7         ?C0062?SYSPARAMSET:
80DED7 901753            MOV     DPTR,#j
80DEDA E0                MOVX    A,@DPTR
80DEDB FF                MOV     R7,A
80DEDC A3                INC     DPTR
80DEDD E0                MOVX    A,@DPTR
80DEDE FE                MOV     R6,A
80DEDF C3                CLR     C
80DEE0 9F                SUBB    A,R7
80DEE1 502A              JNC     ?C0063?SYSPARAMSET
  257: 				{
  258: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
80DEE3 90174F            MOV     DPTR,#InStr
80DEE6 E0                MOVX    A,@DPTR
80DEE7 FC                MOV     R4,A
80DEE8 A3                INC     DPTR
80DEE9 E0                MOVX    A,@DPTR
80DEEA 2E                ADD     A,R6
80DEEB F582              MOV     DPL,A
80DEED E4                CLR     A
80DEEE 3C                ADDC    A,R4
80DEEF F583              MOV     DPH,A
80DEF1 E0                MOVX    A,@DPTR
80DEF2 FF                MOV     R7,A
80DEF3 C3                CLR     C
80DEF4 9400              SUBB    A,#00H
80DEF6 400D              JC      ?C0064?SYSPARAMSET
80DEF8 EF                MOV     A,R7
80DEF9 D3                SETB    C
80DEFA 9409              SUBB    A,#09H
80DEFC 5007              JNC     ?C0064?SYSPARAMSET
  259: 					{
  260: 						SystemParameter.BillNo = *( InStr + i );
80DEFE 900425            MOV     DPTR,#SystemParameter+07H
80DF01 EF                MOV     A,R7
80DF02 F0                MOVX    @DPTR,A
  261: 						break;
80DF03 8008              SJMP    ?C0063?SYSPARAMSET
  262: 					}
  263: 				}		
80DF05         ?C0064?SYSPARAMSET:
80DF05 901754            MOV     DPTR,#i
80DF08 E0                MOVX    A,@DPTR
80DF09 04                INC     A
80DF0A F0                MOVX    @DPTR,A
80DF0B 80CA              SJMP    ?C0062?SYSPARAMSET
80DF0D         ?C0063?SYSPARAMSET:
  264: 				SystemSave = 1;
80DF0D D22E              SETB    SystemSave
  265: 			}
  266: 		break;
80DF0F 02FDF6            LJMP    ?C0341?SYSPARAMSET
  267: 		case 6://是否开启手机模块	
80DF12         ?C0066?SYSPARAMSET:
  268: 			if( OutInFlag == 0 )
80DF12 201A44            JB      OutInFlag,?C0067?SYSPARAMSET
  269: 			{				
  270: 				sprintf( OutStr, "%bu", SystemParameter.MobileON );			
80DF15 90174D            MOV     DPTR,#OutStr
80DF18 E0                MOVX    A,@DPTR
80DF19 FE                MOV     R6,A
80DF1A A3                INC     DPTR
80DF1B E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 554


80DF1C AA06              MOV     R2,AR6
80DF1E F9                MOV     R1,A
80DF1F 7B00              MOV     R3,#?C?XDATASEG
80DF21 C003              PUSH    AR3
80DF23 C002              PUSH    AR2
80DF25 C001              PUSH    AR1
80DF27 7B80              MOV     R3,#BYTE2 0801099H
80DF29 7A10              MOV     R2,#HIGH 0801099H
80DF2B 7999              MOV     R1,#LOW 0801099H
80DF2D 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DF30 A5128007B6        ECALL   ?C?PSTXDATA
80DF35 900444            MOV     DPTR,#SystemParameter+026H
80DF38         
80DF38 E0                MOVX    A,@DPTR
80DF39 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80DF3C F0                MOVX    @DPTR,A
80DF3D D001              POP     AR1
80DF3F D002              POP     AR2
80DF41 D003              POP     AR3
80DF43 A512800949        ECALL   _sprintf
  271: 				*len = 1;
80DF48 901751            MOV     DPTR,#len
80DF4B E0                MOVX    A,@DPTR
80DF4C FE                MOV     R6,A
80DF4D A3                INC     DPTR
80DF4E E0                MOVX    A,@DPTR
80DF4F F582              MOV     DPL,A
80DF51 8E83              MOV     DPH,R6
80DF53 7401              MOV     A,#01H
80DF55 F0                MOVX    @DPTR,A
  272: 			}
80DF56 02FDF6            LJMP    ?C0341?SYSPARAMSET
80DF59         ?C0067?SYSPARAMSET:
  273: 			else
  274: 			{
  275: 				j = *len;
80DF59 901751            MOV     DPTR,#len
80DF5C E0                MOVX    A,@DPTR
80DF5D FE                MOV     R6,A
80DF5E A3                INC     DPTR
80DF5F E0                MOVX    A,@DPTR
80DF60 F582              MOV     DPL,A
80DF62 8E83              MOV     DPH,R6
80DF64 E0                MOVX    A,@DPTR
80DF65 901753            MOV     DPTR,#j
80DF68 F0                MOVX    @DPTR,A
  276: 				if( j == 0 )
80DF69 7003              JNZ     $ + 5H
80DF6B 02FDF6            LJMP    ?C0341?SYSPARAMSET
  277: 					break;
80DF6E         ?C0069?SYSPARAMSET:
  278: 				if( j > 1 )
80DF6E 901753            MOV     DPTR,#j
80DF71 E0                MOVX    A,@DPTR
80DF72 D3                SETB    C
80DF73 9401              SUBB    A,#01H
80DF75 4003              JC      ?C0070?SYSPARAMSET
  279: 					j = 1;				
80DF77 7401              MOV     A,#01H
80DF79 F0                MOVX    @DPTR,A
80DF7A         ?C0070?SYSPARAMSET:
  280: 				SystemParameter.MobileON = *( InStr + i );				
80DF7A 901754            MOV     DPTR,#i
80DF7D E0                MOVX    A,@DPTR
80DF7E FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 555


80DF7F 90174F            MOV     DPTR,#InStr
80DF82 E0                MOVX    A,@DPTR
80DF83 FC                MOV     R4,A
80DF84 A3                INC     DPTR
80DF85 E0                MOVX    A,@DPTR
80DF86 2F                ADD     A,R7
80DF87 F582              MOV     DPL,A
80DF89 E4                CLR     A
80DF8A 3C                ADDC    A,R4
80DF8B F583              MOV     DPH,A
80DF8D E0                MOVX    A,@DPTR
80DF8E 900444            MOV     DPTR,#SystemParameter+026H
  281: 				SystemSave = 1;
  282: 			}
  283: 		break;
80DF91 02E609            LJMP    ?C0418?SYSPARAMSET
  284: 		case 7://再交易低限额
80DF94         ?C0071?SYSPARAMSET:
  285: 			if( OutInFlag == 0 )
80DF94 301A03            JNB     OutInFlag,$ + 6H
80DF97 02E074            LJMP    ?C0072?SYSPARAMSET
  286: 			{				
  287: 				switch( SystemParameter.curUnit )
80DF9A 900466            MOV     DPTR,#SystemParameter+048H
80DF9D E0                MOVX    A,@DPTR
80DF9E FE                MOV     R6,A
80DF9F A3                INC     DPTR
80DFA0 E0                MOVX    A,@DPTR
80DFA1 FF                MOV     R7,A
80DFA2 EE                MOV     A,R6
80DFA3 6003              JZ      $ + 5H
80DFA5 02FDF6            LJMP    ?C0341?SYSPARAMSET
80DFA8 EF                MOV     A,R7
80DFA9 24F6              ADD     A,#0F6H
80DFAB 6031              JZ      ?C0075?SYSPARAMSET
80DFAD 24A6              ADD     A,#0A6H
80DFAF 6078              JZ      ?C0076?SYSPARAMSET
80DFB1 2463              ADD     A,#063H
80DFB3 6003              JZ      $ + 5H
80DFB5 02FDF6            LJMP    ?C0341?SYSPARAMSET
  288: 				{
  289: 					case 1:
80DFB8         ?C0074?SYSPARAMSET:
  290: 						*len = sprintf( OutStr, "%u", SystemParameter.Min );
80DFB8 90174D            MOV     DPTR,#OutStr
80DFBB E0                MOVX    A,@DPTR
80DFBC FE                MOV     R6,A
80DFBD A3                INC     DPTR
80DFBE E0                MOVX    A,@DPTR
80DFBF AA06              MOV     R2,AR6
80DFC1 F9                MOV     R1,A
80DFC2 7B00              MOV     R3,#?C?XDATASEG
80DFC4 C003              PUSH    AR3
80DFC6 C002              PUSH    AR2
80DFC8 C001              PUSH    AR1
80DFCA 7B80              MOV     R3,#BYTE2 0801088H
80DFCC 7A10              MOV     R2,#HIGH 0801088H
80DFCE 7988              MOV     R1,#LOW 0801088H
80DFD0 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DFD3 A5128007B6        ECALL   ?C?PSTXDATA
80DFD8 900427            MOV     DPTR,#SystemParameter+09H
80DFDB         
  291: 					break;				
80DFDB 02E841            LJMP    ?C0428?SYSPARAMSET
  292: 					case 10:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 556


80DFDE         ?C0075?SYSPARAMSET:
  293: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.Min/SystemParameter.curUnit,SystemParameter.Min%SystemPara
>> meter.curUnit);
80DFDE 90174D            MOV     DPTR,#OutStr
80DFE1 E0                MOVX    A,@DPTR
80DFE2 FE                MOV     R6,A
80DFE3 A3                INC     DPTR
80DFE4 E0                MOVX    A,@DPTR
80DFE5 AA06              MOV     R2,AR6
80DFE7 F9                MOV     R1,A
80DFE8 7B00              MOV     R3,#?C?XDATASEG
80DFEA C003              PUSH    AR3
80DFEC C002              PUSH    AR2
80DFEE C001              PUSH    AR1
80DFF0 7B80              MOV     R3,#BYTE2 080108BH
80DFF2 7A10              MOV     R2,#HIGH 080108BH
80DFF4 798B              MOV     R1,#LOW 080108BH
80DFF6 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80DFF9 A5128007B6        ECALL   ?C?PSTXDATA
80DFFE 900466            MOV     DPTR,#SystemParameter+048H
80E001 E0                MOVX    A,@DPTR
80E002 FC                MOV     R4,A
80E003 A3                INC     DPTR
80E004 E0                MOVX    A,@DPTR
80E005 FD                MOV     R5,A
80E006 900427            MOV     DPTR,#SystemParameter+09H
80E009 E0                MOVX    A,@DPTR
80E00A FE                MOV     R6,A
80E00B A3                INC     DPTR
80E00C E0                MOVX    A,@DPTR
80E00D FF                MOV     R7,A
80E00E A51280056C        ECALL   ?C?UIDIV
80E013 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E016 EE                MOV     A,R6
80E017 F0                MOVX    @DPTR,A
80E018 A3                INC     DPTR
80E019 EF                MOV     A,R7
80E01A F0                MOVX    @DPTR,A
80E01B 900466            MOV     DPTR,#SystemParameter+048H
80E01E E0                MOVX    A,@DPTR
80E01F FC                MOV     R4,A
80E020 A3                INC     DPTR
80E021 E0                MOVX    A,@DPTR
80E022 FD                MOV     R5,A
80E023 900427            MOV     DPTR,#SystemParameter+09H
80E026         
  294: 					break;
80E026 02E897            LJMP    ?C0430?SYSPARAMSET
  295: 					case 100:
80E029         ?C0076?SYSPARAMSET:
  296: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.Min/SystemParameter.curUnit,SystemParameter.Min%SystemPa
>> rameter.curUnit);
80E029 90174D            MOV     DPTR,#OutStr
80E02C E0                MOVX    A,@DPTR
80E02D FE                MOV     R6,A
80E02E A3                INC     DPTR
80E02F E0                MOVX    A,@DPTR
80E030 AA06              MOV     R2,AR6
80E032 F9                MOV     R1,A
80E033 7B00              MOV     R3,#?C?XDATASEG
80E035 C003              PUSH    AR3
80E037 C002              PUSH    AR2
80E039 C001              PUSH    AR1
80E03B 7B80              MOV     R3,#BYTE2 0801091H
80E03D 7A10              MOV     R2,#HIGH 0801091H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 557


80E03F 7991              MOV     R1,#LOW 0801091H
80E041 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E044 A5128007B6        ECALL   ?C?PSTXDATA
80E049 900466            MOV     DPTR,#SystemParameter+048H
80E04C E0                MOVX    A,@DPTR
80E04D FC                MOV     R4,A
80E04E A3                INC     DPTR
80E04F E0                MOVX    A,@DPTR
80E050 FD                MOV     R5,A
80E051 900427            MOV     DPTR,#SystemParameter+09H
80E054 E0                MOVX    A,@DPTR
80E055 FE                MOV     R6,A
80E056 A3                INC     DPTR
80E057 E0                MOVX    A,@DPTR
80E058 FF                MOV     R7,A
80E059 A51280056C        ECALL   ?C?UIDIV
80E05E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E061 EE                MOV     A,R6
80E062 F0                MOVX    @DPTR,A
80E063 A3                INC     DPTR
80E064 EF                MOV     A,R7
80E065 F0                MOVX    @DPTR,A
80E066 900466            MOV     DPTR,#SystemParameter+048H
80E069 E0                MOVX    A,@DPTR
80E06A FC                MOV     R4,A
80E06B A3                INC     DPTR
80E06C E0                MOVX    A,@DPTR
80E06D FD                MOV     R5,A
80E06E 900427            MOV     DPTR,#SystemParameter+09H
80E071         
  297: 					break;					
80E071 02E897            LJMP    ?C0430?SYSPARAMSET
  298: 				}
  299: 			}
80E074         ?C0072?SYSPARAMSET:
  300: 			else
  301: 			{				
  302: 				//Trace( "\n set IP val \n");
  303: 				j = *len;											
80E074 901751            MOV     DPTR,#len
80E077 E0                MOVX    A,@DPTR
80E078 FE                MOV     R6,A
80E079 A3                INC     DPTR
80E07A E0                MOVX    A,@DPTR
80E07B F582              MOV     DPL,A
80E07D 8E83              MOV     DPH,R6
80E07F E0                MOVX    A,@DPTR
80E080 901753            MOV     DPTR,#j
80E083 F0                MOVX    @DPTR,A
  304: 				if( j == 0 )
80E084 7003              JNZ     $ + 5H
80E086 02FDF6            LJMP    ?C0341?SYSPARAMSET
  305: 					break;
80E089         ?C0078?SYSPARAMSET:
  306: 				SystemParameter.Min = 0;	
80E089 E4                CLR     A
80E08A 900427            MOV     DPTR,#SystemParameter+09H
80E08D F0                MOVX    @DPTR,A
80E08E A3                INC     DPTR
80E08F F0                MOVX    @DPTR,A
  307: 				for( i = 0; i < j; i ++ )
80E090 901754            MOV     DPTR,#i
80E093 F0                MOVX    @DPTR,A
80E094         ?C0079?SYSPARAMSET:
80E094 901753            MOV     DPTR,#j
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 558


80E097 E0                MOVX    A,@DPTR
80E098 FF                MOV     R7,A
80E099 A3                INC     DPTR
80E09A E0                MOVX    A,@DPTR
80E09B FE                MOV     R6,A
80E09C C3                CLR     C
80E09D 9F                SUBB    A,R7
80E09E 5044              JNC     ?C0080?SYSPARAMSET
  308: 				{
  309: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80E0A0 90174F            MOV     DPTR,#InStr
80E0A3 E0                MOVX    A,@DPTR
80E0A4 FC                MOV     R4,A
80E0A5 A3                INC     DPTR
80E0A6 E0                MOVX    A,@DPTR
80E0A7 2E                ADD     A,R6
80E0A8 F582              MOV     DPL,A
80E0AA E4                CLR     A
80E0AB 3C                ADDC    A,R4
80E0AC F583              MOV     DPH,A
80E0AE E0                MOVX    A,@DPTR
80E0AF FF                MOV     R7,A
80E0B0 C3                CLR     C
80E0B1 9400              SUBB    A,#00H
80E0B3 4027              JC      ?C0081?SYSPARAMSET
80E0B5 EF                MOV     A,R7
80E0B6 D3                SETB    C
80E0B7 9409              SUBB    A,#09H
80E0B9 5021              JNC     ?C0081?SYSPARAMSET
  310: 						SystemParameter.Min = SystemParameter.Min*10 + *( InStr + i );						
80E0BB EF                MOV     A,R7
80E0BC FB                MOV     R3,A
80E0BD 7A00              MOV     R2,#00H
80E0BF 900427            MOV     DPTR,#SystemParameter+09H
80E0C2 E0                MOVX    A,@DPTR
80E0C3 FE                MOV     R6,A
80E0C4 A3                INC     DPTR
80E0C5 E0                MOVX    A,@DPTR
80E0C6 FF                MOV     R7,A
80E0C7 7C00              MOV     R4,#00H
80E0C9 7D0A              MOV     R5,#0AH
80E0CB A512800559        ECALL   ?C?IMUL
80E0D0 EF                MOV     A,R7
80E0D1 2B                ADD     A,R3
80E0D2 FF                MOV     R7,A
80E0D3 EA                MOV     A,R2
80E0D4 3E                ADDC    A,R6
80E0D5 900427            MOV     DPTR,#SystemParameter+09H
80E0D8 F0                MOVX    @DPTR,A
80E0D9 A3                INC     DPTR
80E0DA EF                MOV     A,R7
80E0DB F0                MOVX    @DPTR,A
  311: 				}			
80E0DC         ?C0081?SYSPARAMSET:
80E0DC 901754            MOV     DPTR,#i
80E0DF E0                MOVX    A,@DPTR
80E0E0 04                INC     A
80E0E1 F0                MOVX    @DPTR,A
80E0E2 80B0              SJMP    ?C0079?SYSPARAMSET
80E0E4         ?C0080?SYSPARAMSET:
  312: 				SystemSave = 1;
80E0E4 D22E              SETB    SystemSave
  313: 			}	
  314: 		break;	
80E0E6 02FDF6            LJMP    ?C0341?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 559


  315: 		case 8://允许接收的最多钱数
80E0E9         ?C0083?SYSPARAMSET:
  316: 			if( OutInFlag == 0 )
80E0E9 301A03            JNB     OutInFlag,$ + 6H
80E0EC 02E1C9            LJMP    ?C0084?SYSPARAMSET
  317: 			{				
  318: 				switch( SystemParameter.curUnit )
80E0EF 900466            MOV     DPTR,#SystemParameter+048H
80E0F2 E0                MOVX    A,@DPTR
80E0F3 FE                MOV     R6,A
80E0F4 A3                INC     DPTR
80E0F5 E0                MOVX    A,@DPTR
80E0F6 FF                MOV     R7,A
80E0F7 EE                MOV     A,R6
80E0F8 6003              JZ      $ + 5H
80E0FA 02FDF6            LJMP    ?C0341?SYSPARAMSET
80E0FD EF                MOV     A,R7
80E0FE 24F6              ADD     A,#0F6H
80E100 6031              JZ      ?C0087?SYSPARAMSET
80E102 24A6              ADD     A,#0A6H
80E104 6078              JZ      ?C0088?SYSPARAMSET
80E106 2463              ADD     A,#063H
80E108 6003              JZ      $ + 5H
80E10A 02FDF6            LJMP    ?C0341?SYSPARAMSET
  319: 				{
  320: 					case 1:
80E10D         ?C0086?SYSPARAMSET:
  321: 						*len = sprintf( OutStr, "%u", SystemParameter.BanknoteMax );
80E10D 90174D            MOV     DPTR,#OutStr
80E110 E0                MOVX    A,@DPTR
80E111 FE                MOV     R6,A
80E112 A3                INC     DPTR
80E113 E0                MOVX    A,@DPTR
80E114 AA06              MOV     R2,AR6
80E116 F9                MOV     R1,A
80E117 7B00              MOV     R3,#?C?XDATASEG
80E119 C003              PUSH    AR3
80E11B C002              PUSH    AR2
80E11D C001              PUSH    AR1
80E11F 7B80              MOV     R3,#BYTE2 0801088H
80E121 7A10              MOV     R2,#HIGH 0801088H
80E123 7988              MOV     R1,#LOW 0801088H
80E125 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E128 A5128007B6        ECALL   ?C?PSTXDATA
80E12D 900429            MOV     DPTR,#SystemParameter+0BH
80E130         
  322: 					break;				
80E130 02E841            LJMP    ?C0428?SYSPARAMSET
  323: 					case 10:
80E133         ?C0087?SYSPARAMSET:
  324: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.BanknoteMax/SystemParameter.curUnit,SystemParameter.Bankno
>> teMax%SystemParameter.curUnit);
80E133 90174D            MOV     DPTR,#OutStr
80E136 E0                MOVX    A,@DPTR
80E137 FE                MOV     R6,A
80E138 A3                INC     DPTR
80E139 E0                MOVX    A,@DPTR
80E13A AA06              MOV     R2,AR6
80E13C F9                MOV     R1,A
80E13D 7B00              MOV     R3,#?C?XDATASEG
80E13F C003              PUSH    AR3
80E141 C002              PUSH    AR2
80E143 C001              PUSH    AR1
80E145 7B80              MOV     R3,#BYTE2 080108BH
80E147 7A10              MOV     R2,#HIGH 080108BH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 560


80E149 798B              MOV     R1,#LOW 080108BH
80E14B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E14E A5128007B6        ECALL   ?C?PSTXDATA
80E153 900466            MOV     DPTR,#SystemParameter+048H
80E156 E0                MOVX    A,@DPTR
80E157 FC                MOV     R4,A
80E158 A3                INC     DPTR
80E159 E0                MOVX    A,@DPTR
80E15A FD                MOV     R5,A
80E15B 900429            MOV     DPTR,#SystemParameter+0BH
80E15E E0                MOVX    A,@DPTR
80E15F FE                MOV     R6,A
80E160 A3                INC     DPTR
80E161 E0                MOVX    A,@DPTR
80E162 FF                MOV     R7,A
80E163 A51280056C        ECALL   ?C?UIDIV
80E168 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E16B EE                MOV     A,R6
80E16C F0                MOVX    @DPTR,A
80E16D A3                INC     DPTR
80E16E EF                MOV     A,R7
80E16F F0                MOVX    @DPTR,A
80E170 900466            MOV     DPTR,#SystemParameter+048H
80E173 E0                MOVX    A,@DPTR
80E174 FC                MOV     R4,A
80E175 A3                INC     DPTR
80E176 E0                MOVX    A,@DPTR
80E177 FD                MOV     R5,A
80E178 900429            MOV     DPTR,#SystemParameter+0BH
80E17B         
  325: 					break;
80E17B 02E897            LJMP    ?C0430?SYSPARAMSET
  326: 					case 100:
80E17E         ?C0088?SYSPARAMSET:
  327: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.BanknoteMax/SystemParameter.curUnit,SystemParameter.Bank
>> noteMax%SystemParameter.curUnit);
80E17E 90174D            MOV     DPTR,#OutStr
80E181 E0                MOVX    A,@DPTR
80E182 FE                MOV     R6,A
80E183 A3                INC     DPTR
80E184 E0                MOVX    A,@DPTR
80E185 AA06              MOV     R2,AR6
80E187 F9                MOV     R1,A
80E188 7B00              MOV     R3,#?C?XDATASEG
80E18A C003              PUSH    AR3
80E18C C002              PUSH    AR2
80E18E C001              PUSH    AR1
80E190 7B80              MOV     R3,#BYTE2 0801091H
80E192 7A10              MOV     R2,#HIGH 0801091H
80E194 7991              MOV     R1,#LOW 0801091H
80E196 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E199 A5128007B6        ECALL   ?C?PSTXDATA
80E19E 900466            MOV     DPTR,#SystemParameter+048H
80E1A1 E0                MOVX    A,@DPTR
80E1A2 FC                MOV     R4,A
80E1A3 A3                INC     DPTR
80E1A4 E0                MOVX    A,@DPTR
80E1A5 FD                MOV     R5,A
80E1A6 900429            MOV     DPTR,#SystemParameter+0BH
80E1A9 E0                MOVX    A,@DPTR
80E1AA FE                MOV     R6,A
80E1AB A3                INC     DPTR
80E1AC E0                MOVX    A,@DPTR
80E1AD FF                MOV     R7,A
80E1AE A51280056C        ECALL   ?C?UIDIV
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 561


80E1B3 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E1B6 EE                MOV     A,R6
80E1B7 F0                MOVX    @DPTR,A
80E1B8 A3                INC     DPTR
80E1B9 EF                MOV     A,R7
80E1BA F0                MOVX    @DPTR,A
80E1BB 900466            MOV     DPTR,#SystemParameter+048H
80E1BE E0                MOVX    A,@DPTR
80E1BF FC                MOV     R4,A
80E1C0 A3                INC     DPTR
80E1C1 E0                MOVX    A,@DPTR
80E1C2 FD                MOV     R5,A
80E1C3 900429            MOV     DPTR,#SystemParameter+0BH
80E1C6         
  328: 					break;					
80E1C6 02E897            LJMP    ?C0430?SYSPARAMSET
  329: 				}
  330: 			}
80E1C9         ?C0084?SYSPARAMSET:
  331: 			else
  332: 			{
  333: 				j = *len;
80E1C9 901751            MOV     DPTR,#len
80E1CC E0                MOVX    A,@DPTR
80E1CD FE                MOV     R6,A
80E1CE A3                INC     DPTR
80E1CF E0                MOVX    A,@DPTR
80E1D0 F582              MOV     DPL,A
80E1D2 8E83              MOV     DPH,R6
80E1D4 E0                MOVX    A,@DPTR
80E1D5 901753            MOV     DPTR,#j
80E1D8 F0                MOVX    @DPTR,A
  334: 				if( j == 0 )
80E1D9 7003              JNZ     $ + 5H
80E1DB 02FDF6            LJMP    ?C0341?SYSPARAMSET
  335: 					break;
80E1DE         ?C0090?SYSPARAMSET:
  336: 				if( j > 5 )
80E1DE 901753            MOV     DPTR,#j
80E1E1 E0                MOVX    A,@DPTR
80E1E2 D3                SETB    C
80E1E3 9405              SUBB    A,#05H
80E1E5 4003              JC      ?C0091?SYSPARAMSET
  337: 					j = 5;
80E1E7 7405              MOV     A,#05H
80E1E9 F0                MOVX    @DPTR,A
80E1EA         ?C0091?SYSPARAMSET:
  338: 				SystemParameter.BanknoteMax = 0;
80E1EA E4                CLR     A
80E1EB 900429            MOV     DPTR,#SystemParameter+0BH
80E1EE F0                MOVX    @DPTR,A
80E1EF A3                INC     DPTR
80E1F0 F0                MOVX    @DPTR,A
  339: 				for( i = 0; i < j; i ++ )
80E1F1 901754            MOV     DPTR,#i
80E1F4 F0                MOVX    @DPTR,A
80E1F5         ?C0092?SYSPARAMSET:
80E1F5 901753            MOV     DPTR,#j
80E1F8 E0                MOVX    A,@DPTR
80E1F9 FF                MOV     R7,A
80E1FA A3                INC     DPTR
80E1FB E0                MOVX    A,@DPTR
80E1FC FE                MOV     R6,A
80E1FD C3                CLR     C
80E1FE 9F                SUBB    A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 562


80E1FF 5044              JNC     ?C0093?SYSPARAMSET
  340: 				{
  341: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80E201 90174F            MOV     DPTR,#InStr
80E204 E0                MOVX    A,@DPTR
80E205 FC                MOV     R4,A
80E206 A3                INC     DPTR
80E207 E0                MOVX    A,@DPTR
80E208 2E                ADD     A,R6
80E209 F582              MOV     DPL,A
80E20B E4                CLR     A
80E20C 3C                ADDC    A,R4
80E20D F583              MOV     DPH,A
80E20F E0                MOVX    A,@DPTR
80E210 FF                MOV     R7,A
80E211 C3                CLR     C
80E212 9400              SUBB    A,#00H
80E214 4027              JC      ?C0094?SYSPARAMSET
80E216 EF                MOV     A,R7
80E217 D3                SETB    C
80E218 9409              SUBB    A,#09H
80E21A 5021              JNC     ?C0094?SYSPARAMSET
  342: 						SystemParameter.BanknoteMax = SystemParameter.BanknoteMax * 10 + *( InStr + i );					
80E21C EF                MOV     A,R7
80E21D FB                MOV     R3,A
80E21E 7A00              MOV     R2,#00H
80E220 900429            MOV     DPTR,#SystemParameter+0BH
80E223 E0                MOVX    A,@DPTR
80E224 FE                MOV     R6,A
80E225 A3                INC     DPTR
80E226 E0                MOVX    A,@DPTR
80E227 FF                MOV     R7,A
80E228 7C00              MOV     R4,#00H
80E22A 7D0A              MOV     R5,#0AH
80E22C A512800559        ECALL   ?C?IMUL
80E231 EF                MOV     A,R7
80E232 2B                ADD     A,R3
80E233 FF                MOV     R7,A
80E234 EA                MOV     A,R2
80E235 3E                ADDC    A,R6
80E236 900429            MOV     DPTR,#SystemParameter+0BH
80E239 F0                MOVX    @DPTR,A
80E23A A3                INC     DPTR
80E23B EF                MOV     A,R7
80E23C F0                MOVX    @DPTR,A
  343: 				}
80E23D         ?C0094?SYSPARAMSET:
80E23D 901754            MOV     DPTR,#i
80E240 E0                MOVX    A,@DPTR
80E241 04                INC     A
80E242 F0                MOVX    @DPTR,A
80E243 80B0              SJMP    ?C0092?SYSPARAMSET
80E245         ?C0093?SYSPARAMSET:
  344: 				SystemSave = 1;
80E245 D22E              SETB    SystemSave
  345: 			}			
  346: 		break;
80E247 02FDF6            LJMP    ?C0341?SYSPARAMSET
  347: 		case 9://疑问金额
80E24A         ?C0096?SYSPARAMSET:
  348: 			if( OutInFlag == 0 )
80E24A 301A03            JNB     OutInFlag,$ + 6H
80E24D 02E32A            LJMP    ?C0097?SYSPARAMSET
  349: 			{				
  350: 				switch( SystemParameter.curUnit )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 563


80E250 900466            MOV     DPTR,#SystemParameter+048H
80E253 E0                MOVX    A,@DPTR
80E254 FE                MOV     R6,A
80E255 A3                INC     DPTR
80E256 E0                MOVX    A,@DPTR
80E257 FF                MOV     R7,A
80E258 EE                MOV     A,R6
80E259 6003              JZ      $ + 5H
80E25B 02FDF6            LJMP    ?C0341?SYSPARAMSET
80E25E EF                MOV     A,R7
80E25F 24F6              ADD     A,#0F6H
80E261 6031              JZ      ?C0100?SYSPARAMSET
80E263 24A6              ADD     A,#0A6H
80E265 6078              JZ      ?C0101?SYSPARAMSET
80E267 2463              ADD     A,#063H
80E269 6003              JZ      $ + 5H
80E26B 02FDF6            LJMP    ?C0341?SYSPARAMSET
  351: 				{
  352: 					case 1:
80E26E         ?C0099?SYSPARAMSET:
  353: 						*len = sprintf( OutStr, "%u", SystemParameter.DoubtCash );
80E26E 90174D            MOV     DPTR,#OutStr
80E271 E0                MOVX    A,@DPTR
80E272 FE                MOV     R6,A
80E273 A3                INC     DPTR
80E274 E0                MOVX    A,@DPTR
80E275 AA06              MOV     R2,AR6
80E277 F9                MOV     R1,A
80E278 7B00              MOV     R3,#?C?XDATASEG
80E27A C003              PUSH    AR3
80E27C C002              PUSH    AR2
80E27E C001              PUSH    AR1
80E280 7B80              MOV     R3,#BYTE2 0801088H
80E282 7A10              MOV     R2,#HIGH 0801088H
80E284 7988              MOV     R1,#LOW 0801088H
80E286 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E289 A5128007B6        ECALL   ?C?PSTXDATA
80E28E 90042B            MOV     DPTR,#SystemParameter+0DH
80E291         
  354: 					break;				
80E291 02E841            LJMP    ?C0428?SYSPARAMSET
  355: 					case 10:
80E294         ?C0100?SYSPARAMSET:
  356: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.DoubtCash/SystemParameter.curUnit,SystemParameter.DoubtCas
>> h%SystemParameter.curUnit);
80E294 90174D            MOV     DPTR,#OutStr
80E297 E0                MOVX    A,@DPTR
80E298 FE                MOV     R6,A
80E299 A3                INC     DPTR
80E29A E0                MOVX    A,@DPTR
80E29B AA06              MOV     R2,AR6
80E29D F9                MOV     R1,A
80E29E 7B00              MOV     R3,#?C?XDATASEG
80E2A0 C003              PUSH    AR3
80E2A2 C002              PUSH    AR2
80E2A4 C001              PUSH    AR1
80E2A6 7B80              MOV     R3,#BYTE2 080108BH
80E2A8 7A10              MOV     R2,#HIGH 080108BH
80E2AA 798B              MOV     R1,#LOW 080108BH
80E2AC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E2AF A5128007B6        ECALL   ?C?PSTXDATA
80E2B4 900466            MOV     DPTR,#SystemParameter+048H
80E2B7 E0                MOVX    A,@DPTR
80E2B8 FC                MOV     R4,A
80E2B9 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 564


80E2BA E0                MOVX    A,@DPTR
80E2BB FD                MOV     R5,A
80E2BC 90042B            MOV     DPTR,#SystemParameter+0DH
80E2BF E0                MOVX    A,@DPTR
80E2C0 FE                MOV     R6,A
80E2C1 A3                INC     DPTR
80E2C2 E0                MOVX    A,@DPTR
80E2C3 FF                MOV     R7,A
80E2C4 A51280056C        ECALL   ?C?UIDIV
80E2C9 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E2CC EE                MOV     A,R6
80E2CD F0                MOVX    @DPTR,A
80E2CE A3                INC     DPTR
80E2CF EF                MOV     A,R7
80E2D0 F0                MOVX    @DPTR,A
80E2D1 900466            MOV     DPTR,#SystemParameter+048H
80E2D4 E0                MOVX    A,@DPTR
80E2D5 FC                MOV     R4,A
80E2D6 A3                INC     DPTR
80E2D7 E0                MOVX    A,@DPTR
80E2D8 FD                MOV     R5,A
80E2D9 90042B            MOV     DPTR,#SystemParameter+0DH
80E2DC         
  357: 					break;
80E2DC 02E897            LJMP    ?C0430?SYSPARAMSET
  358: 					case 100:
80E2DF         ?C0101?SYSPARAMSET:
  359: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.DoubtCash/SystemParameter.curUnit,SystemParameter.DoubtC
>> ash%SystemParameter.curUnit);
80E2DF 90174D            MOV     DPTR,#OutStr
80E2E2 E0                MOVX    A,@DPTR
80E2E3 FE                MOV     R6,A
80E2E4 A3                INC     DPTR
80E2E5 E0                MOVX    A,@DPTR
80E2E6 AA06              MOV     R2,AR6
80E2E8 F9                MOV     R1,A
80E2E9 7B00              MOV     R3,#?C?XDATASEG
80E2EB C003              PUSH    AR3
80E2ED C002              PUSH    AR2
80E2EF C001              PUSH    AR1
80E2F1 7B80              MOV     R3,#BYTE2 0801091H
80E2F3 7A10              MOV     R2,#HIGH 0801091H
80E2F5 7991              MOV     R1,#LOW 0801091H
80E2F7 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E2FA A5128007B6        ECALL   ?C?PSTXDATA
80E2FF 900466            MOV     DPTR,#SystemParameter+048H
80E302 E0                MOVX    A,@DPTR
80E303 FC                MOV     R4,A
80E304 A3                INC     DPTR
80E305 E0                MOVX    A,@DPTR
80E306 FD                MOV     R5,A
80E307 90042B            MOV     DPTR,#SystemParameter+0DH
80E30A E0                MOVX    A,@DPTR
80E30B FE                MOV     R6,A
80E30C A3                INC     DPTR
80E30D E0                MOVX    A,@DPTR
80E30E FF                MOV     R7,A
80E30F A51280056C        ECALL   ?C?UIDIV
80E314 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E317 EE                MOV     A,R6
80E318 F0                MOVX    @DPTR,A
80E319 A3                INC     DPTR
80E31A EF                MOV     A,R7
80E31B F0                MOVX    @DPTR,A
80E31C 900466            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 565


80E31F E0                MOVX    A,@DPTR
80E320 FC                MOV     R4,A
80E321 A3                INC     DPTR
80E322 E0                MOVX    A,@DPTR
80E323 FD                MOV     R5,A
80E324 90042B            MOV     DPTR,#SystemParameter+0DH
80E327         
  360: 					break;					
80E327 02E897            LJMP    ?C0430?SYSPARAMSET
  361: 				}
  362: 			}
80E32A         ?C0097?SYSPARAMSET:
  363: 			else
  364: 			{
  365: 				j = *len;
80E32A 901751            MOV     DPTR,#len
80E32D E0                MOVX    A,@DPTR
80E32E FE                MOV     R6,A
80E32F A3                INC     DPTR
80E330 E0                MOVX    A,@DPTR
80E331 F582              MOV     DPL,A
80E333 8E83              MOV     DPH,R6
80E335 E0                MOVX    A,@DPTR
80E336 901753            MOV     DPTR,#j
80E339 F0                MOVX    @DPTR,A
  366: 				if( j == 0 )
80E33A 7003              JNZ     $ + 5H
80E33C 02FDF6            LJMP    ?C0341?SYSPARAMSET
  367: 					break;
80E33F         ?C0103?SYSPARAMSET:
  368: 				if( j > 1 )
80E33F 901753            MOV     DPTR,#j
80E342 E0                MOVX    A,@DPTR
80E343 D3                SETB    C
80E344 9401              SUBB    A,#01H
80E346 4003              JC      ?C0104?SYSPARAMSET
  369: 					j = 1;			
80E348 7401              MOV     A,#01H
80E34A F0                MOVX    @DPTR,A
80E34B         ?C0104?SYSPARAMSET:
  370: 				if( *( InStr ) == 0 ) 					
80E34B 90174F            MOV     DPTR,#InStr
80E34E E0                MOVX    A,@DPTR
80E34F FE                MOV     R6,A
80E350 A3                INC     DPTR
80E351 E0                MOVX    A,@DPTR
80E352 F582              MOV     DPL,A
80E354 8E83              MOV     DPH,R6
80E356 E0                MOVX    A,@DPTR
80E357 7006              JNZ     ?C0105?SYSPARAMSET
  371: 					SystemParameter.DoubtCash = 0;				
80E359 90042B            MOV     DPTR,#SystemParameter+0DH
80E35C F0                MOVX    @DPTR,A
80E35D A3                INC     DPTR
80E35E F0                MOVX    @DPTR,A
80E35F         ?C0105?SYSPARAMSET:
  372: 				SystemSave = 1;
80E35F D22E              SETB    SystemSave
  373: 			}			
  374: 		break;
80E361 02FDF6            LJMP    ?C0341?SYSPARAMSET
  375: 		case 10://取本机ID号码				
80E364         ?C0106?SYSPARAMSET:
  376: 			if(  OutInFlag == 0 )
80E364 201A6A            JB      OutInFlag,?C0107?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 566


  377: 			{
  378: 				for( i = 0; i < 5; i++ )
80E367 E4                CLR     A
80E368 901754            MOV     DPTR,#i
80E36B F0                MOVX    @DPTR,A
80E36C         ?C0108?SYSPARAMSET:
80E36C 901754            MOV     DPTR,#i
80E36F E0                MOVX    A,@DPTR
80E370 FF                MOV     R7,A
80E371 C3                CLR     C
80E372 9405              SUBB    A,#05H
80E374 4003              JC      $ + 5H
80E376 02FDF6            LJMP    ?C0341?SYSPARAMSET
  379: 					*len += sprintf( OutStr + i, "%bu", SystemParameter.VmID[i] );
80E379 90174E            MOV     DPTR,#OutStr+01H
80E37C E0                MOVX    A,@DPTR
80E37D 2F                ADD     A,R7
80E37E FF                MOV     R7,A
80E37F 90174D            MOV     DPTR,#OutStr
80E382 E0                MOVX    A,@DPTR
80E383 3400              ADDC    A,#00H
80E385 FA                MOV     R2,A
80E386 A907              MOV     R1,AR7
80E388 7B00              MOV     R3,#?C?XDATASEG
80E38A C003              PUSH    AR3
80E38C C002              PUSH    AR2
80E38E C001              PUSH    AR1
80E390 7B80              MOV     R3,#BYTE2 0801099H
80E392 7A10              MOV     R2,#HIGH 0801099H
80E394 7999              MOV     R1,#LOW 0801099H
80E396 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E399 A5128007B6        ECALL   ?C?PSTXDATA
80E39E 901754            MOV     DPTR,#i
80E3A1 E0                MOVX    A,@DPTR
80E3A2 242F              ADD     A,#LOW SystemParameter+011H
80E3A4 F582              MOV     DPL,A
80E3A6 E4                CLR     A
80E3A7 3404              ADDC    A,#HIGH SystemParameter+011H
80E3A9 F583              MOV     DPH,A
80E3AB E0                MOVX    A,@DPTR
80E3AC 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E3AF F0                MOVX    @DPTR,A
80E3B0 D001              POP     AR1
80E3B2 D002              POP     AR2
80E3B4 D003              POP     AR3
80E3B6 A512800949        ECALL   _sprintf
80E3BB 901751            MOV     DPTR,#len
80E3BE E0                MOVX    A,@DPTR
80E3BF FC                MOV     R4,A
80E3C0 A3                INC     DPTR
80E3C1 E0                MOVX    A,@DPTR
80E3C2 F582              MOV     DPL,A
80E3C4 8C83              MOV     DPH,R4
80E3C6 E0                MOVX    A,@DPTR
80E3C7 2F                ADD     A,R7
80E3C8 F0                MOVX    @DPTR,A
80E3C9 901754            MOV     DPTR,#i
80E3CC E0                MOVX    A,@DPTR
80E3CD 04                INC     A
80E3CE F0                MOVX    @DPTR,A
80E3CF 809B              SJMP    ?C0108?SYSPARAMSET
  380: 			}			
80E3D1         ?C0107?SYSPARAMSET:
  381: 			else//存入
  382: 			{		
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 567


  383: 				j = *len;
80E3D1 901751            MOV     DPTR,#len
80E3D4 E0                MOVX    A,@DPTR
80E3D5 FE                MOV     R6,A
80E3D6 A3                INC     DPTR
80E3D7 E0                MOVX    A,@DPTR
80E3D8 F582              MOV     DPL,A
80E3DA 8E83              MOV     DPH,R6
80E3DC E0                MOVX    A,@DPTR
80E3DD 901753            MOV     DPTR,#j
80E3E0 F0                MOVX    @DPTR,A
  384: 				memset( SystemParameter.VmID, 0, sizeof( SystemParameter.VmID ) );				
80E3E1 7E00              MOV     R6,#00H
80E3E3 7F05              MOV     R7,#05H
80E3E5 7D00              MOV     R5,#00H
80E3E7 7B00              MOV     R3,#?C?XDATASEG
80E3E9 7A04              MOV     R2,#HIGH SystemParameter+011H
80E3EB 792F              MOV     R1,#LOW SystemParameter+011H
80E3ED A5128008A6        ECALL   ?C?MEMSET
  385: 				for( i = 0; i < j; i ++ )
80E3F2 E4                CLR     A
80E3F3 901754            MOV     DPTR,#i
80E3F6 F0                MOVX    @DPTR,A
80E3F7         ?C0112?SYSPARAMSET:
80E3F7 901753            MOV     DPTR,#j
80E3FA E0                MOVX    A,@DPTR
80E3FB FF                MOV     R7,A
80E3FC A3                INC     DPTR
80E3FD E0                MOVX    A,@DPTR
80E3FE FE                MOV     R6,A
80E3FF C3                CLR     C
80E400 9F                SUBB    A,R7
80E401 503A              JNC     ?C0113?SYSPARAMSET
  386: 				{
  387: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80E403 90174F            MOV     DPTR,#InStr
80E406 E0                MOVX    A,@DPTR
80E407 FC                MOV     R4,A
80E408 A3                INC     DPTR
80E409 E0                MOVX    A,@DPTR
80E40A FD                MOV     R5,A
80E40B 2E                ADD     A,R6
80E40C F582              MOV     DPL,A
80E40E E4                CLR     A
80E40F 3C                ADDC    A,R4
80E410 F583              MOV     DPH,A
80E412 E0                MOVX    A,@DPTR
80E413 FF                MOV     R7,A
80E414 C3                CLR     C
80E415 9400              SUBB    A,#00H
80E417 401C              JC      ?C0114?SYSPARAMSET
80E419 EF                MOV     A,R7
80E41A D3                SETB    C
80E41B 9409              SUBB    A,#09H
80E41D 5016              JNC     ?C0114?SYSPARAMSET
  388: 						SystemParameter.VmID[i] = *( InStr + i );					
80E41F ED                MOV     A,R5
80E420 2E                ADD     A,R6
80E421 F582              MOV     DPL,A
80E423 E4                CLR     A
80E424 3C                ADDC    A,R4
80E425 F583              MOV     DPH,A
80E427 E0                MOVX    A,@DPTR
80E428 FF                MOV     R7,A
80E429 742F              MOV     A,#LOW SystemParameter+011H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 568


80E42B 2E                ADD     A,R6
80E42C F582              MOV     DPL,A
80E42E E4                CLR     A
80E42F 3404              ADDC    A,#HIGH SystemParameter+011H
80E431 F583              MOV     DPH,A
80E433 EF                MOV     A,R7
80E434 F0                MOVX    @DPTR,A
  389: 				}
80E435         ?C0114?SYSPARAMSET:
80E435 901754            MOV     DPTR,#i
80E438 E0                MOVX    A,@DPTR
80E439 04                INC     A
80E43A F0                MOVX    @DPTR,A
80E43B 80BA              SJMP    ?C0112?SYSPARAMSET
80E43D         ?C0113?SYSPARAMSET:
  390: 				SystemSave = 1;
80E43D D22E              SETB    SystemSave
  391: 			}						
  392: 		break;
80E43F 02FDF6            LJMP    ?C0341?SYSPARAMSET
  393: 		case 11://GSM模块号码
80E442         ?C0116?SYSPARAMSET:
  394: 			if( OutInFlag == 0 )
80E442 301A03            JNB     OutInFlag,$ + 6H
80E445 02E549            LJMP    ?C0117?SYSPARAMSET
  395: 			{
  396: 				for( i = 0; i < 15; i++ )
80E448 E4                CLR     A
80E449 901754            MOV     DPTR,#i
80E44C F0                MOVX    @DPTR,A
80E44D         ?C0118?SYSPARAMSET:
80E44D 901754            MOV     DPTR,#i
80E450 E0                MOVX    A,@DPTR
80E451 FF                MOV     R7,A
80E452 C3                CLR     C
80E453 940F              SUBB    A,#0FH
80E455 4003              JC      $ + 5H
80E457 02E529            LJMP    ?C0119?SYSPARAMSET
  397: 				{
  398: 					if( SystemParameter.GSMNO[i] != 0xff )
80E45A 7434              MOV     A,#LOW SystemParameter+016H
80E45C 2F                ADD     A,R7
80E45D F582              MOV     DPL,A
80E45F E4                CLR     A
80E460 3404              ADDC    A,#HIGH SystemParameter+016H
80E462 F583              MOV     DPH,A
80E464 E0                MOVX    A,@DPTR
80E465 F4                CPL     A
80E466 7003              JNZ     $ + 5H
80E468 02E529            LJMP    ?C0119?SYSPARAMSET
  399: 					{
  400: 						if( SystemParameter.GSMNO[i] >= 0x10 )
80E46B 901754            MOV     DPTR,#i
80E46E E0                MOVX    A,@DPTR
80E46F 2434              ADD     A,#LOW SystemParameter+016H
80E471 F582              MOV     DPL,A
80E473 E4                CLR     A
80E474 3404              ADDC    A,#HIGH SystemParameter+016H
80E476 F583              MOV     DPH,A
80E478 E0                MOVX    A,@DPTR
80E479 C3                CLR     C
80E47A 9410              SUBB    A,#010H
80E47C 4025              JC      ?C0122?SYSPARAMSET
  401: 							*len += sprintf( OutStr + 2*i, "%2bx", SystemParameter.GSMNO[i] );	
80E47E EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 569


80E47F 75F002            MOV     B,#02H
80E482 A4                MUL     AB
80E483 FF                MOV     R7,A
80E484 90174E            MOV     DPTR,#OutStr+01H
80E487 E0                MOVX    A,@DPTR
80E488 2F                ADD     A,R7
80E489 FF                MOV     R7,A
80E48A 90174D            MOV     DPTR,#OutStr
80E48D E0                MOVX    A,@DPTR
80E48E 35F0              ADDC    A,B
80E490 FA                MOV     R2,A
80E491 A907              MOV     R1,AR7
80E493 7B00              MOV     R3,#?C?XDATASEG
80E495 C003              PUSH    AR3
80E497 C002              PUSH    AR2
80E499 C001              PUSH    AR1
80E49B 7B80              MOV     R3,#BYTE2 080109DH
80E49D 7A10              MOV     R2,#HIGH 080109DH
80E49F 799D              MOV     R1,#LOW 080109DH
80E4A1 8026              SJMP    ?C0405?SYSPARAMSET
80E4A3         ?C0122?SYSPARAMSET:
  402: 						else
  403: 							*len += sprintf( OutStr + 2*i, "%02bx", SystemParameter.GSMNO[i] );	
80E4A3 901754            MOV     DPTR,#i
80E4A6 E0                MOVX    A,@DPTR
80E4A7 75F002            MOV     B,#02H
80E4AA A4                MUL     AB
80E4AB FF                MOV     R7,A
80E4AC 90174E            MOV     DPTR,#OutStr+01H
80E4AF E0                MOVX    A,@DPTR
80E4B0 2F                ADD     A,R7
80E4B1 FF                MOV     R7,A
80E4B2 90174D            MOV     DPTR,#OutStr
80E4B5 E0                MOVX    A,@DPTR
80E4B6 35F0              ADDC    A,B
80E4B8 FA                MOV     R2,A
80E4B9 A907              MOV     R1,AR7
80E4BB 7B00              MOV     R3,#?C?XDATASEG
80E4BD C003              PUSH    AR3
80E4BF C002              PUSH    AR2
80E4C1 C001              PUSH    AR1
80E4C3 7B80              MOV     R3,#BYTE2 08010A2H
80E4C5 7A10              MOV     R2,#HIGH 08010A2H
80E4C7 79A2              MOV     R1,#LOW 08010A2H
80E4C9         
80E4C9 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E4CC A5128007B6        ECALL   ?C?PSTXDATA
80E4D1 901754            MOV     DPTR,#i
80E4D4 E0                MOVX    A,@DPTR
80E4D5 2434              ADD     A,#LOW SystemParameter+016H
80E4D7 F582              MOV     DPL,A
80E4D9 E4                CLR     A
80E4DA 3404              ADDC    A,#HIGH SystemParameter+016H
80E4DC F583              MOV     DPH,A
80E4DE E0                MOVX    A,@DPTR
80E4DF 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E4E2 F0                MOVX    @DPTR,A
80E4E3 D001              POP     AR1
80E4E5 D002              POP     AR2
80E4E7 D003              POP     AR3
80E4E9 A512800949        ECALL   _sprintf
80E4EE 901751            MOV     DPTR,#len
80E4F1 E0                MOVX    A,@DPTR
80E4F2 FC                MOV     R4,A
80E4F3 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 570


80E4F4 E0                MOVX    A,@DPTR
80E4F5 F582              MOV     DPL,A
80E4F7 8C83              MOV     DPH,R4
80E4F9 E0                MOVX    A,@DPTR
80E4FA 2F                ADD     A,R7
80E4FB F0                MOVX    @DPTR,A
80E4FC         ?C0123?SYSPARAMSET:
  404: 						if( ( SystemParameter.GSMNO[i] & 0x0f ) == 0x0f )
80E4FC 901754            MOV     DPTR,#i
80E4FF E0                MOVX    A,@DPTR
80E500 2434              ADD     A,#LOW SystemParameter+016H
80E502 F582              MOV     DPL,A
80E504 E4                CLR     A
80E505 3404              ADDC    A,#HIGH SystemParameter+016H
80E507 F583              MOV     DPH,A
80E509 E0                MOVX    A,@DPTR
80E50A 540F              ANL     A,#0FH
80E50C FF                MOV     R7,A
80E50D BF0F10            CJNE    R7,#0FH,?C0120?SYSPARAMSET
  405: 						{
  406: 							(*len)--;
80E510 901751            MOV     DPTR,#len
80E513 E0                MOVX    A,@DPTR
80E514 FE                MOV     R6,A
80E515 A3                INC     DPTR
80E516 E0                MOVX    A,@DPTR
80E517 F582              MOV     DPL,A
80E519 8E83              MOV     DPH,R6
80E51B E0                MOVX    A,@DPTR
80E51C 14                DEC     A
80E51D F0                MOVX    @DPTR,A
  407: 							break;
80E51E 8009              SJMP    ?C0119?SYSPARAMSET
  408: 						}
  409: 					}
  410: 					else
  411: 						break;				
  412: 				}
80E520         ?C0120?SYSPARAMSET:
80E520 901754            MOV     DPTR,#i
80E523 E0                MOVX    A,@DPTR
80E524 04                INC     A
80E525 F0                MOVX    @DPTR,A
80E526 02E44D            LJMP    ?C0118?SYSPARAMSET
80E529         ?C0119?SYSPARAMSET:
  413: 				OutStr[(*len)] = 0x00;
80E529 901751            MOV     DPTR,#len
80E52C E0                MOVX    A,@DPTR
80E52D FE                MOV     R6,A
80E52E A3                INC     DPTR
80E52F E0                MOVX    A,@DPTR
80E530 F582              MOV     DPL,A
80E532 8E83              MOV     DPH,R6
80E534 E0                MOVX    A,@DPTR
80E535 FF                MOV     R7,A
80E536 90174D            MOV     DPTR,#OutStr
80E539 E0                MOVX    A,@DPTR
80E53A FC                MOV     R4,A
80E53B A3                INC     DPTR
80E53C E0                MOVX    A,@DPTR
80E53D 2F                ADD     A,R7
80E53E F582              MOV     DPL,A
80E540 E4                CLR     A
80E541 3C                ADDC    A,R4
80E542 F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 571


80E544 E4                CLR     A
80E545 F0                MOVX    @DPTR,A
  414: 			}
80E546 02FDF6            LJMP    ?C0341?SYSPARAMSET
80E549         ?C0117?SYSPARAMSET:
  415: 			else
  416: 			{
  417: 				j = *len;
80E549 901751            MOV     DPTR,#len
80E54C E0                MOVX    A,@DPTR
80E54D FE                MOV     R6,A
80E54E A3                INC     DPTR
80E54F E0                MOVX    A,@DPTR
80E550 F582              MOV     DPL,A
80E552 8E83              MOV     DPH,R6
80E554 E0                MOVX    A,@DPTR
80E555 901753            MOV     DPTR,#j
80E558 F0                MOVX    @DPTR,A
  418: 				memset( SystemParameter.GSMNO, 0, sizeof( SystemParameter.GSMNO ) );				
80E559 7E00              MOV     R6,#00H
80E55B 7F10              MOV     R7,#010H
80E55D 7D00              MOV     R5,#00H
80E55F 7B00              MOV     R3,#?C?XDATASEG
80E561 7A04              MOV     R2,#HIGH SystemParameter+016H
80E563 7934              MOV     R1,#LOW SystemParameter+016H
80E565 A5128008A6        ECALL   ?C?MEMSET
  419: 				for( i = 0; i < j/2; i ++ )									
80E56A E4                CLR     A
80E56B 901754            MOV     DPTR,#i
80E56E F0                MOVX    @DPTR,A
80E56F         ?C0127?SYSPARAMSET:
80E56F 901753            MOV     DPTR,#j
80E572 E0                MOVX    A,@DPTR
80E573 FF                MOV     R7,A
80E574 C3                CLR     C
80E575 13                RRC     A
80E576 FE                MOV     R6,A
80E577 A3                INC     DPTR
80E578 E0                MOVX    A,@DPTR
80E579 FD                MOV     R5,A
80E57A C3                CLR     C
80E57B 9E                SUBB    A,R6
80E57C 5042              JNC     ?C0128?SYSPARAMSET
  420: 					SystemParameter.GSMNO[i] = *( InStr + 2*i ) * 16 + *( InStr + 2*i + 1 );				
80E57E 90174F            MOV     DPTR,#InStr
80E581 E0                MOVX    A,@DPTR
80E582 FA                MOV     R2,A
80E583 A3                INC     DPTR
80E584 E0                MOVX    A,@DPTR
80E585 FB                MOV     R3,A
80E586 F582              MOV     DPL,A
80E588 8A83              MOV     DPH,R2
80E58A 75F002            MOV     B,#02H
80E58D ED                MOV     A,R5
80E58E A51280079F        ECALL   ?C?OFFXADD
80E593 E0                MOVX    A,@DPTR
80E594 C4                SWAP    A
80E595 54F0              ANL     A,#0F0H
80E597 FE                MOV     R6,A
80E598 8B82              MOV     DPL,R3
80E59A 8A83              MOV     DPH,R2
80E59C 75F002            MOV     B,#02H
80E59F ED                MOV     A,R5
80E5A0 A51280079F        ECALL   ?C?OFFXADD
80E5A5 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 572


80E5A6 E0                MOVX    A,@DPTR
80E5A7 2E                ADD     A,R6
80E5A8 FE                MOV     R6,A
80E5A9 901754            MOV     DPTR,#i
80E5AC E0                MOVX    A,@DPTR
80E5AD 2434              ADD     A,#LOW SystemParameter+016H
80E5AF F582              MOV     DPL,A
80E5B1 E4                CLR     A
80E5B2 3404              ADDC    A,#HIGH SystemParameter+016H
80E5B4 F583              MOV     DPH,A
80E5B6 EE                MOV     A,R6
80E5B7 F0                MOVX    @DPTR,A
80E5B8 901754            MOV     DPTR,#i
80E5BB E0                MOVX    A,@DPTR
80E5BC 04                INC     A
80E5BD F0                MOVX    @DPTR,A
80E5BE 80AF              SJMP    ?C0127?SYSPARAMSET
80E5C0         ?C0128?SYSPARAMSET:
  421: 				if( ( j%2 ) == 1 )//奇数个数字		
80E5C0 EF                MOV     A,R7
80E5C1 30E033            JNB     ACC.0,?C0130?SYSPARAMSET
  422: 					SystemParameter.GSMNO[i] = *( InStr + 2*i )*16 + 0x0f;
80E5C4 90174F            MOV     DPTR,#InStr
80E5C7 E0                MOVX    A,@DPTR
80E5C8 FE                MOV     R6,A
80E5C9 A3                INC     DPTR
80E5CA E0                MOVX    A,@DPTR
80E5CB F582              MOV     DPL,A
80E5CD 8E83              MOV     DPH,R6
80E5CF C083              PUSH    DPH
80E5D1 C082              PUSH    DPL
80E5D3 901754            MOV     DPTR,#i
80E5D6 E0                MOVX    A,@DPTR
80E5D7 FF                MOV     R7,A
80E5D8 D082              POP     DPL
80E5DA D083              POP     DPH
80E5DC 75F002            MOV     B,#02H
80E5DF A51280079F        ECALL   ?C?OFFXADD
80E5E4 E0                MOVX    A,@DPTR
80E5E5 C4                SWAP    A
80E5E6 54F0              ANL     A,#0F0H
80E5E8 240F              ADD     A,#0FH
80E5EA FE                MOV     R6,A
80E5EB 7434              MOV     A,#LOW SystemParameter+016H
80E5ED 2F                ADD     A,R7
80E5EE F582              MOV     DPL,A
80E5F0 E4                CLR     A
80E5F1 3404              ADDC    A,#HIGH SystemParameter+016H
80E5F3 F583              MOV     DPH,A
80E5F5 EE                MOV     A,R6
80E5F6 F0                MOVX    @DPTR,A
80E5F7         ?C0130?SYSPARAMSET:
  423: 				i++;
80E5F7 901754            MOV     DPTR,#i
80E5FA E0                MOVX    A,@DPTR
80E5FB 04                INC     A
80E5FC F0                MOVX    @DPTR,A
  424: 				SystemParameter.GSMNO[i] = 0xff;
80E5FD E0                MOVX    A,@DPTR
80E5FE 2434              ADD     A,#LOW SystemParameter+016H
80E600 F582              MOV     DPL,A
80E602 E4                CLR     A
80E603 3404              ADDC    A,#HIGH SystemParameter+016H
80E605 F583              MOV     DPH,A
80E607 74FF              MOV     A,#0FFH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 573


80E609         
80E609 F0                MOVX    @DPTR,A
  425: 				SystemSave = 1;
80E60A D22E              SETB    SystemSave
  426: 			}
  427: 		break;
80E60C 02FDF6            LJMP    ?C0341?SYSPARAMSET
  428: 		case 12://欠客户的钱
80E60F         ?C0131?SYSPARAMSET:
  429: 			if( OutInFlag == 0 )
80E60F 301A03            JNB     OutInFlag,$ + 6H
80E612 02E6EF            LJMP    ?C0132?SYSPARAMSET
  430: 			{				
  431: 				switch( SystemParameter.curUnit )
80E615 900466            MOV     DPTR,#SystemParameter+048H
80E618 E0                MOVX    A,@DPTR
80E619 FE                MOV     R6,A
80E61A A3                INC     DPTR
80E61B E0                MOVX    A,@DPTR
80E61C FF                MOV     R7,A
80E61D EE                MOV     A,R6
80E61E 6003              JZ      $ + 5H
80E620 02FDF6            LJMP    ?C0341?SYSPARAMSET
80E623 EF                MOV     A,R7
80E624 24F6              ADD     A,#0F6H
80E626 6031              JZ      ?C0135?SYSPARAMSET
80E628 24A6              ADD     A,#0A6H
80E62A 6078              JZ      ?C0136?SYSPARAMSET
80E62C 2463              ADD     A,#063H
80E62E 6003              JZ      $ + 5H
80E630 02FDF6            LJMP    ?C0341?SYSPARAMSET
  432: 				{
  433: 					case 1:
80E633         ?C0134?SYSPARAMSET:
  434: 						*len = sprintf( OutStr, "%u", SystemParameter.NotOutMax );
80E633 90174D            MOV     DPTR,#OutStr
80E636 E0                MOVX    A,@DPTR
80E637 FE                MOV     R6,A
80E638 A3                INC     DPTR
80E639 E0                MOVX    A,@DPTR
80E63A AA06              MOV     R2,AR6
80E63C F9                MOV     R1,A
80E63D 7B00              MOV     R3,#?C?XDATASEG
80E63F C003              PUSH    AR3
80E641 C002              PUSH    AR2
80E643 C001              PUSH    AR1
80E645 7B80              MOV     R3,#BYTE2 0801088H
80E647 7A10              MOV     R2,#HIGH 0801088H
80E649 7988              MOV     R1,#LOW 0801088H
80E64B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E64E A5128007B6        ECALL   ?C?PSTXDATA
80E653 90042D            MOV     DPTR,#SystemParameter+0FH
80E656         
  435: 					break;				
80E656 02E841            LJMP    ?C0428?SYSPARAMSET
  436: 					case 10:
80E659         ?C0135?SYSPARAMSET:
  437: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.NotOutMax/SystemParameter.curUnit,SystemParameter.NotOutMa
>> x%SystemParameter.curUnit);
80E659 90174D            MOV     DPTR,#OutStr
80E65C E0                MOVX    A,@DPTR
80E65D FE                MOV     R6,A
80E65E A3                INC     DPTR
80E65F E0                MOVX    A,@DPTR
80E660 AA06              MOV     R2,AR6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 574


80E662 F9                MOV     R1,A
80E663 7B00              MOV     R3,#?C?XDATASEG
80E665 C003              PUSH    AR3
80E667 C002              PUSH    AR2
80E669 C001              PUSH    AR1
80E66B 7B80              MOV     R3,#BYTE2 080108BH
80E66D 7A10              MOV     R2,#HIGH 080108BH
80E66F 798B              MOV     R1,#LOW 080108BH
80E671 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E674 A5128007B6        ECALL   ?C?PSTXDATA
80E679 900466            MOV     DPTR,#SystemParameter+048H
80E67C E0                MOVX    A,@DPTR
80E67D FC                MOV     R4,A
80E67E A3                INC     DPTR
80E67F E0                MOVX    A,@DPTR
80E680 FD                MOV     R5,A
80E681 90042D            MOV     DPTR,#SystemParameter+0FH
80E684 E0                MOVX    A,@DPTR
80E685 FE                MOV     R6,A
80E686 A3                INC     DPTR
80E687 E0                MOVX    A,@DPTR
80E688 FF                MOV     R7,A
80E689 A51280056C        ECALL   ?C?UIDIV
80E68E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E691 EE                MOV     A,R6
80E692 F0                MOVX    @DPTR,A
80E693 A3                INC     DPTR
80E694 EF                MOV     A,R7
80E695 F0                MOVX    @DPTR,A
80E696 900466            MOV     DPTR,#SystemParameter+048H
80E699 E0                MOVX    A,@DPTR
80E69A FC                MOV     R4,A
80E69B A3                INC     DPTR
80E69C E0                MOVX    A,@DPTR
80E69D FD                MOV     R5,A
80E69E 90042D            MOV     DPTR,#SystemParameter+0FH
80E6A1         
  438: 					break;
80E6A1 02E897            LJMP    ?C0430?SYSPARAMSET
  439: 					case 100:
80E6A4         ?C0136?SYSPARAMSET:
  440: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.NotOutMax/SystemParameter.curUnit,SystemParameter.NotOut
>> Max%SystemParameter.curUnit);
80E6A4 90174D            MOV     DPTR,#OutStr
80E6A7 E0                MOVX    A,@DPTR
80E6A8 FE                MOV     R6,A
80E6A9 A3                INC     DPTR
80E6AA E0                MOVX    A,@DPTR
80E6AB AA06              MOV     R2,AR6
80E6AD F9                MOV     R1,A
80E6AE 7B00              MOV     R3,#?C?XDATASEG
80E6B0 C003              PUSH    AR3
80E6B2 C002              PUSH    AR2
80E6B4 C001              PUSH    AR1
80E6B6 7B80              MOV     R3,#BYTE2 0801091H
80E6B8 7A10              MOV     R2,#HIGH 0801091H
80E6BA 7991              MOV     R1,#LOW 0801091H
80E6BC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E6BF A5128007B6        ECALL   ?C?PSTXDATA
80E6C4 900466            MOV     DPTR,#SystemParameter+048H
80E6C7 E0                MOVX    A,@DPTR
80E6C8 FC                MOV     R4,A
80E6C9 A3                INC     DPTR
80E6CA E0                MOVX    A,@DPTR
80E6CB FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 575


80E6CC 90042D            MOV     DPTR,#SystemParameter+0FH
80E6CF E0                MOVX    A,@DPTR
80E6D0 FE                MOV     R6,A
80E6D1 A3                INC     DPTR
80E6D2 E0                MOVX    A,@DPTR
80E6D3 FF                MOV     R7,A
80E6D4 A51280056C        ECALL   ?C?UIDIV
80E6D9 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E6DC EE                MOV     A,R6
80E6DD F0                MOVX    @DPTR,A
80E6DE A3                INC     DPTR
80E6DF EF                MOV     A,R7
80E6E0 F0                MOVX    @DPTR,A
80E6E1 900466            MOV     DPTR,#SystemParameter+048H
80E6E4 E0                MOVX    A,@DPTR
80E6E5 FC                MOV     R4,A
80E6E6 A3                INC     DPTR
80E6E7 E0                MOVX    A,@DPTR
80E6E8 FD                MOV     R5,A
80E6E9 90042D            MOV     DPTR,#SystemParameter+0FH
80E6EC         
  441: 					break;					
80E6EC 02E897            LJMP    ?C0430?SYSPARAMSET
  442: 				}
  443: 			}
80E6EF         ?C0132?SYSPARAMSET:
  444: 			else
  445: 			{
  446: 				j = *len;
80E6EF 901751            MOV     DPTR,#len
80E6F2 E0                MOVX    A,@DPTR
80E6F3 FE                MOV     R6,A
80E6F4 A3                INC     DPTR
80E6F5 E0                MOVX    A,@DPTR
80E6F6 F582              MOV     DPL,A
80E6F8 8E83              MOV     DPH,R6
80E6FA E0                MOVX    A,@DPTR
80E6FB 901753            MOV     DPTR,#j
80E6FE F0                MOVX    @DPTR,A
  447: 				if( j == 0 )
80E6FF 7003              JNZ     $ + 5H
80E701 02FDF6            LJMP    ?C0341?SYSPARAMSET
  448: 					break;
80E704         ?C0138?SYSPARAMSET:
  449: 				if( j > 1 )
80E704 901753            MOV     DPTR,#j
80E707 E0                MOVX    A,@DPTR
80E708 D3                SETB    C
80E709 9401              SUBB    A,#01H
80E70B 4003              JC      ?C0139?SYSPARAMSET
  450: 					j = 1;			
80E70D 7401              MOV     A,#01H
80E70F F0                MOVX    @DPTR,A
80E710         ?C0139?SYSPARAMSET:
  451: 				if( *( InStr ) == 0 ) 					
80E710 90174F            MOV     DPTR,#InStr
80E713 E0                MOVX    A,@DPTR
80E714 FE                MOV     R6,A
80E715 A3                INC     DPTR
80E716 E0                MOVX    A,@DPTR
80E717 F582              MOV     DPL,A
80E719 8E83              MOV     DPH,R6
80E71B E0                MOVX    A,@DPTR
80E71C 7006              JNZ     ?C0140?SYSPARAMSET
  452: 					SystemParameter.NotOutMax = 0;				
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 576


80E71E 90042D            MOV     DPTR,#SystemParameter+0FH
80E721 F0                MOVX    @DPTR,A
80E722 A3                INC     DPTR
80E723 F0                MOVX    @DPTR,A
80E724         ?C0140?SYSPARAMSET:
  453: 				SystemSave = 1;
80E724 D22E              SETB    SystemSave
  454: 			}			
  455: 		break;
80E726 02FDF6            LJMP    ?C0341?SYSPARAMSET
  456: 		//----------------------------------------------------------------------------------------------------
  457:         case 13:
80E729         ?C0141?SYSPARAMSET:
  458: 			if( OutInFlag == 0 )
80E729 201A2A            JB      OutInFlag,?C0142?SYSPARAMSET
  459: 			{					
  460: 					*len = sprintf( OutStr, "%bu", SystemParameter.decimal );  //u--->"0-1", "1-256", "2-512"; bu
80E72C 90174D            MOV     DPTR,#OutStr
80E72F E0                MOVX    A,@DPTR
80E730 FE                MOV     R6,A
80E731 A3                INC     DPTR
80E732 E0                MOVX    A,@DPTR
80E733 AA06              MOV     R2,AR6
80E735 F9                MOV     R1,A
80E736 7B00              MOV     R3,#?C?XDATASEG
80E738 C003              PUSH    AR3
80E73A C002              PUSH    AR2
80E73C C001              PUSH    AR1
80E73E 7B80              MOV     R3,#BYTE2 0801099H
80E740 7A10              MOV     R2,#HIGH 0801099H
80E742 7999              MOV     R1,#LOW 0801099H
80E744 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E747 A5128007B6        ECALL   ?C?PSTXDATA
80E74C 900465            MOV     DPTR,#SystemParameter+047H
80E74F E0                MOVX    A,@DPTR
80E750 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
  461: 			}
80E753 02FD60            LJMP    ?C0472?SYSPARAMSET
80E756         ?C0142?SYSPARAMSET:
  462: 			else
  463: 			{
  464: 				j = *len;
80E756 901751            MOV     DPTR,#len
80E759 E0                MOVX    A,@DPTR
80E75A FE                MOV     R6,A
80E75B A3                INC     DPTR
80E75C E0                MOVX    A,@DPTR
80E75D F582              MOV     DPL,A
80E75F 8E83              MOV     DPH,R6
80E761 E0                MOVX    A,@DPTR
80E762 901753            MOV     DPTR,#j
80E765 F0                MOVX    @DPTR,A
  465: 				if( j == 0 )
80E766 7003              JNZ     $ + 5H
80E768 02FDF6            LJMP    ?C0341?SYSPARAMSET
  466: 					break;
80E76B         ?C0144?SYSPARAMSET:
  467: 				if( j > 1 )
80E76B 901753            MOV     DPTR,#j
80E76E E0                MOVX    A,@DPTR
80E76F D3                SETB    C
80E770 9401              SUBB    A,#01H
80E772 4003              JC      ?C0145?SYSPARAMSET
  468: 					j = 1;
80E774 7401              MOV     A,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 577


80E776 F0                MOVX    @DPTR,A
80E777         ?C0145?SYSPARAMSET:
  469: 				SystemParameter.decimal = 0;
80E777 E4                CLR     A
80E778 900465            MOV     DPTR,#SystemParameter+047H
80E77B F0                MOVX    @DPTR,A
  470: 				for( i = 0; i < j; i ++ )
80E77C 901754            MOV     DPTR,#i
80E77F F0                MOVX    @DPTR,A
80E780         ?C0146?SYSPARAMSET:
80E780 901753            MOV     DPTR,#j
80E783 E0                MOVX    A,@DPTR
80E784 FF                MOV     R7,A
80E785 A3                INC     DPTR
80E786 E0                MOVX    A,@DPTR
80E787 FE                MOV     R6,A
80E788 C3                CLR     C
80E789 9F                SUBB    A,R7
80E78A 5028              JNC     ?C0147?SYSPARAMSET
  471: 				{
  472: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80E78C 90174F            MOV     DPTR,#InStr
80E78F E0                MOVX    A,@DPTR
80E790 FC                MOV     R4,A
80E791 A3                INC     DPTR
80E792 E0                MOVX    A,@DPTR
80E793 2E                ADD     A,R6
80E794 F582              MOV     DPL,A
80E796 E4                CLR     A
80E797 3C                ADDC    A,R4
80E798 F583              MOV     DPH,A
80E79A E0                MOVX    A,@DPTR
80E79B FF                MOV     R7,A
80E79C C3                CLR     C
80E79D 9400              SUBB    A,#00H
80E79F 400B              JC      ?C0148?SYSPARAMSET
80E7A1 EF                MOV     A,R7
80E7A2 D3                SETB    C
80E7A3 9409              SUBB    A,#09H
80E7A5 5005              JNC     ?C0148?SYSPARAMSET
  473: 						SystemParameter.decimal = *( InStr + i );
80E7A7 900465            MOV     DPTR,#SystemParameter+047H
80E7AA EF                MOV     A,R7
80E7AB F0                MOVX    @DPTR,A
  474: 				}
80E7AC         ?C0148?SYSPARAMSET:
80E7AC 901754            MOV     DPTR,#i
80E7AF E0                MOVX    A,@DPTR
80E7B0 04                INC     A
80E7B1 F0                MOVX    @DPTR,A
80E7B2 80CC              SJMP    ?C0146?SYSPARAMSET
80E7B4         ?C0147?SYSPARAMSET:
  475: 
  476: 				if( !( SystemParameter.decimal <= 2) )
80E7B4 900465            MOV     DPTR,#SystemParameter+047H
80E7B7 E0                MOVX    A,@DPTR
80E7B8 D3                SETB    C
80E7B9 9402              SUBB    A,#02H
80E7BB 5002              JNC     ?C0151?SYSPARAMSET
80E7BD 8001              SJMP    ?C0152?SYSPARAMSET
80E7BF         ?C0151?SYSPARAMSET:
80E7BF C3                CLR     C
80E7C0         ?C0152?SYSPARAMSET:
80E7C0 4005              JC      ?C0150?SYSPARAMSET
  477: 				{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 578


  478: 					SystemParameter.decimal = 0;
80E7C2 E4                CLR     A
80E7C3 900465            MOV     DPTR,#SystemParameter+047H
80E7C6 F0                MOVX    @DPTR,A
  479: 				}
80E7C7         ?C0150?SYSPARAMSET:
  480: 
  481: 				if( SystemParameter.decimal == 0 )
80E7C7 900465            MOV     DPTR,#SystemParameter+047H
80E7CA E0                MOVX    A,@DPTR
80E7CB 7007              JNZ     ?C0153?SYSPARAMSET
  482: 				    SystemParameter.curUnit = 1;
80E7CD A3                INC     DPTR
80E7CE F0                MOVX    @DPTR,A
80E7CF A3                INC     DPTR
80E7D0 04                INC     A
80E7D1 F0                MOVX    @DPTR,A
80E7D2 801E              SJMP    ?C0154?SYSPARAMSET
80E7D4         ?C0153?SYSPARAMSET:
  483: 				else if( SystemParameter.decimal == 1 )
80E7D4 900465            MOV     DPTR,#SystemParameter+047H
80E7D7 E0                MOVX    A,@DPTR
80E7D8 B40109            CJNE    A,#01H,?C0155?SYSPARAMSET
  484: 				    SystemParameter.curUnit = 10;
80E7DB A3                INC     DPTR
80E7DC E4                CLR     A
80E7DD F0                MOVX    @DPTR,A
80E7DE A3                INC     DPTR
80E7DF 740A              MOV     A,#0AH
80E7E1 F0                MOVX    @DPTR,A
80E7E2 800E              SJMP    ?C0154?SYSPARAMSET
80E7E4         ?C0155?SYSPARAMSET:
  485: 				else if( SystemParameter.decimal == 2 )
80E7E4 900465            MOV     DPTR,#SystemParameter+047H
80E7E7 E0                MOVX    A,@DPTR
80E7E8 B40207            CJNE    A,#02H,?C0154?SYSPARAMSET
  486: 				    SystemParameter.curUnit = 100;
80E7EB A3                INC     DPTR
80E7EC E4                CLR     A
80E7ED F0                MOVX    @DPTR,A
80E7EE A3                INC     DPTR
80E7EF 7464              MOV     A,#064H
80E7F1 F0                MOVX    @DPTR,A
80E7F2         ?C0154?SYSPARAMSET:
  487: 				SystemSave = 1;
80E7F2 D22E              SETB    SystemSave
  488: 			}			
  489: 			break;
80E7F4 02FDF6            LJMP    ?C0341?SYSPARAMSET
  490:         case 14: //# 1 note
80E7F7         ?C0158?SYSPARAMSET:
  491:         if( OutInFlag == 0 )
80E7F7 301A03            JNB     OutInFlag,$ + 6H
80E7FA 02E907            LJMP    ?C0159?SYSPARAMSET
  492: 			{			
  493: 				switch( SystemParameter.curUnit )
80E7FD 900466            MOV     DPTR,#SystemParameter+048H
80E800 E0                MOVX    A,@DPTR
80E801 FE                MOV     R6,A
80E802 A3                INC     DPTR
80E803 E0                MOVX    A,@DPTR
80E804 FF                MOV     R7,A
80E805 EE                MOV     A,R6
80E806 6003              JZ      $ + 5H
80E808 02FDF6            LJMP    ?C0341?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 579


80E80B EF                MOV     A,R7
80E80C 24F6              ADD     A,#0F6H
80E80E 603F              JZ      ?C0162?SYSPARAMSET
80E810 24A6              ADD     A,#0A6H
80E812 7003              JNZ     $ + 5H
80E814 02E8AB            LJMP    ?C0163?SYSPARAMSET
80E817 2463              ADD     A,#063H
80E819 6003              JZ      $ + 5H
80E81B 02FDF6            LJMP    ?C0341?SYSPARAMSET
  494: 				{
  495: 					case 1:
80E81E         ?C0161?SYSPARAMSET:
  496: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[0] );
80E81E 90174D            MOV     DPTR,#OutStr
80E821 E0                MOVX    A,@DPTR
80E822 FE                MOV     R6,A
80E823 A3                INC     DPTR
80E824 E0                MOVX    A,@DPTR
80E825 AA06              MOV     R2,AR6
80E827 F9                MOV     R1,A
80E828 7B00              MOV     R3,#?C?XDATASEG
80E82A C003              PUSH    AR3
80E82C C002              PUSH    AR2
80E82E C001              PUSH    AR1
80E830 7B80              MOV     R3,#BYTE2 0801088H
80E832 7A10              MOV     R2,#HIGH 0801088H
80E834 7988              MOV     R1,#LOW 0801088H
80E836 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E839 A5128007B6        ECALL   ?C?PSTXDATA
80E83E 900447            MOV     DPTR,#SystemParameter+029H
80E841         
80E841 E0                MOVX    A,@DPTR
80E842 FF                MOV     R7,A
80E843 A3                INC     DPTR
80E844 E0                MOVX    A,@DPTR
80E845 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E848 CF                XCH     A,R7
80E849 F0                MOVX    @DPTR,A
80E84A A3                INC     DPTR
80E84B EF                MOV     A,R7
80E84C         
  497: 					break;				
80E84C 02FD60            LJMP    ?C0472?SYSPARAMSET
  498: 					case 10:
80E84F         ?C0162?SYSPARAMSET:
  499: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[0]/SystemParameter.curUnit,SystemParameter.billV
>> alue[0]%SystemParameter.curUnit );
80E84F 90174D            MOV     DPTR,#OutStr
80E852 E0                MOVX    A,@DPTR
80E853 FE                MOV     R6,A
80E854 A3                INC     DPTR
80E855 E0                MOVX    A,@DPTR
80E856 AA06              MOV     R2,AR6
80E858 F9                MOV     R1,A
80E859 7B00              MOV     R3,#?C?XDATASEG
80E85B C003              PUSH    AR3
80E85D C002              PUSH    AR2
80E85F C001              PUSH    AR1
80E861 7B80              MOV     R3,#BYTE2 080108BH
80E863 7A10              MOV     R2,#HIGH 080108BH
80E865 798B              MOV     R1,#LOW 080108BH
80E867 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E86A A5128007B6        ECALL   ?C?PSTXDATA
80E86F 900466            MOV     DPTR,#SystemParameter+048H
80E872 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 580


80E873 FC                MOV     R4,A
80E874 A3                INC     DPTR
80E875 E0                MOVX    A,@DPTR
80E876 FD                MOV     R5,A
80E877 900447            MOV     DPTR,#SystemParameter+029H
80E87A E0                MOVX    A,@DPTR
80E87B FE                MOV     R6,A
80E87C A3                INC     DPTR
80E87D E0                MOVX    A,@DPTR
80E87E FF                MOV     R7,A
80E87F A51280056C        ECALL   ?C?UIDIV
80E884 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E887 EE                MOV     A,R6
80E888 F0                MOVX    @DPTR,A
80E889 A3                INC     DPTR
80E88A EF                MOV     A,R7
80E88B F0                MOVX    @DPTR,A
80E88C 900466            MOV     DPTR,#SystemParameter+048H
80E88F E0                MOVX    A,@DPTR
80E890 FC                MOV     R4,A
80E891 A3                INC     DPTR
80E892 E0                MOVX    A,@DPTR
80E893 FD                MOV     R5,A
80E894 900447            MOV     DPTR,#SystemParameter+029H
80E897         
80E897 E0                MOVX    A,@DPTR
80E898 FE                MOV     R6,A
80E899 A3                INC     DPTR
80E89A E0                MOVX    A,@DPTR
80E89B FF                MOV     R7,A
80E89C A51280056C        ECALL   ?C?UIDIV
80E8A1 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80E8A4 EC                MOV     A,R4
80E8A5 F0                MOVX    @DPTR,A
80E8A6 A3                INC     DPTR
80E8A7 ED                MOV     A,R5
80E8A8         
  500: 					break;
80E8A8 02FD60            LJMP    ?C0472?SYSPARAMSET
  501: 					case 100:
80E8AB         ?C0163?SYSPARAMSET:
  502: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[0]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[0]%SystemParameter.curUnit );
80E8AB 90174D            MOV     DPTR,#OutStr
80E8AE E0                MOVX    A,@DPTR
80E8AF FE                MOV     R6,A
80E8B0 A3                INC     DPTR
80E8B1 E0                MOVX    A,@DPTR
80E8B2 AA06              MOV     R2,AR6
80E8B4 F9                MOV     R1,A
80E8B5 7B00              MOV     R3,#?C?XDATASEG
80E8B7 C003              PUSH    AR3
80E8B9 C002              PUSH    AR2
80E8BB C001              PUSH    AR1
80E8BD 7B80              MOV     R3,#BYTE2 0801091H
80E8BF 7A10              MOV     R2,#HIGH 0801091H
80E8C1 7991              MOV     R1,#LOW 0801091H
80E8C3 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E8C6 A5128007B6        ECALL   ?C?PSTXDATA
80E8CB 900466            MOV     DPTR,#SystemParameter+048H
80E8CE E0                MOVX    A,@DPTR
80E8CF FC                MOV     R4,A
80E8D0 A3                INC     DPTR
80E8D1 E0                MOVX    A,@DPTR
80E8D2 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 581


80E8D3 900447            MOV     DPTR,#SystemParameter+029H
80E8D6 E0                MOVX    A,@DPTR
80E8D7 FE                MOV     R6,A
80E8D8 A3                INC     DPTR
80E8D9 E0                MOVX    A,@DPTR
80E8DA FF                MOV     R7,A
80E8DB A51280056C        ECALL   ?C?UIDIV
80E8E0 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E8E3 EE                MOV     A,R6
80E8E4 F0                MOVX    @DPTR,A
80E8E5 A3                INC     DPTR
80E8E6 EF                MOV     A,R7
80E8E7 F0                MOVX    @DPTR,A
80E8E8 900466            MOV     DPTR,#SystemParameter+048H
80E8EB E0                MOVX    A,@DPTR
80E8EC FC                MOV     R4,A
80E8ED A3                INC     DPTR
80E8EE E0                MOVX    A,@DPTR
80E8EF FD                MOV     R5,A
80E8F0 900447            MOV     DPTR,#SystemParameter+029H
80E8F3 E0                MOVX    A,@DPTR
80E8F4 FE                MOV     R6,A
80E8F5 A3                INC     DPTR
80E8F6 E0                MOVX    A,@DPTR
80E8F7 FF                MOV     R7,A
80E8F8 A51280056C        ECALL   ?C?UIDIV
80E8FD 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80E900 EC                MOV     A,R4
80E901 F0                MOVX    @DPTR,A
80E902 A3                INC     DPTR
80E903 ED                MOV     A,R5
80E904         
  503: 					break;					
80E904 02FD60            LJMP    ?C0472?SYSPARAMSET
  504: 				}				
  505: 			}
80E907         ?C0159?SYSPARAMSET:
  506: 			else
  507: 			{				
  508: 				//Trace( "\n set IP val \n");
  509: 				j = *len;											
80E907 901751            MOV     DPTR,#len
80E90A E0                MOVX    A,@DPTR
80E90B FE                MOV     R6,A
80E90C A3                INC     DPTR
80E90D E0                MOVX    A,@DPTR
80E90E F582              MOV     DPL,A
80E910 8E83              MOV     DPH,R6
80E912 E0                MOVX    A,@DPTR
80E913 901753            MOV     DPTR,#j
80E916 F0                MOVX    @DPTR,A
  510: 				if( j == 0 )
80E917 7003              JNZ     $ + 5H
80E919 02FDF6            LJMP    ?C0341?SYSPARAMSET
  511: 					break;
80E91C         ?C0165?SYSPARAMSET:
  512: 				if( j > 5 )
80E91C 901753            MOV     DPTR,#j
80E91F E0                MOVX    A,@DPTR
80E920 D3                SETB    C
80E921 9405              SUBB    A,#05H
80E923 4003              JC      ?C0166?SYSPARAMSET
  513: 					j = 5;
80E925 7405              MOV     A,#05H
80E927 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 582


80E928         ?C0166?SYSPARAMSET:
  514: 				SystemParameter.billValue[0] = 0;	
80E928 E4                CLR     A
80E929 900447            MOV     DPTR,#SystemParameter+029H
80E92C F0                MOVX    @DPTR,A
80E92D A3                INC     DPTR
80E92E F0                MOVX    @DPTR,A
  515: 				for( i = 0; i < j; i ++ )
80E92F 901754            MOV     DPTR,#i
80E932 F0                MOVX    @DPTR,A
80E933         ?C0167?SYSPARAMSET:
80E933 901753            MOV     DPTR,#j
80E936 E0                MOVX    A,@DPTR
80E937 FF                MOV     R7,A
80E938 A3                INC     DPTR
80E939 E0                MOVX    A,@DPTR
80E93A FE                MOV     R6,A
80E93B C3                CLR     C
80E93C 9F                SUBB    A,R7
80E93D 5044              JNC     ?C0168?SYSPARAMSET
  516: 				{
  517: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80E93F 90174F            MOV     DPTR,#InStr
80E942 E0                MOVX    A,@DPTR
80E943 FC                MOV     R4,A
80E944 A3                INC     DPTR
80E945 E0                MOVX    A,@DPTR
80E946 2E                ADD     A,R6
80E947 F582              MOV     DPL,A
80E949 E4                CLR     A
80E94A 3C                ADDC    A,R4
80E94B F583              MOV     DPH,A
80E94D E0                MOVX    A,@DPTR
80E94E FF                MOV     R7,A
80E94F C3                CLR     C
80E950 9400              SUBB    A,#00H
80E952 4027              JC      ?C0169?SYSPARAMSET
80E954 EF                MOV     A,R7
80E955 D3                SETB    C
80E956 9409              SUBB    A,#09H
80E958 5021              JNC     ?C0169?SYSPARAMSET
  518: 						SystemParameter.billValue[0] = SystemParameter.billValue[0]*10 + *( InStr + i );						
80E95A EF                MOV     A,R7
80E95B FB                MOV     R3,A
80E95C 7A00              MOV     R2,#00H
80E95E 900447            MOV     DPTR,#SystemParameter+029H
80E961 E0                MOVX    A,@DPTR
80E962 FE                MOV     R6,A
80E963 A3                INC     DPTR
80E964 E0                MOVX    A,@DPTR
80E965 FF                MOV     R7,A
80E966 7C00              MOV     R4,#00H
80E968 7D0A              MOV     R5,#0AH
80E96A A512800559        ECALL   ?C?IMUL
80E96F EF                MOV     A,R7
80E970 2B                ADD     A,R3
80E971 FF                MOV     R7,A
80E972 EA                MOV     A,R2
80E973 3E                ADDC    A,R6
80E974 900447            MOV     DPTR,#SystemParameter+029H
80E977 F0                MOVX    @DPTR,A
80E978 A3                INC     DPTR
80E979 EF                MOV     A,R7
80E97A F0                MOVX    @DPTR,A
  519: 				}	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 583


80E97B         ?C0169?SYSPARAMSET:
80E97B 901754            MOV     DPTR,#i
80E97E E0                MOVX    A,@DPTR
80E97F 04                INC     A
80E980 F0                MOVX    @DPTR,A
80E981 80B0              SJMP    ?C0167?SYSPARAMSET
80E983         ?C0168?SYSPARAMSET:
  520: 				SystemSave = 1;
80E983 D22E              SETB    SystemSave
  521: 			}			
  522: 		break;
80E985 02FDF6            LJMP    ?C0341?SYSPARAMSET
  523: 		case 15: //# 2 note
80E988         ?C0171?SYSPARAMSET:
  524:         if( OutInFlag == 0 )
80E988 301A03            JNB     OutInFlag,$ + 6H
80E98B 02EA98            LJMP    ?C0172?SYSPARAMSET
  525: 			{			
  526: 				switch( SystemParameter.curUnit )
80E98E 900466            MOV     DPTR,#SystemParameter+048H
80E991 E0                MOVX    A,@DPTR
80E992 FE                MOV     R6,A
80E993 A3                INC     DPTR
80E994 E0                MOVX    A,@DPTR
80E995 FF                MOV     R7,A
80E996 EE                MOV     A,R6
80E997 6003              JZ      $ + 5H
80E999 02FDF6            LJMP    ?C0341?SYSPARAMSET
80E99C EF                MOV     A,R7
80E99D 24F6              ADD     A,#0F6H
80E99F 603F              JZ      ?C0175?SYSPARAMSET
80E9A1 24A6              ADD     A,#0A6H
80E9A3 7003              JNZ     $ + 5H
80E9A5 02EA3C            LJMP    ?C0176?SYSPARAMSET
80E9A8 2463              ADD     A,#063H
80E9AA 6003              JZ      $ + 5H
80E9AC 02FDF6            LJMP    ?C0341?SYSPARAMSET
  527: 				{
  528: 					case 1:
80E9AF         ?C0174?SYSPARAMSET:
  529: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[1] );
80E9AF 90174D            MOV     DPTR,#OutStr
80E9B2 E0                MOVX    A,@DPTR
80E9B3 FE                MOV     R6,A
80E9B4 A3                INC     DPTR
80E9B5 E0                MOVX    A,@DPTR
80E9B6 AA06              MOV     R2,AR6
80E9B8 F9                MOV     R1,A
80E9B9 7B00              MOV     R3,#?C?XDATASEG
80E9BB C003              PUSH    AR3
80E9BD C002              PUSH    AR2
80E9BF C001              PUSH    AR1
80E9C1 7B80              MOV     R3,#BYTE2 0801088H
80E9C3 7A10              MOV     R2,#HIGH 0801088H
80E9C5 7988              MOV     R1,#LOW 0801088H
80E9C7 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E9CA A5128007B6        ECALL   ?C?PSTXDATA
80E9CF 900449            MOV     DPTR,#SystemParameter+02BH
80E9D2 E0                MOVX    A,@DPTR
80E9D3 FF                MOV     R7,A
80E9D4 A3                INC     DPTR
80E9D5 E0                MOVX    A,@DPTR
80E9D6 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80E9D9 CF                XCH     A,R7
80E9DA F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 584


80E9DB A3                INC     DPTR
80E9DC EF                MOV     A,R7
80E9DD         
  530: 					break;				
80E9DD 02FD60            LJMP    ?C0472?SYSPARAMSET
  531: 					case 10:
80E9E0         ?C0175?SYSPARAMSET:
  532: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[1]/SystemParameter.curUnit,SystemParameter.billV
>> alue[1]%SystemParameter.curUnit );
80E9E0 90174D            MOV     DPTR,#OutStr
80E9E3 E0                MOVX    A,@DPTR
80E9E4 FE                MOV     R6,A
80E9E5 A3                INC     DPTR
80E9E6 E0                MOVX    A,@DPTR
80E9E7 AA06              MOV     R2,AR6
80E9E9 F9                MOV     R1,A
80E9EA 7B00              MOV     R3,#?C?XDATASEG
80E9EC C003              PUSH    AR3
80E9EE C002              PUSH    AR2
80E9F0 C001              PUSH    AR1
80E9F2 7B80              MOV     R3,#BYTE2 080108BH
80E9F4 7A10              MOV     R2,#HIGH 080108BH
80E9F6 798B              MOV     R1,#LOW 080108BH
80E9F8 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80E9FB A5128007B6        ECALL   ?C?PSTXDATA
80EA00 900466            MOV     DPTR,#SystemParameter+048H
80EA03 E0                MOVX    A,@DPTR
80EA04 FC                MOV     R4,A
80EA05 A3                INC     DPTR
80EA06 E0                MOVX    A,@DPTR
80EA07 FD                MOV     R5,A
80EA08 900449            MOV     DPTR,#SystemParameter+02BH
80EA0B E0                MOVX    A,@DPTR
80EA0C FE                MOV     R6,A
80EA0D A3                INC     DPTR
80EA0E E0                MOVX    A,@DPTR
80EA0F FF                MOV     R7,A
80EA10 A51280056C        ECALL   ?C?UIDIV
80EA15 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80EA18 EE                MOV     A,R6
80EA19 F0                MOVX    @DPTR,A
80EA1A A3                INC     DPTR
80EA1B EF                MOV     A,R7
80EA1C F0                MOVX    @DPTR,A
80EA1D 900466            MOV     DPTR,#SystemParameter+048H
80EA20 E0                MOVX    A,@DPTR
80EA21 FC                MOV     R4,A
80EA22 A3                INC     DPTR
80EA23 E0                MOVX    A,@DPTR
80EA24 FD                MOV     R5,A
80EA25 900449            MOV     DPTR,#SystemParameter+02BH
80EA28 E0                MOVX    A,@DPTR
80EA29 FE                MOV     R6,A
80EA2A A3                INC     DPTR
80EA2B E0                MOVX    A,@DPTR
80EA2C FF                MOV     R7,A
80EA2D A51280056C        ECALL   ?C?UIDIV
80EA32 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80EA35 EC                MOV     A,R4
80EA36 F0                MOVX    @DPTR,A
80EA37 A3                INC     DPTR
80EA38 ED                MOV     A,R5
80EA39         
  533: 					break;
80EA39 02FD60            LJMP    ?C0472?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 585


  534: 					case 100:
80EA3C         ?C0176?SYSPARAMSET:
  535: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[1]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[1]%SystemParameter.curUnit );
80EA3C 90174D            MOV     DPTR,#OutStr
80EA3F E0                MOVX    A,@DPTR
80EA40 FE                MOV     R6,A
80EA41 A3                INC     DPTR
80EA42 E0                MOVX    A,@DPTR
80EA43 AA06              MOV     R2,AR6
80EA45 F9                MOV     R1,A
80EA46 7B00              MOV     R3,#?C?XDATASEG
80EA48 C003              PUSH    AR3
80EA4A C002              PUSH    AR2
80EA4C C001              PUSH    AR1
80EA4E 7B80              MOV     R3,#BYTE2 0801091H
80EA50 7A10              MOV     R2,#HIGH 0801091H
80EA52 7991              MOV     R1,#LOW 0801091H
80EA54 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80EA57 A5128007B6        ECALL   ?C?PSTXDATA
80EA5C 900466            MOV     DPTR,#SystemParameter+048H
80EA5F E0                MOVX    A,@DPTR
80EA60 FC                MOV     R4,A
80EA61 A3                INC     DPTR
80EA62 E0                MOVX    A,@DPTR
80EA63 FD                MOV     R5,A
80EA64 900449            MOV     DPTR,#SystemParameter+02BH
80EA67 E0                MOVX    A,@DPTR
80EA68 FE                MOV     R6,A
80EA69 A3                INC     DPTR
80EA6A E0                MOVX    A,@DPTR
80EA6B FF                MOV     R7,A
80EA6C A51280056C        ECALL   ?C?UIDIV
80EA71 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80EA74 EE                MOV     A,R6
80EA75 F0                MOVX    @DPTR,A
80EA76 A3                INC     DPTR
80EA77 EF                MOV     A,R7
80EA78 F0                MOVX    @DPTR,A
80EA79 900466            MOV     DPTR,#SystemParameter+048H
80EA7C E0                MOVX    A,@DPTR
80EA7D FC                MOV     R4,A
80EA7E A3                INC     DPTR
80EA7F E0                MOVX    A,@DPTR
80EA80 FD                MOV     R5,A
80EA81 900449            MOV     DPTR,#SystemParameter+02BH
80EA84 E0                MOVX    A,@DPTR
80EA85 FE                MOV     R6,A
80EA86 A3                INC     DPTR
80EA87 E0                MOVX    A,@DPTR
80EA88 FF                MOV     R7,A
80EA89 A51280056C        ECALL   ?C?UIDIV
80EA8E 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80EA91 EC                MOV     A,R4
80EA92 F0                MOVX    @DPTR,A
80EA93 A3                INC     DPTR
80EA94 ED                MOV     A,R5
80EA95         
  536: 					break;					
80EA95 02FD60            LJMP    ?C0472?SYSPARAMSET
  537: 				}				
  538: 			}
80EA98         ?C0172?SYSPARAMSET:
  539: 			else
  540: 			{				
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 586


  541: 				//Trace( "\n set IP val \n");
  542: 				j = *len;											
80EA98 901751            MOV     DPTR,#len
80EA9B E0                MOVX    A,@DPTR
80EA9C FE                MOV     R6,A
80EA9D A3                INC     DPTR
80EA9E E0                MOVX    A,@DPTR
80EA9F F582              MOV     DPL,A
80EAA1 8E83              MOV     DPH,R6
80EAA3 E0                MOVX    A,@DPTR
80EAA4 901753            MOV     DPTR,#j
80EAA7 F0                MOVX    @DPTR,A
  543: 				if( j == 0 )
80EAA8 7003              JNZ     $ + 5H
80EAAA 02FDF6            LJMP    ?C0341?SYSPARAMSET
  544: 					break;
80EAAD         ?C0178?SYSPARAMSET:
  545: 				if( j > 5 )
80EAAD 901753            MOV     DPTR,#j
80EAB0 E0                MOVX    A,@DPTR
80EAB1 D3                SETB    C
80EAB2 9405              SUBB    A,#05H
80EAB4 4003              JC      ?C0179?SYSPARAMSET
  546: 					j = 5;
80EAB6 7405              MOV     A,#05H
80EAB8 F0                MOVX    @DPTR,A
80EAB9         ?C0179?SYSPARAMSET:
  547: 				SystemParameter.billValue[1] = 0;	
80EAB9 E4                CLR     A
80EABA 900449            MOV     DPTR,#SystemParameter+02BH
80EABD F0                MOVX    @DPTR,A
80EABE A3                INC     DPTR
80EABF F0                MOVX    @DPTR,A
  548: 				for( i = 0; i < j; i ++ )
80EAC0 901754            MOV     DPTR,#i
80EAC3 F0                MOVX    @DPTR,A
80EAC4         ?C0180?SYSPARAMSET:
80EAC4 901753            MOV     DPTR,#j
80EAC7 E0                MOVX    A,@DPTR
80EAC8 FF                MOV     R7,A
80EAC9 A3                INC     DPTR
80EACA E0                MOVX    A,@DPTR
80EACB FE                MOV     R6,A
80EACC C3                CLR     C
80EACD 9F                SUBB    A,R7
80EACE 5044              JNC     ?C0181?SYSPARAMSET
  549: 				{
  550: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80EAD0 90174F            MOV     DPTR,#InStr
80EAD3 E0                MOVX    A,@DPTR
80EAD4 FC                MOV     R4,A
80EAD5 A3                INC     DPTR
80EAD6 E0                MOVX    A,@DPTR
80EAD7 2E                ADD     A,R6
80EAD8 F582              MOV     DPL,A
80EADA E4                CLR     A
80EADB 3C                ADDC    A,R4
80EADC F583              MOV     DPH,A
80EADE E0                MOVX    A,@DPTR
80EADF FF                MOV     R7,A
80EAE0 C3                CLR     C
80EAE1 9400              SUBB    A,#00H
80EAE3 4027              JC      ?C0182?SYSPARAMSET
80EAE5 EF                MOV     A,R7
80EAE6 D3                SETB    C
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 587


80EAE7 9409              SUBB    A,#09H
80EAE9 5021              JNC     ?C0182?SYSPARAMSET
  551: 						SystemParameter.billValue[1] = SystemParameter.billValue[1]*10 + *( InStr + i );						
80EAEB EF                MOV     A,R7
80EAEC FB                MOV     R3,A
80EAED 7A00              MOV     R2,#00H
80EAEF 900449            MOV     DPTR,#SystemParameter+02BH
80EAF2 E0                MOVX    A,@DPTR
80EAF3 FE                MOV     R6,A
80EAF4 A3                INC     DPTR
80EAF5 E0                MOVX    A,@DPTR
80EAF6 FF                MOV     R7,A
80EAF7 7C00              MOV     R4,#00H
80EAF9 7D0A              MOV     R5,#0AH
80EAFB A512800559        ECALL   ?C?IMUL
80EB00 EF                MOV     A,R7
80EB01 2B                ADD     A,R3
80EB02 FF                MOV     R7,A
80EB03 EA                MOV     A,R2
80EB04 3E                ADDC    A,R6
80EB05 900449            MOV     DPTR,#SystemParameter+02BH
80EB08 F0                MOVX    @DPTR,A
80EB09 A3                INC     DPTR
80EB0A EF                MOV     A,R7
80EB0B F0                MOVX    @DPTR,A
  552: 				}	
80EB0C         ?C0182?SYSPARAMSET:
80EB0C 901754            MOV     DPTR,#i
80EB0F E0                MOVX    A,@DPTR
80EB10 04                INC     A
80EB11 F0                MOVX    @DPTR,A
80EB12 80B0              SJMP    ?C0180?SYSPARAMSET
80EB14         ?C0181?SYSPARAMSET:
  553: 				SystemSave = 1;
80EB14 D22E              SETB    SystemSave
  554: 			}			
  555: 		break;
80EB16 02FDF6            LJMP    ?C0341?SYSPARAMSET
  556:         case 16: //# 3 note
80EB19         ?C0184?SYSPARAMSET:
  557:         if( OutInFlag == 0 )
80EB19 301A03            JNB     OutInFlag,$ + 6H
80EB1C 02EC29            LJMP    ?C0185?SYSPARAMSET
  558: 			{			
  559: 				switch( SystemParameter.curUnit )
80EB1F 900466            MOV     DPTR,#SystemParameter+048H
80EB22 E0                MOVX    A,@DPTR
80EB23 FE                MOV     R6,A
80EB24 A3                INC     DPTR
80EB25 E0                MOVX    A,@DPTR
80EB26 FF                MOV     R7,A
80EB27 EE                MOV     A,R6
80EB28 6003              JZ      $ + 5H
80EB2A 02FDF6            LJMP    ?C0341?SYSPARAMSET
80EB2D EF                MOV     A,R7
80EB2E 24F6              ADD     A,#0F6H
80EB30 603F              JZ      ?C0188?SYSPARAMSET
80EB32 24A6              ADD     A,#0A6H
80EB34 7003              JNZ     $ + 5H
80EB36 02EBCD            LJMP    ?C0189?SYSPARAMSET
80EB39 2463              ADD     A,#063H
80EB3B 6003              JZ      $ + 5H
80EB3D 02FDF6            LJMP    ?C0341?SYSPARAMSET
  560: 				{
  561: 					case 1:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 588


80EB40         ?C0187?SYSPARAMSET:
  562: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[2] );
80EB40 90174D            MOV     DPTR,#OutStr
80EB43 E0                MOVX    A,@DPTR
80EB44 FE                MOV     R6,A
80EB45 A3                INC     DPTR
80EB46 E0                MOVX    A,@DPTR
80EB47 AA06              MOV     R2,AR6
80EB49 F9                MOV     R1,A
80EB4A 7B00              MOV     R3,#?C?XDATASEG
80EB4C C003              PUSH    AR3
80EB4E C002              PUSH    AR2
80EB50 C001              PUSH    AR1
80EB52 7B80              MOV     R3,#BYTE2 0801088H
80EB54 7A10              MOV     R2,#HIGH 0801088H
80EB56 7988              MOV     R1,#LOW 0801088H
80EB58 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80EB5B A5128007B6        ECALL   ?C?PSTXDATA
80EB60 90044B            MOV     DPTR,#SystemParameter+02DH
80EB63 E0                MOVX    A,@DPTR
80EB64 FF                MOV     R7,A
80EB65 A3                INC     DPTR
80EB66 E0                MOVX    A,@DPTR
80EB67 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80EB6A CF                XCH     A,R7
80EB6B F0                MOVX    @DPTR,A
80EB6C A3                INC     DPTR
80EB6D EF                MOV     A,R7
80EB6E         
  563: 					break;				
80EB6E 02FD60            LJMP    ?C0472?SYSPARAMSET
  564: 					case 10:
80EB71         ?C0188?SYSPARAMSET:
  565: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[2]/SystemParameter.curUnit,SystemParameter.billV
>> alue[2]%SystemParameter.curUnit );
80EB71 90174D            MOV     DPTR,#OutStr
80EB74 E0                MOVX    A,@DPTR
80EB75 FE                MOV     R6,A
80EB76 A3                INC     DPTR
80EB77 E0                MOVX    A,@DPTR
80EB78 AA06              MOV     R2,AR6
80EB7A F9                MOV     R1,A
80EB7B 7B00              MOV     R3,#?C?XDATASEG
80EB7D C003              PUSH    AR3
80EB7F C002              PUSH    AR2
80EB81 C001              PUSH    AR1
80EB83 7B80              MOV     R3,#BYTE2 080108BH
80EB85 7A10              MOV     R2,#HIGH 080108BH
80EB87 798B              MOV     R1,#LOW 080108BH
80EB89 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80EB8C A5128007B6        ECALL   ?C?PSTXDATA
80EB91 900466            MOV     DPTR,#SystemParameter+048H
80EB94 E0                MOVX    A,@DPTR
80EB95 FC                MOV     R4,A
80EB96 A3                INC     DPTR
80EB97 E0                MOVX    A,@DPTR
80EB98 FD                MOV     R5,A
80EB99 90044B            MOV     DPTR,#SystemParameter+02DH
80EB9C E0                MOVX    A,@DPTR
80EB9D FE                MOV     R6,A
80EB9E A3                INC     DPTR
80EB9F E0                MOVX    A,@DPTR
80EBA0 FF                MOV     R7,A
80EBA1 A51280056C        ECALL   ?C?UIDIV
80EBA6 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 589


80EBA9 EE                MOV     A,R6
80EBAA F0                MOVX    @DPTR,A
80EBAB A3                INC     DPTR
80EBAC EF                MOV     A,R7
80EBAD F0                MOVX    @DPTR,A
80EBAE 900466            MOV     DPTR,#SystemParameter+048H
80EBB1 E0                MOVX    A,@DPTR
80EBB2 FC                MOV     R4,A
80EBB3 A3                INC     DPTR
80EBB4 E0                MOVX    A,@DPTR
80EBB5 FD                MOV     R5,A
80EBB6 90044B            MOV     DPTR,#SystemParameter+02DH
80EBB9 E0                MOVX    A,@DPTR
80EBBA FE                MOV     R6,A
80EBBB A3                INC     DPTR
80EBBC E0                MOVX    A,@DPTR
80EBBD FF                MOV     R7,A
80EBBE A51280056C        ECALL   ?C?UIDIV
80EBC3 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80EBC6 EC                MOV     A,R4
80EBC7 F0                MOVX    @DPTR,A
80EBC8 A3                INC     DPTR
80EBC9 ED                MOV     A,R5
80EBCA         
  566: 					break;
80EBCA 02FD60            LJMP    ?C0472?SYSPARAMSET
  567: 					case 100:
80EBCD         ?C0189?SYSPARAMSET:
  568: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[2]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[2]%SystemParameter.curUnit );
80EBCD 90174D            MOV     DPTR,#OutStr
80EBD0 E0                MOVX    A,@DPTR
80EBD1 FE                MOV     R6,A
80EBD2 A3                INC     DPTR
80EBD3 E0                MOVX    A,@DPTR
80EBD4 AA06              MOV     R2,AR6
80EBD6 F9                MOV     R1,A
80EBD7 7B00              MOV     R3,#?C?XDATASEG
80EBD9 C003              PUSH    AR3
80EBDB C002              PUSH    AR2
80EBDD C001              PUSH    AR1
80EBDF 7B80              MOV     R3,#BYTE2 0801091H
80EBE1 7A10              MOV     R2,#HIGH 0801091H
80EBE3 7991              MOV     R1,#LOW 0801091H
80EBE5 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80EBE8 A5128007B6        ECALL   ?C?PSTXDATA
80EBED 900466            MOV     DPTR,#SystemParameter+048H
80EBF0 E0                MOVX    A,@DPTR
80EBF1 FC                MOV     R4,A
80EBF2 A3                INC     DPTR
80EBF3 E0                MOVX    A,@DPTR
80EBF4 FD                MOV     R5,A
80EBF5 90044B            MOV     DPTR,#SystemParameter+02DH
80EBF8 E0                MOVX    A,@DPTR
80EBF9 FE                MOV     R6,A
80EBFA A3                INC     DPTR
80EBFB E0                MOVX    A,@DPTR
80EBFC FF                MOV     R7,A
80EBFD A51280056C        ECALL   ?C?UIDIV
80EC02 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80EC05 EE                MOV     A,R6
80EC06 F0                MOVX    @DPTR,A
80EC07 A3                INC     DPTR
80EC08 EF                MOV     A,R7
80EC09 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 590


80EC0A 900466            MOV     DPTR,#SystemParameter+048H
80EC0D E0                MOVX    A,@DPTR
80EC0E FC                MOV     R4,A
80EC0F A3                INC     DPTR
80EC10 E0                MOVX    A,@DPTR
80EC11 FD                MOV     R5,A
80EC12 90044B            MOV     DPTR,#SystemParameter+02DH
80EC15 E0                MOVX    A,@DPTR
80EC16 FE                MOV     R6,A
80EC17 A3                INC     DPTR
80EC18 E0                MOVX    A,@DPTR
80EC19 FF                MOV     R7,A
80EC1A A51280056C        ECALL   ?C?UIDIV
80EC1F 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80EC22 EC                MOV     A,R4
80EC23 F0                MOVX    @DPTR,A
80EC24 A3                INC     DPTR
80EC25 ED                MOV     A,R5
80EC26         
  569: 					break;					
80EC26 02FD60            LJMP    ?C0472?SYSPARAMSET
  570: 				}				
  571: 			}
80EC29         ?C0185?SYSPARAMSET:
  572: 			else
  573: 			{				
  574: 				//Trace( "\n set IP val \n");
  575: 				j = *len;											
80EC29 901751            MOV     DPTR,#len
80EC2C E0                MOVX    A,@DPTR
80EC2D FE                MOV     R6,A
80EC2E A3                INC     DPTR
80EC2F E0                MOVX    A,@DPTR
80EC30 F582              MOV     DPL,A
80EC32 8E83              MOV     DPH,R6
80EC34 E0                MOVX    A,@DPTR
80EC35 901753            MOV     DPTR,#j
80EC38 F0                MOVX    @DPTR,A
  576: 				if( j == 0 )
80EC39 7003              JNZ     $ + 5H
80EC3B 02FDF6            LJMP    ?C0341?SYSPARAMSET
  577: 					break;
80EC3E         ?C0191?SYSPARAMSET:
  578: 				if( j > 5 )
80EC3E 901753            MOV     DPTR,#j
80EC41 E0                MOVX    A,@DPTR
80EC42 D3                SETB    C
80EC43 9405              SUBB    A,#05H
80EC45 4003              JC      ?C0192?SYSPARAMSET
  579: 					j = 5;
80EC47 7405              MOV     A,#05H
80EC49 F0                MOVX    @DPTR,A
80EC4A         ?C0192?SYSPARAMSET:
  580: 				SystemParameter.billValue[2] = 0;	
80EC4A E4                CLR     A
80EC4B 90044B            MOV     DPTR,#SystemParameter+02DH
80EC4E F0                MOVX    @DPTR,A
80EC4F A3                INC     DPTR
80EC50 F0                MOVX    @DPTR,A
  581: 				for( i = 0; i < j; i ++ )
80EC51 901754            MOV     DPTR,#i
80EC54 F0                MOVX    @DPTR,A
80EC55         ?C0193?SYSPARAMSET:
80EC55 901753            MOV     DPTR,#j
80EC58 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 591


80EC59 FF                MOV     R7,A
80EC5A A3                INC     DPTR
80EC5B E0                MOVX    A,@DPTR
80EC5C FE                MOV     R6,A
80EC5D C3                CLR     C
80EC5E 9F                SUBB    A,R7
80EC5F 5044              JNC     ?C0194?SYSPARAMSET
  582: 				{
  583: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80EC61 90174F            MOV     DPTR,#InStr
80EC64 E0                MOVX    A,@DPTR
80EC65 FC                MOV     R4,A
80EC66 A3                INC     DPTR
80EC67 E0                MOVX    A,@DPTR
80EC68 2E                ADD     A,R6
80EC69 F582              MOV     DPL,A
80EC6B E4                CLR     A
80EC6C 3C                ADDC    A,R4
80EC6D F583              MOV     DPH,A
80EC6F E0                MOVX    A,@DPTR
80EC70 FF                MOV     R7,A
80EC71 C3                CLR     C
80EC72 9400              SUBB    A,#00H
80EC74 4027              JC      ?C0195?SYSPARAMSET
80EC76 EF                MOV     A,R7
80EC77 D3                SETB    C
80EC78 9409              SUBB    A,#09H
80EC7A 5021              JNC     ?C0195?SYSPARAMSET
  584: 						SystemParameter.billValue[2] = SystemParameter.billValue[2]*10 + *( InStr + i );						
80EC7C EF                MOV     A,R7
80EC7D FB                MOV     R3,A
80EC7E 7A00              MOV     R2,#00H
80EC80 90044B            MOV     DPTR,#SystemParameter+02DH
80EC83 E0                MOVX    A,@DPTR
80EC84 FE                MOV     R6,A
80EC85 A3                INC     DPTR
80EC86 E0                MOVX    A,@DPTR
80EC87 FF                MOV     R7,A
80EC88 7C00              MOV     R4,#00H
80EC8A 7D0A              MOV     R5,#0AH
80EC8C A512800559        ECALL   ?C?IMUL
80EC91 EF                MOV     A,R7
80EC92 2B                ADD     A,R3
80EC93 FF                MOV     R7,A
80EC94 EA                MOV     A,R2
80EC95 3E                ADDC    A,R6
80EC96 90044B            MOV     DPTR,#SystemParameter+02DH
80EC99 F0                MOVX    @DPTR,A
80EC9A A3                INC     DPTR
80EC9B EF                MOV     A,R7
80EC9C F0                MOVX    @DPTR,A
  585: 				}	
80EC9D         ?C0195?SYSPARAMSET:
80EC9D 901754            MOV     DPTR,#i
80ECA0 E0                MOVX    A,@DPTR
80ECA1 04                INC     A
80ECA2 F0                MOVX    @DPTR,A
80ECA3 80B0              SJMP    ?C0193?SYSPARAMSET
80ECA5         ?C0194?SYSPARAMSET:
  586: 				SystemSave = 1;
80ECA5 D22E              SETB    SystemSave
  587: 			}			
  588: 		break;
80ECA7 02FDF6            LJMP    ?C0341?SYSPARAMSET
  589: 		case 17: //# 4 note
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 592


80ECAA         ?C0197?SYSPARAMSET:
  590:         if( OutInFlag == 0 )
80ECAA 301A03            JNB     OutInFlag,$ + 6H
80ECAD 02EDBA            LJMP    ?C0198?SYSPARAMSET
  591: 			{			
  592: 				switch( SystemParameter.curUnit )
80ECB0 900466            MOV     DPTR,#SystemParameter+048H
80ECB3 E0                MOVX    A,@DPTR
80ECB4 FE                MOV     R6,A
80ECB5 A3                INC     DPTR
80ECB6 E0                MOVX    A,@DPTR
80ECB7 FF                MOV     R7,A
80ECB8 EE                MOV     A,R6
80ECB9 6003              JZ      $ + 5H
80ECBB 02FDF6            LJMP    ?C0341?SYSPARAMSET
80ECBE EF                MOV     A,R7
80ECBF 24F6              ADD     A,#0F6H
80ECC1 603F              JZ      ?C0201?SYSPARAMSET
80ECC3 24A6              ADD     A,#0A6H
80ECC5 7003              JNZ     $ + 5H
80ECC7 02ED5E            LJMP    ?C0202?SYSPARAMSET
80ECCA 2463              ADD     A,#063H
80ECCC 6003              JZ      $ + 5H
80ECCE 02FDF6            LJMP    ?C0341?SYSPARAMSET
  593: 				{
  594: 					case 1:
80ECD1         ?C0200?SYSPARAMSET:
  595: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[3] );
80ECD1 90174D            MOV     DPTR,#OutStr
80ECD4 E0                MOVX    A,@DPTR
80ECD5 FE                MOV     R6,A
80ECD6 A3                INC     DPTR
80ECD7 E0                MOVX    A,@DPTR
80ECD8 AA06              MOV     R2,AR6
80ECDA F9                MOV     R1,A
80ECDB 7B00              MOV     R3,#?C?XDATASEG
80ECDD C003              PUSH    AR3
80ECDF C002              PUSH    AR2
80ECE1 C001              PUSH    AR1
80ECE3 7B80              MOV     R3,#BYTE2 0801088H
80ECE5 7A10              MOV     R2,#HIGH 0801088H
80ECE7 7988              MOV     R1,#LOW 0801088H
80ECE9 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80ECEC A5128007B6        ECALL   ?C?PSTXDATA
80ECF1 90044D            MOV     DPTR,#SystemParameter+02FH
80ECF4 E0                MOVX    A,@DPTR
80ECF5 FF                MOV     R7,A
80ECF6 A3                INC     DPTR
80ECF7 E0                MOVX    A,@DPTR
80ECF8 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80ECFB CF                XCH     A,R7
80ECFC F0                MOVX    @DPTR,A
80ECFD A3                INC     DPTR
80ECFE EF                MOV     A,R7
80ECFF         
  596: 					break;				
80ECFF 02FD60            LJMP    ?C0472?SYSPARAMSET
  597: 					case 10:
80ED02         ?C0201?SYSPARAMSET:
  598: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[3]/SystemParameter.curUnit,SystemParameter.billV
>> alue[3]%SystemParameter.curUnit );
80ED02 90174D            MOV     DPTR,#OutStr
80ED05 E0                MOVX    A,@DPTR
80ED06 FE                MOV     R6,A
80ED07 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 593


80ED08 E0                MOVX    A,@DPTR
80ED09 AA06              MOV     R2,AR6
80ED0B F9                MOV     R1,A
80ED0C 7B00              MOV     R3,#?C?XDATASEG
80ED0E C003              PUSH    AR3
80ED10 C002              PUSH    AR2
80ED12 C001              PUSH    AR1
80ED14 7B80              MOV     R3,#BYTE2 080108BH
80ED16 7A10              MOV     R2,#HIGH 080108BH
80ED18 798B              MOV     R1,#LOW 080108BH
80ED1A 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80ED1D A5128007B6        ECALL   ?C?PSTXDATA
80ED22 900466            MOV     DPTR,#SystemParameter+048H
80ED25 E0                MOVX    A,@DPTR
80ED26 FC                MOV     R4,A
80ED27 A3                INC     DPTR
80ED28 E0                MOVX    A,@DPTR
80ED29 FD                MOV     R5,A
80ED2A 90044D            MOV     DPTR,#SystemParameter+02FH
80ED2D E0                MOVX    A,@DPTR
80ED2E FE                MOV     R6,A
80ED2F A3                INC     DPTR
80ED30 E0                MOVX    A,@DPTR
80ED31 FF                MOV     R7,A
80ED32 A51280056C        ECALL   ?C?UIDIV
80ED37 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80ED3A EE                MOV     A,R6
80ED3B F0                MOVX    @DPTR,A
80ED3C A3                INC     DPTR
80ED3D EF                MOV     A,R7
80ED3E F0                MOVX    @DPTR,A
80ED3F 900466            MOV     DPTR,#SystemParameter+048H
80ED42 E0                MOVX    A,@DPTR
80ED43 FC                MOV     R4,A
80ED44 A3                INC     DPTR
80ED45 E0                MOVX    A,@DPTR
80ED46 FD                MOV     R5,A
80ED47 90044D            MOV     DPTR,#SystemParameter+02FH
80ED4A E0                MOVX    A,@DPTR
80ED4B FE                MOV     R6,A
80ED4C A3                INC     DPTR
80ED4D E0                MOVX    A,@DPTR
80ED4E FF                MOV     R7,A
80ED4F A51280056C        ECALL   ?C?UIDIV
80ED54 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80ED57 EC                MOV     A,R4
80ED58 F0                MOVX    @DPTR,A
80ED59 A3                INC     DPTR
80ED5A ED                MOV     A,R5
80ED5B         
  599: 					break;
80ED5B 02FD60            LJMP    ?C0472?SYSPARAMSET
  600: 					case 100:
80ED5E         ?C0202?SYSPARAMSET:
  601: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[3]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[3]%SystemParameter.curUnit );
80ED5E 90174D            MOV     DPTR,#OutStr
80ED61 E0                MOVX    A,@DPTR
80ED62 FE                MOV     R6,A
80ED63 A3                INC     DPTR
80ED64 E0                MOVX    A,@DPTR
80ED65 AA06              MOV     R2,AR6
80ED67 F9                MOV     R1,A
80ED68 7B00              MOV     R3,#?C?XDATASEG
80ED6A C003              PUSH    AR3
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 594


80ED6C C002              PUSH    AR2
80ED6E C001              PUSH    AR1
80ED70 7B80              MOV     R3,#BYTE2 0801091H
80ED72 7A10              MOV     R2,#HIGH 0801091H
80ED74 7991              MOV     R1,#LOW 0801091H
80ED76 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80ED79 A5128007B6        ECALL   ?C?PSTXDATA
80ED7E 900466            MOV     DPTR,#SystemParameter+048H
80ED81 E0                MOVX    A,@DPTR
80ED82 FC                MOV     R4,A
80ED83 A3                INC     DPTR
80ED84 E0                MOVX    A,@DPTR
80ED85 FD                MOV     R5,A
80ED86 90044D            MOV     DPTR,#SystemParameter+02FH
80ED89 E0                MOVX    A,@DPTR
80ED8A FE                MOV     R6,A
80ED8B A3                INC     DPTR
80ED8C E0                MOVX    A,@DPTR
80ED8D FF                MOV     R7,A
80ED8E A51280056C        ECALL   ?C?UIDIV
80ED93 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80ED96 EE                MOV     A,R6
80ED97 F0                MOVX    @DPTR,A
80ED98 A3                INC     DPTR
80ED99 EF                MOV     A,R7
80ED9A F0                MOVX    @DPTR,A
80ED9B 900466            MOV     DPTR,#SystemParameter+048H
80ED9E E0                MOVX    A,@DPTR
80ED9F FC                MOV     R4,A
80EDA0 A3                INC     DPTR
80EDA1 E0                MOVX    A,@DPTR
80EDA2 FD                MOV     R5,A
80EDA3 90044D            MOV     DPTR,#SystemParameter+02FH
80EDA6 E0                MOVX    A,@DPTR
80EDA7 FE                MOV     R6,A
80EDA8 A3                INC     DPTR
80EDA9 E0                MOVX    A,@DPTR
80EDAA FF                MOV     R7,A
80EDAB A51280056C        ECALL   ?C?UIDIV
80EDB0 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80EDB3 EC                MOV     A,R4
80EDB4 F0                MOVX    @DPTR,A
80EDB5 A3                INC     DPTR
80EDB6 ED                MOV     A,R5
80EDB7         
  602: 					break;					
80EDB7 02FD60            LJMP    ?C0472?SYSPARAMSET
  603: 				}				
  604: 			}
80EDBA         ?C0198?SYSPARAMSET:
  605: 			else
  606: 			{				
  607: 				//Trace( "\n set IP val \n");
  608: 				j = *len;											
80EDBA 901751            MOV     DPTR,#len
80EDBD E0                MOVX    A,@DPTR
80EDBE FE                MOV     R6,A
80EDBF A3                INC     DPTR
80EDC0 E0                MOVX    A,@DPTR
80EDC1 F582              MOV     DPL,A
80EDC3 8E83              MOV     DPH,R6
80EDC5 E0                MOVX    A,@DPTR
80EDC6 901753            MOV     DPTR,#j
80EDC9 F0                MOVX    @DPTR,A
  609: 				if( j == 0 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 595


80EDCA 7003              JNZ     $ + 5H
80EDCC 02FDF6            LJMP    ?C0341?SYSPARAMSET
  610: 					break;
80EDCF         ?C0204?SYSPARAMSET:
  611: 				if( j > 5 )
80EDCF 901753            MOV     DPTR,#j
80EDD2 E0                MOVX    A,@DPTR
80EDD3 D3                SETB    C
80EDD4 9405              SUBB    A,#05H
80EDD6 4003              JC      ?C0205?SYSPARAMSET
  612: 					j = 5;
80EDD8 7405              MOV     A,#05H
80EDDA F0                MOVX    @DPTR,A
80EDDB         ?C0205?SYSPARAMSET:
  613: 				SystemParameter.billValue[3] = 0;	
80EDDB E4                CLR     A
80EDDC 90044D            MOV     DPTR,#SystemParameter+02FH
80EDDF F0                MOVX    @DPTR,A
80EDE0 A3                INC     DPTR
80EDE1 F0                MOVX    @DPTR,A
  614: 				for( i = 0; i < j; i ++ )
80EDE2 901754            MOV     DPTR,#i
80EDE5 F0                MOVX    @DPTR,A
80EDE6         ?C0206?SYSPARAMSET:
80EDE6 901753            MOV     DPTR,#j
80EDE9 E0                MOVX    A,@DPTR
80EDEA FF                MOV     R7,A
80EDEB A3                INC     DPTR
80EDEC E0                MOVX    A,@DPTR
80EDED FE                MOV     R6,A
80EDEE C3                CLR     C
80EDEF 9F                SUBB    A,R7
80EDF0 5044              JNC     ?C0207?SYSPARAMSET
  615: 				{
  616: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80EDF2 90174F            MOV     DPTR,#InStr
80EDF5 E0                MOVX    A,@DPTR
80EDF6 FC                MOV     R4,A
80EDF7 A3                INC     DPTR
80EDF8 E0                MOVX    A,@DPTR
80EDF9 2E                ADD     A,R6
80EDFA F582              MOV     DPL,A
80EDFC E4                CLR     A
80EDFD 3C                ADDC    A,R4
80EDFE F583              MOV     DPH,A
80EE00 E0                MOVX    A,@DPTR
80EE01 FF                MOV     R7,A
80EE02 C3                CLR     C
80EE03 9400              SUBB    A,#00H
80EE05 4027              JC      ?C0208?SYSPARAMSET
80EE07 EF                MOV     A,R7
80EE08 D3                SETB    C
80EE09 9409              SUBB    A,#09H
80EE0B 5021              JNC     ?C0208?SYSPARAMSET
  617: 						SystemParameter.billValue[3] = SystemParameter.billValue[3]*10 + *( InStr + i );						
80EE0D EF                MOV     A,R7
80EE0E FB                MOV     R3,A
80EE0F 7A00              MOV     R2,#00H
80EE11 90044D            MOV     DPTR,#SystemParameter+02FH
80EE14 E0                MOVX    A,@DPTR
80EE15 FE                MOV     R6,A
80EE16 A3                INC     DPTR
80EE17 E0                MOVX    A,@DPTR
80EE18 FF                MOV     R7,A
80EE19 7C00              MOV     R4,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 596


80EE1B 7D0A              MOV     R5,#0AH
80EE1D A512800559        ECALL   ?C?IMUL
80EE22 EF                MOV     A,R7
80EE23 2B                ADD     A,R3
80EE24 FF                MOV     R7,A
80EE25 EA                MOV     A,R2
80EE26 3E                ADDC    A,R6
80EE27 90044D            MOV     DPTR,#SystemParameter+02FH
80EE2A F0                MOVX    @DPTR,A
80EE2B A3                INC     DPTR
80EE2C EF                MOV     A,R7
80EE2D F0                MOVX    @DPTR,A
  618: 				}	
80EE2E         ?C0208?SYSPARAMSET:
80EE2E 901754            MOV     DPTR,#i
80EE31 E0                MOVX    A,@DPTR
80EE32 04                INC     A
80EE33 F0                MOVX    @DPTR,A
80EE34 80B0              SJMP    ?C0206?SYSPARAMSET
80EE36         ?C0207?SYSPARAMSET:
  619: 				SystemSave = 1;
80EE36 D22E              SETB    SystemSave
  620: 			}			
  621: 		break;
80EE38 02FDF6            LJMP    ?C0341?SYSPARAMSET
  622:         case 18: //# 5 note
80EE3B         ?C0210?SYSPARAMSET:
  623:         if( OutInFlag == 0 )
80EE3B 301A03            JNB     OutInFlag,$ + 6H
80EE3E 02EF4B            LJMP    ?C0211?SYSPARAMSET
  624: 			{			
  625: 				switch( SystemParameter.curUnit )
80EE41 900466            MOV     DPTR,#SystemParameter+048H
80EE44 E0                MOVX    A,@DPTR
80EE45 FE                MOV     R6,A
80EE46 A3                INC     DPTR
80EE47 E0                MOVX    A,@DPTR
80EE48 FF                MOV     R7,A
80EE49 EE                MOV     A,R6
80EE4A 6003              JZ      $ + 5H
80EE4C 02FDF6            LJMP    ?C0341?SYSPARAMSET
80EE4F EF                MOV     A,R7
80EE50 24F6              ADD     A,#0F6H
80EE52 603F              JZ      ?C0214?SYSPARAMSET
80EE54 24A6              ADD     A,#0A6H
80EE56 7003              JNZ     $ + 5H
80EE58 02EEEF            LJMP    ?C0215?SYSPARAMSET
80EE5B 2463              ADD     A,#063H
80EE5D 6003              JZ      $ + 5H
80EE5F 02FDF6            LJMP    ?C0341?SYSPARAMSET
  626: 				{
  627: 					case 1:
80EE62         ?C0213?SYSPARAMSET:
  628: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[4] );
80EE62 90174D            MOV     DPTR,#OutStr
80EE65 E0                MOVX    A,@DPTR
80EE66 FE                MOV     R6,A
80EE67 A3                INC     DPTR
80EE68 E0                MOVX    A,@DPTR
80EE69 AA06              MOV     R2,AR6
80EE6B F9                MOV     R1,A
80EE6C 7B00              MOV     R3,#?C?XDATASEG
80EE6E C003              PUSH    AR3
80EE70 C002              PUSH    AR2
80EE72 C001              PUSH    AR1
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 597


80EE74 7B80              MOV     R3,#BYTE2 0801088H
80EE76 7A10              MOV     R2,#HIGH 0801088H
80EE78 7988              MOV     R1,#LOW 0801088H
80EE7A 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80EE7D A5128007B6        ECALL   ?C?PSTXDATA
80EE82 90044F            MOV     DPTR,#SystemParameter+031H
80EE85 E0                MOVX    A,@DPTR
80EE86 FF                MOV     R7,A
80EE87 A3                INC     DPTR
80EE88 E0                MOVX    A,@DPTR
80EE89 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80EE8C CF                XCH     A,R7
80EE8D F0                MOVX    @DPTR,A
80EE8E A3                INC     DPTR
80EE8F EF                MOV     A,R7
80EE90         
  629: 					break;				
80EE90 02FD60            LJMP    ?C0472?SYSPARAMSET
  630: 					case 10:
80EE93         ?C0214?SYSPARAMSET:
  631: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[4]/SystemParameter.curUnit,SystemParameter.billV
>> alue[4]%SystemParameter.curUnit );
80EE93 90174D            MOV     DPTR,#OutStr
80EE96 E0                MOVX    A,@DPTR
80EE97 FE                MOV     R6,A
80EE98 A3                INC     DPTR
80EE99 E0                MOVX    A,@DPTR
80EE9A AA06              MOV     R2,AR6
80EE9C F9                MOV     R1,A
80EE9D 7B00              MOV     R3,#?C?XDATASEG
80EE9F C003              PUSH    AR3
80EEA1 C002              PUSH    AR2
80EEA3 C001              PUSH    AR1
80EEA5 7B80              MOV     R3,#BYTE2 080108BH
80EEA7 7A10              MOV     R2,#HIGH 080108BH
80EEA9 798B              MOV     R1,#LOW 080108BH
80EEAB 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80EEAE A5128007B6        ECALL   ?C?PSTXDATA
80EEB3 900466            MOV     DPTR,#SystemParameter+048H
80EEB6 E0                MOVX    A,@DPTR
80EEB7 FC                MOV     R4,A
80EEB8 A3                INC     DPTR
80EEB9 E0                MOVX    A,@DPTR
80EEBA FD                MOV     R5,A
80EEBB 90044F            MOV     DPTR,#SystemParameter+031H
80EEBE E0                MOVX    A,@DPTR
80EEBF FE                MOV     R6,A
80EEC0 A3                INC     DPTR
80EEC1 E0                MOVX    A,@DPTR
80EEC2 FF                MOV     R7,A
80EEC3 A51280056C        ECALL   ?C?UIDIV
80EEC8 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80EECB EE                MOV     A,R6
80EECC F0                MOVX    @DPTR,A
80EECD A3                INC     DPTR
80EECE EF                MOV     A,R7
80EECF F0                MOVX    @DPTR,A
80EED0 900466            MOV     DPTR,#SystemParameter+048H
80EED3 E0                MOVX    A,@DPTR
80EED4 FC                MOV     R4,A
80EED5 A3                INC     DPTR
80EED6 E0                MOVX    A,@DPTR
80EED7 FD                MOV     R5,A
80EED8 90044F            MOV     DPTR,#SystemParameter+031H
80EEDB E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 598


80EEDC FE                MOV     R6,A
80EEDD A3                INC     DPTR
80EEDE E0                MOVX    A,@DPTR
80EEDF FF                MOV     R7,A
80EEE0 A51280056C        ECALL   ?C?UIDIV
80EEE5 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80EEE8 EC                MOV     A,R4
80EEE9 F0                MOVX    @DPTR,A
80EEEA A3                INC     DPTR
80EEEB ED                MOV     A,R5
80EEEC         
  632: 					break;
80EEEC 02FD60            LJMP    ?C0472?SYSPARAMSET
  633: 					case 100:
80EEEF         ?C0215?SYSPARAMSET:
  634: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[4]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[4]%SystemParameter.curUnit );
80EEEF 90174D            MOV     DPTR,#OutStr
80EEF2 E0                MOVX    A,@DPTR
80EEF3 FE                MOV     R6,A
80EEF4 A3                INC     DPTR
80EEF5 E0                MOVX    A,@DPTR
80EEF6 AA06              MOV     R2,AR6
80EEF8 F9                MOV     R1,A
80EEF9 7B00              MOV     R3,#?C?XDATASEG
80EEFB C003              PUSH    AR3
80EEFD C002              PUSH    AR2
80EEFF C001              PUSH    AR1
80EF01 7B80              MOV     R3,#BYTE2 0801091H
80EF03 7A10              MOV     R2,#HIGH 0801091H
80EF05 7991              MOV     R1,#LOW 0801091H
80EF07 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80EF0A A5128007B6        ECALL   ?C?PSTXDATA
80EF0F 900466            MOV     DPTR,#SystemParameter+048H
80EF12 E0                MOVX    A,@DPTR
80EF13 FC                MOV     R4,A
80EF14 A3                INC     DPTR
80EF15 E0                MOVX    A,@DPTR
80EF16 FD                MOV     R5,A
80EF17 90044F            MOV     DPTR,#SystemParameter+031H
80EF1A E0                MOVX    A,@DPTR
80EF1B FE                MOV     R6,A
80EF1C A3                INC     DPTR
80EF1D E0                MOVX    A,@DPTR
80EF1E FF                MOV     R7,A
80EF1F A51280056C        ECALL   ?C?UIDIV
80EF24 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80EF27 EE                MOV     A,R6
80EF28 F0                MOVX    @DPTR,A
80EF29 A3                INC     DPTR
80EF2A EF                MOV     A,R7
80EF2B F0                MOVX    @DPTR,A
80EF2C 900466            MOV     DPTR,#SystemParameter+048H
80EF2F E0                MOVX    A,@DPTR
80EF30 FC                MOV     R4,A
80EF31 A3                INC     DPTR
80EF32 E0                MOVX    A,@DPTR
80EF33 FD                MOV     R5,A
80EF34 90044F            MOV     DPTR,#SystemParameter+031H
80EF37 E0                MOVX    A,@DPTR
80EF38 FE                MOV     R6,A
80EF39 A3                INC     DPTR
80EF3A E0                MOVX    A,@DPTR
80EF3B FF                MOV     R7,A
80EF3C A51280056C        ECALL   ?C?UIDIV
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 599


80EF41 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80EF44 EC                MOV     A,R4
80EF45 F0                MOVX    @DPTR,A
80EF46 A3                INC     DPTR
80EF47 ED                MOV     A,R5
80EF48         
  635: 					break;					
80EF48 02FD60            LJMP    ?C0472?SYSPARAMSET
  636: 				}				
  637: 			}
80EF4B         ?C0211?SYSPARAMSET:
  638: 			else
  639: 			{				
  640: 				//Trace( "\n set IP val \n");
  641: 				j = *len;											
80EF4B 901751            MOV     DPTR,#len
80EF4E E0                MOVX    A,@DPTR
80EF4F FE                MOV     R6,A
80EF50 A3                INC     DPTR
80EF51 E0                MOVX    A,@DPTR
80EF52 F582              MOV     DPL,A
80EF54 8E83              MOV     DPH,R6
80EF56 E0                MOVX    A,@DPTR
80EF57 901753            MOV     DPTR,#j
80EF5A F0                MOVX    @DPTR,A
  642: 				if( j == 0 )
80EF5B 7003              JNZ     $ + 5H
80EF5D 02FDF6            LJMP    ?C0341?SYSPARAMSET
  643: 					break;
80EF60         ?C0217?SYSPARAMSET:
  644: 				if( j > 5 )
80EF60 901753            MOV     DPTR,#j
80EF63 E0                MOVX    A,@DPTR
80EF64 D3                SETB    C
80EF65 9405              SUBB    A,#05H
80EF67 4003              JC      ?C0218?SYSPARAMSET
  645: 					j = 5;
80EF69 7405              MOV     A,#05H
80EF6B F0                MOVX    @DPTR,A
80EF6C         ?C0218?SYSPARAMSET:
  646: 				SystemParameter.billValue[4] = 0;	
80EF6C E4                CLR     A
80EF6D 90044F            MOV     DPTR,#SystemParameter+031H
80EF70 F0                MOVX    @DPTR,A
80EF71 A3                INC     DPTR
80EF72 F0                MOVX    @DPTR,A
  647: 				for( i = 0; i < j; i ++ )
80EF73 901754            MOV     DPTR,#i
80EF76 F0                MOVX    @DPTR,A
80EF77         ?C0219?SYSPARAMSET:
80EF77 901753            MOV     DPTR,#j
80EF7A E0                MOVX    A,@DPTR
80EF7B FF                MOV     R7,A
80EF7C A3                INC     DPTR
80EF7D E0                MOVX    A,@DPTR
80EF7E FE                MOV     R6,A
80EF7F C3                CLR     C
80EF80 9F                SUBB    A,R7
80EF81 5044              JNC     ?C0220?SYSPARAMSET
  648: 				{
  649: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80EF83 90174F            MOV     DPTR,#InStr
80EF86 E0                MOVX    A,@DPTR
80EF87 FC                MOV     R4,A
80EF88 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 600


80EF89 E0                MOVX    A,@DPTR
80EF8A 2E                ADD     A,R6
80EF8B F582              MOV     DPL,A
80EF8D E4                CLR     A
80EF8E 3C                ADDC    A,R4
80EF8F F583              MOV     DPH,A
80EF91 E0                MOVX    A,@DPTR
80EF92 FF                MOV     R7,A
80EF93 C3                CLR     C
80EF94 9400              SUBB    A,#00H
80EF96 4027              JC      ?C0221?SYSPARAMSET
80EF98 EF                MOV     A,R7
80EF99 D3                SETB    C
80EF9A 9409              SUBB    A,#09H
80EF9C 5021              JNC     ?C0221?SYSPARAMSET
  650: 						SystemParameter.billValue[4] = SystemParameter.billValue[4]*10 + *( InStr + i );						
80EF9E EF                MOV     A,R7
80EF9F FB                MOV     R3,A
80EFA0 7A00              MOV     R2,#00H
80EFA2 90044F            MOV     DPTR,#SystemParameter+031H
80EFA5 E0                MOVX    A,@DPTR
80EFA6 FE                MOV     R6,A
80EFA7 A3                INC     DPTR
80EFA8 E0                MOVX    A,@DPTR
80EFA9 FF                MOV     R7,A
80EFAA 7C00              MOV     R4,#00H
80EFAC 7D0A              MOV     R5,#0AH
80EFAE A512800559        ECALL   ?C?IMUL
80EFB3 EF                MOV     A,R7
80EFB4 2B                ADD     A,R3
80EFB5 FF                MOV     R7,A
80EFB6 EA                MOV     A,R2
80EFB7 3E                ADDC    A,R6
80EFB8 90044F            MOV     DPTR,#SystemParameter+031H
80EFBB F0                MOVX    @DPTR,A
80EFBC A3                INC     DPTR
80EFBD EF                MOV     A,R7
80EFBE F0                MOVX    @DPTR,A
  651: 				}	
80EFBF         ?C0221?SYSPARAMSET:
80EFBF 901754            MOV     DPTR,#i
80EFC2 E0                MOVX    A,@DPTR
80EFC3 04                INC     A
80EFC4 F0                MOVX    @DPTR,A
80EFC5 80B0              SJMP    ?C0219?SYSPARAMSET
80EFC7         ?C0220?SYSPARAMSET:
  652: 				SystemSave = 1;
80EFC7 D22E              SETB    SystemSave
  653: 			}			
  654: 		break;
80EFC9 02FDF6            LJMP    ?C0341?SYSPARAMSET
  655:         case 19: //# 6 note
80EFCC         ?C0223?SYSPARAMSET:
  656:         if( OutInFlag == 0 )
80EFCC 301A03            JNB     OutInFlag,$ + 6H
80EFCF 02F0DC            LJMP    ?C0224?SYSPARAMSET
  657: 			{			
  658: 				switch( SystemParameter.curUnit )
80EFD2 900466            MOV     DPTR,#SystemParameter+048H
80EFD5 E0                MOVX    A,@DPTR
80EFD6 FE                MOV     R6,A
80EFD7 A3                INC     DPTR
80EFD8 E0                MOVX    A,@DPTR
80EFD9 FF                MOV     R7,A
80EFDA EE                MOV     A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 601


80EFDB 6003              JZ      $ + 5H
80EFDD 02FDF6            LJMP    ?C0341?SYSPARAMSET
80EFE0 EF                MOV     A,R7
80EFE1 24F6              ADD     A,#0F6H
80EFE3 603F              JZ      ?C0227?SYSPARAMSET
80EFE5 24A6              ADD     A,#0A6H
80EFE7 7003              JNZ     $ + 5H
80EFE9 02F080            LJMP    ?C0228?SYSPARAMSET
80EFEC 2463              ADD     A,#063H
80EFEE 6003              JZ      $ + 5H
80EFF0 02FDF6            LJMP    ?C0341?SYSPARAMSET
  659: 				{
  660: 					case 1:
80EFF3         ?C0226?SYSPARAMSET:
  661: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[5] );
80EFF3 90174D            MOV     DPTR,#OutStr
80EFF6 E0                MOVX    A,@DPTR
80EFF7 FE                MOV     R6,A
80EFF8 A3                INC     DPTR
80EFF9 E0                MOVX    A,@DPTR
80EFFA AA06              MOV     R2,AR6
80EFFC F9                MOV     R1,A
80EFFD 7B00              MOV     R3,#?C?XDATASEG
80EFFF C003              PUSH    AR3
80F001 C002              PUSH    AR2
80F003 C001              PUSH    AR1
80F005 7B80              MOV     R3,#BYTE2 0801088H
80F007 7A10              MOV     R2,#HIGH 0801088H
80F009 7988              MOV     R1,#LOW 0801088H
80F00B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F00E A5128007B6        ECALL   ?C?PSTXDATA
80F013 900451            MOV     DPTR,#SystemParameter+033H
80F016 E0                MOVX    A,@DPTR
80F017 FF                MOV     R7,A
80F018 A3                INC     DPTR
80F019 E0                MOVX    A,@DPTR
80F01A 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F01D CF                XCH     A,R7
80F01E F0                MOVX    @DPTR,A
80F01F A3                INC     DPTR
80F020 EF                MOV     A,R7
80F021         
  662: 					break;				
80F021 02FD60            LJMP    ?C0472?SYSPARAMSET
  663: 					case 10:
80F024         ?C0227?SYSPARAMSET:
  664: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[5]/SystemParameter.curUnit,SystemParameter.billV
>> alue[5]%SystemParameter.curUnit );
80F024 90174D            MOV     DPTR,#OutStr
80F027 E0                MOVX    A,@DPTR
80F028 FE                MOV     R6,A
80F029 A3                INC     DPTR
80F02A E0                MOVX    A,@DPTR
80F02B AA06              MOV     R2,AR6
80F02D F9                MOV     R1,A
80F02E 7B00              MOV     R3,#?C?XDATASEG
80F030 C003              PUSH    AR3
80F032 C002              PUSH    AR2
80F034 C001              PUSH    AR1
80F036 7B80              MOV     R3,#BYTE2 080108BH
80F038 7A10              MOV     R2,#HIGH 080108BH
80F03A 798B              MOV     R1,#LOW 080108BH
80F03C 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F03F A5128007B6        ECALL   ?C?PSTXDATA
80F044 900466            MOV     DPTR,#SystemParameter+048H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 602


80F047 E0                MOVX    A,@DPTR
80F048 FC                MOV     R4,A
80F049 A3                INC     DPTR
80F04A E0                MOVX    A,@DPTR
80F04B FD                MOV     R5,A
80F04C 900451            MOV     DPTR,#SystemParameter+033H
80F04F E0                MOVX    A,@DPTR
80F050 FE                MOV     R6,A
80F051 A3                INC     DPTR
80F052 E0                MOVX    A,@DPTR
80F053 FF                MOV     R7,A
80F054 A51280056C        ECALL   ?C?UIDIV
80F059 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F05C EE                MOV     A,R6
80F05D F0                MOVX    @DPTR,A
80F05E A3                INC     DPTR
80F05F EF                MOV     A,R7
80F060 F0                MOVX    @DPTR,A
80F061 900466            MOV     DPTR,#SystemParameter+048H
80F064 E0                MOVX    A,@DPTR
80F065 FC                MOV     R4,A
80F066 A3                INC     DPTR
80F067 E0                MOVX    A,@DPTR
80F068 FD                MOV     R5,A
80F069 900451            MOV     DPTR,#SystemParameter+033H
80F06C E0                MOVX    A,@DPTR
80F06D FE                MOV     R6,A
80F06E A3                INC     DPTR
80F06F E0                MOVX    A,@DPTR
80F070 FF                MOV     R7,A
80F071 A51280056C        ECALL   ?C?UIDIV
80F076 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F079 EC                MOV     A,R4
80F07A F0                MOVX    @DPTR,A
80F07B A3                INC     DPTR
80F07C ED                MOV     A,R5
80F07D         
  665: 					break;
80F07D 02FD60            LJMP    ?C0472?SYSPARAMSET
  666: 					case 100:
80F080         ?C0228?SYSPARAMSET:
  667: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[5]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[5]%SystemParameter.curUnit );
80F080 90174D            MOV     DPTR,#OutStr
80F083 E0                MOVX    A,@DPTR
80F084 FE                MOV     R6,A
80F085 A3                INC     DPTR
80F086 E0                MOVX    A,@DPTR
80F087 AA06              MOV     R2,AR6
80F089 F9                MOV     R1,A
80F08A 7B00              MOV     R3,#?C?XDATASEG
80F08C C003              PUSH    AR3
80F08E C002              PUSH    AR2
80F090 C001              PUSH    AR1
80F092 7B80              MOV     R3,#BYTE2 0801091H
80F094 7A10              MOV     R2,#HIGH 0801091H
80F096 7991              MOV     R1,#LOW 0801091H
80F098 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F09B A5128007B6        ECALL   ?C?PSTXDATA
80F0A0 900466            MOV     DPTR,#SystemParameter+048H
80F0A3 E0                MOVX    A,@DPTR
80F0A4 FC                MOV     R4,A
80F0A5 A3                INC     DPTR
80F0A6 E0                MOVX    A,@DPTR
80F0A7 FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 603


80F0A8 900451            MOV     DPTR,#SystemParameter+033H
80F0AB E0                MOVX    A,@DPTR
80F0AC FE                MOV     R6,A
80F0AD A3                INC     DPTR
80F0AE E0                MOVX    A,@DPTR
80F0AF FF                MOV     R7,A
80F0B0 A51280056C        ECALL   ?C?UIDIV
80F0B5 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F0B8 EE                MOV     A,R6
80F0B9 F0                MOVX    @DPTR,A
80F0BA A3                INC     DPTR
80F0BB EF                MOV     A,R7
80F0BC F0                MOVX    @DPTR,A
80F0BD 900466            MOV     DPTR,#SystemParameter+048H
80F0C0 E0                MOVX    A,@DPTR
80F0C1 FC                MOV     R4,A
80F0C2 A3                INC     DPTR
80F0C3 E0                MOVX    A,@DPTR
80F0C4 FD                MOV     R5,A
80F0C5 900451            MOV     DPTR,#SystemParameter+033H
80F0C8 E0                MOVX    A,@DPTR
80F0C9 FE                MOV     R6,A
80F0CA A3                INC     DPTR
80F0CB E0                MOVX    A,@DPTR
80F0CC FF                MOV     R7,A
80F0CD A51280056C        ECALL   ?C?UIDIV
80F0D2 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F0D5 EC                MOV     A,R4
80F0D6 F0                MOVX    @DPTR,A
80F0D7 A3                INC     DPTR
80F0D8 ED                MOV     A,R5
80F0D9         
  668: 					break;					
80F0D9 02FD60            LJMP    ?C0472?SYSPARAMSET
  669: 				}				
  670: 			}
80F0DC         ?C0224?SYSPARAMSET:
  671: 			else
  672: 			{				
  673: 				//Trace( "\n set IP val \n");
  674: 				j = *len;											
80F0DC 901751            MOV     DPTR,#len
80F0DF E0                MOVX    A,@DPTR
80F0E0 FE                MOV     R6,A
80F0E1 A3                INC     DPTR
80F0E2 E0                MOVX    A,@DPTR
80F0E3 F582              MOV     DPL,A
80F0E5 8E83              MOV     DPH,R6
80F0E7 E0                MOVX    A,@DPTR
80F0E8 901753            MOV     DPTR,#j
80F0EB F0                MOVX    @DPTR,A
  675: 				if( j == 0 )
80F0EC 7003              JNZ     $ + 5H
80F0EE 02FDF6            LJMP    ?C0341?SYSPARAMSET
  676: 					break;
80F0F1         ?C0230?SYSPARAMSET:
  677: 				if( j > 5 )
80F0F1 901753            MOV     DPTR,#j
80F0F4 E0                MOVX    A,@DPTR
80F0F5 D3                SETB    C
80F0F6 9405              SUBB    A,#05H
80F0F8 4003              JC      ?C0231?SYSPARAMSET
  678: 					j = 5;
80F0FA 7405              MOV     A,#05H
80F0FC F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 604


80F0FD         ?C0231?SYSPARAMSET:
  679: 				SystemParameter.billValue[5] = 0;	
80F0FD E4                CLR     A
80F0FE 900451            MOV     DPTR,#SystemParameter+033H
80F101 F0                MOVX    @DPTR,A
80F102 A3                INC     DPTR
80F103 F0                MOVX    @DPTR,A
  680: 				for( i = 0; i < j; i ++ )
80F104 901754            MOV     DPTR,#i
80F107 F0                MOVX    @DPTR,A
80F108         ?C0232?SYSPARAMSET:
80F108 901753            MOV     DPTR,#j
80F10B E0                MOVX    A,@DPTR
80F10C FF                MOV     R7,A
80F10D A3                INC     DPTR
80F10E E0                MOVX    A,@DPTR
80F10F FE                MOV     R6,A
80F110 C3                CLR     C
80F111 9F                SUBB    A,R7
80F112 5044              JNC     ?C0233?SYSPARAMSET
  681: 				{
  682: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80F114 90174F            MOV     DPTR,#InStr
80F117 E0                MOVX    A,@DPTR
80F118 FC                MOV     R4,A
80F119 A3                INC     DPTR
80F11A E0                MOVX    A,@DPTR
80F11B 2E                ADD     A,R6
80F11C F582              MOV     DPL,A
80F11E E4                CLR     A
80F11F 3C                ADDC    A,R4
80F120 F583              MOV     DPH,A
80F122 E0                MOVX    A,@DPTR
80F123 FF                MOV     R7,A
80F124 C3                CLR     C
80F125 9400              SUBB    A,#00H
80F127 4027              JC      ?C0234?SYSPARAMSET
80F129 EF                MOV     A,R7
80F12A D3                SETB    C
80F12B 9409              SUBB    A,#09H
80F12D 5021              JNC     ?C0234?SYSPARAMSET
  683: 						SystemParameter.billValue[5] = SystemParameter.billValue[5]*10 + *( InStr + i );						
80F12F EF                MOV     A,R7
80F130 FB                MOV     R3,A
80F131 7A00              MOV     R2,#00H
80F133 900451            MOV     DPTR,#SystemParameter+033H
80F136 E0                MOVX    A,@DPTR
80F137 FE                MOV     R6,A
80F138 A3                INC     DPTR
80F139 E0                MOVX    A,@DPTR
80F13A FF                MOV     R7,A
80F13B 7C00              MOV     R4,#00H
80F13D 7D0A              MOV     R5,#0AH
80F13F A512800559        ECALL   ?C?IMUL
80F144 EF                MOV     A,R7
80F145 2B                ADD     A,R3
80F146 FF                MOV     R7,A
80F147 EA                MOV     A,R2
80F148 3E                ADDC    A,R6
80F149 900451            MOV     DPTR,#SystemParameter+033H
80F14C F0                MOVX    @DPTR,A
80F14D A3                INC     DPTR
80F14E EF                MOV     A,R7
80F14F F0                MOVX    @DPTR,A
  684: 				}	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 605


80F150         ?C0234?SYSPARAMSET:
80F150 901754            MOV     DPTR,#i
80F153 E0                MOVX    A,@DPTR
80F154 04                INC     A
80F155 F0                MOVX    @DPTR,A
80F156 80B0              SJMP    ?C0232?SYSPARAMSET
80F158         ?C0233?SYSPARAMSET:
  685: 				SystemSave = 1;
80F158 D22E              SETB    SystemSave
  686: 			}			
  687: 		break;
80F15A 02FDF6            LJMP    ?C0341?SYSPARAMSET
  688:         case 20: //# 7 note
80F15D         ?C0236?SYSPARAMSET:
  689:         if( OutInFlag == 0 )
80F15D 301A03            JNB     OutInFlag,$ + 6H
80F160 02F26D            LJMP    ?C0237?SYSPARAMSET
  690: 			{			
  691: 				switch( SystemParameter.curUnit )
80F163 900466            MOV     DPTR,#SystemParameter+048H
80F166 E0                MOVX    A,@DPTR
80F167 FE                MOV     R6,A
80F168 A3                INC     DPTR
80F169 E0                MOVX    A,@DPTR
80F16A FF                MOV     R7,A
80F16B EE                MOV     A,R6
80F16C 6003              JZ      $ + 5H
80F16E 02FDF6            LJMP    ?C0341?SYSPARAMSET
80F171 EF                MOV     A,R7
80F172 24F6              ADD     A,#0F6H
80F174 603F              JZ      ?C0240?SYSPARAMSET
80F176 24A6              ADD     A,#0A6H
80F178 7003              JNZ     $ + 5H
80F17A 02F211            LJMP    ?C0241?SYSPARAMSET
80F17D 2463              ADD     A,#063H
80F17F 6003              JZ      $ + 5H
80F181 02FDF6            LJMP    ?C0341?SYSPARAMSET
  692: 				{
  693: 					case 1:
80F184         ?C0239?SYSPARAMSET:
  694: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[6] );
80F184 90174D            MOV     DPTR,#OutStr
80F187 E0                MOVX    A,@DPTR
80F188 FE                MOV     R6,A
80F189 A3                INC     DPTR
80F18A E0                MOVX    A,@DPTR
80F18B AA06              MOV     R2,AR6
80F18D F9                MOV     R1,A
80F18E 7B00              MOV     R3,#?C?XDATASEG
80F190 C003              PUSH    AR3
80F192 C002              PUSH    AR2
80F194 C001              PUSH    AR1
80F196 7B80              MOV     R3,#BYTE2 0801088H
80F198 7A10              MOV     R2,#HIGH 0801088H
80F19A 7988              MOV     R1,#LOW 0801088H
80F19C 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F19F A5128007B6        ECALL   ?C?PSTXDATA
80F1A4 900453            MOV     DPTR,#SystemParameter+035H
80F1A7 E0                MOVX    A,@DPTR
80F1A8 FF                MOV     R7,A
80F1A9 A3                INC     DPTR
80F1AA E0                MOVX    A,@DPTR
80F1AB 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F1AE CF                XCH     A,R7
80F1AF F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 606


80F1B0 A3                INC     DPTR
80F1B1 EF                MOV     A,R7
80F1B2         
  695: 					break;				
80F1B2 02FD60            LJMP    ?C0472?SYSPARAMSET
  696: 					case 10:
80F1B5         ?C0240?SYSPARAMSET:
  697: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[6]/SystemParameter.curUnit,SystemParameter.billV
>> alue[6]%SystemParameter.curUnit );
80F1B5 90174D            MOV     DPTR,#OutStr
80F1B8 E0                MOVX    A,@DPTR
80F1B9 FE                MOV     R6,A
80F1BA A3                INC     DPTR
80F1BB E0                MOVX    A,@DPTR
80F1BC AA06              MOV     R2,AR6
80F1BE F9                MOV     R1,A
80F1BF 7B00              MOV     R3,#?C?XDATASEG
80F1C1 C003              PUSH    AR3
80F1C3 C002              PUSH    AR2
80F1C5 C001              PUSH    AR1
80F1C7 7B80              MOV     R3,#BYTE2 080108BH
80F1C9 7A10              MOV     R2,#HIGH 080108BH
80F1CB 798B              MOV     R1,#LOW 080108BH
80F1CD 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F1D0 A5128007B6        ECALL   ?C?PSTXDATA
80F1D5 900466            MOV     DPTR,#SystemParameter+048H
80F1D8 E0                MOVX    A,@DPTR
80F1D9 FC                MOV     R4,A
80F1DA A3                INC     DPTR
80F1DB E0                MOVX    A,@DPTR
80F1DC FD                MOV     R5,A
80F1DD 900453            MOV     DPTR,#SystemParameter+035H
80F1E0 E0                MOVX    A,@DPTR
80F1E1 FE                MOV     R6,A
80F1E2 A3                INC     DPTR
80F1E3 E0                MOVX    A,@DPTR
80F1E4 FF                MOV     R7,A
80F1E5 A51280056C        ECALL   ?C?UIDIV
80F1EA 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F1ED EE                MOV     A,R6
80F1EE F0                MOVX    @DPTR,A
80F1EF A3                INC     DPTR
80F1F0 EF                MOV     A,R7
80F1F1 F0                MOVX    @DPTR,A
80F1F2 900466            MOV     DPTR,#SystemParameter+048H
80F1F5 E0                MOVX    A,@DPTR
80F1F6 FC                MOV     R4,A
80F1F7 A3                INC     DPTR
80F1F8 E0                MOVX    A,@DPTR
80F1F9 FD                MOV     R5,A
80F1FA 900453            MOV     DPTR,#SystemParameter+035H
80F1FD E0                MOVX    A,@DPTR
80F1FE FE                MOV     R6,A
80F1FF A3                INC     DPTR
80F200 E0                MOVX    A,@DPTR
80F201 FF                MOV     R7,A
80F202 A51280056C        ECALL   ?C?UIDIV
80F207 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F20A EC                MOV     A,R4
80F20B F0                MOVX    @DPTR,A
80F20C A3                INC     DPTR
80F20D ED                MOV     A,R5
80F20E         
  698: 					break;
80F20E 02FD60            LJMP    ?C0472?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 607


  699: 					case 100:
80F211         ?C0241?SYSPARAMSET:
  700: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[6]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[6]%SystemParameter.curUnit );
80F211 90174D            MOV     DPTR,#OutStr
80F214 E0                MOVX    A,@DPTR
80F215 FE                MOV     R6,A
80F216 A3                INC     DPTR
80F217 E0                MOVX    A,@DPTR
80F218 AA06              MOV     R2,AR6
80F21A F9                MOV     R1,A
80F21B 7B00              MOV     R3,#?C?XDATASEG
80F21D C003              PUSH    AR3
80F21F C002              PUSH    AR2
80F221 C001              PUSH    AR1
80F223 7B80              MOV     R3,#BYTE2 0801091H
80F225 7A10              MOV     R2,#HIGH 0801091H
80F227 7991              MOV     R1,#LOW 0801091H
80F229 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F22C A5128007B6        ECALL   ?C?PSTXDATA
80F231 900466            MOV     DPTR,#SystemParameter+048H
80F234 E0                MOVX    A,@DPTR
80F235 FC                MOV     R4,A
80F236 A3                INC     DPTR
80F237 E0                MOVX    A,@DPTR
80F238 FD                MOV     R5,A
80F239 900453            MOV     DPTR,#SystemParameter+035H
80F23C E0                MOVX    A,@DPTR
80F23D FE                MOV     R6,A
80F23E A3                INC     DPTR
80F23F E0                MOVX    A,@DPTR
80F240 FF                MOV     R7,A
80F241 A51280056C        ECALL   ?C?UIDIV
80F246 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F249 EE                MOV     A,R6
80F24A F0                MOVX    @DPTR,A
80F24B A3                INC     DPTR
80F24C EF                MOV     A,R7
80F24D F0                MOVX    @DPTR,A
80F24E 900466            MOV     DPTR,#SystemParameter+048H
80F251 E0                MOVX    A,@DPTR
80F252 FC                MOV     R4,A
80F253 A3                INC     DPTR
80F254 E0                MOVX    A,@DPTR
80F255 FD                MOV     R5,A
80F256 900453            MOV     DPTR,#SystemParameter+035H
80F259 E0                MOVX    A,@DPTR
80F25A FE                MOV     R6,A
80F25B A3                INC     DPTR
80F25C E0                MOVX    A,@DPTR
80F25D FF                MOV     R7,A
80F25E A51280056C        ECALL   ?C?UIDIV
80F263 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F266 EC                MOV     A,R4
80F267 F0                MOVX    @DPTR,A
80F268 A3                INC     DPTR
80F269 ED                MOV     A,R5
80F26A         
  701: 					break;					
80F26A 02FD60            LJMP    ?C0472?SYSPARAMSET
  702: 				}				
  703: 			}
80F26D         ?C0237?SYSPARAMSET:
  704: 			else
  705: 			{				
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 608


  706: 				//Trace( "\n set IP val \n");
  707: 				j = *len;											
80F26D 901751            MOV     DPTR,#len
80F270 E0                MOVX    A,@DPTR
80F271 FE                MOV     R6,A
80F272 A3                INC     DPTR
80F273 E0                MOVX    A,@DPTR
80F274 F582              MOV     DPL,A
80F276 8E83              MOV     DPH,R6
80F278 E0                MOVX    A,@DPTR
80F279 901753            MOV     DPTR,#j
80F27C F0                MOVX    @DPTR,A
  708: 				if( j == 0 )
80F27D 7003              JNZ     $ + 5H
80F27F 02FDF6            LJMP    ?C0341?SYSPARAMSET
  709: 					break;
80F282         ?C0243?SYSPARAMSET:
  710: 				if( j > 5 )
80F282 901753            MOV     DPTR,#j
80F285 E0                MOVX    A,@DPTR
80F286 D3                SETB    C
80F287 9405              SUBB    A,#05H
80F289 4003              JC      ?C0244?SYSPARAMSET
  711: 					j = 5;
80F28B 7405              MOV     A,#05H
80F28D F0                MOVX    @DPTR,A
80F28E         ?C0244?SYSPARAMSET:
  712: 				SystemParameter.billValue[6] = 0;	
80F28E E4                CLR     A
80F28F 900453            MOV     DPTR,#SystemParameter+035H
80F292 F0                MOVX    @DPTR,A
80F293 A3                INC     DPTR
80F294 F0                MOVX    @DPTR,A
  713: 				for( i = 0; i < j; i ++ )
80F295 901754            MOV     DPTR,#i
80F298 F0                MOVX    @DPTR,A
80F299         ?C0245?SYSPARAMSET:
80F299 901753            MOV     DPTR,#j
80F29C E0                MOVX    A,@DPTR
80F29D FF                MOV     R7,A
80F29E A3                INC     DPTR
80F29F E0                MOVX    A,@DPTR
80F2A0 FE                MOV     R6,A
80F2A1 C3                CLR     C
80F2A2 9F                SUBB    A,R7
80F2A3 5044              JNC     ?C0246?SYSPARAMSET
  714: 				{
  715: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80F2A5 90174F            MOV     DPTR,#InStr
80F2A8 E0                MOVX    A,@DPTR
80F2A9 FC                MOV     R4,A
80F2AA A3                INC     DPTR
80F2AB E0                MOVX    A,@DPTR
80F2AC 2E                ADD     A,R6
80F2AD F582              MOV     DPL,A
80F2AF E4                CLR     A
80F2B0 3C                ADDC    A,R4
80F2B1 F583              MOV     DPH,A
80F2B3 E0                MOVX    A,@DPTR
80F2B4 FF                MOV     R7,A
80F2B5 C3                CLR     C
80F2B6 9400              SUBB    A,#00H
80F2B8 4027              JC      ?C0247?SYSPARAMSET
80F2BA EF                MOV     A,R7
80F2BB D3                SETB    C
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 609


80F2BC 9409              SUBB    A,#09H
80F2BE 5021              JNC     ?C0247?SYSPARAMSET
  716: 						SystemParameter.billValue[6] = SystemParameter.billValue[6]*10 + *( InStr + i );						
80F2C0 EF                MOV     A,R7
80F2C1 FB                MOV     R3,A
80F2C2 7A00              MOV     R2,#00H
80F2C4 900453            MOV     DPTR,#SystemParameter+035H
80F2C7 E0                MOVX    A,@DPTR
80F2C8 FE                MOV     R6,A
80F2C9 A3                INC     DPTR
80F2CA E0                MOVX    A,@DPTR
80F2CB FF                MOV     R7,A
80F2CC 7C00              MOV     R4,#00H
80F2CE 7D0A              MOV     R5,#0AH
80F2D0 A512800559        ECALL   ?C?IMUL
80F2D5 EF                MOV     A,R7
80F2D6 2B                ADD     A,R3
80F2D7 FF                MOV     R7,A
80F2D8 EA                MOV     A,R2
80F2D9 3E                ADDC    A,R6
80F2DA 900453            MOV     DPTR,#SystemParameter+035H
80F2DD F0                MOVX    @DPTR,A
80F2DE A3                INC     DPTR
80F2DF EF                MOV     A,R7
80F2E0 F0                MOVX    @DPTR,A
  717: 				}	
80F2E1         ?C0247?SYSPARAMSET:
80F2E1 901754            MOV     DPTR,#i
80F2E4 E0                MOVX    A,@DPTR
80F2E5 04                INC     A
80F2E6 F0                MOVX    @DPTR,A
80F2E7 80B0              SJMP    ?C0245?SYSPARAMSET
80F2E9         ?C0246?SYSPARAMSET:
  718: 				SystemSave = 1;
80F2E9 D22E              SETB    SystemSave
  719: 			}			
  720: 		break;
80F2EB 02FDF6            LJMP    ?C0341?SYSPARAMSET
  721:         case 21: //# 8 note
80F2EE         ?C0249?SYSPARAMSET:
  722:         if( OutInFlag == 0 )
80F2EE 301A03            JNB     OutInFlag,$ + 6H
80F2F1 02F3FE            LJMP    ?C0250?SYSPARAMSET
  723: 			{			
  724: 				switch( SystemParameter.curUnit )
80F2F4 900466            MOV     DPTR,#SystemParameter+048H
80F2F7 E0                MOVX    A,@DPTR
80F2F8 FE                MOV     R6,A
80F2F9 A3                INC     DPTR
80F2FA E0                MOVX    A,@DPTR
80F2FB FF                MOV     R7,A
80F2FC EE                MOV     A,R6
80F2FD 6003              JZ      $ + 5H
80F2FF 02FDF6            LJMP    ?C0341?SYSPARAMSET
80F302 EF                MOV     A,R7
80F303 24F6              ADD     A,#0F6H
80F305 603F              JZ      ?C0253?SYSPARAMSET
80F307 24A6              ADD     A,#0A6H
80F309 7003              JNZ     $ + 5H
80F30B 02F3A2            LJMP    ?C0254?SYSPARAMSET
80F30E 2463              ADD     A,#063H
80F310 6003              JZ      $ + 5H
80F312 02FDF6            LJMP    ?C0341?SYSPARAMSET
  725: 				{
  726: 					case 1:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 610


80F315         ?C0252?SYSPARAMSET:
  727: 						*len = sprintf( OutStr, "%u", SystemParameter.billValue[7] );
80F315 90174D            MOV     DPTR,#OutStr
80F318 E0                MOVX    A,@DPTR
80F319 FE                MOV     R6,A
80F31A A3                INC     DPTR
80F31B E0                MOVX    A,@DPTR
80F31C AA06              MOV     R2,AR6
80F31E F9                MOV     R1,A
80F31F 7B00              MOV     R3,#?C?XDATASEG
80F321 C003              PUSH    AR3
80F323 C002              PUSH    AR2
80F325 C001              PUSH    AR1
80F327 7B80              MOV     R3,#BYTE2 0801088H
80F329 7A10              MOV     R2,#HIGH 0801088H
80F32B 7988              MOV     R1,#LOW 0801088H
80F32D 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F330 A5128007B6        ECALL   ?C?PSTXDATA
80F335 900455            MOV     DPTR,#SystemParameter+037H
80F338 E0                MOVX    A,@DPTR
80F339 FF                MOV     R7,A
80F33A A3                INC     DPTR
80F33B E0                MOVX    A,@DPTR
80F33C 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F33F CF                XCH     A,R7
80F340 F0                MOVX    @DPTR,A
80F341 A3                INC     DPTR
80F342 EF                MOV     A,R7
80F343         
  728: 					break;				
80F343 02FD60            LJMP    ?C0472?SYSPARAMSET
  729: 					case 10:
80F346         ?C0253?SYSPARAMSET:
  730: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.billValue[7]/SystemParameter.curUnit,SystemParameter.billV
>> alue[7]%SystemParameter.curUnit );
80F346 90174D            MOV     DPTR,#OutStr
80F349 E0                MOVX    A,@DPTR
80F34A FE                MOV     R6,A
80F34B A3                INC     DPTR
80F34C E0                MOVX    A,@DPTR
80F34D AA06              MOV     R2,AR6
80F34F F9                MOV     R1,A
80F350 7B00              MOV     R3,#?C?XDATASEG
80F352 C003              PUSH    AR3
80F354 C002              PUSH    AR2
80F356 C001              PUSH    AR1
80F358 7B80              MOV     R3,#BYTE2 080108BH
80F35A 7A10              MOV     R2,#HIGH 080108BH
80F35C 798B              MOV     R1,#LOW 080108BH
80F35E 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F361 A5128007B6        ECALL   ?C?PSTXDATA
80F366 900466            MOV     DPTR,#SystemParameter+048H
80F369 E0                MOVX    A,@DPTR
80F36A FC                MOV     R4,A
80F36B A3                INC     DPTR
80F36C E0                MOVX    A,@DPTR
80F36D FD                MOV     R5,A
80F36E 900455            MOV     DPTR,#SystemParameter+037H
80F371 E0                MOVX    A,@DPTR
80F372 FE                MOV     R6,A
80F373 A3                INC     DPTR
80F374 E0                MOVX    A,@DPTR
80F375 FF                MOV     R7,A
80F376 A51280056C        ECALL   ?C?UIDIV
80F37B 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 611


80F37E EE                MOV     A,R6
80F37F F0                MOVX    @DPTR,A
80F380 A3                INC     DPTR
80F381 EF                MOV     A,R7
80F382 F0                MOVX    @DPTR,A
80F383 900466            MOV     DPTR,#SystemParameter+048H
80F386 E0                MOVX    A,@DPTR
80F387 FC                MOV     R4,A
80F388 A3                INC     DPTR
80F389 E0                MOVX    A,@DPTR
80F38A FD                MOV     R5,A
80F38B 900455            MOV     DPTR,#SystemParameter+037H
80F38E E0                MOVX    A,@DPTR
80F38F FE                MOV     R6,A
80F390 A3                INC     DPTR
80F391 E0                MOVX    A,@DPTR
80F392 FF                MOV     R7,A
80F393 A51280056C        ECALL   ?C?UIDIV
80F398 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F39B EC                MOV     A,R4
80F39C F0                MOVX    @DPTR,A
80F39D A3                INC     DPTR
80F39E ED                MOV     A,R5
80F39F         
  731: 					break;
80F39F 02FD60            LJMP    ?C0472?SYSPARAMSET
  732: 					case 100:
80F3A2         ?C0254?SYSPARAMSET:
  733: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.billValue[7]/SystemParameter.curUnit,SystemParameter.bil
>> lValue[7]%SystemParameter.curUnit );
80F3A2 90174D            MOV     DPTR,#OutStr
80F3A5 E0                MOVX    A,@DPTR
80F3A6 FE                MOV     R6,A
80F3A7 A3                INC     DPTR
80F3A8 E0                MOVX    A,@DPTR
80F3A9 AA06              MOV     R2,AR6
80F3AB F9                MOV     R1,A
80F3AC 7B00              MOV     R3,#?C?XDATASEG
80F3AE C003              PUSH    AR3
80F3B0 C002              PUSH    AR2
80F3B2 C001              PUSH    AR1
80F3B4 7B80              MOV     R3,#BYTE2 0801091H
80F3B6 7A10              MOV     R2,#HIGH 0801091H
80F3B8 7991              MOV     R1,#LOW 0801091H
80F3BA 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F3BD A5128007B6        ECALL   ?C?PSTXDATA
80F3C2 900466            MOV     DPTR,#SystemParameter+048H
80F3C5 E0                MOVX    A,@DPTR
80F3C6 FC                MOV     R4,A
80F3C7 A3                INC     DPTR
80F3C8 E0                MOVX    A,@DPTR
80F3C9 FD                MOV     R5,A
80F3CA 900455            MOV     DPTR,#SystemParameter+037H
80F3CD E0                MOVX    A,@DPTR
80F3CE FE                MOV     R6,A
80F3CF A3                INC     DPTR
80F3D0 E0                MOVX    A,@DPTR
80F3D1 FF                MOV     R7,A
80F3D2 A51280056C        ECALL   ?C?UIDIV
80F3D7 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F3DA EE                MOV     A,R6
80F3DB F0                MOVX    @DPTR,A
80F3DC A3                INC     DPTR
80F3DD EF                MOV     A,R7
80F3DE F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 612


80F3DF 900466            MOV     DPTR,#SystemParameter+048H
80F3E2 E0                MOVX    A,@DPTR
80F3E3 FC                MOV     R4,A
80F3E4 A3                INC     DPTR
80F3E5 E0                MOVX    A,@DPTR
80F3E6 FD                MOV     R5,A
80F3E7 900455            MOV     DPTR,#SystemParameter+037H
80F3EA E0                MOVX    A,@DPTR
80F3EB FE                MOV     R6,A
80F3EC A3                INC     DPTR
80F3ED E0                MOVX    A,@DPTR
80F3EE FF                MOV     R7,A
80F3EF A51280056C        ECALL   ?C?UIDIV
80F3F4 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F3F7 EC                MOV     A,R4
80F3F8 F0                MOVX    @DPTR,A
80F3F9 A3                INC     DPTR
80F3FA ED                MOV     A,R5
80F3FB         
  734: 					break;					
80F3FB 02FD60            LJMP    ?C0472?SYSPARAMSET
  735: 				}				
  736: 			}
80F3FE         ?C0250?SYSPARAMSET:
  737: 			else
  738: 			{				
  739: 				//Trace( "\n set IP val \n");
  740: 				j = *len;											
80F3FE 901751            MOV     DPTR,#len
80F401 E0                MOVX    A,@DPTR
80F402 FE                MOV     R6,A
80F403 A3                INC     DPTR
80F404 E0                MOVX    A,@DPTR
80F405 F582              MOV     DPL,A
80F407 8E83              MOV     DPH,R6
80F409 E0                MOVX    A,@DPTR
80F40A 901753            MOV     DPTR,#j
80F40D F0                MOVX    @DPTR,A
  741: 				if( j == 0 )
80F40E 7003              JNZ     $ + 5H
80F410 02FDF6            LJMP    ?C0341?SYSPARAMSET
  742: 					break;
80F413         ?C0256?SYSPARAMSET:
  743: 				if( j > 5 )
80F413 901753            MOV     DPTR,#j
80F416 E0                MOVX    A,@DPTR
80F417 D3                SETB    C
80F418 9405              SUBB    A,#05H
80F41A 4003              JC      ?C0257?SYSPARAMSET
  744: 					j = 5;
80F41C 7405              MOV     A,#05H
80F41E F0                MOVX    @DPTR,A
80F41F         ?C0257?SYSPARAMSET:
  745: 				SystemParameter.billValue[7] = 0;	
80F41F E4                CLR     A
80F420 900455            MOV     DPTR,#SystemParameter+037H
80F423 F0                MOVX    @DPTR,A
80F424 A3                INC     DPTR
80F425 F0                MOVX    @DPTR,A
  746: 				for( i = 0; i < j; i ++ )
80F426 901754            MOV     DPTR,#i
80F429 F0                MOVX    @DPTR,A
80F42A         ?C0258?SYSPARAMSET:
80F42A 901753            MOV     DPTR,#j
80F42D E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 613


80F42E FF                MOV     R7,A
80F42F A3                INC     DPTR
80F430 E0                MOVX    A,@DPTR
80F431 FE                MOV     R6,A
80F432 C3                CLR     C
80F433 9F                SUBB    A,R7
80F434 5044              JNC     ?C0259?SYSPARAMSET
  747: 				{
  748: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80F436 90174F            MOV     DPTR,#InStr
80F439 E0                MOVX    A,@DPTR
80F43A FC                MOV     R4,A
80F43B A3                INC     DPTR
80F43C E0                MOVX    A,@DPTR
80F43D 2E                ADD     A,R6
80F43E F582              MOV     DPL,A
80F440 E4                CLR     A
80F441 3C                ADDC    A,R4
80F442 F583              MOV     DPH,A
80F444 E0                MOVX    A,@DPTR
80F445 FF                MOV     R7,A
80F446 C3                CLR     C
80F447 9400              SUBB    A,#00H
80F449 4027              JC      ?C0260?SYSPARAMSET
80F44B EF                MOV     A,R7
80F44C D3                SETB    C
80F44D 9409              SUBB    A,#09H
80F44F 5021              JNC     ?C0260?SYSPARAMSET
  749: 						SystemParameter.billValue[7] = SystemParameter.billValue[7]*10 + *( InStr + i );						
80F451 EF                MOV     A,R7
80F452 FB                MOV     R3,A
80F453 7A00              MOV     R2,#00H
80F455 900455            MOV     DPTR,#SystemParameter+037H
80F458 E0                MOVX    A,@DPTR
80F459 FE                MOV     R6,A
80F45A A3                INC     DPTR
80F45B E0                MOVX    A,@DPTR
80F45C FF                MOV     R7,A
80F45D 7C00              MOV     R4,#00H
80F45F 7D0A              MOV     R5,#0AH
80F461 A512800559        ECALL   ?C?IMUL
80F466 EF                MOV     A,R7
80F467 2B                ADD     A,R3
80F468 FF                MOV     R7,A
80F469 EA                MOV     A,R2
80F46A 3E                ADDC    A,R6
80F46B 900455            MOV     DPTR,#SystemParameter+037H
80F46E F0                MOVX    @DPTR,A
80F46F A3                INC     DPTR
80F470 EF                MOV     A,R7
80F471 F0                MOVX    @DPTR,A
  750: 				}	
80F472         ?C0260?SYSPARAMSET:
80F472 901754            MOV     DPTR,#i
80F475 E0                MOVX    A,@DPTR
80F476 04                INC     A
80F477 F0                MOVX    @DPTR,A
80F478 80B0              SJMP    ?C0258?SYSPARAMSET
80F47A         ?C0259?SYSPARAMSET:
  751: 				SystemSave = 1;
80F47A D22E              SETB    SystemSave
  752: 			}			
  753: 		break;
80F47C 02FDF6            LJMP    ?C0341?SYSPARAMSET
  754:         // Coin value begin with 22
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 614


  755:         case 22: //# 1 coin
80F47F         ?C0262?SYSPARAMSET:
  756:         if( OutInFlag == 0 )
80F47F 301A03            JNB     OutInFlag,$ + 6H
80F482 02F58F            LJMP    ?C0263?SYSPARAMSET
  757: 			{			
  758: 				switch( SystemParameter.curUnit )
80F485 900466            MOV     DPTR,#SystemParameter+048H
80F488 E0                MOVX    A,@DPTR
80F489 FE                MOV     R6,A
80F48A A3                INC     DPTR
80F48B E0                MOVX    A,@DPTR
80F48C FF                MOV     R7,A
80F48D EE                MOV     A,R6
80F48E 6003              JZ      $ + 5H
80F490 02FDF6            LJMP    ?C0341?SYSPARAMSET
80F493 EF                MOV     A,R7
80F494 24F6              ADD     A,#0F6H
80F496 603F              JZ      ?C0266?SYSPARAMSET
80F498 24A6              ADD     A,#0A6H
80F49A 7003              JNZ     $ + 5H
80F49C 02F533            LJMP    ?C0267?SYSPARAMSET
80F49F 2463              ADD     A,#063H
80F4A1 6003              JZ      $ + 5H
80F4A3 02FDF6            LJMP    ?C0341?SYSPARAMSET
  759: 				{
  760: 					case 1:
80F4A6         ?C0265?SYSPARAMSET:
  761: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[0] );
80F4A6 90174D            MOV     DPTR,#OutStr
80F4A9 E0                MOVX    A,@DPTR
80F4AA FE                MOV     R6,A
80F4AB A3                INC     DPTR
80F4AC E0                MOVX    A,@DPTR
80F4AD AA06              MOV     R2,AR6
80F4AF F9                MOV     R1,A
80F4B0 7B00              MOV     R3,#?C?XDATASEG
80F4B2 C003              PUSH    AR3
80F4B4 C002              PUSH    AR2
80F4B6 C001              PUSH    AR1
80F4B8 7B80              MOV     R3,#BYTE2 0801088H
80F4BA 7A10              MOV     R2,#HIGH 0801088H
80F4BC 7988              MOV     R1,#LOW 0801088H
80F4BE 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F4C1 A5128007B6        ECALL   ?C?PSTXDATA
80F4C6 900457            MOV     DPTR,#SystemParameter+039H
80F4C9 E0                MOVX    A,@DPTR
80F4CA FF                MOV     R7,A
80F4CB A3                INC     DPTR
80F4CC E0                MOVX    A,@DPTR
80F4CD 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F4D0 CF                XCH     A,R7
80F4D1 F0                MOVX    @DPTR,A
80F4D2 A3                INC     DPTR
80F4D3 EF                MOV     A,R7
80F4D4         
  762: 					break;				
80F4D4 02FD60            LJMP    ?C0472?SYSPARAMSET
  763: 					case 10:
80F4D7         ?C0266?SYSPARAMSET:
  764: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[0]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[0]%SystemParameter.curUnit );
80F4D7 90174D            MOV     DPTR,#OutStr
80F4DA E0                MOVX    A,@DPTR
80F4DB FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 615


80F4DC A3                INC     DPTR
80F4DD E0                MOVX    A,@DPTR
80F4DE AA06              MOV     R2,AR6
80F4E0 F9                MOV     R1,A
80F4E1 7B00              MOV     R3,#?C?XDATASEG
80F4E3 C003              PUSH    AR3
80F4E5 C002              PUSH    AR2
80F4E7 C001              PUSH    AR1
80F4E9 7B80              MOV     R3,#BYTE2 080108BH
80F4EB 7A10              MOV     R2,#HIGH 080108BH
80F4ED 798B              MOV     R1,#LOW 080108BH
80F4EF 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F4F2 A5128007B6        ECALL   ?C?PSTXDATA
80F4F7 900466            MOV     DPTR,#SystemParameter+048H
80F4FA E0                MOVX    A,@DPTR
80F4FB FC                MOV     R4,A
80F4FC A3                INC     DPTR
80F4FD E0                MOVX    A,@DPTR
80F4FE FD                MOV     R5,A
80F4FF 900457            MOV     DPTR,#SystemParameter+039H
80F502 E0                MOVX    A,@DPTR
80F503 FE                MOV     R6,A
80F504 A3                INC     DPTR
80F505 E0                MOVX    A,@DPTR
80F506 FF                MOV     R7,A
80F507 A51280056C        ECALL   ?C?UIDIV
80F50C 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F50F EE                MOV     A,R6
80F510 F0                MOVX    @DPTR,A
80F511 A3                INC     DPTR
80F512 EF                MOV     A,R7
80F513 F0                MOVX    @DPTR,A
80F514 900466            MOV     DPTR,#SystemParameter+048H
80F517 E0                MOVX    A,@DPTR
80F518 FC                MOV     R4,A
80F519 A3                INC     DPTR
80F51A E0                MOVX    A,@DPTR
80F51B FD                MOV     R5,A
80F51C 900457            MOV     DPTR,#SystemParameter+039H
80F51F E0                MOVX    A,@DPTR
80F520 FE                MOV     R6,A
80F521 A3                INC     DPTR
80F522 E0                MOVX    A,@DPTR
80F523 FF                MOV     R7,A
80F524 A51280056C        ECALL   ?C?UIDIV
80F529 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F52C EC                MOV     A,R4
80F52D F0                MOVX    @DPTR,A
80F52E A3                INC     DPTR
80F52F ED                MOV     A,R5
80F530         
  765: 					break;
80F530 02FD60            LJMP    ?C0472?SYSPARAMSET
  766: 					case 100:
80F533         ?C0267?SYSPARAMSET:
  767: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[0]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[0]%SystemParameter.curUnit );
80F533 90174D            MOV     DPTR,#OutStr
80F536 E0                MOVX    A,@DPTR
80F537 FE                MOV     R6,A
80F538 A3                INC     DPTR
80F539 E0                MOVX    A,@DPTR
80F53A AA06              MOV     R2,AR6
80F53C F9                MOV     R1,A
80F53D 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 616


80F53F C003              PUSH    AR3
80F541 C002              PUSH    AR2
80F543 C001              PUSH    AR1
80F545 7B80              MOV     R3,#BYTE2 0801091H
80F547 7A10              MOV     R2,#HIGH 0801091H
80F549 7991              MOV     R1,#LOW 0801091H
80F54B 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F54E A5128007B6        ECALL   ?C?PSTXDATA
80F553 900466            MOV     DPTR,#SystemParameter+048H
80F556 E0                MOVX    A,@DPTR
80F557 FC                MOV     R4,A
80F558 A3                INC     DPTR
80F559 E0                MOVX    A,@DPTR
80F55A FD                MOV     R5,A
80F55B 900457            MOV     DPTR,#SystemParameter+039H
80F55E E0                MOVX    A,@DPTR
80F55F FE                MOV     R6,A
80F560 A3                INC     DPTR
80F561 E0                MOVX    A,@DPTR
80F562 FF                MOV     R7,A
80F563 A51280056C        ECALL   ?C?UIDIV
80F568 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F56B EE                MOV     A,R6
80F56C F0                MOVX    @DPTR,A
80F56D A3                INC     DPTR
80F56E EF                MOV     A,R7
80F56F F0                MOVX    @DPTR,A
80F570 900466            MOV     DPTR,#SystemParameter+048H
80F573 E0                MOVX    A,@DPTR
80F574 FC                MOV     R4,A
80F575 A3                INC     DPTR
80F576 E0                MOVX    A,@DPTR
80F577 FD                MOV     R5,A
80F578 900457            MOV     DPTR,#SystemParameter+039H
80F57B E0                MOVX    A,@DPTR
80F57C FE                MOV     R6,A
80F57D A3                INC     DPTR
80F57E E0                MOVX    A,@DPTR
80F57F FF                MOV     R7,A
80F580 A51280056C        ECALL   ?C?UIDIV
80F585 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F588 EC                MOV     A,R4
80F589 F0                MOVX    @DPTR,A
80F58A A3                INC     DPTR
80F58B ED                MOV     A,R5
80F58C         
  768: 					break;					
80F58C 02FD60            LJMP    ?C0472?SYSPARAMSET
  769: 				}				
  770: 			}
80F58F         ?C0263?SYSPARAMSET:
  771: 			else
  772: 			{				
  773: 				//Trace( "\n set IP val \n");
  774: 				j = *len;											
80F58F 901751            MOV     DPTR,#len
80F592 E0                MOVX    A,@DPTR
80F593 FE                MOV     R6,A
80F594 A3                INC     DPTR
80F595 E0                MOVX    A,@DPTR
80F596 F582              MOV     DPL,A
80F598 8E83              MOV     DPH,R6
80F59A E0                MOVX    A,@DPTR
80F59B 901753            MOV     DPTR,#j
80F59E F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 617


  775: 				if( j == 0 )
80F59F 7003              JNZ     $ + 5H
80F5A1 02FDF6            LJMP    ?C0341?SYSPARAMSET
  776: 					break;
80F5A4         ?C0269?SYSPARAMSET:
  777: 				if( j > 5 )
80F5A4 901753            MOV     DPTR,#j
80F5A7 E0                MOVX    A,@DPTR
80F5A8 D3                SETB    C
80F5A9 9405              SUBB    A,#05H
80F5AB 4003              JC      ?C0270?SYSPARAMSET
  778: 					j = 5;
80F5AD 7405              MOV     A,#05H
80F5AF F0                MOVX    @DPTR,A
80F5B0         ?C0270?SYSPARAMSET:
  779: 				SystemParameter.coinValue[0] = 0;	
80F5B0 E4                CLR     A
80F5B1 900457            MOV     DPTR,#SystemParameter+039H
80F5B4 F0                MOVX    @DPTR,A
80F5B5 A3                INC     DPTR
80F5B6 F0                MOVX    @DPTR,A
  780: 				for( i = 0; i < j; i ++ )
80F5B7 901754            MOV     DPTR,#i
80F5BA F0                MOVX    @DPTR,A
80F5BB         ?C0271?SYSPARAMSET:
80F5BB 901753            MOV     DPTR,#j
80F5BE E0                MOVX    A,@DPTR
80F5BF FF                MOV     R7,A
80F5C0 A3                INC     DPTR
80F5C1 E0                MOVX    A,@DPTR
80F5C2 FE                MOV     R6,A
80F5C3 C3                CLR     C
80F5C4 9F                SUBB    A,R7
80F5C5 5044              JNC     ?C0272?SYSPARAMSET
  781: 				{
  782: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80F5C7 90174F            MOV     DPTR,#InStr
80F5CA E0                MOVX    A,@DPTR
80F5CB FC                MOV     R4,A
80F5CC A3                INC     DPTR
80F5CD E0                MOVX    A,@DPTR
80F5CE 2E                ADD     A,R6
80F5CF F582              MOV     DPL,A
80F5D1 E4                CLR     A
80F5D2 3C                ADDC    A,R4
80F5D3 F583              MOV     DPH,A
80F5D5 E0                MOVX    A,@DPTR
80F5D6 FF                MOV     R7,A
80F5D7 C3                CLR     C
80F5D8 9400              SUBB    A,#00H
80F5DA 4027              JC      ?C0273?SYSPARAMSET
80F5DC EF                MOV     A,R7
80F5DD D3                SETB    C
80F5DE 9409              SUBB    A,#09H
80F5E0 5021              JNC     ?C0273?SYSPARAMSET
  783: 						SystemParameter.coinValue[0] = SystemParameter.coinValue[0]*10 + *( InStr + i );						
80F5E2 EF                MOV     A,R7
80F5E3 FB                MOV     R3,A
80F5E4 7A00              MOV     R2,#00H
80F5E6 900457            MOV     DPTR,#SystemParameter+039H
80F5E9 E0                MOVX    A,@DPTR
80F5EA FE                MOV     R6,A
80F5EB A3                INC     DPTR
80F5EC E0                MOVX    A,@DPTR
80F5ED FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 618


80F5EE 7C00              MOV     R4,#00H
80F5F0 7D0A              MOV     R5,#0AH
80F5F2 A512800559        ECALL   ?C?IMUL
80F5F7 EF                MOV     A,R7
80F5F8 2B                ADD     A,R3
80F5F9 FF                MOV     R7,A
80F5FA EA                MOV     A,R2
80F5FB 3E                ADDC    A,R6
80F5FC 900457            MOV     DPTR,#SystemParameter+039H
80F5FF F0                MOVX    @DPTR,A
80F600 A3                INC     DPTR
80F601 EF                MOV     A,R7
80F602 F0                MOVX    @DPTR,A
  784: 				}	
80F603         ?C0273?SYSPARAMSET:
80F603 901754            MOV     DPTR,#i
80F606 E0                MOVX    A,@DPTR
80F607 04                INC     A
80F608 F0                MOVX    @DPTR,A
80F609 80B0              SJMP    ?C0271?SYSPARAMSET
80F60B         ?C0272?SYSPARAMSET:
  785: 				SystemSave = 1;
80F60B D22E              SETB    SystemSave
  786: 			}			
  787: 		break;
80F60D 02FDF6            LJMP    ?C0341?SYSPARAMSET
  788: 		case 23: //# 2 coin
80F610         ?C0275?SYSPARAMSET:
  789:         if( OutInFlag == 0 )
80F610 301A03            JNB     OutInFlag,$ + 6H
80F613 02F720            LJMP    ?C0276?SYSPARAMSET
  790: 			{			
  791: 				switch( SystemParameter.curUnit )
80F616 900466            MOV     DPTR,#SystemParameter+048H
80F619 E0                MOVX    A,@DPTR
80F61A FE                MOV     R6,A
80F61B A3                INC     DPTR
80F61C E0                MOVX    A,@DPTR
80F61D FF                MOV     R7,A
80F61E EE                MOV     A,R6
80F61F 6003              JZ      $ + 5H
80F621 02FDF6            LJMP    ?C0341?SYSPARAMSET
80F624 EF                MOV     A,R7
80F625 24F6              ADD     A,#0F6H
80F627 603F              JZ      ?C0279?SYSPARAMSET
80F629 24A6              ADD     A,#0A6H
80F62B 7003              JNZ     $ + 5H
80F62D 02F6C4            LJMP    ?C0280?SYSPARAMSET
80F630 2463              ADD     A,#063H
80F632 6003              JZ      $ + 5H
80F634 02FDF6            LJMP    ?C0341?SYSPARAMSET
  792: 				{
  793: 					case 1:
80F637         ?C0278?SYSPARAMSET:
  794: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[1] );
80F637 90174D            MOV     DPTR,#OutStr
80F63A E0                MOVX    A,@DPTR
80F63B FE                MOV     R6,A
80F63C A3                INC     DPTR
80F63D E0                MOVX    A,@DPTR
80F63E AA06              MOV     R2,AR6
80F640 F9                MOV     R1,A
80F641 7B00              MOV     R3,#?C?XDATASEG
80F643 C003              PUSH    AR3
80F645 C002              PUSH    AR2
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 619


80F647 C001              PUSH    AR1
80F649 7B80              MOV     R3,#BYTE2 0801088H
80F64B 7A10              MOV     R2,#HIGH 0801088H
80F64D 7988              MOV     R1,#LOW 0801088H
80F64F 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F652 A5128007B6        ECALL   ?C?PSTXDATA
80F657 900459            MOV     DPTR,#SystemParameter+03BH
80F65A E0                MOVX    A,@DPTR
80F65B FF                MOV     R7,A
80F65C A3                INC     DPTR
80F65D E0                MOVX    A,@DPTR
80F65E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F661 CF                XCH     A,R7
80F662 F0                MOVX    @DPTR,A
80F663 A3                INC     DPTR
80F664 EF                MOV     A,R7
80F665         
  795: 					break;				
80F665 02FD60            LJMP    ?C0472?SYSPARAMSET
  796: 					case 10:
80F668         ?C0279?SYSPARAMSET:
  797: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[1]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[1]%SystemParameter.curUnit );
80F668 90174D            MOV     DPTR,#OutStr
80F66B E0                MOVX    A,@DPTR
80F66C FE                MOV     R6,A
80F66D A3                INC     DPTR
80F66E E0                MOVX    A,@DPTR
80F66F AA06              MOV     R2,AR6
80F671 F9                MOV     R1,A
80F672 7B00              MOV     R3,#?C?XDATASEG
80F674 C003              PUSH    AR3
80F676 C002              PUSH    AR2
80F678 C001              PUSH    AR1
80F67A 7B80              MOV     R3,#BYTE2 080108BH
80F67C 7A10              MOV     R2,#HIGH 080108BH
80F67E 798B              MOV     R1,#LOW 080108BH
80F680 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F683 A5128007B6        ECALL   ?C?PSTXDATA
80F688 900466            MOV     DPTR,#SystemParameter+048H
80F68B E0                MOVX    A,@DPTR
80F68C FC                MOV     R4,A
80F68D A3                INC     DPTR
80F68E E0                MOVX    A,@DPTR
80F68F FD                MOV     R5,A
80F690 900459            MOV     DPTR,#SystemParameter+03BH
80F693 E0                MOVX    A,@DPTR
80F694 FE                MOV     R6,A
80F695 A3                INC     DPTR
80F696 E0                MOVX    A,@DPTR
80F697 FF                MOV     R7,A
80F698 A51280056C        ECALL   ?C?UIDIV
80F69D 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F6A0 EE                MOV     A,R6
80F6A1 F0                MOVX    @DPTR,A
80F6A2 A3                INC     DPTR
80F6A3 EF                MOV     A,R7
80F6A4 F0                MOVX    @DPTR,A
80F6A5 900466            MOV     DPTR,#SystemParameter+048H
80F6A8 E0                MOVX    A,@DPTR
80F6A9 FC                MOV     R4,A
80F6AA A3                INC     DPTR
80F6AB E0                MOVX    A,@DPTR
80F6AC FD                MOV     R5,A
80F6AD 900459            MOV     DPTR,#SystemParameter+03BH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 620


80F6B0 E0                MOVX    A,@DPTR
80F6B1 FE                MOV     R6,A
80F6B2 A3                INC     DPTR
80F6B3 E0                MOVX    A,@DPTR
80F6B4 FF                MOV     R7,A
80F6B5 A51280056C        ECALL   ?C?UIDIV
80F6BA 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F6BD EC                MOV     A,R4
80F6BE F0                MOVX    @DPTR,A
80F6BF A3                INC     DPTR
80F6C0 ED                MOV     A,R5
80F6C1         
  798: 					break;
80F6C1 02FD60            LJMP    ?C0472?SYSPARAMSET
  799: 					case 100:
80F6C4         ?C0280?SYSPARAMSET:
  800: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[1]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[1]%SystemParameter.curUnit );
80F6C4 90174D            MOV     DPTR,#OutStr
80F6C7 E0                MOVX    A,@DPTR
80F6C8 FE                MOV     R6,A
80F6C9 A3                INC     DPTR
80F6CA E0                MOVX    A,@DPTR
80F6CB AA06              MOV     R2,AR6
80F6CD F9                MOV     R1,A
80F6CE 7B00              MOV     R3,#?C?XDATASEG
80F6D0 C003              PUSH    AR3
80F6D2 C002              PUSH    AR2
80F6D4 C001              PUSH    AR1
80F6D6 7B80              MOV     R3,#BYTE2 0801091H
80F6D8 7A10              MOV     R2,#HIGH 0801091H
80F6DA 7991              MOV     R1,#LOW 0801091H
80F6DC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F6DF A5128007B6        ECALL   ?C?PSTXDATA
80F6E4 900466            MOV     DPTR,#SystemParameter+048H
80F6E7 E0                MOVX    A,@DPTR
80F6E8 FC                MOV     R4,A
80F6E9 A3                INC     DPTR
80F6EA E0                MOVX    A,@DPTR
80F6EB FD                MOV     R5,A
80F6EC 900459            MOV     DPTR,#SystemParameter+03BH
80F6EF E0                MOVX    A,@DPTR
80F6F0 FE                MOV     R6,A
80F6F1 A3                INC     DPTR
80F6F2 E0                MOVX    A,@DPTR
80F6F3 FF                MOV     R7,A
80F6F4 A51280056C        ECALL   ?C?UIDIV
80F6F9 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F6FC EE                MOV     A,R6
80F6FD F0                MOVX    @DPTR,A
80F6FE A3                INC     DPTR
80F6FF EF                MOV     A,R7
80F700 F0                MOVX    @DPTR,A
80F701 900466            MOV     DPTR,#SystemParameter+048H
80F704 E0                MOVX    A,@DPTR
80F705 FC                MOV     R4,A
80F706 A3                INC     DPTR
80F707 E0                MOVX    A,@DPTR
80F708 FD                MOV     R5,A
80F709 900459            MOV     DPTR,#SystemParameter+03BH
80F70C E0                MOVX    A,@DPTR
80F70D FE                MOV     R6,A
80F70E A3                INC     DPTR
80F70F E0                MOVX    A,@DPTR
80F710 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 621


80F711 A51280056C        ECALL   ?C?UIDIV
80F716 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F719 EC                MOV     A,R4
80F71A F0                MOVX    @DPTR,A
80F71B A3                INC     DPTR
80F71C ED                MOV     A,R5
80F71D         
  801: 					break;					
80F71D 02FD60            LJMP    ?C0472?SYSPARAMSET
  802: 				}				
  803: 			}
80F720         ?C0276?SYSPARAMSET:
  804: 			else
  805: 			{				
  806: 				//Trace( "\n set IP val \n");
  807: 				j = *len;											
80F720 901751            MOV     DPTR,#len
80F723 E0                MOVX    A,@DPTR
80F724 FE                MOV     R6,A
80F725 A3                INC     DPTR
80F726 E0                MOVX    A,@DPTR
80F727 F582              MOV     DPL,A
80F729 8E83              MOV     DPH,R6
80F72B E0                MOVX    A,@DPTR
80F72C 901753            MOV     DPTR,#j
80F72F F0                MOVX    @DPTR,A
  808: 				if( j == 0 )
80F730 7003              JNZ     $ + 5H
80F732 02FDF6            LJMP    ?C0341?SYSPARAMSET
  809: 					break;
80F735         ?C0282?SYSPARAMSET:
  810: 				if( j > 5 )
80F735 901753            MOV     DPTR,#j
80F738 E0                MOVX    A,@DPTR
80F739 D3                SETB    C
80F73A 9405              SUBB    A,#05H
80F73C 4003              JC      ?C0283?SYSPARAMSET
  811: 					j = 5;
80F73E 7405              MOV     A,#05H
80F740 F0                MOVX    @DPTR,A
80F741         ?C0283?SYSPARAMSET:
  812: 				SystemParameter.coinValue[1] = 0;	
80F741 E4                CLR     A
80F742 900459            MOV     DPTR,#SystemParameter+03BH
80F745 F0                MOVX    @DPTR,A
80F746 A3                INC     DPTR
80F747 F0                MOVX    @DPTR,A
  813: 				for( i = 0; i < j; i ++ )
80F748 901754            MOV     DPTR,#i
80F74B F0                MOVX    @DPTR,A
80F74C         ?C0284?SYSPARAMSET:
80F74C 901753            MOV     DPTR,#j
80F74F E0                MOVX    A,@DPTR
80F750 FF                MOV     R7,A
80F751 A3                INC     DPTR
80F752 E0                MOVX    A,@DPTR
80F753 FE                MOV     R6,A
80F754 C3                CLR     C
80F755 9F                SUBB    A,R7
80F756 5044              JNC     ?C0285?SYSPARAMSET
  814: 				{
  815: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80F758 90174F            MOV     DPTR,#InStr
80F75B E0                MOVX    A,@DPTR
80F75C FC                MOV     R4,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 622


80F75D A3                INC     DPTR
80F75E E0                MOVX    A,@DPTR
80F75F 2E                ADD     A,R6
80F760 F582              MOV     DPL,A
80F762 E4                CLR     A
80F763 3C                ADDC    A,R4
80F764 F583              MOV     DPH,A
80F766 E0                MOVX    A,@DPTR
80F767 FF                MOV     R7,A
80F768 C3                CLR     C
80F769 9400              SUBB    A,#00H
80F76B 4027              JC      ?C0286?SYSPARAMSET
80F76D EF                MOV     A,R7
80F76E D3                SETB    C
80F76F 9409              SUBB    A,#09H
80F771 5021              JNC     ?C0286?SYSPARAMSET
  816: 						SystemParameter.coinValue[1] = SystemParameter.coinValue[1]*10 + *( InStr + i );						
80F773 EF                MOV     A,R7
80F774 FB                MOV     R3,A
80F775 7A00              MOV     R2,#00H
80F777 900459            MOV     DPTR,#SystemParameter+03BH
80F77A E0                MOVX    A,@DPTR
80F77B FE                MOV     R6,A
80F77C A3                INC     DPTR
80F77D E0                MOVX    A,@DPTR
80F77E FF                MOV     R7,A
80F77F 7C00              MOV     R4,#00H
80F781 7D0A              MOV     R5,#0AH
80F783 A512800559        ECALL   ?C?IMUL
80F788 EF                MOV     A,R7
80F789 2B                ADD     A,R3
80F78A FF                MOV     R7,A
80F78B EA                MOV     A,R2
80F78C 3E                ADDC    A,R6
80F78D 900459            MOV     DPTR,#SystemParameter+03BH
80F790 F0                MOVX    @DPTR,A
80F791 A3                INC     DPTR
80F792 EF                MOV     A,R7
80F793 F0                MOVX    @DPTR,A
  817: 				}	
80F794         ?C0286?SYSPARAMSET:
80F794 901754            MOV     DPTR,#i
80F797 E0                MOVX    A,@DPTR
80F798 04                INC     A
80F799 F0                MOVX    @DPTR,A
80F79A 80B0              SJMP    ?C0284?SYSPARAMSET
80F79C         ?C0285?SYSPARAMSET:
  818: 				SystemSave = 1;
80F79C D22E              SETB    SystemSave
  819: 			}			
  820: 		break;
80F79E 02FDF6            LJMP    ?C0341?SYSPARAMSET
  821:         case 24: //# 3 coin
80F7A1         ?C0288?SYSPARAMSET:
  822:         if( OutInFlag == 0 )
80F7A1 301A03            JNB     OutInFlag,$ + 6H
80F7A4 02F8B1            LJMP    ?C0289?SYSPARAMSET
  823: 			{			
  824: 				switch( SystemParameter.curUnit )
80F7A7 900466            MOV     DPTR,#SystemParameter+048H
80F7AA E0                MOVX    A,@DPTR
80F7AB FE                MOV     R6,A
80F7AC A3                INC     DPTR
80F7AD E0                MOVX    A,@DPTR
80F7AE FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 623


80F7AF EE                MOV     A,R6
80F7B0 6003              JZ      $ + 5H
80F7B2 02FDF6            LJMP    ?C0341?SYSPARAMSET
80F7B5 EF                MOV     A,R7
80F7B6 24F6              ADD     A,#0F6H
80F7B8 603F              JZ      ?C0292?SYSPARAMSET
80F7BA 24A6              ADD     A,#0A6H
80F7BC 7003              JNZ     $ + 5H
80F7BE 02F855            LJMP    ?C0293?SYSPARAMSET
80F7C1 2463              ADD     A,#063H
80F7C3 6003              JZ      $ + 5H
80F7C5 02FDF6            LJMP    ?C0341?SYSPARAMSET
  825: 				{
  826: 					case 1:
80F7C8         ?C0291?SYSPARAMSET:
  827: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[2] );
80F7C8 90174D            MOV     DPTR,#OutStr
80F7CB E0                MOVX    A,@DPTR
80F7CC FE                MOV     R6,A
80F7CD A3                INC     DPTR
80F7CE E0                MOVX    A,@DPTR
80F7CF AA06              MOV     R2,AR6
80F7D1 F9                MOV     R1,A
80F7D2 7B00              MOV     R3,#?C?XDATASEG
80F7D4 C003              PUSH    AR3
80F7D6 C002              PUSH    AR2
80F7D8 C001              PUSH    AR1
80F7DA 7B80              MOV     R3,#BYTE2 0801088H
80F7DC 7A10              MOV     R2,#HIGH 0801088H
80F7DE 7988              MOV     R1,#LOW 0801088H
80F7E0 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F7E3 A5128007B6        ECALL   ?C?PSTXDATA
80F7E8 90045B            MOV     DPTR,#SystemParameter+03DH
80F7EB E0                MOVX    A,@DPTR
80F7EC FF                MOV     R7,A
80F7ED A3                INC     DPTR
80F7EE E0                MOVX    A,@DPTR
80F7EF 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F7F2 CF                XCH     A,R7
80F7F3 F0                MOVX    @DPTR,A
80F7F4 A3                INC     DPTR
80F7F5 EF                MOV     A,R7
80F7F6         
  828: 					break;				
80F7F6 02FD60            LJMP    ?C0472?SYSPARAMSET
  829: 					case 10:
80F7F9         ?C0292?SYSPARAMSET:
  830: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[2]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[2]%SystemParameter.curUnit );
80F7F9 90174D            MOV     DPTR,#OutStr
80F7FC E0                MOVX    A,@DPTR
80F7FD FE                MOV     R6,A
80F7FE A3                INC     DPTR
80F7FF E0                MOVX    A,@DPTR
80F800 AA06              MOV     R2,AR6
80F802 F9                MOV     R1,A
80F803 7B00              MOV     R3,#?C?XDATASEG
80F805 C003              PUSH    AR3
80F807 C002              PUSH    AR2
80F809 C001              PUSH    AR1
80F80B 7B80              MOV     R3,#BYTE2 080108BH
80F80D 7A10              MOV     R2,#HIGH 080108BH
80F80F 798B              MOV     R1,#LOW 080108BH
80F811 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F814 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 624


80F819 900466            MOV     DPTR,#SystemParameter+048H
80F81C E0                MOVX    A,@DPTR
80F81D FC                MOV     R4,A
80F81E A3                INC     DPTR
80F81F E0                MOVX    A,@DPTR
80F820 FD                MOV     R5,A
80F821 90045B            MOV     DPTR,#SystemParameter+03DH
80F824 E0                MOVX    A,@DPTR
80F825 FE                MOV     R6,A
80F826 A3                INC     DPTR
80F827 E0                MOVX    A,@DPTR
80F828 FF                MOV     R7,A
80F829 A51280056C        ECALL   ?C?UIDIV
80F82E 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F831 EE                MOV     A,R6
80F832 F0                MOVX    @DPTR,A
80F833 A3                INC     DPTR
80F834 EF                MOV     A,R7
80F835 F0                MOVX    @DPTR,A
80F836 900466            MOV     DPTR,#SystemParameter+048H
80F839 E0                MOVX    A,@DPTR
80F83A FC                MOV     R4,A
80F83B A3                INC     DPTR
80F83C E0                MOVX    A,@DPTR
80F83D FD                MOV     R5,A
80F83E 90045B            MOV     DPTR,#SystemParameter+03DH
80F841 E0                MOVX    A,@DPTR
80F842 FE                MOV     R6,A
80F843 A3                INC     DPTR
80F844 E0                MOVX    A,@DPTR
80F845 FF                MOV     R7,A
80F846 A51280056C        ECALL   ?C?UIDIV
80F84B 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F84E EC                MOV     A,R4
80F84F F0                MOVX    @DPTR,A
80F850 A3                INC     DPTR
80F851 ED                MOV     A,R5
80F852         
  831: 					break;
80F852 02FD60            LJMP    ?C0472?SYSPARAMSET
  832: 					case 100:
80F855         ?C0293?SYSPARAMSET:
  833: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[2]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[2]%SystemParameter.curUnit );
80F855 90174D            MOV     DPTR,#OutStr
80F858 E0                MOVX    A,@DPTR
80F859 FE                MOV     R6,A
80F85A A3                INC     DPTR
80F85B E0                MOVX    A,@DPTR
80F85C AA06              MOV     R2,AR6
80F85E F9                MOV     R1,A
80F85F 7B00              MOV     R3,#?C?XDATASEG
80F861 C003              PUSH    AR3
80F863 C002              PUSH    AR2
80F865 C001              PUSH    AR1
80F867 7B80              MOV     R3,#BYTE2 0801091H
80F869 7A10              MOV     R2,#HIGH 0801091H
80F86B 7991              MOV     R1,#LOW 0801091H
80F86D 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F870 A5128007B6        ECALL   ?C?PSTXDATA
80F875 900466            MOV     DPTR,#SystemParameter+048H
80F878 E0                MOVX    A,@DPTR
80F879 FC                MOV     R4,A
80F87A A3                INC     DPTR
80F87B E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 625


80F87C FD                MOV     R5,A
80F87D 90045B            MOV     DPTR,#SystemParameter+03DH
80F880 E0                MOVX    A,@DPTR
80F881 FE                MOV     R6,A
80F882 A3                INC     DPTR
80F883 E0                MOVX    A,@DPTR
80F884 FF                MOV     R7,A
80F885 A51280056C        ECALL   ?C?UIDIV
80F88A 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F88D EE                MOV     A,R6
80F88E F0                MOVX    @DPTR,A
80F88F A3                INC     DPTR
80F890 EF                MOV     A,R7
80F891 F0                MOVX    @DPTR,A
80F892 900466            MOV     DPTR,#SystemParameter+048H
80F895 E0                MOVX    A,@DPTR
80F896 FC                MOV     R4,A
80F897 A3                INC     DPTR
80F898 E0                MOVX    A,@DPTR
80F899 FD                MOV     R5,A
80F89A 90045B            MOV     DPTR,#SystemParameter+03DH
80F89D E0                MOVX    A,@DPTR
80F89E FE                MOV     R6,A
80F89F A3                INC     DPTR
80F8A0 E0                MOVX    A,@DPTR
80F8A1 FF                MOV     R7,A
80F8A2 A51280056C        ECALL   ?C?UIDIV
80F8A7 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F8AA EC                MOV     A,R4
80F8AB F0                MOVX    @DPTR,A
80F8AC A3                INC     DPTR
80F8AD ED                MOV     A,R5
80F8AE         
  834: 					break;					
80F8AE 02FD60            LJMP    ?C0472?SYSPARAMSET
  835: 				}				
  836: 			}
80F8B1         ?C0289?SYSPARAMSET:
  837: 			else
  838: 			{				
  839: 				//Trace( "\n set IP val \n");
  840: 				j = *len;											
80F8B1 901751            MOV     DPTR,#len
80F8B4 E0                MOVX    A,@DPTR
80F8B5 FE                MOV     R6,A
80F8B6 A3                INC     DPTR
80F8B7 E0                MOVX    A,@DPTR
80F8B8 F582              MOV     DPL,A
80F8BA 8E83              MOV     DPH,R6
80F8BC E0                MOVX    A,@DPTR
80F8BD 901753            MOV     DPTR,#j
80F8C0 F0                MOVX    @DPTR,A
  841: 				if( j == 0 )
80F8C1 7003              JNZ     $ + 5H
80F8C3 02FDF6            LJMP    ?C0341?SYSPARAMSET
  842: 					break;
80F8C6         ?C0295?SYSPARAMSET:
  843: 				if( j > 5 )
80F8C6 901753            MOV     DPTR,#j
80F8C9 E0                MOVX    A,@DPTR
80F8CA D3                SETB    C
80F8CB 9405              SUBB    A,#05H
80F8CD 4003              JC      ?C0296?SYSPARAMSET
  844: 					j = 5;
80F8CF 7405              MOV     A,#05H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 626


80F8D1 F0                MOVX    @DPTR,A
80F8D2         ?C0296?SYSPARAMSET:
  845: 				SystemParameter.coinValue[2] = 0;	
80F8D2 E4                CLR     A
80F8D3 90045B            MOV     DPTR,#SystemParameter+03DH
80F8D6 F0                MOVX    @DPTR,A
80F8D7 A3                INC     DPTR
80F8D8 F0                MOVX    @DPTR,A
  846: 				for( i = 0; i < j; i ++ )
80F8D9 901754            MOV     DPTR,#i
80F8DC F0                MOVX    @DPTR,A
80F8DD         ?C0297?SYSPARAMSET:
80F8DD 901753            MOV     DPTR,#j
80F8E0 E0                MOVX    A,@DPTR
80F8E1 FF                MOV     R7,A
80F8E2 A3                INC     DPTR
80F8E3 E0                MOVX    A,@DPTR
80F8E4 FE                MOV     R6,A
80F8E5 C3                CLR     C
80F8E6 9F                SUBB    A,R7
80F8E7 5044              JNC     ?C0298?SYSPARAMSET
  847: 				{
  848: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80F8E9 90174F            MOV     DPTR,#InStr
80F8EC E0                MOVX    A,@DPTR
80F8ED FC                MOV     R4,A
80F8EE A3                INC     DPTR
80F8EF E0                MOVX    A,@DPTR
80F8F0 2E                ADD     A,R6
80F8F1 F582              MOV     DPL,A
80F8F3 E4                CLR     A
80F8F4 3C                ADDC    A,R4
80F8F5 F583              MOV     DPH,A
80F8F7 E0                MOVX    A,@DPTR
80F8F8 FF                MOV     R7,A
80F8F9 C3                CLR     C
80F8FA 9400              SUBB    A,#00H
80F8FC 4027              JC      ?C0299?SYSPARAMSET
80F8FE EF                MOV     A,R7
80F8FF D3                SETB    C
80F900 9409              SUBB    A,#09H
80F902 5021              JNC     ?C0299?SYSPARAMSET
  849: 						SystemParameter.coinValue[2] = SystemParameter.coinValue[2]*10 + *( InStr + i );						
80F904 EF                MOV     A,R7
80F905 FB                MOV     R3,A
80F906 7A00              MOV     R2,#00H
80F908 90045B            MOV     DPTR,#SystemParameter+03DH
80F90B E0                MOVX    A,@DPTR
80F90C FE                MOV     R6,A
80F90D A3                INC     DPTR
80F90E E0                MOVX    A,@DPTR
80F90F FF                MOV     R7,A
80F910 7C00              MOV     R4,#00H
80F912 7D0A              MOV     R5,#0AH
80F914 A512800559        ECALL   ?C?IMUL
80F919 EF                MOV     A,R7
80F91A 2B                ADD     A,R3
80F91B FF                MOV     R7,A
80F91C EA                MOV     A,R2
80F91D 3E                ADDC    A,R6
80F91E 90045B            MOV     DPTR,#SystemParameter+03DH
80F921 F0                MOVX    @DPTR,A
80F922 A3                INC     DPTR
80F923 EF                MOV     A,R7
80F924 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 627


  850: 				}	
80F925         ?C0299?SYSPARAMSET:
80F925 901754            MOV     DPTR,#i
80F928 E0                MOVX    A,@DPTR
80F929 04                INC     A
80F92A F0                MOVX    @DPTR,A
80F92B 80B0              SJMP    ?C0297?SYSPARAMSET
80F92D         ?C0298?SYSPARAMSET:
  851: 				SystemSave = 1;
80F92D D22E              SETB    SystemSave
  852: 			}			
  853: 		break;
80F92F 02FDF6            LJMP    ?C0341?SYSPARAMSET
  854: 		case 25: //# 4 coin
80F932         ?C0301?SYSPARAMSET:
  855:         if( OutInFlag == 0 )
80F932 301A03            JNB     OutInFlag,$ + 6H
80F935 02FA42            LJMP    ?C0302?SYSPARAMSET
  856: 			{			
  857: 				switch( SystemParameter.curUnit )
80F938 900466            MOV     DPTR,#SystemParameter+048H
80F93B E0                MOVX    A,@DPTR
80F93C FE                MOV     R6,A
80F93D A3                INC     DPTR
80F93E E0                MOVX    A,@DPTR
80F93F FF                MOV     R7,A
80F940 EE                MOV     A,R6
80F941 6003              JZ      $ + 5H
80F943 02FDF6            LJMP    ?C0341?SYSPARAMSET
80F946 EF                MOV     A,R7
80F947 24F6              ADD     A,#0F6H
80F949 603F              JZ      ?C0305?SYSPARAMSET
80F94B 24A6              ADD     A,#0A6H
80F94D 7003              JNZ     $ + 5H
80F94F 02F9E6            LJMP    ?C0306?SYSPARAMSET
80F952 2463              ADD     A,#063H
80F954 6003              JZ      $ + 5H
80F956 02FDF6            LJMP    ?C0341?SYSPARAMSET
  858: 				{
  859: 					case 1:
80F959         ?C0304?SYSPARAMSET:
  860: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[3] );
80F959 90174D            MOV     DPTR,#OutStr
80F95C E0                MOVX    A,@DPTR
80F95D FE                MOV     R6,A
80F95E A3                INC     DPTR
80F95F E0                MOVX    A,@DPTR
80F960 AA06              MOV     R2,AR6
80F962 F9                MOV     R1,A
80F963 7B00              MOV     R3,#?C?XDATASEG
80F965 C003              PUSH    AR3
80F967 C002              PUSH    AR2
80F969 C001              PUSH    AR1
80F96B 7B80              MOV     R3,#BYTE2 0801088H
80F96D 7A10              MOV     R2,#HIGH 0801088H
80F96F 7988              MOV     R1,#LOW 0801088H
80F971 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F974 A5128007B6        ECALL   ?C?PSTXDATA
80F979 90045D            MOV     DPTR,#SystemParameter+03FH
80F97C E0                MOVX    A,@DPTR
80F97D FF                MOV     R7,A
80F97E A3                INC     DPTR
80F97F E0                MOVX    A,@DPTR
80F980 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F983 CF                XCH     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 628


80F984 F0                MOVX    @DPTR,A
80F985 A3                INC     DPTR
80F986 EF                MOV     A,R7
80F987         
  861: 					break;				
80F987 02FD60            LJMP    ?C0472?SYSPARAMSET
  862: 					case 10:
80F98A         ?C0305?SYSPARAMSET:
  863: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[3]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[3]%SystemParameter.curUnit );
80F98A 90174D            MOV     DPTR,#OutStr
80F98D E0                MOVX    A,@DPTR
80F98E FE                MOV     R6,A
80F98F A3                INC     DPTR
80F990 E0                MOVX    A,@DPTR
80F991 AA06              MOV     R2,AR6
80F993 F9                MOV     R1,A
80F994 7B00              MOV     R3,#?C?XDATASEG
80F996 C003              PUSH    AR3
80F998 C002              PUSH    AR2
80F99A C001              PUSH    AR1
80F99C 7B80              MOV     R3,#BYTE2 080108BH
80F99E 7A10              MOV     R2,#HIGH 080108BH
80F9A0 798B              MOV     R1,#LOW 080108BH
80F9A2 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80F9A5 A5128007B6        ECALL   ?C?PSTXDATA
80F9AA 900466            MOV     DPTR,#SystemParameter+048H
80F9AD E0                MOVX    A,@DPTR
80F9AE FC                MOV     R4,A
80F9AF A3                INC     DPTR
80F9B0 E0                MOVX    A,@DPTR
80F9B1 FD                MOV     R5,A
80F9B2 90045D            MOV     DPTR,#SystemParameter+03FH
80F9B5 E0                MOVX    A,@DPTR
80F9B6 FE                MOV     R6,A
80F9B7 A3                INC     DPTR
80F9B8 E0                MOVX    A,@DPTR
80F9B9 FF                MOV     R7,A
80F9BA A51280056C        ECALL   ?C?UIDIV
80F9BF 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80F9C2 EE                MOV     A,R6
80F9C3 F0                MOVX    @DPTR,A
80F9C4 A3                INC     DPTR
80F9C5 EF                MOV     A,R7
80F9C6 F0                MOVX    @DPTR,A
80F9C7 900466            MOV     DPTR,#SystemParameter+048H
80F9CA E0                MOVX    A,@DPTR
80F9CB FC                MOV     R4,A
80F9CC A3                INC     DPTR
80F9CD E0                MOVX    A,@DPTR
80F9CE FD                MOV     R5,A
80F9CF 90045D            MOV     DPTR,#SystemParameter+03FH
80F9D2 E0                MOVX    A,@DPTR
80F9D3 FE                MOV     R6,A
80F9D4 A3                INC     DPTR
80F9D5 E0                MOVX    A,@DPTR
80F9D6 FF                MOV     R7,A
80F9D7 A51280056C        ECALL   ?C?UIDIV
80F9DC 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80F9DF EC                MOV     A,R4
80F9E0 F0                MOVX    @DPTR,A
80F9E1 A3                INC     DPTR
80F9E2 ED                MOV     A,R5
80F9E3         
  864: 					break;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 629


80F9E3 02FD60            LJMP    ?C0472?SYSPARAMSET
  865: 					case 100:
80F9E6         ?C0306?SYSPARAMSET:
  866: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[3]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[3]%SystemParameter.curUnit );
80F9E6 90174D            MOV     DPTR,#OutStr
80F9E9 E0                MOVX    A,@DPTR
80F9EA FE                MOV     R6,A
80F9EB A3                INC     DPTR
80F9EC E0                MOVX    A,@DPTR
80F9ED AA06              MOV     R2,AR6
80F9EF F9                MOV     R1,A
80F9F0 7B00              MOV     R3,#?C?XDATASEG
80F9F2 C003              PUSH    AR3
80F9F4 C002              PUSH    AR2
80F9F6 C001              PUSH    AR1
80F9F8 7B80              MOV     R3,#BYTE2 0801091H
80F9FA 7A10              MOV     R2,#HIGH 0801091H
80F9FC 7991              MOV     R1,#LOW 0801091H
80F9FE 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80FA01 A5128007B6        ECALL   ?C?PSTXDATA
80FA06 900466            MOV     DPTR,#SystemParameter+048H
80FA09 E0                MOVX    A,@DPTR
80FA0A FC                MOV     R4,A
80FA0B A3                INC     DPTR
80FA0C E0                MOVX    A,@DPTR
80FA0D FD                MOV     R5,A
80FA0E 90045D            MOV     DPTR,#SystemParameter+03FH
80FA11 E0                MOVX    A,@DPTR
80FA12 FE                MOV     R6,A
80FA13 A3                INC     DPTR
80FA14 E0                MOVX    A,@DPTR
80FA15 FF                MOV     R7,A
80FA16 A51280056C        ECALL   ?C?UIDIV
80FA1B 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80FA1E EE                MOV     A,R6
80FA1F F0                MOVX    @DPTR,A
80FA20 A3                INC     DPTR
80FA21 EF                MOV     A,R7
80FA22 F0                MOVX    @DPTR,A
80FA23 900466            MOV     DPTR,#SystemParameter+048H
80FA26 E0                MOVX    A,@DPTR
80FA27 FC                MOV     R4,A
80FA28 A3                INC     DPTR
80FA29 E0                MOVX    A,@DPTR
80FA2A FD                MOV     R5,A
80FA2B 90045D            MOV     DPTR,#SystemParameter+03FH
80FA2E E0                MOVX    A,@DPTR
80FA2F FE                MOV     R6,A
80FA30 A3                INC     DPTR
80FA31 E0                MOVX    A,@DPTR
80FA32 FF                MOV     R7,A
80FA33 A51280056C        ECALL   ?C?UIDIV
80FA38 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80FA3B EC                MOV     A,R4
80FA3C F0                MOVX    @DPTR,A
80FA3D A3                INC     DPTR
80FA3E ED                MOV     A,R5
80FA3F         
  867: 					break;					
80FA3F 02FD60            LJMP    ?C0472?SYSPARAMSET
  868: 				}				
  869: 			}
80FA42         ?C0302?SYSPARAMSET:
  870: 			else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 630


  871: 			{				
  872: 				//Trace( "\n set IP val \n");
  873: 				j = *len;											
80FA42 901751            MOV     DPTR,#len
80FA45 E0                MOVX    A,@DPTR
80FA46 FE                MOV     R6,A
80FA47 A3                INC     DPTR
80FA48 E0                MOVX    A,@DPTR
80FA49 F582              MOV     DPL,A
80FA4B 8E83              MOV     DPH,R6
80FA4D E0                MOVX    A,@DPTR
80FA4E 901753            MOV     DPTR,#j
80FA51 F0                MOVX    @DPTR,A
  874: 				if( j == 0 )
80FA52 7003              JNZ     $ + 5H
80FA54 02FDF6            LJMP    ?C0341?SYSPARAMSET
  875: 					break;
80FA57         ?C0308?SYSPARAMSET:
  876: 				if( j > 5 )
80FA57 901753            MOV     DPTR,#j
80FA5A E0                MOVX    A,@DPTR
80FA5B D3                SETB    C
80FA5C 9405              SUBB    A,#05H
80FA5E 4003              JC      ?C0309?SYSPARAMSET
  877: 					j = 5;
80FA60 7405              MOV     A,#05H
80FA62 F0                MOVX    @DPTR,A
80FA63         ?C0309?SYSPARAMSET:
  878: 				SystemParameter.coinValue[3] = 0;	
80FA63 E4                CLR     A
80FA64 90045D            MOV     DPTR,#SystemParameter+03FH
80FA67 F0                MOVX    @DPTR,A
80FA68 A3                INC     DPTR
80FA69 F0                MOVX    @DPTR,A
  879: 				for( i = 0; i < j; i ++ )
80FA6A 901754            MOV     DPTR,#i
80FA6D F0                MOVX    @DPTR,A
80FA6E         ?C0310?SYSPARAMSET:
80FA6E 901753            MOV     DPTR,#j
80FA71 E0                MOVX    A,@DPTR
80FA72 FF                MOV     R7,A
80FA73 A3                INC     DPTR
80FA74 E0                MOVX    A,@DPTR
80FA75 FE                MOV     R6,A
80FA76 C3                CLR     C
80FA77 9F                SUBB    A,R7
80FA78 5044              JNC     ?C0311?SYSPARAMSET
  880: 				{
  881: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80FA7A 90174F            MOV     DPTR,#InStr
80FA7D E0                MOVX    A,@DPTR
80FA7E FC                MOV     R4,A
80FA7F A3                INC     DPTR
80FA80 E0                MOVX    A,@DPTR
80FA81 2E                ADD     A,R6
80FA82 F582              MOV     DPL,A
80FA84 E4                CLR     A
80FA85 3C                ADDC    A,R4
80FA86 F583              MOV     DPH,A
80FA88 E0                MOVX    A,@DPTR
80FA89 FF                MOV     R7,A
80FA8A C3                CLR     C
80FA8B 9400              SUBB    A,#00H
80FA8D 4027              JC      ?C0312?SYSPARAMSET
80FA8F EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 631


80FA90 D3                SETB    C
80FA91 9409              SUBB    A,#09H
80FA93 5021              JNC     ?C0312?SYSPARAMSET
  882: 						SystemParameter.coinValue[3] = SystemParameter.coinValue[3]*10 + *( InStr + i );						
80FA95 EF                MOV     A,R7
80FA96 FB                MOV     R3,A
80FA97 7A00              MOV     R2,#00H
80FA99 90045D            MOV     DPTR,#SystemParameter+03FH
80FA9C E0                MOVX    A,@DPTR
80FA9D FE                MOV     R6,A
80FA9E A3                INC     DPTR
80FA9F E0                MOVX    A,@DPTR
80FAA0 FF                MOV     R7,A
80FAA1 7C00              MOV     R4,#00H
80FAA3 7D0A              MOV     R5,#0AH
80FAA5 A512800559        ECALL   ?C?IMUL
80FAAA EF                MOV     A,R7
80FAAB 2B                ADD     A,R3
80FAAC FF                MOV     R7,A
80FAAD EA                MOV     A,R2
80FAAE 3E                ADDC    A,R6
80FAAF 90045D            MOV     DPTR,#SystemParameter+03FH
80FAB2 F0                MOVX    @DPTR,A
80FAB3 A3                INC     DPTR
80FAB4 EF                MOV     A,R7
80FAB5 F0                MOVX    @DPTR,A
  883: 				}	
80FAB6         ?C0312?SYSPARAMSET:
80FAB6 901754            MOV     DPTR,#i
80FAB9 E0                MOVX    A,@DPTR
80FABA 04                INC     A
80FABB F0                MOVX    @DPTR,A
80FABC 80B0              SJMP    ?C0310?SYSPARAMSET
80FABE         ?C0311?SYSPARAMSET:
  884: 				SystemSave = 1;
80FABE D22E              SETB    SystemSave
  885: 			}			
  886: 		break;
80FAC0 02FDF6            LJMP    ?C0341?SYSPARAMSET
  887:         case 26: //# 5 coin
80FAC3         ?C0314?SYSPARAMSET:
  888:         if( OutInFlag == 0 )
80FAC3 301A03            JNB     OutInFlag,$ + 6H
80FAC6 02FBD3            LJMP    ?C0315?SYSPARAMSET
  889: 			{			
  890: 				switch( SystemParameter.curUnit )
80FAC9 900466            MOV     DPTR,#SystemParameter+048H
80FACC E0                MOVX    A,@DPTR
80FACD FE                MOV     R6,A
80FACE A3                INC     DPTR
80FACF E0                MOVX    A,@DPTR
80FAD0 FF                MOV     R7,A
80FAD1 EE                MOV     A,R6
80FAD2 6003              JZ      $ + 5H
80FAD4 02FDF6            LJMP    ?C0341?SYSPARAMSET
80FAD7 EF                MOV     A,R7
80FAD8 24F6              ADD     A,#0F6H
80FADA 603F              JZ      ?C0318?SYSPARAMSET
80FADC 24A6              ADD     A,#0A6H
80FADE 7003              JNZ     $ + 5H
80FAE0 02FB77            LJMP    ?C0319?SYSPARAMSET
80FAE3 2463              ADD     A,#063H
80FAE5 6003              JZ      $ + 5H
80FAE7 02FDF6            LJMP    ?C0341?SYSPARAMSET
  891: 				{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 632


  892: 					case 1:
80FAEA         ?C0317?SYSPARAMSET:
  893: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[4] );
80FAEA 90174D            MOV     DPTR,#OutStr
80FAED E0                MOVX    A,@DPTR
80FAEE FE                MOV     R6,A
80FAEF A3                INC     DPTR
80FAF0 E0                MOVX    A,@DPTR
80FAF1 AA06              MOV     R2,AR6
80FAF3 F9                MOV     R1,A
80FAF4 7B00              MOV     R3,#?C?XDATASEG
80FAF6 C003              PUSH    AR3
80FAF8 C002              PUSH    AR2
80FAFA C001              PUSH    AR1
80FAFC 7B80              MOV     R3,#BYTE2 0801088H
80FAFE 7A10              MOV     R2,#HIGH 0801088H
80FB00 7988              MOV     R1,#LOW 0801088H
80FB02 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80FB05 A5128007B6        ECALL   ?C?PSTXDATA
80FB0A 90045F            MOV     DPTR,#SystemParameter+041H
80FB0D E0                MOVX    A,@DPTR
80FB0E FF                MOV     R7,A
80FB0F A3                INC     DPTR
80FB10 E0                MOVX    A,@DPTR
80FB11 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80FB14 CF                XCH     A,R7
80FB15 F0                MOVX    @DPTR,A
80FB16 A3                INC     DPTR
80FB17 EF                MOV     A,R7
80FB18         
  894: 					break;				
80FB18 02FD60            LJMP    ?C0472?SYSPARAMSET
  895: 					case 10:
80FB1B         ?C0318?SYSPARAMSET:
  896: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[4]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[4]%SystemParameter.curUnit );
80FB1B 90174D            MOV     DPTR,#OutStr
80FB1E E0                MOVX    A,@DPTR
80FB1F FE                MOV     R6,A
80FB20 A3                INC     DPTR
80FB21 E0                MOVX    A,@DPTR
80FB22 AA06              MOV     R2,AR6
80FB24 F9                MOV     R1,A
80FB25 7B00              MOV     R3,#?C?XDATASEG
80FB27 C003              PUSH    AR3
80FB29 C002              PUSH    AR2
80FB2B C001              PUSH    AR1
80FB2D 7B80              MOV     R3,#BYTE2 080108BH
80FB2F 7A10              MOV     R2,#HIGH 080108BH
80FB31 798B              MOV     R1,#LOW 080108BH
80FB33 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80FB36 A5128007B6        ECALL   ?C?PSTXDATA
80FB3B 900466            MOV     DPTR,#SystemParameter+048H
80FB3E E0                MOVX    A,@DPTR
80FB3F FC                MOV     R4,A
80FB40 A3                INC     DPTR
80FB41 E0                MOVX    A,@DPTR
80FB42 FD                MOV     R5,A
80FB43 90045F            MOV     DPTR,#SystemParameter+041H
80FB46 E0                MOVX    A,@DPTR
80FB47 FE                MOV     R6,A
80FB48 A3                INC     DPTR
80FB49 E0                MOVX    A,@DPTR
80FB4A FF                MOV     R7,A
80FB4B A51280056C        ECALL   ?C?UIDIV
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 633


80FB50 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80FB53 EE                MOV     A,R6
80FB54 F0                MOVX    @DPTR,A
80FB55 A3                INC     DPTR
80FB56 EF                MOV     A,R7
80FB57 F0                MOVX    @DPTR,A
80FB58 900466            MOV     DPTR,#SystemParameter+048H
80FB5B E0                MOVX    A,@DPTR
80FB5C FC                MOV     R4,A
80FB5D A3                INC     DPTR
80FB5E E0                MOVX    A,@DPTR
80FB5F FD                MOV     R5,A
80FB60 90045F            MOV     DPTR,#SystemParameter+041H
80FB63 E0                MOVX    A,@DPTR
80FB64 FE                MOV     R6,A
80FB65 A3                INC     DPTR
80FB66 E0                MOVX    A,@DPTR
80FB67 FF                MOV     R7,A
80FB68 A51280056C        ECALL   ?C?UIDIV
80FB6D 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80FB70 EC                MOV     A,R4
80FB71 F0                MOVX    @DPTR,A
80FB72 A3                INC     DPTR
80FB73 ED                MOV     A,R5
80FB74         
  897: 					break;
80FB74 02FD60            LJMP    ?C0472?SYSPARAMSET
  898: 					case 100:
80FB77         ?C0319?SYSPARAMSET:
  899: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[4]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[4]%SystemParameter.curUnit );
80FB77 90174D            MOV     DPTR,#OutStr
80FB7A E0                MOVX    A,@DPTR
80FB7B FE                MOV     R6,A
80FB7C A3                INC     DPTR
80FB7D E0                MOVX    A,@DPTR
80FB7E AA06              MOV     R2,AR6
80FB80 F9                MOV     R1,A
80FB81 7B00              MOV     R3,#?C?XDATASEG
80FB83 C003              PUSH    AR3
80FB85 C002              PUSH    AR2
80FB87 C001              PUSH    AR1
80FB89 7B80              MOV     R3,#BYTE2 0801091H
80FB8B 7A10              MOV     R2,#HIGH 0801091H
80FB8D 7991              MOV     R1,#LOW 0801091H
80FB8F 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80FB92 A5128007B6        ECALL   ?C?PSTXDATA
80FB97 900466            MOV     DPTR,#SystemParameter+048H
80FB9A E0                MOVX    A,@DPTR
80FB9B FC                MOV     R4,A
80FB9C A3                INC     DPTR
80FB9D E0                MOVX    A,@DPTR
80FB9E FD                MOV     R5,A
80FB9F 90045F            MOV     DPTR,#SystemParameter+041H
80FBA2 E0                MOVX    A,@DPTR
80FBA3 FE                MOV     R6,A
80FBA4 A3                INC     DPTR
80FBA5 E0                MOVX    A,@DPTR
80FBA6 FF                MOV     R7,A
80FBA7 A51280056C        ECALL   ?C?UIDIV
80FBAC 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80FBAF EE                MOV     A,R6
80FBB0 F0                MOVX    @DPTR,A
80FBB1 A3                INC     DPTR
80FBB2 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 634


80FBB3 F0                MOVX    @DPTR,A
80FBB4 900466            MOV     DPTR,#SystemParameter+048H
80FBB7 E0                MOVX    A,@DPTR
80FBB8 FC                MOV     R4,A
80FBB9 A3                INC     DPTR
80FBBA E0                MOVX    A,@DPTR
80FBBB FD                MOV     R5,A
80FBBC 90045F            MOV     DPTR,#SystemParameter+041H
80FBBF E0                MOVX    A,@DPTR
80FBC0 FE                MOV     R6,A
80FBC1 A3                INC     DPTR
80FBC2 E0                MOVX    A,@DPTR
80FBC3 FF                MOV     R7,A
80FBC4 A51280056C        ECALL   ?C?UIDIV
80FBC9 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80FBCC EC                MOV     A,R4
80FBCD F0                MOVX    @DPTR,A
80FBCE A3                INC     DPTR
80FBCF ED                MOV     A,R5
80FBD0         
  900: 					break;					
80FBD0 02FD60            LJMP    ?C0472?SYSPARAMSET
  901: 				}				
  902: 			}
80FBD3         ?C0315?SYSPARAMSET:
  903: 			else
  904: 			{				
  905: 				//Trace( "\n set IP val \n");
  906: 				j = *len;											
80FBD3 901751            MOV     DPTR,#len
80FBD6 E0                MOVX    A,@DPTR
80FBD7 FE                MOV     R6,A
80FBD8 A3                INC     DPTR
80FBD9 E0                MOVX    A,@DPTR
80FBDA F582              MOV     DPL,A
80FBDC 8E83              MOV     DPH,R6
80FBDE E0                MOVX    A,@DPTR
80FBDF 901753            MOV     DPTR,#j
80FBE2 F0                MOVX    @DPTR,A
  907: 				if( j == 0 )
80FBE3 7003              JNZ     $ + 5H
80FBE5 02FDF6            LJMP    ?C0341?SYSPARAMSET
  908: 					break;
80FBE8         ?C0321?SYSPARAMSET:
  909: 				if( j > 5 )
80FBE8 901753            MOV     DPTR,#j
80FBEB E0                MOVX    A,@DPTR
80FBEC D3                SETB    C
80FBED 9405              SUBB    A,#05H
80FBEF 4003              JC      ?C0322?SYSPARAMSET
  910: 					j = 5;
80FBF1 7405              MOV     A,#05H
80FBF3 F0                MOVX    @DPTR,A
80FBF4         ?C0322?SYSPARAMSET:
  911: 				SystemParameter.coinValue[4] = 0;	
80FBF4 E4                CLR     A
80FBF5 90045F            MOV     DPTR,#SystemParameter+041H
80FBF8 F0                MOVX    @DPTR,A
80FBF9 A3                INC     DPTR
80FBFA F0                MOVX    @DPTR,A
  912: 				for( i = 0; i < j; i ++ )
80FBFB 901754            MOV     DPTR,#i
80FBFE F0                MOVX    @DPTR,A
80FBFF         ?C0323?SYSPARAMSET:
80FBFF 901753            MOV     DPTR,#j
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 635


80FC02 E0                MOVX    A,@DPTR
80FC03 FF                MOV     R7,A
80FC04 A3                INC     DPTR
80FC05 E0                MOVX    A,@DPTR
80FC06 FE                MOV     R6,A
80FC07 C3                CLR     C
80FC08 9F                SUBB    A,R7
80FC09 5044              JNC     ?C0324?SYSPARAMSET
  913: 				{
  914: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80FC0B 90174F            MOV     DPTR,#InStr
80FC0E E0                MOVX    A,@DPTR
80FC0F FC                MOV     R4,A
80FC10 A3                INC     DPTR
80FC11 E0                MOVX    A,@DPTR
80FC12 2E                ADD     A,R6
80FC13 F582              MOV     DPL,A
80FC15 E4                CLR     A
80FC16 3C                ADDC    A,R4
80FC17 F583              MOV     DPH,A
80FC19 E0                MOVX    A,@DPTR
80FC1A FF                MOV     R7,A
80FC1B C3                CLR     C
80FC1C 9400              SUBB    A,#00H
80FC1E 4027              JC      ?C0325?SYSPARAMSET
80FC20 EF                MOV     A,R7
80FC21 D3                SETB    C
80FC22 9409              SUBB    A,#09H
80FC24 5021              JNC     ?C0325?SYSPARAMSET
  915: 						SystemParameter.coinValue[4] = SystemParameter.coinValue[4]*10 + *( InStr + i );						
80FC26 EF                MOV     A,R7
80FC27 FB                MOV     R3,A
80FC28 7A00              MOV     R2,#00H
80FC2A 90045F            MOV     DPTR,#SystemParameter+041H
80FC2D E0                MOVX    A,@DPTR
80FC2E FE                MOV     R6,A
80FC2F A3                INC     DPTR
80FC30 E0                MOVX    A,@DPTR
80FC31 FF                MOV     R7,A
80FC32 7C00              MOV     R4,#00H
80FC34 7D0A              MOV     R5,#0AH
80FC36 A512800559        ECALL   ?C?IMUL
80FC3B EF                MOV     A,R7
80FC3C 2B                ADD     A,R3
80FC3D FF                MOV     R7,A
80FC3E EA                MOV     A,R2
80FC3F 3E                ADDC    A,R6
80FC40 90045F            MOV     DPTR,#SystemParameter+041H
80FC43 F0                MOVX    @DPTR,A
80FC44 A3                INC     DPTR
80FC45 EF                MOV     A,R7
80FC46 F0                MOVX    @DPTR,A
  916: 				}	
80FC47         ?C0325?SYSPARAMSET:
80FC47 901754            MOV     DPTR,#i
80FC4A E0                MOVX    A,@DPTR
80FC4B 04                INC     A
80FC4C F0                MOVX    @DPTR,A
80FC4D 80B0              SJMP    ?C0323?SYSPARAMSET
80FC4F         ?C0324?SYSPARAMSET:
  917: 				SystemSave = 1;
80FC4F D22E              SETB    SystemSave
  918: 			}			
  919: 		break;
80FC51 02FDF6            LJMP    ?C0341?SYSPARAMSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 636


  920:         case 27: //# 6 coin
80FC54         ?C0327?SYSPARAMSET:
  921:         if( OutInFlag == 0 )
80FC54 301A03            JNB     OutInFlag,$ + 6H
80FC57 02FD7B            LJMP    ?C0328?SYSPARAMSET
  922: 			{			
  923: 				switch( SystemParameter.curUnit )
80FC5A 900466            MOV     DPTR,#SystemParameter+048H
80FC5D E0                MOVX    A,@DPTR
80FC5E FE                MOV     R6,A
80FC5F A3                INC     DPTR
80FC60 E0                MOVX    A,@DPTR
80FC61 FF                MOV     R7,A
80FC62 EE                MOV     A,R6
80FC63 6003              JZ      $ + 5H
80FC65 02FDF6            LJMP    ?C0341?SYSPARAMSET
80FC68 EF                MOV     A,R7
80FC69 24F6              ADD     A,#0F6H
80FC6B 603F              JZ      ?C0331?SYSPARAMSET
80FC6D 24A6              ADD     A,#0A6H
80FC6F 7003              JNZ     $ + 5H
80FC71 02FD07            LJMP    ?C0332?SYSPARAMSET
80FC74 2463              ADD     A,#063H
80FC76 6003              JZ      $ + 5H
80FC78 02FDF6            LJMP    ?C0341?SYSPARAMSET
  924: 				{
  925: 					case 1:
80FC7B         ?C0330?SYSPARAMSET:
  926: 						*len = sprintf( OutStr, "%u", SystemParameter.coinValue[5] );
80FC7B 90174D            MOV     DPTR,#OutStr
80FC7E E0                MOVX    A,@DPTR
80FC7F FE                MOV     R6,A
80FC80 A3                INC     DPTR
80FC81 E0                MOVX    A,@DPTR
80FC82 AA06              MOV     R2,AR6
80FC84 F9                MOV     R1,A
80FC85 7B00              MOV     R3,#?C?XDATASEG
80FC87 C003              PUSH    AR3
80FC89 C002              PUSH    AR2
80FC8B C001              PUSH    AR1
80FC8D 7B80              MOV     R3,#BYTE2 0801088H
80FC8F 7A10              MOV     R2,#HIGH 0801088H
80FC91 7988              MOV     R1,#LOW 0801088H
80FC93 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80FC96 A5128007B6        ECALL   ?C?PSTXDATA
80FC9B 900461            MOV     DPTR,#SystemParameter+043H
80FC9E E0                MOVX    A,@DPTR
80FC9F FF                MOV     R7,A
80FCA0 A3                INC     DPTR
80FCA1 E0                MOVX    A,@DPTR
80FCA2 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80FCA5 CF                XCH     A,R7
80FCA6 F0                MOVX    @DPTR,A
80FCA7 A3                INC     DPTR
80FCA8 EF                MOV     A,R7
80FCA9         
  927: 					break;				
80FCA9 02FD60            LJMP    ?C0472?SYSPARAMSET
  928: 					case 10:
80FCAC         ?C0331?SYSPARAMSET:
  929: 						*len = sprintf( OutStr, "%u.%u", SystemParameter.coinValue[5]/SystemParameter.curUnit,SystemParameter.coinV
>> alue[5]%SystemParameter.curUnit );
80FCAC 90174D            MOV     DPTR,#OutStr
80FCAF E0                MOVX    A,@DPTR
80FCB0 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 637


80FCB1 A3                INC     DPTR
80FCB2 E0                MOVX    A,@DPTR
80FCB3 AA06              MOV     R2,AR6
80FCB5 F9                MOV     R1,A
80FCB6 7B00              MOV     R3,#?C?XDATASEG
80FCB8 C003              PUSH    AR3
80FCBA C002              PUSH    AR2
80FCBC C001              PUSH    AR1
80FCBE 7B80              MOV     R3,#BYTE2 080108BH
80FCC0 7A10              MOV     R2,#HIGH 080108BH
80FCC2 798B              MOV     R1,#LOW 080108BH
80FCC4 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80FCC7 A5128007B6        ECALL   ?C?PSTXDATA
80FCCC 900466            MOV     DPTR,#SystemParameter+048H
80FCCF E0                MOVX    A,@DPTR
80FCD0 FC                MOV     R4,A
80FCD1 A3                INC     DPTR
80FCD2 E0                MOVX    A,@DPTR
80FCD3 FD                MOV     R5,A
80FCD4 900461            MOV     DPTR,#SystemParameter+043H
80FCD7 E0                MOVX    A,@DPTR
80FCD8 FE                MOV     R6,A
80FCD9 A3                INC     DPTR
80FCDA E0                MOVX    A,@DPTR
80FCDB FF                MOV     R7,A
80FCDC A51280056C        ECALL   ?C?UIDIV
80FCE1 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80FCE4 EE                MOV     A,R6
80FCE5 F0                MOVX    @DPTR,A
80FCE6 A3                INC     DPTR
80FCE7 EF                MOV     A,R7
80FCE8 F0                MOVX    @DPTR,A
80FCE9 900466            MOV     DPTR,#SystemParameter+048H
80FCEC E0                MOVX    A,@DPTR
80FCED FC                MOV     R4,A
80FCEE A3                INC     DPTR
80FCEF E0                MOVX    A,@DPTR
80FCF0 FD                MOV     R5,A
80FCF1 900461            MOV     DPTR,#SystemParameter+043H
80FCF4 E0                MOVX    A,@DPTR
80FCF5 FE                MOV     R6,A
80FCF6 A3                INC     DPTR
80FCF7 E0                MOVX    A,@DPTR
80FCF8 FF                MOV     R7,A
80FCF9 A51280056C        ECALL   ?C?UIDIV
80FCFE 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80FD01 EC                MOV     A,R4
80FD02 F0                MOVX    @DPTR,A
80FD03 A3                INC     DPTR
80FD04 ED                MOV     A,R5
80FD05         
  930: 					break;
80FD05 8059              SJMP    ?C0472?SYSPARAMSET
  931: 					case 100:
80FD07         ?C0332?SYSPARAMSET:
  932: 						*len = sprintf( OutStr, "%u.%02u", SystemParameter.coinValue[5]/SystemParameter.curUnit,SystemParameter.coi
>> nValue[5]%SystemParameter.curUnit );
80FD07 90174D            MOV     DPTR,#OutStr
80FD0A E0                MOVX    A,@DPTR
80FD0B FE                MOV     R6,A
80FD0C A3                INC     DPTR
80FD0D E0                MOVX    A,@DPTR
80FD0E AA06              MOV     R2,AR6
80FD10 F9                MOV     R1,A
80FD11 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 638


80FD13 C003              PUSH    AR3
80FD15 C002              PUSH    AR2
80FD17 C001              PUSH    AR1
80FD19 7B80              MOV     R3,#BYTE2 0801091H
80FD1B 7A10              MOV     R2,#HIGH 0801091H
80FD1D 7991              MOV     R1,#LOW 0801091H
80FD1F 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
80FD22 A5128007B6        ECALL   ?C?PSTXDATA
80FD27 900466            MOV     DPTR,#SystemParameter+048H
80FD2A E0                MOVX    A,@DPTR
80FD2B FC                MOV     R4,A
80FD2C A3                INC     DPTR
80FD2D E0                MOVX    A,@DPTR
80FD2E FD                MOV     R5,A
80FD2F 900461            MOV     DPTR,#SystemParameter+043H
80FD32 E0                MOVX    A,@DPTR
80FD33 FE                MOV     R6,A
80FD34 A3                INC     DPTR
80FD35 E0                MOVX    A,@DPTR
80FD36 FF                MOV     R7,A
80FD37 A51280056C        ECALL   ?C?UIDIV
80FD3C 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
80FD3F EE                MOV     A,R6
80FD40 F0                MOVX    @DPTR,A
80FD41 A3                INC     DPTR
80FD42 EF                MOV     A,R7
80FD43 F0                MOVX    @DPTR,A
80FD44 900466            MOV     DPTR,#SystemParameter+048H
80FD47 E0                MOVX    A,@DPTR
80FD48 FC                MOV     R4,A
80FD49 A3                INC     DPTR
80FD4A E0                MOVX    A,@DPTR
80FD4B FD                MOV     R5,A
80FD4C 900461            MOV     DPTR,#SystemParameter+043H
80FD4F E0                MOVX    A,@DPTR
80FD50 FE                MOV     R6,A
80FD51 A3                INC     DPTR
80FD52 E0                MOVX    A,@DPTR
80FD53 FF                MOV     R7,A
80FD54 A51280056C        ECALL   ?C?UIDIV
80FD59 901B85            MOV     DPTR,#?_sprintf?BYTE+08H
80FD5C EC                MOV     A,R4
80FD5D F0                MOVX    @DPTR,A
80FD5E A3                INC     DPTR
80FD5F ED                MOV     A,R5
80FD60         
80FD60 F0                MOVX    @DPTR,A
80FD61 D001              POP     AR1
80FD63 D002              POP     AR2
80FD65 D003              POP     AR3
80FD67 A512800949        ECALL   _sprintf
80FD6C 901751            MOV     DPTR,#len
80FD6F E0                MOVX    A,@DPTR
80FD70 FC                MOV     R4,A
80FD71 A3                INC     DPTR
80FD72 E0                MOVX    A,@DPTR
80FD73 F582              MOV     DPL,A
80FD75 8C83              MOV     DPH,R4
80FD77 EF                MOV     A,R7
80FD78 F0                MOVX    @DPTR,A
  933: 					break;					
80FD79 807B              SJMP    ?C0341?SYSPARAMSET
  934: 				}				
  935: 			}
80FD7B         ?C0328?SYSPARAMSET:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 639


  936: 			else
  937: 			{				
  938: 				//Trace( "\n set IP val \n");
  939: 				j = *len;											
80FD7B 901751            MOV     DPTR,#len
80FD7E E0                MOVX    A,@DPTR
80FD7F FE                MOV     R6,A
80FD80 A3                INC     DPTR
80FD81 E0                MOVX    A,@DPTR
80FD82 F582              MOV     DPL,A
80FD84 8E83              MOV     DPH,R6
80FD86 E0                MOVX    A,@DPTR
80FD87 901753            MOV     DPTR,#j
80FD8A F0                MOVX    @DPTR,A
  940: 				if( j == 0 )
80FD8B 6069              JZ      ?C0341?SYSPARAMSET
  941: 					break;
80FD8D         ?C0334?SYSPARAMSET:
  942: 				if( j > 5 )
80FD8D 901753            MOV     DPTR,#j
80FD90 E0                MOVX    A,@DPTR
80FD91 D3                SETB    C
80FD92 9405              SUBB    A,#05H
80FD94 4003              JC      ?C0335?SYSPARAMSET
  943: 					j = 5;
80FD96 7405              MOV     A,#05H
80FD98 F0                MOVX    @DPTR,A
80FD99         ?C0335?SYSPARAMSET:
  944: 				SystemParameter.coinValue[5] = 0;	
80FD99 E4                CLR     A
80FD9A 900461            MOV     DPTR,#SystemParameter+043H
80FD9D F0                MOVX    @DPTR,A
80FD9E A3                INC     DPTR
80FD9F F0                MOVX    @DPTR,A
  945: 				for( i = 0; i < j; i ++ )
80FDA0 901754            MOV     DPTR,#i
80FDA3 F0                MOVX    @DPTR,A
80FDA4         ?C0336?SYSPARAMSET:
80FDA4 901753            MOV     DPTR,#j
80FDA7 E0                MOVX    A,@DPTR
80FDA8 FF                MOV     R7,A
80FDA9 A3                INC     DPTR
80FDAA E0                MOVX    A,@DPTR
80FDAB FE                MOV     R6,A
80FDAC C3                CLR     C
80FDAD 9F                SUBB    A,R7
80FDAE 5044              JNC     ?C0337?SYSPARAMSET
  946: 				{
  947: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )					
80FDB0 90174F            MOV     DPTR,#InStr
80FDB3 E0                MOVX    A,@DPTR
80FDB4 FC                MOV     R4,A
80FDB5 A3                INC     DPTR
80FDB6 E0                MOVX    A,@DPTR
80FDB7 2E                ADD     A,R6
80FDB8 F582              MOV     DPL,A
80FDBA E4                CLR     A
80FDBB 3C                ADDC    A,R4
80FDBC F583              MOV     DPH,A
80FDBE E0                MOVX    A,@DPTR
80FDBF FF                MOV     R7,A
80FDC0 C3                CLR     C
80FDC1 9400              SUBB    A,#00H
80FDC3 4027              JC      ?C0338?SYSPARAMSET
80FDC5 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 640


80FDC6 D3                SETB    C
80FDC7 9409              SUBB    A,#09H
80FDC9 5021              JNC     ?C0338?SYSPARAMSET
  948: 						SystemParameter.coinValue[5] = SystemParameter.coinValue[5]*10 + *( InStr + i );						
80FDCB EF                MOV     A,R7
80FDCC FB                MOV     R3,A
80FDCD 7A00              MOV     R2,#00H
80FDCF 900461            MOV     DPTR,#SystemParameter+043H
80FDD2 E0                MOVX    A,@DPTR
80FDD3 FE                MOV     R6,A
80FDD4 A3                INC     DPTR
80FDD5 E0                MOVX    A,@DPTR
80FDD6 FF                MOV     R7,A
80FDD7 7C00              MOV     R4,#00H
80FDD9 7D0A              MOV     R5,#0AH
80FDDB A512800559        ECALL   ?C?IMUL
80FDE0 EF                MOV     A,R7
80FDE1 2B                ADD     A,R3
80FDE2 FF                MOV     R7,A
80FDE3 EA                MOV     A,R2
80FDE4 3E                ADDC    A,R6
80FDE5 900461            MOV     DPTR,#SystemParameter+043H
80FDE8 F0                MOVX    @DPTR,A
80FDE9 A3                INC     DPTR
80FDEA EF                MOV     A,R7
80FDEB F0                MOVX    @DPTR,A
  949: 				}	
80FDEC         ?C0338?SYSPARAMSET:
80FDEC 901754            MOV     DPTR,#i
80FDEF E0                MOVX    A,@DPTR
80FDF0 04                INC     A
80FDF1 F0                MOVX    @DPTR,A
80FDF2 80B0              SJMP    ?C0336?SYSPARAMSET
80FDF4         ?C0337?SYSPARAMSET:
  950: 				SystemSave = 1;
80FDF4 D22E              SETB    SystemSave
  951: 			}			
  952: 		break;
  953: 		//====================================================================================================
  954: 		default: break;
  955: 	}
  956: }
80FDF6         ?C0341?SYSPARAMSET:
80FDF6 A522              ERET    
----- FUNCTION _ReadWriteSysParam (END) -------


----- FUNCTION ?L?COM0041 (BEGIN) -----
80FDF8 7FFA              MOV     R7,#0FAH
----- FUNCTION _delay (BEGIN) -----
 FILE: 'common.c'
    6: void delay( uchar Cycle )
    7: {
;---- Variable 'Cycle' assigned to Register 'R7' ----
    8: 	while( Cycle ) 
80FDFA         ?C0001?COMMON:
    9: 		Cycle --;
80FDFA EF                MOV     A,R7
80FDFB 6003              JZ      ?C0003?COMMON
   10: }
80FDFD 1F                DEC     R7
80FDFE 80FA              SJMP    ?C0001?COMMON
   11: /////////////////////////////////////////////////////////////////////////////////
80FE00         ?C0003?COMMON:
80FE00 A522              ERET    
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 641


----- FUNCTION _delay (END) -------


----- FUNCTION ?L?COM001A (BEGIN) -----
80FE02 F0                MOVX    @DPTR,A
80FE03 E4                CLR     A
80FE04 FF                MOV     R7,A
----- FUNCTION _ZhkSerial1PutCh (BEGIN) -----
 FILE: 'Serial1.C'
   79: uchar ZhkSerial1PutCh( uchar ch )
   80: {
80FE05 90188B            MOV     DPTR,#ch
80FE08 EF                MOV     A,R7
80FE09 F0                MOVX    @DPTR,A
   81: //	uint data i;
80FE0A         ?C0005?SERIAL1:
   82: 	bit veri;
   83: //	Trace( "ZhkSerial1PutCh(%bx)",ch );
   84: 	while( ! TI_1 )
80FE0A A5208105          JB      TI_1,?C0006?SERIAL1
   85: 	TI_1  = 0;
80FE0E A5C281            CLR     TI_1
80FE11 80F7              SJMP    ?C0005?SERIAL1
80FE13         ?C0006?SERIAL1:
   86: 	delay( 250 );
80FE13 A51280FDF8        ECALL   ?L?COM0041
   87: 	delay( 250 );
80FE18 A51280FDF8        ECALL   ?L?COM0041
   88: 	ACC   = ch;
80FE1D 90188B            MOV     DPTR,#ch
80FE20 E0                MOVX    A,@DPTR
80FE21 FF                MOV     R7,A
   89: 	veri  = P;
80FE22 A2D0              MOV     C,P
80FE24 921C              MOV     veri,C
   90: 	if ( ZhkVerifyBit == VERIFY_ODD  ) veri = ! veri;
80FE26 902D54            MOV     DPTR,#ZhkSerial1Param+01H
80FE29 E0                MOVX    A,@DPTR
80FE2A FE                MOV     R6,A
80FE2B B40102            CJNE    A,#01H,?C0007?SERIAL1
80FE2E B21C              CPL     veri
80FE30         ?C0007?SERIAL1:
   91: 	if ( ZhkVerifyBit == VERIFY_NULL ) veri = 1;
80FE30 EE                MOV     A,R6
80FE31 7002              JNZ     ?C0008?SERIAL1
80FE33 D21C              SETB    veri
80FE35         ?C0008?SERIAL1:
   92: 	if ( ZhkDataBit < 8 )
80FE35 902D53            MOV     DPTR,#ZhkSerial1Param
80FE38 E0                MOVX    A,@DPTR
80FE39 C3                CLR     C
80FE3A 9408              SUBB    A,#08H
80FE3C 500A              JNC     ?C0009?SERIAL1
   93: 	{
   94: 		if ( veri ) ch |= 1 << 7;
80FE3E 301C07            JNB     veri,?C0009?SERIAL1
80FE41 EF                MOV     A,R7
80FE42 4480              ORL     A,#080H
80FE44 90188B            MOV     DPTR,#ch
80FE47 F0                MOVX    @DPTR,A
   95: 	}
80FE48         ?C0009?SERIAL1:
   96: 	TB8_1 = veri;
80FE48 A21C              MOV     C,veri
80FE4A A59283            MOV     TB8_1,C
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 642


   97: 	S1BUF = ch;
80FE4D 90188B            MOV     DPTR,#ch
80FE50 E0                MOVX    A,@DPTR
80FE51 A5F581            MOV     S1BUF,A
   98: 	return 0;
80FE54 7F00              MOV     R7,#00H
   99: }
80FE56         ?C0011?SERIAL1:
80FE56 A522              ERET    
----- FUNCTION _ZhkSerial1PutCh (END) -------


----- FUNCTION _ZhkVtiSendCmd (BEGIN) -----
 FILE: 'casher.c'
   46: void ZhkVtiSendCmd( unsigned char idata* buf , unsigned char style )
   47: {
80FE58 90184D            MOV     DPTR,#buf
80FE5B EF                MOV     A,R7
80FE5C F0                MOVX    @DPTR,A
;---- Variable 'style' assigned to Register 'R5' ----
   48: 	static unsigned char data state = 0x10;
   49: 	unsigned char data i,sum;
   50: 
   51: 	if ( style > 1 ) 
80FE5D ED                MOV     A,R5
80FE5E D3                SETB    C
80FE5F 9401              SUBB    A,#01H
80FE61 505D              JNC     ?C0002?CASHER
80FE63         ?C0001?CASHER:
   52: 		return;
   53: 	if ( state != 0x10 ) 
80FE63 E54D              MOV     A,state
80FE65 6410              XRL     A,#010H
80FE67 6003              JZ      ?C0003?CASHER
   54: 		state = 0x11;	
80FE69 754D11            MOV     state,#011H
80FE6C         ?C0003?CASHER:
   55: 	if ( style == 1 ) 
80FE6C ED                MOV     A,R5
80FE6D B40103            CJNE    A,#01H,?C0004?CASHER
   56: 		state ^= 0x01;
80FE70 634D01            XRL     state,#01H
80FE73         ?C0004?CASHER:
   57: 
   58: 	Trace("\n Send date to casher ");
   59: 	// 发送帧头
   60: 	ZhkSerial1PutCh( VTISERIAL_FRAMEHEAD );
80FE73 7F02              MOV     R7,#02H
80FE75 A51280FE05        ECALL   _ZhkSerial1PutCh
   61: 	Trace(" 0x%02bx", VTISERIAL_FRAMEHEAD );
   62: 	// 发送数据长度
   63: 	sum = 0x08;
80FE7A 752E08            MOV     sum,#08H
   64: 	ZhkSerial1PutCh( sum );
80FE7D AF2E              MOV     R7,sum
80FE7F A51280FE05        ECALL   _ZhkSerial1PutCh
   65: 	Trace(" 0x%02bx", sum );
   66: 
   67: 	// 发送状态字
   68: 	sum ^= state;
80FE84 E54D              MOV     A,state
80FE86 622E              XRL     sum,A
   69: 	ZhkSerial1PutCh( state );
80FE88 FF                MOV     R7,A
80FE89 A51280FE05        ECALL   _ZhkSerial1PutCh
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 643


   70: 	Trace(" 0x%02bx", state );
   71: 	for( i = 0 ; i < 3 ; i ++ )
80FE8E E4                CLR     A
80FE8F F52D              MOV     i,A
80FE91         ?C0005?CASHER:
   72: 	{
   73: 		ZhkSerial1PutCh( buf[ i ] );		
80FE91 90184D            MOV     DPTR,#buf
80FE94 E0                MOVX    A,@DPTR
80FE95 252D              ADD     A,i
80FE97 F8                MOV     R0,A
80FE98 E6                MOV     A,@R0
80FE99 FF                MOV     R7,A
80FE9A A51280FE05        ECALL   _ZhkSerial1PutCh
   74: 		Trace(" 0x%02bx", buf[ i ] );
   75: 		sum ^= buf[ i ];
80FE9F 90184D            MOV     DPTR,#buf
80FEA2 E0                MOVX    A,@DPTR
80FEA3 252D              ADD     A,i
80FEA5 F8                MOV     R0,A
80FEA6 E6                MOV     A,@R0
80FEA7 622E              XRL     sum,A
   76: 	}
80FEA9 052D              INC     i
80FEAB E52D              MOV     A,i
80FEAD C3                CLR     C
80FEAE 9403              SUBB    A,#03H
80FEB0 40DF              JC      ?C0005?CASHER
80FEB2         ?C0006?CASHER:
   77: 	ZhkSerial1PutCh( VTISERIAL_FRAMETAIL );	
80FEB2 7F03              MOV     R7,#03H
80FEB4 A51280FE05        ECALL   _ZhkSerial1PutCh
   78: 	Trace(" 0x%02bx", VTISERIAL_FRAMETAIL );
   79: 	ZhkSerial1PutCh( sum );
80FEB9 AF2E              MOV     R7,sum
80FEBB A51280FE05        ECALL   _ZhkSerial1PutCh
   80: 	Trace(" 0x%02bx \n", sum );
   81: }
80FEC0         ?C0002?CASHER:
80FEC0 A522              ERET    
----- FUNCTION _ZhkVtiSendCmd (END) -------


----- FUNCTION ZhkTimerInit (BEGIN) -----
 FILE: 'timer.c'
   19: void ZhkTimerInit( void )
   20: {
   21: 	TMOD &= 0xF0;
   22: 	TMOD |= 0x01;
80FEC2 5389F0            ANL     TMOD,#0F0H
   23: 	TL0   = ( uint )( 0x10000 + 16 - 10.0 * 1000 * OSCRATE / 1000000 / MACHINECYCLE / 12 ) % 256;
80FEC5 438901            ORL     TMOD,#01H
   24: 	TH0   = ( uint )( 0x10000 + 16 - 10.0 * 1000 * OSCRATE / 1000000 / MACHINECYCLE / 12 ) / 256;
80FEC8 758A10            MOV     TL0,#010H
   25: 	TR0   = 1;
80FECB 758CFA            MOV     TH0,#0FAH
   26: 	ET0   = 1;
80FECE D28C              SETB    TR0
   27: 	SgpSecTimer = 0;
80FED0 D2A9              SETB    ET0
   28: 	SgwSecTimer = 0;
80FED2 E4                CLR     A
80FED3 F51B              MOV     SgpSecTimer,A
   29: 	Tick = 0;
80FED5 F51E              MOV     SgwSecTimer,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 644


   30: 	Second = 0;
80FED7 F513              MOV     Tick,A
   31: 	YgpSecTimer = 0;
80FED9 F51F              MOV     Second,A
   32: 	LzjSecTimer = 0;
80FEDB F51C              MOV     YgpSecTimer,A
   33: 	ZhkDownMsgAckTimer = 0;
80FEDD F51D              MOV     LzjSecTimer,A
   34: 	ZhkBuzzerTimer = 0;
80FEDF F511              MOV     ZhkDownMsgAckTimer,A
80FEE1 F512              MOV     ZhkDownMsgAckTimer+01H,A
   35: 	QueryCashTimer = 0;
80FEE3 F518              MOV     ZhkBuzzerTimer,A
   36: 	ZhkMobileSecTimer = 0;
80FEE5 F515              MOV     QueryCashTimer,A
   37: 	AlarmSpacing = 0;
80FEE7 F517              MOV     ZhkMobileSecTimer,A
   38: 	GPRSModuleResetTimer = 0;
80FEE9 902DEA            MOV     DPTR,#AlarmSpacing
80FEEC F0                MOVX    @DPTR,A
   39: 	SendSMSTimer = 0;
80FEED 902DE8            MOV     DPTR,#GPRSModuleResetTimer
80FEF0 F0                MOVX    @DPTR,A
80FEF1 A3                INC     DPTR
80FEF2 F0                MOVX    @DPTR,A
   40: 	ReceiveSMSTimer = 0;
80FEF3 F510              MOV     SendSMSTimer,A
   41: 	QueryTimer = 0;
80FEF5 F519              MOV     ReceiveSMSTimer,A
   42: }
80FEF7 F514              MOV     QueryTimer,A
   43: void Zhktmr0( void ) interrupt 1 using 1 
80FEF9 A522              ERET    
----- FUNCTION ZhkTimerInit (END) -------


----- FUNCTION ZhkCasherRejectCash (BEGIN) -----
 FILE: 'casher.c'
  148: void ZhkCasherRejectCash( void )
  149: {	
  150: 	unsigned char data buf[ 3 ];
  151: 
  152: 	buf[ 0 ] = 0x00;
80FEFB E4                CLR     A
80FEFC F52A              MOV     buf,A
  153:     buf[ 1 ] = 0x50;             //0x54, 0x50 
80FEFE 752B50            MOV     buf+01H,#050H
  154:     buf[ 2 ] = 0x00;
80FF01 F52C              MOV     buf+02H,A
  155: 
  156: 	ZhkVtiSendCmd( buf , 1 );
80FF03 7F2A              MOV     R7,#LOW buf
80FF05 7D01              MOV     R5,#01H
80FF07 A50280FE58        EJMP    _ZhkVtiSendCmd
----- FUNCTION ZhkCasherRejectCash (END) -------


----- FUNCTION CasherDisableCasher (BEGIN) -----
 FILE: 'casher.c'
  171: void CasherDisableCasher( void )
  172: {
  173: 	unsigned char data buf[ 3 ];
  174: 
  175: 	buf[ 0 ] = 0x00;
80FF0C E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 645


80FF0D F52A              MOV     buf,A
  176:     buf[ 1 ] = 0x14;
80FF0F 752B14            MOV     buf+01H,#014H
  177:     buf[ 2 ] = 0x00; 
80FF12 F52C              MOV     buf+02H,A
  178: 
  179: 	ZhkVtiSendCmd( buf , 1 );
80FF14 7F2A              MOV     R7,#LOW buf
80FF16 7D01              MOV     R5,#01H
80FF18 A50280FE58        EJMP    _ZhkVtiSendCmd
----- FUNCTION CasherDisableCasher (END) -------


----- FUNCTION _ZhkCasherTxMsg (BEGIN) -----
 FILE: 'scheduler.c'
 1250: bit ZhkCasherTxMsg( struct COMMTASK xdata* TaskTemp, uchar xdata Flag )
 1251: {
80FF1D 90184C            MOV     DPTR,#Flag
80FF20 ED                MOV     A,R5
80FF21 F0                MOVX    @DPTR,A
;---- Variable 'TaskTemp' assigned to Register 'R6/R7' ----
 1252: 	switch( TaskTemp->Cmd )
 1253: 	{
80FF22 8F82              MOV     DPL,R7
80FF24 8E83              MOV     DPH,R6
80FF26 A3                INC     DPTR
80FF27 A3                INC     DPTR
80FF28 E0                MOVX    A,@DPTR
80FF29 24B0              ADD     A,#0B0H
80FF2B 6033              JZ      ?C0232?SCHEDULER
80FF2D 14                DEC     A
80FF2E 601A              JZ      ?C0236?SCHEDULER
80FF30 24FE              ADD     A,#0FEH
80FF32 600F              JZ      ?C0235?SCHEDULER
80FF34 24FE              ADD     A,#0FEH
80FF36 601E              JZ      ?C0237?SCHEDULER
80FF38 2403              ADD     A,#03H
80FF3A 7021              JNZ     ?C0238?SCHEDULER
 1254: 	case CASHER_PERMISSION:
 1255: 		break;
 1256: 	case CASHER_ACCEPT:
 1257: 		// 接收纸币
80FF3C         ?C0234?SCHEDULER:
 1258: 		ZhkCasherAcceptCash();
80FF3C A51280FF63        ECALL   ZhkCasherAcceptCash
 1259: 		break;
80FF41 801D              SJMP    ?C0232?SCHEDULER
 1260: 	case CASHER_REJECT:
80FF43         ?C0235?SCHEDULER:
 1261: 		// 拒收纸币
 1262: 		ZhkCasherRejectCash();
80FF43 A51280FEFB        ECALL   ZhkCasherRejectCash
 1263: 		break;
80FF48 8016              SJMP    ?C0232?SCHEDULER
 1264: 	case CASHER_QUERY:
80FF4A         ?C0236?SCHEDULER:
 1265: 		// 查询纸币器状态
 1266: 		ZhkCasherGetState( Flag );
80FF4A 90184C            MOV     DPTR,#Flag
80FF4D E0                MOVX    A,@DPTR
80FF4E FF                MOV     R7,A
80FF4F A51280FF75        ECALL   _ZhkCasherGetState
 1267: 		break;
80FF54 800A              SJMP    ?C0232?SCHEDULER
 1268: 	case CASHER_DISABLE:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 646


80FF56         ?C0237?SCHEDULER:
 1269: 		//禁能纸币器指令
 1270: 		CasherDisableCasher();
80FF56 A51280FF0C        ECALL   CasherDisableCasher
 1271: 		break;
80FF5B 8003              SJMP    ?C0232?SCHEDULER
 1272: 	default:
80FF5D         ?C0238?SCHEDULER:
 1273: 		return  0;
80FF5D C3                CLR     C
80FF5E 8001              SJMP    ?C0239?SCHEDULER
 1274: 	}
80FF60         ?C0232?SCHEDULER:
 1275: 	return 1;	
80FF60 D3                SETB    C
 1276: }
80FF61         ?C0239?SCHEDULER:
80FF61 A522              ERET    
----- FUNCTION _ZhkCasherTxMsg (END) -------


----- FUNCTION ZhkCasherAcceptCash (BEGIN) -----
 FILE: 'casher.c'
  137: void ZhkCasherAcceptCash( void )
  138: {	
  139: 	unsigned char data buf[ 3 ];
  140: 	
  141: 	buf[ 0 ] = CasherBit;
80FF63 85202A            MOV     buf,CasherBit
  142:     buf[ 1 ] = 0x30;              //0x34, 0x30
80FF66 752B30            MOV     buf+01H,#030H
  143:     buf[ 2 ] = 0x00;
80FF69 E4                CLR     A
80FF6A F52C              MOV     buf+02H,A
  144: 
  145: 	ZhkVtiSendCmd( buf , 1 );
80FF6C 7F2A              MOV     R7,#LOW buf
80FF6E 7D01              MOV     R5,#01H
80FF70 A50280FE58        EJMP    _ZhkVtiSendCmd
----- FUNCTION ZhkCasherAcceptCash (END) -------


----- FUNCTION _ZhkCasherGetState (BEGIN) -----
 FILE: 'casher.c'
  159: void ZhkCasherGetState( unsigned char Flag )
  160: {	
;---- Variable 'Flag' assigned to Register 'R6' ----
80FF75 AE07              MOV     R6,AR7
  161: 	unsigned char data buf[ 3 ];
  162: 
  163: 	buf[ 0 ] = CasherBit;
80FF77 85202A            MOV     buf,CasherBit
  164:     buf[ 1 ] = 0x14;
80FF7A 752B14            MOV     buf+01H,#014H
  165:     buf[ 2 ] = 0x00; 
80FF7D E4                CLR     A
80FF7E F52C              MOV     buf+02H,A
  166: 
  167: 	ZhkVtiSendCmd( buf , Flag );
80FF80 7F2A              MOV     R7,#LOW buf
80FF82 AD06              MOV     R5,AR6
80FF84 A50280FE58        EJMP    _ZhkVtiSendCmd
----- FUNCTION _ZhkCasherGetState (END) -------


LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 647


----- FUNCTION ZhkIOInputIsr (BEGIN) -----
 FILE: 'IOInput.c'
   72: void ZhkIOInputIsr( void ) using 1
   73: {
   74: 	#define HardIsPowerOff()     !( IOState & BitPowerOff )
   75: 	#define HardIsModeSwitchOn() !( IOState & BitModeSw )
   76: 	#define HardIsAlertOn()      !( IOState & BitAlert )
   77: 	
   78: //	static uchar xdata ModeSwitchTimer,PowerTimer,ShakeAlarmTimer;
   79: //	static bit ModeTemp,PowerTemp,ShakeAlarmFlag;
   80: 	static uchar xdata ModeSwitchTimer;
   81: 	static bit ModeTemp;
   82: 
   83: 	uchar data IOState;
   84: 	
   85: 	
   86: 	ZhkHardIOInputSelect();
80FF89 75900D            MOV     P1,#0DH
   87: 	_nop_();
80FF8C 00                NOP     
   88: 	_nop_();
80FF8D 00                NOP     
   89: 	_nop_();
80FF8E 00                NOP     
   90: 	IOState = P0;
80FF8F 858046            MOV     IOState,P0
   91: 	ZhkHardSramSelect();	
80FF92 759008            MOV     P1,#08H
   92: 	
   93: 	// 掉电检测 	
   94: /*	if ( HardIsPowerOff() )
   95: 	{
   96: 		if ( PowerTemp )
   97: 		{
   98: 			if ( PowerTimer ) 
   99: 				PowerTimer --;
  100: 			else
  101: 				ZhkPowerState = 1;
  102: 		}
  103: 		else
  104: 		{
  105: 			PowerTemp  = 1;
  106: 			PowerTimer = 10;
  107: 		}
  108: 	}
  109: 	else
  110: 	{
  111: 		ZhkPowerState  = 0;
  112: 		PowerTemp      = 0;
  113: 	}*/
  114: 	// 模式开关检测
  115: 	if ( HardIsModeSwitchOn() )
80FF95 E546              MOV     A,IOState
80FF97 20E01F            JB      ACC.0,?C0008?IOINPUT
  116: 	{
  117: 		if ( ModeTemp )
80FF9A 300812            JNB     ModeTemp,?C0009?IOINPUT
  118: 		{
  119: 			if ( ModeSwitchTimer )
80FF9D 902DC6            MOV     DPTR,#ModeSwitchTimer
80FFA0 E0                MOVX    A,@DPTR
80FFA1 6004              JZ      ?C0010?IOINPUT
  120: 				ModeSwitchTimer --;
80FFA3 14                DEC     A
80FFA4 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 648


80FFA5 8019              SJMP    ?C0014?IOINPUT
80FFA7         ?C0010?IOINPUT:
  121: 			else
  122: 				ZhkModeState = 1;
80FFA7 902DE5            MOV     DPTR,#ZhkModeState
80FFAA 7401              MOV     A,#01H
80FFAC F0                MOVX    @DPTR,A
  123: 		}
80FFAD 8011              SJMP    ?C0014?IOINPUT
80FFAF         ?C0009?IOINPUT:
  124: 		else
  125: 		{
  126: 			ModeTemp = 1;
80FFAF D208              SETB    ModeTemp
  127: 			ModeSwitchTimer = 10;
80FFB1 902DC6            MOV     DPTR,#ModeSwitchTimer
80FFB4 740A              MOV     A,#0AH
80FFB6 F0                MOVX    @DPTR,A
  128: 		}
  129: 	}
80FFB7 8007              SJMP    ?C0014?IOINPUT
80FFB9         ?C0008?IOINPUT:
  130: 	else
  131: 	{
  132: 		ZhkModeState = 0;
80FFB9 E4                CLR     A
80FFBA 902DE5            MOV     DPTR,#ZhkModeState
80FFBD F0                MOVX    @DPTR,A
  133: 		ModeTemp     = 0;
80FFBE C208              CLR     ModeTemp
  134: 	}
  135: 
  136: 	// 震动信号检测
  137:  /*   if ( HardAlarmCheck() )
  138: 	{
  139: 		if ( ShakeAlarmFlag )
  140: 		{
  141: 			if ( ShakeAlarmTimer )
  142: 				ShakeAlarmTimer --;
  143: 			else
  144: 				HardShakeAlarmState = 1;
  145: 		}
  146: 		else
  147: 		{
  148: 			ShakeAlarmFlag = 1;
  149: 			ShakeAlarmTimer = 1;      //10, 1,
  150: 		}
  151: 	}
  152: 	else
  153: 	{
  154: 		HardShakeAlarmState = 0;
  155: 		ShakeAlarmFlag = 0;
  156: 	}*/
  157: }
80FFC0         ?C0014?IOINPUT:
80FFC0 A522              ERET    
----- FUNCTION ZhkIOInputIsr (END) -------


----- FUNCTION WaterKeyEnable (BEGIN) -----
 FILE: 'device.c'
  126: void WaterKeyEnable( void )
  127: {
  128: 	INT0 = 0;
  129: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 649


80FFC2 C2B2              CLR     INT0
  130: 
80FFC4 A522              ERET    
----- FUNCTION WaterKeyEnable (END) -------


----- FUNCTION ZhkGetSchedulerClock (BEGIN) -----
 FILE: 'scheduler.c'
  357: uchar ZhkGetSchedulerClock( void )
  358: {
  359: 	uchar data ch;
  360: 	EA = 0;
80FFC6 C2AF              CLR     EA
  361: 	ch = ZhkSchedulerClock;
80FFC8 851A2E            MOV     ch,ZhkSchedulerClock
  362: 	ZhkSchedulerClock = 0;
80FFCB E4                CLR     A
80FFCC F51A              MOV     ZhkSchedulerClock,A
  363: 	EA = 1;
80FFCE D2AF              SETB    EA
  364: 	return ch;
80FFD0 AF2E              MOV     R7,ch
  365: }
80FFD2         ?C0049?SCHEDULER:
80FFD2 A522              ERET    
----- FUNCTION ZhkGetSchedulerClock (END) -------


----- FUNCTION ?L?COM0033 (BEGIN) -----
80FFD4 901849            MOV     DPTR,#TaskTemp
80FFD7 E0                MOVX    A,@DPTR
80FFD8 FE                MOV     R6,A
80FFD9 A3                INC     DPTR
80FFDA E0                MOVX    A,@DPTR
80FFDB FF                MOV     R7,A
----- FUNCTION _ZhkLcdTxMsg (BEGIN) -----
 FILE: 'scheduler.c'
  647: bit ZhkLcdTxMsg( struct COMMTASK xdata* NewTask )
  648: {
;---- Variable 'NewTask' assigned to Register 'R6/R7' ----
  649: 	// 更新sn计数
  650: 	Lcd.Sn ++;
80FFDC 902361            MOV     DPTR,#Lcd+01H
80FFDF E0                MOVX    A,@DPTR
80FFE0 04                INC     A
80FFE1 F0                MOVX    @DPTR,A
  651: 	if ( Lcd.Sn == 0 ) Lcd.Sn ++;
80FFE2 E0                MOVX    A,@DPTR
80FFE3 7003              JNZ     ?C0127?SCHEDULER
80FFE5 E0                MOVX    A,@DPTR
80FFE6 04                INC     A
80FFE7 F0                MOVX    @DPTR,A
80FFE8         ?C0127?SCHEDULER:
  652: 	NewTask->Sn = Lcd.Sn;
80FFE8 902361            MOV     DPTR,#Lcd+01H
80FFEB E0                MOVX    A,@DPTR
80FFEC 8F82              MOV     DPL,R7
80FFEE 8E83              MOV     DPH,R6
80FFF0 A3                INC     DPTR
80FFF1 A3                INC     DPTR
80FFF2 A3                INC     DPTR
80FFF3 F0                MOVX    @DPTR,A
  653: 	ZhkBusTxMsg( NewTask );	
80FFF4 A51281381A        ECALL   _ZhkBusTxMsg
  654: 	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 650


  655: 	return 1;
80FFF9 D3                SETB    C
  656: }
80FFFA         ?C0128?SCHEDULER:
80FFFA A522              ERET    
----- FUNCTION _ZhkLcdTxMsg (END) -------


----- FUNCTION SysParamManage (BEGIN) -----
 FILE: 'SysParamSet.c'
 1183: bit SysParamManage()		
 1184: {
 1185: 	u_char  xdata fristNum ;//一级菜单编号
 1186: 	u_char  xdata LineNum ;//选中屏幕的行号	
 1187: 	u_char xdata  ReDisplen = 0;
810000 E4                CLR     A
810001 901728            MOV     DPTR,#ReDisplen
810004 F0                MOVX    @DPTR,A
 1188: 	//bit0为上移光不改变菜单项,bit1为下移光标不改变菜单项
 1189: 	u_char xdata  ChangeLineflag = 0;	
810005 A3                INC     DPTR
810006 F0                MOVX    @DPTR,A
 1190: 
 1191: 	ClearKey();
810007 A5128087A8        ECALL   ClearKey
 1192: 	
 1193: 	/*显示两行菜单及其值*/				
 1194: 	DisplayMenuAndVal( 0, 0, 1 );	
81000C D219              SETB    ?_DisplayMenuAndVal?BIT
81000E E4                CLR     A
81000F FD                MOV     R5,A
810010 FF                MOV     R7,A
810011 A512805C2D        ECALL   _DisplayMenuAndVal
 1195: 	DisplayMenuAndVal( 1, 1, 1 );		
810016 D219              SETB    ?_DisplayMenuAndVal?BIT
810018 7D01              MOV     R5,#01H
81001A 7F01              MOV     R7,#01H
81001C A512805C2D        ECALL   _DisplayMenuAndVal
 1196: 	DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
810021 A512808171        ECALL   ?L?COM000F
 1197: 	fristNum = 1;
810026 901726            MOV     DPTR,#fristNum
810029 7401              MOV     A,#01H
81002B F0                MOVX    @DPTR,A
 1198: 	LineNum = 2;	
81002C A3                INC     DPTR
81002D 04                INC     A
81002E F0                MOVX    @DPTR,A
81002F         ?C0389?SYSPARAMSET:
 1199: 	while( 1 )
 1200: 	{		
 1201: 		/*判断按下何键*/			
 1202: 		SP_MenuSelected( &fristNum, &LineNum, MENU_COUNT( SysMenustr ) - 1, ChangeLineflag );			
81002F 7E17              MOV     R6,#HIGH fristNum
810031 7F26              MOV     R7,#LOW fristNum
810033 7C17              MOV     R4,#HIGH LineNum
810035 7D27              MOV     R5,#LOW LineNum
810037 901729            MOV     DPTR,#ChangeLineflag
81003A E0                MOVX    A,@DPTR
81003B 90172F            MOV     DPTR,#?_SP_MenuSelected?BYTE+05H
81003E F0                MOVX    @DPTR,A
81003F 7B1B              MOV     R3,#01BH
810041 A512808526        ECALL   _SP_MenuSelected
 1203: 		//选中了某项菜单				
 1204: 		if( fristNum == 100 )//选中退出									
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 651


810046 901726            MOV     DPTR,#fristNum
810049 E0                MOVX    A,@DPTR
81004A 6464              XRL     A,#064H
81004C 7003              JNZ     $ + 5H
81004E 020152            LJMP    ?C0390?SYSPARAMSET
 1205: 			break;		
810051         ?C0391?SYSPARAMSET:
 1206: 		else//没有选中退出
 1207: 		{				
 1208: 			ClearKey();									
810051 A5128087A8        ECALL   ClearKey
 1209: 			EditParam( fristNum, LineNum - 1 );	
810056 901726            MOV     DPTR,#fristNum
810059 E0                MOVX    A,@DPTR
81005A FF                MOV     R7,A
81005B A3                INC     DPTR
81005C E0                MOVX    A,@DPTR
81005D 14                DEC     A
81005E FD                MOV     R5,A
81005F A512805D83        ECALL   _EditParam
 1210: 			//重新显示此项参数的值			
 1211: 			if( LineNum == 2 )
810064 901727            MOV     DPTR,#LineNum
810067 E0                MOVX    A,@DPTR
810068 6402              XRL     A,#02H
81006A 7071              JNZ     ?C0393?SYSPARAMSET
 1212: 			{			
 1213: 				if( fristNum == 0 )
81006C 901726            MOV     DPTR,#fristNum
81006F E0                MOVX    A,@DPTR
810070 7006              JNZ     ?C0394?SYSPARAMSET
 1214: 					ReDisplen = DisplayMenuAndVal( 0, MENU_COUNT( SysMenustr ) - 1, 1 );
810072 D219              SETB    ?_DisplayMenuAndVal?BIT
810074 7D1B              MOV     R5,#01BH
810076 8009              SJMP    ?C0478?SYSPARAMSET
810078         ?C0394?SYSPARAMSET:
 1215: 				else						
 1216: 					ReDisplen = DisplayMenuAndVal( 0, fristNum-1, 1 );						
810078 901726            MOV     DPTR,#fristNum
81007B E0                MOVX    A,@DPTR
81007C 14                DEC     A
81007D FD                MOV     R5,A
81007E D219              SETB    ?_DisplayMenuAndVal?BIT
810080 E4                CLR     A
810081         
810081 FF                MOV     R7,A
810082 A512805C2D        ECALL   _DisplayMenuAndVal
810087 901728            MOV     DPTR,#ReDisplen
81008A EF                MOV     A,R7
81008B F0                MOVX    @DPTR,A
81008C         ?C0395?SYSPARAMSET:
 1217: 				if( ReDisplen > 0 )
81008C 901728            MOV     DPTR,#ReDisplen
81008F E0                MOVX    A,@DPTR
810090 FF                MOV     R7,A
810091 D3                SETB    C
810092 9400              SUBB    A,#00H
810094 402A              JC      ?C0396?SYSPARAMSET
 1218: 				{
 1219: 					DisplayStr( 0, 1, 1,  y_displaystr + 20, ReDisplen );//显示菜单					
810096 D21A              SETB    ?_DisplayStr?BIT
810098 7B00              MOV     R3,#?C?XDATASEG
81009A 7A2D              MOV     R2,#HIGH y_displaystr+014H
81009C 79AE              MOV     R1,#LOW y_displaystr+014H
81009E 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 652


8100A1 A5128007B6        ECALL   ?C?PSTXDATA
8100A6 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
8100A9 EF                MOV     A,R7
8100AA F0                MOVX    @DPTR,A
8100AB 7D01              MOV     R5,#01H
8100AD E4                CLR     A
8100AE FF                MOV     R7,A
8100AF A512808062        ECALL   _DisplayStr
 1220: 					ReDisplen = 0;
8100B4 E4                CLR     A
8100B5 901728            MOV     DPTR,#ReDisplen
8100B8 F0                MOVX    @DPTR,A
 1221: 					ChangeLineflag |=0x01;
8100B9 A3                INC     DPTR
8100BA E0                MOVX    A,@DPTR
8100BB 4401              ORL     A,#01H
8100BD F0                MOVX    @DPTR,A
 1222: 				}
8100BE 8078              SJMP    ?C0399?SYSPARAMSET
8100C0         ?C0396?SYSPARAMSET:
 1223: 				else
 1224: 				{
 1225: 					ReDisplen = DisplayMenuAndVal( 1, fristNum, 1 );
8100C0 901726            MOV     DPTR,#fristNum
8100C3 E0                MOVX    A,@DPTR
8100C4 FD                MOV     R5,A
8100C5 D219              SETB    ?_DisplayMenuAndVal?BIT
8100C7 7F01              MOV     R7,#01H
8100C9 A512805C2D        ECALL   _DisplayMenuAndVal
8100CE 901728            MOV     DPTR,#ReDisplen
8100D1 EF                MOV     A,R7
8100D2 F0                MOVX    @DPTR,A
 1226: 					if( ReDisplen > 0 )
8100D3 D3                SETB    C
8100D4 9400              SUBB    A,#00H
8100D6 4060              JC      ?C0399?SYSPARAMSET
 1227: 						ChangeLineflag = 0;
8100D8 E4                CLR     A
8100D9 A3                INC     DPTR
8100DA F0                MOVX    @DPTR,A
 1228: 				}
 1229: 			}
8100DB 805B              SJMP    ?C0399?SYSPARAMSET
8100DD         ?C0393?SYSPARAMSET:
 1230: 			else
 1231: 			{	
 1232: 				ReDisplen = DisplayMenuAndVal( 0, fristNum, 1 );				
8100DD 901726            MOV     DPTR,#fristNum
8100E0 A512805C27        ECALL   ?L?COM0022
8100E5 901728            MOV     DPTR,#ReDisplen
8100E8 EF                MOV     A,R7
8100E9 F0                MOVX    @DPTR,A
 1233: 				if( ReDisplen > 0 )
8100EA D3                SETB    C
8100EB 9400              SUBB    A,#00H
8100ED 402D              JC      ?C0400?SYSPARAMSET
 1234: 				{
 1235: 					DisplayStr( 0, 1, 1,  y_displaystr + 20, ReDisplen );//显示菜单					
8100EF D21A              SETB    ?_DisplayStr?BIT
8100F1 7B00              MOV     R3,#?C?XDATASEG
8100F3 7A2D              MOV     R2,#HIGH y_displaystr+014H
8100F5 79AE              MOV     R1,#LOW y_displaystr+014H
8100F7 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
8100FA A5128007B6        ECALL   ?C?PSTXDATA
8100FF 901728            MOV     DPTR,#ReDisplen
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 653


810102 E0                MOVX    A,@DPTR
810103 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
810106 F0                MOVX    @DPTR,A
810107 7D01              MOV     R5,#01H
810109 E4                CLR     A
81010A FF                MOV     R7,A
81010B A512808062        ECALL   _DisplayStr
 1236: 					ReDisplen = 0;
810110 E4                CLR     A
810111 901728            MOV     DPTR,#ReDisplen
810114 F0                MOVX    @DPTR,A
 1237: 					ChangeLineflag |=0x02;
810115 A3                INC     DPTR
810116 E0                MOVX    A,@DPTR
810117 4402              ORL     A,#02H
810119 F0                MOVX    @DPTR,A
 1238: 				}
81011A 801C              SJMP    ?C0399?SYSPARAMSET
81011C         ?C0400?SYSPARAMSET:
 1239: 				else
 1240: 				{
 1241: 					if( fristNum == ( MENU_COUNT( SysMenustr ) - 1 ) )
81011C 901726            MOV     DPTR,#fristNum
81011F E0                MOVX    A,@DPTR
810120 B41B06            CJNE    A,#01BH,?C0402?SYSPARAMSET
 1242: 						DisplayMenuAndVal( 1, 0, 1 );	
810123 D219              SETB    ?_DisplayMenuAndVal?BIT
810125 E4                CLR     A
810126 FD                MOV     R5,A
810127 8008              SJMP    ?C0479?SYSPARAMSET
810129         ?C0402?SYSPARAMSET:
 1243: 					else						
 1244: 						DisplayMenuAndVal( 1, fristNum + 1, 1 );	
810129 901726            MOV     DPTR,#fristNum
81012C E0                MOVX    A,@DPTR
81012D 04                INC     A
81012E FD                MOV     R5,A
81012F D219              SETB    ?_DisplayMenuAndVal?BIT
810131         
810131 7F01              MOV     R7,#01H
810133 A512805C2D        ECALL   _DisplayMenuAndVal
 1245: 				}
 1246: 			//	DisplayMenuAndVal( 0, fristNum, 1 );
 1247: 			}			
810138         ?C0399?SYSPARAMSET:
 1248: 			DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//设置光标为整行状态			
810138 901727            MOV     DPTR,#LineNum
81013B E0                MOVX    A,@DPTR
81013C 14                DEC     A
81013D FD                MOV     R5,A
81013E D21A              SETB    ?_DisplayCursorState?BIT
810140 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
810143 7402              MOV     A,#02H
810145 F0                MOVX    @DPTR,A
810146 D21B              SETB    ?_DisplayCursorState?BIT+01H
810148 E4                CLR     A
810149 FF                MOV     R7,A
81014A A51280817F        ECALL   _DisplayCursorState
 1249: 		}
 1250: 	}		
81014F 02002F            LJMP    ?C0389?SYSPARAMSET
810152         ?C0390?SYSPARAMSET:
 1251: 	return 0;
810152 C3                CLR     C
 1252: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 654


810153         ?C0404?SYSPARAMSET:
810153 A522              ERET    
----- FUNCTION SysParamManage (END) -------


----- FUNCTION CurrencyCountMenu (BEGIN) -----
 FILE: 'countermaint.c'
  574: void CurrencyCountMenu()
  575: {
  576: 	u_char xdata key = 0;
  577: 	bit	data Notout = 1;
810155 E4                CLR     A
810156 901729            MOV     DPTR,#key
810159 F0                MOVX    @DPTR,A
  578: 	u_char  xdata firstNum = 1;//一级菜单编号
81015A D219              SETB    Notout
  579: 	u_char  xdata LineNum = 2;//选中屏幕的行号	
81015C A3                INC     DPTR
81015D 04                INC     A
81015E F0                MOVX    @DPTR,A
  580: 	u_char xdata  MenuNum = 0;
81015F A3                INC     DPTR
810160 04                INC     A
810161 F0                MOVX    @DPTR,A
  581: 
810162 E4                CLR     A
810163 A3                INC     DPTR
810164 F0                MOVX    @DPTR,A
  582: 	ClearDisplayLine( 1 );
810165 A5128087B2        ECALL   ?L?COM0014
  583: 	ClearDisplayLine( 2 );		
  584: 	DispCurrencyList( 0, 0 );
81016A E4                CLR     A
81016B FD                MOV     R5,A
81016C FF                MOV     R7,A
81016D A512806297        ECALL   _DispCurrencyList
  585: 	DispCurrencyList( 1, 1 );
810172 7D01              MOV     R5,#01H
810174 7F01              MOV     R7,#01H
810176 A512806297        ECALL   _DispCurrencyList
  586: 	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
81017B D21A              SETB    ?_DisplayCursorState?BIT
81017D 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
810180 7402              MOV     A,#02H
810182 F0                MOVX    @DPTR,A
810183 D21B              SETB    ?_DisplayCursorState?BIT+01H
810185 E4                CLR     A
810186 FD                MOV     R5,A
810187 FF                MOV     R7,A
810188 A51280817F        ECALL   _DisplayCursorState
  587: 	MenuNum = MENU_COUNT( CurrencyMenuStr ) - 1;	
81018D 90172C            MOV     DPTR,#MenuNum
810190 740A              MOV     A,#0AH
810192 F0                MOVX    @DPTR,A
810193         ?C0119?COUNTERMAINT:
  588: 	
  589: 	while( Notout )
810193 201903            JB      Notout,$ + 6H
810196 020291            LJMP    ?C0137?COUNTERMAINT
  590: 	{		
  591: 		/*判断按下何键*/	
  592: 		key = GetKey();
810199 A512809275        ECALL   GetKey
81019E 901729            MOV     DPTR,#key
8101A1 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 655


8101A2 F0                MOVX    @DPTR,A
  593: 		switch( key )		
8101A3 24E5              ADD     A,#0E5H
8101A5 7003              JNZ     $ + 5H
8101A7 020272            LJMP    ?C0136?COUNTERMAINT
8101AA 24CB              ADD     A,#0CBH
8101AC 6070              JZ      ?C0129?COUNTERMAINT
8101AE 2408              ADD     A,#08H
8101B0 6003              JZ      $ + 5H
8101B2 020274            LJMP    ?C0121?COUNTERMAINT
  594: 		{
  595: 			case KEY_UP://上移  	
8101B5         ?C0122?COUNTERMAINT:
  596: 			    if( LineNum == 2 )//选中标记上移
8101B5 90172B            MOV     DPTR,#LineNum
8101B8 E0                MOVX    A,@DPTR
8101B9 6402              XRL     A,#02H
8101BB 7032              JNZ     ?C0123?COUNTERMAINT
  597: 			    {			     
  598: 			    	DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标
8101BD D21A              SETB    ?_DisplayCursorState?BIT
8101BF 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
8101C2 7402              MOV     A,#02H
8101C4 F0                MOVX    @DPTR,A
8101C5 D21B              SETB    ?_DisplayCursorState?BIT+01H
8101C7 E4                CLR     A
8101C8 FD                MOV     R5,A
8101C9 FF                MOV     R7,A
8101CA A51280817F        ECALL   _DisplayCursorState
  599: 			    	LineNum = 1;
8101CF 90172B            MOV     DPTR,#LineNum
8101D2 7401              MOV     A,#01H
8101D4 F0                MOVX    @DPTR,A
  600: 					if( firstNum == 0 )
8101D5 90172A            MOV     DPTR,#firstNum
8101D8 E0                MOVX    A,@DPTR
8101D9 700B              JNZ     ?C0124?COUNTERMAINT
  601: 						firstNum = MenuNum;					
8101DB 90172C            MOV     DPTR,#MenuNum
8101DE E0                MOVX    A,@DPTR
8101DF 90172A            MOV     DPTR,#firstNum
8101E2 F0                MOVX    @DPTR,A
8101E3 020274            LJMP    ?C0121?COUNTERMAINT
8101E6         ?C0124?COUNTERMAINT:
  602: 					else
  603: 						firstNum--;			    
8101E6 90172A            MOV     DPTR,#firstNum
8101E9 E0                MOVX    A,@DPTR
8101EA 14                DEC     A
8101EB F0                MOVX    @DPTR,A
  604: 			     }
8101EC 020274            LJMP    ?C0121?COUNTERMAINT
8101EF         ?C0123?COUNTERMAINT:
  605: 			     else//菜单上翻
  606: 			     {
  607: 				 	DispCurrencyList( 1, firstNum );			     
8101EF A512806290        ECALL   ?L?COM002F
  608: 				  	if( firstNum == 0 )
8101F4 90172A            MOV     DPTR,#firstNum
8101F7 E0                MOVX    A,@DPTR
8101F8 700A              JNZ     ?C0127?COUNTERMAINT
  609: 				  		firstNum = MenuNum;					
8101FA 90172C            MOV     DPTR,#MenuNum
8101FD E0                MOVX    A,@DPTR
8101FE 90172A            MOV     DPTR,#firstNum
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 656


810201 F0                MOVX    @DPTR,A
810202 8006              SJMP    ?C0128?COUNTERMAINT
810204         ?C0127?COUNTERMAINT:
  610: 				  	else
  611: 						firstNum--;	
810204 90172A            MOV     DPTR,#firstNum
810207 E0                MOVX    A,@DPTR
810208 14                DEC     A
810209 F0                MOVX    @DPTR,A
81020A         ?C0128?COUNTERMAINT:
  612: 					DispCurrencyList( 0, firstNum );
81020A 90172A            MOV     DPTR,#firstNum
81020D E0                MOVX    A,@DPTR
81020E FD                MOV     R5,A
81020F E4                CLR     A
810210 FF                MOV     R7,A
810211 A512806297        ECALL   _DispCurrencyList
  613: 				  	LineNum = 1;										
810216 90172B            MOV     DPTR,#LineNum
810219 7401              MOV     A,#01H
81021B F0                MOVX    @DPTR,A
  614: 			     }
  615: 				 break;
81021C 8056              SJMP    ?C0121?COUNTERMAINT
  616: 			case KEY_DOWN://下移				
81021E         ?C0129?COUNTERMAINT:
  617: 				if( LineNum == 1 )//选中标记下移
81021E 90172B            MOV     DPTR,#LineNum
810221 E0                MOVX    A,@DPTR
810222 6401              XRL     A,#01H
810224 701D              JNZ     ?C0130?COUNTERMAINT
  618: 				{			
  619: 				     DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
810226 A512808171        ECALL   ?L?COM000F
  620: 					 if( firstNum == MenuNum )
81022B 90172C            MOV     DPTR,#MenuNum
81022E E0                MOVX    A,@DPTR
81022F FF                MOV     R7,A
810230 90172A            MOV     DPTR,#firstNum
810233 E0                MOVX    A,@DPTR
810234 B50704            CJNE    A,AR7,?C0131?COUNTERMAINT
  621: 						firstNum = 0;					
810237 E4                CLR     A
810238 F0                MOVX    @DPTR,A
810239 802F              SJMP    ?C0203?COUNTERMAINT
81023B         ?C0131?COUNTERMAINT:
  622: 					 else						
  623: 				    	firstNum++;				     
81023B 90172A            MOV     DPTR,#firstNum
81023E E0                MOVX    A,@DPTR
81023F 04                INC     A
810240 F0                MOVX    @DPTR,A
810241         ?C0132?COUNTERMAINT:
  624: 				     LineNum = 2;				     
  625: 				 }
810241 8027              SJMP    ?C0203?COUNTERMAINT
810243         ?C0130?COUNTERMAINT:
  626: 				 else//菜单下翻
  627: 				 {
  628: 				 	DispCurrencyList( 0, firstNum );
810243 90172A            MOV     DPTR,#firstNum
810246 E0                MOVX    A,@DPTR
810247 FD                MOV     R5,A
810248 E4                CLR     A
810249 FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 657


81024A A512806297        ECALL   _DispCurrencyList
  629: 					if( firstNum == MenuNum )
81024F 90172C            MOV     DPTR,#MenuNum
810252 E0                MOVX    A,@DPTR
810253 FF                MOV     R7,A
810254 90172A            MOV     DPTR,#firstNum
810257 E0                MOVX    A,@DPTR
810258 B50704            CJNE    A,AR7,?C0134?COUNTERMAINT
  630: 						firstNum = 0;					
81025B E4                CLR     A
81025C F0                MOVX    @DPTR,A
81025D 8006              SJMP    ?C0135?COUNTERMAINT
81025F         ?C0134?COUNTERMAINT:
  631: 					else				    	 
  632: 				    	firstNum++;				
81025F 90172A            MOV     DPTR,#firstNum
810262 E0                MOVX    A,@DPTR
810263 04                INC     A
810264 F0                MOVX    @DPTR,A
810265         ?C0135?COUNTERMAINT:
  633: 					DispCurrencyList( 1, firstNum );
810265 A512806290        ECALL   ?L?COM002F
  634: 					LineNum = 2;					
81026A         
81026A 90172B            MOV     DPTR,#LineNum
81026D 7402              MOV     A,#02H
81026F F0                MOVX    @DPTR,A
  635: 				}
  636: 				break;
810270 8002              SJMP    ?C0121?COUNTERMAINT
  637: 			case KEY_CANCEL:
810272         ?C0136?COUNTERMAINT:
  638: 				Notout = 0;
810272 C219              CLR     Notout
  639: 				break;					
  640: 		}
810274         ?C0121?COUNTERMAINT:
  641: 		SchedulerProcess();//让出时间片
810274 A512809545        ECALL   SchedulerProcess
  642: 		WaitForWork( 100, &Lcd );
810279 E4                CLR     A
81027A 7F64              MOV     R7,#064H
81027C FE                MOV     R6,A
81027D FD                MOV     R5,A
81027E FC                MOV     R4,A
81027F 901841            MOV     DPTR,#?_WaitForWork?BYTE+04H
810282 7423              MOV     A,#HIGH Lcd
810284 F0                MOVX    @DPTR,A
810285 A3                INC     DPTR
810286 7460              MOV     A,#LOW Lcd
810288 F0                MOVX    @DPTR,A
810289 A512807B3D        ECALL   _WaitForWork
  643: 	}
81028E 020193            LJMP    ?C0119?COUNTERMAINT
  644: }
810291         ?C0137?COUNTERMAINT:
810291 A522              ERET    
----- FUNCTION CurrencyCountMenu (END) -------


----- FUNCTION _ReadWriteRactParam (BEGIN) -----
 FILE: 'RackSet.c'
   54: void ReadWriteRactParam( u_char Num,u_char xdata *OutStr,u_char xdata *InStr ,u_char xdata *len, bit OutInFlag )
   55: {	
810293 901756            MOV     DPTR,#OutStr
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 658


810296 EC                MOV     A,R4
810297 F0                MOVX    @DPTR,A
810298 A3                INC     DPTR
810299 ED                MOV     A,R5
81029A F0                MOVX    @DPTR,A
81029B A3                INC     DPTR
81029C EA                MOV     A,R2
81029D F0                MOVX    @DPTR,A
81029E A3                INC     DPTR
81029F EB                MOV     A,R3
8102A0 F0                MOVX    @DPTR,A
;---- Variable 'Num' assigned to Register 'R7' ----
   56: 	u_char  xdata Templen = 0;	
   57: 	u_char	xdata  i = 0;
8102A1 E4                CLR     A
8102A2 90175C            MOV     DPTR,#Templen
8102A5 F0                MOVX    @DPTR,A
   58: 	uint	xdata temp = 0;	
8102A6 A3                INC     DPTR
8102A7 F0                MOVX    @DPTR,A
   59: 
8102A8 A3                INC     DPTR
8102A9 F0                MOVX    @DPTR,A
8102AA A3                INC     DPTR
8102AB F0                MOVX    @DPTR,A
   60: 	switch( Num )
8102AC EF                MOV     A,R7
8102AD A5128007CD        ECALL   ?C?CCASEX
8102B2 02D7              DW      ?C0002?RACKSET
8102B4 00                DB      00H
8102B5 032F              DW      ?C0004?RACKSET
8102B7 01                DB      01H
8102B8 03E1              DW      ?C0013?RACKSET
8102BA 02                DB      02H
8102BB 04AB              DW      ?C0022?RACKSET
8102BD 03                DB      03H
8102BE 055A              DW      ?C0031?RACKSET
8102C0 04                DB      04H
8102C1 0609              DW      ?C0040?RACKSET
8102C3 05                DB      05H
8102C4 06B8              DW      ?C0049?RACKSET
8102C6 06                DB      06H
8102C7 0767              DW      ?C0058?RACKSET
8102C9 07                DB      07H
8102CA 0816              DW      ?C0067?RACKSET
8102CC 08                DB      08H
8102CD 08C5              DW      ?C0076?RACKSET
8102CF 09                DB      09H
8102D0 0974              DW      ?C0085?RACKSET
8102D2 0A                DB      0AH
8102D3 0000              DW      00H
8102D5 0A3B              DW      ?C0094?RACKSET
   61: 	{
   62: 		case 0:	//层架编号	
8102D7         ?C0002?RACKSET:
   63: 			if( OutInFlag == 0 )
8102D7 301A03            JNB     OutInFlag,$ + 6H
8102DA 020A3B            LJMP    ?C0094?RACKSET
   64: 			{				
   65: 				sprintf( OutStr, "%bu", iRackSet[RackNo - 1].RackNo );//GoodsWayNoList[m_SetArrayNo].GoodsWayNo)				
8102DD 901756            MOV     DPTR,#OutStr
8102E0 E0                MOVX    A,@DPTR
8102E1 FE                MOV     R6,A
8102E2 A3                INC     DPTR
8102E3 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 659


8102E4 AA06              MOV     R2,AR6
8102E6 F9                MOV     R1,A
8102E7 7B00              MOV     R3,#?C?XDATASEG
8102E9 C003              PUSH    AR3
8102EB C002              PUSH    AR2
8102ED C001              PUSH    AR1
8102EF 7B80              MOV     R3,#BYTE2 08013BEH
8102F1 7A13              MOV     R2,#HIGH 08013BEH
8102F3 79BE              MOV     R1,#LOW 08013BEH
8102F5 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8102F8 A5128007B6        ECALL   ?C?PSTXDATA
8102FD 902DF1            MOV     DPTR,#RackNo
810300 E0                MOVX    A,@DPTR
810301 75F003            MOV     B,#03H
810304 A4                MUL     AB
810305 2402              ADD     A,#LOW iRackSet-03H
810307 F582              MOV     DPL,A
810309 E4                CLR     A
81030A 3404              ADDC    A,#HIGH iRackSet-03H
81030C F583              MOV     DPH,A
81030E E0                MOVX    A,@DPTR
81030F 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
810312 F0                MOVX    @DPTR,A
810313 D001              POP     AR1
810315 D002              POP     AR2
810317 D003              POP     AR3
810319 A512800949        ECALL   _sprintf
   66: 				*len = 2;
81031E 90175A            MOV     DPTR,#len
810321 E0                MOVX    A,@DPTR
810322 FE                MOV     R6,A
810323 A3                INC     DPTR
810324 E0                MOVX    A,@DPTR
810325 F582              MOV     DPL,A
810327 8E83              MOV     DPH,R6
810329 7402              MOV     A,#02H
81032B F0                MOVX    @DPTR,A
   67: 			}			
   68: 		break;
81032C 020A3B            LJMP    ?C0094?RACKSET
   69: 		case 1://启用标志
81032F         ?C0004?RACKSET:
   70: 			////////////////////
   71: 			if( OutInFlag == 0 )
81032F 201A32            JB      OutInFlag,?C0005?RACKSET
   72: 			{
   73: 				*len = sprintf( OutStr, "%bu", iRackSet[RackNo - 1].UseState );				
810332 901756            MOV     DPTR,#OutStr
810335 E0                MOVX    A,@DPTR
810336 FE                MOV     R6,A
810337 A3                INC     DPTR
810338 E0                MOVX    A,@DPTR
810339 AA06              MOV     R2,AR6
81033B F9                MOV     R1,A
81033C 7B00              MOV     R3,#?C?XDATASEG
81033E C003              PUSH    AR3
810340 C002              PUSH    AR2
810342 C001              PUSH    AR1
810344 7B80              MOV     R3,#BYTE2 08013BEH
810346 7A13              MOV     R2,#HIGH 08013BEH
810348 79BE              MOV     R1,#LOW 08013BEH
81034A 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
81034D A5128007B6        ECALL   ?C?PSTXDATA
810352 902DF1            MOV     DPTR,#RackNo
810355 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 660


810356 75F003            MOV     B,#03H
810359 A4                MUL     AB
81035A 2403              ADD     A,#LOW iRackSet-02H
81035C F582              MOV     DPL,A
81035E E4                CLR     A
81035F 3404              ADDC    A,#HIGH iRackSet-02H
   74: 			}
810361 0209A5            LJMP    ?C0168?RACKSET
810364         ?C0005?RACKSET:
   75: 			else
   76: 			{
   77: 				Templen = *len;
810364 90175A            MOV     DPTR,#len
810367 E0                MOVX    A,@DPTR
810368 FE                MOV     R6,A
810369 A3                INC     DPTR
81036A E0                MOVX    A,@DPTR
81036B F582              MOV     DPL,A
81036D 8E83              MOV     DPH,R6
81036F E0                MOVX    A,@DPTR
810370 90175C            MOV     DPTR,#Templen
810373 F0                MOVX    @DPTR,A
   78: 				if( Templen == 0 )
810374 7003              JNZ     $ + 5H
810376 020A3B            LJMP    ?C0094?RACKSET
   79: 					break;
810379         ?C0007?RACKSET:
   80: 				if( Templen > 1 )
810379 90175C            MOV     DPTR,#Templen
81037C E0                MOVX    A,@DPTR
81037D D3                SETB    C
81037E 9401              SUBB    A,#01H
810380 4003              JC      ?C0008?RACKSET
   81: 					Templen = 1;
810382 7401              MOV     A,#01H
810384 F0                MOVX    @DPTR,A
810385         ?C0008?RACKSET:
   82: 				iRackSet[RackNo - 1].UseState = 0;
810385 902DF1            MOV     DPTR,#RackNo
810388 E0                MOVX    A,@DPTR
810389 75F003            MOV     B,#03H
81038C A4                MUL     AB
81038D 2403              ADD     A,#LOW iRackSet-02H
81038F F582              MOV     DPL,A
810391 E4                CLR     A
810392 3404              ADDC    A,#HIGH iRackSet-02H
810394 F583              MOV     DPH,A
810396 E4                CLR     A
810397 F0                MOVX    @DPTR,A
   83: 				for( i = 0; i < Templen; i ++ )
810398 90175D            MOV     DPTR,#i
81039B F0                MOVX    @DPTR,A
81039C         ?C0009?RACKSET:
81039C 90175C            MOV     DPTR,#Templen
81039F E0                MOVX    A,@DPTR
8103A0 FF                MOV     R7,A
8103A1 A3                INC     DPTR
8103A2 E0                MOVX    A,@DPTR
8103A3 FE                MOV     R6,A
8103A4 C3                CLR     C
8103A5 9F                SUBB    A,R7
8103A6 4003              JC      $ + 5H
8103A8 020A3B            LJMP    ?C0094?RACKSET
   84: 				{					
   85: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 661


8103AB 901758            MOV     DPTR,#InStr
8103AE E0                MOVX    A,@DPTR
8103AF FC                MOV     R4,A
8103B0 A3                INC     DPTR
8103B1 E0                MOVX    A,@DPTR
8103B2 2E                ADD     A,R6
8103B3 F582              MOV     DPL,A
8103B5 E4                CLR     A
8103B6 3C                ADDC    A,R4
8103B7 F583              MOV     DPH,A
8103B9 E0                MOVX    A,@DPTR
8103BA FF                MOV     R7,A
8103BB C3                CLR     C
8103BC 9400              SUBB    A,#00H
8103BE 4019              JC      ?C0011?RACKSET
8103C0 EF                MOV     A,R7
8103C1 D3                SETB    C
8103C2 9409              SUBB    A,#09H
8103C4 5013              JNC     ?C0011?RACKSET
   86: 						iRackSet[RackNo - 1].UseState = *( InStr + i );					
8103C6 902DF1            MOV     DPTR,#RackNo
8103C9 E0                MOVX    A,@DPTR
8103CA 75F003            MOV     B,#03H
8103CD A4                MUL     AB
8103CE 2403              ADD     A,#LOW iRackSet-02H
8103D0 F582              MOV     DPL,A
8103D2 E4                CLR     A
8103D3 3404              ADDC    A,#HIGH iRackSet-02H
8103D5 F583              MOV     DPH,A
8103D7 EF                MOV     A,R7
8103D8 F0                MOVX    @DPTR,A
   87: 				}					
8103D9         ?C0011?RACKSET:
8103D9 90175D            MOV     DPTR,#i
8103DC E0                MOVX    A,@DPTR
8103DD 04                INC     A
8103DE F0                MOVX    @DPTR,A
8103DF 80BB              SJMP    ?C0009?RACKSET
   88: 			}			
   89: 		break;
   90: 		case 2://最大货品存量				
8103E1         ?C0013?RACKSET:
   91: 			if(  OutInFlag == 0 )							
8103E1 201A32            JB      OutInFlag,?C0014?RACKSET
   92: 				*len = sprintf( OutStr, "%bu", iRackSet[RackNo - 1].GoodsMax );						
8103E4 901756            MOV     DPTR,#OutStr
8103E7 E0                MOVX    A,@DPTR
8103E8 FE                MOV     R6,A
8103E9 A3                INC     DPTR
8103EA E0                MOVX    A,@DPTR
8103EB AA06              MOV     R2,AR6
8103ED F9                MOV     R1,A
8103EE 7B00              MOV     R3,#?C?XDATASEG
8103F0 C003              PUSH    AR3
8103F2 C002              PUSH    AR2
8103F4 C001              PUSH    AR1
8103F6 7B80              MOV     R3,#BYTE2 08013BEH
8103F8 7A13              MOV     R2,#HIGH 08013BEH
8103FA 79BE              MOV     R1,#LOW 08013BEH
8103FC 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8103FF A5128007B6        ECALL   ?C?PSTXDATA
810404 902DF1            MOV     DPTR,#RackNo
810407 E0                MOVX    A,@DPTR
810408 75F003            MOV     B,#03H
81040B A4                MUL     AB
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 662


81040C 2404              ADD     A,#LOW iRackSet-01H
81040E F582              MOV     DPL,A
810410 E4                CLR     A
810411 3404              ADDC    A,#HIGH iRackSet-01H
810413         
810413 0209A5            LJMP    ?C0168?RACKSET
810416         ?C0014?RACKSET:
   93: 			else//存入
   94: 			{
   95: 				Templen = *len;
810416 90175A            MOV     DPTR,#len
810419 E0                MOVX    A,@DPTR
81041A FE                MOV     R6,A
81041B A3                INC     DPTR
81041C E0                MOVX    A,@DPTR
81041D F582              MOV     DPL,A
81041F 8E83              MOV     DPH,R6
810421 E0                MOVX    A,@DPTR
810422 90175C            MOV     DPTR,#Templen
810425 F0                MOVX    @DPTR,A
   96: 				if( Templen == 0 )
810426 7003              JNZ     $ + 5H
810428 020A3B            LJMP    ?C0094?RACKSET
   97: 					break;
81042B         ?C0016?RACKSET:
   98: 				if( Templen > 2 )
81042B 90175C            MOV     DPTR,#Templen
81042E E0                MOVX    A,@DPTR
81042F D3                SETB    C
810430 9402              SUBB    A,#02H
810432 4003              JC      ?C0017?RACKSET
   99: 					Templen = 2;	
810434 7402              MOV     A,#02H
810436 F0                MOVX    @DPTR,A
810437         ?C0017?RACKSET:
  100: 				iRackSet[RackNo - 1].GoodsMax = 0;	
810437 902DF1            MOV     DPTR,#RackNo
81043A E0                MOVX    A,@DPTR
81043B 75F003            MOV     B,#03H
81043E A4                MUL     AB
81043F 2404              ADD     A,#LOW iRackSet-01H
810441 F582              MOV     DPL,A
810443 E4                CLR     A
810444 3404              ADDC    A,#HIGH iRackSet-01H
810446 F583              MOV     DPH,A
810448 E4                CLR     A
810449 F0                MOVX    @DPTR,A
  101: 				for( i = 0; i < Templen; i ++ )
81044A 90175D            MOV     DPTR,#i
81044D F0                MOVX    @DPTR,A
81044E         ?C0018?RACKSET:
81044E 90175C            MOV     DPTR,#Templen
810451 E0                MOVX    A,@DPTR
810452 FF                MOV     R7,A
810453 A3                INC     DPTR
810454 E0                MOVX    A,@DPTR
810455 FE                MOV     R6,A
810456 C3                CLR     C
810457 9F                SUBB    A,R7
810458 4003              JC      $ + 5H
81045A 020A3B            LJMP    ?C0094?RACKSET
  102: 				{					
  103: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
81045D 901758            MOV     DPTR,#InStr
810460 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 663


810461 FC                MOV     R4,A
810462 A3                INC     DPTR
810463 E0                MOVX    A,@DPTR
810464 2E                ADD     A,R6
810465 F582              MOV     DPL,A
810467 E4                CLR     A
810468 3C                ADDC    A,R4
810469 F583              MOV     DPH,A
81046B E0                MOVX    A,@DPTR
81046C FF                MOV     R7,A
81046D C3                CLR     C
81046E 9400              SUBB    A,#00H
810470 4031              JC      ?C0020?RACKSET
810472 EF                MOV     A,R7
810473 D3                SETB    C
810474 9409              SUBB    A,#09H
810476 502B              JNC     ?C0020?RACKSET
  104: 						iRackSet[RackNo - 1].GoodsMax = iRackSet[RackNo - 1].GoodsMax*10 + *( InStr + i );					
810478 902DF1            MOV     DPTR,#RackNo
81047B E0                MOVX    A,@DPTR
81047C FE                MOV     R6,A
81047D 75F003            MOV     B,#03H
810480 A4                MUL     AB
810481 2404              ADD     A,#LOW iRackSet-01H
810483 F582              MOV     DPL,A
810485 E4                CLR     A
810486 3404              ADDC    A,#HIGH iRackSet-01H
810488 F583              MOV     DPH,A
81048A E0                MOVX    A,@DPTR
81048B 75F00A            MOV     B,#0AH
81048E A4                MUL     AB
81048F FD                MOV     R5,A
810490 EF                MOV     A,R7
810491 2D                ADD     A,R5
810492 FF                MOV     R7,A
810493 EE                MOV     A,R6
810494 75F003            MOV     B,#03H
810497 A4                MUL     AB
810498 2404              ADD     A,#LOW iRackSet-01H
81049A F582              MOV     DPL,A
81049C E4                CLR     A
81049D 3404              ADDC    A,#HIGH iRackSet-01H
81049F F583              MOV     DPH,A
8104A1 EF                MOV     A,R7
8104A2 F0                MOVX    @DPTR,A
  105: 				}				
8104A3         ?C0020?RACKSET:
8104A3 90175D            MOV     DPTR,#i
8104A6 E0                MOVX    A,@DPTR
8104A7 04                INC     A
8104A8 F0                MOVX    @DPTR,A
8104A9 80A3              SJMP    ?C0018?RACKSET
  106: 			}						
  107: 		break;	
  108: 		case 3:// 货道1开启状态
8104AB         ?C0022?RACKSET:
  109: 			if(  OutInFlag == 0 )							
8104AB 201A31            JB      OutInFlag,?C0023?RACKSET
  110: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][0].UseState );			
8104AE 901756            MOV     DPTR,#OutStr
8104B1 E0                MOVX    A,@DPTR
8104B2 FE                MOV     R6,A
8104B3 A3                INC     DPTR
8104B4 E0                MOVX    A,@DPTR
8104B5 AA06              MOV     R2,AR6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 664


8104B7 F9                MOV     R1,A
8104B8 7B00              MOV     R3,#?C?XDATASEG
8104BA C003              PUSH    AR3
8104BC C002              PUSH    AR2
8104BE C001              PUSH    AR1
8104C0 7B80              MOV     R3,#BYTE2 08013BEH
8104C2 7A13              MOV     R2,#HIGH 08013BEH
8104C4 79BE              MOV     R1,#LOW 08013BEH
8104C6 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8104C9 A5128007B6        ECALL   ?C?PSTXDATA
8104CE 902DF1            MOV     DPTR,#RackNo
8104D1 E0                MOVX    A,@DPTR
8104D2 C4                SWAP    A
8104D3 54F0              ANL     A,#0F0H
8104D5 2435              ADD     A,#LOW iRackColumnSet-0FH
8104D7 F582              MOV     DPL,A
8104D9 E4                CLR     A
8104DA 3401              ADDC    A,#HIGH iRackColumnSet-0FH
8104DC         
8104DC 0209A5            LJMP    ?C0168?RACKSET
8104DF         ?C0023?RACKSET:
  111: 			else//存入
  112: 			{
  113: 				Templen = *len;
8104DF 90175A            MOV     DPTR,#len
8104E2 E0                MOVX    A,@DPTR
8104E3 FE                MOV     R6,A
8104E4 A3                INC     DPTR
8104E5 E0                MOVX    A,@DPTR
8104E6 F582              MOV     DPL,A
8104E8 8E83              MOV     DPH,R6
8104EA E0                MOVX    A,@DPTR
8104EB 90175C            MOV     DPTR,#Templen
8104EE F0                MOVX    @DPTR,A
  114: 				if( Templen == 0 )
8104EF 7003              JNZ     $ + 5H
8104F1 020A3B            LJMP    ?C0094?RACKSET
  115: 					break;
8104F4         ?C0025?RACKSET:
  116: 				if( Templen > 1 )
8104F4 90175C            MOV     DPTR,#Templen
8104F7 E0                MOVX    A,@DPTR
8104F8 D3                SETB    C
8104F9 9401              SUBB    A,#01H
8104FB 4003              JC      ?C0026?RACKSET
  117: 					Templen = 1;	
8104FD 7401              MOV     A,#01H
8104FF F0                MOVX    @DPTR,A
810500         ?C0026?RACKSET:
  118: 				iRackColumnSet[RackNo - 1][0].UseState = 0;	
810500 902DF1            MOV     DPTR,#RackNo
810503 E0                MOVX    A,@DPTR
810504 C4                SWAP    A
810505 54F0              ANL     A,#0F0H
810507 2435              ADD     A,#LOW iRackColumnSet-0FH
810509 F582              MOV     DPL,A
81050B E4                CLR     A
81050C 3401              ADDC    A,#HIGH iRackColumnSet-0FH
81050E F583              MOV     DPH,A
810510 E4                CLR     A
810511 F0                MOVX    @DPTR,A
  119: 				for( i = 0; i < Templen; i ++ )
810512 90175D            MOV     DPTR,#i
810515 F0                MOVX    @DPTR,A
810516         ?C0027?RACKSET:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 665


810516 90175C            MOV     DPTR,#Templen
810519 E0                MOVX    A,@DPTR
81051A FF                MOV     R7,A
81051B A3                INC     DPTR
81051C E0                MOVX    A,@DPTR
81051D FE                MOV     R6,A
81051E C3                CLR     C
81051F 9F                SUBB    A,R7
810520 4003              JC      $ + 5H
810522 020A3B            LJMP    ?C0094?RACKSET
  120: 				{					
  121: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
810525 901758            MOV     DPTR,#InStr
810528 E0                MOVX    A,@DPTR
810529 FC                MOV     R4,A
81052A A3                INC     DPTR
81052B E0                MOVX    A,@DPTR
81052C 2E                ADD     A,R6
81052D F582              MOV     DPL,A
81052F E4                CLR     A
810530 3C                ADDC    A,R4
810531 F583              MOV     DPH,A
810533 E0                MOVX    A,@DPTR
810534 FF                MOV     R7,A
810535 C3                CLR     C
810536 9400              SUBB    A,#00H
810538 4018              JC      ?C0029?RACKSET
81053A EF                MOV     A,R7
81053B D3                SETB    C
81053C 9409              SUBB    A,#09H
81053E 5012              JNC     ?C0029?RACKSET
  122: 						iRackColumnSet[RackNo - 1][0].UseState = *( InStr + i );					
810540 902DF1            MOV     DPTR,#RackNo
810543 E0                MOVX    A,@DPTR
810544 C4                SWAP    A
810545 54F0              ANL     A,#0F0H
810547 2435              ADD     A,#LOW iRackColumnSet-0FH
810549 F582              MOV     DPL,A
81054B E4                CLR     A
81054C 3401              ADDC    A,#HIGH iRackColumnSet-0FH
81054E F583              MOV     DPH,A
810550 EF                MOV     A,R7
810551 F0                MOVX    @DPTR,A
  123: 				}			
810552         ?C0029?RACKSET:
810552 90175D            MOV     DPTR,#i
810555 E0                MOVX    A,@DPTR
810556 04                INC     A
810557 F0                MOVX    @DPTR,A
810558 80BC              SJMP    ?C0027?RACKSET
  124: 			}			
  125: 		break;	
  126: 		case 4:// 货道2开启状态
81055A         ?C0031?RACKSET:
  127: 			if(  OutInFlag == 0 )							
81055A 201A31            JB      OutInFlag,?C0032?RACKSET
  128: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][1].UseState );			
81055D 901756            MOV     DPTR,#OutStr
810560 E0                MOVX    A,@DPTR
810561 FE                MOV     R6,A
810562 A3                INC     DPTR
810563 E0                MOVX    A,@DPTR
810564 AA06              MOV     R2,AR6
810566 F9                MOV     R1,A
810567 7B00              MOV     R3,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 666


810569 C003              PUSH    AR3
81056B C002              PUSH    AR2
81056D C001              PUSH    AR1
81056F 7B80              MOV     R3,#BYTE2 08013BEH
810571 7A13              MOV     R2,#HIGH 08013BEH
810573 79BE              MOV     R1,#LOW 08013BEH
810575 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
810578 A5128007B6        ECALL   ?C?PSTXDATA
81057D 902DF1            MOV     DPTR,#RackNo
810580 E0                MOVX    A,@DPTR
810581 C4                SWAP    A
810582 54F0              ANL     A,#0F0H
810584 2437              ADD     A,#LOW iRackColumnSet-0DH
810586 F582              MOV     DPL,A
810588 E4                CLR     A
810589 3401              ADDC    A,#HIGH iRackColumnSet-0DH
81058B         
81058B 0209A5            LJMP    ?C0168?RACKSET
81058E         ?C0032?RACKSET:
  129: 			else//存入
  130: 			{
  131: 				Templen = *len;
81058E 90175A            MOV     DPTR,#len
810591 E0                MOVX    A,@DPTR
810592 FE                MOV     R6,A
810593 A3                INC     DPTR
810594 E0                MOVX    A,@DPTR
810595 F582              MOV     DPL,A
810597 8E83              MOV     DPH,R6
810599 E0                MOVX    A,@DPTR
81059A 90175C            MOV     DPTR,#Templen
81059D F0                MOVX    @DPTR,A
  132: 				if( Templen == 0 )
81059E 7003              JNZ     $ + 5H
8105A0 020A3B            LJMP    ?C0094?RACKSET
  133: 					break;
8105A3         ?C0034?RACKSET:
  134: 				if( Templen > 1 )
8105A3 90175C            MOV     DPTR,#Templen
8105A6 E0                MOVX    A,@DPTR
8105A7 D3                SETB    C
8105A8 9401              SUBB    A,#01H
8105AA 4003              JC      ?C0035?RACKSET
  135: 					Templen = 1;	
8105AC 7401              MOV     A,#01H
8105AE F0                MOVX    @DPTR,A
8105AF         ?C0035?RACKSET:
  136: 				iRackColumnSet[RackNo - 1][1].UseState = 0;	
8105AF 902DF1            MOV     DPTR,#RackNo
8105B2 E0                MOVX    A,@DPTR
8105B3 C4                SWAP    A
8105B4 54F0              ANL     A,#0F0H
8105B6 2437              ADD     A,#LOW iRackColumnSet-0DH
8105B8 F582              MOV     DPL,A
8105BA E4                CLR     A
8105BB 3401              ADDC    A,#HIGH iRackColumnSet-0DH
8105BD F583              MOV     DPH,A
8105BF E4                CLR     A
8105C0 F0                MOVX    @DPTR,A
  137: 				for( i = 0; i < Templen; i ++ )
8105C1 90175D            MOV     DPTR,#i
8105C4 F0                MOVX    @DPTR,A
8105C5         ?C0036?RACKSET:
8105C5 90175C            MOV     DPTR,#Templen
8105C8 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 667


8105C9 FF                MOV     R7,A
8105CA A3                INC     DPTR
8105CB E0                MOVX    A,@DPTR
8105CC FE                MOV     R6,A
8105CD C3                CLR     C
8105CE 9F                SUBB    A,R7
8105CF 4003              JC      $ + 5H
8105D1 020A3B            LJMP    ?C0094?RACKSET
  138: 				{					
  139: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
8105D4 901758            MOV     DPTR,#InStr
8105D7 E0                MOVX    A,@DPTR
8105D8 FC                MOV     R4,A
8105D9 A3                INC     DPTR
8105DA E0                MOVX    A,@DPTR
8105DB 2E                ADD     A,R6
8105DC F582              MOV     DPL,A
8105DE E4                CLR     A
8105DF 3C                ADDC    A,R4
8105E0 F583              MOV     DPH,A
8105E2 E0                MOVX    A,@DPTR
8105E3 FF                MOV     R7,A
8105E4 C3                CLR     C
8105E5 9400              SUBB    A,#00H
8105E7 4018              JC      ?C0038?RACKSET
8105E9 EF                MOV     A,R7
8105EA D3                SETB    C
8105EB 9409              SUBB    A,#09H
8105ED 5012              JNC     ?C0038?RACKSET
  140: 						iRackColumnSet[RackNo - 1][1].UseState = *( InStr + i );					
8105EF 902DF1            MOV     DPTR,#RackNo
8105F2 E0                MOVX    A,@DPTR
8105F3 C4                SWAP    A
8105F4 54F0              ANL     A,#0F0H
8105F6 2437              ADD     A,#LOW iRackColumnSet-0DH
8105F8 F582              MOV     DPL,A
8105FA E4                CLR     A
8105FB 3401              ADDC    A,#HIGH iRackColumnSet-0DH
8105FD F583              MOV     DPH,A
8105FF EF                MOV     A,R7
810600 F0                MOVX    @DPTR,A
  141: 				}			
810601         ?C0038?RACKSET:
810601 90175D            MOV     DPTR,#i
810604 E0                MOVX    A,@DPTR
810605 04                INC     A
810606 F0                MOVX    @DPTR,A
810607 80BC              SJMP    ?C0036?RACKSET
  142: 			}			
  143: 		break;	
  144: 		case 5:// 货道3开启状态
810609         ?C0040?RACKSET:
  145: 			if(  OutInFlag == 0 )							
810609 201A31            JB      OutInFlag,?C0041?RACKSET
  146: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][2].UseState );			
81060C 901756            MOV     DPTR,#OutStr
81060F E0                MOVX    A,@DPTR
810610 FE                MOV     R6,A
810611 A3                INC     DPTR
810612 E0                MOVX    A,@DPTR
810613 AA06              MOV     R2,AR6
810615 F9                MOV     R1,A
810616 7B00              MOV     R3,#?C?XDATASEG
810618 C003              PUSH    AR3
81061A C002              PUSH    AR2
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 668


81061C C001              PUSH    AR1
81061E 7B80              MOV     R3,#BYTE2 08013BEH
810620 7A13              MOV     R2,#HIGH 08013BEH
810622 79BE              MOV     R1,#LOW 08013BEH
810624 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
810627 A5128007B6        ECALL   ?C?PSTXDATA
81062C 902DF1            MOV     DPTR,#RackNo
81062F E0                MOVX    A,@DPTR
810630 C4                SWAP    A
810631 54F0              ANL     A,#0F0H
810633 2439              ADD     A,#LOW iRackColumnSet-0BH
810635 F582              MOV     DPL,A
810637 E4                CLR     A
810638 3401              ADDC    A,#HIGH iRackColumnSet-0BH
81063A         
81063A 0209A5            LJMP    ?C0168?RACKSET
81063D         ?C0041?RACKSET:
  147: 			else//存入
  148: 			{
  149: 				Templen = *len;
81063D 90175A            MOV     DPTR,#len
810640 E0                MOVX    A,@DPTR
810641 FE                MOV     R6,A
810642 A3                INC     DPTR
810643 E0                MOVX    A,@DPTR
810644 F582              MOV     DPL,A
810646 8E83              MOV     DPH,R6
810648 E0                MOVX    A,@DPTR
810649 90175C            MOV     DPTR,#Templen
81064C F0                MOVX    @DPTR,A
  150: 				if( Templen == 0 )
81064D 7003              JNZ     $ + 5H
81064F 020A3B            LJMP    ?C0094?RACKSET
  151: 					break;
810652         ?C0043?RACKSET:
  152: 				if( Templen > 1 )
810652 90175C            MOV     DPTR,#Templen
810655 E0                MOVX    A,@DPTR
810656 D3                SETB    C
810657 9401              SUBB    A,#01H
810659 4003              JC      ?C0044?RACKSET
  153: 					Templen = 1;	
81065B 7401              MOV     A,#01H
81065D F0                MOVX    @DPTR,A
81065E         ?C0044?RACKSET:
  154: 				iRackColumnSet[RackNo - 1][2].UseState = 0;	
81065E 902DF1            MOV     DPTR,#RackNo
810661 E0                MOVX    A,@DPTR
810662 C4                SWAP    A
810663 54F0              ANL     A,#0F0H
810665 2439              ADD     A,#LOW iRackColumnSet-0BH
810667 F582              MOV     DPL,A
810669 E4                CLR     A
81066A 3401              ADDC    A,#HIGH iRackColumnSet-0BH
81066C F583              MOV     DPH,A
81066E E4                CLR     A
81066F F0                MOVX    @DPTR,A
  155: 				for( i = 0; i < Templen; i ++ )
810670 90175D            MOV     DPTR,#i
810673 F0                MOVX    @DPTR,A
810674         ?C0045?RACKSET:
810674 90175C            MOV     DPTR,#Templen
810677 E0                MOVX    A,@DPTR
810678 FF                MOV     R7,A
810679 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 669


81067A E0                MOVX    A,@DPTR
81067B FE                MOV     R6,A
81067C C3                CLR     C
81067D 9F                SUBB    A,R7
81067E 4003              JC      $ + 5H
810680 020A3B            LJMP    ?C0094?RACKSET
  156: 				{					
  157: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
810683 901758            MOV     DPTR,#InStr
810686 E0                MOVX    A,@DPTR
810687 FC                MOV     R4,A
810688 A3                INC     DPTR
810689 E0                MOVX    A,@DPTR
81068A 2E                ADD     A,R6
81068B F582              MOV     DPL,A
81068D E4                CLR     A
81068E 3C                ADDC    A,R4
81068F F583              MOV     DPH,A
810691 E0                MOVX    A,@DPTR
810692 FF                MOV     R7,A
810693 C3                CLR     C
810694 9400              SUBB    A,#00H
810696 4018              JC      ?C0047?RACKSET
810698 EF                MOV     A,R7
810699 D3                SETB    C
81069A 9409              SUBB    A,#09H
81069C 5012              JNC     ?C0047?RACKSET
  158: 						iRackColumnSet[RackNo - 1][2].UseState = *( InStr + i );					
81069E 902DF1            MOV     DPTR,#RackNo
8106A1 E0                MOVX    A,@DPTR
8106A2 C4                SWAP    A
8106A3 54F0              ANL     A,#0F0H
8106A5 2439              ADD     A,#LOW iRackColumnSet-0BH
8106A7 F582              MOV     DPL,A
8106A9 E4                CLR     A
8106AA 3401              ADDC    A,#HIGH iRackColumnSet-0BH
8106AC F583              MOV     DPH,A
8106AE EF                MOV     A,R7
8106AF F0                MOVX    @DPTR,A
  159: 				}			
8106B0         ?C0047?RACKSET:
8106B0 90175D            MOV     DPTR,#i
8106B3 E0                MOVX    A,@DPTR
8106B4 04                INC     A
8106B5 F0                MOVX    @DPTR,A
8106B6 80BC              SJMP    ?C0045?RACKSET
  160: 			}			
  161: 		break;
  162: 		case 6:// 货道4开启状态
8106B8         ?C0049?RACKSET:
  163: 			if(  OutInFlag == 0 )							
8106B8 201A31            JB      OutInFlag,?C0050?RACKSET
  164: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][3].UseState );			
8106BB 901756            MOV     DPTR,#OutStr
8106BE E0                MOVX    A,@DPTR
8106BF FE                MOV     R6,A
8106C0 A3                INC     DPTR
8106C1 E0                MOVX    A,@DPTR
8106C2 AA06              MOV     R2,AR6
8106C4 F9                MOV     R1,A
8106C5 7B00              MOV     R3,#?C?XDATASEG
8106C7 C003              PUSH    AR3
8106C9 C002              PUSH    AR2
8106CB C001              PUSH    AR1
8106CD 7B80              MOV     R3,#BYTE2 08013BEH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 670


8106CF 7A13              MOV     R2,#HIGH 08013BEH
8106D1 79BE              MOV     R1,#LOW 08013BEH
8106D3 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8106D6 A5128007B6        ECALL   ?C?PSTXDATA
8106DB 902DF1            MOV     DPTR,#RackNo
8106DE E0                MOVX    A,@DPTR
8106DF C4                SWAP    A
8106E0 54F0              ANL     A,#0F0H
8106E2 243B              ADD     A,#LOW iRackColumnSet-09H
8106E4 F582              MOV     DPL,A
8106E6 E4                CLR     A
8106E7 3401              ADDC    A,#HIGH iRackColumnSet-09H
8106E9         
8106E9 0209A5            LJMP    ?C0168?RACKSET
8106EC         ?C0050?RACKSET:
  165: 			else//存入
  166: 			{
  167: 				Templen = *len;
8106EC 90175A            MOV     DPTR,#len
8106EF E0                MOVX    A,@DPTR
8106F0 FE                MOV     R6,A
8106F1 A3                INC     DPTR
8106F2 E0                MOVX    A,@DPTR
8106F3 F582              MOV     DPL,A
8106F5 8E83              MOV     DPH,R6
8106F7 E0                MOVX    A,@DPTR
8106F8 90175C            MOV     DPTR,#Templen
8106FB F0                MOVX    @DPTR,A
  168: 				if( Templen == 0 )
8106FC 7003              JNZ     $ + 5H
8106FE 020A3B            LJMP    ?C0094?RACKSET
  169: 					break;
810701         ?C0052?RACKSET:
  170: 				if( Templen > 1 )
810701 90175C            MOV     DPTR,#Templen
810704 E0                MOVX    A,@DPTR
810705 D3                SETB    C
810706 9401              SUBB    A,#01H
810708 4003              JC      ?C0053?RACKSET
  171: 					Templen = 1;	
81070A 7401              MOV     A,#01H
81070C F0                MOVX    @DPTR,A
81070D         ?C0053?RACKSET:
  172: 				iRackColumnSet[RackNo - 1][3].UseState = 0;	
81070D 902DF1            MOV     DPTR,#RackNo
810710 E0                MOVX    A,@DPTR
810711 C4                SWAP    A
810712 54F0              ANL     A,#0F0H
810714 243B              ADD     A,#LOW iRackColumnSet-09H
810716 F582              MOV     DPL,A
810718 E4                CLR     A
810719 3401              ADDC    A,#HIGH iRackColumnSet-09H
81071B F583              MOV     DPH,A
81071D E4                CLR     A
81071E F0                MOVX    @DPTR,A
  173: 				for( i = 0; i < Templen; i ++ )
81071F 90175D            MOV     DPTR,#i
810722 F0                MOVX    @DPTR,A
810723         ?C0054?RACKSET:
810723 90175C            MOV     DPTR,#Templen
810726 E0                MOVX    A,@DPTR
810727 FF                MOV     R7,A
810728 A3                INC     DPTR
810729 E0                MOVX    A,@DPTR
81072A FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 671


81072B C3                CLR     C
81072C 9F                SUBB    A,R7
81072D 4003              JC      $ + 5H
81072F 020A3B            LJMP    ?C0094?RACKSET
  174: 				{					
  175: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
810732 901758            MOV     DPTR,#InStr
810735 E0                MOVX    A,@DPTR
810736 FC                MOV     R4,A
810737 A3                INC     DPTR
810738 E0                MOVX    A,@DPTR
810739 2E                ADD     A,R6
81073A F582              MOV     DPL,A
81073C E4                CLR     A
81073D 3C                ADDC    A,R4
81073E F583              MOV     DPH,A
810740 E0                MOVX    A,@DPTR
810741 FF                MOV     R7,A
810742 C3                CLR     C
810743 9400              SUBB    A,#00H
810745 4018              JC      ?C0056?RACKSET
810747 EF                MOV     A,R7
810748 D3                SETB    C
810749 9409              SUBB    A,#09H
81074B 5012              JNC     ?C0056?RACKSET
  176: 						iRackColumnSet[RackNo - 1][3].UseState = *( InStr + i );					
81074D 902DF1            MOV     DPTR,#RackNo
810750 E0                MOVX    A,@DPTR
810751 C4                SWAP    A
810752 54F0              ANL     A,#0F0H
810754 243B              ADD     A,#LOW iRackColumnSet-09H
810756 F582              MOV     DPL,A
810758 E4                CLR     A
810759 3401              ADDC    A,#HIGH iRackColumnSet-09H
81075B F583              MOV     DPH,A
81075D EF                MOV     A,R7
81075E F0                MOVX    @DPTR,A
  177: 				}			
81075F         ?C0056?RACKSET:
81075F 90175D            MOV     DPTR,#i
810762 E0                MOVX    A,@DPTR
810763 04                INC     A
810764 F0                MOVX    @DPTR,A
810765 80BC              SJMP    ?C0054?RACKSET
  178: 			}			
  179: 		break;
  180: 		case 7:// 货道5开启状态
810767         ?C0058?RACKSET:
  181: 			if(  OutInFlag == 0 )							
810767 201A31            JB      OutInFlag,?C0059?RACKSET
  182: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][4].UseState );			
81076A 901756            MOV     DPTR,#OutStr
81076D E0                MOVX    A,@DPTR
81076E FE                MOV     R6,A
81076F A3                INC     DPTR
810770 E0                MOVX    A,@DPTR
810771 AA06              MOV     R2,AR6
810773 F9                MOV     R1,A
810774 7B00              MOV     R3,#?C?XDATASEG
810776 C003              PUSH    AR3
810778 C002              PUSH    AR2
81077A C001              PUSH    AR1
81077C 7B80              MOV     R3,#BYTE2 08013BEH
81077E 7A13              MOV     R2,#HIGH 08013BEH
810780 79BE              MOV     R1,#LOW 08013BEH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 672


810782 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
810785 A5128007B6        ECALL   ?C?PSTXDATA
81078A 902DF1            MOV     DPTR,#RackNo
81078D E0                MOVX    A,@DPTR
81078E C4                SWAP    A
81078F 54F0              ANL     A,#0F0H
810791 243D              ADD     A,#LOW iRackColumnSet-07H
810793 F582              MOV     DPL,A
810795 E4                CLR     A
810796 3401              ADDC    A,#HIGH iRackColumnSet-07H
810798         
810798 0209A5            LJMP    ?C0168?RACKSET
81079B         ?C0059?RACKSET:
  183: 			else//存入
  184: 			{
  185: 				Templen = *len;
81079B 90175A            MOV     DPTR,#len
81079E E0                MOVX    A,@DPTR
81079F FE                MOV     R6,A
8107A0 A3                INC     DPTR
8107A1 E0                MOVX    A,@DPTR
8107A2 F582              MOV     DPL,A
8107A4 8E83              MOV     DPH,R6
8107A6 E0                MOVX    A,@DPTR
8107A7 90175C            MOV     DPTR,#Templen
8107AA F0                MOVX    @DPTR,A
  186: 				if( Templen == 0 )
8107AB 7003              JNZ     $ + 5H
8107AD 020A3B            LJMP    ?C0094?RACKSET
  187: 					break;
8107B0         ?C0061?RACKSET:
  188: 				if( Templen > 1 )
8107B0 90175C            MOV     DPTR,#Templen
8107B3 E0                MOVX    A,@DPTR
8107B4 D3                SETB    C
8107B5 9401              SUBB    A,#01H
8107B7 4003              JC      ?C0062?RACKSET
  189: 					Templen = 1;	
8107B9 7401              MOV     A,#01H
8107BB F0                MOVX    @DPTR,A
8107BC         ?C0062?RACKSET:
  190: 				iRackColumnSet[RackNo - 1][4].UseState = 0;	
8107BC 902DF1            MOV     DPTR,#RackNo
8107BF E0                MOVX    A,@DPTR
8107C0 C4                SWAP    A
8107C1 54F0              ANL     A,#0F0H
8107C3 243D              ADD     A,#LOW iRackColumnSet-07H
8107C5 F582              MOV     DPL,A
8107C7 E4                CLR     A
8107C8 3401              ADDC    A,#HIGH iRackColumnSet-07H
8107CA F583              MOV     DPH,A
8107CC E4                CLR     A
8107CD F0                MOVX    @DPTR,A
  191: 				for( i = 0; i < Templen; i ++ )
8107CE 90175D            MOV     DPTR,#i
8107D1 F0                MOVX    @DPTR,A
8107D2         ?C0063?RACKSET:
8107D2 90175C            MOV     DPTR,#Templen
8107D5 E0                MOVX    A,@DPTR
8107D6 FF                MOV     R7,A
8107D7 A3                INC     DPTR
8107D8 E0                MOVX    A,@DPTR
8107D9 FE                MOV     R6,A
8107DA C3                CLR     C
8107DB 9F                SUBB    A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 673


8107DC 4003              JC      $ + 5H
8107DE 020A3B            LJMP    ?C0094?RACKSET
  192: 				{					
  193: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
8107E1 901758            MOV     DPTR,#InStr
8107E4 E0                MOVX    A,@DPTR
8107E5 FC                MOV     R4,A
8107E6 A3                INC     DPTR
8107E7 E0                MOVX    A,@DPTR
8107E8 2E                ADD     A,R6
8107E9 F582              MOV     DPL,A
8107EB E4                CLR     A
8107EC 3C                ADDC    A,R4
8107ED F583              MOV     DPH,A
8107EF E0                MOVX    A,@DPTR
8107F0 FF                MOV     R7,A
8107F1 C3                CLR     C
8107F2 9400              SUBB    A,#00H
8107F4 4018              JC      ?C0065?RACKSET
8107F6 EF                MOV     A,R7
8107F7 D3                SETB    C
8107F8 9409              SUBB    A,#09H
8107FA 5012              JNC     ?C0065?RACKSET
  194: 						iRackColumnSet[RackNo - 1][4].UseState = *( InStr + i );					
8107FC 902DF1            MOV     DPTR,#RackNo
8107FF E0                MOVX    A,@DPTR
810800 C4                SWAP    A
810801 54F0              ANL     A,#0F0H
810803 243D              ADD     A,#LOW iRackColumnSet-07H
810805 F582              MOV     DPL,A
810807 E4                CLR     A
810808 3401              ADDC    A,#HIGH iRackColumnSet-07H
81080A F583              MOV     DPH,A
81080C EF                MOV     A,R7
81080D F0                MOVX    @DPTR,A
  195: 				}			
81080E         ?C0065?RACKSET:
81080E 90175D            MOV     DPTR,#i
810811 E0                MOVX    A,@DPTR
810812 04                INC     A
810813 F0                MOVX    @DPTR,A
810814 80BC              SJMP    ?C0063?RACKSET
  196: 			}			
  197: 		break;
  198: 		case 8:// 货道6开启状态
810816         ?C0067?RACKSET:
  199: 			if(  OutInFlag == 0 )							
810816 201A31            JB      OutInFlag,?C0068?RACKSET
  200: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][5].UseState );			
810819 901756            MOV     DPTR,#OutStr
81081C E0                MOVX    A,@DPTR
81081D FE                MOV     R6,A
81081E A3                INC     DPTR
81081F E0                MOVX    A,@DPTR
810820 AA06              MOV     R2,AR6
810822 F9                MOV     R1,A
810823 7B00              MOV     R3,#?C?XDATASEG
810825 C003              PUSH    AR3
810827 C002              PUSH    AR2
810829 C001              PUSH    AR1
81082B 7B80              MOV     R3,#BYTE2 08013BEH
81082D 7A13              MOV     R2,#HIGH 08013BEH
81082F 79BE              MOV     R1,#LOW 08013BEH
810831 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
810834 A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 674


810839 902DF1            MOV     DPTR,#RackNo
81083C E0                MOVX    A,@DPTR
81083D C4                SWAP    A
81083E 54F0              ANL     A,#0F0H
810840 243F              ADD     A,#LOW iRackColumnSet-05H
810842 F582              MOV     DPL,A
810844 E4                CLR     A
810845 3401              ADDC    A,#HIGH iRackColumnSet-05H
810847         
810847 0209A5            LJMP    ?C0168?RACKSET
81084A         ?C0068?RACKSET:
  201: 			else//存入
  202: 			{
  203: 				Templen = *len;
81084A 90175A            MOV     DPTR,#len
81084D E0                MOVX    A,@DPTR
81084E FE                MOV     R6,A
81084F A3                INC     DPTR
810850 E0                MOVX    A,@DPTR
810851 F582              MOV     DPL,A
810853 8E83              MOV     DPH,R6
810855 E0                MOVX    A,@DPTR
810856 90175C            MOV     DPTR,#Templen
810859 F0                MOVX    @DPTR,A
  204: 				if( Templen == 0 )
81085A 7003              JNZ     $ + 5H
81085C 020A3B            LJMP    ?C0094?RACKSET
  205: 					break;
81085F         ?C0070?RACKSET:
  206: 				if( Templen > 1 )
81085F 90175C            MOV     DPTR,#Templen
810862 E0                MOVX    A,@DPTR
810863 D3                SETB    C
810864 9401              SUBB    A,#01H
810866 4003              JC      ?C0071?RACKSET
  207: 					Templen = 1;	
810868 7401              MOV     A,#01H
81086A F0                MOVX    @DPTR,A
81086B         ?C0071?RACKSET:
  208: 				iRackColumnSet[RackNo - 1][5].UseState = 0;	
81086B 902DF1            MOV     DPTR,#RackNo
81086E E0                MOVX    A,@DPTR
81086F C4                SWAP    A
810870 54F0              ANL     A,#0F0H
810872 243F              ADD     A,#LOW iRackColumnSet-05H
810874 F582              MOV     DPL,A
810876 E4                CLR     A
810877 3401              ADDC    A,#HIGH iRackColumnSet-05H
810879 F583              MOV     DPH,A
81087B E4                CLR     A
81087C F0                MOVX    @DPTR,A
  209: 				for( i = 0; i < Templen; i ++ )
81087D 90175D            MOV     DPTR,#i
810880 F0                MOVX    @DPTR,A
810881         ?C0072?RACKSET:
810881 90175C            MOV     DPTR,#Templen
810884 E0                MOVX    A,@DPTR
810885 FF                MOV     R7,A
810886 A3                INC     DPTR
810887 E0                MOVX    A,@DPTR
810888 FE                MOV     R6,A
810889 C3                CLR     C
81088A 9F                SUBB    A,R7
81088B 4003              JC      $ + 5H
81088D 020A3B            LJMP    ?C0094?RACKSET
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 675


  210: 				{					
  211: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
810890 901758            MOV     DPTR,#InStr
810893 E0                MOVX    A,@DPTR
810894 FC                MOV     R4,A
810895 A3                INC     DPTR
810896 E0                MOVX    A,@DPTR
810897 2E                ADD     A,R6
810898 F582              MOV     DPL,A
81089A E4                CLR     A
81089B 3C                ADDC    A,R4
81089C F583              MOV     DPH,A
81089E E0                MOVX    A,@DPTR
81089F FF                MOV     R7,A
8108A0 C3                CLR     C
8108A1 9400              SUBB    A,#00H
8108A3 4018              JC      ?C0074?RACKSET
8108A5 EF                MOV     A,R7
8108A6 D3                SETB    C
8108A7 9409              SUBB    A,#09H
8108A9 5012              JNC     ?C0074?RACKSET
  212: 						iRackColumnSet[RackNo - 1][5].UseState = *( InStr + i );					
8108AB 902DF1            MOV     DPTR,#RackNo
8108AE E0                MOVX    A,@DPTR
8108AF C4                SWAP    A
8108B0 54F0              ANL     A,#0F0H
8108B2 243F              ADD     A,#LOW iRackColumnSet-05H
8108B4 F582              MOV     DPL,A
8108B6 E4                CLR     A
8108B7 3401              ADDC    A,#HIGH iRackColumnSet-05H
8108B9 F583              MOV     DPH,A
8108BB EF                MOV     A,R7
8108BC F0                MOVX    @DPTR,A
  213: 				}			
8108BD         ?C0074?RACKSET:
8108BD 90175D            MOV     DPTR,#i
8108C0 E0                MOVX    A,@DPTR
8108C1 04                INC     A
8108C2 F0                MOVX    @DPTR,A
8108C3 80BC              SJMP    ?C0072?RACKSET
  214: 			}			
  215: 		break;
  216: 		case 9:// 货道7开启状态
8108C5         ?C0076?RACKSET:
  217: 			if(  OutInFlag == 0 )							
8108C5 201A31            JB      OutInFlag,?C0077?RACKSET
  218: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][6].UseState );			
8108C8 901756            MOV     DPTR,#OutStr
8108CB E0                MOVX    A,@DPTR
8108CC FE                MOV     R6,A
8108CD A3                INC     DPTR
8108CE E0                MOVX    A,@DPTR
8108CF AA06              MOV     R2,AR6
8108D1 F9                MOV     R1,A
8108D2 7B00              MOV     R3,#?C?XDATASEG
8108D4 C003              PUSH    AR3
8108D6 C002              PUSH    AR2
8108D8 C001              PUSH    AR1
8108DA 7B80              MOV     R3,#BYTE2 08013BEH
8108DC 7A13              MOV     R2,#HIGH 08013BEH
8108DE 79BE              MOV     R1,#LOW 08013BEH
8108E0 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
8108E3 A5128007B6        ECALL   ?C?PSTXDATA
8108E8 902DF1            MOV     DPTR,#RackNo
8108EB E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 676


8108EC C4                SWAP    A
8108ED 54F0              ANL     A,#0F0H
8108EF 2441              ADD     A,#LOW iRackColumnSet-03H
8108F1 F582              MOV     DPL,A
8108F3 E4                CLR     A
8108F4 3401              ADDC    A,#HIGH iRackColumnSet-03H
8108F6         
8108F6 0209A5            LJMP    ?C0168?RACKSET
8108F9         ?C0077?RACKSET:
  219: 			else//存入
  220: 			{
  221: 				Templen = *len;
8108F9 90175A            MOV     DPTR,#len
8108FC E0                MOVX    A,@DPTR
8108FD FE                MOV     R6,A
8108FE A3                INC     DPTR
8108FF E0                MOVX    A,@DPTR
810900 F582              MOV     DPL,A
810902 8E83              MOV     DPH,R6
810904 E0                MOVX    A,@DPTR
810905 90175C            MOV     DPTR,#Templen
810908 F0                MOVX    @DPTR,A
  222: 				if( Templen == 0 )
810909 7003              JNZ     $ + 5H
81090B 020A3B            LJMP    ?C0094?RACKSET
  223: 					break;
81090E         ?C0079?RACKSET:
  224: 				if( Templen > 1 )
81090E 90175C            MOV     DPTR,#Templen
810911 E0                MOVX    A,@DPTR
810912 D3                SETB    C
810913 9401              SUBB    A,#01H
810915 4003              JC      ?C0080?RACKSET
  225: 					Templen = 1;	
810917 7401              MOV     A,#01H
810919 F0                MOVX    @DPTR,A
81091A         ?C0080?RACKSET:
  226: 				iRackColumnSet[RackNo - 1][6].UseState = 0;	
81091A 902DF1            MOV     DPTR,#RackNo
81091D E0                MOVX    A,@DPTR
81091E C4                SWAP    A
81091F 54F0              ANL     A,#0F0H
810921 2441              ADD     A,#LOW iRackColumnSet-03H
810923 F582              MOV     DPL,A
810925 E4                CLR     A
810926 3401              ADDC    A,#HIGH iRackColumnSet-03H
810928 F583              MOV     DPH,A
81092A E4                CLR     A
81092B F0                MOVX    @DPTR,A
  227: 				for( i = 0; i < Templen; i ++ )
81092C 90175D            MOV     DPTR,#i
81092F F0                MOVX    @DPTR,A
810930         ?C0081?RACKSET:
810930 90175C            MOV     DPTR,#Templen
810933 E0                MOVX    A,@DPTR
810934 FF                MOV     R7,A
810935 A3                INC     DPTR
810936 E0                MOVX    A,@DPTR
810937 FE                MOV     R6,A
810938 C3                CLR     C
810939 9F                SUBB    A,R7
81093A 4003              JC      $ + 5H
81093C 020A3B            LJMP    ?C0094?RACKSET
  228: 				{					
  229: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 677


81093F 901758            MOV     DPTR,#InStr
810942 E0                MOVX    A,@DPTR
810943 FC                MOV     R4,A
810944 A3                INC     DPTR
810945 E0                MOVX    A,@DPTR
810946 2E                ADD     A,R6
810947 F582              MOV     DPL,A
810949 E4                CLR     A
81094A 3C                ADDC    A,R4
81094B F583              MOV     DPH,A
81094D E0                MOVX    A,@DPTR
81094E FF                MOV     R7,A
81094F C3                CLR     C
810950 9400              SUBB    A,#00H
810952 4018              JC      ?C0083?RACKSET
810954 EF                MOV     A,R7
810955 D3                SETB    C
810956 9409              SUBB    A,#09H
810958 5012              JNC     ?C0083?RACKSET
  230: 						iRackColumnSet[RackNo - 1][6].UseState = *( InStr + i );					
81095A 902DF1            MOV     DPTR,#RackNo
81095D E0                MOVX    A,@DPTR
81095E C4                SWAP    A
81095F 54F0              ANL     A,#0F0H
810961 2441              ADD     A,#LOW iRackColumnSet-03H
810963 F582              MOV     DPL,A
810965 E4                CLR     A
810966 3401              ADDC    A,#HIGH iRackColumnSet-03H
810968 F583              MOV     DPH,A
81096A EF                MOV     A,R7
81096B F0                MOVX    @DPTR,A
  231: 				}			
81096C         ?C0083?RACKSET:
81096C 90175D            MOV     DPTR,#i
81096F E0                MOVX    A,@DPTR
810970 04                INC     A
810971 F0                MOVX    @DPTR,A
810972 80BC              SJMP    ?C0081?RACKSET
  232: 			}			
  233: 		break;
  234: 		case 10:// 货道8开启状态
810974         ?C0085?RACKSET:
  235: 			if(  OutInFlag == 0 )							
810974 201A4F            JB      OutInFlag,?C0086?RACKSET
  236: 				*len = sprintf( OutStr, "%bu", iRackColumnSet[RackNo - 1][7].UseState );			
810977 901756            MOV     DPTR,#OutStr
81097A E0                MOVX    A,@DPTR
81097B FE                MOV     R6,A
81097C A3                INC     DPTR
81097D E0                MOVX    A,@DPTR
81097E AA06              MOV     R2,AR6
810980 F9                MOV     R1,A
810981 7B00              MOV     R3,#?C?XDATASEG
810983 C003              PUSH    AR3
810985 C002              PUSH    AR2
810987 C001              PUSH    AR1
810989 7B80              MOV     R3,#BYTE2 08013BEH
81098B 7A13              MOV     R2,#HIGH 08013BEH
81098D 79BE              MOV     R1,#LOW 08013BEH
81098F 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
810992 A5128007B6        ECALL   ?C?PSTXDATA
810997 902DF1            MOV     DPTR,#RackNo
81099A E0                MOVX    A,@DPTR
81099B C4                SWAP    A
81099C 54F0              ANL     A,#0F0H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 678


81099E 2443              ADD     A,#LOW iRackColumnSet-01H
8109A0 F582              MOV     DPL,A
8109A2 E4                CLR     A
8109A3 3401              ADDC    A,#HIGH iRackColumnSet-01H
8109A5         
8109A5 F583              MOV     DPH,A
8109A7 E0                MOVX    A,@DPTR
8109A8 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
8109AB F0                MOVX    @DPTR,A
8109AC D001              POP     AR1
8109AE D002              POP     AR2
8109B0 D003              POP     AR3
8109B2 A512800949        ECALL   _sprintf
8109B7 90175A            MOV     DPTR,#len
8109BA E0                MOVX    A,@DPTR
8109BB FC                MOV     R4,A
8109BC A3                INC     DPTR
8109BD E0                MOVX    A,@DPTR
8109BE F582              MOV     DPL,A
8109C0 8C83              MOV     DPH,R4
8109C2 EF                MOV     A,R7
8109C3 F0                MOVX    @DPTR,A
8109C4 8075              SJMP    ?C0094?RACKSET
8109C6         ?C0086?RACKSET:
  237: 			else//存入
  238: 			{
  239: 				Templen = *len;
8109C6 90175A            MOV     DPTR,#len
8109C9 E0                MOVX    A,@DPTR
8109CA FE                MOV     R6,A
8109CB A3                INC     DPTR
8109CC E0                MOVX    A,@DPTR
8109CD F582              MOV     DPL,A
8109CF 8E83              MOV     DPH,R6
8109D1 E0                MOVX    A,@DPTR
8109D2 90175C            MOV     DPTR,#Templen
8109D5 F0                MOVX    @DPTR,A
  240: 				if( Templen == 0 )
8109D6 6063              JZ      ?C0094?RACKSET
  241: 					break;
8109D8         ?C0088?RACKSET:
  242: 				if( Templen > 1 )
8109D8 90175C            MOV     DPTR,#Templen
8109DB E0                MOVX    A,@DPTR
8109DC D3                SETB    C
8109DD 9401              SUBB    A,#01H
8109DF 4003              JC      ?C0089?RACKSET
  243: 					Templen = 1;	
8109E1 7401              MOV     A,#01H
8109E3 F0                MOVX    @DPTR,A
8109E4         ?C0089?RACKSET:
  244: 				iRackColumnSet[RackNo - 1][7].UseState = 0;	
8109E4 902DF1            MOV     DPTR,#RackNo
8109E7 E0                MOVX    A,@DPTR
8109E8 C4                SWAP    A
8109E9 54F0              ANL     A,#0F0H
8109EB 2443              ADD     A,#LOW iRackColumnSet-01H
8109ED F582              MOV     DPL,A
8109EF E4                CLR     A
8109F0 3401              ADDC    A,#HIGH iRackColumnSet-01H
8109F2 F583              MOV     DPH,A
8109F4 E4                CLR     A
8109F5 F0                MOVX    @DPTR,A
  245: 				for( i = 0; i < Templen; i ++ )
8109F6 90175D            MOV     DPTR,#i
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 679


8109F9 F0                MOVX    @DPTR,A
8109FA         ?C0090?RACKSET:
8109FA 90175C            MOV     DPTR,#Templen
8109FD E0                MOVX    A,@DPTR
8109FE FF                MOV     R7,A
8109FF A3                INC     DPTR
810A00 E0                MOVX    A,@DPTR
810A01 FE                MOV     R6,A
810A02 C3                CLR     C
810A03 9F                SUBB    A,R7
810A04 5035              JNC     ?C0094?RACKSET
  246: 				{					
  247: 					if( ( *( InStr + i ) >= 0 ) && ( *( InStr + i ) <= 9 ) )
810A06 901758            MOV     DPTR,#InStr
810A09 E0                MOVX    A,@DPTR
810A0A FC                MOV     R4,A
810A0B A3                INC     DPTR
810A0C E0                MOVX    A,@DPTR
810A0D 2E                ADD     A,R6
810A0E F582              MOV     DPL,A
810A10 E4                CLR     A
810A11 3C                ADDC    A,R4
810A12 F583              MOV     DPH,A
810A14 E0                MOVX    A,@DPTR
810A15 FF                MOV     R7,A
810A16 C3                CLR     C
810A17 9400              SUBB    A,#00H
810A19 4018              JC      ?C0092?RACKSET
810A1B EF                MOV     A,R7
810A1C D3                SETB    C
810A1D 9409              SUBB    A,#09H
810A1F 5012              JNC     ?C0092?RACKSET
  248: 						iRackColumnSet[RackNo - 1][7].UseState = *( InStr + i );					
810A21 902DF1            MOV     DPTR,#RackNo
810A24 E0                MOVX    A,@DPTR
810A25 C4                SWAP    A
810A26 54F0              ANL     A,#0F0H
810A28 2443              ADD     A,#LOW iRackColumnSet-01H
810A2A F582              MOV     DPL,A
810A2C E4                CLR     A
810A2D 3401              ADDC    A,#HIGH iRackColumnSet-01H
810A2F F583              MOV     DPH,A
810A31 EF                MOV     A,R7
810A32 F0                MOVX    @DPTR,A
  249: 				}			
810A33         ?C0092?RACKSET:
810A33 90175D            MOV     DPTR,#i
810A36 E0                MOVX    A,@DPTR
810A37 04                INC     A
810A38 F0                MOVX    @DPTR,A
810A39 80BF              SJMP    ?C0090?RACKSET
  250: 			}			
  251: 		break;
  252: 	}
  253: }
810A3B         ?C0094?RACKSET:
810A3B A522              ERET    
----- FUNCTION _ReadWriteRactParam (END) -------


----- FUNCTION _Rack_MenuSelected (BEGIN) -----
 FILE: 'RackSet.c'
  298: void  Rack_MenuSelected( u_char xdata *SelectedNum, u_char xdata *CursorLine, u_char MoveRange )
  299: {
810A3D 901737            MOV     DPTR,#MoveRange
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 680


810A40 EB                MOV     A,R3
810A41 F0                MOVX    @DPTR,A
810A42 901733            MOV     DPTR,#SelectedNum
810A45 EE                MOV     A,R6
810A46 F0                MOVX    @DPTR,A
810A47 A3                INC     DPTR
810A48 EF                MOV     A,R7
810A49 F0                MOVX    @DPTR,A
810A4A A3                INC     DPTR
810A4B EC                MOV     A,R4
810A4C F0                MOVX    @DPTR,A
810A4D A3                INC     DPTR
810A4E ED                MOV     A,R5
810A4F F0                MOVX    @DPTR,A
  300: 	u_char xdata  MenuNum = *SelectedNum;
  301: 	u_char xdata  Cursor = *CursorLine;
810A50 8F82              MOV     DPL,R7
810A52 8E83              MOV     DPH,R6
810A54 E0                MOVX    A,@DPTR
810A55 901738            MOV     DPTR,#MenuNum
810A58 F0                MOVX    @DPTR,A
  302: 	bit	   data  flag = 1;
810A59 8D82              MOV     DPL,R5
810A5B 8C83              MOV     DPH,R4
810A5D E0                MOVX    A,@DPTR
810A5E 901739            MOV     DPTR,#Cursor
810A61 F0                MOVX    @DPTR,A
  303: 	u_char xdata  key = 0xff;
810A62 D218              SETB    flag
  304: 	u_char  xdata  len = 0;	
810A64 A3                INC     DPTR
810A65 74FF              MOV     A,#0FFH
810A67 F0                MOVX    @DPTR,A
  305: 
810A68 E4                CLR     A
810A69 A3                INC     DPTR
810A6A F0                MOVX    @DPTR,A
810A6B         ?C0098?RACKSET:
  306: 	while( flag )
810A6B 201803            JB      flag,$ + 6H
810A6E 020B95            LJMP    ?C0099?RACKSET
  307: 	{
  308: 		key = GetKey();
810A71 A512809275        ECALL   GetKey
810A76 90173A            MOV     DPTR,#key
810A79 EF                MOV     A,R7
810A7A F0                MOVX    @DPTR,A
  309: 		switch( key )		
810A7B 24F3              ADD     A,#0F3H
810A7D 7003              JNZ     $ + 5H
810A7F 020B60            LJMP    ?C0116?RACKSET
810A82 24C5              ADD     A,#0C5H
810A84 6021              JZ      ?C0102?RACKSET
810A86 24F8              ADD     A,#0F8H
810A88 7003              JNZ     $ + 5H
810A8A 020B0E            LJMP    ?C0109?RACKSET
810A8D 2435              ADD     A,#035H
810A8F 6003              JZ      $ + 5H
810A91 020B86            LJMP    ?C0100?RACKSET
  310: 		{
  311: 			case KEY_CANCEL:
810A94         ?C0101?RACKSET:
  312: 				flag = 0;
810A94 C218              CLR     flag
  313: 				*SelectedNum = 100;				
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 681


810A96 901733            MOV     DPTR,#SelectedNum
810A99 E0                MOVX    A,@DPTR
810A9A FE                MOV     R6,A
810A9B A3                INC     DPTR
810A9C E0                MOVX    A,@DPTR
810A9D F582              MOV     DPL,A
810A9F 8E83              MOV     DPH,R6
810AA1 7464              MOV     A,#064H
810AA3 F0                MOVX    @DPTR,A
  314: 				break;
810AA4 020B86            LJMP    ?C0100?RACKSET
  315: 			case KEY_UP://上移  				
810AA7         ?C0102?RACKSET:
  316: 				if( Cursor == 2 )//选中标记上移
810AA7 901739            MOV     DPTR,#Cursor
810AAA E0                MOVX    A,@DPTR
810AAB 6402              XRL     A,#02H
810AAD 7030              JNZ     ?C0103?RACKSET
  317: 				{			
  318: 					DisplayCursorState( 0, 0, 1, 2, 1 );//第一行整光标					
810AAF D21A              SETB    ?_DisplayCursorState?BIT
810AB1 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
810AB4 7402              MOV     A,#02H
810AB6 F0                MOVX    @DPTR,A
810AB7 D21B              SETB    ?_DisplayCursorState?BIT+01H
810AB9 E4                CLR     A
810ABA FD                MOV     R5,A
810ABB FF                MOV     R7,A
810ABC A51280817F        ECALL   _DisplayCursorState
  319: 					Cursor = 1;
810AC1 901739            MOV     DPTR,#Cursor
810AC4 7401              MOV     A,#01H
810AC6 F0                MOVX    @DPTR,A
  320: 					if( MenuNum == 0 )
810AC7 901738            MOV     DPTR,#MenuNum
810ACA E0                MOVX    A,@DPTR
810ACB 7009              JNZ     ?C0104?RACKSET
  321: 						MenuNum = MoveRange;					
810ACD 901737            MOV     DPTR,#MoveRange
810AD0 E0                MOVX    A,@DPTR
810AD1 A3                INC     DPTR
810AD2 F0                MOVX    @DPTR,A
810AD3 020B86            LJMP    ?C0100?RACKSET
810AD6         ?C0104?RACKSET:
  322: 					else									    
  323: 						MenuNum--;					
810AD6 901738            MOV     DPTR,#MenuNum
810AD9 E0                MOVX    A,@DPTR
810ADA 14                DEC     A
810ADB F0                MOVX    @DPTR,A
  324: 				}
810ADC 020B86            LJMP    ?C0100?RACKSET
810ADF         ?C0103?RACKSET:
  325: 				else//菜单上翻
  326: 				{						
  327: 					DisplayRackMenuAndVal( 1, MenuNum, 1 );					
810ADF A512806D46        ECALL   ?L?COM0028
  328: 					if( MenuNum == 0 )
810AE4 901738            MOV     DPTR,#MenuNum
810AE7 E0                MOVX    A,@DPTR
810AE8 7008              JNZ     ?C0107?RACKSET
  329: 						MenuNum = MoveRange;					
810AEA 901737            MOV     DPTR,#MoveRange
810AED E0                MOVX    A,@DPTR
810AEE A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 682


810AEF F0                MOVX    @DPTR,A
810AF0 8006              SJMP    ?C0108?RACKSET
810AF2         ?C0107?RACKSET:
  330: 					else									    
  331: 						MenuNum--;					
810AF2 901738            MOV     DPTR,#MenuNum
810AF5 E0                MOVX    A,@DPTR
810AF6 14                DEC     A
810AF7 F0                MOVX    @DPTR,A
810AF8         ?C0108?RACKSET:
  332: 					DisplayRackMenuAndVal( 0, MenuNum , 1 );																					
810AF8 901738            MOV     DPTR,#MenuNum
810AFB E0                MOVX    A,@DPTR
810AFC FD                MOV     R5,A
810AFD D219              SETB    ?_DisplayRackMenuAndVal?BIT
810AFF E4                CLR     A
810B00 FF                MOV     R7,A
810B01 A512806D4F        ECALL   _DisplayRackMenuAndVal
  333: 					Cursor = 1;						
810B06 901739            MOV     DPTR,#Cursor
810B09 7401              MOV     A,#01H
810B0B F0                MOVX    @DPTR,A
  334: 				}
  335: 				break;
810B0C 8078              SJMP    ?C0100?RACKSET
  336: 			case KEY_DOWN://下移						
810B0E         ?C0109?RACKSET:
  337: 				if( Cursor == 1 )//选中标记下移
810B0E 901739            MOV     DPTR,#Cursor
810B11 E0                MOVX    A,@DPTR
810B12 6401              XRL     A,#01H
810B14 701B              JNZ     ?C0110?RACKSET
  338: 				{
  339: 					DisplayCursorState( 0, 1, 1, 2, 1 );//第二行整光标
810B16 A512808171        ECALL   ?L?COM000F
  340: 					if( MenuNum == MoveRange )
810B1B 901737            MOV     DPTR,#MoveRange
810B1E E0                MOVX    A,@DPTR
810B1F FF                MOV     R7,A
810B20 A3                INC     DPTR
810B21 E0                MOVX    A,@DPTR
810B22 B50704            CJNE    A,AR7,?C0111?RACKSET
  341: 						MenuNum = 0;					
810B25 E4                CLR     A
810B26 F0                MOVX    @DPTR,A
810B27 802F              SJMP    ?C0169?RACKSET
810B29         ?C0111?RACKSET:
  342: 					else									    						
  343: 						MenuNum++;				     
810B29 901738            MOV     DPTR,#MenuNum
810B2C E0                MOVX    A,@DPTR
810B2D 04                INC     A
810B2E F0                MOVX    @DPTR,A
810B2F         ?C0112?RACKSET:
  344: 					Cursor = 2;						
  345: 				}
810B2F 8027              SJMP    ?C0169?RACKSET
810B31         ?C0110?RACKSET:
  346: 				else//菜单下翻
  347: 				{					
  348: 					DisplayRackMenuAndVal( 0, MenuNum, 1 );						
810B31 901738            MOV     DPTR,#MenuNum
810B34 E0                MOVX    A,@DPTR
810B35 FD                MOV     R5,A
810B36 D219              SETB    ?_DisplayRackMenuAndVal?BIT
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 683


810B38 E4                CLR     A
810B39 FF                MOV     R7,A
810B3A A512806D4F        ECALL   _DisplayRackMenuAndVal
  349: 					if( MenuNum == MoveRange )
810B3F 901737            MOV     DPTR,#MoveRange
810B42 E0                MOVX    A,@DPTR
810B43 FF                MOV     R7,A
810B44 A3                INC     DPTR
810B45 E0                MOVX    A,@DPTR
810B46 B50704            CJNE    A,AR7,?C0114?RACKSET
  350: 						MenuNum = 0;					
810B49 E4                CLR     A
810B4A F0                MOVX    @DPTR,A
810B4B 8006              SJMP    ?C0115?RACKSET
810B4D         ?C0114?RACKSET:
  351: 					else									    
  352: 						MenuNum++;					
810B4D 901738            MOV     DPTR,#MenuNum
810B50 E0                MOVX    A,@DPTR
810B51 04                INC     A
810B52 F0                MOVX    @DPTR,A
810B53         ?C0115?RACKSET:
  353: 					DisplayRackMenuAndVal( 1, MenuNum , 1 );																					
810B53 A512806D46        ECALL   ?L?COM0028
  354: 					Cursor = 2;
810B58         
810B58 901739            MOV     DPTR,#Cursor
810B5B 7402              MOV     A,#02H
810B5D F0                MOVX    @DPTR,A
  355: 				}
  356: 				break;
810B5E 8026              SJMP    ?C0100?RACKSET
  357: 			case KEY_SUBMIT://Enter,选中了某项菜单
810B60         ?C0116?RACKSET:
  358: 				{			
  359: 					*SelectedNum = MenuNum;
810B60 901738            MOV     DPTR,#MenuNum
810B63 E0                MOVX    A,@DPTR
810B64 FF                MOV     R7,A
810B65 901733            MOV     DPTR,#SelectedNum
810B68 E0                MOVX    A,@DPTR
810B69 FC                MOV     R4,A
810B6A A3                INC     DPTR
810B6B E0                MOVX    A,@DPTR
810B6C F582              MOV     DPL,A
810B6E 8C83              MOV     DPH,R4
810B70 EF                MOV     A,R7
810B71 F0                MOVX    @DPTR,A
  360: 					*CursorLine = Cursor;					
810B72 901739            MOV     DPTR,#Cursor
810B75 E0                MOVX    A,@DPTR
810B76 FF                MOV     R7,A
810B77 901735            MOV     DPTR,#CursorLine
810B7A E0                MOVX    A,@DPTR
810B7B FC                MOV     R4,A
810B7C A3                INC     DPTR
810B7D E0                MOVX    A,@DPTR
810B7E F582              MOV     DPL,A
810B80 8C83              MOV     DPH,R4
810B82 EF                MOV     A,R7
810B83 F0                MOVX    @DPTR,A
  361: 					flag = 0;	
810B84 C218              CLR     flag
  362: 				}
  363: 				break;			
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 684


  364: 		}
810B86         ?C0100?RACKSET:
  365: 		CoreProcessCycle();//让出时间片
810B86 A512807ADC        ECALL   CoreProcessCycle
  366: 		DelayMs( 5 );
810B8B 7F05              MOV     R7,#05H
810B8D A512809789        ECALL   _DelayMs
  367: 	}
810B92 020A6B            LJMP    ?C0098?RACKSET
810B95         ?C0099?RACKSET:
  368: 	ClearKey();		
810B95 A5028087A8        EJMP    ClearKey
----- FUNCTION _Rack_MenuSelected (END) -------


----- FUNCTION RackParamManage (BEGIN) -----
 FILE: 'RackSet.c'
  373: bit RackParamManage()		
  374: {
  375: 	u_char  xdata fristNum ;//一级菜单编号
  376: 	u_char  xdata LineNum ;//选中屏幕的行号	
  377: 	u_char  xdata key = 0;
810B9A E4                CLR     A
810B9B 901728            MOV     DPTR,#key
810B9E F0                MOVX    @DPTR,A
  378: 	u_char xdata  i = 0;
810B9F A3                INC     DPTR
810BA0 F0                MOVX    @DPTR,A
  379: 	u_char xdata Tempstr[8];
  380: 	u_char xdata len = 0;	
810BA1 901732            MOV     DPTR,#len
810BA4 F0                MOVX    @DPTR,A
  381: 	
  382: 	ClearKey();		
810BA5 A5128087A8        ECALL   ClearKey
  383: 	//输入货道编号
  384: 	RackNo = 0;
810BAA E4                CLR     A
810BAB 902DF1            MOV     DPTR,#RackNo
810BAE F0                MOVX    @DPTR,A
  385: 	IsModify = 0;
810BAF 902DF0            MOV     DPTR,#IsModify
810BB2 F0                MOVX    @DPTR,A
810BB3         ?C0118?RACKSET:
  386: 	/////////////////////////////////////////
  387: 	while( 1 )
  388: 	{		
  389: 		ClearKey();	
810BB3 A5128087A8        ECALL   ClearKey
  390: 		//输入货道编号
  391: 		RackNo = 0;
810BB8 E4                CLR     A
810BB9 902DF1            MOV     DPTR,#RackNo
810BBC F0                MOVX    @DPTR,A
810BBD         ?C0120?RACKSET:
  392: 		//////////////////////////		
  393: 		while( 1 )
  394: 		{		
  395: 			ClearDisplayLine( 1 );
810BBD A5128087B2        ECALL   ?L?COM0014
  396: 			ClearDisplayLine( 2 );		
  397: 			len = 1;
810BC2 901732            MOV     DPTR,#len
810BC5 7401              MOV     A,#01H
810BC7 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 685


  398: 			memset( Tempstr,0, sizeof( Tempstr ) );	
810BC8 7E00              MOV     R6,#00H
810BCA 7F08              MOV     R7,#08H
810BCC 7D00              MOV     R5,#00H
810BCE 7B00              MOV     R3,#?C?XDATASEG
810BD0 7A17              MOV     R2,#HIGH Tempstr
810BD2 792A              MOV     R1,#LOW Tempstr
810BD4 A5128008A6        ECALL   ?C?MEMSET
  399: 		 #ifdef _CHINA_
  400: 		 	key = GetLine( "输入层架编号:", 13 , 0, Tempstr, &len );
  401: 		 #else
  402: 			key = GetLine( "Input Tray code:", 16 , 0, Tempstr, &len );
810BD9 E4                CLR     A
810BDA 901769            MOV     DPTR,#?_GetLine?BYTE+04H
810BDD F0                MOVX    @DPTR,A
810BDE 7B00              MOV     R3,#?C?XDATASEG
810BE0 7A17              MOV     R2,#HIGH Tempstr
810BE2 792A              MOV     R1,#LOW Tempstr
810BE4 A3                INC     DPTR
810BE5 A5128007B6        ECALL   ?C?PSTXDATA
810BEA 7A17              MOV     R2,#HIGH len
810BEC 7932              MOV     R1,#LOW len
810BEE 90176D            MOV     DPTR,#?_GetLine?BYTE+08H
810BF1 A5128007B6        ECALL   ?C?PSTXDATA
810BF6 7B80              MOV     R3,#BYTE2 08013C2H
810BF8 7A13              MOV     R2,#HIGH 08013C2H
810BFA 79C2              MOV     R1,#LOW 08013C2H
810BFC 7D10              MOV     R5,#010H
810BFE A512808C2C        ECALL   _GetLine
810C03 901728            MOV     DPTR,#key
810C06 EF                MOV     A,R7
810C07 F0                MOVX    @DPTR,A
  403: 		 #endif
  404: 			WaitForWork( 500, NULL );	
810C08 E4                CLR     A
810C09 7FF4              MOV     R7,#0F4H
810C0B 7E01              MOV     R6,#01H
810C0D A512807B35        ECALL   ?L?COM000D
  405: 			ClearKey();				
810C12 A5128087A8        ECALL   ClearKey
  406: 			if( key == 1 )//Enter	
810C17 901728            MOV     DPTR,#key
810C1A E0                MOVX    A,@DPTR
810C1B 6401              XRL     A,#01H
810C1D 6003              JZ      $ + 5H
810C1F 020CB9            LJMP    ?C0122?RACKSET
  407: 			{			
  408: 				DisplayCursorState( 0, 0, 0, 0, 1 );			
810C22 C21A              CLR     ?_DisplayCursorState?BIT
810C24 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
810C27 F0                MOVX    @DPTR,A
810C28 D21B              SETB    ?_DisplayCursorState?BIT+01H
810C2A FD                MOV     R5,A
810C2B FF                MOV     R7,A
810C2C A51280817F        ECALL   _DisplayCursorState
  409: 				for( i = 0; i < len; i ++ )
810C31 E4                CLR     A
810C32 901729            MOV     DPTR,#i
810C35 F0                MOVX    @DPTR,A
810C36         ?C0123?RACKSET:
810C36 901732            MOV     DPTR,#len
810C39 E0                MOVX    A,@DPTR
810C3A FF                MOV     R7,A
810C3B 901729            MOV     DPTR,#i
810C3E E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 686


810C3F FE                MOV     R6,A
810C40 C3                CLR     C
810C41 9F                SUBB    A,R7
810C42 5026              JNC     ?C0124?RACKSET
  410: 				{
  411: 					if( ( Tempstr[i] >= 0 ) && ( Tempstr[i] <= 9 ) )
810C44 742A              MOV     A,#LOW Tempstr
810C46 2E                ADD     A,R6
810C47 F582              MOV     DPL,A
810C49 E4                CLR     A
810C4A 3417              ADDC    A,#HIGH Tempstr
810C4C F583              MOV     DPH,A
810C4E E0                MOVX    A,@DPTR
810C4F FF                MOV     R7,A
810C50 C3                CLR     C
810C51 9400              SUBB    A,#00H
810C53 400D              JC      ?C0125?RACKSET
810C55 EF                MOV     A,R7
810C56 D3                SETB    C
810C57 9409              SUBB    A,#09H
810C59 5007              JNC     ?C0125?RACKSET
  412: 					{
  413: 						RackNo = Tempstr[i];				
810C5B 902DF1            MOV     DPTR,#RackNo
810C5E EF                MOV     A,R7
810C5F F0                MOVX    @DPTR,A
  414: 						break;
810C60 8008              SJMP    ?C0124?RACKSET
  415: 					}
  416: 				}				
810C62         ?C0125?RACKSET:
810C62 901729            MOV     DPTR,#i
810C65 E0                MOVX    A,@DPTR
810C66 04                INC     A
810C67 F0                MOVX    @DPTR,A
810C68 80CC              SJMP    ?C0123?RACKSET
810C6A         ?C0124?RACKSET:
  417: 				ClearKey();	
810C6A A5128087A8        ECALL   ClearKey
  418: 					
  419: 				if( ( RackNo <= 0 ) || ( RackNo > RACKNUM ))
810C6F 902DF1            MOV     DPTR,#RackNo
810C72 E0                MOVX    A,@DPTR
810C73 FF                MOV     R7,A
810C74 D3                SETB    C
810C75 9400              SUBB    A,#00H
810C77 4009              JC      ?C0128?RACKSET
810C79 EF                MOV     A,R7
810C7A D3                SETB    C
810C7B 9408              SUBB    A,#08H
810C7D 5003              JNC     $ + 5H
810C7F 020EA5            LJMP    ?C0121?RACKSET
810C82         ?C0128?RACKSET:
  420: 		 	    {
  421: 					#ifdef _CHINA_
  422: 						DisplayStr( 0, 0, 1, "编号输入错误", 12 );
  423: 						DisplayStr( 0, 1, 1, "请输入其它编号", 14 );
  424: 					#else
  425: 						DisplayStr( 0, 0, 1, "Input code error", 16 );
810C82 D21A              SETB    ?_DisplayStr?BIT
810C84 7B80              MOV     R3,#BYTE2 08013D3H
810C86 7A13              MOV     R2,#HIGH 08013D3H
810C88 79D3              MOV     R1,#LOW 08013D3H
810C8A 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
810C8D A5128007B6        ECALL   ?C?PSTXDATA
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 687


810C92 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
810C95 7410              MOV     A,#010H
810C97 A51280805E        ECALL   ?L?COM0007
  426: 						DisplayStr( 0, 1, 1, "Input other code", 16 );				
810C9C D21A              SETB    ?_DisplayStr?BIT
810C9E 7B80              MOV     R3,#BYTE2 08013E4H
810CA0 7A13              MOV     R2,#HIGH 08013E4H
810CA2 79E4              MOV     R1,#LOW 08013E4H
810CA4 90180D            MOV     DPTR,#?_DisplayStr?BYTE+02H
810CA7 A5128007B6        ECALL   ?C?PSTXDATA
810CAC 901810            MOV     DPTR,#?_DisplayStr?BYTE+05H
810CAF 7410              MOV     A,#010H
810CB1 A512807B26        ECALL   ?L?COM000B
  427: 					#endif									
  428: 					WaitForWork( 2000, NULL );
  429: 					continue;
810CB6 020BBD            LJMP    ?C0120?RACKSET
  430: 				}
  431: 				else
  432: 					break;
  433: 			}
810CB9         ?C0122?RACKSET:
  434: 			else
  435: 			{
  436: 				Trace( "\n IsModify = %bu", IsModify );
  437: 				if( IsModify == 0 )
810CB9 902DF0            MOV     DPTR,#IsModify
810CBC E0                MOVX    A,@DPTR
810CBD 7004              JNZ     ?C0131?RACKSET
  438: 					return 0;
810CBF C3                CLR     C
810CC0 020F94            LJMP    ?C0132?RACKSET
810CC3         ?C0131?RACKSET:
  439: 				////层架配置完成，设置号道参数
  440: 				LineNum = 0;//总的开启货道数
810CC3 E4                CLR     A
810CC4 901727            MOV     DPTR,#LineNum
810CC7 F0                MOVX    @DPTR,A
  441: 				RackNo = 0;//开启层数
810CC8 902DF1            MOV     DPTR,#RackNo
810CCB F0                MOVX    @DPTR,A
  442: 				memset( InputGoodsWayList, 0, sizeof( InputGoodsWayList )*GOODSWAYNUM );
810CCC 7E40              MOV     R6,#040H
810CCE FF                MOV     R7,A
810CCF FD                MOV     R5,A
810CD0 7B00              MOV     R3,#?C?XDATASEG
810CD2 7A2B              MOV     R2,#HIGH InputGoodsWayList
810CD4 79D3              MOV     R1,#LOW InputGoodsWayList
810CD6 A5128008A6        ECALL   ?C?MEMSET
  443: 				for( i = 0; i < RACKNUM; i++ )//货架层数
810CDB E4                CLR     A
810CDC 901729            MOV     DPTR,#i
810CDF F0                MOVX    @DPTR,A
810CE0         ?C0133?RACKSET:
810CE0 901729            MOV     DPTR,#i
810CE3 E0                MOVX    A,@DPTR
810CE4 FF                MOV     R7,A
810CE5 C3                CLR     C
810CE6 9408              SUBB    A,#08H
810CE8 4003              JC      $ + 5H
810CEA 020E18            LJMP    ?C0134?RACKSET
  444: 				{
  445: 					if( iRackSet[ i ].UseState == 1 )//如果此层开启了
810CED EF                MOV     A,R7
810CEE 75F003            MOV     B,#03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 688


810CF1 A4                MUL     AB
810CF2 2406              ADD     A,#LOW iRackSet+01H
810CF4 F582              MOV     DPL,A
810CF6 E4                CLR     A
810CF7 3404              ADDC    A,#HIGH iRackSet+01H
810CF9 F583              MOV     DPH,A
810CFB E0                MOVX    A,@DPTR
810CFC 6401              XRL     A,#01H
810CFE 6003              JZ      $ + 5H
810D00 020DD9            LJMP    ?C0136?RACKSET
  446: 					{
  447: 						key = iRackSet[ i ].GoodsMax;//此层中各货道最大存货量
810D03 901729            MOV     DPTR,#i
810D06 E0                MOVX    A,@DPTR
810D07 75F003            MOV     B,#03H
810D0A A4                MUL     AB
810D0B 2407              ADD     A,#LOW iRackSet+02H
810D0D F582              MOV     DPL,A
810D0F E4                CLR     A
810D10 3404              ADDC    A,#HIGH iRackSet+02H
810D12 F583              MOV     DPH,A
810D14 E0                MOVX    A,@DPTR
810D15 901728            MOV     DPTR,#key
810D18 F0                MOVX    @DPTR,A
  448: 						fristNum = 1;//辑逻货道编号的个位	
810D19 901726            MOV     DPTR,#fristNum
810D1C 7401              MOV     A,#01H
810D1E F0                MOVX    @DPTR,A
  449: 						for( len = 0; len < RACKCOLUMNNUM; len ++ )//检索每层中开启的货道数
810D1F E4                CLR     A
810D20 901732            MOV     DPTR,#len
810D23 F0                MOVX    @DPTR,A
810D24         ?C0137?RACKSET:
810D24 901732            MOV     DPTR,#len
810D27 E0                MOVX    A,@DPTR
810D28 FF                MOV     R7,A
810D29 C3                CLR     C
810D2A 9408              SUBB    A,#08H
810D2C 4003              JC      $ + 5H
810D2E 020DD1            LJMP    ?C0138?RACKSET
  450: 						{
  451: 							Trace("\n iRackColumnSet[ %bu ][ %bu ].UseState = %bu", i, len, iRackColumnSet[i][len].UseState  );
  452: 							if( iRackColumnSet[i][len].UseState == 1)
810D31 901729            MOV     DPTR,#i
810D34 E0                MOVX    A,@DPTR
810D35 FE                MOV     R6,A
810D36 C4                SWAP    A
810D37 54F0              ANL     A,#0F0H
810D39 2445              ADD     A,#LOW iRackColumnSet+01H
810D3B F582              MOV     DPL,A
810D3D E4                CLR     A
810D3E 3401              ADDC    A,#HIGH iRackColumnSet+01H
810D40 F583              MOV     DPH,A
810D42 75F002            MOV     B,#02H
810D45 EF                MOV     A,R7
810D46 A51280079F        ECALL   ?C?OFFXADD
810D4B E0                MOVX    A,@DPTR
810D4C 6401              XRL     A,#01H
810D4E 7078              JNZ     ?C0139?RACKSET
  453: 							{
  454: 								InputGoodsWayList[ LineNum ].GoodsWayNo = ( RackNo + 1 ) * 10 + fristNum;//逻辑货道  
810D50 902DF1            MOV     DPTR,#RackNo
810D53 E0                MOVX    A,@DPTR
810D54 04                INC     A
810D55 75F00A            MOV     B,#0AH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 689


810D58 A4                MUL     AB
810D59 FF                MOV     R7,A
810D5A 901726            MOV     DPTR,#fristNum
810D5D E0                MOVX    A,@DPTR
810D5E 2F                ADD     A,R7
810D5F FF                MOV     R7,A
810D60 A3                INC     DPTR
810D61 E0                MOVX    A,@DPTR
810D62 FD                MOV     R5,A
810D63 25E0              ADD     A,ACC
810D65 25E0              ADD     A,ACC
810D67 24D3              ADD     A,#LOW InputGoodsWayList
810D69 F582              MOV     DPL,A
810D6B E4                CLR     A
810D6C 342B              ADDC    A,#HIGH InputGoodsWayList
810D6E F583              MOV     DPH,A
810D70 EF                MOV     A,R7
810D71 F0                MOVX    @DPTR,A
  455: 								Trace("\n InputGoodsWayList[ %bu ].GoodsWayNo = %bu", LineNum, InputGoodsWayList[ LineNum ].GoodsWayNo);
  456: 							//	InputGoodsWayList[ LineNum ].SetArrayNo = i*RACKCOLUMNNUM + len + 1 ;//物理货道
  457: 								InputGoodsWayList[ LineNum ].SetArrayNo = 64 - i*RACKCOLUMNNUM - 8 + len + 1;//物理货道
810D72 EE                MOV     A,R6
810D73 75F008            MOV     B,#08H
810D76 A4                MUL     AB
810D77 F4                CPL     A
810D78 04                INC     A
810D79 FF                MOV     R7,A
810D7A 901732            MOV     DPTR,#len
810D7D E0                MOVX    A,@DPTR
810D7E 2F                ADD     A,R7
810D7F 2439              ADD     A,#039H
810D81 FF                MOV     R7,A
810D82 ED                MOV     A,R5
810D83 25E0              ADD     A,ACC
810D85 25E0              ADD     A,ACC
810D87 24D4              ADD     A,#LOW InputGoodsWayList+01H
810D89 F582              MOV     DPL,A
810D8B E4                CLR     A
810D8C 342B              ADDC    A,#HIGH InputGoodsWayList+01H
810D8E F583              MOV     DPH,A
810D90 EF                MOV     A,R7
810D91 F0                MOVX    @DPTR,A
  458: 								Trace("\n InputGoodsWayList[ %bu ].SetArrayNo = %bu", LineNum, InputGoodsWayList[ LineNum ].SetArrayNo);
  459: 								InputGoodsWayList[ LineNum ].UseState = 1;//开启状态
810D92 901727            MOV     DPTR,#LineNum
810D95 E0                MOVX    A,@DPTR
810D96 FF                MOV     R7,A
810D97 25E0              ADD     A,ACC
810D99 25E0              ADD     A,ACC
810D9B 24D5              ADD     A,#LOW InputGoodsWayList+02H
810D9D F582              MOV     DPL,A
810D9F E4                CLR     A
810DA0 342B              ADDC    A,#HIGH InputGoodsWayList+02H
810DA2 F583              MOV     DPH,A
810DA4 7401              MOV     A,#01H
810DA6 F0                MOVX    @DPTR,A
  460: 								Trace("\n InputGoodsWayList[ %bu ].UseState = %bu", LineNum, InputGoodsWayList[ LineNum ].UseState);
  461: 								InputGoodsWayList[ LineNum ].GoodsMax = key;//最大存货量
810DA7 901728            MOV     DPTR,#key
810DAA E0                MOVX    A,@DPTR
810DAB FE                MOV     R6,A
810DAC EF                MOV     A,R7
810DAD 25E0              ADD     A,ACC
810DAF 25E0              ADD     A,ACC
810DB1 24D6              ADD     A,#LOW InputGoodsWayList+03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 690


810DB3 F582              MOV     DPL,A
810DB5 E4                CLR     A
810DB6 342B              ADDC    A,#HIGH InputGoodsWayList+03H
810DB8 F583              MOV     DPH,A
810DBA EE                MOV     A,R6
810DBB F0                MOVX    @DPTR,A
  462: 								Trace("\n InputGoodsWayList[ %bu ].GoodsMax = %bu", LineNum, InputGoodsWayList[ LineNum ].GoodsMax);
  463: 								LineNum += 1;								
810DBC 901727            MOV     DPTR,#LineNum
810DBF E0                MOVX    A,@DPTR
810DC0 04                INC     A
810DC1 F0                MOVX    @DPTR,A
  464: 								fristNum += 1;
810DC2 901726            MOV     DPTR,#fristNum
810DC5 E0                MOVX    A,@DPTR
810DC6 04                INC     A
810DC7 F0                MOVX    @DPTR,A
  465: 							}							
  466: 						}
810DC8         ?C0139?RACKSET:
810DC8 901732            MOV     DPTR,#len
810DCB E0                MOVX    A,@DPTR
810DCC 04                INC     A
810DCD F0                MOVX    @DPTR,A
810DCE 020D24            LJMP    ?C0137?RACKSET
810DD1         ?C0138?RACKSET:
  467: 						RackNo += 1;
810DD1 902DF1            MOV     DPTR,#RackNo
810DD4 E0                MOVX    A,@DPTR
810DD5 04                INC     A
810DD6 F0                MOVX    @DPTR,A
  468: 					}
810DD7 8036              SJMP    ?C0135?RACKSET
810DD9         ?C0136?RACKSET:
  469: 					else
  470: 					{
  471: 						iRackSet[i].GoodsMax = 0;
810DD9 901729            MOV     DPTR,#i
810DDC E0                MOVX    A,@DPTR
810DDD FF                MOV     R7,A
810DDE 75F003            MOV     B,#03H
810DE1 A4                MUL     AB
810DE2 2407              ADD     A,#LOW iRackSet+02H
810DE4 F582              MOV     DPL,A
810DE6 E4                CLR     A
810DE7 3404              ADDC    A,#HIGH iRackSet+02H
810DE9 F583              MOV     DPH,A
810DEB E4                CLR     A
810DEC F0                MOVX    @DPTR,A
  472: 						memset( iRackColumnSet[i], 0, 16 );
810DED F583              MOV     DPH,A
810DEF 758210            MOV     DPL,#010H
810DF2 C083              PUSH    DPH
810DF4 C082              PUSH    DPL
810DF6 FD                MOV     R5,A
810DF7 EF                MOV     A,R7
810DF8 75F010            MOV     B,#010H
810DFB A4                MUL     AB
810DFC 2444              ADD     A,#LOW iRackColumnSet
810DFE F9                MOV     R1,A
810DFF 7401              MOV     A,#HIGH iRackColumnSet
810E01 35F0              ADDC    A,B
810E03 FA                MOV     R2,A
810E04 7B00              MOV     R3,#?C?XDATASEG
810E06 D007              POP     AR7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 691


810E08 D006              POP     AR6
810E0A A5128008A6        ECALL   ?C?MEMSET
  473: 					}
  474: 				}
810E0F         ?C0135?RACKSET:
810E0F 901729            MOV     DPTR,#i
810E12 E0                MOVX    A,@DPTR
810E13 04                INC     A
810E14 F0                MOVX    @DPTR,A
810E15 020CE0            LJMP    ?C0133?RACKSET
810E18         ?C0134?RACKSET:
  475: 				memset( GoodsWaySetVal, 0, sizeof( struct WaySet ) * GOODSWAYNUM );
810E18 7E01              MOV     R6,#01H
810E1A 7F40              MOV     R7,#040H
810E1C 7D00              MOV     R5,#00H
810E1E 7B00              MOV     R3,#?C?XDATASEG
810E20 7A00              MOV     R2,#HIGH GoodsWaySetVal
810E22 7902              MOV     R1,#LOW GoodsWaySetVal
810E24 A5128008A6        ECALL   ?C?MEMSET
  476: 				Trace("\n EnableNum = %bu", LineNum);
  477: 				for( i = 0; i < LineNum; i ++ )
810E29 E4                CLR     A
810E2A 901729            MOV     DPTR,#i
810E2D F0                MOVX    @DPTR,A
810E2E         ?C0142?RACKSET:
810E2E 901727            MOV     DPTR,#LineNum
810E31 E0                MOVX    A,@DPTR
810E32 FF                MOV     R7,A
810E33 901729            MOV     DPTR,#i
810E36 E0                MOVX    A,@DPTR
810E37 FE                MOV     R6,A
810E38 C3                CLR     C
810E39 9F                SUBB    A,R7
810E3A 5056              JNC     ?C0143?RACKSET
  478: 			    {
  479: 					GoodsWaySetVal[i].WayNo = InputGoodsWayList[ i ].GoodsWayNo;
810E3C EE                MOV     A,R6
810E3D 25E0              ADD     A,ACC
810E3F 25E0              ADD     A,ACC
810E41 24D3              ADD     A,#LOW InputGoodsWayList
810E43 F582              MOV     DPL,A
810E45 E4                CLR     A
810E46 342B              ADDC    A,#HIGH InputGoodsWayList
810E48 F583              MOV     DPH,A
810E4A E0                MOVX    A,@DPTR
810E4B FF                MOV     R7,A
810E4C 75F005            MOV     B,#05H
810E4F EE                MOV     A,R6
810E50 900002            MOV     DPTR,#GoodsWaySetVal
810E53 A51280079F        ECALL   ?C?OFFXADD
810E58 EF                MOV     A,R7
810E59 F0                MOVX    @DPTR,A
  480: 					Trace("\n GoodsWaySetVal[ %bu ].WayNo = %bu", i, GoodsWaySetVal[ i ].WayNo);
  481: 					GoodsWaySetVal[i].WayState = 0;					
810E5A 901729            MOV     DPTR,#i
810E5D E0                MOVX    A,@DPTR
810E5E FF                MOV     R7,A
810E5F 75F005            MOV     B,#05H
810E62 900003            MOV     DPTR,#GoodsWaySetVal+01H
810E65 A51280079F        ECALL   ?C?OFFXADD
810E6A E4                CLR     A
810E6B F0                MOVX    @DPTR,A
  482: 					GoodsWaySetVal[i].Price = 0;
810E6C 75F005            MOV     B,#05H
810E6F EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 692


810E70 900004            MOV     DPTR,#GoodsWaySetVal+02H
810E73 A51280079F        ECALL   ?C?OFFXADD
810E78 E4                CLR     A
810E79 F0                MOVX    @DPTR,A
810E7A A3                INC     DPTR
810E7B F0                MOVX    @DPTR,A
  483: 					GoodsWaySetVal[i].GoodsCurrentSum = 0;
810E7C 75F005            MOV     B,#05H
810E7F EF                MOV     A,R7
810E80 900006            MOV     DPTR,#GoodsWaySetVal+04H
810E83 A51280079F        ECALL   ?C?OFFXADD
810E88 E4                CLR     A
810E89 F0                MOVX    @DPTR,A
  484: 				}
810E8A 901729            MOV     DPTR,#i
810E8D E0                MOVX    A,@DPTR
810E8E 04                INC     A
810E8F F0                MOVX    @DPTR,A
810E90 809C              SJMP    ?C0142?RACKSET
810E92         ?C0143?RACKSET:
  485: 				//保存货架设置和货道开启设置
  486: 				SaveGoodsSet();
810E92 A51280C35F        ECALL   SaveGoodsSet
  487: 				SaveRackSet();
810E97 A51280C42B        ECALL   SaveRackSet
  488: 				SaveRackColumnSet();
810E9C A51280C444        ECALL   SaveRackColumnSet
  489: 				return 0;
810EA1 C3                CLR     C
810EA2 020F94            LJMP    ?C0132?RACKSET
  490: 			}
  491: 		}
810EA5         ?C0121?RACKSET:
  492: 		//////////////////////////		
  493: 		DisplayRackMenuAndVal( 0, 0, 1 );	
810EA5 D219              SETB    ?_DisplayRackMenuAndVal?BIT
810EA7 E4                CLR     A
810EA8 FD                MOV     R5,A
810EA9 FF                MOV     R7,A
810EAA A512806D4F        ECALL   _DisplayRackMenuAndVal
  494: 		DisplayRackMenuAndVal( 1, 1, 1 );		
810EAF D219              SETB    ?_DisplayRackMenuAndVal?BIT
810EB1 7D01              MOV     R5,#01H
810EB3 7F01              MOV     R7,#01H
810EB5 A512806D4F        ECALL   _DisplayRackMenuAndVal
  495: 		DisplayCursorState( 0, 1, 1, 2, 1 );//设置光标在第二行上且为整行光标状态
810EBA A512808171        ECALL   ?L?COM000F
  496: 		fristNum = 1;
810EBF 901726            MOV     DPTR,#fristNum
810EC2 7401              MOV     A,#01H
810EC4 F0                MOVX    @DPTR,A
  497: 		LineNum = 2;
810EC5 A3                INC     DPTR
810EC6 04                INC     A
810EC7 F0                MOVX    @DPTR,A
  498: 		WaitForWork( 300, NULL );
810EC8 E4                CLR     A
810EC9 7F2C              MOV     R7,#02CH
810ECB 7E01              MOV     R6,#01H
810ECD A512807B35        ECALL   ?L?COM000D
810ED2         ?C0145?RACKSET:
  499: 		while( 1 )
  500: 		{		
  501: 			/*判断按下何键*/			
  502: 			Rack_MenuSelected( &fristNum, &LineNum, MENU_COUNT( RackParastr ) - 1 );			
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 693


810ED2 7E17              MOV     R6,#HIGH fristNum
810ED4 7F26              MOV     R7,#LOW fristNum
810ED6 7C17              MOV     R4,#HIGH LineNum
810ED8 7D27              MOV     R5,#LOW LineNum
810EDA 7B0A              MOV     R3,#0AH
810EDC A512810A3D        ECALL   _Rack_MenuSelected
  503: 			//选中了某项菜单				
  504: 			if( fristNum == 100 )//选中退出									
810EE1 901726            MOV     DPTR,#fristNum
810EE4 E0                MOVX    A,@DPTR
810EE5 FF                MOV     R7,A
810EE6 6464              XRL     A,#064H
810EE8 7003              JNZ     $ + 5H
810EEA 020BB3            LJMP    ?C0118?RACKSET
  505: 				break;		
810EED         ?C0147?RACKSET:
  506: 			else if( fristNum == 0 )//没有选中退出
810EED EF                MOV     A,R7
810EEE 60E2              JZ      ?C0145?RACKSET
  507: 				continue;
810EF0         ?C0149?RACKSET:
  508: 			else
  509: 			{				
  510: 				ClearKey();	
810EF0 A5128087A8        ECALL   ClearKey
  511: 				if( iRackSet[RackNo - 1].UseState == 1 )
810EF5 902DF1            MOV     DPTR,#RackNo
810EF8 E0                MOVX    A,@DPTR
810EF9 75F003            MOV     B,#03H
810EFC A4                MUL     AB
810EFD 2403              ADD     A,#LOW iRackSet-02H
810EFF F582              MOV     DPL,A
810F01 E4                CLR     A
810F02 3404              ADDC    A,#HIGH iRackSet-02H
810F04 F583              MOV     DPH,A
810F06 E0                MOVX    A,@DPTR
810F07 B40107            CJNE    A,#01H,?C0151?RACKSET
  512: 					EditRackParam( fristNum, LineNum - 1 );	
810F0A 901726            MOV     DPTR,#fristNum
810F0D E0                MOVX    A,@DPTR
810F0E FF                MOV     R7,A
810F0F 8008              SJMP    ?C0172?RACKSET
810F11         ?C0151?RACKSET:
  513: 				else if( fristNum == 1 ) 
810F11 901726            MOV     DPTR,#fristNum
810F14 E0                MOVX    A,@DPTR
810F15 FF                MOV     R7,A
810F16 B40109            CJNE    A,#01H,?C0152?RACKSET
  514: 					EditRackParam( fristNum, LineNum - 1 );			
810F19         
810F19 A3                INC     DPTR
810F1A E0                MOVX    A,@DPTR
810F1B 14                DEC     A
810F1C FD                MOV     R5,A
810F1D A512806E15        ECALL   _EditRackParam
810F22         ?C0152?RACKSET:
  515: 				//重新显示此项参数的值			
  516: 				if( LineNum == 2 )
810F22 901727            MOV     DPTR,#LineNum
810F25 E0                MOVX    A,@DPTR
810F26 6402              XRL     A,#02H
810F28 7026              JNZ     ?C0154?RACKSET
  517: 				{			
  518: 					if( fristNum == 0 )
810F2A 901726            MOV     DPTR,#fristNum
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 694


810F2D E0                MOVX    A,@DPTR
810F2E 7006              JNZ     ?C0155?RACKSET
  519: 						DisplayRackMenuAndVal( 0, MENU_COUNT( RackParastr ) - 1, 1 );
810F30 D219              SETB    ?_DisplayRackMenuAndVal?BIT
810F32 7D0A              MOV     R5,#0AH
810F34 8009              SJMP    ?C0170?RACKSET
810F36         ?C0155?RACKSET:
  520: 					else						
  521: 						DisplayRackMenuAndVal( 0, fristNum-1, 1 );						
810F36 901726            MOV     DPTR,#fristNum
810F39 E0                MOVX    A,@DPTR
810F3A 14                DEC     A
810F3B FD                MOV     R5,A
810F3C D219              SETB    ?_DisplayRackMenuAndVal?BIT
810F3E E4                CLR     A
810F3F         
810F3F FF                MOV     R7,A
810F40 A512806D4F        ECALL   _DisplayRackMenuAndVal
810F45         ?C0156?RACKSET:
  522: 					DisplayRackMenuAndVal( 1, fristNum, 1 );	
810F45 901726            MOV     DPTR,#fristNum
810F48 E0                MOVX    A,@DPTR
810F49 FD                MOV     R5,A
810F4A D219              SETB    ?_DisplayRackMenuAndVal?BIT
810F4C 7F01              MOV     R7,#01H
  523: 				}
810F4E 8025              SJMP    ?C0173?RACKSET
810F50         ?C0154?RACKSET:
  524: 				else
  525: 				{									
  526: 					if( fristNum == ( MENU_COUNT( RackParastr ) - 1 ) )
810F50 901726            MOV     DPTR,#fristNum
810F53 E0                MOVX    A,@DPTR
810F54 B40A06            CJNE    A,#0AH,?C0158?RACKSET
  527: 						DisplayRackMenuAndVal( 1, 0, 1 );	
810F57 D219              SETB    ?_DisplayRackMenuAndVal?BIT
810F59 E4                CLR     A
810F5A FD                MOV     R5,A
810F5B 8008              SJMP    ?C0171?RACKSET
810F5D         ?C0158?RACKSET:
  528: 					else						
  529: 						DisplayRackMenuAndVal( 1, fristNum + 1, 1 );	
810F5D 901726            MOV     DPTR,#fristNum
810F60 E0                MOVX    A,@DPTR
810F61 04                INC     A
810F62 FD                MOV     R5,A
810F63 D219              SETB    ?_DisplayRackMenuAndVal?BIT
810F65         
810F65 7F01              MOV     R7,#01H
810F67 A512806D4F        ECALL   _DisplayRackMenuAndVal
810F6C         ?C0159?RACKSET:
  530: 					DisplayRackMenuAndVal( 0, fristNum, 1 );
810F6C 901726            MOV     DPTR,#fristNum
810F6F E0                MOVX    A,@DPTR
810F70 FD                MOV     R5,A
810F71 D219              SETB    ?_DisplayRackMenuAndVal?BIT
810F73 E4                CLR     A
810F74 FF                MOV     R7,A
810F75         
810F75 A512806D4F        ECALL   _DisplayRackMenuAndVal
  531: 				}			
810F7A         ?C0157?RACKSET:
  532: 				DisplayCursorState( 0, LineNum - 1, 1, 2, 1 );//设置光标为整行状态			
810F7A 901727            MOV     DPTR,#LineNum
810F7D E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 695


810F7E 14                DEC     A
810F7F FD                MOV     R5,A
810F80 D21A              SETB    ?_DisplayCursorState?BIT
810F82 90178A            MOV     DPTR,#?_DisplayCursorState?BYTE+02H
810F85 7402              MOV     A,#02H
810F87 F0                MOVX    @DPTR,A
810F88 D21B              SETB    ?_DisplayCursorState?BIT+01H
810F8A E4                CLR     A
810F8B FF                MOV     R7,A
810F8C A51280817F        ECALL   _DisplayCursorState
  533: 			}					
  534: 		}
810F91 020ED2            LJMP    ?C0145?RACKSET
  535: 	}
  536: 	return 0;
  537: }
810F94         ?C0132?RACKSET:
810F94 A522              ERET    
----- FUNCTION RackParamManage (END) -------


----- FUNCTION ?L?COM0032 (BEGIN) -----
810F96 901849            MOV     DPTR,#TaskTemp
810F99 E0                MOVX    A,@DPTR
810F9A FE                MOV     R6,A
810F9B A3                INC     DPTR
810F9C E0                MOVX    A,@DPTR
810F9D FF                MOV     R7,A
----- FUNCTION _ZhkChannelTxMsg (BEGIN) -----
 FILE: 'scheduler.c'
 1515: bit ZhkChannelTxMsg( struct COMMTASK xdata* NewTask )
 1516: {
810F9E 90184B            MOV     DPTR,#NewTask
810FA1 EE                MOV     A,R6
810FA2 F0                MOVX    @DPTR,A
810FA3 A3                INC     DPTR
810FA4 EF                MOV     A,R7
810FA5 F0                MOVX    @DPTR,A
 1517: 	u_char ChannelTemp;
 1518: 	u_char sum;
 1519: 	
 1520: //	Trace("\n ZhkChannelTxMsg" );
 1521: 	ChannelTemp  = NewTask->Param[ 0 ] ;	
810FA6 90184B            MOV     DPTR,#NewTask
810FA9 E0                MOVX    A,@DPTR
810FAA FE                MOV     R6,A
810FAB A3                INC     DPTR
810FAC E0                MOVX    A,@DPTR
810FAD FF                MOV     R7,A
810FAE 2406              ADD     A,#06H
810FB0 F582              MOV     DPL,A
810FB2 E4                CLR     A
810FB3 3E                ADDC    A,R6
810FB4 F583              MOV     DPH,A
810FB6 E0                MOVX    A,@DPTR
810FB7 90184D            MOV     DPTR,#ChannelTemp
810FBA F0                MOVX    @DPTR,A
 1522: 	
 1523: 	if( ( NewTask->Cmd == CHANNEL_EXEC ) && ( NewTask->Param[1] == 1 ) )
810FBB 8F82              MOV     DPL,R7
810FBD 8E83              MOV     DPH,R6
810FBF A3                INC     DPTR
810FC0 A3                INC     DPTR
810FC1 E0                MOVX    A,@DPTR
810FC2 B45017            CJNE    A,#050H,?C0283?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 696


810FC5 90184B            MOV     DPTR,#NewTask
810FC8 A3                INC     DPTR
810FC9 E0                MOVX    A,@DPTR
810FCA 2407              ADD     A,#07H
810FCC F582              MOV     DPL,A
810FCE E4                CLR     A
810FCF 3E                ADDC    A,R6
810FD0 F583              MOV     DPH,A
810FD2 E0                MOVX    A,@DPTR
810FD3 B40106            CJNE    A,#01H,?C0283?SCHEDULER
 1524: 		Channel.Sn--;
810FD6 9023B6            MOV     DPTR,#Channel+01H
810FD9 E0                MOVX    A,@DPTR
810FDA 14                DEC     A
810FDB F0                MOVX    @DPTR,A
810FDC         ?C0283?SCHEDULER:
 1525: 	if( Channel.Sn == 255 )
810FDC 9023B6            MOV     DPTR,#Channel+01H
810FDF E0                MOVX    A,@DPTR
810FE0 B4FF05            CJNE    A,#0FFH,?C0284?SCHEDULER
 1526: 		Channel.Sn = 1;
810FE3 7401              MOV     A,#01H
810FE5 F0                MOVX    @DPTR,A
810FE6 8006              SJMP    ?C0285?SCHEDULER
810FE8         ?C0284?SCHEDULER:
 1527: 	else
 1528: 		Channel.Sn ++;
810FE8 9023B6            MOV     DPTR,#Channel+01H
810FEB E0                MOVX    A,@DPTR
810FEC 04                INC     A
810FED F0                MOVX    @DPTR,A
810FEE         ?C0285?SCHEDULER:
 1529: 
 1530: 	ZhkSerial1PutCh( 0xED );
810FEE 7FED              MOV     R7,#0EDH
810FF0 A51280FE05        ECALL   _ZhkSerial1PutCh
 1531: //	Trace(" ed" );
 1532: 	sum  = 0xED;
810FF5 90184E            MOV     DPTR,#sum
810FF8 74ED              MOV     A,#0EDH
810FFA F0                MOVX    @DPTR,A
 1533: 	ZhkSerial1PutCh( 0x08 );
810FFB 7F08              MOV     R7,#08H
810FFD A51280FE05        ECALL   _ZhkSerial1PutCh
 1534: //	Trace(" 08" );
 1535: 	sum ^= 0x08;
811002 90184E            MOV     DPTR,#sum
811005 E0                MOVX    A,@DPTR
811006 6408              XRL     A,#08H
811008 F0                MOVX    @DPTR,A
 1536: 	if( NewTask->Cmd == CHANNEL_CLEAR )
811009 90184B            MOV     DPTR,#NewTask
81100C E0                MOVX    A,@DPTR
81100D FE                MOV     R6,A
81100E A3                INC     DPTR
81100F E0                MOVX    A,@DPTR
811010 F582              MOV     DPL,A
811012 8E83              MOV     DPH,R6
811014 A3                INC     DPTR
811015 A3                INC     DPTR
811016 E0                MOVX    A,@DPTR
811017 B4530E            CJNE    A,#053H,?C0286?SCHEDULER
 1537: 	{
 1538: 		ZhkSerial1PutCh( 0x00 );
81101A E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 697


81101B FF                MOV     R7,A
81101C A51280FE05        ECALL   _ZhkSerial1PutCh
 1539: //		Trace(" %02bx", 0x00 );
 1540: 		sum ^= 0x00;
811021 90184E            MOV     DPTR,#sum
811024 E0                MOVX    A,@DPTR
811025 F0                MOVX    @DPTR,A
 1541: 	}
811026 802A              SJMP    ?C0287?SCHEDULER
811028         ?C0286?SCHEDULER:
 1542: 	else
 1543: 	{
 1544: 		ZhkSerial1PutCh( Channel.Sn );
811028 9023B6            MOV     DPTR,#Channel+01H
81102B E0                MOVX    A,@DPTR
81102C FF                MOV     R7,A
81102D A51280FE05        ECALL   _ZhkSerial1PutCh
 1545: //		Trace(" %02bx", Channel.Sn );
 1546: 		sum ^= Channel.Sn;		
811032 90184E            MOV     DPTR,#sum
811035 E0                MOVX    A,@DPTR
811036 FF                MOV     R7,A
811037 9023B6            MOV     DPTR,#Channel+01H
81103A E0                MOVX    A,@DPTR
81103B FE                MOV     R6,A
81103C EF                MOV     A,R7
81103D 6E                XRL     A,R6
81103E 90184E            MOV     DPTR,#sum
811041 F0                MOVX    @DPTR,A
 1547: 		NewTask->Sn = Channel.Sn;
811042 90184B            MOV     DPTR,#NewTask
811045 E0                MOVX    A,@DPTR
811046 FC                MOV     R4,A
811047 A3                INC     DPTR
811048 E0                MOVX    A,@DPTR
811049 F582              MOV     DPL,A
81104B 8C83              MOV     DPH,R4
81104D A3                INC     DPTR
81104E A3                INC     DPTR
81104F A3                INC     DPTR
811050 EE                MOV     A,R6
811051 F0                MOVX    @DPTR,A
 1548: 	}
811052         ?C0287?SCHEDULER:
 1549: 	switch( NewTask->Cmd )
811052 90184B            MOV     DPTR,#NewTask
811055 E0                MOVX    A,@DPTR
811056 FE                MOV     R6,A
811057 A3                INC     DPTR
811058 E0                MOVX    A,@DPTR
811059 F582              MOV     DPL,A
81105B 8E83              MOV     DPH,R6
81105D A3                INC     DPTR
81105E A3                INC     DPTR
81105F E0                MOVX    A,@DPTR
811060 24AF              ADD     A,#0AFH
811062 601F              JZ      ?C0290?SCHEDULER
811064 14                DEC     A
811065 7003              JNZ     $ + 5H
811067 0210E7            LJMP    ?C0292?SCHEDULER
81106A 14                DEC     A
81106B 6040              JZ      ?C0291?SCHEDULER
81106D 2403              ADD     A,#03H
81106F 6003              JZ      $ + 5H
811071 02110F            LJMP    ?C0293?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 698


 1550: 	{
 1551: 		case CHANNEL_EXEC:	//命令ID	
811074         ?C0289?SCHEDULER:
 1552: 			ZhkSerial1PutCh( 0x70 );
811074 7F70              MOV     R7,#070H
811076 A51280FE05        ECALL   _ZhkSerial1PutCh
 1553: //			Trace(" 70" );
 1554: 			sum ^= 0x70;
81107B 90184E            MOV     DPTR,#sum
81107E E0                MOVX    A,@DPTR
81107F 6470              XRL     A,#070H
 1555: 			ZhkSerial1PutCh( ChannelTemp );//货道编号		
 1556: 			sum ^= ChannelTemp;
 1557: //			Trace(" %02bx", ChannelTemp );		
 1558: 		break;	
811081 8071              SJMP    ?C0351?SCHEDULER
 1559: 		case CHANNEL_QUERY:	//命令ID	
811083         ?C0290?SCHEDULER:
 1560: 			ZhkSerial1PutCh( 0x71 );
811083 7F71              MOV     R7,#071H
811085 A51280FE05        ECALL   _ZhkSerial1PutCh
 1561: //			Trace(" 71" );
 1562: 			sum ^= 0x71;
81108A 90184E            MOV     DPTR,#sum
81108D E0                MOVX    A,@DPTR
81108E 6471              XRL     A,#071H
811090 A51280FE02        ECALL   ?L?COM001A
 1563: 			ZhkSerial1PutCh( 0x00 );//货道编号
 1564: 			sum ^= 0x00;		
811095 90184E            MOV     DPTR,#sum
811098 E0                MOVX    A,@DPTR
811099 F0                MOVX    @DPTR,A
 1565: 			NewTask->Param[ 0 ] = 0;
81109A 90184B            MOV     DPTR,#NewTask
81109D E0                MOVX    A,@DPTR
81109E FE                MOV     R6,A
81109F A3                INC     DPTR
8110A0 E0                MOVX    A,@DPTR
8110A1 2406              ADD     A,#06H
8110A3 F582              MOV     DPL,A
8110A5 E4                CLR     A
8110A6 3E                ADDC    A,R6
8110A7 F583              MOV     DPH,A
8110A9 E4                CLR     A
8110AA F0                MOVX    @DPTR,A
 1566: //			Trace(" 00");			
 1567: 		break;	
8110AB 8065              SJMP    ?C0288?SCHEDULER
 1568: 		case CHANNEL_CLEAR:	//命令ID	
8110AD         ?C0291?SCHEDULER:
 1569: 			ZhkSerial1PutCh( 0x72 );
8110AD 7F72              MOV     R7,#072H
8110AF A51280FE05        ECALL   _ZhkSerial1PutCh
 1570: //			Trace(" 72" );
 1571: 			sum ^= 0x72;
8110B4 90184E            MOV     DPTR,#sum
8110B7 E0                MOVX    A,@DPTR
8110B8 6472              XRL     A,#072H
8110BA F0                MOVX    @DPTR,A
 1572: 			ZhkSerial1PutCh( 0x00 );//货道编号
8110BB E4                CLR     A
8110BC FF                MOV     R7,A
8110BD A51280FE05        ECALL   _ZhkSerial1PutCh
 1573: 			sum ^= 0x00;
8110C2 90184E            MOV     DPTR,#sum
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 699


8110C5 E0                MOVX    A,@DPTR
8110C6 F0                MOVX    @DPTR,A
 1574: 			NewTask->Param[ 0 ] = 0;
8110C7 90184B            MOV     DPTR,#NewTask
8110CA E0                MOVX    A,@DPTR
8110CB FE                MOV     R6,A
8110CC A3                INC     DPTR
8110CD E0                MOVX    A,@DPTR
8110CE FF                MOV     R7,A
8110CF 2406              ADD     A,#06H
8110D1 F582              MOV     DPL,A
8110D3 E4                CLR     A
8110D4 3E                ADDC    A,R6
8110D5 F583              MOV     DPH,A
8110D7 E4                CLR     A
8110D8 F0                MOVX    @DPTR,A
 1575: //			Trace(" 00");			
 1576: 			Channel.Sn = 0;
8110D9 9023B6            MOV     DPTR,#Channel+01H
8110DC F0                MOVX    @DPTR,A
 1577: 			NewTask->Sn = 0;
8110DD 8F82              MOV     DPL,R7
8110DF 8E83              MOV     DPH,R6
8110E1 A3                INC     DPTR
8110E2 A3                INC     DPTR
8110E3 A3                INC     DPTR
8110E4 F0                MOVX    @DPTR,A
 1578: 		break;	
8110E5 802B              SJMP    ?C0288?SCHEDULER
 1579: 		case CHANNEL_TEST:	//命令ID	
8110E7         ?C0292?SCHEDULER:
 1580: 			ZhkSerial1PutCh( 0x73 );
8110E7 7F73              MOV     R7,#073H
8110E9 A51280FE05        ECALL   _ZhkSerial1PutCh
 1581: //			Trace(" 73" );
 1582: 			sum ^= 0x73;
8110EE 90184E            MOV     DPTR,#sum
8110F1 E0                MOVX    A,@DPTR
8110F2 6473              XRL     A,#073H
8110F4         
8110F4 F0                MOVX    @DPTR,A
 1583: 			ZhkSerial1PutCh( ChannelTemp );//货道编号
8110F5 90184D            MOV     DPTR,#ChannelTemp
8110F8 E0                MOVX    A,@DPTR
8110F9 FF                MOV     R7,A
8110FA A51280FE05        ECALL   _ZhkSerial1PutCh
 1584: //			Trace(" %02bx", ChannelTemp );
 1585: 			sum ^= ChannelTemp;		
8110FF 90184E            MOV     DPTR,#sum
811102 E0                MOVX    A,@DPTR
811103 FF                MOV     R7,A
811104 90184D            MOV     DPTR,#ChannelTemp
811107 E0                MOVX    A,@DPTR
811108 FE                MOV     R6,A
811109 EF                MOV     A,R7
81110A 6E                XRL     A,R6
81110B A3                INC     DPTR
81110C F0                MOVX    @DPTR,A
 1586: 		break;			
81110D 8003              SJMP    ?C0288?SCHEDULER
 1587: 	default:
81110F         ?C0293?SCHEDULER:
 1588: 		return  0;
81110F C3                CLR     C
811110 801C              SJMP    ?C0294?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 700


 1589: 	}
811112         ?C0288?SCHEDULER:
 1590: 	ZhkSerial1PutCh( 0x00 );		
811112 E4                CLR     A
811113 FF                MOV     R7,A
811114 A51280FE05        ECALL   _ZhkSerial1PutCh
 1591: //	Trace(" 00" );
 1592: 	sum ^= 0x00;
811119 90184E            MOV     DPTR,#sum
81111C E0                MOVX    A,@DPTR
81111D A51280FE02        ECALL   ?L?COM001A
 1593: 	ZhkSerial1PutCh( 0x00 );
 1594: //	Trace(" 00" );
 1595: 	sum ^= 0x00;
811122 90184E            MOV     DPTR,#sum
811125 E0                MOVX    A,@DPTR
811126 F0                MOVX    @DPTR,A
811127 FF                MOV     R7,A
 1596: 	ZhkSerial1PutCh( sum );
811128 A51280FE05        ECALL   _ZhkSerial1PutCh
 1597: //	Trace(" %02bx", sum );
 1598: 	return 1;	
81112D D3                SETB    C
 1599: }
81112E         ?C0294?SCHEDULER:
81112E A522              ERET    
----- FUNCTION _ZhkChannelTxMsg (END) -------


----- FUNCTION ?L?COM003B (BEGIN) -----
811130 901794            MOV     DPTR,#?_NumberToString?BYTE+07H
811133 04                INC     A
811134 F0                MOVX    @DPTR,A
----- FUNCTION _NumberToString (BEGIN) -----
 FILE: 'common.c'
   30: void NumberToString( unsigned long dat , uchar * str , uchar len  )
   31: {
811135 90178D            MOV     DPTR,#dat
811138 A512800792        ECALL   ?C?LSTXDATA
81113D 901791            MOV     DPTR,#str
811140 A5128007B6        ECALL   ?C?PSTXDATA
   32: 	unsigned long code divisor[]=
   33: 	{
   34: 		1,
   35: 		10,
   36: 		100,
   37: 		1000,
   38: 		10000,
   39: 		100000,
   40: 		1000000,
   41: 		10000000,
   42: 		100000000
   43: 	};
   44: 	uchar data i,ch;
   45: 	unsigned long data temp1;
   46: 	unsigned  int data temp2;
   47: 	uchar data temp3;
   48: 	unsigned long data divisor1;
   49: 	unsigned  int data divisor2;
   50: 	
   51: 	if ( len > 8 ) len = 8;
811145 901794            MOV     DPTR,#len
811148 E0                MOVX    A,@DPTR
811149 D3                SETB    C
81114A 9408              SUBB    A,#08H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 701


81114C 4003              JC      ?C0011?COMMON
81114E 7408              MOV     A,#08H
811150 F0                MOVX    @DPTR,A
811151         ?C0011?COMMON:
   52: 	temp1    = dat;
811151 90178D            MOV     DPTR,#dat
811154 A512800720        ECALL   ?C?LLDXDATA
811159 8F2D              MOV     temp1+03H,R7
81115B 8E2C              MOV     temp1+02H,R6
81115D 8D2B              MOV     temp1+01H,R5
81115F 8C2A              MOV     temp1,R4
   53: 	temp1   %= divisor[ len ];
811161 901794            MOV     DPTR,#len
811164 E0                MOVX    A,@DPTR
811165 25E0              ADD     A,ACC
811167 25E0              ADD     A,ACC
811169 2466              ADD     A,#LOW divisor
81116B F582              MOV     DPL,A
81116D E4                CLR     A
81116E 3418              ADDC    A,#HIGH divisor
811170 F583              MOV     DPH,A
811172 A51280074B        ECALL   ?C?LLDCODE0
811177 A512800679        ECALL   ?C?ULDIV
81117C AC00              MOV     R4,AR0
81117E AD01              MOV     R5,AR1
811180 AE02              MOV     R6,AR2
811182 AF03              MOV     R7,AR3
811184 8F2D              MOV     temp1+03H,R7
811186 8E2C              MOV     temp1+02H,R6
811188 8D2B              MOV     temp1+01H,R5
81118A 8C2A              MOV     temp1,R4
   54: 	for( i = 8 ; i > 4 ; i -- )
81118C 752808            MOV     i,#08H
81118F         ?C0012?COMMON:
   55: 	{
   56: 		divisor1 = divisor[ i - 1 ];
81118F E528              MOV     A,i
811191 25E0              ADD     A,ACC
811193 25E0              ADD     A,ACC
811195 2462              ADD     A,#LOW divisor-04H
811197 F582              MOV     DPL,A
811199 E4                CLR     A
81119A 3418              ADDC    A,#HIGH divisor-04H
81119C F583              MOV     DPH,A
81119E A51280072D        ECALL   ?C?LLDCODE
8111A3 8F34              MOV     divisor1+03H,R7
8111A5 8E33              MOV     divisor1+02H,R6
8111A7 8D32              MOV     divisor1+01H,R5
8111A9 8C31              MOV     divisor1,R4
   57: 		for( ch = 0 ; ch < 9 ; ch ++ )
8111AB E4                CLR     A
8111AC F529              MOV     ch,A
8111AE         ?C0015?COMMON:
   58: 		{
   59: 			if ( temp1 < divisor1 ) break;
8111AE AF34              MOV     R7,divisor1+03H
8111B0 AE33              MOV     R6,divisor1+02H
8111B2 AD32              MOV     R5,divisor1+01H
8111B4 AC31              MOV     R4,divisor1
8111B6 AB2D              MOV     R3,temp1+03H
8111B8 AA2C              MOV     R2,temp1+02H
8111BA A92B              MOV     R1,temp1+01H
8111BC A82A              MOV     R0,temp1
8111BE C3                CLR     C
8111BF A51280070E        ECALL   ?C?ULCMP
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 702


8111C4 4023              JC      ?C0016?COMMON
8111C6         ?C0018?COMMON:
   60: 			temp1 -= divisor1;
8111C6 C3                CLR     C
8111C7 E52D              MOV     A,temp1+03H
8111C9 9534              SUBB    A,divisor1+03H
8111CB FF                MOV     R7,A
8111CC E52C              MOV     A,temp1+02H
8111CE 9533              SUBB    A,divisor1+02H
8111D0 FE                MOV     R6,A
8111D1 E52B              MOV     A,temp1+01H
8111D3 9532              SUBB    A,divisor1+01H
8111D5 FD                MOV     R5,A
8111D6 E52A              MOV     A,temp1
8111D8 9531              SUBB    A,divisor1
8111DA 8F2D              MOV     temp1+03H,R7
8111DC 8E2C              MOV     temp1+02H,R6
8111DE 8D2B              MOV     temp1+01H,R5
8111E0 F52A              MOV     temp1,A
   61: 		}
8111E2 0529              INC     ch
8111E4 E529              MOV     A,ch
8111E6 B409C5            CJNE    A,#09H,?C0015?COMMON
8111E9         ?C0016?COMMON:
   62: 		if ( i <= len )
8111E9 901794            MOV     DPTR,#len
8111EC E0                MOVX    A,@DPTR
8111ED FF                MOV     R7,A
8111EE E528              MOV     A,i
8111F0 D3                SETB    C
8111F1 9F                SUBB    A,R7
8111F2 501D              JNC     ?C0014?COMMON
   63: 			str[ len - i ] = ch;
8111F4 E528              MOV     A,i
8111F6 FD                MOV     R5,A
8111F7 C3                CLR     C
8111F8 EF                MOV     A,R7
8111F9 9D                SUBB    A,R5
8111FA FF                MOV     R7,A
8111FB E4                CLR     A
8111FC 9400              SUBB    A,#00H
8111FE FE                MOV     R6,A
8111FF 901791            MOV     DPTR,#str
811202 A5128007AC        ECALL   ?C?PLDXDATA
811207 E9                MOV     A,R1
811208 2F                ADD     A,R7
811209 F9                MOV     R1,A
81120A EA                MOV     A,R2
81120B 3E                ADDC    A,R6
81120C FA                MOV     R2,A
81120D E529              MOV     A,ch
81120F A558              EMOV    @PR0,A
   64: 	}
811211         ?C0014?COMMON:
811211 1528              DEC     i
811213 E528              MOV     A,i
811215 6404              XRL     A,#04H
811217 6003              JZ      $ + 5H
811219 02118F            LJMP    ?C0012?COMMON
81121C         ?C0013?COMMON:
   65: 	temp2    = temp1;
81121C 852C2E            MOV     temp2,temp1+02H
81121F 852D2F            MOV     temp2+01H,temp1+03H
   66: 	for( i = 4 ; i > 2 ; i -- )
811222 752804            MOV     i,#04H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 703


811225         ?C0020?COMMON:
   67: 	{
   68: 		divisor2 = divisor[ i - 1 ];
811225 E528              MOV     A,i
811227 25E0              ADD     A,ACC
811229 25E0              ADD     A,ACC
81122B 2462              ADD     A,#LOW divisor-04H
81122D F582              MOV     DPL,A
81122F E4                CLR     A
811230 3418              ADDC    A,#HIGH divisor-04H
811232 F583              MOV     DPH,A
811234 A51280072D        ECALL   ?C?LLDCODE
811239 8E35              MOV     divisor2,R6
81123B 8F36              MOV     divisor2+01H,R7
   69: 		for( ch = 0 ; ch < 9 ; ch ++ )
81123D E4                CLR     A
81123E F529              MOV     ch,A
811240         ?C0023?COMMON:
   70: 		{
   71: 			if ( temp2 < divisor2 ) break;
811240 C3                CLR     C
811241 E52F              MOV     A,temp2+01H
811243 9536              SUBB    A,divisor2+01H
811245 E52E              MOV     A,temp2
811247 9535              SUBB    A,divisor2
811249 4014              JC      ?C0024?COMMON
81124B         ?C0026?COMMON:
   72: 			temp2 -= divisor2;
81124B C3                CLR     C
81124C E52F              MOV     A,temp2+01H
81124E 9536              SUBB    A,divisor2+01H
811250 F52F              MOV     temp2+01H,A
811252 E52E              MOV     A,temp2
811254 9535              SUBB    A,divisor2
811256 F52E              MOV     temp2,A
   73: 		}
811258 0529              INC     ch
81125A E529              MOV     A,ch
81125C B409E1            CJNE    A,#09H,?C0023?COMMON
81125F         ?C0024?COMMON:
   74: 		if ( i <= len )
81125F 901794            MOV     DPTR,#len
811262 E0                MOVX    A,@DPTR
811263 FF                MOV     R7,A
811264 E528              MOV     A,i
811266 D3                SETB    C
811267 9F                SUBB    A,R7
811268 501D              JNC     ?C0022?COMMON
   75: 			str[ len - i ] = ch;
81126A E528              MOV     A,i
81126C FD                MOV     R5,A
81126D C3                CLR     C
81126E EF                MOV     A,R7
81126F 9D                SUBB    A,R5
811270 FF                MOV     R7,A
811271 E4                CLR     A
811272 9400              SUBB    A,#00H
811274 FE                MOV     R6,A
811275 901791            MOV     DPTR,#str
811278 A5128007AC        ECALL   ?C?PLDXDATA
81127D E9                MOV     A,R1
81127E 2F                ADD     A,R7
81127F F9                MOV     R1,A
811280 EA                MOV     A,R2
811281 3E                ADDC    A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 704


811282 FA                MOV     R2,A
811283 E529              MOV     A,ch
811285 A558              EMOV    @PR0,A
   76: 	}
811287         ?C0022?COMMON:
811287 1528              DEC     i
811289 E528              MOV     A,i
81128B B40297            CJNE    A,#02H,?C0020?COMMON
81128E         ?C0021?COMMON:
   77: 	temp3 = temp2;
81128E 852F30            MOV     temp3,temp2+01H
   78: 	ch    = temp3 / 10;
811291 E530              MOV     A,temp3
811293 75F00A            MOV     B,#0AH
811296 84                DIV     AB
811297 F529              MOV     ch,A
   79: 	if ( 2 <= len )
811299 901794            MOV     DPTR,#len
81129C E0                MOVX    A,@DPTR
81129D FF                MOV     R7,A
81129E 7402              MOV     A,#02H
8112A0 D3                SETB    C
8112A1 9F                SUBB    A,R7
8112A2 501A              JNC     ?C0028?COMMON
   80: 		str[ len - 2 ] = ch;
8112A4 EF                MOV     A,R7
8112A5 24FE              ADD     A,#0FEH
8112A7 FF                MOV     R7,A
8112A8 E4                CLR     A
8112A9 34FF              ADDC    A,#0FFH
8112AB FE                MOV     R6,A
8112AC 901791            MOV     DPTR,#str
8112AF A5128007AC        ECALL   ?C?PLDXDATA
8112B4 E9                MOV     A,R1
8112B5 2F                ADD     A,R7
8112B6 F9                MOV     R1,A
8112B7 EA                MOV     A,R2
8112B8 3E                ADDC    A,R6
8112B9 FA                MOV     R2,A
8112BA E529              MOV     A,ch
8112BC A558              EMOV    @PR0,A
8112BE         ?C0028?COMMON:
   81: 	ch    = temp3 % 10;
8112BE E530              MOV     A,temp3
8112C0 75F00A            MOV     B,#0AH
8112C3 84                DIV     AB
8112C4 85F029            MOV     ch,B
   82: 	if ( 1 <= len )
8112C7 901794            MOV     DPTR,#len
8112CA E0                MOVX    A,@DPTR
8112CB FF                MOV     R7,A
8112CC 7401              MOV     A,#01H
8112CE D3                SETB    C
8112CF 9F                SUBB    A,R7
8112D0 501A              JNC     ?C0029?COMMON
   83: 		str[ len - 1 ] = ch;
8112D2 EF                MOV     A,R7
8112D3 24FF              ADD     A,#0FFH
8112D5 FF                MOV     R7,A
8112D6 E4                CLR     A
8112D7 34FF              ADDC    A,#0FFH
8112D9 FE                MOV     R6,A
8112DA 901791            MOV     DPTR,#str
8112DD A5128007AC        ECALL   ?C?PLDXDATA
8112E2 E9                MOV     A,R1
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 705


8112E3 2F                ADD     A,R7
8112E4 F9                MOV     R1,A
8112E5 EA                MOV     A,R2
8112E6 3E                ADDC    A,R6
8112E7 FA                MOV     R2,A
8112E8 E529              MOV     A,ch
8112EA A558              EMOV    @PR0,A
8112EC         ?C0029?COMMON:
   84: 	for( i = 0 ; i < len - 1 ; i ++ )
8112EC E4                CLR     A
8112ED F528              MOV     i,A
8112EF         ?C0030?COMMON:
8112EF 901794            MOV     DPTR,#len
8112F2 E0                MOVX    A,@DPTR
8112F3 14                DEC     A
8112F4 FF                MOV     R7,A
8112F5 E528              MOV     A,i
8112F7 C3                CLR     C
8112F8 9F                SUBB    A,R7
8112F9 501B              JNC     ?C0034?COMMON
   85: 	{
   86: 		if ( str[ i ] != 0 ) break;
8112FB 901791            MOV     DPTR,#str
8112FE A5128007AC        ECALL   ?C?PLDXDATA
811303 E9                MOV     A,R1
811304 2528              ADD     A,i
811306 F9                MOV     R1,A
811307 E4                CLR     A
811308 3A                ADDC    A,R2
811309 FA                MOV     R2,A
81130A A548              EMOV    A,@PR0
81130C 7008              JNZ     ?C0034?COMMON
81130E         ?C0033?COMMON:
   87: 		str[ i ] = 0x20;
81130E 7420              MOV     A,#020H
811310 A558              EMOV    @PR0,A
   88: 	}
811312 0528              INC     i
811314 80D9              SJMP    ?C0030?COMMON
   89: 	for( ; i < len ; i ++ )
811316         ?C0034?COMMON:
811316 901794            MOV     DPTR,#len
811319 E0                MOVX    A,@DPTR
81131A FF                MOV     R7,A
81131B E528              MOV     A,i
81131D C3                CLR     C
81131E 9F                SUBB    A,R7
81131F 5019              JNC     ?C0037?COMMON
   90: 	{
   91: 		str[ i ] += '0';
811321 901791            MOV     DPTR,#str
811324 A5128007AC        ECALL   ?C?PLDXDATA
811329 E9                MOV     A,R1
81132A 2528              ADD     A,i
81132C F9                MOV     R1,A
81132D E4                CLR     A
81132E 3A                ADDC    A,R2
81132F FA                MOV     R2,A
811330 A548              EMOV    A,@PR0
811332 2430              ADD     A,#030H
811334 A558              EMOV    @PR0,A
   92: 	}
811336 0528              INC     i
811338 80DC              SJMP    ?C0034?COMMON
   92: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 706


81133A         ?C0037?COMMON:
81133A A522              ERET    
----- FUNCTION _NumberToString (END) -------


----- FUNCTION Zhktmr0 (BEGIN) -----
 FILE: 'timer.c'
   43: void Zhktmr0( void ) interrupt 1 using 1 
81133C C0E0              PUSH    ACC
81133E C0F0              PUSH    B
811340 C083              PUSH    DPH
811342 C082              PUSH    DPL
811344 C0D0              PUSH    PSW
811346 75D008            MOV     PSW,#08H
   44: {
   45: 	ZhkSaveChipSelect();
811349 C090              PUSH    P1
   46: 	ZhkHardSramSelect();
81134B 759008            MOV     P1,#08H
   47: 	TL0   = ( uint )( 0x10000 + 16 - 10.0 * 1000 * OSCRATE / 1000000 / MACHINECYCLE ) % 256;
81134E 758A10            MOV     TL0,#010H
   48: 	TH0   = ( uint )( 0x10000 + 16 - 10.0 * 1000 * OSCRATE / 1000000 / MACHINECYCLE ) / 256;
811351 758CB8            MOV     TH0,#0B8H
   49: 	
   50: 	Tick ++ ;
811354 0513              INC     Tick
   51: 	if ( Tick % 5 == 0 ) 
811356 E513              MOV     A,Tick
811358 75F005            MOV     B,#05H
81135B 84                DIV     AB
81135C E5F0              MOV     A,B
81135E 7005              JNZ     ?C0002?TIMER
   52: 		ZhkKeyScanIsr();
811360 A512811750        ECALL   ZhkKeyScanIsr
811365         ?C0002?TIMER:
   53: 	// 时钟周期(10ms)延时区
   54: 	if ( LzjMSecTimer > 10 ) 
811365 E516              MOV     A,LzjMSecTimer
811367 D3                SETB    C
811368 940A              SUBB    A,#0AH
81136A 4008              JC      ?C0003?TIMER
   55: 		LzjMSecTimer -= 10;
81136C 74F6              MOV     A,#0F6H
81136E 2516              ADD     A,LzjMSecTimer
811370 F516              MOV     LzjMSecTimer,A
811372 8003              SJMP    ?C0004?TIMER
811374         ?C0003?TIMER:
   56: 	else
   57: 		LzjMSecTimer = 0;
811374 751600            MOV     LzjMSecTimer,#00H
811377         ?C0004?TIMER:
   58: //	if ( SerialAckTimer ) SerialAckTimer --;
   59: 	ZhkSchedulerClock ++;
811377 051A              INC     ZhkSchedulerClock
   60: 	if ( ZhkDownMsgAckTimer ) 
811379 E512              MOV     A,ZhkDownMsgAckTimer+01H
81137B 4511              ORL     A,ZhkDownMsgAckTimer
81137D 6008              JZ      ?C0005?TIMER
   61: 		ZhkDownMsgAckTimer --;
81137F E512              MOV     A,ZhkDownMsgAckTimer+01H
811381 1512              DEC     ZhkDownMsgAckTimer+01H
811383 7002              JNZ     ?C0023?TIMER
811385 1511              DEC     ZhkDownMsgAckTimer
811387         ?C0023?TIMER:
811387         ?C0005?TIMER:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 707


   62: 	if ( ZhkBuzzerTimer > 0 ) 
811387 D3                SETB    C
811388 E518              MOV     A,ZhkBuzzerTimer
81138A 6480              XRL     A,#080H
81138C 9480              SUBB    A,#080H
81138E 4004              JC      ?C0006?TIMER
   63: 		ZhkBuzzerTimer --;
811390 1518              DEC     ZhkBuzzerTimer
811392 8005              SJMP    ?C0007?TIMER
811394         ?C0006?TIMER:
   64: 	else
   65: 	{
   66: 		ZhkHardBuzzerOff();
811394 A51280979C        ECALL   ZhkHardBuzzerOff
   67: 	}
811399         ?C0007?TIMER:
   68: 	
   69: 	if ( Tick >= 100 )
811399 E513              MOV     A,Tick
81139B C3                CLR     C
81139C 9464              SUBB    A,#064H
81139E 4078              JC      ?C0008?TIMER
   70: 	{
   71: 		Tick = 0;
8113A0 751300            MOV     Tick,#00H
   72: 		Second ++;
8113A3 051F              INC     Second
   73: 		
   74: 		if ( SgpSecTimer ) 
8113A5 E51B              MOV     A,SgpSecTimer
8113A7 6002              JZ      ?C0009?TIMER
   75: 			SgpSecTimer --;
8113A9 151B              DEC     SgpSecTimer
8113AB         ?C0009?TIMER:
   76: 		if( SgwSecTimer )
8113AB E51E              MOV     A,SgwSecTimer
8113AD 6002              JZ      ?C0010?TIMER
   77: 			SgwSecTimer--;
8113AF 151E              DEC     SgwSecTimer
8113B1         ?C0010?TIMER:
   78: 		if ( YgpSecTimer ) 
8113B1 E51C              MOV     A,YgpSecTimer
8113B3 6002              JZ      ?C0011?TIMER
   79: 			YgpSecTimer --;
8113B5 151C              DEC     YgpSecTimer
8113B7         ?C0011?TIMER:
   80: 		if ( LzjSecTimer ) 
8113B7 E51D              MOV     A,LzjSecTimer
8113B9 6002              JZ      ?C0012?TIMER
   81: 			LzjSecTimer --;
8113BB 151D              DEC     LzjSecTimer
8113BD         ?C0012?TIMER:
   82: 		if(( QueryCashTimer > 0 ) && ( QueryCashTimer < 240 ) )
8113BD E515              MOV     A,QueryCashTimer
8113BF D3                SETB    C
8113C0 9400              SUBB    A,#00H
8113C2 4008              JC      ?C0013?TIMER
8113C4 E515              MOV     A,QueryCashTimer
8113C6 94F0              SUBB    A,#0F0H
8113C8 5002              JNC     ?C0013?TIMER
   83: 			QueryCashTimer--;
8113CA 1515              DEC     QueryCashTimer
8113CC         ?C0013?TIMER:
   84: 		if ( ZhkMobileSecTimer ) 
8113CC E517              MOV     A,ZhkMobileSecTimer
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 708


8113CE 6002              JZ      ?C0014?TIMER
   85: 				ZhkMobileSecTimer --;
8113D0 1517              DEC     ZhkMobileSecTimer
8113D2         ?C0014?TIMER:
   86: //		if ( g_byCommTimeOutSeconds ) g_byCommTimeOutSeconds --;
   87: 		
   88: 		if( SendSMSTimer )
8113D2 E510              MOV     A,SendSMSTimer
8113D4 6002              JZ      ?C0015?TIMER
   89: 			SendSMSTimer --;		
8113D6 1510              DEC     SendSMSTimer
8113D8         ?C0015?TIMER:
   90: 		if( ReceiveSMSTimer )
8113D8 E519              MOV     A,ReceiveSMSTimer
8113DA 6002              JZ      ?C0016?TIMER
   91: 			ReceiveSMSTimer --;
8113DC 1519              DEC     ReceiveSMSTimer
8113DE         ?C0016?TIMER:
   92: 		if( QueryTimer )
8113DE E514              MOV     A,QueryTimer
8113E0 6002              JZ      ?C0017?TIMER
   93: 			QueryTimer--;
8113E2 1514              DEC     QueryTimer
8113E4         ?C0017?TIMER:
   94: 		// 秒级延时区域
   95: 		if ( Second >= 60 )
8113E4 E51F              MOV     A,Second
8113E6 C3                CLR     C
8113E7 943C              SUBB    A,#03CH
8113E9 4015              JC      ?C0018?TIMER
   96: 		{
   97: 			Second = 0;
8113EB 751F00            MOV     Second,#00H
   98: 			if( AlarmSpacing < 255 )
8113EE 902DEA            MOV     DPTR,#AlarmSpacing
8113F1 E0                MOVX    A,@DPTR
8113F2 94FF              SUBB    A,#0FFH
8113F4 5005              JNC     ?C0019?TIMER
   99: 				AlarmSpacing ++ ;
8113F6 E0                MOVX    A,@DPTR
8113F7 04                INC     A
8113F8 F0                MOVX    @DPTR,A
8113F9 8005              SJMP    ?C0018?TIMER
8113FB         ?C0019?TIMER:
  100: 			else
  101: 				AlarmSpacing = 0;				
8113FB 902DEA            MOV     DPTR,#AlarmSpacing
8113FE E4                CLR     A
8113FF F0                MOVX    @DPTR,A
  102: 			// 分钟级延时区域
  103: 		//	if ( g_byCommHeartBeatMins ) g_byCommHeartBeatMins --;		
  104: 		}		
811400         ?C0018?TIMER:
  105: 		if( GPRSModuleResetTimer > 0 )
811400 D3                SETB    C
811401 902DE9            MOV     DPTR,#GPRSModuleResetTimer+01H
811404 E0                MOVX    A,@DPTR
811405 9400              SUBB    A,#00H
811407 902DE8            MOV     DPTR,#GPRSModuleResetTimer
81140A E0                MOVX    A,@DPTR
81140B 9400              SUBB    A,#00H
81140D 4009              JC      ?C0008?TIMER
  106: 			GPRSModuleResetTimer--;
81140F 74FF              MOV     A,#0FFH
811411 F5F0              MOV     B,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 709


811413 A512800600        ECALL   ?C?IILDX
  107: 	}
811418         ?C0008?TIMER:
  108: //	#ifndef _DEBUG_MOBILE_TEST
  109: 	ZhkIOInputIsr();
811418 A51280FF89        ECALL   ZhkIOInputIsr
  110: 
  111: #ifdef _COIN_INPUT_PARALLEL
  112: 	ZyzChkCoinChnSta();
81141D A512812859        ECALL   ZyzChkCoinChnSta
  113: #else
  114: 	ZhkChkCoinInIsr();
  115: #endif
  116: 
  117: //	if ( Tick % 5 == 0 ) ZhkKeyScanIsr();
  118: //	#endif	// _DEBUG_MOBILE_TEST	
  119: 	ZhkLoadChipSelect();
811422 D090              POP     P1
  119: }
811424 D0D0              POP     PSW
811426 D082              POP     DPL
811428 D083              POP     DPH
81142A D0F0              POP     B
81142C D0E0              POP     ACC
81142E 32                RETI    
----- FUNCTION Zhktmr0 (END) -------


----- FUNCTION SchedulerInit (BEGIN) -----
 FILE: 'scheduler.c'
  111: uchar SchedulerInit( void )
  112: {
  113: 	uchar data i;
  114: 
  115: 	Hopper1.Id            = ID_HOPPER1;
81142F E4                CLR     A
811430 902375            MOV     DPTR,#Hopper1
811433 F0                MOVX    @DPTR,A
  116: 	Hopper1.Sn            = 0;
811434 A3                INC     DPTR
811435 F0                MOVX    @DPTR,A
  117: 	Hopper1.CommState     = 0;
811436 A3                INC     DPTR
811437 F0                MOVX    @DPTR,A
  118: 	Hopper1.State         = 0;
811438 A3                INC     DPTR
811439 F0                MOVX    @DPTR,A
  119: 	memset( Hopper1.ExtState, 0, sizeof( Hopper1.ExtState ) );
81143A FE                MOV     R6,A
81143B 7F11              MOV     R7,#011H
81143D FD                MOV     R5,A
81143E 7B00              MOV     R3,#?C?XDATASEG
811440 7A23              MOV     R2,#HIGH Hopper1+04H
811442 7979              MOV     R1,#LOW Hopper1+04H
811444 A5128008A6        ECALL   ?C?MEMSET
  120: //	Hopper1.ExtState[ 0 ] = 0;
  121: //	Hopper1.ExtState[ 1 ] = 0;
  122: 
  123: 	Hopper2.Id            = ID_HOPPER2;
811449 90238A            MOV     DPTR,#Hopper2
81144C 7401              MOV     A,#01H
81144E F0                MOVX    @DPTR,A
  124: 	Hopper2.Sn            = 0;
81144F E4                CLR     A
811450 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 710


811451 F0                MOVX    @DPTR,A
  125: 	Hopper2.CommState     = 0;
811452 A3                INC     DPTR
811453 F0                MOVX    @DPTR,A
  126: 	Hopper2.State         = 0;
811454 A3                INC     DPTR
811455 F0                MOVX    @DPTR,A
  127: 	memset( Hopper2.ExtState, 0, sizeof( Hopper2.ExtState ) );
811456 FE                MOV     R6,A
811457 7F11              MOV     R7,#011H
811459 FD                MOV     R5,A
81145A 7B00              MOV     R3,#?C?XDATASEG
81145C 7A23              MOV     R2,#HIGH Hopper2+04H
81145E 798E              MOV     R1,#LOW Hopper2+04H
811460 A5128008A6        ECALL   ?C?MEMSET
  128: //	Hopper2.ExtState[ 0 ] = 0;
  129: //	Hopper2.ExtState[ 1 ] = 0;
  130: 
  131: 	Hopper3.Id            = ID_HOPPER3;
811465 90239F            MOV     DPTR,#Hopper3
811468 7402              MOV     A,#02H
81146A F0                MOVX    @DPTR,A
  132: 	Hopper3.Sn            = 0;
81146B E4                CLR     A
81146C A3                INC     DPTR
81146D F0                MOVX    @DPTR,A
  133: 	Hopper3.CommState     = 0;
81146E A3                INC     DPTR
81146F F0                MOVX    @DPTR,A
  134: 	Hopper3.State         = 0;
811470 A3                INC     DPTR
811471 F0                MOVX    @DPTR,A
  135: 	memset( Hopper3.ExtState, 0, sizeof( Hopper3.ExtState ) );
811472 FE                MOV     R6,A
811473 7F11              MOV     R7,#011H
811475 FD                MOV     R5,A
811476 7B00              MOV     R3,#?C?XDATASEG
811478 7A23              MOV     R2,#HIGH Hopper3+04H
81147A 79A3              MOV     R1,#LOW Hopper3+04H
81147C A5128008A6        ECALL   ?C?MEMSET
  136: //	Hopper3.ExtState[ 0 ] = 0;
  137: //	Hopper3.ExtState[ 1 ] = 0;
  138: 			
  139: 	Lcd.Id            = ID_LCD;
811481 902360            MOV     DPTR,#Lcd
811484 7409              MOV     A,#09H
811486 F0                MOVX    @DPTR,A
  140: 	Lcd.Sn            = 1;
811487 A3                INC     DPTR
811488 7401              MOV     A,#01H
81148A F0                MOVX    @DPTR,A
  141: 	Lcd.CommState     = 0;
81148B E4                CLR     A
81148C A3                INC     DPTR
81148D F0                MOVX    @DPTR,A
  142: 	Lcd.State         = 0;
81148E A3                INC     DPTR
81148F F0                MOVX    @DPTR,A
  143: 	memset( Lcd.ExtState, 0, sizeof( Lcd.ExtState ) );
811490 FE                MOV     R6,A
811491 7F11              MOV     R7,#011H
811493 FD                MOV     R5,A
811494 7B00              MOV     R3,#?C?XDATASEG
811496 7A23              MOV     R2,#HIGH Lcd+04H
811498 7964              MOV     R1,#LOW Lcd+04H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 711


81149A A5128008A6        ECALL   ?C?MEMSET
  144: //	Lcd.ExtState[ 0 ] = 0;
  145: //	Lcd.ExtState[ 1 ] = 0;
  146: 	
  147: 	Casher.Id            = ID_CASHER;
81149F 9023CB            MOV     DPTR,#Casher
8114A2 740D              MOV     A,#0DH
8114A4 F0                MOVX    @DPTR,A
  148: 	Casher.Sn            = 1;
8114A5 A3                INC     DPTR
8114A6 7401              MOV     A,#01H
8114A8 F0                MOVX    @DPTR,A
  149: 	Casher.CommState     = 0;
8114A9 E4                CLR     A
8114AA A3                INC     DPTR
8114AB F0                MOVX    @DPTR,A
  150: 	Casher.State         = 0;
8114AC A3                INC     DPTR
8114AD F0                MOVX    @DPTR,A
  151: 	memset( Casher.ExtState, 0, sizeof( Casher.ExtState ) );
8114AE FE                MOV     R6,A
8114AF 7F11              MOV     R7,#011H
8114B1 FD                MOV     R5,A
8114B2 7B00              MOV     R3,#?C?XDATASEG
8114B4 7A23              MOV     R2,#HIGH Casher+04H
8114B6 79CF              MOV     R1,#LOW Casher+04H
8114B8 A5128008A6        ECALL   ?C?MEMSET
  152: //	Casher.ExtState[ 0 ] = 0;
  153: //	Casher.ExtState[ 1 ] = 0;
  154: 
  155: //	Coiner.Id            = ID_COINER1;
  156: //	Coiner.Sn            = 1;
  157: //	Coiner.CommState     = 0;
  158: //	Coiner.State         = 0;
  159: //	memset( Coiner.ExtState, 0, sizeof( Coiner.ExtState ) );
  160: //	Coiner.ExtState[ 0 ] = 0;
  161: //	Coiner.ExtState[ 1 ] = 0;
  162: 
  163: //	Hub.Id            = ID_HUB;
  164: //	Hub.Sn            = 1;
  165: //	Hub.CommState     = 0;
  166: //	Hub.State         = 0;
  167: //	memset( Hub.ExtState, 0, sizeof( Hub.ExtState ) );
  168: //	Hub.ExtState[ 0 ] = 0;
  169: //	Hub.ExtState[ 1 ] = 0;
  170: 
  171: 	Channel.Id            = ID_CHANNEL;
8114BD 9023B5            MOV     DPTR,#Channel
8114C0 7415              MOV     A,#015H
8114C2 F0                MOVX    @DPTR,A
  172: 	Channel.Sn            = 1;
8114C3 A3                INC     DPTR
8114C4 7401              MOV     A,#01H
8114C6 F0                MOVX    @DPTR,A
  173: 	Channel.CommState     = 0;
8114C7 E4                CLR     A
8114C8 A3                INC     DPTR
8114C9 F0                MOVX    @DPTR,A
  174: 	Channel.State         = 0;
8114CA A3                INC     DPTR
8114CB F0                MOVX    @DPTR,A
  175: 	memset( Channel.ExtState, 0, sizeof( Channel.ExtState ) );
8114CC FE                MOV     R6,A
8114CD 7F11              MOV     R7,#011H
8114CF FD                MOV     R5,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 712


8114D0 7B00              MOV     R3,#?C?XDATASEG
8114D2 7A23              MOV     R2,#HIGH Channel+04H
8114D4 79B9              MOV     R1,#LOW Channel+04H
8114D6 A5128008A6        ECALL   ?C?MEMSET
  176: //	Channel.ExtState[ 0 ] = 0;
  177: //	Channel.ExtState[ 1 ] = 0;
  178: 
  179: 	memset( ZhkAutoTaskPermission, 0, sizeof( ZhkAutoTaskPermission ) );
8114DB 7E00              MOV     R6,#00H
8114DD 7F02              MOV     R7,#02H
8114DF 7D00              MOV     R5,#00H
8114E1 7B00              MOV     R3,#?C?XDATASEG
8114E3 7A23              MOV     R2,#HIGH ZhkAutoTaskPermission
8114E5 795D              MOV     R1,#LOW ZhkAutoTaskPermission
8114E7 A5128008A6        ECALL   ?C?MEMSET
  180: 	ZhkCasherStatus = CASHER_STATUS_NULL;
8114EC E4                CLR     A
8114ED 90235F            MOV     DPTR,#ZhkCasherStatus
8114F0 F0                MOVX    @DPTR,A
  181: 	
  182: //	AlarmTimer = 90;
  183: //	AlarmFlag = 0;
  184: 	MaintFlag = 0;
8114F1 9028A4            MOV     DPTR,#MaintFlag
8114F4 F0                MOVX    @DPTR,A
  185: 
  186: 	ZhkSchedulerId = ID_NULL;
8114F5 90235C            MOV     DPTR,#ZhkSchedulerId
8114F8 74FF              MOV     A,#0FFH
8114FA F0                MOVX    @DPTR,A
  187: 	ZhkSchedulerState = TASK_NULL;	
8114FB E4                CLR     A
8114FC 9023CA            MOV     DPTR,#ZhkSchedulerState
8114FF F0                MOVX    @DPTR,A
  188: 	for( i = 0 ; i < sizeof( ZhkReadyTaskList ) / sizeof( struct COMMTASK ) ; i ++ )			
811500 F527              MOV     i,A
811502         ?C0001?SCHEDULER:
  189: 		memset( &ZhkReadyTaskList[ i ] , 0xFF , sizeof( struct COMMTASK ) );
811502 900026            MOV     DPTR,#026H
811505 7DFF              MOV     R5,#0FFH
811507 E527              MOV     A,i
811509 75F026            MOV     B,#026H
81150C A4                MUL     AB
81150D 24E0              ADD     A,#LOW ZhkReadyTaskList
81150F F9                MOV     R1,A
811510 7423              MOV     A,#HIGH ZhkReadyTaskList
811512 35F0              ADDC    A,B
811514 FA                MOV     R2,A
811515 7B00              MOV     R3,#?C?XDATASEG
811517 AE83              MOV     R6,DPH
811519 AF82              MOV     R7,DPL
81151B A5128008A6        ECALL   ?C?MEMSET
811520 0527              INC     i
811522 E527              MOV     A,i
811524 B420DB            CJNE    A,#020H,?C0001?SCHEDULER
811527         ?C0002?SCHEDULER:
  190: 
  191: #ifndef _DEBUG_NO_MOBILE
  192: 	ZhkMobileInit();
811527 A512811530        ECALL   ZhkMobileInit
  193: #endif // _DEBUG_NO_MOBILE
  194: 
  195: 	return 1;
81152C 7F01              MOV     R7,#01H
  196: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 713


81152E         ?C0004?SCHEDULER:
81152E A522              ERET    
----- FUNCTION SchedulerInit (END) -------


----- FUNCTION ZhkMobileInit (BEGIN) -----
 FILE: 'mobile.c'
  580: uchar ZhkMobileInit( void )
  581: {	
  582: 	memset( ZhkAtCmdBuffer, 0, sizeof( ZhkAtCmdBuffer ) );
  583: 	ZhkAtCmdBufWr = 0;
811530 7E04              MOV     R6,#04H
811532 7F00              MOV     R7,#00H
811534 7D00              MOV     R5,#00H
811536 7B00              MOV     R3,#?C?XDATASEG
811538 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
81153A 7981              MOV     R1,#LOW ZhkAtCmdBuffer
81153C A5128008A6        ECALL   ?C?MEMSET
  584: #ifdef _MOBILE_SMS_1	
811541 E4                CLR     A
811542 901593            MOV     DPTR,#ZhkAtCmdBufWr
811545 F0                MOVX    @DPTR,A
811546 A3                INC     DPTR
811547 F0                MOVX    @DPTR,A
  585: 	memset( NewCommingSmsSit , -1 , sizeof( NewCommingSmsSit ) );	
811548 FE                MOV     R6,A
811549 7F10              MOV     R7,#010H
81154B 7DFF              MOV     R5,#0FFH
81154D 7B00              MOV     R3,#?C?XDATASEG
81154F 7A15              MOV     R2,#HIGH NewCommingSmsSit
811551 7982              MOV     R1,#LOW NewCommingSmsSit
811553 A5128008A6        ECALL   ?C?MEMSET
  586: 	ZhkTaskClaim      	= 0;
811558 E4                CLR     A
811559 900EB4            MOV     DPTR,#ZhkTaskClaim
81155C F0                MOVX    @DPTR,A
  587: 	// 短信接收缓冲区
  588: 	memset( &ZhkSmsRxBuf, 0, sizeof( struct SHORTMSG ) * SmsRxMaxNum );
81155D 7E02              MOV     R6,#02H
81155F 7F16              MOV     R7,#016H
811561 FD                MOV     R5,A
811562 7B00              MOV     R3,#?C?XDATASEG
811564 7A0E              MOV     R2,#HIGH ZhkSmsRxBuf
811566 79B7              MOV     R1,#LOW ZhkSmsRxBuf
811568 A5128008A6        ECALL   ?C?MEMSET
  589: 	ZhkSmsRxNum = 0;
81156D E4                CLR     A
81156E 901581            MOV     DPTR,#ZhkSmsRxNum
811571 F0                MOVX    @DPTR,A
  590: 	
  591: 	// 短信发送缓冲区
  592: 	memset( &ZhkSmsTxBuf, 0, sizeof( struct SHORTMSG ) );
811572 FE                MOV     R6,A
811573 7FB2              MOV     R7,#0B2H
811575 FD                MOV     R5,A
811576 7B00              MOV     R3,#?C?XDATASEG
811578 7A10              MOV     R2,#HIGH ZhkSmsTxBuf
81157A 79CE              MOV     R1,#LOW ZhkSmsTxBuf
81157C A5128008A6        ECALL   ?C?MEMSET
  593: 	ZhkSmsTxNum = 0;
811581 E4                CLR     A
811582 901592            MOV     DPTR,#ZhkSmsTxNum
811585 F0                MOVX    @DPTR,A
  594: 	GPRSModuleDeadFlag = 0;
811586 C22C              CLR     GPRSModuleDeadFlag
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 714


  595: 	GPRSDeadTimer = 0;
811588 900EB5            MOV     DPTR,#GPRSDeadTimer
81158B F0                MOVX    @DPTR,A
  596: 	ReceiveSMSTimer = 0;			
81158C F519              MOV     ReceiveSMSTimer,A
  597: 	SMSReceiveTime = 0;
81158E 9010CD            MOV     DPTR,#SMSReceiveTime
811591 F0                MOVX    @DPTR,A
  598: 	SendSMSTimer = 0;
811592 F510              MOV     SendSMSTimer,A
  599: 	SMSSendTime = 0;
811594 900EB2            MOV     DPTR,#SMSSendTime
811597 F0                MOVX    @DPTR,A
  600: 	DownMobilePowerFlag = 0;
811598 900EAE            MOV     DPTR,#DownMobilePowerFlag
81159B F0                MOVX    @DPTR,A
  601: 	WaterKeyEnable();
81159C A51280FFC2        ECALL   WaterKeyEnable
  602: #endif
  603: 	if( ZhkMobileCurrentTask == MOBILE_NULL )
8115A1 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
8115A4 E0                MOVX    A,@DPTR
8115A5 7009              JNZ     ?C0114?MOBILE
  604: 	{	
  605: 		ZhkMobileCurrentTask = MOBILE_INIT;	 
8115A7 7409              MOV     A,#09H
8115A9 F0                MOVX    @DPTR,A
  606: 		ZhkGprsLastErr = GPRS_ERR_BLOCK;
8115AA 900EB1            MOV     DPTR,#ZhkGprsLastErr
8115AD 7401              MOV     A,#01H
8115AF F0                MOVX    @DPTR,A
  607: 	}
8115B0         ?C0114?MOBILE:
  608: 	//在上电初始化前先等30秒钟
  609: 	GPRSModuleResetTimer = 30;
8115B0 902DE8            MOV     DPTR,#GPRSModuleResetTimer
8115B3 E4                CLR     A
8115B4 F0                MOVX    @DPTR,A
8115B5 A3                INC     DPTR
8115B6 741E              MOV     A,#01EH
8115B8 F0                MOVX    @DPTR,A
  610: 	LoadPowerDeleAllSMS = 0;
8115B9 C22D              CLR     LoadPowerDeleAllSMS
  611: 	return 0;
8115BB 7F00              MOV     R7,#00H
  612: }
8115BD         ?C0115?MOBILE:
8115BD A522              ERET    
----- FUNCTION ZhkMobileInit (END) -------


----- FUNCTION _ZhkHopperTask (BEGIN) -----
 FILE: 'scheduler.c'
  430: bit ZhkHopperTask( struct COMMTASK xdata* TaskTemp )
  431: {
8115BF 901849            MOV     DPTR,#TaskTemp
8115C2 EE                MOV     A,R6
8115C3 F0                MOVX    @DPTR,A
8115C4 A3                INC     DPTR
8115C5 EF                MOV     A,R7
8115C6 F0                MOVX    @DPTR,A
  432: 	uchar data StateTemp;
  433: 	
  434: 	switch( ZhkSchedulerState )
8115C7 9023CA            MOV     DPTR,#ZhkSchedulerState
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 715


8115CA E0                MOVX    A,@DPTR
8115CB 7003              JNZ     $ + 5H
8115CD 021710            LJMP    ?C0069?SCHEDULER
8115D0 24FE              ADD     A,#0FEH
8115D2 6065              JZ      ?C0079?SCHEDULER
8115D4 14                DEC     A
8115D5 7003              JNZ     $ + 5H
8115D7 021689            LJMP    ?C0087?SCHEDULER
8115DA 14                DEC     A
8115DB 7003              JNZ     $ + 5H
8115DD 0216AB            LJMP    ?C0090?SCHEDULER
8115E0 14                DEC     A
8115E1 7003              JNZ     $ + 5H
8115E3 0216DB            LJMP    ?C0096?SCHEDULER
8115E6 2404              ADD     A,#04H
8115E8 6003              JZ      $ + 5H
8115EA 02170B            LJMP    ?C0102?SCHEDULER
  435: 	{
  436: 	case TASK_NULL:
  437: 		break;
  438: 	case TASK_REDAY:
8115ED         ?C0071?SCHEDULER:
  439: //		Trace( "ZhkHopperTaskBegin\n" );
  440: 		ZhkChannelSwitch( EQUIP_HOPPER );
8115ED 7F08              MOV     R7,#08H
8115EF A512811F43        ECALL   _ZhkChannelSwitch
  441: 		if ( ZhkHopperTxMsg( TaskTemp ) )
8115F4 A512811713        ECALL   ?L?COM0034
8115F9 9023CA            MOV     DPTR,#ZhkSchedulerState
8115FC 5005              JNC     ?C0072?SCHEDULER
  442: 			ZhkSchedulerState = TASK_WAIT;
8115FE 7402              MOV     A,#02H
811600 F0                MOVX    @DPTR,A
811601 8003              SJMP    ?C0073?SCHEDULER
811603         ?C0072?SCHEDULER:
  443: 		else
  444: 			ZhkSchedulerState = TASK_FINISH;
811603 7404              MOV     A,#04H
811605 F0                MOVX    @DPTR,A
811606         ?C0073?SCHEDULER:
  445: 	//	Trace( "\n ZhkHopperTxMsgOK" );		
  446: 		ZhkDownMsgAckTimer  = 80;
811606 751100            MOV     ZhkDownMsgAckTimer,#00H
811609 751250            MOV     ZhkDownMsgAckTimer+01H,#050H
  447: 		switch( TaskTemp->Id - ID_HOPPER1 )
81160C 901849            MOV     DPTR,#TaskTemp
81160F E0                MOVX    A,@DPTR
811610 FE                MOV     R6,A
811611 A3                INC     DPTR
811612 E0                MOVX    A,@DPTR
811613 F582              MOV     DPL,A
811615 8E83              MOV     DPH,R6
811617 A3                INC     DPTR
811618 E0                MOVX    A,@DPTR
811619 14                DEC     A
81161A 600F              JZ      ?C0076?SCHEDULER
81161C 14                DEC     A
81161D 6011              JZ      ?C0077?SCHEDULER
81161F 2402              ADD     A,#02H
811621 6003              JZ      $ + 5H
811623 02170B            LJMP    ?C0338?SCHEDULER
  448: 		{
  449: 		case 0:
811626         ?C0075?SCHEDULER:
  450: 			Hopper1.CommState = COMM_BUZY;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 716


811626 902377            MOV     DPTR,#Hopper1+02H
  451: 			break;
811629 8008              SJMP    ?C0329?SCHEDULER
  452: 		case 1:
81162B         ?C0076?SCHEDULER:
  453: 			Hopper2.CommState = COMM_BUZY;
81162B 90238C            MOV     DPTR,#Hopper2+02H
81162E         
  454: 			break;
81162E 8003              SJMP    ?C0329?SCHEDULER
  455: 		case 2:
811630         ?C0077?SCHEDULER:
  456: 			Hopper3.CommState = COMM_BUZY;
811630 9023A1            MOV     DPTR,#Hopper3+02H
811633         
811633 7401              MOV     A,#01H
811635 F0                MOVX    @DPTR,A
  457: 			break;
811636 021710            LJMP    ?C0069?SCHEDULER
  458: 		default:
  459: 			ZhkSchedulerState = TASK_NULL; 
  460: 		}
  461: 		break;
  462: 	case TASK_WAIT:
811639         ?C0079?SCHEDULER:
  463: //		Trace( "\n HOPPERTASK_WAIT" );
  464: 		StateTemp = ZhkHopperMsgProcess();
811639 A512811878        ECALL   ZhkHopperMsgProcess
81163E 8F2A              MOV     StateTemp,R7
  465: 	//	Trace( "\n StateTemp = %bu", StateTemp );
  466: 		if ( StateTemp == 1 )
811640 E52A              MOV     A,StateTemp
811642 B40102            CJNE    A,#01H,?C0080?SCHEDULER
  467: 		{
  468: 			ZhkSchedulerState = TASK_FINISH;
  469: 			break;
811645 804E              SJMP    ?C0331?SCHEDULER
  470: 		}
811647         ?C0080?SCHEDULER:
  471: 		if ( ZhkDownMsgAckTimer == 0 )
811647 E512              MOV     A,ZhkDownMsgAckTimer+01H
811649 4511              ORL     A,ZhkDownMsgAckTimer
81164B 6003              JZ      $ + 5H
81164D 021710            LJMP    ?C0069?SCHEDULER
  472: 		{
  473: //			Trace( "\n HOPPERTASK_WAIT" );	
  474: 			// 发送			
  475: 			if ( ZhkHopperTxMsg( TaskTemp ) )
811650 A512811713        ECALL   ?L?COM0034
811655 9023CA            MOV     DPTR,#ZhkSchedulerState
811658 5005              JNC     ?C0082?SCHEDULER
  476: 				ZhkSchedulerState = TASK_REWAIT;
81165A 7403              MOV     A,#03H
81165C F0                MOVX    @DPTR,A
81165D 8003              SJMP    ?C0083?SCHEDULER
81165F         ?C0082?SCHEDULER:
  477: 			else
  478: 				ZhkSchedulerState = TASK_FINISH;
81165F 7404              MOV     A,#04H
811661 F0                MOVX    @DPTR,A
811662         ?C0083?SCHEDULER:
  479: 			
  480: 			if( TaskTemp->Cmd == HOPPER_OUTPUT )
811662 901849            MOV     DPTR,#TaskTemp
811665 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 717


811666 FE                MOV     R6,A
811667 A3                INC     DPTR
811668 E0                MOVX    A,@DPTR
811669 F582              MOV     DPL,A
81166B 8E83              MOV     DPH,R6
81166D A3                INC     DPTR
81166E A3                INC     DPTR
81166F E0                MOVX    A,@DPTR
811670 FF                MOV     R7,A
811671 B45005            CJNE    A,#050H,?C0084?SCHEDULER
  481: 				ZhkDownMsgAckTimer  = 80;//DOWNMSGACKTIMEOUT;
811674 751100            MOV     ZhkDownMsgAckTimer,#00H
811677 800A              SJMP    ?C0332?SCHEDULER
811679         ?C0084?SCHEDULER:
  482: 			else if( TaskTemp->Cmd == HOPPER_QUERY )
811679 EF                MOV     A,R7
81167A 6451              XRL     A,#051H
81167C 6003              JZ      $ + 5H
81167E 021710            LJMP    ?C0069?SCHEDULER
  483: 				ZhkDownMsgAckTimer  = 80;
811681 F511              MOV     ZhkDownMsgAckTimer,A
811683         
811683 751250            MOV     ZhkDownMsgAckTimer+01H,#050H
  484: 		}		
  485: 		break;
811686 021710            LJMP    ?C0069?SCHEDULER
  486: 	case TASK_REWAIT:
811689         ?C0087?SCHEDULER:
  487: 	//	Trace( "\n HOPPER RETASK_WAIT" );
  488: 		StateTemp = ZhkHopperMsgProcess();
811689 A512811878        ECALL   ZhkHopperMsgProcess
81168E 8F2A              MOV     StateTemp,R7
  489: 		if ( StateTemp == 1 )
811690 E52A              MOV     A,StateTemp
811692 B40108            CJNE    A,#01H,?C0088?SCHEDULER
  490: 		{
  491: 			ZhkSchedulerState = TASK_FINISH;
811695         
811695 9023CA            MOV     DPTR,#ZhkSchedulerState
811698 7404              MOV     A,#04H
81169A F0                MOVX    @DPTR,A
  492: 			break;
81169B 8073              SJMP    ?C0069?SCHEDULER
  493: 		}
81169D         ?C0088?SCHEDULER:
  494: 		if ( ZhkDownMsgAckTimer == 0 )
81169D E512              MOV     A,ZhkDownMsgAckTimer+01H
81169F 4511              ORL     A,ZhkDownMsgAckTimer
8116A1 706D              JNZ     ?C0069?SCHEDULER
  495: 		{
  496: 			ZhkSchedulerState = TASK_ERROR;
8116A3 9023CA            MOV     DPTR,#ZhkSchedulerState
8116A6 7405              MOV     A,#05H
8116A8 F0                MOVX    @DPTR,A
  497: 		}
  498: 		break;
8116A9 8065              SJMP    ?C0069?SCHEDULER
  499: 	case TASK_FINISH:
8116AB         ?C0090?SCHEDULER:
  500: //		Trace( "\n HOPPER TASK_FINISH" );		
  501: 		switch( TaskTemp->Id - ID_HOPPER1 )
8116AB 901849            MOV     DPTR,#TaskTemp
8116AE E0                MOVX    A,@DPTR
8116AF FE                MOV     R6,A
8116B0 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 718


8116B1 E0                MOVX    A,@DPTR
8116B2 F582              MOV     DPL,A
8116B4 8E83              MOV     DPH,R6
8116B6 A3                INC     DPTR
8116B7 E0                MOVX    A,@DPTR
8116B8 14                DEC     A
8116B9 600C              JZ      ?C0093?SCHEDULER
8116BB 14                DEC     A
8116BC 600E              JZ      ?C0094?SCHEDULER
8116BE 2402              ADD     A,#02H
8116C0 7012              JNZ     ?C0095?SCHEDULER
  502: 		{
  503: 		case 0:
8116C2         ?C0092?SCHEDULER:
  504: 			Hopper1.CommState = COMM_COMMOK;
8116C2 902377            MOV     DPTR,#Hopper1+02H
  505: 			break;
8116C5 8008              SJMP    ?C0334?SCHEDULER
  506: 		case 1:
8116C7         ?C0093?SCHEDULER:
  507: 			Hopper2.CommState = COMM_COMMOK;
8116C7 90238C            MOV     DPTR,#Hopper2+02H
8116CA         
  508: 			break;
8116CA 8003              SJMP    ?C0334?SCHEDULER
  509: 		case 2:
8116CC         ?C0094?SCHEDULER:
  510: 			Hopper3.CommState = COMM_COMMOK;
8116CC 9023A1            MOV     DPTR,#Hopper3+02H
8116CF         
8116CF 7404              MOV     A,#04H
8116D1 F0                MOVX    @DPTR,A
  511: 			break;
8116D2 8005              SJMP    ?C0091?SCHEDULER
  512: 		default:
8116D4         ?C0095?SCHEDULER:
  513: 			ZhkSchedulerState = TASK_NULL; 
8116D4 E4                CLR     A
8116D5 9023CA            MOV     DPTR,#ZhkSchedulerState
8116D8 F0                MOVX    @DPTR,A
  514: 		}
8116D9         ?C0091?SCHEDULER:
  515: 		ZhkSchedulerState = TASK_NULL; 
8116D9         
  516: 		break;
8116D9 8030              SJMP    ?C0338?SCHEDULER
  517: 	case TASK_ERROR:
8116DB         ?C0096?SCHEDULER:
  518: 		switch( TaskTemp->Id - ID_HOPPER1 )
8116DB 901849            MOV     DPTR,#TaskTemp
8116DE E0                MOVX    A,@DPTR
8116DF FE                MOV     R6,A
8116E0 A3                INC     DPTR
8116E1 E0                MOVX    A,@DPTR
8116E2 F582              MOV     DPL,A
8116E4 8E83              MOV     DPH,R6
8116E6 A3                INC     DPTR
8116E7 E0                MOVX    A,@DPTR
8116E8 14                DEC     A
8116E9 600C              JZ      ?C0099?SCHEDULER
8116EB 14                DEC     A
8116EC 600E              JZ      ?C0100?SCHEDULER
8116EE 2402              ADD     A,#02H
8116F0 7012              JNZ     ?C0101?SCHEDULER
  519: 		{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 719


  520: 		case 0:
8116F2         ?C0098?SCHEDULER:
  521: 			Hopper1.CommState = COMM_TIMEOUT ;//| COMM_COMMOK;
8116F2 902377            MOV     DPTR,#Hopper1+02H
  522: 			break;
8116F5 8008              SJMP    ?C0337?SCHEDULER
  523: 		case 1:
8116F7         ?C0099?SCHEDULER:
  524: 			Hopper2.CommState = COMM_TIMEOUT ;//| COMM_COMMOK;
8116F7 90238C            MOV     DPTR,#Hopper2+02H
8116FA         
  525: 			break;
8116FA 8003              SJMP    ?C0337?SCHEDULER
  526: 		case 2:
8116FC         ?C0100?SCHEDULER:
  527: 			Hopper3.CommState = COMM_TIMEOUT ;//| COMM_COMMOK;
8116FC 9023A1            MOV     DPTR,#Hopper3+02H
8116FF         
8116FF 7402              MOV     A,#02H
811701 F0                MOVX    @DPTR,A
  528: 			break;
811702 8005              SJMP    ?C0097?SCHEDULER
  529: 		default:
811704         ?C0101?SCHEDULER:
  530: 			ZhkSchedulerState = TASK_NULL; 
811704 E4                CLR     A
811705 9023CA            MOV     DPTR,#ZhkSchedulerState
811708 F0                MOVX    @DPTR,A
  531: 		}
811709         ?C0097?SCHEDULER:
  532: 		ZhkSchedulerState = TASK_NULL; 
811709         
  533: 		break;
811709 8000              SJMP    ?C0338?SCHEDULER
  534: 	default:
81170B         ?C0102?SCHEDULER:
  535: 		ZhkSchedulerState = TASK_NULL;
81170B         
81170B E4                CLR     A
81170C 9023CA            MOV     DPTR,#ZhkSchedulerState
81170F F0                MOVX    @DPTR,A
  536: 	}
811710         ?C0069?SCHEDULER:
  537: 	return 1;
811710 D3                SETB    C
  538: }
811711         ?C0103?SCHEDULER:
811711 A522              ERET    
----- FUNCTION _ZhkHopperTask (END) -------


----- FUNCTION ?L?COM0034 (BEGIN) -----
811713 901849            MOV     DPTR,#TaskTemp
811716 E0                MOVX    A,@DPTR
811717 FE                MOV     R6,A
811718 A3                INC     DPTR
811719 E0                MOVX    A,@DPTR
81171A FF                MOV     R7,A
----- FUNCTION _ZhkHopperTxMsg (BEGIN) -----
 FILE: 'scheduler.c'
  608: bit ZhkHopperTxMsg( struct COMMTASK xdata* NewTask )
  609: {
;---- Variable 'NewTask' assigned to Register 'R6/R7' ----
  610: 	uchar data HopperNum;
  611: 	struct DEVICE xdata* data CurrentHopper;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 720


  612: 	
  613: 	// 选择出币机构
  614: 	HopperNum = NewTask->Id - ID_HOPPER1;
81171B 8F82              MOV     DPL,R7
81171D 8E83              MOV     DPH,R6
81171F A3                INC     DPTR
811720 E0                MOVX    A,@DPTR
811721 F52B              MOV     HopperNum,A
  615: 	switch( HopperNum )
811723 14                DEC     A
811724 600F              JZ      ?C0123?SCHEDULER
811726 14                DEC     A
811727 6014              JZ      ?C0124?SCHEDULER
811729 2402              ADD     A,#02H
81172B 7018              JNZ     ?C0125?SCHEDULER
  616: 	{
  617: 	case 0:
81172D         ?C0122?SCHEDULER:
  618: 		CurrentHopper = &Hopper1;
81172D 752C23            MOV     CurrentHopper,#HIGH Hopper1
811730 752D75            MOV     CurrentHopper+01H,#LOW Hopper1
  619: 	/*	if( Hopper1.Sn < 255 )
  620: 			Hopper1.Sn++;
  621: 		else
  622: 			Hopper1.Sn = 0;*/
  623: 		break;
811733 8013              SJMP    ?C0121?SCHEDULER
  624: 	case 1:
811735         ?C0123?SCHEDULER:
  625: 	//	Trace("\n ZhkHopperTxMsg HopperOutput2");
  626: 		CurrentHopper = &Hopper2;
811735 752C23            MOV     CurrentHopper,#HIGH Hopper2
811738 752D8A            MOV     CurrentHopper+01H,#LOW Hopper2
  627: 	/*	if( Hopper2.Sn < 255 )
  628: 			Hopper2.Sn++;
  629: 		else
  630: 			Hopper2.Sn = 0;*/
  631: 		break;
81173B 800B              SJMP    ?C0121?SCHEDULER
  632: 	case 2:
81173D         ?C0124?SCHEDULER:
  633: 		CurrentHopper = &Hopper3;
81173D 752C23            MOV     CurrentHopper,#HIGH Hopper3
811740 752D9F            MOV     CurrentHopper+01H,#LOW Hopper3
  634: 	/*	if( Hopper3.Sn < 255 )
  635: 			Hopper3.Sn++;
  636: 		else
  637: 			Hopper3.Sn = 0;*/
  638: 		break;
811743 8003              SJMP    ?C0121?SCHEDULER
  639: 	default:
811745         ?C0125?SCHEDULER:
  640: 		return 0;
811745 C3                CLR     C
811746 8006              SJMP    ?C0126?SCHEDULER
  641: 	}
811748         ?C0121?SCHEDULER:
  642: //	Trace("\n ZhkHopperTxMsg" );
  643: 	ZhkBusTxMsg( NewTask );		
811748 A51281381A        ECALL   _ZhkBusTxMsg
  644: 	return 1;	
81174D D3                SETB    C
  645: }
81174E         ?C0126?SCHEDULER:
81174E A522              ERET    
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 721


----- FUNCTION _ZhkHopperTxMsg (END) -------


----- FUNCTION ZhkKeyScanIsr (BEGIN) -----
 FILE: 'key.c'
   97: void ZhkKeyScanIsr( void ) using 1
811750 C0D0              PUSH    PSW
811752 75D008            MOV     PSW,#08H
   98: {
   99: 	static uchar data KeyValue,KeyDownTime;
  100: 	static bit NewKey;
  101: 	uchar data key;
  102: 
  103: 	key = ScanfKeyFun();
811755 A512807030        ECALL   ScanfKeyFun
81175A 8F46              MOV     key,R7
  104: 	if ( KeyValue != key )
81175C E549              MOV     A,KeyValue
81175E 6546              XRL     A,key
811760 600A              JZ      ?C0016?KEY
  105: 	{
  106: 		KeyValue    = key;
811762 854649            MOV     KeyValue,key
  107: 		KeyDownTime = 0;
811765 E4                CLR     A
811766 F54A              MOV     KeyDownTime,A
  108: 		NewKey      = 0;
811768 C22F              CLR     NewKey
  109: 	}
81176A 8033              SJMP    ?C0022?KEY
81176C         ?C0016?KEY:
  110: 	else if ( key != KEY_NULL )
81176C E546              MOV     A,key
81176E F4                CPL     A
81176F 602E              JZ      ?C0022?KEY
  111: 	{
  112: 		KeyDownTime ++;
811771 054A              INC     KeyDownTime
  113: 		if ( KeyDownTime % 8 == 2 ) 
811773 E54A              MOV     A,KeyDownTime
811775 5407              ANL     A,#07H
811777 FF                MOV     R7,A
811778 BF0224            CJNE    R7,#02H,?C0022?KEY
  114: 		{
  115: 			NewKey = 1;
81177B D22F              SETB    NewKey
  116: 			if ( ZhkKeyBufPtr >= sizeof( ZhkKeyBuf ) )
81177D 902DEC            MOV     DPTR,#ZhkKeyBufPtr
811780 E0                MOVX    A,@DPTR
811781 C3                CLR     C
811782 9401              SUBB    A,#01H
811784 4005              JC      ?C0020?KEY
  117: 				ZhkKeyBufPtr = sizeof( ZhkKeyBuf );
811786 7401              MOV     A,#01H
811788 F0                MOVX    @DPTR,A
811789 8014              SJMP    ?C0022?KEY
81178B         ?C0020?KEY:
  118: 			else
  119: 				ZhkKeyBuf[ ZhkKeyBufPtr ++ ] = KeyValue;
81178B 902DEC            MOV     DPTR,#ZhkKeyBufPtr
81178E E0                MOVX    A,@DPTR
81178F FF                MOV     R7,A
811790 04                INC     A
811791 F0                MOVX    @DPTR,A
811792 74ED              MOV     A,#LOW ZhkKeyBuf
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 722


811794 2F                ADD     A,R7
811795 F582              MOV     DPL,A
811797 E4                CLR     A
811798 342D              ADDC    A,#HIGH ZhkKeyBuf
81179A F583              MOV     DPH,A
81179C E549              MOV     A,KeyValue
81179E F0                MOVX    @DPTR,A
  120: 		}
  121: 	}
  122: 	
  123: }
81179F         ?C0022?KEY:
81179F D0D0              POP     PSW
8117A1 A522              ERET    
----- FUNCTION ZhkKeyScanIsr (END) -------


----- FUNCTION _ZhkLcdTask (BEGIN) -----
 FILE: 'scheduler.c'
  540: bit ZhkLcdTask( struct COMMTASK xdata* TaskTemp )
  541: {
8117A3 901849            MOV     DPTR,#TaskTemp
8117A6 EE                MOV     A,R6
8117A7 F0                MOVX    @DPTR,A
8117A8 A3                INC     DPTR
8117A9 EF                MOV     A,R7
8117AA F0                MOVX    @DPTR,A
  542: 	uchar data StateTemp;
  543: 	
  544: 	switch( ZhkSchedulerState )
8117AB 9023CA            MOV     DPTR,#ZhkSchedulerState
8117AE E0                MOVX    A,@DPTR
8117AF 7003              JNZ     $ + 5H
8117B1 021875            LJMP    ?C0104?SCHEDULER
8117B4 24FE              ADD     A,#0FEH
8117B6 603E              JZ      ?C0109?SCHEDULER
8117B8 14                DEC     A
8117B9 606F              JZ      ?C0114?SCHEDULER
8117BB 14                DEC     A
8117BC 7003              JNZ     $ + 5H
8117BE 02184C            LJMP    ?C0117?SCHEDULER
8117C1 14                DEC     A
8117C2 7003              JNZ     $ + 5H
8117C4 02185E            LJMP    ?C0118?SCHEDULER
8117C7 2404              ADD     A,#04H
8117C9 6003              JZ      $ + 5H
8117CB 021870            LJMP    ?C0119?SCHEDULER
  545: 	{
  546: 	case TASK_NULL:
  547: 		break;
  548: 	case TASK_REDAY:
8117CE         ?C0106?SCHEDULER:
  549: 		ZhkChannelSwitch( EQUIP_LCD );
8117CE 7F07              MOV     R7,#07H
8117D0 A512811F43        ECALL   _ZhkChannelSwitch
  550: 		if ( ZhkLcdTxMsg( TaskTemp ) )
8117D5 A51280FFD4        ECALL   ?L?COM0033
8117DA 9023CA            MOV     DPTR,#ZhkSchedulerState
8117DD 5005              JNC     ?C0107?SCHEDULER
  551: 			ZhkSchedulerState = TASK_WAIT;
8117DF 7402              MOV     A,#02H
8117E1 F0                MOVX    @DPTR,A
8117E2 8003              SJMP    ?C0108?SCHEDULER
8117E4         ?C0107?SCHEDULER:
  552: 		else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 723


  553: 			ZhkSchedulerState = TASK_FINISH;
8117E4 7404              MOV     A,#04H
8117E6 F0                MOVX    @DPTR,A
8117E7         ?C0108?SCHEDULER:
  554: 		ZhkDownMsgAckTimer = 60;
8117E7 751100            MOV     ZhkDownMsgAckTimer,#00H
8117EA 75123C            MOV     ZhkDownMsgAckTimer+01H,#03CH
  555: 		Lcd.CommState   = COMM_BUZY;
8117ED 902362            MOV     DPTR,#Lcd+02H
8117F0 7401              MOV     A,#01H
8117F2 F0                MOVX    @DPTR,A
  556: 		break;
8117F3 021875            LJMP    ?C0104?SCHEDULER
  557: 	case TASK_WAIT:
8117F6         ?C0109?SCHEDULER:
  558: 		StateTemp = ZhkLcdMsgProcess();
8117F6 A512811938        ECALL   ZhkLcdMsgProcess
8117FB 8F2A              MOV     StateTemp,R7
  559: 		if ( StateTemp == 1 )
8117FD E52A              MOV     A,StateTemp
8117FF B40102            CJNE    A,#01H,?C0110?SCHEDULER
  560: 		{		
  561: 			ZhkSchedulerState = TASK_FINISH;
  562: 			break;
811802 8032              SJMP    ?C0339?SCHEDULER
  563: 		}
811804         ?C0110?SCHEDULER:
  564: 		if ( ZhkDownMsgAckTimer == 0 )
811804 E512              MOV     A,ZhkDownMsgAckTimer+01H
811806 4511              ORL     A,ZhkDownMsgAckTimer
811808 706B              JNZ     ?C0104?SCHEDULER
  565: 		{
  566: 			Lcd.Sn --;
81180A 902361            MOV     DPTR,#Lcd+01H
81180D E0                MOVX    A,@DPTR
81180E 14                DEC     A
81180F F0                MOVX    @DPTR,A
  567: 			if ( ZhkLcdTxMsg( TaskTemp ) )							
811810 A51280FFD4        ECALL   ?L?COM0033
811815 9023CA            MOV     DPTR,#ZhkSchedulerState
811818 5005              JNC     ?C0112?SCHEDULER
  568: 				ZhkSchedulerState = TASK_REWAIT;
81181A 7403              MOV     A,#03H
81181C F0                MOVX    @DPTR,A
81181D 8003              SJMP    ?C0113?SCHEDULER
81181F         ?C0112?SCHEDULER:
  569: 		
  570: 			else			
  571: 				ZhkSchedulerState = TASK_FINISH;			
81181F 7404              MOV     A,#04H
811821 F0                MOVX    @DPTR,A
811822         ?C0113?SCHEDULER:
  572: 			ZhkDownMsgAckTimer = DOWNMSGACKTIMEOUT;
811822 751100            MOV     ZhkDownMsgAckTimer,#00H
811825 75121E            MOV     ZhkDownMsgAckTimer+01H,#01EH
  573: 		}
  574: 		
  575: 		break;
811828 804B              SJMP    ?C0104?SCHEDULER
  576: 	case TASK_REWAIT:		
81182A         ?C0114?SCHEDULER:
  577: 		StateTemp = ZhkLcdMsgProcess();
81182A A512811938        ECALL   ZhkLcdMsgProcess
81182F 8F2A              MOV     StateTemp,R7
  578: 		if ( StateTemp == 1 )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 724


811831 E52A              MOV     A,StateTemp
811833 B40108            CJNE    A,#01H,?C0115?SCHEDULER
  579: 		{
  580: 			ZhkSchedulerState = TASK_FINISH;
811836         
811836 9023CA            MOV     DPTR,#ZhkSchedulerState
811839 7404              MOV     A,#04H
81183B F0                MOVX    @DPTR,A
  581: 			break;
81183C 8037              SJMP    ?C0104?SCHEDULER
  582: 		}
81183E         ?C0115?SCHEDULER:
  583: 		if ( ZhkDownMsgAckTimer == 0 )
81183E E512              MOV     A,ZhkDownMsgAckTimer+01H
811840 4511              ORL     A,ZhkDownMsgAckTimer
811842 7031              JNZ     ?C0104?SCHEDULER
  584: 		{
  585: 			ZhkSchedulerState = TASK_ERROR;
811844 9023CA            MOV     DPTR,#ZhkSchedulerState
811847 7405              MOV     A,#05H
811849 F0                MOVX    @DPTR,A
  586: 		}
  587: 		break;
81184A 8029              SJMP    ?C0104?SCHEDULER
  588: 	case TASK_FINISH:		
81184C         ?C0117?SCHEDULER:
  589: 		ZhkSchedulerState = TASK_NULL; 
81184C E4                CLR     A
81184D 9023CA            MOV     DPTR,#ZhkSchedulerState
811850 F0                MOVX    @DPTR,A
  590: 		Lcd.CommState     = COMM_COMMOK;
811851 902362            MOV     DPTR,#Lcd+02H
811854 7404              MOV     A,#04H
811856 F0                MOVX    @DPTR,A
  591: 		Lcd.ExtState[1] = 0;
811857 E4                CLR     A
811858 902365            MOV     DPTR,#Lcd+05H
81185B F0                MOVX    @DPTR,A
  592: 		break;
81185C 8017              SJMP    ?C0104?SCHEDULER
  593: 	case TASK_ERROR:
81185E         ?C0118?SCHEDULER:
  594: 		Lcd.CommState  = COMM_TIMEOUT;// | COMM_COMMOK;
81185E 902362            MOV     DPTR,#Lcd+02H
811861 7402              MOV     A,#02H
811863 F0                MOVX    @DPTR,A
  595: 		ZhkSchedulerState = TASK_NULL; 
811864 E4                CLR     A
811865 9023CA            MOV     DPTR,#ZhkSchedulerState
811868 F0                MOVX    @DPTR,A
  596: 		Lcd.ExtState[1] = 1;
811869 902365            MOV     DPTR,#Lcd+05H
81186C 04                INC     A
81186D F0                MOVX    @DPTR,A
  597: 		break;
81186E 8005              SJMP    ?C0104?SCHEDULER
  598: 	default:
811870         ?C0119?SCHEDULER:
  599: 		ZhkSchedulerState = TASK_NULL;
811870 E4                CLR     A
811871 9023CA            MOV     DPTR,#ZhkSchedulerState
811874 F0                MOVX    @DPTR,A
  600: 	}
811875         ?C0104?SCHEDULER:
  601: 	return 1;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 725


811875 D3                SETB    C
  602: }
811876         ?C0120?SCHEDULER:
811876 A522              ERET    
----- FUNCTION _ZhkLcdTask (END) -------


----- FUNCTION ZhkHopperMsgProcess (BEGIN) -----
 FILE: 'scheduler.c'
  705: uchar ZhkHopperMsgProcess( void )
  706: {
  707: 	struct COMMTASK xdata AckTask;
  708: 
  709: 	memset( &AckTask, 0, sizeof( struct COMMTASK ) );
811878 7E00              MOV     R6,#00H
81187A 7F26              MOV     R7,#026H
81187C 7D00              MOV     R5,#00H
81187E 7B00              MOV     R3,#?C?XDATASEG
811880 7A18              MOV     R2,#HIGH AckTask
811882 794B              MOV     R1,#LOW AckTask
811884 A5128008A6        ECALL   ?C?MEMSET
  710: 	memcpy( &AckTask, &CurrentTask, sizeof( struct COMMTASK ) );
811889 784B              MOV     R0,#LOW AckTask
81188B 7C18              MOV     R4,#HIGH AckTask
81188D 7D00              MOV     R5,#?C?XDATASEG
81188F 7B00              MOV     R3,#?C?XDATASEG
811891 7A28              MOV     R2,#HIGH CurrentTask
811893 79A5              MOV     R1,#LOW CurrentTask
811895 7E00              MOV     R6,#00H
811897 7F26              MOV     R7,#026H
811899 A51280052D        ECALL   ?C?COPY
  711: //	Trace( "\n AckTask.Sn = %bu", AckTask.Sn );
  712: 	if ( ZhkBusFrameUnPack( &AckTask ) == 0 )
81189E A512811998        ECALL   ?L?COM0040
8118A3 EF                MOV     A,R7
8118A4 7004              JNZ     ?C0132?SCHEDULER
  713: 	{
  714: 		return 0;	
8118A6 FF                MOV     R7,A
8118A7 021936            LJMP    ?C0133?SCHEDULER
  715: 	}
8118AA         ?C0132?SCHEDULER:
  716: 	switch( CurrentTask.Id - ID_HOPPER1 )
8118AA 9028A6            MOV     DPTR,#CurrentTask+01H
8118AD E0                MOVX    A,@DPTR
8118AE FF                MOV     R7,A
8118AF 14                DEC     A
8118B0 6016              JZ      ?C0136?SCHEDULER
8118B2 14                DEC     A
8118B3 6022              JZ      ?C0137?SCHEDULER
8118B5 2402              ADD     A,#02H
8118B7 702B              JNZ     ?C0134?SCHEDULER
  717: 	{
  718: 	case 0:
8118B9         ?C0135?SCHEDULER:
  719: //		Trace( "\n AckTask.State = %02bx", AckTask.State );
  720: 		Hopper1.State = 0;
8118B9 E4                CLR     A
8118BA 902378            MOV     DPTR,#Hopper1+03H
8118BD F0                MOVX    @DPTR,A
  721: 		Hopper1.State = AckTask.State;		
8118BE 90184F            MOV     DPTR,#AckTask+04H
8118C1 E0                MOVX    A,@DPTR
8118C2 902378            MOV     DPTR,#Hopper1+03H
8118C5 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 726


  722: 		break;
8118C6 801C              SJMP    ?C0134?SCHEDULER
  723: 	case 1:
8118C8         ?C0136?SCHEDULER:
  724: 		Hopper2.State = 0;
8118C8 E4                CLR     A
8118C9 90238D            MOV     DPTR,#Hopper2+03H
8118CC F0                MOVX    @DPTR,A
  725: 		Hopper2.State = AckTask.State;
8118CD 90184F            MOV     DPTR,#AckTask+04H
8118D0 E0                MOVX    A,@DPTR
8118D1 90238D            MOV     DPTR,#Hopper2+03H
8118D4 F0                MOVX    @DPTR,A
  726: 		break;
8118D5 800D              SJMP    ?C0134?SCHEDULER
  727: 	case 2:
8118D7         ?C0137?SCHEDULER:
  728: 		Hopper3.State = 0;
8118D7 E4                CLR     A
8118D8 9023A2            MOV     DPTR,#Hopper3+03H
8118DB F0                MOVX    @DPTR,A
  729: 		Hopper3.State = AckTask.State;
8118DC 90184F            MOV     DPTR,#AckTask+04H
8118DF E0                MOVX    A,@DPTR
8118E0 9023A2            MOV     DPTR,#Hopper3+03H
8118E3 F0                MOVX    @DPTR,A
  730: 		break;
  731: 	}
8118E4         ?C0134?SCHEDULER:
  732: 	
  733: //	Trace( "\n ZhkHopperMsgProcess OK");
  734: 	switch( CurrentTask.Cmd  )
8118E4 9028A7            MOV     DPTR,#CurrentTask+02H
8118E7 E0                MOVX    A,@DPTR
8118E8 24B0              ADD     A,#0B0H
8118EA 6048              JZ      ?C0138?SCHEDULER
8118EC 14                DEC     A
8118ED 7041              JNZ     ?C0145?SCHEDULER
  735: 	{
  736: 		case HOPPER_OUTPUT:		
  737: 			break;
  738: 		case HOPPER_QUERY:
8118EF         ?C0140?SCHEDULER:
  739: 			switch( CurrentTask.Id - ID_HOPPER1 )
8118EF EF                MOV     A,R7
8118F0 14                DEC     A
8118F1 6019              JZ      ?C0143?SCHEDULER
8118F3 14                DEC     A
8118F4 6028              JZ      ?C0144?SCHEDULER
8118F6 2402              ADD     A,#02H
8118F8 703A              JNZ     ?C0138?SCHEDULER
  740: 			{
  741: 			case 0:
8118FA         ?C0142?SCHEDULER:
  742: 				Hopper1.ExtState[ 0 ] = AckTask.Param[ 0 ];
8118FA 901851            MOV     DPTR,#AckTask+06H
8118FD E0                MOVX    A,@DPTR
8118FE 902379            MOV     DPTR,#Hopper1+04H
811901 F0                MOVX    @DPTR,A
  743: 				Hopper1.ExtState[ 1 ] = AckTask.Param[ 1 ];
811902 901852            MOV     DPTR,#AckTask+07H
811905 E0                MOVX    A,@DPTR
811906 90237A            MOV     DPTR,#Hopper1+05H
811909 F0                MOVX    @DPTR,A
  744: 				break;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 727


81190A 8028              SJMP    ?C0138?SCHEDULER
  745: 			case 1:
81190C         ?C0143?SCHEDULER:
  746: 				Hopper2.ExtState[ 0 ] = AckTask.Param[ 0 ];
81190C 901851            MOV     DPTR,#AckTask+06H
81190F E0                MOVX    A,@DPTR
811910 90238E            MOV     DPTR,#Hopper2+04H
811913 F0                MOVX    @DPTR,A
  747: 				Hopper2.ExtState[ 1 ] = AckTask.Param[ 1 ];
811914 901852            MOV     DPTR,#AckTask+07H
811917 E0                MOVX    A,@DPTR
811918 90238F            MOV     DPTR,#Hopper2+05H
81191B F0                MOVX    @DPTR,A
  748: 				break;
81191C 8016              SJMP    ?C0138?SCHEDULER
  749: 			case 2:
81191E         ?C0144?SCHEDULER:
  750: 				Hopper3.ExtState[ 0 ] = AckTask.Param[ 0 ];
81191E 901851            MOV     DPTR,#AckTask+06H
811921 E0                MOVX    A,@DPTR
811922 9023A3            MOV     DPTR,#Hopper3+04H
811925 F0                MOVX    @DPTR,A
  751: 				Hopper3.ExtState[ 1 ] = AckTask.Param[ 1 ];
811926 901852            MOV     DPTR,#AckTask+07H
811929 E0                MOVX    A,@DPTR
81192A 9023A4            MOV     DPTR,#Hopper3+05H
81192D F0                MOVX    @DPTR,A
  752: 				break;
81192E 8004              SJMP    ?C0138?SCHEDULER
  753: 			}
  754: 			break;
  755: 		default:
811930         ?C0145?SCHEDULER:
  756: 			return 0;
811930 7F00              MOV     R7,#00H
811932 8002              SJMP    ?C0133?SCHEDULER
  757: 	}
811934         ?C0138?SCHEDULER:
  758: //	Trace( "ZhkHopperMsgProcessOver\n" );
  759: 	return 1;	
811934 7F01              MOV     R7,#01H
  760: }
811936         ?C0133?SCHEDULER:
811936 A522              ERET    
----- FUNCTION ZhkHopperMsgProcess (END) -------


----- FUNCTION ZhkLcdMsgProcess (BEGIN) -----
 FILE: 'scheduler.c'
  762: uchar ZhkLcdMsgProcess( void )
  763: {
  764: 	struct COMMTASK xdata AckTask;
  765: 	
  766: 	
  767: 	if ( ZhkBusFrameUnPack( &AckTask ) == 0 )
811938 A512811998        ECALL   ?L?COM0040
81193D EF                MOV     A,R7
81193E 7003              JNZ     ?C0146?SCHEDULER
  768: 		return 0;
811940 FF                MOV     R7,A
811941 8053              SJMP    ?C0147?SCHEDULER
811943         ?C0146?SCHEDULER:
  769: 	if ( CurrentTask.Id  != AckTask.Id  ) 
811943 90184C            MOV     DPTR,#AckTask+01H
811946 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 728


811947 FF                MOV     R7,A
811948 9028A6            MOV     DPTR,#CurrentTask+01H
81194B E0                MOVX    A,@DPTR
81194C 6F                XRL     A,R7
81194D 6004              JZ      ?C0148?SCHEDULER
  770: 		return 0;
81194F 7F00              MOV     R7,#00H
811951 8043              SJMP    ?C0147?SCHEDULER
811953         ?C0148?SCHEDULER:
  771: 	if ( CurrentTask.Sn  != AckTask.Sn  ) 
811953 90184E            MOV     DPTR,#AckTask+03H
811956 E0                MOVX    A,@DPTR
811957 FF                MOV     R7,A
811958 9028A8            MOV     DPTR,#CurrentTask+03H
81195B E0                MOVX    A,@DPTR
81195C 6F                XRL     A,R7
81195D 6004              JZ      ?C0149?SCHEDULER
  772: 		return 0;
81195F 7F00              MOV     R7,#00H
811961 8033              SJMP    ?C0147?SCHEDULER
811963         ?C0149?SCHEDULER:
  773: 	Lcd.State = AckTask.State;
811963 90184F            MOV     DPTR,#AckTask+04H
811966 E0                MOVX    A,@DPTR
811967 902363            MOV     DPTR,#Lcd+03H
81196A F0                MOVX    @DPTR,A
  774: 	switch( CurrentTask.Cmd  )
81196B 9028A7            MOV     DPTR,#CurrentTask+02H
81196E E0                MOVX    A,@DPTR
81196F A5128007CD        ECALL   ?C?CCASEX
811974 1994              DW      ?C0150?SCHEDULER
811976 50                DB      050H
811977 1994              DW      ?C0150?SCHEDULER
811979 52                DB      052H
81197A 1994              DW      ?C0150?SCHEDULER
81197C 54                DB      054H
81197D 1994              DW      ?C0150?SCHEDULER
81197F 57                DB      057H
811980 1994              DW      ?C0150?SCHEDULER
811982 58                DB      058H
811983 1994              DW      ?C0150?SCHEDULER
811985 5C                DB      05CH
811986 1994              DW      ?C0150?SCHEDULER
811988 5D                DB      05DH
811989 1994              DW      ?C0150?SCHEDULER
81198B 5E                DB      05EH
81198C 0000              DW      00H
81198E 1990              DW      ?C0159?SCHEDULER
  775: 	{
  776: 		case DISPKEY_DISP:		
  777: 		case DISPKEY_DISPS:
  778: 		case DISPKEY_SETCURSOR:
  779: 		case DISPKEY_CURSORSTYLE:
  780: 		case DISPKEY_DENOTE:
  781: 		case DISPKEY_SCROLL:
  782: 		case DISPKEY_CLEAR:
  783: 		case DISPKEY_LANGUAGE:
  784: 			break;		
  785: 		default:
811990         ?C0159?SCHEDULER:
  786: 			return 0;
811990 7F00              MOV     R7,#00H
811992 8002              SJMP    ?C0147?SCHEDULER
  787: 	}
811994         ?C0150?SCHEDULER:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 729


  788: 	return 1;
811994 7F01              MOV     R7,#01H
  789: }
811996         ?C0147?SCHEDULER:
811996 A522              ERET    
----- FUNCTION ZhkLcdMsgProcess (END) -------


----- FUNCTION ?L?COM0040 (BEGIN) -----
811998 7E18              MOV     R6,#HIGH AckTask
81199A 7F4B              MOV     R7,#LOW AckTask
----- FUNCTION _ZhkBusFrameUnPack (BEGIN) -----
 FILE: 'procotol.c'
  102: unsigned char ZhkBusFrameUnPack( struct COMMTASK xdata* Result  )
  103: {
81199C 901871            MOV     DPTR,#Result
81199F EE                MOV     A,R6
8119A0 F0                MOVX    @DPTR,A
8119A1 A3                INC     DPTR
8119A2 EF                MOV     A,R7
8119A3 F0                MOVX    @DPTR,A
  104: 	unsigned char data i,j;
  105: 	unsigned char data len;
  106: 	unsigned char data sum;
  107: 	
  108: 
  109: 	j = 0;
8119A4 E4                CLR     A
8119A5 F52C              MOV     j,A
8119A7         ?C0015?PROCOTOL:
  110: 	while( ! ZhkSerial1IsRxBufNull() )
8119A7 A512811BB4        ECALL   ZhkSerial1IsRxBufNull
8119AC EF                MOV     A,R7
8119AD 702F              JNZ     ?C0016?PROCOTOL
  111: 	{
  112: 		for( i = 0 ; i < sizeof( DownMsgBuf ) - 1 ; i ++ )
8119AF F52B              MOV     i,A
8119B1         ?C0017?PROCOTOL:
  113: 			DownMsgBuf[ i ] = DownMsgBuf[ i + 1 ];
8119B1 745A              MOV     A,#LOW DownMsgBuf+01H
8119B3 252B              ADD     A,i
8119B5 F582              MOV     DPL,A
8119B7 E4                CLR     A
8119B8 342D              ADDC    A,#HIGH DownMsgBuf+01H
8119BA F583              MOV     DPH,A
8119BC E0                MOVX    A,@DPTR
8119BD FF                MOV     R7,A
8119BE 7459              MOV     A,#LOW DownMsgBuf
8119C0 252B              ADD     A,i
8119C2 F582              MOV     DPL,A
8119C4 E4                CLR     A
8119C5 342D              ADDC    A,#HIGH DownMsgBuf
8119C7 F583              MOV     DPH,A
8119C9 EF                MOV     A,R7
8119CA F0                MOVX    @DPTR,A
8119CB 052B              INC     i
8119CD E52B              MOV     A,i
8119CF B43FDF            CJNE    A,#03FH,?C0017?PROCOTOL
8119D2         ?C0018?PROCOTOL:
  114: 		DownMsgBuf[ sizeof( DownMsgBuf ) - 1 ] = ZhkSerial1GetCh();
8119D2 A512811D43        ECALL   ZhkSerial1GetCh
8119D7 902D98            MOV     DPTR,#DownMsgBuf+03FH
8119DA EF                MOV     A,R7
8119DB F0                MOVX    @DPTR,A
  115: #ifdef _DEBUG_TRACE
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 730


  116: 		j ++ ;
  117: #endif
  118: 	}
8119DC 80C9              SJMP    ?C0015?PROCOTOL
8119DE         ?C0016?PROCOTOL:
  119: /*
  120: #ifdef _DEBUG_TRACE
  121: 	if( j )
  122: 	{
  123: 		Trace( "\n Bus Return Str = ");
  124: 		for( j = 0; j < 32; j++ )
  125: 			Trace( " %02bx", DownMsgBuf[32+j] );
  126: 		j = 0;
  127: 	}
  128: #endif
  129: */
  130: 	for( i = 0 ; i <= sizeof( DownMsgBuf ) - 6 ; i ++ )
8119DE E4                CLR     A
8119DF F52B              MOV     i,A
8119E1         ?C0020?PROCOTOL:
  131: 	{
  132: 		if ( DownMsgBuf[ i ] != ACKHEAD ) 
8119E1 7459              MOV     A,#LOW DownMsgBuf
8119E3 252B              ADD     A,i
8119E5 F582              MOV     DPL,A
8119E7 E4                CLR     A
8119E8 342D              ADDC    A,#HIGH DownMsgBuf
8119EA F583              MOV     DPH,A
8119EC E0                MOVX    A,@DPTR
8119ED 64FD              XRL     A,#0FDH
8119EF 6003              JZ      $ + 5H
8119F1 021BA5            LJMP    ?C0022?PROCOTOL
  133: 			continue;	
8119F4         ?C0023?PROCOTOL:
  134: 		len = DownMsgBuf[ i + 1 ];	
8119F4 745A              MOV     A,#LOW DownMsgBuf+01H
8119F6 252B              ADD     A,i
8119F8 F582              MOV     DPL,A
8119FA E4                CLR     A
8119FB 342D              ADDC    A,#HIGH DownMsgBuf+01H
8119FD F583              MOV     DPH,A
8119FF E0                MOVX    A,@DPTR
811A00 F52D              MOV     len,A
  135: 		if ( i + len > sizeof( DownMsgBuf ) )
811A02 252B              ADD     A,i
811A04 FF                MOV     R7,A
811A05 E4                CLR     A
811A06 33                RLC     A
811A07 FE                MOV     R6,A
811A08 D3                SETB    C
811A09 EF                MOV     A,R7
811A0A 9440              SUBB    A,#040H
811A0C EE                MOV     A,R6
811A0D 6480              XRL     A,#080H
811A0F 9480              SUBB    A,#080H
811A11 4003              JC      $ + 5H
811A13 021BB0            LJMP    ?C0021?PROCOTOL
  136: 			break;	 
811A16         ?C0024?PROCOTOL:
  137: 		sum = 0;
811A16 E4                CLR     A
811A17 F52E              MOV     sum,A
  138: 		for( j = i ; j < i + len ; j ++ )		
811A19 852B2C            MOV     j,i
811A1C         ?C0025?PROCOTOL:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 731


811A1C E52B              MOV     A,i
811A1E 252D              ADD     A,len
811A20 FF                MOV     R7,A
811A21 E4                CLR     A
811A22 33                RLC     A
811A23 FE                MOV     R6,A
811A24 C3                CLR     C
811A25 E52C              MOV     A,j
811A27 9F                SUBB    A,R7
811A28 EE                MOV     A,R6
811A29 6480              XRL     A,#080H
811A2B F8                MOV     R0,A
811A2C 7480              MOV     A,#080H
811A2E 98                SUBB    A,R0
811A2F 5012              JNC     ?C0026?PROCOTOL
  139: 		{
  140: 			sum ^= DownMsgBuf[ j ];		
811A31 7459              MOV     A,#LOW DownMsgBuf
811A33 252C              ADD     A,j
811A35 F582              MOV     DPL,A
811A37 E4                CLR     A
811A38 342D              ADDC    A,#HIGH DownMsgBuf
811A3A F583              MOV     DPH,A
811A3C E0                MOVX    A,@DPTR
811A3D 622E              XRL     sum,A
  141: 		}
811A3F 052C              INC     j
811A41 80D9              SJMP    ?C0025?PROCOTOL
811A43         ?C0026?PROCOTOL:
  142: 		if ( sum != 0 )		
811A43 E52E              MOV     A,sum
811A45 6003              JZ      $ + 5H
811A47 021BA5            LJMP    ?C0022?PROCOTOL
  143: 			continue;
811A4A         ?C0028?PROCOTOL:
  144: 	
  145: 		//完整的数据包
  146: 		if( ( DownMsgBuf[ i + 4 ] == ID_HOPPER1 ) || ( DownMsgBuf[ i + 4 ] == ID_HOPPER2 ) || ( DownMsgBuf[ i + 4 ] == 
>> ID_HOPPER3 ) )
811A4A 745D              MOV     A,#LOW DownMsgBuf+04H
811A4C 252B              ADD     A,i
811A4E F582              MOV     DPL,A
811A50 E4                CLR     A
811A51 342D              ADDC    A,#HIGH DownMsgBuf+04H
811A53 F583              MOV     DPH,A
811A55 E0                MOVX    A,@DPTR
811A56 FF                MOV     R7,A
811A57 6009              JZ      ?C0030?PROCOTOL
811A59 6401              XRL     A,#01H
811A5B 6005              JZ      ?C0030?PROCOTOL
811A5D EF                MOV     A,R7
811A5E 6402              XRL     A,#02H
811A60 706C              JNZ     ?C0029?PROCOTOL
811A62         ?C0030?PROCOTOL:
  147: 		{
  148: 			if( Result->Sn != DownMsgBuf[ i+2 ] )
811A62 901871            MOV     DPTR,#Result
811A65 E0                MOVX    A,@DPTR
811A66 FE                MOV     R6,A
811A67 A3                INC     DPTR
811A68 E0                MOVX    A,@DPTR
811A69 FF                MOV     R7,A
811A6A F582              MOV     DPL,A
811A6C 8E83              MOV     DPH,R6
811A6E A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 732


811A6F A3                INC     DPTR
811A70 A3                INC     DPTR
811A71 E0                MOVX    A,@DPTR
811A72 FD                MOV     R5,A
811A73 745B              MOV     A,#LOW DownMsgBuf+02H
811A75 252B              ADD     A,i
811A77 F582              MOV     DPL,A
811A79 E4                CLR     A
811A7A 342D              ADDC    A,#HIGH DownMsgBuf+02H
811A7C F583              MOV     DPH,A
811A7E E0                MOVX    A,@DPTR
811A7F FC                MOV     R4,A
811A80 ED                MOV     A,R5
811A81 6C                XRL     A,R4
811A82 604A              JZ      ?C0029?PROCOTOL
  149: 			{
  150: 			#ifdef _DEBUG_TRACE						
  151: 				Trace( "\n Bus Return Unpack SN is error = ");
  152: 				for( j = i; j < i + len; j++ )
  153: 					Trace( " %02bx", DownMsgBuf[j] );					
  154: 			#endif	
  155: 				memset( Result, 0, sizeof( Result ) );
811A84 7C00              MOV     R4,#00H
811A86 7D02              MOV     R5,#02H
811A88 C004              PUSH    AR4
811A8A C005              PUSH    AR5
811A8C 7D00              MOV     R5,#00H
811A8E AA06              MOV     R2,AR6
811A90 A907              MOV     R1,AR7
811A92 7B00              MOV     R3,#?C?XDATASEG
811A94 D007              POP     AR7
811A96 D006              POP     AR6
811A98 A5128008A6        ECALL   ?C?MEMSET
  156: 				sum = 0;
811A9D E4                CLR     A
811A9E F52E              MOV     sum,A
  157: 				for( sum = i; sum < i + len; sum ++ )
811AA0 852B2E            MOV     sum,i
811AA3         ?C0032?PROCOTOL:
811AA3 E52B              MOV     A,i
811AA5 252D              ADD     A,len
811AA7 FF                MOV     R7,A
811AA8 E4                CLR     A
811AA9 33                RLC     A
811AAA FE                MOV     R6,A
811AAB C3                CLR     C
811AAC E52E              MOV     A,sum
811AAE 9F                SUBB    A,R7
811AAF EE                MOV     A,R6
811AB0 6480              XRL     A,#080H
811AB2 F8                MOV     R0,A
811AB3 7480              MOV     A,#080H
811AB5 98                SUBB    A,R0
811AB6 5011              JNC     ?C0033?PROCOTOL
  158: 					DownMsgBuf[sum] = 0x00;
811AB8 7459              MOV     A,#LOW DownMsgBuf
811ABA 252E              ADD     A,sum
811ABC F582              MOV     DPL,A
811ABE E4                CLR     A
811ABF 342D              ADDC    A,#HIGH DownMsgBuf
811AC1 F583              MOV     DPH,A
811AC3 E4                CLR     A
811AC4 F0                MOVX    @DPTR,A
811AC5 052E              INC     sum
811AC7 80DA              SJMP    ?C0032?PROCOTOL
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 733


811AC9         ?C0033?PROCOTOL:
  159: 				return 0;
811AC9 7F00              MOV     R7,#00H
811ACB 021BB2            LJMP    ?C0035?PROCOTOL
  160: 			}
  161: 		}
811ACE         ?C0029?PROCOTOL:
  162: 		memset( Result, 0, sizeof( Result ) );
811ACE 7E00              MOV     R6,#00H
811AD0 7F02              MOV     R7,#02H
811AD2 7D00              MOV     R5,#00H
811AD4 901871            MOV     DPTR,#Result
811AD7 E0                MOVX    A,@DPTR
811AD8 FA                MOV     R2,A
811AD9 A3                INC     DPTR
811ADA E0                MOVX    A,@DPTR
811ADB F9                MOV     R1,A
811ADC 7B00              MOV     R3,#?C?XDATASEG
811ADE A5128008A6        ECALL   ?C?MEMSET
  163: 		Result->ParamLen = len - 6;
811AE3 E52D              MOV     A,len
811AE5 24FA              ADD     A,#0FAH
811AE7 FF                MOV     R7,A
811AE8 901871            MOV     DPTR,#Result
811AEB E0                MOVX    A,@DPTR
811AEC FC                MOV     R4,A
811AED A3                INC     DPTR
811AEE E0                MOVX    A,@DPTR
811AEF FD                MOV     R5,A
811AF0 2405              ADD     A,#05H
811AF2 F582              MOV     DPL,A
811AF4 E4                CLR     A
811AF5 3C                ADDC    A,R4
811AF6 F583              MOV     DPH,A
811AF8 EF                MOV     A,R7
811AF9 F0                MOVX    @DPTR,A
  164: 		Result->Sn       = DownMsgBuf[ i + 2 ];
811AFA 745B              MOV     A,#LOW DownMsgBuf+02H
811AFC 252B              ADD     A,i
811AFE F582              MOV     DPL,A
811B00 E4                CLR     A
811B01 342D              ADDC    A,#HIGH DownMsgBuf+02H
811B03 F583              MOV     DPH,A
811B05 E0                MOVX    A,@DPTR
811B06 8D82              MOV     DPL,R5
811B08 8C83              MOV     DPH,R4
811B0A A3                INC     DPTR
811B0B A3                INC     DPTR
811B0C A3                INC     DPTR
811B0D F0                MOVX    @DPTR,A
  165: 		Result->State    = DownMsgBuf[ i + 3 ];		
811B0E 745C              MOV     A,#LOW DownMsgBuf+03H
811B10 252B              ADD     A,i
811B12 F582              MOV     DPL,A
811B14 E4                CLR     A
811B15 342D              ADDC    A,#HIGH DownMsgBuf+03H
811B17 F583              MOV     DPH,A
811B19 E0                MOVX    A,@DPTR
811B1A FF                MOV     R7,A
811B1B ED                MOV     A,R5
811B1C 2404              ADD     A,#04H
811B1E F582              MOV     DPL,A
811B20 E4                CLR     A
811B21 3C                ADDC    A,R4
811B22 F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 734


811B24 EF                MOV     A,R7
811B25 F0                MOVX    @DPTR,A
  166: 		Result->Id       = DownMsgBuf[ i + 4 ];
811B26 745D              MOV     A,#LOW DownMsgBuf+04H
811B28 252B              ADD     A,i
811B2A F582              MOV     DPL,A
811B2C E4                CLR     A
811B2D 342D              ADDC    A,#HIGH DownMsgBuf+04H
811B2F F583              MOV     DPH,A
811B31 E0                MOVX    A,@DPTR
811B32 8D82              MOV     DPL,R5
811B34 8C83              MOV     DPH,R4
811B36 A3                INC     DPTR
811B37 F0                MOVX    @DPTR,A
  167: 
  168: 		for( j = 0 ; j < len - 6 ; j ++ )		
811B38 E4                CLR     A
811B39 F52C              MOV     j,A
811B3B         ?C0036?PROCOTOL:
811B3B E52D              MOV     A,len
811B3D 24FA              ADD     A,#0FAH
811B3F FF                MOV     R7,A
811B40 E52C              MOV     A,j
811B42 C3                CLR     C
811B43 9F                SUBB    A,R7
811B44 502F              JNC     ?C0037?PROCOTOL
  169: 			Result->Param[ j ] = DownMsgBuf[ i + j + 5 ];		
811B46 E52B              MOV     A,i
811B48 252C              ADD     A,j
811B4A 245E              ADD     A,#LOW DownMsgBuf+05H
811B4C F582              MOV     DPL,A
811B4E E4                CLR     A
811B4F 342D              ADDC    A,#HIGH DownMsgBuf+05H
811B51 F583              MOV     DPH,A
811B53 E0                MOVX    A,@DPTR
811B54 FF                MOV     R7,A
811B55 901871            MOV     DPTR,#Result
811B58 E0                MOVX    A,@DPTR
811B59 FC                MOV     R4,A
811B5A A3                INC     DPTR
811B5B E0                MOVX    A,@DPTR
811B5C 2406              ADD     A,#06H
811B5E F582              MOV     DPL,A
811B60 E4                CLR     A
811B61 3C                ADDC    A,R4
811B62 F583              MOV     DPH,A
811B64 E582              MOV     A,DPL
811B66 252C              ADD     A,j
811B68 F582              MOV     DPL,A
811B6A E4                CLR     A
811B6B 3583              ADDC    A,DPH
811B6D F583              MOV     DPH,A
811B6F EF                MOV     A,R7
811B70 F0                MOVX    @DPTR,A
811B71 052C              INC     j
811B73 80C6              SJMP    ?C0036?PROCOTOL
811B75         ?C0037?PROCOTOL:
  170: 		sum = 0;
811B75 E4                CLR     A
811B76 F52E              MOV     sum,A
  171: 		for( sum = i; sum < i + len; sum ++ )
811B78 852B2E            MOV     sum,i
811B7B         ?C0039?PROCOTOL:
811B7B E52B              MOV     A,i
811B7D 252D              ADD     A,len
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 735


811B7F FF                MOV     R7,A
811B80 E4                CLR     A
811B81 33                RLC     A
811B82 FE                MOV     R6,A
811B83 C3                CLR     C
811B84 E52E              MOV     A,sum
811B86 9F                SUBB    A,R7
811B87 EE                MOV     A,R6
811B88 6480              XRL     A,#080H
811B8A F8                MOV     R0,A
811B8B 7480              MOV     A,#080H
811B8D 98                SUBB    A,R0
811B8E 5011              JNC     ?C0040?PROCOTOL
  172: 			DownMsgBuf[sum] = 0x00;
811B90 7459              MOV     A,#LOW DownMsgBuf
811B92 252E              ADD     A,sum
811B94 F582              MOV     DPL,A
811B96 E4                CLR     A
811B97 342D              ADDC    A,#HIGH DownMsgBuf
811B99 F583              MOV     DPH,A
811B9B E4                CLR     A
811B9C F0                MOVX    @DPTR,A
811B9D 052E              INC     sum
811B9F 80DA              SJMP    ?C0039?PROCOTOL
811BA1         ?C0040?PROCOTOL:
  173: /*
  174: #ifdef _DEBUG_TRACE		
  175: 		Trace( "\n Bus Return Unpack = ");
  176: 		for( j = 0; j < 32; j++ )
  177: 			Trace( " %02bx", DownMsgBuf[32+j] );		
  178: #endif*/
  179: 		return 1;
811BA1 7F01              MOV     R7,#01H
811BA3 800D              SJMP    ?C0035?PROCOTOL
  180: 	}	
811BA5         ?C0022?PROCOTOL:
811BA5 052B              INC     i
811BA7 E52B              MOV     A,i
811BA9 643B              XRL     A,#03BH
811BAB 6003              JZ      $ + 5H
811BAD 0219E1            LJMP    ?C0020?PROCOTOL
811BB0         ?C0021?PROCOTOL:
  181: 	return 0;
811BB0 7F00              MOV     R7,#00H
  182: }
811BB2         ?C0035?PROCOTOL:
811BB2 A522              ERET    
----- FUNCTION _ZhkBusFrameUnPack (END) -------


----- FUNCTION ZhkSerial1IsRxBufNull (BEGIN) -----
 FILE: 'Serial1.C'
  132: uchar ZhkSerial1IsRxBufNull( void )
  133: {
  134: 	if  ( ZhkSerial1RxBufRd - ZhkSerial1RxBufWd == 0 ) return 1;
  135: 	return 0;
811BB4 C3                CLR     C
811BB5 E54B              MOV     A,ZhkSerial1RxBufRd
811BB7 954C              SUBB    A,ZhkSerial1RxBufWd
811BB9 7F00              MOV     R7,#00H
811BBB 7002              JNZ     ?C0015?SERIAL1
811BBD 7F01              MOV     R7,#01H
811BBF         ?C0015?SERIAL1:
  136: }
  137: 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 736


811BBF         ?C0016?SERIAL1:
811BBF A522              ERET    
----- FUNCTION ZhkSerial1IsRxBufNull (END) -------


----- FUNCTION _ZhkChannelFrameUnPack (BEGIN) -----
 FILE: 'procotol.c'
  298: unsigned char ZhkChannelFrameUnPack( struct COMMTASK xdata* Result  )
  299: {
811BC1 901871            MOV     DPTR,#Result
811BC4 EE                MOV     A,R6
811BC5 F0                MOVX    @DPTR,A
811BC6 A3                INC     DPTR
811BC7 EF                MOV     A,R7
811BC8 F0                MOVX    @DPTR,A
  300: 	unsigned char xdata i;
  301: 	unsigned char xdata ret = 0;
811BC9 E4                CLR     A
811BCA 901874            MOV     DPTR,#ret
811BCD F0                MOVX    @DPTR,A
  302: 	unsigned char xdata sum;
  303: 	unsigned char xdata j = 0;
;---- Variable 'j' assigned to Register 'R7' ----
811BCE FF                MOV     R7,A
  304: //	unsigned char data packetHeard;	
  305: 		
  306: 	j = 0;
811BCF         ?C0070?PROCOTOL:
  307: 	while( ! ZhkSerial1IsRxBufNull() )
811BCF A512811BB4        ECALL   ZhkSerial1IsRxBufNull
811BD4 EF                MOV     A,R7
811BD5 7036              JNZ     ?C0071?PROCOTOL
  308: 	{
  309: 		for( i = 0 ; i <= sizeof( DownMsgBuf ) - 1 ; i ++ )
811BD7 901873            MOV     DPTR,#i
811BDA F0                MOVX    @DPTR,A
811BDB         ?C0072?PROCOTOL:
  310: 			DownMsgBuf[ i ] = DownMsgBuf[ i + 1 ];
811BDB 901873            MOV     DPTR,#i
811BDE E0                MOVX    A,@DPTR
811BDF FF                MOV     R7,A
811BE0 245A              ADD     A,#LOW DownMsgBuf+01H
811BE2 F582              MOV     DPL,A
811BE4 E4                CLR     A
811BE5 342D              ADDC    A,#HIGH DownMsgBuf+01H
811BE7 F583              MOV     DPH,A
811BE9 E0                MOVX    A,@DPTR
811BEA FE                MOV     R6,A
811BEB 7459              MOV     A,#LOW DownMsgBuf
811BED 2F                ADD     A,R7
811BEE F582              MOV     DPL,A
811BF0 E4                CLR     A
811BF1 342D              ADDC    A,#HIGH DownMsgBuf
811BF3 F583              MOV     DPH,A
811BF5 EE                MOV     A,R6
811BF6 F0                MOVX    @DPTR,A
811BF7 901873            MOV     DPTR,#i
811BFA E0                MOVX    A,@DPTR
811BFB 04                INC     A
811BFC F0                MOVX    @DPTR,A
811BFD E0                MOVX    A,@DPTR
811BFE B440DA            CJNE    A,#040H,?C0072?PROCOTOL
811C01         ?C0073?PROCOTOL:
  311: 		DownMsgBuf[ sizeof( DownMsgBuf ) - 1 ] = ZhkSerial1GetCh();			
811C01 A512811D43        ECALL   ZhkSerial1GetCh
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 737


811C06 902D98            MOV     DPTR,#DownMsgBuf+03FH
811C09 EF                MOV     A,R7
811C0A F0                MOVX    @DPTR,A
  312: #ifdef _DEBUG_TRACE
  313: 		j++;
  314: #endif
  315: 	}
811C0B 80C2              SJMP    ?C0070?PROCOTOL
811C0D         ?C0071?PROCOTOL:
  316: 
  317: #ifdef _DEBUG_TRACE
  318: 	if( j != 0 )
  319: 	{
  320: 		Trace( "\n Channel Return Str = " );		
  321: 		for( i = 0; i < j  ; i ++ )
  322: 			Trace( " %02bx", DownMsgBuf[ 64 - j + i ] );		
  323: 	}
  324: 	j = 0;
  325: #endif
  326: 
  327: 	//找应答帧
  328: 	for( i = 0; i <= sizeof( DownMsgBuf ) - 8 ; i++ ) 
811C0D E4                CLR     A
811C0E 901873            MOV     DPTR,#i
811C11 F0                MOVX    @DPTR,A
811C12         ?C0075?PROCOTOL:
811C12 901873            MOV     DPTR,#i
811C15 E0                MOVX    A,@DPTR
811C16 FF                MOV     R7,A
811C17 D3                SETB    C
811C18 9438              SUBB    A,#038H
811C1A 4003              JC      $ + 5H
811C1C 021D3F            LJMP    ?C0076?PROCOTOL
  329: 	{			
  330: 		if( ( ( DownMsgBuf[ i ] == 0xee ) && ( DownMsgBuf[ i + 1 ] == 0x08 ) ) ) 				
811C1F 7459              MOV     A,#LOW DownMsgBuf
811C21 2F                ADD     A,R7
811C22 F582              MOV     DPL,A
811C24 E4                CLR     A
811C25 342D              ADDC    A,#HIGH DownMsgBuf
811C27 F583              MOV     DPH,A
811C29 E0                MOVX    A,@DPTR
811C2A 64EE              XRL     A,#0EEH
811C2C 6003              JZ      $ + 5H
811C2E 021D36            LJMP    ?C0077?PROCOTOL
811C31 901873            MOV     DPTR,#i
811C34 E0                MOVX    A,@DPTR
811C35 245A              ADD     A,#LOW DownMsgBuf+01H
811C37 F582              MOV     DPL,A
811C39 E4                CLR     A
811C3A 342D              ADDC    A,#HIGH DownMsgBuf+01H
811C3C F583              MOV     DPH,A
811C3E E0                MOVX    A,@DPTR
811C3F 6408              XRL     A,#08H
811C41 6003              JZ      $ + 5H
811C43 021D36            LJMP    ?C0077?PROCOTOL
  331: 		{
  332: 		//	Trace( "\n Channel Find Heard1" );		
  333: 		//	Trace( "\n Result->Sn = %bu, DownMsgBuf[ i + 2 ] = %bu",Result->Sn, DownMsgBuf[ i + 2 ]);		
  334: 			if( Result->Sn == DownMsgBuf[ i + 2 ] ) 
811C46 901871            MOV     DPTR,#Result
811C49 E0                MOVX    A,@DPTR
811C4A FC                MOV     R4,A
811C4B A3                INC     DPTR
811C4C E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 738


811C4D F582              MOV     DPL,A
811C4F 8C83              MOV     DPH,R4
811C51 A3                INC     DPTR
811C52 A3                INC     DPTR
811C53 A3                INC     DPTR
811C54 E0                MOVX    A,@DPTR
811C55 FE                MOV     R6,A
811C56 745B              MOV     A,#LOW DownMsgBuf+02H
811C58 2F                ADD     A,R7
811C59 F582              MOV     DPL,A
811C5B E4                CLR     A
811C5C 342D              ADDC    A,#HIGH DownMsgBuf+02H
811C5E F583              MOV     DPH,A
811C60 E0                MOVX    A,@DPTR
811C61 FF                MOV     R7,A
811C62 EE                MOV     A,R6
811C63 6F                XRL     A,R7
811C64 6003              JZ      $ + 5H
811C66 021D36            LJMP    ?C0077?PROCOTOL
  335: 			{
  336: 			//	Trace( "\n Channel Find SN" );		
  337: 				//是本次的应答包				
  338: 				sum = 0;
;---- Variable 'sum' assigned to Register 'R7' ----
811C69 FF                MOV     R7,A
  339: 				for( ret = 0; ret < 7; ret ++ )
811C6A 901874            MOV     DPTR,#ret
811C6D F0                MOVX    @DPTR,A
811C6E         ?C0080?PROCOTOL:
811C6E 901874            MOV     DPTR,#ret
811C71 E0                MOVX    A,@DPTR
811C72 FE                MOV     R6,A
811C73 C3                CLR     C
811C74 9407              SUBB    A,#07H
811C76 5019              JNC     ?C0081?PROCOTOL
  340: 					sum ^= DownMsgBuf[ i + ret ];			
811C78 901873            MOV     DPTR,#i
811C7B E0                MOVX    A,@DPTR
811C7C 2E                ADD     A,R6
811C7D 2459              ADD     A,#LOW DownMsgBuf
811C7F F582              MOV     DPL,A
811C81 E4                CLR     A
811C82 342D              ADDC    A,#HIGH DownMsgBuf
811C84 F583              MOV     DPH,A
811C86 E0                MOVX    A,@DPTR
811C87 6F                XRL     A,R7
811C88 FF                MOV     R7,A
811C89 901874            MOV     DPTR,#ret
811C8C E0                MOVX    A,@DPTR
811C8D 04                INC     A
811C8E F0                MOVX    @DPTR,A
811C8F 80DD              SJMP    ?C0080?PROCOTOL
811C91         ?C0081?PROCOTOL:
  341: 				if( sum == DownMsgBuf[ i + 7 ] )//完整的响应包				
811C91 901873            MOV     DPTR,#i
811C94 E0                MOVX    A,@DPTR
811C95 2460              ADD     A,#LOW DownMsgBuf+07H
811C97 F582              MOV     DPL,A
811C99 E4                CLR     A
811C9A 342D              ADDC    A,#HIGH DownMsgBuf+07H
811C9C F583              MOV     DPH,A
811C9E E0                MOVX    A,@DPTR
811C9F 6F                XRL     A,R7
811CA0 6003              JZ      $ + 5H
811CA2 021D36            LJMP    ?C0077?PROCOTOL
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 739


  342: 				{
  343: 					memset( Result, 0, sizeof( Result ) );
811CA5 FE                MOV     R6,A
811CA6 7F02              MOV     R7,#02H
811CA8 FD                MOV     R5,A
811CA9 901871            MOV     DPTR,#Result
811CAC E0                MOVX    A,@DPTR
811CAD FA                MOV     R2,A
811CAE A3                INC     DPTR
811CAF E0                MOVX    A,@DPTR
811CB0 F9                MOV     R1,A
811CB1 7B00              MOV     R3,#?C?XDATASEG
811CB3 A5128008A6        ECALL   ?C?MEMSET
  344: 					Result->State = DownMsgBuf[ i + 5 ];//状态码
811CB8 901873            MOV     DPTR,#i
811CBB E0                MOVX    A,@DPTR
811CBC FF                MOV     R7,A
811CBD 245E              ADD     A,#LOW DownMsgBuf+05H
811CBF F582              MOV     DPL,A
811CC1 E4                CLR     A
811CC2 342D              ADDC    A,#HIGH DownMsgBuf+05H
811CC4 F583              MOV     DPH,A
811CC6 E0                MOVX    A,@DPTR
811CC7 FE                MOV     R6,A
811CC8 901871            MOV     DPTR,#Result
811CCB E0                MOVX    A,@DPTR
811CCC FC                MOV     R4,A
811CCD A3                INC     DPTR
811CCE E0                MOVX    A,@DPTR
811CCF FD                MOV     R5,A
811CD0 2404              ADD     A,#04H
811CD2 F582              MOV     DPL,A
811CD4 E4                CLR     A
811CD5 3C                ADDC    A,R4
811CD6 F583              MOV     DPH,A
811CD8 EE                MOV     A,R6
811CD9 F0                MOVX    @DPTR,A
  345: 					Result->Param[0] = DownMsgBuf[ i + 4 ];//货道号
811CDA 745D              MOV     A,#LOW DownMsgBuf+04H
811CDC 2F                ADD     A,R7
811CDD F582              MOV     DPL,A
811CDF E4                CLR     A
811CE0 342D              ADDC    A,#HIGH DownMsgBuf+04H
811CE2 F583              MOV     DPH,A
811CE4 E0                MOVX    A,@DPTR
811CE5 FF                MOV     R7,A
811CE6 ED                MOV     A,R5
811CE7 2406              ADD     A,#06H
811CE9 F582              MOV     DPL,A
811CEB E4                CLR     A
811CEC 3C                ADDC    A,R4
811CED F583              MOV     DPH,A
811CEF EF                MOV     A,R7
811CF0 F0                MOVX    @DPTR,A
  346: 					Result->Param[1] = DownMsgBuf[ i + 2 ];//包序列号
811CF1 901873            MOV     DPTR,#i
811CF4 E0                MOVX    A,@DPTR
811CF5 245B              ADD     A,#LOW DownMsgBuf+02H
811CF7 F582              MOV     DPL,A
811CF9 E4                CLR     A
811CFA 342D              ADDC    A,#HIGH DownMsgBuf+02H
811CFC F583              MOV     DPH,A
811CFE E0                MOVX    A,@DPTR
811CFF FF                MOV     R7,A
811D00 ED                MOV     A,R5
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 740


811D01 2407              ADD     A,#07H
811D03 F582              MOV     DPL,A
811D05 E4                CLR     A
811D06 3C                ADDC    A,R4
811D07 F583              MOV     DPH,A
811D09 EF                MOV     A,R7
811D0A F0                MOVX    @DPTR,A
  347: 					
  348: 				//	memset( DownMsgBuf + GoodsPacketLen - i - 8, 0, i + 8 );
  349: 				//	GoodsPacketLen = GoodsPacketLen - i - 8;	
  350: 			#ifdef _DEBUG_TRACE
  351: 					Trace( "\n Channel Return Unpack = " );		
  352: 					for( j = 0; j < 8  ; j ++ )
  353: 						Trace( " %02bx", DownMsgBuf[ i + j ] );							
  354: 			#endif
  355: 					//除去前面的所有字节应答包
  356: 					for( sum = 0; sum < i + 8; sum++ )
811D0B E4                CLR     A
811D0C FF                MOV     R7,A
811D0D         ?C0084?PROCOTOL:
811D0D 901873            MOV     DPTR,#i
811D10 E0                MOVX    A,@DPTR
811D11 2408              ADD     A,#08H
811D13 FD                MOV     R5,A
811D14 E4                CLR     A
811D15 33                RLC     A
811D16 FC                MOV     R4,A
811D17 EF                MOV     A,R7
811D18 C3                CLR     C
811D19 9D                SUBB    A,R5
811D1A EC                MOV     A,R4
811D1B 6480              XRL     A,#080H
811D1D F8                MOV     R0,A
811D1E 7480              MOV     A,#080H
811D20 98                SUBB    A,R0
811D21 500F              JNC     ?C0085?PROCOTOL
  357: 						DownMsgBuf[ sum ] = 0x00;
811D23 7459              MOV     A,#LOW DownMsgBuf
811D25 2F                ADD     A,R7
811D26 F582              MOV     DPL,A
811D28 E4                CLR     A
811D29 342D              ADDC    A,#HIGH DownMsgBuf
811D2B F583              MOV     DPH,A
811D2D E4                CLR     A
811D2E F0                MOVX    @DPTR,A
811D2F 0F                INC     R7
811D30 80DB              SJMP    ?C0084?PROCOTOL
811D32         ?C0085?PROCOTOL:
  358: 
  359: 					return 1;
811D32 7F01              MOV     R7,#01H
811D34 800B              SJMP    ?C0087?PROCOTOL
  360: 				}													
  361: 			}											
  362: 		}
  363: 	}
811D36         ?C0077?PROCOTOL:
811D36 901873            MOV     DPTR,#i
811D39 E0                MOVX    A,@DPTR
811D3A 04                INC     A
811D3B F0                MOVX    @DPTR,A
811D3C 021C12            LJMP    ?C0075?PROCOTOL
811D3F         ?C0076?PROCOTOL:
  364: 	return 0;
811D3F 7F00              MOV     R7,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 741


  365: }
811D41         ?C0087?PROCOTOL:
811D41 A522              ERET    
----- FUNCTION _ZhkChannelFrameUnPack (END) -------


----- FUNCTION ZhkSerial1GetCh (BEGIN) -----
 FILE: 'Serial1.C'
  100: uchar ZhkSerial1GetCh( void )
  101: {
  102: 	uchar data ch;
  103: 	ch = ZhkSerial1RxBuf[ ZhkSerial1RxBufRd ];
811D43 74D3              MOV     A,#LOW ZhkSerial1RxBuf
811D45 254B              ADD     A,ZhkSerial1RxBufRd
811D47 F582              MOV     DPL,A
811D49 E4                CLR     A
811D4A 342C              ADDC    A,#HIGH ZhkSerial1RxBuf
811D4C F583              MOV     DPH,A
811D4E E0                MOVX    A,@DPTR
811D4F F530              MOV     ch,A
  104: 	if ( ZhkDataBit < 8 )
811D51 902D53            MOV     DPTR,#ZhkSerial1Param
811D54 E0                MOVX    A,@DPTR
811D55 C3                CLR     C
811D56 9408              SUBB    A,#08H
811D58 5003              JNC     ?C0012?SERIAL1
  105: 	{
  106: 		ch &= ~( 1 << 7 );
811D5A 53307F            ANL     ch,#07FH
  107: 	}
811D5D         ?C0012?SERIAL1:
  108: 	ZhkSerial1RxBufRd ++;
811D5D 054B              INC     ZhkSerial1RxBufRd
  109: 	if ( ZhkSerial1RxBufRd >= ZHKSERIAL1RXBUFLEN ) ZhkSerial1RxBufRd = 0;
811D5F E54B              MOV     A,ZhkSerial1RxBufRd
811D61 C3                CLR     C
811D62 9480              SUBB    A,#080H
811D64 4003              JC      ?C0013?SERIAL1
811D66 E4                CLR     A
811D67 F54B              MOV     ZhkSerial1RxBufRd,A
811D69         ?C0013?SERIAL1:
  110: 	ZhkHardSetRTS();
811D69 C2B4              CLR     PinRTS
  111: //	Trace( "ZhkSerial1GetCh=%bxH\n",ch );
  112: 	return ch;
811D6B AF30              MOV     R7,ch
  113: 	
  114: }
811D6D         ?C0014?SERIAL1:
811D6D A522              ERET    
----- FUNCTION ZhkSerial1GetCh (END) -------


----- FUNCTION ZhkChannelMsgProcess (BEGIN) -----
 FILE: 'scheduler.c'
 1601: u_char ZhkChannelMsgProcess( void )
 1602: {
 1603: 	struct COMMTASK xdata AckTask;
 1604: 	
 1605: 	memcpy( &AckTask, &CurrentTask, sizeof( struct COMMTASK ) );
811D6F 784B              MOV     R0,#LOW AckTask
811D71 7C18              MOV     R4,#HIGH AckTask
811D73 7D00              MOV     R5,#?C?XDATASEG
811D75 7B00              MOV     R3,#?C?XDATASEG
811D77 7A28              MOV     R2,#HIGH CurrentTask
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 742


811D79 79A5              MOV     R1,#LOW CurrentTask
811D7B 7E00              MOV     R6,#00H
811D7D 7F26              MOV     R7,#026H
811D7F A51280052D        ECALL   ?C?COPY
 1606: 	if ( ZhkChannelFrameUnPack( &AckTask ) == 0 ) 
811D84 7E18              MOV     R6,#HIGH AckTask
811D86 7F4B              MOV     R7,#LOW AckTask
811D88 A512811BC1        ECALL   _ZhkChannelFrameUnPack
811D8D EF                MOV     A,R7
811D8E 7003              JNZ     ?C0295?SCHEDULER
 1607: 		return 0;		
811D90 FF                MOV     R7,A
811D91 804A              SJMP    ?C0296?SCHEDULER
811D93         ?C0295?SCHEDULER:
 1608: 	if( AckTask.Cmd == CHANNEL_QUERY )//查询指令不能比较货道编号
811D93 90184D            MOV     DPTR,#AckTask+02H
811D96 E0                MOVX    A,@DPTR
811D97 B4511C            CJNE    A,#051H,?C0297?SCHEDULER
 1609: 	{
 1610: 		Channel.State         = AckTask.State;
811D9A 90184F            MOV     DPTR,#AckTask+04H
811D9D E0                MOVX    A,@DPTR
811D9E 9023B8            MOV     DPTR,#Channel+03H
811DA1 F0                MOVX    @DPTR,A
 1611: 		Channel.ExtState[ 0 ] = AckTask.Param[ 0 ];//货道序列号
811DA2 901851            MOV     DPTR,#AckTask+06H
811DA5 E0                MOVX    A,@DPTR
811DA6 9023B9            MOV     DPTR,#Channel+04H
811DA9 F0                MOVX    @DPTR,A
 1612: 		Channel.ExtState[ 1 ] = AckTask.Param[ 1 ];//包序列号
811DAA 901852            MOV     DPTR,#AckTask+07H
811DAD E0                MOVX    A,@DPTR
811DAE 9023BA            MOV     DPTR,#Channel+05H
811DB1 F0                MOVX    @DPTR,A
 1613: 		return 1;
811DB2 7F01              MOV     R7,#01H
811DB4 8027              SJMP    ?C0296?SCHEDULER
 1614: 	}
811DB6         ?C0297?SCHEDULER:
 1615: 	if( CurrentTask.Param[ 0 ] == AckTask.Param[ 0 ] )
811DB6 901851            MOV     DPTR,#AckTask+06H
811DB9 E0                MOVX    A,@DPTR
811DBA FF                MOV     R7,A
811DBB 9028AB            MOV     DPTR,#CurrentTask+06H
811DBE E0                MOVX    A,@DPTR
811DBF B50715            CJNE    A,AR7,?C0298?SCHEDULER
 1616: 	{
 1617: 		Channel.State         = AckTask.State;
811DC2 90184F            MOV     DPTR,#AckTask+04H
811DC5 E0                MOVX    A,@DPTR
811DC6 9023B8            MOV     DPTR,#Channel+03H
811DC9 F0                MOVX    @DPTR,A
 1618: 		Channel.ExtState[ 0 ] = AckTask.Param[ 0 ];//货道序列号
811DCA A3                INC     DPTR
811DCB EF                MOV     A,R7
811DCC F0                MOVX    @DPTR,A
 1619: 		Channel.ExtState[ 1 ] = AckTask.Param[ 1 ];//包序列号
811DCD 901852            MOV     DPTR,#AckTask+07H
811DD0 E0                MOVX    A,@DPTR
811DD1 9023BA            MOV     DPTR,#Channel+05H
811DD4 F0                MOVX    @DPTR,A
 1620: 	//	Channel.CommState     = COMM_COMMOK;
 1621: 	}
811DD5 8004              SJMP    ?C0299?SCHEDULER
811DD7         ?C0298?SCHEDULER:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 743


 1622: 	else
 1623: 		return 0;
811DD7 7F00              MOV     R7,#00H
811DD9 8002              SJMP    ?C0296?SCHEDULER
811DDB         ?C0299?SCHEDULER:
 1624: 	return 1;
811DDB 7F01              MOV     R7,#01H
 1625: 	
 1626: }
811DDD         ?C0296?SCHEDULER:
811DDD A522              ERET    
----- FUNCTION ZhkChannelMsgProcess (END) -------


----- FUNCTION _ZhkChannelTask (BEGIN) -----
 FILE: 'scheduler.c'
 1422: bit ZhkChannelTask( struct COMMTASK xdata* TaskTemp )
 1423: {
811DDF 901849            MOV     DPTR,#TaskTemp
811DE2 EE                MOV     A,R6
811DE3 F0                MOVX    @DPTR,A
811DE4 A3                INC     DPTR
811DE5 EF                MOV     A,R7
811DE6 F0                MOVX    @DPTR,A
 1424: 	u_char data StateTemp;
 1425: 
 1426: 	switch( ZhkSchedulerState )
811DE7 9023CA            MOV     DPTR,#ZhkSchedulerState
811DEA E0                MOVX    A,@DPTR
811DEB 7003              JNZ     $ + 5H
811DED 021F40            LJMP    ?C0258?SCHEDULER
811DF0 24FE              ADD     A,#0FEH
811DF2 6046              JZ      ?C0263?SCHEDULER
811DF4 14                DEC     A
811DF5 7003              JNZ     $ + 5H
811DF7 021EBD            LJMP    ?C0274?SCHEDULER
811DFA 14                DEC     A
811DFB 7003              JNZ     $ + 5H
811DFD 021EFC            LJMP    ?C0279?SCHEDULER
811E00 14                DEC     A
811E01 7003              JNZ     $ + 5H
811E03 021F1F            LJMP    ?C0280?SCHEDULER
811E06 2404              ADD     A,#04H
811E08 6003              JZ      $ + 5H
811E0A 021F3B            LJMP    ?C0281?SCHEDULER
 1427: 	{
 1428: 	case TASK_NULL:
 1429: 		break;
 1430: 	case TASK_REDAY:		
811E0D         ?C0260?SCHEDULER:
 1431: 		ZhkChannelSwitch( EQUIP_CHANNEL );		
811E0D 7F0D              MOV     R7,#0DH
811E0F A512811F43        ECALL   _ZhkChannelSwitch
 1432: 		if ( ZhkChannelTxMsg( TaskTemp ) )
811E14 A512810F96        ECALL   ?L?COM0032
811E19 9023CA            MOV     DPTR,#ZhkSchedulerState
811E1C 5005              JNC     ?C0261?SCHEDULER
 1433: 			ZhkSchedulerState = TASK_WAIT;
811E1E 7402              MOV     A,#02H
811E20 F0                MOVX    @DPTR,A
811E21 8003              SJMP    ?C0262?SCHEDULER
811E23         ?C0261?SCHEDULER:
 1434: 		else
 1435: 			ZhkSchedulerState = TASK_FINISH;
811E23 7404              MOV     A,#04H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 744


811E25 F0                MOVX    @DPTR,A
811E26         ?C0262?SCHEDULER:
 1436: 		
 1437: 		ZhkDownMsgAckTimer  = 800;
811E26 751103            MOV     ZhkDownMsgAckTimer,#03H
811E29 751220            MOV     ZhkDownMsgAckTimer+01H,#020H
 1438: 		Channel.CommState = COMM_BUZY;
811E2C 9023B7            MOV     DPTR,#Channel+02H
811E2F 7401              MOV     A,#01H
811E31 F0                MOVX    @DPTR,A
 1439: 		Channel.ExtState[2] = 0;
811E32 E4                CLR     A
811E33 9023BB            MOV     DPTR,#Channel+06H
811E36 F0                MOVX    @DPTR,A
 1440: 		break;	
811E37 021F40            LJMP    ?C0258?SCHEDULER
 1441: 	case TASK_WAIT:
811E3A         ?C0263?SCHEDULER:
 1442: 		StateTemp = ZhkChannelMsgProcess();
811E3A A512811D6F        ECALL   ZhkChannelMsgProcess
811E3F 8F2A              MOV     StateTemp,R7
 1443: 		if ( StateTemp == 1 )
811E41 E52A              MOV     A,StateTemp
811E43 6401              XRL     A,#01H
811E45 7033              JNZ     ?C0264?SCHEDULER
 1444: 		{
 1445: 			if( ( TaskTemp->Cmd == CHANNEL_EXEC ) || ( TaskTemp->Cmd == CHANNEL_TEST ) )
811E47 901849            MOV     DPTR,#TaskTemp
811E4A E0                MOVX    A,@DPTR
811E4B FE                MOV     R6,A
811E4C A3                INC     DPTR
811E4D E0                MOVX    A,@DPTR
811E4E F582              MOV     DPL,A
811E50 8E83              MOV     DPH,R6
811E52 A3                INC     DPTR
811E53 A3                INC     DPTR
811E54 E0                MOVX    A,@DPTR
811E55 FF                MOV     R7,A
811E56 6450              XRL     A,#050H
811E58 6004              JZ      ?C0266?SCHEDULER
811E5A EF                MOV     A,R7
811E5B B45215            CJNE    A,#052H,?C0265?SCHEDULER
811E5E         ?C0266?SCHEDULER:
 1446: 			{
 1447: 			//等来了命令ACK，还要等命令执行结果啦
 1448: //				Trace("\n return command ACK");
 1449: 				Channel.ExtState[2] = 1;
811E5E 9023BB            MOV     DPTR,#Channel+06H
811E61 7401              MOV     A,#01H
811E63 F0                MOVX    @DPTR,A
 1450: 				ZhkSchedulerState = TASK_REWAIT;
811E64 9023CA            MOV     DPTR,#ZhkSchedulerState
811E67 7403              MOV     A,#03H
811E69 F0                MOVX    @DPTR,A
 1451: 				ZhkDownMsgAckTimer = 1500;				
811E6A 751105            MOV     ZhkDownMsgAckTimer,#05H
811E6D 7512DC            MOV     ZhkDownMsgAckTimer+01H,#0DCH
 1452: 			}	
811E70 021F40            LJMP    ?C0258?SCHEDULER
811E73         ?C0265?SCHEDULER:
 1453: 			else
 1454: 			{
 1455: 				ZhkDownMsgAckTimer = 0;
811E73 E4                CLR     A
811E74 F511              MOV     ZhkDownMsgAckTimer,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 745


811E76 F512              MOV     ZhkDownMsgAckTimer+01H,A
 1456: 				ZhkSchedulerState = TASK_FINISH;
 1457: 			}
 1458: 			break;
811E78 806C              SJMP    ?C0348?SCHEDULER
 1459: 		}
811E7A         ?C0264?SCHEDULER:
 1460: 		if ( ZhkDownMsgAckTimer == 0 )
811E7A E512              MOV     A,ZhkDownMsgAckTimer+01H
811E7C 4511              ORL     A,ZhkDownMsgAckTimer
811E7E 6003              JZ      $ + 5H
811E80 021F40            LJMP    ?C0258?SCHEDULER
 1461: 		{
 1462: 			if( ( TaskTemp->Cmd == CHANNEL_EXEC ) || ( TaskTemp->Cmd == CHANNEL_TEST ) )
811E83 901849            MOV     DPTR,#TaskTemp
811E86 E0                MOVX    A,@DPTR
811E87 FE                MOV     R6,A
811E88 A3                INC     DPTR
811E89 E0                MOVX    A,@DPTR
811E8A F582              MOV     DPL,A
811E8C 8E83              MOV     DPH,R6
811E8E A3                INC     DPTR
811E8F A3                INC     DPTR
811E90 E0                MOVX    A,@DPTR
811E91 FF                MOV     R7,A
811E92 6450              XRL     A,#050H
811E94 6004              JZ      ?C0270?SCHEDULER
811E96 EF                MOV     A,R7
811E97 B45208            CJNE    A,#052H,?C0269?SCHEDULER
811E9A         ?C0270?SCHEDULER:
 1463: 			{
 1464: 				//超时确没有命令ACK回应，只能重来了
 1465: //				Trace("\n no return command ACK");
 1466: 				if( Channel.ExtState[2] == 0)
811E9A 9023BB            MOV     DPTR,#Channel+06H
811E9D E0                MOVX    A,@DPTR
811E9E 7002              JNZ     ?C0269?SCHEDULER
 1467: 				{
 1468: 					ZhkSchedulerState = TASK_ERROR;
 1469: 					break;
811EA0 8052              SJMP    ?C0349?SCHEDULER
 1470: 				}
 1471: 			}
811EA2         ?C0269?SCHEDULER:
 1472: 			//如果是查询或清零命令，则可直接重试一次
 1473: 			Channel.Sn --;
811EA2 9023B6            MOV     DPTR,#Channel+01H
811EA5 E0                MOVX    A,@DPTR
811EA6 14                DEC     A
811EA7 F0                MOVX    @DPTR,A
 1474: 			if ( ZhkChannelTxMsg( TaskTemp ) )
811EA8 A512810F96        ECALL   ?L?COM0032
811EAD 9023CA            MOV     DPTR,#ZhkSchedulerState
811EB0 5037              JNC     ?C0350?SCHEDULER
 1475: 			{
 1476: 				ZhkSchedulerState = TASK_REWAIT;
811EB2 7403              MOV     A,#03H
811EB4 F0                MOVX    @DPTR,A
 1477: 				ZhkDownMsgAckTimer = 800;
811EB5 F511              MOV     ZhkDownMsgAckTimer,A
811EB7 751220            MOV     ZhkDownMsgAckTimer+01H,#020H
 1478: 			}
811EBA 021F40            LJMP    ?C0258?SCHEDULER
 1479: 			else
 1480: 				ZhkSchedulerState = TASK_FINISH;					
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 746


 1481: 		}		
 1482: 		break;		
 1483: 	case TASK_REWAIT:
811EBD         ?C0274?SCHEDULER:
 1484: 		StateTemp = ZhkChannelMsgProcess();
811EBD A512811D6F        ECALL   ZhkChannelMsgProcess
811EC2 8F2A              MOV     StateTemp,R7
 1485: 		if ( StateTemp == 1 )
811EC4 E52A              MOV     A,StateTemp
811EC6 B40125            CJNE    A,#01H,?C0275?SCHEDULER
 1486: 		{
 1487: //			Trace("\n return mission ACK");
 1488: 			if( ( TaskTemp->Cmd == CHANNEL_EXEC ) || ( TaskTemp->Cmd == CHANNEL_TEST ) )			
811EC9 901849            MOV     DPTR,#TaskTemp
811ECC E0                MOVX    A,@DPTR
811ECD FE                MOV     R6,A
811ECE A3                INC     DPTR
811ECF E0                MOVX    A,@DPTR
811ED0 F582              MOV     DPL,A
811ED2 8E83              MOV     DPH,R6
811ED4 A3                INC     DPTR
811ED5 A3                INC     DPTR
811ED6 E0                MOVX    A,@DPTR
811ED7 FF                MOV     R7,A
811ED8 6450              XRL     A,#050H
811EDA 6004              JZ      ?C0277?SCHEDULER
811EDC EF                MOV     A,R7
811EDD B45206            CJNE    A,#052H,?C0276?SCHEDULER
811EE0         ?C0277?SCHEDULER:
 1489: 				Channel.ExtState[2] = 2;				
811EE0 9023BB            MOV     DPTR,#Channel+06H
811EE3 7402              MOV     A,#02H
811EE5 F0                MOVX    @DPTR,A
811EE6         ?C0276?SCHEDULER:
 1490: 			ZhkSchedulerState = TASK_FINISH;
811EE6         
811EE6 9023CA            MOV     DPTR,#ZhkSchedulerState
811EE9         
811EE9 7404              MOV     A,#04H
811EEB F0                MOVX    @DPTR,A
 1491: 			break;
811EEC 8052              SJMP    ?C0258?SCHEDULER
 1492: 		}
811EEE         ?C0275?SCHEDULER:
 1493: 		if ( ZhkDownMsgAckTimer == 0 )
811EEE E512              MOV     A,ZhkDownMsgAckTimer+01H
811EF0 4511              ORL     A,ZhkDownMsgAckTimer
811EF2 704C              JNZ     ?C0258?SCHEDULER
 1494: 		{
 1495: 			ZhkSchedulerState = TASK_ERROR;
811EF4         
811EF4 9023CA            MOV     DPTR,#ZhkSchedulerState
811EF7 7405              MOV     A,#05H
811EF9 F0                MOVX    @DPTR,A
 1496: 		}
 1497: 		break;		
811EFA 8044              SJMP    ?C0258?SCHEDULER
 1498: 	case TASK_FINISH:
811EFC         ?C0279?SCHEDULER:
 1499: 		ZhkSchedulerState = TASK_NULL; 		
811EFC E4                CLR     A
811EFD 9023CA            MOV     DPTR,#ZhkSchedulerState
811F00 F0                MOVX    @DPTR,A
 1500: 		Channel.CommState   = COMM_COMMOK;
811F01 9023B7            MOV     DPTR,#Channel+02H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 747


811F04 7404              MOV     A,#04H
811F06 F0                MOVX    @DPTR,A
 1501: 		memset( &CurrentTask, 0, sizeof( struct COMMTASK ) );
811F07 7E00              MOV     R6,#00H
811F09 7F26              MOV     R7,#026H
811F0B 7D00              MOV     R5,#00H
811F0D 7B00              MOV     R3,#?C?XDATASEG
811F0F 7A28              MOV     R2,#HIGH CurrentTask
811F11 79A5              MOV     R1,#LOW CurrentTask
811F13 A5128008A6        ECALL   ?C?MEMSET
 1502: 		ZhkDownMsgAckTimer = 0;
811F18 E4                CLR     A
811F19 F511              MOV     ZhkDownMsgAckTimer,A
811F1B F512              MOV     ZhkDownMsgAckTimer+01H,A
 1503: 		break;
811F1D 8021              SJMP    ?C0258?SCHEDULER
 1504: 	case TASK_ERROR:
811F1F         ?C0280?SCHEDULER:
 1505: 		Channel.CommState = COMM_TIMEOUT;// | COMM_COMMOK;
811F1F 9023B7            MOV     DPTR,#Channel+02H
811F22 7402              MOV     A,#02H
811F24 F0                MOVX    @DPTR,A
 1506: 		ZhkSchedulerState   = TASK_NULL; 
811F25 E4                CLR     A
811F26 9023CA            MOV     DPTR,#ZhkSchedulerState
811F29 F0                MOVX    @DPTR,A
 1507: 		memset( &CurrentTask, 0, sizeof( struct COMMTASK ) );
811F2A FE                MOV     R6,A
811F2B 7F26              MOV     R7,#026H
811F2D FD                MOV     R5,A
811F2E 7B00              MOV     R3,#?C?XDATASEG
811F30 7A28              MOV     R2,#HIGH CurrentTask
811F32 79A5              MOV     R1,#LOW CurrentTask
811F34 A5128008A6        ECALL   ?C?MEMSET
 1508: 		break;
811F39 8005              SJMP    ?C0258?SCHEDULER
 1509: 	default:
811F3B         ?C0281?SCHEDULER:
 1510: 		ZhkSchedulerState = TASK_NULL;
811F3B E4                CLR     A
811F3C 9023CA            MOV     DPTR,#ZhkSchedulerState
811F3F F0                MOVX    @DPTR,A
 1511: 	}
811F40         ?C0258?SCHEDULER:
 1512: 	return 1;
811F40 D3                SETB    C
 1513: }
811F41         ?C0282?SCHEDULER:
811F41 A522              ERET    
----- FUNCTION _ZhkChannelTask (END) -------


----- FUNCTION _ZhkChannelSwitch (BEGIN) -----
 FILE: 'scheduler.c'
 1866: void ZhkChannelSwitch( uchar type )
 1867: {
;---- Variable 'type' assigned to Register 'R7' ----
 1868: 	//Trace( "ZhkChannelSwitch(%bd)\n" , type );
 1869: 	ES1R = 0;
811F43 C2E8              CLR     ES1R
 1870: 	switch( type )
811F45 EF                MOV     A,R7
811F46 24FE              ADD     A,#0FEH
811F48 602F              JZ      ?C0316?SCHEDULER
811F4A 14                DEC     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 748


811F4B 603C              JZ      ?C0317?SCHEDULER
811F4D 24FB              ADD     A,#0FBH
811F4F 6018              JZ      ?C0315?SCHEDULER
811F51 24FB              ADD     A,#0FBH
811F53 6044              JZ      ?C0320?SCHEDULER
811F55 2406              ADD     A,#06H
811F57 705A              JNZ     ?C0313?SCHEDULER
 1871: 	{
 1872: 	case EQUIP_LCD:	
811F59         ?C0314?SCHEDULER:
 1873: 	//	ZhkHardSerialSwitch( 3 );
 1874: 		ZhkBusSerialInit();
811F59 A5128072D7        ECALL   ZhkBusSerialInit
 1875: 		DelayMs( 2 );
811F5E 7F02              MOV     R7,#02H
811F60 A512809789        ECALL   _DelayMs
 1876: 		ZhkHardSerialSwitch( 2 );
811F65 7F02              MOV     R7,#02H
 1877: 		DelayMs( 2 );
 1878: 		break;
811F67 803E              SJMP    ?C0355?SCHEDULER
 1879: 	case EQUIP_HOPPER:
811F69         ?C0315?SCHEDULER:
 1880: //	case EQUIP_HUB:	
 1881: //		ZhkHardSerialSwitch( 3 );
 1882: 		ZhkBusSerialInit();
811F69 A5128072D7        ECALL   ZhkBusSerialInit
 1883: 		DelayMs( 2 );
811F6E 7F02              MOV     R7,#02H
811F70 A512809789        ECALL   _DelayMs
 1884: 		ZhkHardSerialSwitch( 4 );
811F75 7F04              MOV     R7,#04H
811F77         
 1885: 		DelayMs( 2 );
 1886: 		break;
811F77 802E              SJMP    ?C0355?SCHEDULER
 1887: 	case EQUIP_CASHER:	
811F79         ?C0316?SCHEDULER:
 1888: 	//	ZhkHardSerialSwitch( 3 );
 1889: 		ZhkCasherSerialInit();
811F79 A51280709C        ECALL   ZhkCasherSerialInit
 1890: 		DelayMs( 2 );
811F7E 7F02              MOV     R7,#02H
811F80 A512809789        ECALL   _DelayMs
 1891: 		ZhkHardSerialSwitch( 0 );
811F85 E4                CLR     A
811F86 FF                MOV     R7,A
811F87         
 1892: 		DelayMs( 2 );
 1893: 		break;
811F87 801E              SJMP    ?C0355?SCHEDULER
 1894: 	case EQUIP_COINER:
811F89         ?C0317?SCHEDULER:
 1895: 		ZhkBusSerialInit();
811F89 A5128072D7        ECALL   ZhkBusSerialInit
 1896: 		DelayMs( 2 );
811F8E 7F02              MOV     R7,#02H
811F90 A512809789        ECALL   _DelayMs
 1897: //		ZhkHardSerialSwitch( 6 );//HUB板上J8口
 1898: 		ZhkHardSerialSwitch( 1 );
811F95 7F01              MOV     R7,#01H
811F97         
 1899: 		DelayMs( 2 );		
 1900: 		break;	
811F97 800E              SJMP    ?C0355?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 749


 1901: 	case EQUIP_POWER:
 1902: 	case EQUIP_MODE:
 1903: 		break;
 1904: 	case EQUIP_CHANNEL:	//主板扩展口
811F99         ?C0320?SCHEDULER:
 1905: //		ZhkHardSerialSwitch( 0 );
 1906: 		ZhkBusSerialInit();
811F99 A5128072D7        ECALL   ZhkBusSerialInit
 1907: 		DelayMs( 2 );
811F9E 7F02              MOV     R7,#02H
811FA0 A512809789        ECALL   _DelayMs
 1908: 		ZhkHardSerialSwitch( 3 );
811FA5 7F03              MOV     R7,#03H
811FA7         
811FA7 A512811FB7        ECALL   _ZhkHardSerialSwitch
 1909: 		DelayMs( 2 );
811FAC 7F02              MOV     R7,#02H
811FAE A512809789        ECALL   _DelayMs
 1910: 		break;		
 1911: 	}
811FB3         ?C0313?SCHEDULER:
 1912: 	ES1R = 1;
811FB3 D2E8              SETB    ES1R
 1913: }
811FB5 A522              ERET    
----- FUNCTION _ZhkChannelSwitch (END) -------


----- FUNCTION _ZhkHardSerialSwitch (BEGIN) -----
 FILE: 'device.c'
    9: void ZhkHardSerialSwitch( uchar Route )
   10: {
;---- Variable 'Route' assigned to Register 'R7' ----
   11: //	uchar data P0State;
   12: 	ZhkHardSramSelect();
811FB7 759008            MOV     P1,#08H
   13: 	Route              &= 0x07;
811FBA EF                MOV     A,R7
811FBB 5407              ANL     A,#07H
   14: 	ZhkHardIOOutputReg &= 0xF8;
811FBD 534EF8            ANL     ZhkHardIOOutputReg,#0F8H
   15: 	ZhkHardIOOutputReg |= Route;
811FC0 424E              ORL     ZhkHardIOOutputReg,A
   16: 	EA = 0;
811FC2 C2AF              CLR     EA
   17: 	ZhkHardNullSelect();
811FC4 759004            MOV     P1,#04H
   18: 	P0 = ZhkHardIOOutputReg;
811FC7 854E80            MOV     P0,ZhkHardIOOutputReg
   19: 	ZhkHardIOOutputSelect();
811FCA 759014            MOV     P1,#014H
   20: //	P0State = P0;
   21: 	_nop_();
811FCD 00                NOP     
   22: 	_nop_();
811FCE 00                NOP     
   23: 	ZhkHardOutputLock();
811FCF 759008            MOV     P1,#08H
   24: 	EA = 1;
811FD2 D2AF              SETB    EA
   25: //	Trace( "ZhkHardIOOutputReg=%bxH\n" , ZhkHardIOOutputReg );
   26: //	Trace( "P0State=%bxH\n" , P0State );
   27: }
811FD4 A522              ERET    
----- FUNCTION _ZhkHardSerialSwitch (END) -------
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 750




----- FUNCTION _TestDeviceException (BEGIN) -----
 FILE: 'scheduler.c'
  808: uchar TestDeviceException( struct DEVICE xdata* Device )
  809: {
;---- Variable 'Device' assigned to Register 'R6/R7' ----
  810: 	if( ( Device == &Hopper1 ) || ( Device == &Hopper2 ) || ( Device == &Hopper3 ) )
  811: 	{		
811FD6 7475              MOV     A,#LOW Hopper1
811FD8 6F                XRL     A,R7
811FD9 7003              JNZ     ?C0322?SCHEDULER
811FDB 7423              MOV     A,#HIGH Hopper1
811FDD 6E                XRL     A,R6
811FDE         ?C0322?SCHEDULER:
811FDE 6014              JZ      ?C0163?SCHEDULER
811FE0 748A              MOV     A,#LOW Hopper2
811FE2 6F                XRL     A,R7
811FE3 7003              JNZ     ?C0323?SCHEDULER
811FE5 7423              MOV     A,#HIGH Hopper2
811FE7 6E                XRL     A,R6
811FE8         ?C0323?SCHEDULER:
811FE8 600A              JZ      ?C0163?SCHEDULER
811FEA 749F              MOV     A,#LOW Hopper3
811FEC 6F                XRL     A,R7
811FED 7003              JNZ     ?C0324?SCHEDULER
811FEF 7423              MOV     A,#HIGH Hopper3
811FF1 6E                XRL     A,R6
811FF2         ?C0324?SCHEDULER:
811FF2 7018              JNZ     ?C0162?SCHEDULER
811FF4         ?C0163?SCHEDULER:
  812: 		if( ( Device->State & 0x16 ) || ( Device->State == 0 ) )
  813: 			return 0;//正常
811FF4 8F82              MOV     DPL,R7
811FF6 8E83              MOV     DPH,R6
811FF8 A3                INC     DPTR
811FF9 A3                INC     DPTR
811FFA A3                INC     DPTR
811FFB E0                MOVX    A,@DPTR
811FFC FD                MOV     R5,A
811FFD 5416              ANL     A,#016H
811FFF 7003              JNZ     ?C0165?SCHEDULER
812001 ED                MOV     A,R5
812002 7004              JNZ     ?C0164?SCHEDULER
812004         ?C0165?SCHEDULER:
  814: 		else
812004 7F00              MOV     R7,#00H
812006 800F              SJMP    ?C0166?SCHEDULER
812008         ?C0164?SCHEDULER:
  815: 			return 1;//故障
812008 7F01              MOV     R7,#01H
81200A 800B              SJMP    ?C0166?SCHEDULER
  816: 	}
81200C         ?C0162?SCHEDULER:
  817: 	else
  818: 		return( Device->State & 0x40 );
81200C 8F82              MOV     DPL,R7
81200E 8E83              MOV     DPH,R6
812010 A3                INC     DPTR
812011 A3                INC     DPTR
812012 A3                INC     DPTR
812013 E0                MOVX    A,@DPTR
812014 5440              ANL     A,#040H
812016 FF                MOV     R7,A
  819: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 751


812017         ?C0166?SCHEDULER:
812017 A522              ERET    
----- FUNCTION _TestDeviceException (END) -------


----- FUNCTION _HopperOutput (BEGIN) -----
 FILE: 'scheduler.c'
  853: bit HopperOutput( uchar HopperNum , uint CoinAmount )
  854: {
812019 901743            MOV     DPTR,#CoinAmount
81201C EC                MOV     A,R4
81201D F0                MOVX    @DPTR,A
81201E A3                INC     DPTR
81201F ED                MOV     A,R5
812020 F0                MOVX    @DPTR,A
812021 901742            MOV     DPTR,#HopperNum
812024 EF                MOV     A,R7
812025 F0                MOVX    @DPTR,A
  855: 	struct COMMTASK xdata TaskTemp;
  856: //	Trace("\nHopperOutput");
  857: 	switch( HopperNum )
812026 24FE              ADD     A,#0FEH
812028 6042              JZ      ?C0182?SCHEDULER
81202A 14                DEC     A
81202B 6078              JZ      ?C0187?SCHEDULER
81202D 2402              ADD     A,#02H
81202F 6003              JZ      $ + 5H
812031 022105            LJMP    ?C0178?SCHEDULER
  858: 	{
  859: 	case 1:
812034         ?C0176?SCHEDULER:
  860: 		if ( Hopper1.CommState & COMM_BUZY ) 
812034 902377            MOV     DPTR,#Hopper1+02H
812037 E0                MOVX    A,@DPTR
812038 30E004            JNB     ACC.0,?C0177?SCHEDULER
  861: 			return 0;
81203B C3                CLR     C
81203C 022105            LJMP    ?C0178?SCHEDULER
81203F         ?C0177?SCHEDULER:
  862: 	//	Hopper1.CommState = COMM_BUZY;
  863: 		if ( HopperNum > 8 ) 
81203F 901742            MOV     DPTR,#HopperNum
812042 E0                MOVX    A,@DPTR
812043 D3                SETB    C
812044 9408              SUBB    A,#08H
812046 4003              JC      ?C0179?SCHEDULER
  864: 			return 0;
812048 022105            LJMP    ?C0178?SCHEDULER
81204B         ?C0179?SCHEDULER:
  865: 
  866: 		if( Hopper1.Sn < 255 )
81204B 902376            MOV     DPTR,#Hopper1+01H
81204E E0                MOVX    A,@DPTR
81204F C3                CLR     C
812050 94FF              SUBB    A,#0FFH
812052 5005              JNC     ?C0180?SCHEDULER
  867: 			Hopper1.Sn++;
812054 E0                MOVX    A,@DPTR
812055 04                INC     A
812056 F0                MOVX    @DPTR,A
812057 8005              SJMP    ?C0181?SCHEDULER
812059         ?C0180?SCHEDULER:
  868: 		else
  869: 			Hopper1.Sn = 0;
812059 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 752


81205A 902376            MOV     DPTR,#Hopper1+01H
81205D F0                MOVX    @DPTR,A
81205E         ?C0181?SCHEDULER:
  870: 
  871: 		TaskTemp.Id 		= ID_HOPPER1;
81205E E4                CLR     A
81205F 901746            MOV     DPTR,#TaskTemp+01H
812062 F0                MOVX    @DPTR,A
  872: 		TaskTemp.Cmd 		= HOPPER_OUTPUT ;
812063 A3                INC     DPTR
812064 7450              MOV     A,#050H
812066 F0                MOVX    @DPTR,A
  873: 		TaskTemp.Sn		= Hopper1.Sn;
812067 902376            MOV     DPTR,#Hopper1+01H
  874: 		TaskTemp.Priority       = PRIORITY1;
  875: 		TaskTemp.ParamLen	= 2;
  876: 		TaskTemp.Param[ 0 ] 	= CoinAmount % 256;
  877: 		TaskTemp.Param[ 1 ] 	= CoinAmount / 256;
  878: 
  879: 		return ZhkSchedulerAddTask( &TaskTemp );
81206A 806E              SJMP    ?C0343?SCHEDULER
  880: 		break;
  881: 	case 2:			
81206C         ?C0182?SCHEDULER:
  882: 		if ( Hopper2.CommState & COMM_BUZY ) 
81206C 90238C            MOV     DPTR,#Hopper2+02H
81206F E0                MOVX    A,@DPTR
812070 30E004            JNB     ACC.0,?C0183?SCHEDULER
  883: 			return 0;
812073 C3                CLR     C
812074 022105            LJMP    ?C0178?SCHEDULER
812077         ?C0183?SCHEDULER:
  884: 	//	Hopper2.CommState = COMM_BUZY;
  885: 		if ( HopperNum > 8 ) 
812077 901742            MOV     DPTR,#HopperNum
81207A E0                MOVX    A,@DPTR
81207B D3                SETB    C
81207C 9408              SUBB    A,#08H
81207E 4003              JC      ?C0184?SCHEDULER
  886: 			return 0;
812080         
812080 022105            LJMP    ?C0178?SCHEDULER
812083         ?C0184?SCHEDULER:
  887: 
  888: 		 if( Hopper2.Sn < 255 )
812083 90238B            MOV     DPTR,#Hopper2+01H
812086 E0                MOVX    A,@DPTR
812087 C3                CLR     C
812088 94FF              SUBB    A,#0FFH
81208A 5005              JNC     ?C0185?SCHEDULER
  889: 			Hopper2.Sn++;
81208C E0                MOVX    A,@DPTR
81208D 04                INC     A
81208E F0                MOVX    @DPTR,A
81208F 8005              SJMP    ?C0186?SCHEDULER
812091         ?C0185?SCHEDULER:
  890: 		else
  891: 			Hopper2.Sn = 0;
812091 E4                CLR     A
812092 90238B            MOV     DPTR,#Hopper2+01H
812095 F0                MOVX    @DPTR,A
812096         ?C0186?SCHEDULER:
  892: 
  893: 		TaskTemp.Id 		= ID_HOPPER2;
812096 901746            MOV     DPTR,#TaskTemp+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 753


812099 7401              MOV     A,#01H
81209B F0                MOVX    @DPTR,A
  894: 		TaskTemp.Cmd 		= HOPPER_OUTPUT ;
81209C A3                INC     DPTR
81209D 7450              MOV     A,#050H
81209F F0                MOVX    @DPTR,A
  895: 		TaskTemp.Sn		= Hopper2.Sn;
8120A0 90238B            MOV     DPTR,#Hopper2+01H
8120A3         
  896: 		TaskTemp.Priority       = PRIORITY1;
  897: 		TaskTemp.ParamLen	= 2;
  898: 		TaskTemp.Param[ 0 ] 	= CoinAmount % 256;
  899: 		TaskTemp.Param[ 1 ] 	= CoinAmount / 256;
  900: 	//	Trace("\n HopperOutput2");
  901: 		return ZhkSchedulerAddTask( &TaskTemp );	
8120A3 8035              SJMP    ?C0343?SCHEDULER
  902: 		break;
  903: 	case 3:
8120A5         ?C0187?SCHEDULER:
  904: 		if ( Hopper3.CommState & COMM_BUZY ) 
8120A5 9023A1            MOV     DPTR,#Hopper3+02H
8120A8 E0                MOVX    A,@DPTR
8120A9 30E003            JNB     ACC.0,?C0188?SCHEDULER
  905: 			return 0;
8120AC C3                CLR     C
8120AD 8056              SJMP    ?C0178?SCHEDULER
8120AF         ?C0188?SCHEDULER:
  906: //		Hopper3.CommState = COMM_BUZY;
  907: 		if ( HopperNum > 8 ) 
8120AF 901742            MOV     DPTR,#HopperNum
8120B2 E0                MOVX    A,@DPTR
8120B3 D3                SETB    C
8120B4 9408              SUBB    A,#08H
8120B6 4002              JC      ?C0189?SCHEDULER
  908: 			return 0;
8120B8         
8120B8 804B              SJMP    ?C0178?SCHEDULER
8120BA         ?C0189?SCHEDULER:
  909: 
  910: 		if( Hopper3.Sn < 255 )
8120BA 9023A0            MOV     DPTR,#Hopper3+01H
8120BD E0                MOVX    A,@DPTR
8120BE C3                CLR     C
8120BF 94FF              SUBB    A,#0FFH
8120C1 5005              JNC     ?C0190?SCHEDULER
  911: 			Hopper3.Sn++;
8120C3 E0                MOVX    A,@DPTR
8120C4 04                INC     A
8120C5 F0                MOVX    @DPTR,A
8120C6 8005              SJMP    ?C0191?SCHEDULER
8120C8         ?C0190?SCHEDULER:
  912: 		else
  913: 			Hopper3.Sn = 0;
8120C8 E4                CLR     A
8120C9 9023A0            MOV     DPTR,#Hopper3+01H
8120CC F0                MOVX    @DPTR,A
8120CD         ?C0191?SCHEDULER:
  914: 
  915: 		TaskTemp.Id 		= ID_HOPPER3;
8120CD 901746            MOV     DPTR,#TaskTemp+01H
8120D0 7402              MOV     A,#02H
8120D2 F0                MOVX    @DPTR,A
  916: 		TaskTemp.Cmd 		= HOPPER_OUTPUT ;
8120D3 A3                INC     DPTR
8120D4 7450              MOV     A,#050H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 754


8120D6 F0                MOVX    @DPTR,A
  917: 		TaskTemp.Sn		= Hopper3.Sn;
8120D7 9023A0            MOV     DPTR,#Hopper3+01H
8120DA         
8120DA E0                MOVX    A,@DPTR
8120DB 901748            MOV     DPTR,#TaskTemp+03H
8120DE F0                MOVX    @DPTR,A
  918: 		TaskTemp.Priority       = PRIORITY1;
8120DF 901745            MOV     DPTR,#TaskTemp
8120E2 7441              MOV     A,#041H
8120E4 F0                MOVX    @DPTR,A
  919: 		TaskTemp.ParamLen	= 2;
8120E5 90174A            MOV     DPTR,#TaskTemp+05H
8120E8 7402              MOV     A,#02H
8120EA F0                MOVX    @DPTR,A
  920: 		TaskTemp.Param[ 0 ] 	= CoinAmount % 256;
8120EB 901743            MOV     DPTR,#CoinAmount
8120EE E0                MOVX    A,@DPTR
8120EF FE                MOV     R6,A
8120F0 A3                INC     DPTR
8120F1 E0                MOVX    A,@DPTR
8120F2 90174B            MOV     DPTR,#TaskTemp+06H
8120F5 F0                MOVX    @DPTR,A
  921: 		TaskTemp.Param[ 1 ] 	= CoinAmount / 256;
8120F6 EE                MOV     A,R6
8120F7 A3                INC     DPTR
8120F8 F0                MOVX    @DPTR,A
  922: 		return ZhkSchedulerAddTask( &TaskTemp );	
8120F9 7E17              MOV     R6,#HIGH TaskTemp
8120FB 7F45              MOV     R7,#LOW TaskTemp
8120FD A5128088CE        ECALL   _ZhkSchedulerAddTask
812102 EF                MOV     A,R7
812103 24FF              ADD     A,#0FFH
  923: 	 	break;
  924: 	}
  925: }
812105         ?C0178?SCHEDULER:
812105 A522              ERET    
----- FUNCTION _HopperOutput (END) -------


----- FUNCTION _HopperGetCoinOut (BEGIN) -----
 FILE: 'scheduler.c'
  927: uint HopperGetCoinOut( uchar HopperNum )
  928: {
;---- Variable 'HopperNum' assigned to Register 'R7' ----
  929: 	uint data ch;
  930: 	
  931: 	switch( HopperNum )
812107 EF                MOV     A,R7
812108 24FE              ADD     A,#0FEH
81210A 6011              JZ      ?C0194?SCHEDULER
81210C 14                DEC     A
81210D 6018              JZ      ?C0195?SCHEDULER
81210F 2402              ADD     A,#02H
812111 7027              JNZ     ?C0192?SCHEDULER
  932: 	{
  933: 	case 1:
812113         ?C0193?SCHEDULER:
  934: 		ch = Hopper1.ExtState[ 1 ] * 256 + Hopper1.ExtState[ 0 ];
812113 90237A            MOV     DPTR,#Hopper1+05H
812116 E0                MOVX    A,@DPTR
812117 FE                MOV     R6,A
812118 902379            MOV     DPTR,#Hopper1+04H
  935: 		break;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 755


81211B 8012              SJMP    ?C0345?SCHEDULER
  936: 	case 2:
81211D         ?C0194?SCHEDULER:
  937: 		ch = Hopper2.ExtState[ 1 ] * 256 + Hopper2.ExtState[ 0 ];
81211D 90238F            MOV     DPTR,#Hopper2+05H
812120 E0                MOVX    A,@DPTR
812121 FE                MOV     R6,A
812122 90238E            MOV     DPTR,#Hopper2+04H
812125         
  938: 		break;
812125 8008              SJMP    ?C0345?SCHEDULER
  939: 	case 3:
812127         ?C0195?SCHEDULER:
  940: 		ch = Hopper3.ExtState[ 1 ] * 256 + Hopper3.ExtState[ 0 ];
812127 9023A4            MOV     DPTR,#Hopper3+05H
81212A E0                MOVX    A,@DPTR
81212B FE                MOV     R6,A
81212C 9023A3            MOV     DPTR,#Hopper3+04H
81212F         
81212F E0                MOVX    A,@DPTR
812130 7C00              MOV     R4,#00H
812132 2400              ADD     A,#00H
812134 F529              MOV     ch+01H,A
812136 EC                MOV     A,R4
812137 3E                ADDC    A,R6
812138 F528              MOV     ch,A
  941: 		break;
  942: 	}
81213A         ?C0192?SCHEDULER:
  943: 	return ch;
81213A AE28              MOV     R6,ch
81213C AF29              MOV     R7,ch+01H
  944: }
81213E         ?C0196?SCHEDULER:
81213E A522              ERET    
----- FUNCTION _HopperGetCoinOut (END) -------


----- FUNCTION DisplayClear (BEGIN) -----
 FILE: 'scheduler.c'
 1040: bit DisplayClear( void )
 1041: {
 1042: 	struct COMMTASK xdata TaskTemp;
 1043: 	
 1044: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );	
812140 7E00              MOV     R6,#00H
812142 7F26              MOV     R7,#026H
812144 7D00              MOV     R5,#00H
812146 7B00              MOV     R3,#?C?XDATASEG
812148 7A17              MOV     R2,#HIGH TaskTemp
81214A 7926              MOV     R1,#LOW TaskTemp
81214C A5128008A6        ECALL   ?C?MEMSET
 1045: 	TaskTemp.Id 		= ID_LCD;
812151 901727            MOV     DPTR,#TaskTemp+01H
812154 7409              MOV     A,#09H
812156 F0                MOVX    @DPTR,A
 1046: 	TaskTemp.Cmd 		= DISPKEY_CLEAR;
812157 A3                INC     DPTR
812158 745D              MOV     A,#05DH
81215A F0                MOVX    @DPTR,A
 1047: 	TaskTemp.Sn		= Lcd.Sn;
81215B 902361            MOV     DPTR,#Lcd+01H
81215E E0                MOVX    A,@DPTR
81215F 901729            MOV     DPTR,#TaskTemp+03H
812162 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 756


 1048: 	TaskTemp.Priority       = PRIORITY_NORMAL;
812163 901726            MOV     DPTR,#TaskTemp
812166 7442              MOV     A,#042H
812168 F0                MOVX    @DPTR,A
 1049: 	TaskTemp.ParamLen	= 0;
812169 E4                CLR     A
81216A 90172B            MOV     DPTR,#TaskTemp+05H
81216D F0                MOVX    @DPTR,A
 1050: 
 1051: 	return ZhkSchedulerAddTask( &TaskTemp );
81216E 7E17              MOV     R6,#HIGH TaskTemp
812170 7F26              MOV     R7,#LOW TaskTemp
812172 A5128088CE        ECALL   _ZhkSchedulerAddTask
812177 EF                MOV     A,R7
812178 24FF              ADD     A,#0FFH
 1052: 	
 1053: 	
 1054: }
81217A         ?C0202?SCHEDULER:
81217A A522              ERET    
----- FUNCTION DisplayClear (END) -------


----- FUNCTION _DisplayString (BEGIN) -----
 FILE: 'scheduler.c'
 1056: bit DisplayString( uchar * Str , const uchar len )
 1057: {
81217C 90183D            MOV     DPTR,#Str
81217F A5128007B6        ECALL   ?C?PSTXDATA
812184 901840            MOV     DPTR,#len
812187 ED                MOV     A,R5
812188 F0                MOVX    @DPTR,A
 1058: 	struct COMMTASK xdata TaskTemp;
 1059: 
 1060: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );	
812189 7E00              MOV     R6,#00H
81218B 7F26              MOV     R7,#026H
81218D 7D00              MOV     R5,#00H
81218F 7B00              MOV     R3,#?C?XDATASEG
812191 7A18              MOV     R2,#HIGH TaskTemp
812193 7941              MOV     R1,#LOW TaskTemp
812195 A5128008A6        ECALL   ?C?MEMSET
 1061: 	TaskTemp.Id 		= ID_LCD;
81219A 901842            MOV     DPTR,#TaskTemp+01H
81219D 7409              MOV     A,#09H
81219F F0                MOVX    @DPTR,A
 1062: 	TaskTemp.Cmd 		= DISPKEY_DISP;
8121A0 A3                INC     DPTR
8121A1 7450              MOV     A,#050H
8121A3 F0                MOVX    @DPTR,A
 1063: 	TaskTemp.Sn		= Lcd.Sn;
8121A4 902361            MOV     DPTR,#Lcd+01H
8121A7 E0                MOVX    A,@DPTR
8121A8 901844            MOV     DPTR,#TaskTemp+03H
8121AB F0                MOVX    @DPTR,A
 1064: 	TaskTemp.Priority       = PRIORITY_NORMAL;
8121AC 901841            MOV     DPTR,#TaskTemp
8121AF 7442              MOV     A,#042H
8121B1 F0                MOVX    @DPTR,A
 1065: 	TaskTemp.ParamLen	= len;
8121B2 901840            MOV     DPTR,#len
8121B5 E0                MOVX    A,@DPTR
8121B6 FF                MOV     R7,A
8121B7 901846            MOV     DPTR,#TaskTemp+05H
8121BA F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 757


 1066: 	memcpy( TaskTemp.Param , Str , len );
8121BB 7E00              MOV     R6,#00H
8121BD 7847              MOV     R0,#LOW TaskTemp+06H
8121BF 7C18              MOV     R4,#HIGH TaskTemp+06H
8121C1 7D00              MOV     R5,#?C?XDATASEG
8121C3 90183D            MOV     DPTR,#Str
8121C6 A5128007AC        ECALL   ?C?PLDXDATA
8121CB A51280052D        ECALL   ?C?COPY
 1067: 
 1068: 	return ZhkSchedulerAddTask( &TaskTemp );
8121D0 7E18              MOV     R6,#HIGH TaskTemp
8121D2 7F41              MOV     R7,#LOW TaskTemp
8121D4 A5128088CE        ECALL   _ZhkSchedulerAddTask
8121D9 EF                MOV     A,R7
8121DA 24FF              ADD     A,#0FFH
 1069: 	
 1070: }
8121DC         ?C0203?SCHEDULER:
8121DC A522              ERET    
----- FUNCTION _DisplayString (END) -------


----- FUNCTION _DisplaySetCursorStyle (BEGIN) -----
 FILE: 'scheduler.c'
 1089: bit DisplaySetCursorStyle( uchar style )
 1090: {
8121DE 90178D            MOV     DPTR,#style
8121E1 EF                MOV     A,R7
8121E2 F0                MOVX    @DPTR,A
 1091: 	struct COMMTASK xdata TaskTemp;
 1092: 
 1093: 	memset( &TaskTemp, 0, sizeof(struct COMMTASK) );	
8121E3 7E00              MOV     R6,#00H
8121E5 7F26              MOV     R7,#026H
8121E7 7D00              MOV     R5,#00H
8121E9 7B00              MOV     R3,#?C?XDATASEG
8121EB 7A17              MOV     R2,#HIGH TaskTemp
8121ED 798E              MOV     R1,#LOW TaskTemp
8121EF A5128008A6        ECALL   ?C?MEMSET
 1094: 	TaskTemp.Id 		= ID_LCD;
8121F4 90178F            MOV     DPTR,#TaskTemp+01H
8121F7 7409              MOV     A,#09H
8121F9 F0                MOVX    @DPTR,A
 1095: 	TaskTemp.Cmd 		= DISPKEY_CURSORSTYLE;
8121FA A3                INC     DPTR
8121FB 7457              MOV     A,#057H
8121FD F0                MOVX    @DPTR,A
 1096: 	TaskTemp.Sn		= Lcd.Sn;
8121FE 902361            MOV     DPTR,#Lcd+01H
812201 E0                MOVX    A,@DPTR
812202 901791            MOV     DPTR,#TaskTemp+03H
812205 F0                MOVX    @DPTR,A
 1097: 	TaskTemp.Priority       = PRIORITY_NORMAL;
812206 90178E            MOV     DPTR,#TaskTemp
812209 7442              MOV     A,#042H
81220B F0                MOVX    @DPTR,A
 1098: 	TaskTemp.ParamLen	= 1;
81220C 901793            MOV     DPTR,#TaskTemp+05H
81220F 7401              MOV     A,#01H
812211 F0                MOVX    @DPTR,A
 1099: 	TaskTemp.Param[ 0 ] 	= style;
812212 90178D            MOV     DPTR,#style
812215 E0                MOVX    A,@DPTR
812216 901794            MOV     DPTR,#TaskTemp+06H
812219 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 758


 1100: 
 1101: 	return ZhkSchedulerAddTask( &TaskTemp );
81221A 7E17              MOV     R6,#HIGH TaskTemp
81221C 7F8E              MOV     R7,#LOW TaskTemp
81221E A5128088CE        ECALL   _ZhkSchedulerAddTask
812223 EF                MOV     A,R7
812224 24FF              ADD     A,#0FFH
 1102: }
812226         ?C0205?SCHEDULER:
812226 A522              ERET    
----- FUNCTION _DisplaySetCursorStyle (END) -------


----- FUNCTION GetDisplayState (BEGIN) -----
 FILE: 'scheduler.c'
 1153: uchar GetDisplayState()
 1154: {
 1155:  	return Lcd.ExtState[1];
 1156: }
812228 902365            MOV     DPTR,#Lcd+05H
81222B E0                MOVX    A,@DPTR
81222C FF                MOV     R7,A
 1157: 
81222D         ?C0210?SCHEDULER:
81222D A522              ERET    
----- FUNCTION GetDisplayState (END) -------


----- FUNCTION _ZhkCasherTask (BEGIN) -----
 FILE: 'scheduler.c'
 1161: bit ZhkCasherTask( struct COMMTASK xdata* TaskTemp )
 1162: {
81222F 901849            MOV     DPTR,#TaskTemp
812232 EE                MOV     A,R6
812233 F0                MOVX    @DPTR,A
812234 A3                INC     DPTR
812235 EF                MOV     A,R7
812236 F0                MOVX    @DPTR,A
 1163: 	uchar xdata StateTemp = 0;
 1164: 	//Trace( "ZhkCasherTask\n" );
812237 E4                CLR     A
812238 A3                INC     DPTR
812239 F0                MOVX    @DPTR,A
 1165: 	//Trace( "ZhkSchedulerState=%d\n",(int)ZhkSchedulerState );
 1166: 	switch( ZhkSchedulerState )
81223A 9023CA            MOV     DPTR,#ZhkSchedulerState
81223D E0                MOVX    A,@DPTR
81223E 7003              JNZ     $ + 5H
812240 02238A            LJMP    ?C0211?SCHEDULER
812243 24FE              ADD     A,#0FEH
812245 6064              JZ      ?C0218?SCHEDULER
812247 14                DEC     A
812248 7003              JNZ     $ + 5H
81224A 0222E8            LJMP    ?C0223?SCHEDULER
81224D 14                DEC     A
81224E 7003              JNZ     $ + 5H
812250 02230F            LJMP    ?C0226?SCHEDULER
812253 14                DEC     A
812254 7003              JNZ     $ + 5H
812256 02233B            LJMP    ?C0227?SCHEDULER
812259 2404              ADD     A,#04H
81225B 6003              JZ      $ + 5H
81225D 022385            LJMP    ?C0230?SCHEDULER
 1167: 	{
 1168: 	case TASK_NULL:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 759


 1169: 		break;
 1170: 	case TASK_REDAY:		
812260         ?C0213?SCHEDULER:
 1171: 		ZhkChannelSwitch( EQUIP_CASHER );
812260 7F02              MOV     R7,#02H
812262 A512811F43        ECALL   _ZhkChannelSwitch
 1172: 		if( Casher.ExtState[ 14 ] == 0 )
812267 9023DD            MOV     DPTR,#Casher+012H
81226A E0                MOVX    A,@DPTR
81226B 901849            MOV     DPTR,#TaskTemp
81226E 7009              JNZ     ?C0214?SCHEDULER
 1173: 			StateTemp = ZhkCasherTxMsg( TaskTemp, 1 );//改换纸币器数据包的ACK
812270 E0                MOVX    A,@DPTR
812271 FE                MOV     R6,A
812272 A3                INC     DPTR
812273 E0                MOVX    A,@DPTR
812274 FF                MOV     R7,A
812275 7D01              MOV     R5,#01H
812277 8007              SJMP    ?C0346?SCHEDULER
812279         ?C0214?SCHEDULER:
 1174: 		else
 1175: 			StateTemp = ZhkCasherTxMsg( TaskTemp, 0 );//不改换纸币器数据包的ACK
812279 E0                MOVX    A,@DPTR
81227A FE                MOV     R6,A
81227B A3                INC     DPTR
81227C E0                MOVX    A,@DPTR
81227D FF                MOV     R7,A
81227E E4                CLR     A
81227F FD                MOV     R5,A
812280         
812280 A51280FF1D        ECALL   _ZhkCasherTxMsg
812285 E4                CLR     A
812286 33                RLC     A
812287 90184B            MOV     DPTR,#StateTemp
81228A F0                MOVX    @DPTR,A
81228B         ?C0215?SCHEDULER:
 1176: 		if ( StateTemp )
81228B 90184B            MOV     DPTR,#StateTemp
81228E E0                MOVX    A,@DPTR
81228F 9023CA            MOV     DPTR,#ZhkSchedulerState
812292 6005              JZ      ?C0216?SCHEDULER
 1177: 			ZhkSchedulerState = TASK_WAIT;
812294 7402              MOV     A,#02H
812296 F0                MOVX    @DPTR,A
812297 8003              SJMP    ?C0217?SCHEDULER
812299         ?C0216?SCHEDULER:
 1178: 		else
 1179: 			ZhkSchedulerState = TASK_FINISH;	
812299 7404              MOV     A,#04H
81229B F0                MOVX    @DPTR,A
81229C         ?C0217?SCHEDULER:
 1180: 		
 1181: 		ZhkDownMsgAckTimer  = 90;//DOWNMSGACKTIMEOUT;
81229C 751100            MOV     ZhkDownMsgAckTimer,#00H
81229F 75125A            MOV     ZhkDownMsgAckTimer+01H,#05AH
 1182: 		Casher.CommState = COMM_BUZY;
8122A2 9023CD            MOV     DPTR,#Casher+02H
8122A5 7401              MOV     A,#01H
8122A7 F0                MOVX    @DPTR,A
 1183: 		break;
8122A8 02238A            LJMP    ?C0211?SCHEDULER
 1184: 	case TASK_WAIT:	
8122AB         ?C0218?SCHEDULER:
 1185: //		Trace( "\n ZhkCasherTask TASK_WAIT" );	
 1186: 		StateTemp = ZhkCasherMsgProcess();
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 760


8122AB A51281238D        ECALL   ZhkCasherMsgProcess
8122B0 90184B            MOV     DPTR,#StateTemp
8122B3 EF                MOV     A,R7
8122B4 F0                MOVX    @DPTR,A
 1187: 		if ( StateTemp == 1 )
8122B5 BF0102            CJNE    R7,#01H,?C0219?SCHEDULER
 1188: 		{
 1189: 			ZhkSchedulerState = TASK_FINISH;
 1190: 			break;
8122B8 803B              SJMP    ?C0347?SCHEDULER
 1191: 		}
8122BA         ?C0219?SCHEDULER:
 1192: 		if ( ZhkDownMsgAckTimer == 0 )
8122BA E512              MOV     A,ZhkDownMsgAckTimer+01H
8122BC 4511              ORL     A,ZhkDownMsgAckTimer
8122BE 6003              JZ      $ + 5H
8122C0 02238A            LJMP    ?C0211?SCHEDULER
 1193: 		{
 1194: 			if ( ZhkCasherTxMsg( TaskTemp, 0 ) )
8122C3 901849            MOV     DPTR,#TaskTemp
8122C6 E0                MOVX    A,@DPTR
8122C7 FE                MOV     R6,A
8122C8 A3                INC     DPTR
8122C9 E0                MOVX    A,@DPTR
8122CA FF                MOV     R7,A
8122CB E4                CLR     A
8122CC FD                MOV     R5,A
8122CD A51280FF1D        ECALL   _ZhkCasherTxMsg
8122D2 9023CA            MOV     DPTR,#ZhkSchedulerState
8122D5 5005              JNC     ?C0221?SCHEDULER
 1195: 				ZhkSchedulerState = TASK_REWAIT;
8122D7 7403              MOV     A,#03H
8122D9 F0                MOVX    @DPTR,A
8122DA 8003              SJMP    ?C0222?SCHEDULER
8122DC         ?C0221?SCHEDULER:
 1196: 			else
 1197: 				ZhkSchedulerState = TASK_FINISH;
8122DC 7404              MOV     A,#04H
8122DE F0                MOVX    @DPTR,A
8122DF         ?C0222?SCHEDULER:
 1198: 		//	ZhkSchedulerState  = TASK_REWAIT;
 1199: 			ZhkDownMsgAckTimer = 90; //DOWNMSGACKTIMEOUT;
8122DF 751100            MOV     ZhkDownMsgAckTimer,#00H
8122E2 75125A            MOV     ZhkDownMsgAckTimer+01H,#05AH
 1200: 		}		
 1201: 		break;
8122E5 02238A            LJMP    ?C0211?SCHEDULER
 1202: 	case TASK_REWAIT:
8122E8         ?C0223?SCHEDULER:
 1203: //		Trace( "\n ZhkCasherTask TASK_REWAIT" );		
 1204: 		StateTemp = ZhkCasherMsgProcess();
8122E8 A51281238D        ECALL   ZhkCasherMsgProcess
8122ED 90184B            MOV     DPTR,#StateTemp
8122F0 EF                MOV     A,R7
8122F1 F0                MOVX    @DPTR,A
 1205: 		if ( StateTemp == 1 )
8122F2 BF0109            CJNE    R7,#01H,?C0224?SCHEDULER
 1206: 		{
 1207: 			ZhkSchedulerState = TASK_FINISH;
8122F5         
8122F5 9023CA            MOV     DPTR,#ZhkSchedulerState
8122F8 7404              MOV     A,#04H
8122FA F0                MOVX    @DPTR,A
 1208: 			break;
8122FB 02238A            LJMP    ?C0211?SCHEDULER
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 761


 1209: 		}
8122FE         ?C0224?SCHEDULER:
 1210: 		if ( ZhkDownMsgAckTimer == 0 )
8122FE E512              MOV     A,ZhkDownMsgAckTimer+01H
812300 4511              ORL     A,ZhkDownMsgAckTimer
812302 6003              JZ      $ + 5H
812304 02238A            LJMP    ?C0211?SCHEDULER
 1211: 		{
 1212: 			ZhkSchedulerState = TASK_ERROR;
812307 9023CA            MOV     DPTR,#ZhkSchedulerState
81230A 7405              MOV     A,#05H
81230C F0                MOVX    @DPTR,A
 1213: 		}
 1214: 		break;
81230D 807B              SJMP    ?C0211?SCHEDULER
 1215: 	case TASK_FINISH:	
81230F         ?C0226?SCHEDULER:
 1216: 		Casher.CommState  = COMM_COMMOK;
81230F 9023CD            MOV     DPTR,#Casher+02H
812312 7404              MOV     A,#04H
812314 F0                MOVX    @DPTR,A
 1217: 		memset( &CurrentTask, 0, sizeof( struct COMMTASK ) );
812315 7E00              MOV     R6,#00H
812317 7F26              MOV     R7,#026H
812319 7D00              MOV     R5,#00H
81231B 7B00              MOV     R3,#?C?XDATASEG
81231D 7A28              MOV     R2,#HIGH CurrentTask
81231F 79A5              MOV     R1,#LOW CurrentTask
812321 A5128008A6        ECALL   ?C?MEMSET
 1218: 		ZhkSchedulerState = TASK_NULL; 
812326 E4                CLR     A
812327 9023CA            MOV     DPTR,#ZhkSchedulerState
81232A F0                MOVX    @DPTR,A
 1219: 		ZhkCasherStatus = CASHER_STATUS_NULL;
81232B 90235F            MOV     DPTR,#ZhkCasherStatus
81232E F0                MOVX    @DPTR,A
 1220: 		Casher.ExtState[ 14 ] = 0; 
81232F 9023DD            MOV     DPTR,#Casher+012H
812332 F0                MOVX    @DPTR,A
 1221: 		Casher.ExtState[13] = 0;
812333 9023DC            MOV     DPTR,#Casher+011H
812336 F0                MOVX    @DPTR,A
 1222: 		QueryCashTimer = 0;
812337 F515              MOV     QueryCashTimer,A
 1223: 		break;
812339 804F              SJMP    ?C0211?SCHEDULER
 1224: 	case TASK_ERROR:	
81233B         ?C0227?SCHEDULER:
 1225: //		Trace( "\n ZhkCasherTask TASK_ERROR" );
 1226: 		Casher.CommState = COMM_TIMEOUT;// | COMM_COMMOK;
81233B 9023CD            MOV     DPTR,#Casher+02H
81233E 7402              MOV     A,#02H
812340 F0                MOVX    @DPTR,A
 1227: 		ZhkSchedulerState   = TASK_NULL; 
812341 E4                CLR     A
812342 9023CA            MOV     DPTR,#ZhkSchedulerState
812345 F0                MOVX    @DPTR,A
 1228: 		ZhkCasherStatus = CASHER_STATUS_NULL;
812346 90235F            MOV     DPTR,#ZhkCasherStatus
812349 F0                MOVX    @DPTR,A
 1229: 
 1230: 		if( Casher.ExtState[ 14 ] < 240 )
81234A 9023DD            MOV     DPTR,#Casher+012H
81234D E0                MOVX    A,@DPTR
81234E C3                CLR     C
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 762


81234F 94F0              SUBB    A,#0F0H
812351 5003              JNC     ?C0228?SCHEDULER
 1231: 			Casher.ExtState[ 14 ] ++;
812353 E0                MOVX    A,@DPTR
812354 04                INC     A
812355 F0                MOVX    @DPTR,A
812356         ?C0228?SCHEDULER:
 1232: 		if( Casher.ExtState[ 14 ] >= 2 )
812356 9023DD            MOV     DPTR,#Casher+012H
812359 E0                MOVX    A,@DPTR
81235A C3                CLR     C
81235B 9402              SUBB    A,#02H
81235D 4013              JC      ?C0229?SCHEDULER
 1233: 		{
 1234: 			QueryCashTimer = 120;//定时二分钟
81235F 751578            MOV     QueryCashTimer,#078H
 1235: 			Casher.ExtState[ 14 ] = 0;
812362 E4                CLR     A
812363 F0                MOVX    @DPTR,A
 1236: 			CasherDisableCasher();
812364 A51280FF0C        ECALL   CasherDisableCasher
 1237: 			Casher.State	=  0 ;
812369 E4                CLR     A
81236A 9023CE            MOV     DPTR,#Casher+03H
81236D F0                MOVX    @DPTR,A
 1238: 			Casher.ExtState[ 0 ] = 0;
81236E A3                INC     DPTR
81236F F0                MOVX    @DPTR,A
 1239: 			Casher.ExtState[ 1 ] = 0 ;			
812370 A3                INC     DPTR
812371 F0                MOVX    @DPTR,A
 1240: 			Trace( "\n Casher outtime, Close query" );
 1241: 		}
812372         ?C0229?SCHEDULER:
 1242: 		memset( &CurrentTask, 0, sizeof( struct COMMTASK ) );
812372 7E00              MOV     R6,#00H
812374 7F26              MOV     R7,#026H
812376 7D00              MOV     R5,#00H
812378 7B00              MOV     R3,#?C?XDATASEG
81237A 7A28              MOV     R2,#HIGH CurrentTask
81237C 79A5              MOV     R1,#LOW CurrentTask
81237E A5128008A6        ECALL   ?C?MEMSET
 1243: 		break;
812383 8005              SJMP    ?C0211?SCHEDULER
 1244: 	default:
812385         ?C0230?SCHEDULER:
 1245: 		ZhkSchedulerState = TASK_NULL;
812385 E4                CLR     A
812386 9023CA            MOV     DPTR,#ZhkSchedulerState
812389 F0                MOVX    @DPTR,A
 1246: 	}	
81238A         ?C0211?SCHEDULER:
 1247: 	return 1;
81238A D3                SETB    C
 1248: }
81238B         ?C0231?SCHEDULER:
81238B A522              ERET    
----- FUNCTION _ZhkCasherTask (END) -------


----- FUNCTION ZhkCasherMsgProcess (BEGIN) -----
 FILE: 'scheduler.c'
 1278: uchar ZhkCasherMsgProcess( void )
 1279: {
 1280: 	struct COMMTASK xdata AckTask;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 763


 1281: 	
 1282: 	if ( ZhkCasherFrameUnPack( &AckTask ) == 0 )
81238D 7E18              MOV     R6,#HIGH AckTask
81238F 7F4C              MOV     R7,#LOW AckTask
812391 A5128123B8        ECALL   _ZhkCasherFrameUnPack
812396 EF                MOV     A,R7
812397 7003              JNZ     ?C0240?SCHEDULER
 1283:  		return 0;
812399 FF                MOV     R7,A
81239A 801A              SJMP    ?C0241?SCHEDULER
81239C         ?C0240?SCHEDULER:
 1284: 	Casher.State        = AckTask.State;
81239C 901850            MOV     DPTR,#AckTask+04H
81239F E0                MOVX    A,@DPTR
8123A0 9023CE            MOV     DPTR,#Casher+03H
8123A3 F0                MOVX    @DPTR,A
 1285: 	Casher.ExtState[ 0 ] = AckTask.Param[ 0 ];
8123A4 901852            MOV     DPTR,#AckTask+06H
8123A7 E0                MOVX    A,@DPTR
8123A8 9023CF            MOV     DPTR,#Casher+04H
8123AB F0                MOVX    @DPTR,A
 1286: 	Casher.ExtState[ 1 ] = AckTask.Param[ 1 ];
8123AC 901853            MOV     DPTR,#AckTask+07H
8123AF E0                MOVX    A,@DPTR
8123B0 9023D0            MOV     DPTR,#Casher+05H
8123B3 F0                MOVX    @DPTR,A
 1287: //	if ( CasherIsCashIn() )
 1288:  //		ZhkCasherStatus = CASHER_STATUS_NULL;
 1289: 	return 1;
8123B4 7F01              MOV     R7,#01H
 1290: 	
 1291: }
8123B6         ?C0241?SCHEDULER:
8123B6 A522              ERET    
----- FUNCTION ZhkCasherMsgProcess (END) -------


----- FUNCTION _ZhkCasherFrameUnPack (BEGIN) -----
 FILE: 'procotol.c'
  184: unsigned char ZhkCasherFrameUnPack( struct COMMTASK xdata* Result )
  185: {
8123B8 901872            MOV     DPTR,#Result
8123BB EE                MOV     A,R6
8123BC F0                MOVX    @DPTR,A
8123BD A3                INC     DPTR
8123BE EF                MOV     A,R7
8123BF F0                MOVX    @DPTR,A
  186: 	unsigned char  data i,j,sum;
  187: 	unsigned char  data buf[ 3 ];
  188: 	
  189: 	
  190: //	Trace( "\n Get Cash Return Begin ");
  191: //	Trace( "\n Cash Return Str = ");
  192: 	j = 0;
8123C0 E4                CLR     A
8123C1 F52B              MOV     j,A
8123C3         ?C0042?PROCOTOL:
  193: 	while( ! ZhkSerial1IsRxBufNull() )
8123C3 A512811BB4        ECALL   ZhkSerial1IsRxBufNull
8123C8 EF                MOV     A,R7
8123C9 702F              JNZ     ?C0047?PROCOTOL
  194: 	{
  195: 		for( i = 0 ; i <= sizeof( DownMsgBuf ) - 1 ; i ++ )
8123CB F52A              MOV     i,A
8123CD         ?C0044?PROCOTOL:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 764


  196: 			DownMsgBuf[ i ] = DownMsgBuf[ i + 1 ];
8123CD 745A              MOV     A,#LOW DownMsgBuf+01H
8123CF 252A              ADD     A,i
8123D1 F582              MOV     DPL,A
8123D3 E4                CLR     A
8123D4 342D              ADDC    A,#HIGH DownMsgBuf+01H
8123D6 F583              MOV     DPH,A
8123D8 E0                MOVX    A,@DPTR
8123D9 FF                MOV     R7,A
8123DA 7459              MOV     A,#LOW DownMsgBuf
8123DC 252A              ADD     A,i
8123DE F582              MOV     DPL,A
8123E0 E4                CLR     A
8123E1 342D              ADDC    A,#HIGH DownMsgBuf
8123E3 F583              MOV     DPH,A
8123E5 EF                MOV     A,R7
8123E6 F0                MOVX    @DPTR,A
8123E7 052A              INC     i
8123E9 E52A              MOV     A,i
8123EB B440DF            CJNE    A,#040H,?C0044?PROCOTOL
8123EE         ?C0045?PROCOTOL:
  197: 		DownMsgBuf[ sizeof( DownMsgBuf ) - 1 ] = ZhkSerial1GetCh();
8123EE A512811D43        ECALL   ZhkSerial1GetCh
8123F3 902D98            MOV     DPTR,#DownMsgBuf+03FH
8123F6 EF                MOV     A,R7
8123F7 F0                MOVX    @DPTR,A
  198: 	//	Trace( " %02bx", DownMsgBuf[ sizeof( DownMsgBuf ) - 1 ] );
  199: #ifdef _DEBUG_TRACE
  200: 		j ++ ;
  201: #endif
  202: 	}		
8123F8 80C9              SJMP    ?C0042?PROCOTOL
8123FA         ?C0047?PROCOTOL:
  203: /*
  204: #ifdef _DEBUG_TRACE
  205: 	if( j )
  206: 	{
  207: 		Trace( "\n Casher Return Str = ");
  208: 		for( j = 0; j < 32; j++ )
  209: 			Trace( " %02bx", DownMsgBuf[32+j] );
  210: 		j = 0;
  211: 	}
  212: #endif	
  213: */
  214: //	Trace( "\n Get Cash Return End ");
  215: 	while( 1 )
  216: 	{
  217: 		for( i = 0; i <= sizeof( DownMsgBuf ) - 0x0B; i ++ )
8123FA E4                CLR     A
8123FB F52A              MOV     i,A
8123FD         ?C0049?PROCOTOL:
  218: 		{
  219: 			if( ( DownMsgBuf[i] == VTISERIAL_FRAMEHEAD ) && ( DownMsgBuf[ i + 1 ] == 0x0B ) )
8123FD 7459              MOV     A,#LOW DownMsgBuf
8123FF 252A              ADD     A,i
812401 F582              MOV     DPL,A
812403 E4                CLR     A
812404 342D              ADDC    A,#HIGH DownMsgBuf
812406 F583              MOV     DPH,A
812408 E0                MOVX    A,@DPTR
812409 B40210            CJNE    A,#02H,?C0051?PROCOTOL
81240C 745A              MOV     A,#LOW DownMsgBuf+01H
81240E 252A              ADD     A,i
812410 F582              MOV     DPL,A
812412 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 765


812413 342D              ADDC    A,#HIGH DownMsgBuf+01H
812415 F583              MOV     DPH,A
812417 E0                MOVX    A,@DPTR
812418 640B              XRL     A,#0BH
81241A 6007              JZ      ?C0050?PROCOTOL
  220: 			{
  221: 				//找到包头
  222: 				break;
  223: 			}
  224: 		}
81241C         ?C0051?PROCOTOL:
81241C 052A              INC     i
81241E E52A              MOV     A,i
812420 B436DA            CJNE    A,#036H,?C0049?PROCOTOL
812423         ?C0050?PROCOTOL:
  225: 		if( i > sizeof( DownMsgBuf ) - 0x0B )//没有找到包头退出
812423 E52A              MOV     A,i
812425 D3                SETB    C
812426 9435              SUBB    A,#035H
812428 4005              JC      ?C0053?PROCOTOL
  226: 			return 0;
81242A 7F00              MOV     R7,#00H
81242C 022585            LJMP    ?C0054?PROCOTOL
81242F         ?C0053?PROCOTOL:
  227: 		//找到包头处理	
  228: 		if ( DownMsgBuf[ i + 9 ] != VTISERIAL_FRAMETAIL ) 
81242F 7462              MOV     A,#LOW DownMsgBuf+09H
812431 252A              ADD     A,i
812433 F582              MOV     DPL,A
812435 E4                CLR     A
812436 342D              ADDC    A,#HIGH DownMsgBuf+09H
812438 F583              MOV     DPH,A
81243A E0                MOVX    A,@DPTR
81243B 6403              XRL     A,#03H
81243D 6079              JZ      ?C0048?PROCOTOL
  229: 		{
  230: 			//包头和包尾不配对,应该乱包，除去包头标志
  231: 		//	for( sum = i; sum < sizeof( DownMsgBuf ); sum ++ )
  232: 		//		DownMsgBuf[sum] = DownMsgBuf[sum + 2 ];
  233: 		   	DownMsgBuf[ i ] = 0x00;
81243F 7459              MOV     A,#LOW DownMsgBuf
812441 252A              ADD     A,i
812443 F582              MOV     DPL,A
812445 E4                CLR     A
812446 342D              ADDC    A,#HIGH DownMsgBuf
812448 F583              MOV     DPH,A
81244A E4                CLR     A
81244B F0                MOVX    @DPTR,A
  234: 		   	DownMsgBuf[ i + 1 ] = 0x00;		
81244C 745A              MOV     A,#LOW DownMsgBuf+01H
81244E 252A              ADD     A,i
812450 F582              MOV     DPL,A
812452 E4                CLR     A
812453 342D              ADDC    A,#HIGH DownMsgBuf+01H
812455 F583              MOV     DPH,A
812457 E4                CLR     A
812458 F0                MOVX    @DPTR,A
  235: 		}
  236: 		else
  237: 			break;
812459         ?C0056?PROCOTOL:
  238: 	
  239: 		//包头、尾配对,查校验		
  240: 		sum = 0;
812459 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 766


81245A F52C              MOV     sum,A
  241: 		for( j = i + 1 ; j < i + 8 ; j ++ )
81245C E52A              MOV     A,i
81245E 04                INC     A
81245F F52B              MOV     j,A
812461         ?C0057?PROCOTOL:
812461 E52A              MOV     A,i
812463 2408              ADD     A,#08H
812465 FF                MOV     R7,A
812466 E4                CLR     A
812467 33                RLC     A
812468 FE                MOV     R6,A
812469 C3                CLR     C
81246A E52B              MOV     A,j
81246C 9F                SUBB    A,R7
81246D EE                MOV     A,R6
81246E 6480              XRL     A,#080H
812470 F8                MOV     R0,A
812471 7480              MOV     A,#080H
812473 98                SUBB    A,R0
812474 5012              JNC     ?C0058?PROCOTOL
  242: 		{
  243: 			sum ^= DownMsgBuf[ j ]; 		
812476 7459              MOV     A,#LOW DownMsgBuf
812478 252B              ADD     A,j
81247A F582              MOV     DPL,A
81247C E4                CLR     A
81247D 342D              ADDC    A,#HIGH DownMsgBuf
81247F F583              MOV     DPH,A
812481 E0                MOVX    A,@DPTR
812482 622C              XRL     sum,A
  244: 		}
812484 052B              INC     j
812486 80D9              SJMP    ?C0057?PROCOTOL
812488         ?C0058?PROCOTOL:
  245: 		if ( DownMsgBuf[ i + 10 ] != sum ) 
812488 7463              MOV     A,#LOW DownMsgBuf+0AH
81248A 252A              ADD     A,i
81248C F582              MOV     DPL,A
81248E E4                CLR     A
81248F 342D              ADDC    A,#HIGH DownMsgBuf+0AH
812491 F583              MOV     DPH,A
812493 E0                MOVX    A,@DPTR
812494 652C              XRL     A,sum
812496 6020              JZ      ?C0048?PROCOTOL
  246: 		{
  247: 			//包校验不对，乱包，除去包头
  248: 			sum = 0;
812498 E4                CLR     A
812499 F52C              MOV     sum,A
  249: //			for( sum = i; sum < sizeof( DownMsgBuf ); sum ++ )
  250: //				DownMsgBuf[sum] = DownMsgBuf[sum + 2 ];
  251: 		   	DownMsgBuf[ i ] = 0x00;
81249B 7459              MOV     A,#LOW DownMsgBuf
81249D 252A              ADD     A,i
81249F F582              MOV     DPL,A
8124A1 E4                CLR     A
8124A2 342D              ADDC    A,#HIGH DownMsgBuf
8124A4 F583              MOV     DPH,A
8124A6 E4                CLR     A
8124A7 F0                MOVX    @DPTR,A
  252: 		   	DownMsgBuf[ i + 1 ] = 0x00;		
8124A8 745A              MOV     A,#LOW DownMsgBuf+01H
8124AA 252A              ADD     A,i
8124AC F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 767


8124AE E4                CLR     A
8124AF 342D              ADDC    A,#HIGH DownMsgBuf+01H
8124B1 F583              MOV     DPH,A
8124B3 E4                CLR     A
8124B4 F0                MOVX    @DPTR,A
  253: 		}
8124B5 0223FA            LJMP    ?C0047?PROCOTOL
  254: 		else
  255: 			break;
  256: 	}
8124B8         ?C0048?PROCOTOL:
  257: 	//是完整而正确的包
  258: 	#ifdef _DEBUG_TRACE
  259: 		Trace( "\n Cash Return OK Str");
  260: 		for( j = i; j <= i + 10 ; j ++ )		
  261: 			Trace( " 0x%02bx",DownMsgBuf[ j ] );	
  262: 		Trace( "\n" );
  263: 	#endif
  264: 	buf[ 0 ] = 0;
8124B8 E4                CLR     A
8124B9 F52D              MOV     buf,A
  265: 	buf[ 1 ] = 0;
8124BB F52E              MOV     buf+01H,A
  266: 	buf[ 2 ] = 0;
8124BD F52F              MOV     buf+02H,A
  267: 	
  268: 	if ( DownMsgBuf[ i + 3 + 0 ] & 0x04 ) buf[ 0 ] |= 0x10;//有钱进入
8124BF 745C              MOV     A,#LOW DownMsgBuf+03H
8124C1 252A              ADD     A,i
8124C3 F582              MOV     DPL,A
8124C5 E4                CLR     A
8124C6 342D              ADDC    A,#HIGH DownMsgBuf+03H
8124C8 F583              MOV     DPH,A
8124CA E0                MOVX    A,@DPTR
8124CB FF                MOV     R7,A
8124CC 30E203            JNB     ACC.2,?C0062?PROCOTOL
8124CF 432D10            ORL     buf,#010H
8124D2         ?C0062?PROCOTOL:
  269: 	if ( DownMsgBuf[ i + 3 + 0 ] & 0x10 ) buf[ 0 ] |= 0x20;//已存入
8124D2 EF                MOV     A,R7
8124D3 30E403            JNB     ACC.4,?C0063?PROCOTOL
8124D6 432D20            ORL     buf,#020H
8124D9         ?C0063?PROCOTOL:
  270: 	if ( DownMsgBuf[ i + 3 + 0 ] & 0x40 ) buf[ 0 ] |= 0x80;//已返回
8124D9 EF                MOV     A,R7
8124DA 30E603            JNB     ACC.6,?C0064?PROCOTOL
8124DD 432D80            ORL     buf,#080H
8124E0         ?C0064?PROCOTOL:
  271: 	if ( DownMsgBuf[ i + 3 + 2 ] & 0x02 ) buf[ 0 ] |= 0x04;//命令错误
8124E0 745E              MOV     A,#LOW DownMsgBuf+05H
8124E2 252A              ADD     A,i
8124E4 F582              MOV     DPL,A
8124E6 E4                CLR     A
8124E7 342D              ADDC    A,#HIGH DownMsgBuf+05H
8124E9 F583              MOV     DPH,A
8124EB E0                MOVX    A,@DPTR
8124EC FF                MOV     R7,A
8124ED 30E103            JNB     ACC.1,?C0065?PROCOTOL
8124F0 432D04            ORL     buf,#04H
8124F3         ?C0065?PROCOTOL:
  272: 	if ( DownMsgBuf[ i + 3 + 2 ] & 0x04 ) buf[ 0 ] |= 0x40;//故障
8124F3 EF                MOV     A,R7
8124F4 30E203            JNB     ACC.2,?C0066?PROCOTOL
8124F7 432D40            ORL     buf,#040H
8124FA         ?C0066?PROCOTOL:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 768


  273: 	buf[ 1 ]  = DownMsgBuf[ i + 3 + 1 ] & 0x7F;//纸币器和钱箱状态
8124FA 745D              MOV     A,#LOW DownMsgBuf+04H
8124FC 252A              ADD     A,i
8124FE F582              MOV     DPL,A
812500 E4                CLR     A
812501 342D              ADDC    A,#HIGH DownMsgBuf+04H
812503 F583              MOV     DPH,A
812505 E0                MOVX    A,@DPTR
812506 547F              ANL     A,#07FH
812508 F52E              MOV     buf+01H,A
  274: 	buf[ 2 ]  = DownMsgBuf[ i + 3 + 2 ] / 8;
81250A 745E              MOV     A,#LOW DownMsgBuf+05H
81250C 252A              ADD     A,i
81250E F582              MOV     DPL,A
812510 E4                CLR     A
812511 342D              ADDC    A,#HIGH DownMsgBuf+05H
812513 F583              MOV     DPH,A
812515 E0                MOVX    A,@DPTR
812516 13                RRC     A
812517 13                RRC     A
812518 13                RRC     A
812519 541F              ANL     A,#01FH
81251B F52F              MOV     buf+02H,A
  275: 	buf[ 2 ] &= 0x07;//收到的币种编号
81251D 532F07            ANL     buf+02H,#07H
  276: 	
  277: //	Trace( "\n Result->State = %02bx", buf[ 0 ] );
  278: 	Result->State      = buf[ 0 ];//纸币状态
812520 901872            MOV     DPTR,#Result
812523 E0                MOVX    A,@DPTR
812524 FE                MOV     R6,A
812525 A3                INC     DPTR
812526 E0                MOVX    A,@DPTR
812527 FF                MOV     R7,A
812528 2404              ADD     A,#04H
81252A F582              MOV     DPL,A
81252C E4                CLR     A
81252D 3E                ADDC    A,R6
81252E F583              MOV     DPH,A
812530 E52D              MOV     A,buf
812532 F0                MOVX    @DPTR,A
  279: 	Result->Param[ 0 ] = buf[ 1 ];//纸币器状态
812533 EF                MOV     A,R7
812534 2406              ADD     A,#06H
812536 F582              MOV     DPL,A
812538 E4                CLR     A
812539 3E                ADDC    A,R6
81253A F583              MOV     DPH,A
81253C E52E              MOV     A,buf+01H
81253E F0                MOVX    @DPTR,A
  280: 	Result->Param[ 1 ] = buf[ 2 ];////收到的币种编号
81253F EF                MOV     A,R7
812540 2407              ADD     A,#07H
812542 F582              MOV     DPL,A
812544 E4                CLR     A
812545 3E                ADDC    A,R6
812546 F583              MOV     DPH,A
812548 E52F              MOV     A,buf+02H
81254A F0                MOVX    @DPTR,A
  281: 	Result->ParamLen   = 3;
81254B EF                MOV     A,R7
81254C 2405              ADD     A,#05H
81254E F582              MOV     DPL,A
812550 E4                CLR     A
812551 3E                ADDC    A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 769


812552 F583              MOV     DPH,A
812554 7403              MOV     A,#03H
812556 F0                MOVX    @DPTR,A
  282: 	sum = 0;
812557 E4                CLR     A
812558 F52C              MOV     sum,A
  283: 	for( sum = i; sum < i + 11; sum ++ )
81255A 852A2C            MOV     sum,i
81255D         ?C0067?PROCOTOL:
81255D E52A              MOV     A,i
81255F 240B              ADD     A,#0BH
812561 FF                MOV     R7,A
812562 E4                CLR     A
812563 33                RLC     A
812564 FE                MOV     R6,A
812565 C3                CLR     C
812566 E52C              MOV     A,sum
812568 9F                SUBB    A,R7
812569 EE                MOV     A,R6
81256A 6480              XRL     A,#080H
81256C F8                MOV     R0,A
81256D 7480              MOV     A,#080H
81256F 98                SUBB    A,R0
812570 5011              JNC     ?C0068?PROCOTOL
  284: 		DownMsgBuf[sum] = 0x00;
812572 7459              MOV     A,#LOW DownMsgBuf
812574 252C              ADD     A,sum
812576 F582              MOV     DPL,A
812578 E4                CLR     A
812579 342D              ADDC    A,#HIGH DownMsgBuf
81257B F583              MOV     DPH,A
81257D E4                CLR     A
81257E F0                MOVX    @DPTR,A
81257F 052C              INC     sum
812581 80DA              SJMP    ?C0067?PROCOTOL
812583         ?C0068?PROCOTOL:
  285: //	for( sum = sizeof( DownMsgBuf ) - 11; sum < sizeof( DownMsgBuf ); sum ++ )
  286: //		DownMsgBuf[sum] = 0x00;				
  287: 	return 1;	
812583 7F01              MOV     R7,#01H
  288: }
812585         ?C0054?PROCOTOL:
812585 A522              ERET    
----- FUNCTION _ZhkCasherFrameUnPack (END) -------


----- FUNCTION CasherIsAcceptOK (BEGIN) -----
 FILE: 'scheduler.c'
 1351: uchar CasherIsAcceptOK( void )
 1352: {
 1353: 	return Casher.State & 0x20;
 1354: }
812587 9023CE            MOV     DPTR,#Casher+03H
81258A E0                MOVX    A,@DPTR
81258B 5420              ANL     A,#020H
81258D FF                MOV     R7,A
 1355: 
81258E         ?C0247?SCHEDULER:
81258E A522              ERET    
----- FUNCTION CasherIsAcceptOK (END) -------


----- FUNCTION GetComingCash (BEGIN) -----
 FILE: 'scheduler.c'
 1373: uint GetComingCash( void )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 770


 1374: {
 1375: 	uchar data ch = 0;
 1376: 
812590 E4                CLR     A
812591 F528              MOV     ch,A
 1377: 	ch = Casher.ExtState[ 1 ] % 8;
812593 9023D0            MOV     DPTR,#Casher+05H
812596 E0                MOVX    A,@DPTR
812597 5407              ANL     A,#07H
812599 F528              MOV     ch,A
 1378: 	Casher.ExtState[ 1 ] = 0;
81259B E4                CLR     A
81259C F0                MOVX    @DPTR,A
 1379:     /*
 1380: 	if ( ( ch == 0 ) || ( CashAcceptEnableTable[ch - 1] != 1 ) )
 1381: 		return 0;
 1382: 	return CashAccept[ ch - 1 ];
 1383:     */
 1384:     if ( ch == 0 ) 
81259D E528              MOV     A,ch
81259F 7004              JNZ     ?C0251?SCHEDULER
 1385: 		return 0;
8125A1 FE                MOV     R6,A
8125A2 FF                MOV     R7,A
8125A3 8012              SJMP    ?C0252?SCHEDULER
8125A5         ?C0251?SCHEDULER:
 1386: 	return SystemParameter.billValue[ch-1];   //Changed by Andy on 2010.8.17!
8125A5 E528              MOV     A,ch
8125A7 25E0              ADD     A,ACC
8125A9 2445              ADD     A,#LOW SystemParameter+027H
8125AB F582              MOV     DPL,A
8125AD E4                CLR     A
8125AE 3404              ADDC    A,#HIGH SystemParameter+027H
8125B0 F583              MOV     DPH,A
8125B2 E0                MOVX    A,@DPTR
8125B3 FE                MOV     R6,A
8125B4 A3                INC     DPTR
8125B5 E0                MOVX    A,@DPTR
8125B6 FF                MOV     R7,A
 1387: }
8125B7         ?C0252?SCHEDULER:
8125B7 A522              ERET    
----- FUNCTION GetComingCash (END) -------


----- FUNCTION CasherQueryEnable (BEGIN) -----
 FILE: 'scheduler.c'
 1389: bit CasherQueryEnable( void )
 1390: {
 1391: 	ZhkAutoTaskPermission[ 0 ] = 1;
 1392: 	memset( &Casher, 0, sizeof( Casher ) );
8125B9 90235D            MOV     DPTR,#ZhkAutoTaskPermission
8125BC 7401              MOV     A,#01H
8125BE F0                MOVX    @DPTR,A
 1393: 	return 1;
8125BF 7E00              MOV     R6,#00H
8125C1 7F15              MOV     R7,#015H
8125C3 7D00              MOV     R5,#00H
8125C5 7B00              MOV     R3,#?C?XDATASEG
8125C7 7A23              MOV     R2,#HIGH Casher
8125C9 79CB              MOV     R1,#LOW Casher
8125CB A5128008A6        ECALL   ?C?MEMSET
 1394: }
8125D0 D3                SETB    C
 1395: 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 771


8125D1         ?C0253?SCHEDULER:
8125D1 A522              ERET    
----- FUNCTION CasherQueryEnable (END) -------


----- FUNCTION CasherQueryDisable (BEGIN) -----
 FILE: 'scheduler.c'
 1407: bit CasherQueryDisable( void )
 1408: {
 1409: 	ZhkAutoTaskPermission[ 0 ] = 0;
 1410: 	return 1;
8125D3 E4                CLR     A
8125D4 90235D            MOV     DPTR,#ZhkAutoTaskPermission
8125D7 F0                MOVX    @DPTR,A
 1411: }
8125D8 D3                SETB    C
 1412: 
8125D9         ?C0256?SCHEDULER:
8125D9 A522              ERET    
----- FUNCTION CasherQueryDisable (END) -------


----- FUNCTION _ZhkChannelExec (BEGIN) -----
 FILE: 'scheduler.c'
 1645: bit ZhkChannelExec( u_char ChannelNum, u_char ReSendFlag )
 1646: {
8125DB 90175C            MOV     DPTR,#ChannelNum
8125DE EF                MOV     A,R7
8125DF F0                MOVX    @DPTR,A
8125E0 A3                INC     DPTR
8125E1 ED                MOV     A,R5
8125E2 F0                MOVX    @DPTR,A
 1647: 	struct COMMTASK xdata TaskTemp;
 1648: 	
 1649: 	memset( &TaskTemp, 0, sizeof( struct COMMTASK ) );
8125E3 7E00              MOV     R6,#00H
8125E5 7F26              MOV     R7,#026H
8125E7 7D00              MOV     R5,#00H
8125E9 7B00              MOV     R3,#?C?XDATASEG
8125EB 7A17              MOV     R2,#HIGH TaskTemp
8125ED 795E              MOV     R1,#LOW TaskTemp
8125EF A5128008A6        ECALL   ?C?MEMSET
 1650: 	Channel.CommState       = COMM_BUZY;
8125F4 9023B7            MOV     DPTR,#Channel+02H
8125F7 7401              MOV     A,#01H
8125F9 F0                MOVX    @DPTR,A
 1651: 	TaskTemp.Id 		= ID_CHANNEL;
8125FA 90175F            MOV     DPTR,#TaskTemp+01H
8125FD 7415              MOV     A,#015H
8125FF F0                MOVX    @DPTR,A
 1652: 	TaskTemp.Cmd 		= CHANNEL_EXEC;
812600 A3                INC     DPTR
812601 7450              MOV     A,#050H
812603 F0                MOVX    @DPTR,A
 1653: 	TaskTemp.Sn		= Channel.Sn;
812604 9023B6            MOV     DPTR,#Channel+01H
812607 E0                MOVX    A,@DPTR
812608 901761            MOV     DPTR,#TaskTemp+03H
81260B F0                MOVX    @DPTR,A
 1654: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
81260C 90175E            MOV     DPTR,#TaskTemp
81260F 7442              MOV     A,#042H
812611 F0                MOVX    @DPTR,A
 1655: 	TaskTemp.ParamLen	= 2;
812612 901763            MOV     DPTR,#TaskTemp+05H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 772


812615 7402              MOV     A,#02H
812617 F0                MOVX    @DPTR,A
 1656: 	TaskTemp.Param[ 0 ]     = ChannelNum;
812618 90175C            MOV     DPTR,#ChannelNum
81261B E0                MOVX    A,@DPTR
81261C 901764            MOV     DPTR,#TaskTemp+06H
81261F F0                MOVX    @DPTR,A
 1657: 	TaskTemp.Param[ 1 ]     = ReSendFlag;
812620 90175D            MOV     DPTR,#ReSendFlag
812623 E0                MOVX    A,@DPTR
812624 901765            MOV     DPTR,#TaskTemp+07H
812627 F0                MOVX    @DPTR,A
 1658: 	return ZhkSchedulerAddTask( &TaskTemp );
812628 7E17              MOV     R6,#HIGH TaskTemp
81262A 7F5E              MOV     R7,#LOW TaskTemp
81262C A5128088CE        ECALL   _ZhkSchedulerAddTask
812631 EF                MOV     A,R7
812632 24FF              ADD     A,#0FFH
 1659: }
812634         ?C0301?SCHEDULER:
812634 A522              ERET    
----- FUNCTION _ZhkChannelExec (END) -------


----- FUNCTION _ZhkChannelTest (BEGIN) -----
 FILE: 'scheduler.c'
 1678: bit ZhkChannelTest( u_char ChannelNum )
 1679: {
;---- Variable 'ChannelNum' assigned to Register 'R7' ----
 1680: 	struct COMMTASK xdata TaskTemp;
 1681: 	
 1682: 	Channel.CommState       = COMM_BUZY;
812636 9023B7            MOV     DPTR,#Channel+02H
812639 7401              MOV     A,#01H
81263B F0                MOVX    @DPTR,A
 1683: 	TaskTemp.Id 		= ID_CHANNEL;
81263C 90175D            MOV     DPTR,#TaskTemp+01H
81263F 7415              MOV     A,#015H
812641 F0                MOVX    @DPTR,A
 1684: 	TaskTemp.Cmd 		= CHANNEL_TEST;
812642 A3                INC     DPTR
812643 7452              MOV     A,#052H
812645 F0                MOVX    @DPTR,A
 1685: 	TaskTemp.Sn		= Channel.Sn;
812646 9023B6            MOV     DPTR,#Channel+01H
812649 E0                MOVX    A,@DPTR
81264A 90175F            MOV     DPTR,#TaskTemp+03H
81264D F0                MOVX    @DPTR,A
 1686: 	TaskTemp.Priority       = PRIORITY_NORMAL; 
81264E 90175C            MOV     DPTR,#TaskTemp
812651 7442              MOV     A,#042H
812653 F0                MOVX    @DPTR,A
 1687: 	TaskTemp.ParamLen	= 1;
812654 901761            MOV     DPTR,#TaskTemp+05H
812657 7401              MOV     A,#01H
812659 F0                MOVX    @DPTR,A
 1688: 	TaskTemp.Param[ 0 ]     = ChannelNum;
81265A A3                INC     DPTR
81265B EF                MOV     A,R7
81265C F0                MOVX    @DPTR,A
 1689: 	return ZhkSchedulerAddTask( &TaskTemp );
81265D 7E17              MOV     R6,#HIGH TaskTemp
81265F 7F5C              MOV     R7,#LOW TaskTemp
812661 A5128088CE        ECALL   _ZhkSchedulerAddTask
812666 EF                MOV     A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 773


812667 24FF              ADD     A,#0FFH
 1690: }
812669         ?C0303?SCHEDULER:
812669 A522              ERET    
----- FUNCTION _ZhkChannelTest (END) -------


----- FUNCTION TestATcommand (BEGIN) -----
 FILE: 'scheduler.c'
 1727: uchar TestATcommand()
 1728: {
 1729: 	uchar temp = 0;
 1730: 	uchar TestTimer = 0;
81266B E4                CLR     A
81266C 90180B            MOV     DPTR,#temp
81266F F0                MOVX    @DPTR,A
 1731: #ifndef _DEBUG_NO_MOBILE
812670 A3                INC     DPTR
812671 F0                MOVX    @DPTR,A
 1732: 	IsPressMobile = 0;
812672 9023B4            MOV     DPTR,#IsPressMobile
812675 F0                MOVX    @DPTR,A
812676         ?C0304?SCHEDULER:
 1733: 	while( 1 )
 1734: 	{
 1735: 		temp = SendATcommandToMobile();
812676 A5128126C1        ECALL   SendATcommandToMobile
81267B 90180B            MOV     DPTR,#temp
81267E EF                MOV     A,R7
81267F F0                MOVX    @DPTR,A
 1736: 		if( temp == 3 )
812680 BF030A            CJNE    R7,#03H,?C0306?SCHEDULER
 1737: 		{
 1738: 			IsPressMobile = 1;
812683 9023B4            MOV     DPTR,#IsPressMobile
812686 7401              MOV     A,#01H
812688 F0                MOVX    @DPTR,A
 1739: 			return 3;
812689 7F03              MOV     R7,#03H
81268B 8032              SJMP    ?C0307?SCHEDULER
 1740: 		}
81268D         ?C0306?SCHEDULER:
 1741: 		if( temp == 2 )
81268D 90180B            MOV     DPTR,#temp
812690 E0                MOVX    A,@DPTR
812691 B40207            CJNE    A,#02H,?C0308?SCHEDULER
 1742: 		{
 1743: 			SchedulerProcess();
812694 A512809545        ECALL   SchedulerProcess
 1744: 			continue;
812699 80DB              SJMP    ?C0304?SCHEDULER
 1745: 		}
81269B         ?C0308?SCHEDULER:
 1746: 		else
 1747: 		{
 1748: 			if( temp == 0 )
81269B 90180B            MOV     DPTR,#temp
81269E E0                MOVX    A,@DPTR
81269F 7009              JNZ     ?C0310?SCHEDULER
 1749: 			{
 1750: 				IsPressMobile = 1;
8126A1 9023B4            MOV     DPTR,#IsPressMobile
8126A4 04                INC     A
8126A5 F0                MOVX    @DPTR,A
 1751: 				return 0;			
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 774


8126A6 7F00              MOV     R7,#00H
8126A8 8015              SJMP    ?C0307?SCHEDULER
 1752: 			}
8126AA         ?C0310?SCHEDULER:
 1753: 	 		if( TestTimer < 1 )
8126AA 90180C            MOV     DPTR,#TestTimer
8126AD E0                MOVX    A,@DPTR
8126AE C3                CLR     C
8126AF 9401              SUBB    A,#01H
8126B1 5005              JNC     ?C0311?SCHEDULER
 1754: 			{
 1755: 				TestTimer++;
8126B3 E0                MOVX    A,@DPTR
8126B4 04                INC     A
8126B5 F0                MOVX    @DPTR,A
 1756: 				continue;
8126B6 80BE              SJMP    ?C0304?SCHEDULER
 1757: 			}
8126B8         ?C0311?SCHEDULER:
 1758: 			else
 1759: 			{
 1760: 				IsPressMobile = 1;
8126B8 9023B4            MOV     DPTR,#IsPressMobile
8126BB 7401              MOV     A,#01H
8126BD F0                MOVX    @DPTR,A
 1761: 				return 1;		
8126BE FF                MOV     R7,A
 1762: 			}
 1763: 		}
 1764: 	}
 1765: 	IsPressMobile = 1;
 1766:  #endif
 1767: }
8126BF         ?C0307?SCHEDULER:
8126BF A522              ERET    
----- FUNCTION TestATcommand (END) -------


----- FUNCTION SendATcommandToMobile (BEGIN) -----
 FILE: 'mobile.c'
  614: uchar SendATcommandToMobile()
  615: {
  616: 	static uchar xdata ATTxStatus = MOBILE_BEGIN;		
  617: 	uchar data temp;
  618: 
  619: 	if( ZhkMobileCurrentTask != MOBILE_NULL )
8126C1 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
8126C4 E0                MOVX    A,@DPTR
8126C5 6004              JZ      ?C0116?MOBILE
  620: 	{
  621: //		Trace("\n Have other at command");
  622: 		return 3;
8126C7 7F03              MOV     R7,#03H
8126C9 8042              SJMP    ?C0117?MOBILE
  623: 	}
8126CB         ?C0116?MOBILE:
  624: 	switch( ATTxStatus )
8126CB 900D28            MOV     DPTR,#ATTxStatus
8126CE E0                MOVX    A,@DPTR
8126CF 14                DEC     A
8126D0 6012              JZ      ?C0120?MOBILE
8126D2 04                INC     A
8126D3 7038              JNZ     ?C0117?MOBILE
  625: 	{		
  626: 		ZhkMobileSignalIn();
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 775


  627: 		case MOBILE_BEGIN:					
8126D5         ?C0119?MOBILE:
  628: //			Trace("\n Send test command1");
  629: 			//发送指令
  630: 			ZhkAtCmd( "ATE0", 1 );
8126D5 A51281270F        ECALL   ?L?COM001E
  631: 			ATTxStatus = MOBILE_STEP1;	
8126DA 900D28            MOV     DPTR,#ATTxStatus
8126DD 7401              MOV     A,#01H
8126DF F0                MOVX    @DPTR,A
  632: 			return 2;
8126E0 7F02              MOV     R7,#02H
8126E2 8029              SJMP    ?C0117?MOBILE
  633: 		break;	
  634: 		case MOBILE_STEP1:			// 等待提示符	
8126E4         ?C0120?MOBILE:
  635: 			temp = ZhkAtCmdGetErr();
8126E4 A512812E80        ECALL   ZhkAtCmdGetErr
8126E9 8F28              MOV     temp,R7
  636: //			Trace("\n MOBILE_STEP1 temp = %bu", temp );
  637: 			switch( temp )
8126EB E528              MOV     A,temp
8126ED 14                DEC     A
8126EE 601B              JZ      ?C0121?MOBILE
8126F0 14                DEC     A
8126F1 600F              JZ      ?C0125?MOBILE
8126F3 14                DEC     A
8126F4 6004              JZ      ?C0123?MOBILE
8126F6 2403              ADD     A,#03H
8126F8 7011              JNZ     ?C0121?MOBILE
  638: 			{
  639: 				case ATCMD_ERR_NULL:
  640: 					// 命令成功
  641: 				case ATCMD_ERR_ERR://手机模块有故障应答
8126FA         ?C0123?MOBILE:
  642: 					// 命令失败				
  643: 					ATTxStatus = MOBILE_BEGIN;
8126FA E4                CLR     A
8126FB 900D28            MOV     DPTR,#ATTxStatus
8126FE F0                MOVX    @DPTR,A
  644: 					return 0;
8126FF FF                MOV     R7,A
812700 800B              SJMP    ?C0117?MOBILE
  645: 					break;
  646: 				case ATCMD_ERR_BLOCK:
  647: 					// 阻塞状态直接返回
  648: 					return 2;
  649: 					break;						
  650: 				case ATCMD_ERR_TIMEOUT:
812702         ?C0125?MOBILE:
  651: 					// 指令超时处理				
  652: 					ATTxStatus = MOBILE_BEGIN;
812702 E4                CLR     A
812703 900D28            MOV     DPTR,#ATTxStatus
812706 F0                MOVX    @DPTR,A
  653: 					return 1;			
812707 7F01              MOV     R7,#01H
812709 8002              SJMP    ?C0117?MOBILE
  654: 			}
81270B         ?C0121?MOBILE:
  655: 			return 2;
81270B 7F02              MOV     R7,#02H
  656: 		break;			
  657: 	}	
  658: }
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 776


81270D         ?C0117?MOBILE:
81270D A522              ERET    
----- FUNCTION SendATcommandToMobile (END) -------


----- FUNCTION ?L?COM001E (BEGIN) -----
81270F 7B80              MOV     R3,#BYTE2 0801688H
812711 7A16              MOV     R2,#HIGH 0801688H
812713 7988              MOV     R1,#LOW 0801688H
812715 7D01              MOV     R5,#01H
----- FUNCTION _ZhkAtCmd (BEGIN) -----
 FILE: 'mobile.c'
 1670: uchar ZhkAtCmd( uchar* AtCmd, uchar CmdFlag )
 1671: {
812717 901B7D            MOV     DPTR,#AtCmd
81271A A5128007B6        ECALL   ?C?PSTXDATA
81271F 901B80            MOV     DPTR,#CmdFlag
812722 ED                MOV     A,R5
812723 F0                MOVX    @DPTR,A
 1672: 	uchar DataTemp[ 384 ];
 1673: 	uint data len;
 1674: 
 1675: 	ZhkAtCmdGetErr();
812724 A512812E80        ECALL   ZhkAtCmdGetErr
 1676: 	len = strlen( AtCmd );
812729 901B7D            MOV     DPTR,#AtCmd
81272C A5128007AC        ECALL   ?C?PLDXDATA
812731 A512800010        ECALL   _strlen
812736 8E2E              MOV     len,R6
812738 8F2F              MOV     len+01H,R7
 1677: 	memcpy( DataTemp , AtCmd , len );
81273A 7881              MOV     R0,#LOW DataTemp
81273C 7C1B              MOV     R4,#HIGH DataTemp
81273E 7D00              MOV     R5,#?C?XDATASEG
812740 901B7D            MOV     DPTR,#AtCmd
812743 A5128007AC        ECALL   ?C?PLDXDATA
812748 A51280052D        ECALL   ?C?COPY
 1678: 	DataTemp[ len ] = '\r';	
81274D 7481              MOV     A,#LOW DataTemp
81274F 252F              ADD     A,len+01H
812751 F582              MOV     DPL,A
812753 741B              MOV     A,#HIGH DataTemp
812755 352E              ADDC    A,len
812757 F583              MOV     DPH,A
812759 740D              MOV     A,#0DH
81275B F0                MOVX    @DPTR,A
 1679: 	len++;
81275C 052F              INC     len+01H
81275E E52F              MOV     A,len+01H
812760 7002              JNZ     ?C0334?MOBILE
812762 052E              INC     len
812764         ?C0334?MOBILE:
 1680: //	Trace("\n ZhkAtCmd len = %u", len );
 1681: //	DataTemp[ len ]    = '\0';//ygp change
 1682: 		
 1683: 	ZhkAtCmdErr    	= ATCMD_ERR_BLOCK;
812764 900EB3            MOV     DPTR,#ZhkAtCmdErr
812767 7401              MOV     A,#01H
812769 F0                MOVX    @DPTR,A
 1684: 	SMSErrorCode = 0;
81276A E4                CLR     A
81276B 900EAC            MOV     DPTR,#SMSErrorCode
81276E F0                MOVX    @DPTR,A
81276F A3                INC     DPTR
812770 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 777


 1685: 	ZhkSerialTxMsg( DataTemp , len );	
812771 7B00              MOV     R3,#?C?XDATASEG
812773 7A1B              MOV     R2,#HIGH DataTemp
812775 7981              MOV     R1,#LOW DataTemp
812777 AD2F              MOV     R5,len+01H
812779 AC2E              MOV     R4,len
81277B A512812793        ECALL   _ZhkSerialTxMsg
 1686: 	if( CmdFlag == 1 )
812780 901B80            MOV     DPTR,#CmdFlag
812783 E0                MOVX    A,@DPTR
812784 B40105            CJNE    A,#01H,?C0295?MOBILE
 1687: 		ZhkMobileSecTimer = ZHKMOBILE_CMD_ACKTIMEOUT;
812787 751732            MOV     ZhkMobileSecTimer,#032H
81278A 8003              SJMP    ?C0296?MOBILE
81278C         ?C0295?MOBILE:
 1688: 	else
 1689: 		ZhkMobileSecTimer = ZHKMOBILE_SMS_ACKTIMEOUT;
81278C 751746            MOV     ZhkMobileSecTimer,#046H
81278F         ?C0296?MOBILE:
 1690: //	Trace( "\n ZhkAtCmd Cmd: %s", AtCmd );
 1691: 	return 0;
81278F 7F00              MOV     R7,#00H
 1692: }
812791         ?C0297?MOBILE:
812791 A522              ERET    
----- FUNCTION _ZhkAtCmd (END) -------


----- FUNCTION _ZhkSerialTxMsg (BEGIN) -----
 FILE: 'serial.c'
  117: uchar ZhkSerialTxMsg( uchar* TxBuf , uint len )
  118: {
812793 901D01            MOV     DPTR,#TxBuf
812796 A5128007B6        ECALL   ?C?PSTXDATA
81279B 901D04            MOV     DPTR,#len
81279E EC                MOV     A,R4
81279F F0                MOVX    @DPTR,A
8127A0 A3                INC     DPTR
8127A1 ED                MOV     A,R5
8127A2 F0                MOVX    @DPTR,A
  119: 	if ( len > ZHKSERIALTXBUFLEN ) 
  120: 		return 1;
8127A3 D3                SETB    C
8127A4 9480              SUBB    A,#080H
8127A6 EC                MOV     A,R4
8127A7 9401              SUBB    A,#01H
8127A9 4004              JC      ?C0017?SERIAL
  121: 	while ( ! ZhkSerialIsTxBufNull() )
8127AB 7F01              MOV     R7,#01H
8127AD 8046              SJMP    ?C0016?SERIAL
8127AF         ?C0017?SERIAL:
  122: 			;
8127AF A5128137FD        ECALL   ZhkSerialIsTxBufNull
8127B4 EF                MOV     A,R7
8127B5 60F8              JZ      ?C0017?SERIAL
8127B7         ?C0018?SERIAL:
  123: 
  124: //	Trace("\n ZhkSerialTxMsg len = %u", len );
  125: 	memcpy( ZhkSerialTxBuf , TxBuf , len );
8127B7 901D04            MOV     DPTR,#len
8127BA E0                MOVX    A,@DPTR
8127BB FE                MOV     R6,A
8127BC A3                INC     DPTR
8127BD E0                MOVX    A,@DPTR
8127BE FF                MOV     R7,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 778


8127BF 78CB              MOV     R0,#LOW ZhkSerialTxBuf
8127C1 7C28              MOV     R4,#HIGH ZhkSerialTxBuf
8127C3 7D00              MOV     R5,#?C?XDATASEG
8127C5 901D01            MOV     DPTR,#TxBuf
8127C8 A5128007AC        ECALL   ?C?PLDXDATA
8127CD A51280052D        ECALL   ?C?COPY
  126: 	ZhkSerialPutCh( ZhkSerialTxBuf[ 0 ] );
8127D2 9028CB            MOV     DPTR,#ZhkSerialTxBuf
8127D5 E0                MOVX    A,@DPTR
8127D6 FF                MOV     R7,A
8127D7 A512807204        ECALL   _ZhkSerialPutCh
  127: 	ZhkSerialTxBufRd = 1;
8127DC 902A4D            MOV     DPTR,#ZhkSerialTxBufRd
8127DF E4                CLR     A
8127E0 F0                MOVX    @DPTR,A
8127E1 A3                INC     DPTR
8127E2 04                INC     A
8127E3 F0                MOVX    @DPTR,A
  128: 	ZhkSerialTxBufWr = len;
8127E4 901D04            MOV     DPTR,#len
8127E7 E0                MOVX    A,@DPTR
8127E8 FF                MOV     R7,A
8127E9 A3                INC     DPTR
8127EA E0                MOVX    A,@DPTR
8127EB 902A51            MOV     DPTR,#ZhkSerialTxBufWr
8127EE CF                XCH     A,R7
8127EF F0                MOVX    @DPTR,A
8127F0 A3                INC     DPTR
8127F1 EF                MOV     A,R7
8127F2 F0                MOVX    @DPTR,A
  129: 	#ifdef _DEBUG_MOBILE_TRACE
  130: 		for( i = 0 ; i < len ; i ++ )
  131: 			ZhkSerial1PutCh( TxBuf[ i ] );
  132: 	#endif
  133: 	return 0;
8127F3 7F00              MOV     R7,#00H
  134: }
8127F5         ?C0016?SERIAL:
8127F5 A522              ERET    
----- FUNCTION _ZhkSerialTxMsg (END) -------


----- FUNCTION ScanSPCoin (BEGIN) -----
 FILE: 'IOInput.c'
  301: 	void ScanSPCoin( void )
  302: 	{
  303: 		static uchar xdata PinLowCount;
  304: 		static bit PinLow,PinPulse;
  305: 		if( HardIsCoinIn() )
8127F7 20B320            JB      PinCoinIn,?C0019?IOINPUT
  306: 		{
  307: 			if ( PinLow )
8127FA 300919            JNB     PinLow,?C0020?IOINPUT
  308: 			{
  309: 				if ( PinLowCount < 250 ) PinLowCount ++;
8127FD 902DC7            MOV     DPTR,#PinLowCount
812800 E0                MOVX    A,@DPTR
812801 C3                CLR     C
812802 94FA              SUBB    A,#0FAH
812804 5003              JNC     ?C0021?IOINPUT
812806 E0                MOVX    A,@DPTR
812807 04                INC     A
812808 F0                MOVX    @DPTR,A
812809         ?C0021?IOINPUT:
  310: 				if ( PinLowCount >= 3 ) PinPulse = 1;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 779


812809 902DC7            MOV     DPTR,#PinLowCount
81280C E0                MOVX    A,@DPTR
81280D C3                CLR     C
81280E 9403              SUBB    A,#03H
812810 4030              JC      ?C0024?IOINPUT
812812 D20A              SETB    PinPulse
  311: 			}
812814 802C              SJMP    ?C0024?IOINPUT
812816         ?C0020?IOINPUT:
  312: 			else
  313: 			{
  314: 				PinLow   = 1;
812816 D209              SETB    PinLow
  315: 				PinPulse = 0;
  316: 				PinLowCount = 0;
  317: 			}
  318: 			
  319: 		}
812818 8021              SJMP    ?C0134?IOINPUT
81281A         ?C0019?IOINPUT:
  320: 		else
  321: 		{
  322: 			if ( PinLow )
81281A 300909            JNB     PinLow,?C0025?IOINPUT
  323: 			{
  324: 				PinLowCount = 0;
81281D E4                CLR     A
81281E 902DC7            MOV     DPTR,#PinLowCount
812821 F0                MOVX    @DPTR,A
  325: 				PinLow      = 0;
812822 C209              CLR     PinLow
  326: 			}	
812824 801C              SJMP    ?C0024?IOINPUT
812826         ?C0025?IOINPUT:
  327: 			else
  328: 			{
  329: 				PinLowCount ++;
812826 902DC7            MOV     DPTR,#PinLowCount
812829 E0                MOVX    A,@DPTR
81282A 04                INC     A
81282B F0                MOVX    @DPTR,A
  330: 				if ( PinLowCount >= 3 && PinPulse )
81282C E0                MOVX    A,@DPTR
81282D C3                CLR     C
81282E 9403              SUBB    A,#03H
812830 4010              JC      ?C0024?IOINPUT
812832 300A0D            JNB     PinPulse,?C0024?IOINPUT
  331: 				{
  332: 					ZhkCoiner.Count ++;
812835 902DD0            MOV     DPTR,#ZhkCoiner+01H
812838 E0                MOVX    A,@DPTR
812839 04                INC     A
81283A F0                MOVX    @DPTR,A
  333: 					PinPulse = 0;
81283B         
81283B C20A              CLR     PinPulse
  334: 					PinLowCount = 0;
81283D E4                CLR     A
81283E 902DC7            MOV     DPTR,#PinLowCount
812841 F0                MOVX    @DPTR,A
  335: 				}
  336: 			}
  337: 		}
812842         ?C0024?IOINPUT:
  338: 		if ( PinLowCount >= 250 ) 
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 780


812842 902DC7            MOV     DPTR,#PinLowCount
812845 E0                MOVX    A,@DPTR
812846 C3                CLR     C
812847 94FA              SUBB    A,#0FAH
812849 902DCF            MOV     DPTR,#ZhkCoiner
81284C E0                MOVX    A,@DPTR
81284D 4005              JC      ?C0028?IOINPUT
  339: 			ZhkCoiner.State |= 1 << 6;
81284F 4440              ORL     A,#040H
812851 F0                MOVX    @DPTR,A
812852 8003              SJMP    ?C0030?IOINPUT
812854         ?C0028?IOINPUT:
  340: 		else
  341: 			ZhkCoiner.State &= ~( 1 << 6 );
812854 54BF              ANL     A,#0BFH
812856 F0                MOVX    @DPTR,A
  342: 	}
812857         ?C0030?IOINPUT:
812857 A522              ERET    
----- FUNCTION ScanSPCoin (END) -------


----- FUNCTION ZyzChkCoinChnSta (BEGIN) -----
 FILE: 'IOInput.c'
  344: 	void ZyzChkCoinChnSta( void ) using 1
812859 C0D0              PUSH    PSW
81285B 75D008            MOV     PSW,#08H
  345: 	{
  346: 		//------------------------------------------------------
  347: 	    //Added by Andy on 20071027 for test02 .
  348: 	    #define HardIsCoinChn1In()   !( CountIOState & BitCoinChn1 )
  349: 		#define HardIsCoinChn2In()   !( CountIOState & BitCoinChn2 )
  350: 	    #define HardIsCoinChn3In()   !( CountIOState & BitCoinChn3 )
  351: 		#define HardIsCoinChn4In()   !( CountIOState & BitCoinChn4 )
  352: 	    #define HardIsCoinChn5In()   !( CountIOState & BitCoinChn5 )
  353: 		#define HardIsCoinChn6In()   !( CountIOState & BitCoinChn6 )
  354: 	    #define CoinTimes  2
  355: 	    static uchar xdata PinLowCount1 = 0;
  356: 		static uchar xdata PinLowCount2 = 0;
  357: 		static uchar xdata PinLowCount3 = 0;
  358: 		static uchar xdata PinLowCount4 = 0;
  359: 		static uchar xdata PinLowCount5 = 0;
  360: 		static uchar xdata PinLowCount6 = 0;
  361: 		static bit PinLow1   = 0;
  362: 		static bit PinLow2   = 0;
  363: 		static bit PinLow3   = 0;
  364: 		static bit PinLow4   = 0;
  365: 		static bit PinLow5   = 0;
  366: 		static bit PinLow6   = 0;
  367: 	    static bit PinPulse1 = 0;
  368: 	    static bit PinPulse2 = 0;
  369: 		static bit PinPulse3 = 0;
  370: 	    static bit PinPulse4 = 0;
  371: 	    static bit PinPulse5 = 0;
  372: 	  	static bit PinPulse6 = 0;
  373: 	  //static bit PowerOn1MinFlag = 0;
  374: 	    static uchar xdata CurrentChannel = 0; 
  375: 		uchar data CountIOState;
  376: 
  377: 		/*
  378: 	    if( (PowerOn1MinFlag == 0) && ( ColumnTestTimer != 0 ) )
  379: 		{
  380: 		    return;
  381: 		}
  382: 		else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 781


  383: 	    {
  384: 		    PowerOn1MinFlag = 1;
  385: 		}
  386: 	    */
  387:         ScanSPCoin();  //Scan the single pulse interface coin acceptor...
81285E A5128127F7        ECALL   ScanSPCoin
  388: 		ZhkHardIOInputSelect();
812863 75900D            MOV     P1,#0DH
  389: 		_nop_();
812866 00                NOP     
  390: 		_nop_();
812867 00                NOP     
  391: 		_nop_();
812868 00                NOP     
  392: 		CountIOState = P0;
812869 858046            MOV     CountIOState,P0
  393: 		ZhkHardSramSelect();
81286C 759008            MOV     P1,#08H
  394: 	    if( !( CountIOState & 0x04 ) )
81286F E546              MOV     A,CountIOState
812871 20E208            JB      ACC.2,?C0031?IOINPUT
  395: 	    {
  396: 		    //CurrentChannel |= 0x01;
  397: 			CurrentChannel = 0x01;
812874 902DCE            MOV     DPTR,#CurrentChannel
812877 7401              MOV     A,#01H
812879 F0                MOVX    @DPTR,A
  398: 		}
81287A 803F              SJMP    ?C0032?IOINPUT
81287C         ?C0031?IOINPUT:
  399: 		else if( !( CountIOState & 0x08 ) )
81287C E546              MOV     A,CountIOState
81287E 20E308            JB      ACC.3,?C0033?IOINPUT
  400: 		{
  401: 		    CurrentChannel = 0x02;
812881 902DCE            MOV     DPTR,#CurrentChannel
812884 7402              MOV     A,#02H
812886 F0                MOVX    @DPTR,A
  402: 		}
812887 8032              SJMP    ?C0032?IOINPUT
812889         ?C0033?IOINPUT:
  403: 		else if( !( CountIOState & 0x10 ) )
812889 E546              MOV     A,CountIOState
81288B 20E408            JB      ACC.4,?C0035?IOINPUT
  404: 		{
  405: 		    CurrentChannel = 0x04;
81288E 902DCE            MOV     DPTR,#CurrentChannel
812891 7404              MOV     A,#04H
812893 F0                MOVX    @DPTR,A
  406: 		}
812894 8025              SJMP    ?C0032?IOINPUT
812896         ?C0035?IOINPUT:
  407: 		else if( !( CountIOState & 0x20 ) )
812896 E546              MOV     A,CountIOState
812898 20E508            JB      ACC.5,?C0037?IOINPUT
  408: 		{
  409: 		    CurrentChannel = 0x08;
81289B 902DCE            MOV     DPTR,#CurrentChannel
81289E 7408              MOV     A,#08H
8128A0 F0                MOVX    @DPTR,A
  410: 		}
8128A1 8018              SJMP    ?C0032?IOINPUT
8128A3         ?C0037?IOINPUT:
  411: 		else if( !( CountIOState & 0x40 ) )
8128A3 E546              MOV     A,CountIOState
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 782


8128A5 20E608            JB      ACC.6,?C0039?IOINPUT
  412: 		{
  413: 		    CurrentChannel = 0x10;
8128A8 902DCE            MOV     DPTR,#CurrentChannel
8128AB 7410              MOV     A,#010H
8128AD F0                MOVX    @DPTR,A
  414: 		}
8128AE 800B              SJMP    ?C0032?IOINPUT
8128B0         ?C0039?IOINPUT:
  415: 		else if( !( CountIOState & 0x80 ) )
8128B0 E546              MOV     A,CountIOState
8128B2 20E706            JB      ACC.7,?C0032?IOINPUT
  416: 		{
  417: 	    	CurrentChannel = 0x20;
8128B5 902DCE            MOV     DPTR,#CurrentChannel
8128B8 7420              MOV     A,#020H
8128BA F0                MOVX    @DPTR,A
  418: 		}
8128BB         ?C0032?IOINPUT:
  419: 		//******************************************************************
  420: 		//Chn1
  421: 		if( CurrentChannel & 0x01 )
8128BB 902DCE            MOV     DPTR,#CurrentChannel
8128BE E0                MOVX    A,@DPTR
8128BF FF                MOV     R7,A
8128C0 30E06E            JNB     ACC.0,?C0042?IOINPUT
  422: 		{
  423: 			if( HardIsCoinChn1In() )
8128C3 E546              MOV     A,CountIOState
8128C5 20E227            JB      ACC.2,?C0043?IOINPUT
  424: 			{
  425: 				if ( PinLow1 )
8128C8 300B19            JNB     PinLow1,?C0044?IOINPUT
  426: 				{
  427: 					if ( PinLowCount1 < 250 ) PinLowCount1 ++;
8128CB 902DC8            MOV     DPTR,#PinLowCount1
8128CE E0                MOVX    A,@DPTR
8128CF C3                CLR     C
8128D0 94FA              SUBB    A,#0FAH
8128D2 5003              JNC     ?C0045?IOINPUT
8128D4 E0                MOVX    A,@DPTR
8128D5 04                INC     A
8128D6 F0                MOVX    @DPTR,A
8128D7         ?C0045?IOINPUT:
  428: 					if ( PinLowCount1 >= CoinTimes )  PinPulse1 = 1;
8128D7 902DC8            MOV     DPTR,#PinLowCount1
8128DA E0                MOVX    A,@DPTR
8128DB C3                CLR     C
8128DC 9402              SUBB    A,#02H
8128DE 403E              JC      ?C0048?IOINPUT
8128E0 D211              SETB    PinPulse1
  429: 				}
8128E2 803A              SJMP    ?C0048?IOINPUT
8128E4         ?C0044?IOINPUT:
  430: 				else
  431: 				{
  432: 					PinLow1      = 1;
8128E4 D20B              SETB    PinLow1
  433: 					PinPulse1    = 0;
8128E6 C211              CLR     PinPulse1
  434: 					PinLowCount1 = 0;
8128E8 E4                CLR     A
8128E9 902DC8            MOV     DPTR,#PinLowCount1
8128EC F0                MOVX    @DPTR,A
  435: 				}
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 783


  436: 				
  437: 			}
8128ED 802F              SJMP    ?C0048?IOINPUT
8128EF         ?C0043?IOINPUT:
  438: 			else
  439: 			{
  440: 				if ( PinLow1 )
8128EF 300B09            JNB     PinLow1,?C0049?IOINPUT
  441: 				{
  442: 					PinLowCount1 = 0;
8128F2 E4                CLR     A
8128F3 902DC8            MOV     DPTR,#PinLowCount1
8128F6 F0                MOVX    @DPTR,A
  443: 					PinLow1      = 0;
8128F7 C20B              CLR     PinLow1
  444: 				}	
8128F9 8023              SJMP    ?C0048?IOINPUT
8128FB         ?C0049?IOINPUT:
  445: 				else
  446: 				{
  447: 					PinLowCount1 ++;
8128FB 902DC8            MOV     DPTR,#PinLowCount1
8128FE E0                MOVX    A,@DPTR
8128FF 04                INC     A
812900 F0                MOVX    @DPTR,A
  448: 					if ( PinLowCount1 >= CoinTimes && PinPulse1 )
812901 E0                MOVX    A,@DPTR
812902 C3                CLR     C
812903 9402              SUBB    A,#02H
812905 4017              JC      ?C0048?IOINPUT
812907 301114            JNB     PinPulse1,?C0048?IOINPUT
  449: 					{
  450: 						ZhkCoiner.CountChn1 ++;
81290A 902DD1            MOV     DPTR,#ZhkCoiner+02H
81290D E0                MOVX    A,@DPTR
81290E 04                INC     A
81290F F0                MOVX    @DPTR,A
  451: 						PinPulse1 = 0;
812910 C211              CLR     PinPulse1
  452: 						PinLowCount1 = 0;
812912 E4                CLR     A
812913 902DC8            MOV     DPTR,#PinLowCount1
812916 F0                MOVX    @DPTR,A
  453: 	                    CurrentChannel &= 0xfe;
812917 EF                MOV     A,R7
812918 54FE              ANL     A,#0FEH
81291A 902DCE            MOV     DPTR,#CurrentChannel
81291D F0                MOVX    @DPTR,A
  454: 					}
  455: 				}
  456: 			}
81291E         ?C0048?IOINPUT:
  457: 			if ( PinLowCount1 >= 250 ) 
81291E 902DC8            MOV     DPTR,#PinLowCount1
812921 E0                MOVX    A,@DPTR
812922 C3                CLR     C
812923 94FA              SUBB    A,#0FAH
812925 902DCF            MOV     DPTR,#ZhkCoiner
812928 E0                MOVX    A,@DPTR
812929 5003              JNC     $ + 5H
81292B 022B7A            LJMP    ?C0144?IOINPUT
  458: 				ZhkCoiner.State |= 1 << 6;
81292E 022B75            LJMP    ?C0143?IOINPUT
812931         ?C0042?IOINPUT:
  459: 			else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 784


  460: 				ZhkCoiner.State &= ~( 1 << 6 );    
  461: 		}
  462: 		else if( CurrentChannel & 0x02 )
812931 902DCE            MOV     DPTR,#CurrentChannel
812934 E0                MOVX    A,@DPTR
812935 FF                MOV     R7,A
812936 30E16E            JNB     ACC.1,?C0055?IOINPUT
  463: 		{
  464: 			if( HardIsCoinChn2In() )
812939 E546              MOV     A,CountIOState
81293B 20E327            JB      ACC.3,?C0056?IOINPUT
  465: 			{
  466: 				if ( PinLow2 )
81293E 300C19            JNB     PinLow2,?C0057?IOINPUT
  467: 				{
  468: 					if ( PinLowCount2 < 250 ) PinLowCount2 ++;
812941 902DC9            MOV     DPTR,#PinLowCount2
812944 E0                MOVX    A,@DPTR
812945 C3                CLR     C
812946 94FA              SUBB    A,#0FAH
812948 5003              JNC     ?C0058?IOINPUT
81294A E0                MOVX    A,@DPTR
81294B 04                INC     A
81294C F0                MOVX    @DPTR,A
81294D         ?C0058?IOINPUT:
  469: 					if ( PinLowCount2 >= CoinTimes )  PinPulse2 = 1;
81294D 902DC9            MOV     DPTR,#PinLowCount2
812950 E0                MOVX    A,@DPTR
812951 C3                CLR     C
812952 9402              SUBB    A,#02H
812954 403E              JC      ?C0061?IOINPUT
812956 D212              SETB    PinPulse2
  470: 				}
812958 803A              SJMP    ?C0061?IOINPUT
81295A         ?C0057?IOINPUT:
  471: 				else
  472: 				{
  473: 					PinLow2      = 1;
81295A D20C              SETB    PinLow2
  474: 					PinPulse2    = 0;
81295C C212              CLR     PinPulse2
  475: 					PinLowCount2 = 0;
81295E E4                CLR     A
81295F 902DC9            MOV     DPTR,#PinLowCount2
812962 F0                MOVX    @DPTR,A
  476: 				}
  477: 				
  478: 			}
812963 802F              SJMP    ?C0061?IOINPUT
812965         ?C0056?IOINPUT:
  479: 			else
  480: 			{
  481: 				if ( PinLow2 )
812965 300C09            JNB     PinLow2,?C0062?IOINPUT
  482: 				{
  483: 					PinLowCount2 = 0;
812968 E4                CLR     A
812969 902DC9            MOV     DPTR,#PinLowCount2
81296C F0                MOVX    @DPTR,A
  484: 					PinLow2      = 0;
81296D C20C              CLR     PinLow2
  485: 				}	
81296F 8023              SJMP    ?C0061?IOINPUT
812971         ?C0062?IOINPUT:
  486: 				else
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 785


  487: 				{
  488: 					PinLowCount2 ++;
812971 902DC9            MOV     DPTR,#PinLowCount2
812974 E0                MOVX    A,@DPTR
812975 04                INC     A
812976 F0                MOVX    @DPTR,A
  489: 					if ( PinLowCount2 >= CoinTimes && PinPulse2 )
812977 E0                MOVX    A,@DPTR
812978 C3                CLR     C
812979 9402              SUBB    A,#02H
81297B 4017              JC      ?C0061?IOINPUT
81297D 301214            JNB     PinPulse2,?C0061?IOINPUT
  490: 					{
  491: 						ZhkCoiner.CountChn2 ++;
812980 902DD2            MOV     DPTR,#ZhkCoiner+03H
812983 E0                MOVX    A,@DPTR
812984 04                INC     A
812985 F0                MOVX    @DPTR,A
  492: 						PinPulse2 = 0;
812986 C212              CLR     PinPulse2
  493: 						PinLowCount2 = 0;
812988 E4                CLR     A
812989 902DC9            MOV     DPTR,#PinLowCount2
81298C F0                MOVX    @DPTR,A
  494: 	                    CurrentChannel &= 0xfd;
81298D EF                MOV     A,R7
81298E 54FD              ANL     A,#0FDH
812990 902DCE            MOV     DPTR,#CurrentChannel
812993 F0                MOVX    @DPTR,A
  495: 					}
  496: 				}
  497: 			}
812994         ?C0061?IOINPUT:
  498: 			if ( PinLowCount2 >= 250 ) 
812994 902DC9            MOV     DPTR,#PinLowCount2
812997 E0                MOVX    A,@DPTR
812998 C3                CLR     C
812999 94FA              SUBB    A,#0FAH
81299B 902DCF            MOV     DPTR,#ZhkCoiner
81299E E0                MOVX    A,@DPTR
81299F 4003              JC      ?C0065?IOINPUT
  499: 				ZhkCoiner.State |= 1 << 6;
8129A1         
8129A1 022B75            LJMP    ?C0143?IOINPUT
8129A4         ?C0065?IOINPUT:
  500: 			else
  501: 				ZhkCoiner.State &= ~( 1 << 6 );    
8129A4         
  502: 		}
8129A4 022B7A            LJMP    ?C0144?IOINPUT
8129A7         ?C0055?IOINPUT:
  503: 	    else if( CurrentChannel & 0x04 )
8129A7 902DCE            MOV     DPTR,#CurrentChannel
8129AA E0                MOVX    A,@DPTR
8129AB FF                MOV     R7,A
8129AC 30E26E            JNB     ACC.2,?C0068?IOINPUT
  504: 		{
  505: 			if( HardIsCoinChn3In() )
8129AF E546              MOV     A,CountIOState
8129B1 20E427            JB      ACC.4,?C0069?IOINPUT
  506: 			{
  507: 				if ( PinLow3 )
8129B4 300D19            JNB     PinLow3,?C0070?IOINPUT
  508: 				{
  509: 					if ( PinLowCount3 < 250 ) PinLowCount3 ++;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 786


8129B7 902DCA            MOV     DPTR,#PinLowCount3
8129BA E0                MOVX    A,@DPTR
8129BB C3                CLR     C
8129BC 94FA              SUBB    A,#0FAH
8129BE 5003              JNC     ?C0071?IOINPUT
8129C0 E0                MOVX    A,@DPTR
8129C1 04                INC     A
8129C2 F0                MOVX    @DPTR,A
8129C3         ?C0071?IOINPUT:
  510: 					if ( PinLowCount3 >= CoinTimes )  PinPulse3 = 1;
8129C3 902DCA            MOV     DPTR,#PinLowCount3
8129C6 E0                MOVX    A,@DPTR
8129C7 C3                CLR     C
8129C8 9402              SUBB    A,#02H
8129CA 403E              JC      ?C0074?IOINPUT
8129CC D213              SETB    PinPulse3
  511: 				}
8129CE 803A              SJMP    ?C0074?IOINPUT
8129D0         ?C0070?IOINPUT:
  512: 				else
  513: 				{
  514: 					PinLow3      = 1;
8129D0 D20D              SETB    PinLow3
  515: 					PinPulse3    = 0;
8129D2 C213              CLR     PinPulse3
  516: 					PinLowCount3 = 0;
8129D4 E4                CLR     A
8129D5 902DCA            MOV     DPTR,#PinLowCount3
8129D8 F0                MOVX    @DPTR,A
  517: 				}
  518: 				
  519: 			}
8129D9 802F              SJMP    ?C0074?IOINPUT
8129DB         ?C0069?IOINPUT:
  520: 			else
  521: 			{
  522: 				if ( PinLow3 )
8129DB 300D09            JNB     PinLow3,?C0075?IOINPUT
  523: 				{
  524: 					PinLowCount3 = 0;
8129DE E4                CLR     A
8129DF 902DCA            MOV     DPTR,#PinLowCount3
8129E2 F0                MOVX    @DPTR,A
  525: 					PinLow3      = 0;
8129E3 C20D              CLR     PinLow3
  526: 				}	
8129E5 8023              SJMP    ?C0074?IOINPUT
8129E7         ?C0075?IOINPUT:
  527: 				else
  528: 				{
  529: 					PinLowCount3 ++;
8129E7 902DCA            MOV     DPTR,#PinLowCount3
8129EA E0                MOVX    A,@DPTR
8129EB 04                INC     A
8129EC F0                MOVX    @DPTR,A
  530: 					if ( PinLowCount3 >= CoinTimes && PinPulse3 )
8129ED E0                MOVX    A,@DPTR
8129EE C3                CLR     C
8129EF 9402              SUBB    A,#02H
8129F1 4017              JC      ?C0074?IOINPUT
8129F3 301314            JNB     PinPulse3,?C0074?IOINPUT
  531: 					{
  532: 						ZhkCoiner.CountChn3 ++;
8129F6 902DD3            MOV     DPTR,#ZhkCoiner+04H
8129F9 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 787


8129FA 04                INC     A
8129FB F0                MOVX    @DPTR,A
  533: 						PinPulse3 = 0;
8129FC C213              CLR     PinPulse3
  534: 						PinLowCount3 = 0;
8129FE E4                CLR     A
8129FF 902DCA            MOV     DPTR,#PinLowCount3
812A02 F0                MOVX    @DPTR,A
  535: 	                    CurrentChannel &= 0xfb;
812A03 EF                MOV     A,R7
812A04 54FB              ANL     A,#0FBH
812A06 902DCE            MOV     DPTR,#CurrentChannel
812A09 F0                MOVX    @DPTR,A
  536: 					}
  537: 				}
  538: 			}
812A0A         ?C0074?IOINPUT:
  539: 			if ( PinLowCount3 >= 250 ) 
812A0A 902DCA            MOV     DPTR,#PinLowCount3
812A0D E0                MOVX    A,@DPTR
812A0E C3                CLR     C
812A0F 94FA              SUBB    A,#0FAH
812A11 902DCF            MOV     DPTR,#ZhkCoiner
812A14 E0                MOVX    A,@DPTR
812A15 4003              JC      ?C0078?IOINPUT
  540: 				ZhkCoiner.State |= 1 << 6;
812A17         
812A17 022B75            LJMP    ?C0143?IOINPUT
812A1A         ?C0078?IOINPUT:
  541: 			else
  542: 				ZhkCoiner.State &= ~( 1 << 6 );    
812A1A         
  543: 		}
812A1A 022B7A            LJMP    ?C0144?IOINPUT
812A1D         ?C0068?IOINPUT:
  544: 	    else if( CurrentChannel & 0x08 )
812A1D 902DCE            MOV     DPTR,#CurrentChannel
812A20 E0                MOVX    A,@DPTR
812A21 FF                MOV     R7,A
812A22 30E36E            JNB     ACC.3,?C0081?IOINPUT
  545: 		{
  546: 			if( HardIsCoinChn4In() )
812A25 E546              MOV     A,CountIOState
812A27 20E527            JB      ACC.5,?C0082?IOINPUT
  547: 			{
  548: 				if ( PinLow4 )
812A2A 300E19            JNB     PinLow4,?C0083?IOINPUT
  549: 				{
  550: 					if ( PinLowCount4 < 250 ) PinLowCount4 ++;
812A2D 902DCB            MOV     DPTR,#PinLowCount4
812A30 E0                MOVX    A,@DPTR
812A31 C3                CLR     C
812A32 94FA              SUBB    A,#0FAH
812A34 5003              JNC     ?C0084?IOINPUT
812A36 E0                MOVX    A,@DPTR
812A37 04                INC     A
812A38 F0                MOVX    @DPTR,A
812A39         ?C0084?IOINPUT:
  551: 					if ( PinLowCount4 >= CoinTimes )  PinPulse4 = 1;
812A39 902DCB            MOV     DPTR,#PinLowCount4
812A3C E0                MOVX    A,@DPTR
812A3D C3                CLR     C
812A3E 9402              SUBB    A,#02H
812A40 403E              JC      ?C0087?IOINPUT
812A42 D214              SETB    PinPulse4
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 788


  552: 				}
812A44 803A              SJMP    ?C0087?IOINPUT
812A46         ?C0083?IOINPUT:
  553: 				else
  554: 				{
  555: 					PinLow4      = 1;
812A46 D20E              SETB    PinLow4
  556: 					PinPulse4    = 0;
812A48 C214              CLR     PinPulse4
  557: 					PinLowCount4 = 0;
812A4A E4                CLR     A
812A4B 902DCB            MOV     DPTR,#PinLowCount4
812A4E F0                MOVX    @DPTR,A
  558: 				}
  559: 				
  560: 			}
812A4F 802F              SJMP    ?C0087?IOINPUT
812A51         ?C0082?IOINPUT:
  561: 			else
  562: 			{
  563: 				if ( PinLow4 )
812A51 300E09            JNB     PinLow4,?C0088?IOINPUT
  564: 				{
  565: 					PinLowCount4 = 0;
812A54 E4                CLR     A
812A55 902DCB            MOV     DPTR,#PinLowCount4
812A58 F0                MOVX    @DPTR,A
  566: 					PinLow4      = 0;
812A59 C20E              CLR     PinLow4
  567: 				}	
812A5B 8023              SJMP    ?C0087?IOINPUT
812A5D         ?C0088?IOINPUT:
  568: 				else
  569: 				{
  570: 					PinLowCount4 ++;
812A5D 902DCB            MOV     DPTR,#PinLowCount4
812A60 E0                MOVX    A,@DPTR
812A61 04                INC     A
812A62 F0                MOVX    @DPTR,A
  571: 					if ( PinLowCount4 >= CoinTimes && PinPulse4 )
812A63 E0                MOVX    A,@DPTR
812A64 C3                CLR     C
812A65 9402              SUBB    A,#02H
812A67 4017              JC      ?C0087?IOINPUT
812A69 301414            JNB     PinPulse4,?C0087?IOINPUT
  572: 					{
  573: 						ZhkCoiner.CountChn4 ++;
812A6C 902DD4            MOV     DPTR,#ZhkCoiner+05H
812A6F E0                MOVX    A,@DPTR
812A70 04                INC     A
812A71 F0                MOVX    @DPTR,A
  574: 						PinPulse4 = 0;
812A72 C214              CLR     PinPulse4
  575: 						PinLowCount4 = 0;
812A74 E4                CLR     A
812A75 902DCB            MOV     DPTR,#PinLowCount4
812A78 F0                MOVX    @DPTR,A
  576: 	                    CurrentChannel &= 0xf7;
812A79 EF                MOV     A,R7
812A7A 54F7              ANL     A,#0F7H
812A7C 902DCE            MOV     DPTR,#CurrentChannel
812A7F F0                MOVX    @DPTR,A
  577: 					}
  578: 				}
  579: 			}
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 789


812A80         ?C0087?IOINPUT:
  580: 			if ( PinLowCount4 >= 250 ) 
812A80 902DCB            MOV     DPTR,#PinLowCount4
812A83 E0                MOVX    A,@DPTR
812A84 C3                CLR     C
812A85 94FA              SUBB    A,#0FAH
812A87 902DCF            MOV     DPTR,#ZhkCoiner
812A8A E0                MOVX    A,@DPTR
812A8B 4003              JC      ?C0091?IOINPUT
  581: 				ZhkCoiner.State |= 1 << 6;
812A8D         
812A8D 022B75            LJMP    ?C0143?IOINPUT
812A90         ?C0091?IOINPUT:
  582: 			else
  583: 				ZhkCoiner.State &= ~( 1 << 6 );    
812A90         
  584: 		}
812A90 022B7A            LJMP    ?C0144?IOINPUT
812A93         ?C0081?IOINPUT:
  585: 	    else if( CurrentChannel & 0x10 )
812A93 902DCE            MOV     DPTR,#CurrentChannel
812A96 E0                MOVX    A,@DPTR
812A97 FF                MOV     R7,A
812A98 30E46C            JNB     ACC.4,?C0094?IOINPUT
  586: 		{
  587: 			if( HardIsCoinChn5In() )
812A9B E546              MOV     A,CountIOState
812A9D 20E627            JB      ACC.6,?C0095?IOINPUT
  588: 			{
  589: 				if ( PinLow5 )
812AA0 300F19            JNB     PinLow5,?C0096?IOINPUT
  590: 				{
  591: 					if ( PinLowCount5 < 250 ) PinLowCount5 ++;
812AA3 902DCC            MOV     DPTR,#PinLowCount5
812AA6 E0                MOVX    A,@DPTR
812AA7 C3                CLR     C
812AA8 94FA              SUBB    A,#0FAH
812AAA 5003              JNC     ?C0097?IOINPUT
812AAC E0                MOVX    A,@DPTR
812AAD 04                INC     A
812AAE F0                MOVX    @DPTR,A
812AAF         ?C0097?IOINPUT:
  592: 					if ( PinLowCount5 >= CoinTimes )  PinPulse5 = 1;
812AAF 902DCC            MOV     DPTR,#PinLowCount5
812AB2 E0                MOVX    A,@DPTR
812AB3 C3                CLR     C
812AB4 9402              SUBB    A,#02H
812AB6 403E              JC      ?C0100?IOINPUT
812AB8 D215              SETB    PinPulse5
  593: 				}
812ABA 803A              SJMP    ?C0100?IOINPUT
812ABC         ?C0096?IOINPUT:
  594: 				else
  595: 				{
  596: 					PinLow5      = 1;
812ABC D20F              SETB    PinLow5
  597: 					PinPulse5    = 0;
812ABE C215              CLR     PinPulse5
  598: 					PinLowCount5 = 0;
812AC0 E4                CLR     A
812AC1 902DCC            MOV     DPTR,#PinLowCount5
812AC4 F0                MOVX    @DPTR,A
  599: 				}
  600: 				
  601: 			}
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 790


812AC5 802F              SJMP    ?C0100?IOINPUT
812AC7         ?C0095?IOINPUT:
  602: 			else
  603: 			{
  604: 				if ( PinLow5 )
812AC7 300F09            JNB     PinLow5,?C0101?IOINPUT
  605: 				{
  606: 					PinLowCount5 = 0;
812ACA E4                CLR     A
812ACB 902DCC            MOV     DPTR,#PinLowCount5
812ACE F0                MOVX    @DPTR,A
  607: 					PinLow5      = 0;
812ACF C20F              CLR     PinLow5
  608: 				}	
812AD1 8023              SJMP    ?C0100?IOINPUT
812AD3         ?C0101?IOINPUT:
  609: 				else
  610: 				{
  611: 					PinLowCount5 ++;
812AD3 902DCC            MOV     DPTR,#PinLowCount5
812AD6 E0                MOVX    A,@DPTR
812AD7 04                INC     A
812AD8 F0                MOVX    @DPTR,A
  612: 					if ( PinLowCount5 >= CoinTimes && PinPulse5 )
812AD9 E0                MOVX    A,@DPTR
812ADA C3                CLR     C
812ADB 9402              SUBB    A,#02H
812ADD 4017              JC      ?C0100?IOINPUT
812ADF 301514            JNB     PinPulse5,?C0100?IOINPUT
  613: 					{
  614: 						ZhkCoiner.CountChn5 ++;
812AE2 902DD5            MOV     DPTR,#ZhkCoiner+06H
812AE5 E0                MOVX    A,@DPTR
812AE6 04                INC     A
812AE7 F0                MOVX    @DPTR,A
  615: 						PinPulse5 = 0;
812AE8 C215              CLR     PinPulse5
  616: 						PinLowCount5 = 0;
812AEA E4                CLR     A
812AEB 902DCC            MOV     DPTR,#PinLowCount5
812AEE F0                MOVX    @DPTR,A
  617: 	                    CurrentChannel &= 0xef;
812AEF EF                MOV     A,R7
812AF0 54EF              ANL     A,#0EFH
812AF2 902DCE            MOV     DPTR,#CurrentChannel
812AF5 F0                MOVX    @DPTR,A
  618: 					}
  619: 				}
  620: 			}
812AF6         ?C0100?IOINPUT:
  621: 			if ( PinLowCount5 >= 250 ) 
812AF6 902DCC            MOV     DPTR,#PinLowCount5
812AF9 E0                MOVX    A,@DPTR
812AFA C3                CLR     C
812AFB 94FA              SUBB    A,#0FAH
812AFD 902DCF            MOV     DPTR,#ZhkCoiner
812B00 E0                MOVX    A,@DPTR
812B01 4002              JC      ?C0104?IOINPUT
  622: 				ZhkCoiner.State |= 1 << 6;
812B03         
812B03 8070              SJMP    ?C0143?IOINPUT
812B05         ?C0104?IOINPUT:
  623: 			else
  624: 				ZhkCoiner.State &= ~( 1 << 6 );    
812B05         
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 791


  625: 		}
812B05 8073              SJMP    ?C0144?IOINPUT
812B07         ?C0094?IOINPUT:
  626: 		else if( CurrentChannel & 0x20 )
812B07 902DCE            MOV     DPTR,#CurrentChannel
812B0A E0                MOVX    A,@DPTR
812B0B FF                MOV     R7,A
812B0C 30E56E            JNB     ACC.5,?C0119?IOINPUT
  627: 		{
  628: 			if( HardIsCoinChn6In() )
812B0F E546              MOV     A,CountIOState
812B11 20E727            JB      ACC.7,?C0108?IOINPUT
  629: 			{
  630: 				if ( PinLow6 )
812B14 301019            JNB     PinLow6,?C0109?IOINPUT
  631: 				{
  632: 					if ( PinLowCount6 < 250 ) PinLowCount6 ++;
812B17 902DCD            MOV     DPTR,#PinLowCount6
812B1A E0                MOVX    A,@DPTR
812B1B C3                CLR     C
812B1C 94FA              SUBB    A,#0FAH
812B1E 5003              JNC     ?C0110?IOINPUT
812B20 E0                MOVX    A,@DPTR
812B21 04                INC     A
812B22 F0                MOVX    @DPTR,A
812B23         ?C0110?IOINPUT:
  633: 					if ( PinLowCount6 >= CoinTimes )  PinPulse6 = 1;
812B23 902DCD            MOV     DPTR,#PinLowCount6
812B26 E0                MOVX    A,@DPTR
812B27 C3                CLR     C
812B28 9402              SUBB    A,#02H
812B2A 403C              JC      ?C0113?IOINPUT
812B2C D216              SETB    PinPulse6
  634: 				}
812B2E 8038              SJMP    ?C0113?IOINPUT
812B30         ?C0109?IOINPUT:
  635: 				else
  636: 				{
  637: 					PinLow6      = 1;
812B30 D210              SETB    PinLow6
  638: 					PinPulse6    = 0;
812B32 C216              CLR     PinPulse6
  639: 					PinLowCount6 = 0;
812B34 E4                CLR     A
812B35 902DCD            MOV     DPTR,#PinLowCount6
812B38 F0                MOVX    @DPTR,A
  640: 				}
  641: 				
  642: 			}
812B39 802D              SJMP    ?C0113?IOINPUT
812B3B         ?C0108?IOINPUT:
  643: 			else
  644: 			{
  645: 				if ( PinLow6 )
812B3B 301009            JNB     PinLow6,?C0114?IOINPUT
  646: 				{
  647: 					PinLowCount6 = 0;
812B3E E4                CLR     A
812B3F 902DCD            MOV     DPTR,#PinLowCount6
812B42 F0                MOVX    @DPTR,A
  648: 					PinLow6      = 0;
812B43 C210              CLR     PinLow6
  649: 				}	
812B45 8021              SJMP    ?C0113?IOINPUT
812B47         ?C0114?IOINPUT:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 792


  650: 				else
  651: 				{
  652: 					PinLowCount6 ++;
812B47 902DCD            MOV     DPTR,#PinLowCount6
812B4A E0                MOVX    A,@DPTR
812B4B 04                INC     A
812B4C F0                MOVX    @DPTR,A
  653: 					if ( PinLowCount6 >= CoinTimes && PinPulse6 )
812B4D E0                MOVX    A,@DPTR
812B4E C3                CLR     C
812B4F 9402              SUBB    A,#02H
812B51 4015              JC      ?C0113?IOINPUT
812B53 301612            JNB     PinPulse6,?C0113?IOINPUT
  654: 					{
  655: 						ZhkCoiner.CountChn6 ++;
812B56 902DD6            MOV     DPTR,#ZhkCoiner+07H
812B59 E0                MOVX    A,@DPTR
812B5A 04                INC     A
812B5B F0                MOVX    @DPTR,A
  656: 						PinPulse6 = 0;
812B5C C216              CLR     PinPulse6
  657: 						PinLowCount6 = 0;
812B5E E4                CLR     A
812B5F 902DCD            MOV     DPTR,#PinLowCount6
812B62 F0                MOVX    @DPTR,A
  658: 	                    CurrentChannel &= 0xdf;
812B63 EF                MOV     A,R7
812B64 54DF              ANL     A,#0DFH
812B66 A3                INC     DPTR
812B67 F0                MOVX    @DPTR,A
  659: 					}
  660: 				}
  661: 			}
812B68         ?C0113?IOINPUT:
  662: 			if ( PinLowCount6 >= 250 ) 
812B68 902DCD            MOV     DPTR,#PinLowCount6
812B6B E0                MOVX    A,@DPTR
812B6C C3                CLR     C
812B6D 94FA              SUBB    A,#0FAH
812B6F 902DCF            MOV     DPTR,#ZhkCoiner
812B72 E0                MOVX    A,@DPTR
812B73 4005              JC      ?C0117?IOINPUT
  663: 				ZhkCoiner.State |= 1 << 6;
812B75         
812B75 4440              ORL     A,#040H
812B77 F0                MOVX    @DPTR,A
812B78 8003              SJMP    ?C0119?IOINPUT
812B7A         ?C0117?IOINPUT:
  664: 			else
  665: 				ZhkCoiner.State &= ~( 1 << 6 );    
812B7A         
812B7A 54BF              ANL     A,#0BFH
812B7C F0                MOVX    @DPTR,A
  666: 		}	    
  667: 	}
812B7D         ?C0119?IOINPUT:
812B7D D0D0              POP     PSW
812B7F A522              ERET    
----- FUNCTION ZyzChkCoinChnSta (END) -------


----- FUNCTION Ds12887Init (BEGIN) -----
 FILE: 'Ds12887.c'
    5: bit Ds12887Init( void )		small
    6: {
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 793


    7: 	XBYTE[ 0x32 ]  = 0x14;
812B81 900032            MOV     DPTR,#032H
812B84 7414              MOV     A,#014H
812B86 F0                MOVX    @DPTR,A
    8: 	XBYTE[ 0x0B ] |= 0x80;
812B87 90000B            MOV     DPTR,#0BH
812B8A E0                MOVX    A,@DPTR
812B8B 4480              ORL     A,#080H
812B8D F0                MOVX    @DPTR,A
    9: 	XBYTE[ 0x01 ]  = 0x00;
812B8E 900001            MOV     DPTR,#01H
812B91 E4                CLR     A
812B92 F0                MOVX    @DPTR,A
   10: 	XBYTE[ 0x03 ]  = 0xEF;
812B93 900003            MOV     DPTR,#03H
812B96 74EF              MOV     A,#0EFH
812B98 F0                MOVX    @DPTR,A
   11: 	XBYTE[ 0x05 ]  = 0xEF;
812B99 900005            MOV     DPTR,#05H
812B9C F0                MOVX    @DPTR,A
   12: 	XBYTE[ 0x0B ] &= 0x7F;
812B9D 90000B            MOV     DPTR,#0BH
812BA0 E0                MOVX    A,@DPTR
812BA1 547F              ANL     A,#07FH
812BA3 F0                MOVX    @DPTR,A
   13: 	XBYTE[ 0x0A ]  = 0x20;
812BA4 90000A            MOV     DPTR,#0AH
812BA7 7420              MOV     A,#020H
812BA9 F0                MOVX    @DPTR,A
   14: 	XBYTE[ 0x0B ]  = 0x2A;
812BAA A3                INC     DPTR
812BAB 742A              MOV     A,#02AH
812BAD F0                MOVX    @DPTR,A
   15: 	return XBYTE[ 0x0D ] & 0x80;
812BAE 90000D            MOV     DPTR,#0DH
812BB1 E0                MOVX    A,@DPTR
812BB2 33                RLC     A
   16: 	
   17: }
812BB3         ?C0001?DS12887:
812BB3 A522              ERET    
----- FUNCTION Ds12887Init (END) -------


----- FUNCTION WaterKeyDisable (BEGIN) -----
 FILE: 'device.c'
  132: void WaterKeyDisable( void )
  133: {
  134: 	INT0 = 1;
  135: //	P3 |= 0x04;
812BB5 D2B2              SETB    INT0
  136: }
812BB7 A522              ERET    
----- FUNCTION WaterKeyDisable (END) -------


----- FUNCTION MobileInitProcess (BEGIN) -----
 FILE: 'mobile.c'
  147: uchar MobileInitProcess( void )
  148: {
  149: 	static uchar xdata InitStatus = MOBILE_BEGIN;
  150: 	static uchar xdata CmdStatus = ATCMD_ERR_NULL;
  151: 	uchar data temp;
  152: 
  153: //	Trace( "\n MobileInitProcess start" );
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 794


  154: 	if( DownMobilePowerFlag == 1 )
812BB9 900EAE            MOV     DPTR,#DownMobilePowerFlag
812BBC E0                MOVX    A,@DPTR
812BBD B4010B            CJNE    A,#01H,?C0005?MOBILE
  155: 	{
  156: 		CmdStatus = ATCMD_ERR_TIMEOUT;
812BC0 900B25            MOV     DPTR,#CmdStatus
812BC3 7402              MOV     A,#02H
812BC5 F0                MOVX    @DPTR,A
  157: 		DownMobilePowerFlag = 0;
812BC6 E4                CLR     A
812BC7 900EAE            MOV     DPTR,#DownMobilePowerFlag
812BCA F0                MOVX    @DPTR,A
  158: 	}
812BCB         ?C0005?MOBILE:
  159: 	if( CmdStatus == ATCMD_ERR_TIMEOUT )
812BCB 900B25            MOV     DPTR,#CmdStatus
812BCE E0                MOVX    A,@DPTR
812BCF 6402              XRL     A,#02H
812BD1 703D              JNZ     ?C0006?MOBILE
  160: 	{			
  161: 	    if( GPRSModuleDeadFlag == 0 )
812BD3 202C11            JB      GPRSModuleDeadFlag,?C0007?MOBILE
  162: 		{
  163: 			Trace( "\n WaterKeyDisable");
  164:             GPRSModuleDeadFlag   = 1;
812BD6 D22C              SETB    GPRSModuleDeadFlag
  165: 		    GPRSModuleResetTimer = GPRSMResetValue;   //120,60
812BD8 902DE8            MOV     DPTR,#GPRSModuleResetTimer
812BDB F0                MOVX    @DPTR,A
812BDC A3                INC     DPTR
812BDD 745A              MOV     A,#05AH
812BDF F0                MOVX    @DPTR,A
  166: 			WaterKeyDisable();
812BE0 A512812BB5        ECALL   WaterKeyDisable
  167: 		}
812BE5 8024              SJMP    ?C0008?MOBILE
812BE7         ?C0007?MOBILE:
  168: 		else
  169: 		{
  170:             if( GPRSModuleResetTimer == 0 )
812BE7 902DE8            MOV     DPTR,#GPRSModuleResetTimer
812BEA E0                MOVX    A,@DPTR
812BEB 7002              JNZ     ?C0303?MOBILE
812BED A3                INC     DPTR
812BEE E0                MOVX    A,@DPTR
812BEF         ?C0303?MOBILE:
812BEF 701A              JNZ     ?C0008?MOBILE
  171: 			{
  172: 				Trace( "\n WaterKeyEnable");
  173: 			    GPRSModuleDeadFlag = 0;
812BF1 C22C              CLR     GPRSModuleDeadFlag
  174: 				WaterKeyEnable();
812BF3 A51280FFC2        ECALL   WaterKeyEnable
  175: 				GPRSDeadTimer = 0;
812BF8 E4                CLR     A
812BF9 900EB5            MOV     DPTR,#GPRSDeadTimer
812BFC F0                MOVX    @DPTR,A
  176: 				InitStatus = MOBILE_BEGIN;
812BFD 900B24            MOV     DPTR,#InitStatus
812C00 F0                MOVX    @DPTR,A
  177: 				CmdStatus = ATCMD_ERR_NULL;
812C01 A3                INC     DPTR
812C02 F0                MOVX    @DPTR,A
  178: 				//用于下电后延时初始化手机模块
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 795


  179: 				GPRSModuleResetTimer = 30;
812C03 902DE8            MOV     DPTR,#GPRSModuleResetTimer
812C06 F0                MOVX    @DPTR,A
812C07 A3                INC     DPTR
812C08 741E              MOV     A,#01EH
812C0A F0                MOVX    @DPTR,A
  180: 			}
  181: 		}
812C0B         ?C0008?MOBILE:
  182: 		return 0;
812C0B 7F00              MOV     R7,#00H
812C0D 022E7E            LJMP    ?C0010?MOBILE
  183: 	}
812C10         ?C0006?MOBILE:
  184: 	else
  185: 	{
  186: 		//用于开机上电时延时初始化手机模块
  187: 		if( GPRSModuleResetTimer != 0 )
812C10 902DE8            MOV     DPTR,#GPRSModuleResetTimer
812C13 E0                MOVX    A,@DPTR
812C14 7002              JNZ     ?C0304?MOBILE
812C16 A3                INC     DPTR
812C17 E0                MOVX    A,@DPTR
812C18         ?C0304?MOBILE:
812C18 6005              JZ      ?C0011?MOBILE
  188: 			return 0;
812C1A 7F00              MOV     R7,#00H
812C1C 022E7E            LJMP    ?C0010?MOBILE
  189: 	}
812C1F         ?C0011?MOBILE:
  190: 	switch( InitStatus )
812C1F 900B24            MOV     DPTR,#InitStatus
812C22 E0                MOVX    A,@DPTR
812C23 A5128007CD        ECALL   ?C?CCASEX
812C28 2C41              DW      ?C0014?MOBILE
812C2A 00                DB      00H
812C2B 2C87              DW      ?C0015?MOBILE
812C2D 01                DB      01H
812C2E 2CDD              DW      ?C0023?MOBILE
812C30 02                DB      02H
812C31 2D28              DW      ?C0031?MOBILE
812C33 03                DB      03H
812C34 2D6E              DW      ?C0039?MOBILE
812C36 04                DB      04H
812C37 2DC0              DW      ?C0047?MOBILE
812C39 05                DB      05H
812C3A 2E26              DW      ?C0057?MOBILE
812C3C 06                DB      06H
812C3D 0000              DW      00H
812C3F 2E7C              DW      ?C0013?MOBILE
  191: 	{
  192: 		case MOBILE_BEGIN:
812C41         ?C0014?MOBILE:
  193: 			ZhkSerialInit();
812C41 A512807121        ECALL   ZhkSerialInit
  194: 			ZhkGprsStatus     	= GPRS_STATUS_BREAK;		
812C46 901180            MOV     DPTR,#ZhkGprsStatus
812C49 7401              MOV     A,#01H
812C4B F0                MOVX    @DPTR,A
  195: 		#ifdef _MOBILE_SMS_1
  196: 			ZhkSmsTxNum = 0;			
812C4C E4                CLR     A
812C4D 901592            MOV     DPTR,#ZhkSmsTxNum
812C50 F0                MOVX    @DPTR,A
  197: 			SendSMSTimer = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 796


812C51 F510              MOV     SendSMSTimer,A
  198: 			SMSSendTime = 0;
812C53 900EB2            MOV     DPTR,#SMSSendTime
812C56 F0                MOVX    @DPTR,A
  199: 			ReceiveSMSTimer = 0;			
812C57 F519              MOV     ReceiveSMSTimer,A
  200: 			SMSReceiveTime = 0;
812C59 9010CD            MOV     DPTR,#SMSReceiveTime
812C5C F0                MOVX    @DPTR,A
  201: 			SMSLastErr	= SMS_ERR_BLOCK;
812C5D 900EB6            MOV     DPTR,#SMSLastErr
812C60 04                INC     A
812C61 F0                MOVX    @DPTR,A
  202: 			ZhkGprsStatus = GPRS_ERR_CONNECTING;
812C62 901180            MOV     DPTR,#ZhkGprsStatus
812C65 7406              MOV     A,#06H
812C67 F0                MOVX    @DPTR,A
  203: 			DownMobilePowerFlag = 0;
812C68 E4                CLR     A
812C69 900EAE            MOV     DPTR,#DownMobilePowerFlag
812C6C F0                MOVX    @DPTR,A
  204: 		#endif
  205: 			ZhkMobileCurrentTask 	= MOBILE_INIT;			
812C6D A3                INC     DPTR
812C6E 7409              MOV     A,#09H
812C70 F0                MOVX    @DPTR,A
  206: 			ZhkAtCmd( "ATZ", 1 );		
812C71 7B80              MOV     R3,#BYTE2 0801677H
812C73 7A16              MOV     R2,#HIGH 0801677H
812C75 7977              MOV     R1,#LOW 0801677H
812C77 7D01              MOV     R5,#01H
812C79 A512812717        ECALL   _ZhkAtCmd
  207: 			InitStatus = MOBILE_STEP1;
812C7E 900B24            MOV     DPTR,#InitStatus
812C81 7401              MOV     A,#01H
812C83 F0                MOVX    @DPTR,A
  208: 		break;
812C84 022E7C            LJMP    ?C0013?MOBILE
  209: 		case MOBILE_STEP1:
812C87         ?C0015?MOBILE:
  210: 			temp = ZhkAtCmdGetErr();
812C87 A512812E80        ECALL   ZhkAtCmdGetErr
812C8C 8F2B              MOV     temp,R7
  211: 			switch( temp )
812C8E E52B              MOV     A,temp
812C90 24FE              ADD     A,#0FEH
812C92 601E              JZ      ?C0019?MOBILE
812C94 14                DEC     A
812C95 603D              JZ      ?C0022?MOBILE
812C97 2403              ADD     A,#03H
812C99 6003              JZ      $ + 5H
812C9B 022E7C            LJMP    ?C0013?MOBILE
  212: 			{
  213: 				case ATCMD_ERR_NULL:				
812C9E         ?C0017?MOBILE:
  214: 					ZhkAtCmd( "AT+IPR=38400", 1 );				
812C9E 7B80              MOV     R3,#BYTE2 080167BH
812CA0 7A16              MOV     R2,#HIGH 080167BH
812CA2 797B              MOV     R1,#LOW 080167BH
812CA4 7D01              MOV     R5,#01H
812CA6 A512812717        ECALL   _ZhkAtCmd
  215: 					InitStatus = MOBILE_STEP2;	
812CAB 900B24            MOV     DPTR,#InitStatus
812CAE 7402              MOV     A,#02H
  216: 					GPRSDeadTimer = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 797


  217: 				break;
812CB0 804C              SJMP    ?C0337?MOBILE
  218: 				case ATCMD_ERR_BLOCK:
  219: 				break;
  220: 				case ATCMD_ERR_TIMEOUT:
812CB2         ?C0019?MOBILE:
  221: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5					
812CB2 900EB5            MOV     DPTR,#GPRSDeadTimer
812CB5 E0                MOVX    A,@DPTR
812CB6 C3                CLR     C
812CB7 9403              SUBB    A,#03H
812CB9 4003              JC      $ + 5H
812CBB 022E16            LJMP    ?C0347?MOBILE
  222: 					{
  223: 						ZhkAtCmd( "ATZ", 1 );		
812CBE 7B80              MOV     R3,#BYTE2 0801677H
812CC0 7A16              MOV     R2,#HIGH 0801677H
812CC2 7977              MOV     R1,#LOW 0801677H
812CC4 7D01              MOV     R5,#01H
812CC6 A512812717        ECALL   _ZhkAtCmd
  224: 		                GPRSDeadTimer++;
812CCB 900EB5            MOV     DPTR,#GPRSDeadTimer
812CCE E0                MOVX    A,@DPTR
812CCF 04                INC     A
812CD0 F0                MOVX    @DPTR,A
  225:                 	}
812CD1 022E7C            LJMP    ?C0013?MOBILE
  226: 				    else
  227: 						CmdStatus = ATCMD_ERR_TIMEOUT;
  228: 				break;
  229: 				case ATCMD_ERR_ERR:		
812CD4         ?C0022?MOBILE:
  230: 					ZhkAtCmd( "ATZ", 1 );
812CD4 7B80              MOV     R3,#BYTE2 0801677H
812CD6 7A16              MOV     R2,#HIGH 0801677H
812CD8 7977              MOV     R1,#LOW 0801677H
  231: 				break;
812CDA 022E75            LJMP    ?C0352?MOBILE
  232: 			}
  233: 		break;
  234: 		case MOBILE_STEP2:
812CDD         ?C0023?MOBILE:
  235: 			temp = ZhkAtCmdGetErr();		
812CDD A512812E80        ECALL   ZhkAtCmdGetErr
812CE2 8F2B              MOV     temp,R7
  236: 			switch( temp )
812CE4 E52B              MOV     A,temp
812CE6 24FE              ADD     A,#0FEH
812CE8 601D              JZ      ?C0027?MOBILE
812CEA 14                DEC     A
812CEB 6032              JZ      ?C0030?MOBILE
812CED 2403              ADD     A,#03H
812CEF 6003              JZ      $ + 5H
812CF1 022E7C            LJMP    ?C0013?MOBILE
  237: 			{
  238: 				case ATCMD_ERR_NULL:
812CF4         ?C0025?MOBILE:
  239: 					ZhkAtCmd( "ATE0", 1 );				
812CF4 A51281270F        ECALL   ?L?COM001E
  240: 					InitStatus = MOBILE_STEP3;
812CF9 900B24            MOV     DPTR,#InitStatus
812CFC 7403              MOV     A,#03H
812CFE         
812CFE F0                MOVX    @DPTR,A
  241: 				    GPRSDeadTimer = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 798


812CFF E4                CLR     A
812D00 900EB5            MOV     DPTR,#GPRSDeadTimer
812D03 F0                MOVX    @DPTR,A
  242: 				break;
812D04 022E7C            LJMP    ?C0013?MOBILE
  243: 				case ATCMD_ERR_BLOCK:
  244: 				break;
  245: 				case ATCMD_ERR_TIMEOUT:
812D07         ?C0027?MOBILE:
  246: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5
812D07 900EB5            MOV     DPTR,#GPRSDeadTimer
812D0A E0                MOVX    A,@DPTR
812D0B C3                CLR     C
812D0C 9403              SUBB    A,#03H
812D0E 500C              JNC     ?C0028?MOBILE
  247: 					{
  248: 		                GPRSDeadTimer++;
812D10 E0                MOVX    A,@DPTR
812D11 04                INC     A
812D12 F0                MOVX    @DPTR,A
  249: 		                ZhkAtCmd( "AT+IPR=38400", 1 );						
812D13 7B80              MOV     R3,#BYTE2 080167BH
812D15 7A16              MOV     R2,#HIGH 080167BH
812D17 797B              MOV     R1,#LOW 080167BH
812D19         
  250: 					}
812D19 022E75            LJMP    ?C0352?MOBILE
812D1C         ?C0028?MOBILE:
  251: 					else
  252: 						CmdStatus = ATCMD_ERR_TIMEOUT;
812D1C         
  253: 					break;
812D1C 022E16            LJMP    ?C0347?MOBILE
  254: 				case ATCMD_ERR_ERR:	
812D1F         ?C0030?MOBILE:
  255: 					ZhkAtCmd( "AT+IPR=38400", 1 );	
812D1F 7B80              MOV     R3,#BYTE2 080167BH
812D21 7A16              MOV     R2,#HIGH 080167BH
812D23 797B              MOV     R1,#LOW 080167BH
812D25         
  256: 				break;
812D25 022E75            LJMP    ?C0352?MOBILE
  257: 			}
  258: 		break;
  259: 		case MOBILE_STEP3:
812D28         ?C0031?MOBILE:
  260: 			temp = ZhkAtCmdGetErr();
812D28 A512812E80        ECALL   ZhkAtCmdGetErr
812D2D 8F2B              MOV     temp,R7
  261: 			switch( temp )
812D2F E52B              MOV     A,temp
812D31 24FE              ADD     A,#0FEH
812D33 6018              JZ      ?C0035?MOBILE
812D35 14                DEC     A
812D36 602D              JZ      ?C0038?MOBILE
812D38 2403              ADD     A,#03H
812D3A 6003              JZ      $ + 5H
812D3C 022E7C            LJMP    ?C0013?MOBILE
  262: 			{
  263: 				case ATCMD_ERR_NULL:
812D3F         ?C0033?MOBILE:
  264: 				#ifdef _MOBILE_GPRS		
  265: 					ZhkAtCmd( "AT+CMGF=0", 1 );
  266: 				#endif
  267: 					GPRSDeadTimer = 0;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 799


812D3F E4                CLR     A
812D40 900EB5            MOV     DPTR,#GPRSDeadTimer
812D43 F0                MOVX    @DPTR,A
  268: 					InitStatus = MOBILE_STEP4;
812D44 900B24            MOV     DPTR,#InitStatus
812D47 7404              MOV     A,#04H
812D49 F0                MOVX    @DPTR,A
  269: 				break;
812D4A 022E7C            LJMP    ?C0013?MOBILE
  270: 				case ATCMD_ERR_BLOCK:
  271: 				break;
  272: 				case ATCMD_ERR_TIMEOUT:
812D4D         ?C0035?MOBILE:
  273: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5
812D4D 900EB5            MOV     DPTR,#GPRSDeadTimer
812D50 E0                MOVX    A,@DPTR
812D51 C3                CLR     C
812D52 9403              SUBB    A,#03H
812D54 500C              JNC     ?C0036?MOBILE
  274: 					{
  275: 		                GPRSDeadTimer++;
812D56 E0                MOVX    A,@DPTR
812D57 04                INC     A
812D58 F0                MOVX    @DPTR,A
  276: 		                ZhkAtCmd( "ATE0", 1 );						
812D59 7B80              MOV     R3,#BYTE2 0801688H
812D5B 7A16              MOV     R2,#HIGH 0801688H
812D5D 7988              MOV     R1,#LOW 0801688H
812D5F         
  277: 					}
812D5F 022E75            LJMP    ?C0352?MOBILE
812D62         ?C0036?MOBILE:
  278: 					else
  279: 						CmdStatus = ATCMD_ERR_TIMEOUT;
812D62         
  280: 					break;
812D62 022E16            LJMP    ?C0347?MOBILE
  281: 				case ATCMD_ERR_ERR:
812D65         ?C0038?MOBILE:
  282: 					ZhkAtCmd( "ATE0", 1 );
812D65 7B80              MOV     R3,#BYTE2 0801688H
812D67 7A16              MOV     R2,#HIGH 0801688H
812D69 7988              MOV     R1,#LOW 0801688H
812D6B         
  283: 				break;
812D6B 022E75            LJMP    ?C0352?MOBILE
  284: 			}
  285: 		break;
  286: 		case MOBILE_STEP4:
812D6E         ?C0039?MOBILE:
  287: 			temp = ZhkAtCmdGetErr();		
812D6E A512812E80        ECALL   ZhkAtCmdGetErr
812D73 8F2B              MOV     temp,R7
  288: 			switch( temp )
812D75 E52B              MOV     A,temp
812D77 24FE              ADD     A,#0FEH
812D79 6025              JZ      ?C0043?MOBILE
812D7B 14                DEC     A
812D7C 6039              JZ      ?C0046?MOBILE
812D7E 2403              ADD     A,#03H
812D80 6003              JZ      $ + 5H
812D82 022E7C            LJMP    ?C0013?MOBILE
  289: 			{
  290: 				case ATCMD_ERR_NULL:				
812D85         ?C0041?MOBILE:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 800


  291: 				#ifdef _MOBILE_SMS_1	
  292: 					#ifdef SMSENCODE_7_BIT
  293: 						ZhkAtCmd( "AT+CSCS=\"HEX\"", 1 );
812D85 7B80              MOV     R3,#BYTE2 080168DH
812D87 7A16              MOV     R2,#HIGH 080168DH
812D89 798D              MOV     R1,#LOW 080168DH
812D8B 7D01              MOV     R5,#01H
812D8D A512812717        ECALL   _ZhkAtCmd
  294: 					#else
  295: 						ZhkAtCmd( "AT+CSCS=\"UCS2\"", 1 );
  296: 					#endif
  297: 				#endif
  298: 					GPRSDeadTimer = 0;
812D92 E4                CLR     A
812D93 900EB5            MOV     DPTR,#GPRSDeadTimer
812D96 F0                MOVX    @DPTR,A
  299: 					InitStatus = MOBILE_STEP5;		
812D97 900B24            MOV     DPTR,#InitStatus
812D9A 7405              MOV     A,#05H
812D9C F0                MOVX    @DPTR,A
  300: 				break;
812D9D 022E7C            LJMP    ?C0013?MOBILE
  301: 				case ATCMD_ERR_BLOCK:
  302: 				break;
  303: 				case ATCMD_ERR_TIMEOUT:
812DA0         ?C0043?MOBILE:
  304: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5
812DA0 900EB5            MOV     DPTR,#GPRSDeadTimer
812DA3 E0                MOVX    A,@DPTR
812DA4 C3                CLR     C
812DA5 9403              SUBB    A,#03H
812DA7 500C              JNC     ?C0044?MOBILE
  305: 					{
  306: 		                GPRSDeadTimer++;
812DA9 E0                MOVX    A,@DPTR
812DAA 04                INC     A
812DAB F0                MOVX    @DPTR,A
  307: 		                ZhkAtCmd( "AT+CMGF=0", 1 );						
812DAC 7B80              MOV     R3,#BYTE2 080169BH
812DAE 7A16              MOV     R2,#HIGH 080169BH
812DB0 799B              MOV     R1,#LOW 080169BH
812DB2         
  308: 					}
812DB2 022E75            LJMP    ?C0352?MOBILE
812DB5         ?C0044?MOBILE:
  309: 					else
  310: 						CmdStatus = ATCMD_ERR_TIMEOUT;
812DB5         
  311: 					break;
812DB5 805F              SJMP    ?C0347?MOBILE
  312: 				case ATCMD_ERR_ERR:
812DB7         ?C0046?MOBILE:
  313: 					ZhkAtCmd( "AT+CMGF=0", 1 );			
812DB7 7B80              MOV     R3,#BYTE2 080169BH
812DB9 7A16              MOV     R2,#HIGH 080169BH
812DBB 799B              MOV     R1,#LOW 080169BH
812DBD         
  314: 				break;
812DBD 022E75            LJMP    ?C0352?MOBILE
  315: 			}
  316: 		break;
  317: 		case MOBILE_STEP5:		
812DC0         ?C0047?MOBILE:
  318: 			temp = ZhkAtCmdGetErr();	
812DC0 A512812E80        ECALL   ZhkAtCmdGetErr
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 801


812DC5 8F2B              MOV     temp,R7
  319: 			switch( temp )
812DC7 E52B              MOV     A,temp
812DC9 24FE              ADD     A,#0FEH
812DCB 6035              JZ      ?C0053?MOBILE
812DCD 14                DEC     A
812DCE 604E              JZ      ?C0056?MOBILE
812DD0 2403              ADD     A,#03H
812DD2 6003              JZ      $ + 5H
812DD4 022E7C            LJMP    ?C0013?MOBILE
  320: 			{
  321: 				case ATCMD_ERR_NULL:
812DD7         ?C0049?MOBILE:
  322: 					if( LoadPowerDeleAllSMS == 0 )
812DD7 202D1B            JB      LoadPowerDeleAllSMS,?C0050?MOBILE
  323: 					{
  324: 						ZhkAtCmd( "AT+CMGDA=6", 1 );					
812DDA 7B80              MOV     R3,#BYTE2 08016A5H
812DDC 7A16              MOV     R2,#HIGH 08016A5H
812DDE 79A5              MOV     R1,#LOW 08016A5H
812DE0 7D01              MOV     R5,#01H
812DE2 A512812717        ECALL   _ZhkAtCmd
  325: 						GPRSDeadTimer = 0;
812DE7 E4                CLR     A
812DE8 900EB5            MOV     DPTR,#GPRSDeadTimer
812DEB F0                MOVX    @DPTR,A
  326: 						InitStatus = MOBILE_STEP6;							
812DEC 900B24            MOV     DPTR,#InitStatus
812DEF 7406              MOV     A,#06H
812DF1 F0                MOVX    @DPTR,A
  327: 					}
812DF2 022E7C            LJMP    ?C0013?MOBILE
812DF5         ?C0050?MOBILE:
  328: 					else
  329: 					{
  330: 						InitStatus        = MOBILE_BEGIN;
812DF5 E4                CLR     A
812DF6 900B24            MOV     DPTR,#InitStatus
812DF9 F0                MOVX    @DPTR,A
  331: 						SMSLastErr    = SMS_ERR_NULL;
812DFA 900EB6            MOV     DPTR,#SMSLastErr
812DFD F0                MOVX    @DPTR,A
  332: 						return MOBILE_FINISH;
812DFE 7F10              MOV     R7,#010H
812E00 807C              SJMP    ?C0010?MOBILE
  333: 					}
  334: 				break;
  335: 				case ATCMD_ERR_BLOCK:
  336: 				break;
  337: 				case ATCMD_ERR_TIMEOUT:
812E02         ?C0053?MOBILE:
  338: 					if( GPRSDeadTimer < GPRSMDeadJValue )  //5
812E02 900EB5            MOV     DPTR,#GPRSDeadTimer
812E05 E0                MOVX    A,@DPTR
812E06 C3                CLR     C
812E07 9403              SUBB    A,#03H
812E09 500B              JNC     ?C0054?MOBILE
  339: 					{
  340: 		                GPRSDeadTimer++;
812E0B E0                MOVX    A,@DPTR
812E0C 04                INC     A
812E0D F0                MOVX    @DPTR,A
  341: 		            #ifdef SMSENCODE_7_BIT
  342: 						ZhkAtCmd( "AT+CSCS=\"HEX\"", 1 );
812E0E 7B80              MOV     R3,#BYTE2 080168DH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 802


812E10 7A16              MOV     R2,#HIGH 080168DH
812E12 798D              MOV     R1,#LOW 080168DH
812E14         
  343: 					#else
  344: 						ZhkAtCmd( "AT+CSCS=\"UCS2\"", 1 );
  345: 					#endif
  346: 					}
812E14 805F              SJMP    ?C0352?MOBILE
812E16         ?C0054?MOBILE:
  347: 					else
  348: 						CmdStatus = ATCMD_ERR_TIMEOUT;
812E16         
812E16 900B25            MOV     DPTR,#CmdStatus
812E19 7402              MOV     A,#02H
812E1B F0                MOVX    @DPTR,A
  349: 				break;
812E1C 805E              SJMP    ?C0013?MOBILE
  350: 				case ATCMD_ERR_ERR:
812E1E         ?C0056?MOBILE:
  351: 				#ifdef _MOBILE_SMS_1
  352: 					#ifdef SMSENCODE_7_BIT
  353: 						ZhkAtCmd( "AT+CSCS=\"HEX\"", 1 );
812E1E 7B80              MOV     R3,#BYTE2 080168DH
812E20 7A16              MOV     R2,#HIGH 080168DH
812E22 798D              MOV     R1,#LOW 080168DH
812E24         
  354: 					#else
  355: 						ZhkAtCmd( "AT+CSCS=\"UCS2\"", 1 );
  356: 					#endif
  357: 				#endif
  358: 				break;
812E24 804F              SJMP    ?C0352?MOBILE
  359: 			}
  360: 		break;	
  361: 		case MOBILE_STEP6:		
812E26         ?C0057?MOBILE:
  362: 			temp = ZhkAtCmdGetErr();	
812E26 A512812E80        ECALL   ZhkAtCmdGetErr
812E2B 8F2B              MOV     temp,R7
  363: 			switch( temp )
812E2D E52B              MOV     A,temp
812E2F 24FE              ADD     A,#0FEH
812E31 6009              JZ      ?C0061?MOBILE
812E33 14                DEC     A
812E34 6039              JZ      ?C0064?MOBILE
812E36 2403              ADD     A,#03H
812E38 7042              JNZ     ?C0013?MOBILE
  364: 			{
  365: 				case ATCMD_ERR_NULL:				
812E3A         ?C0059?MOBILE:
  366: 					InitStatus        = MOBILE_BEGIN;
  367: 					SMSLastErr    = SMS_ERR_NULL;
  368: 					LoadPowerDeleAllSMS = 1;
  369: 					memset( NewCommingSmsSit , -1 , sizeof( NewCommingSmsSit ) );
  370: 					return MOBILE_FINISH;			
812E3A 8014              SJMP    ?C0351?MOBILE
  371: 				break;
  372: 				case ATCMD_ERR_BLOCK:
  373: 				break;
  374: 				case ATCMD_ERR_TIMEOUT:
812E3C         ?C0061?MOBILE:
  375: 					if( GPRSDeadTimer < 3  )  //5
812E3C 900EB5            MOV     DPTR,#GPRSDeadTimer
812E3F E0                MOVX    A,@DPTR
812E40 C3                CLR     C
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 803


812E41 9403              SUBB    A,#03H
812E43 500B              JNC     ?C0062?MOBILE
  376: 					{
  377: 		                GPRSDeadTimer++;
812E45 E0                MOVX    A,@DPTR
812E46 04                INC     A
812E47 F0                MOVX    @DPTR,A
  378: 		            	ZhkAtCmd( "AT+CMGDA=6", 1 );
812E48 7B80              MOV     R3,#BYTE2 08016A5H
812E4A 7A16              MOV     R2,#HIGH 08016A5H
812E4C 79A5              MOV     R1,#LOW 08016A5H
812E4E         
  379: 					}
812E4E 8025              SJMP    ?C0352?MOBILE
812E50         ?C0062?MOBILE:
  380: 					else
  381: 					{
  382: 						InitStatus        = MOBILE_BEGIN;
812E50         
812E50 E4                CLR     A
812E51 900B24            MOV     DPTR,#InitStatus
812E54 F0                MOVX    @DPTR,A
  383: 						SMSLastErr    = SMS_ERR_NULL;
812E55 900EB6            MOV     DPTR,#SMSLastErr
812E58 F0                MOVX    @DPTR,A
  384: 						LoadPowerDeleAllSMS = 1;
812E59 D22D              SETB    LoadPowerDeleAllSMS
  385: 						memset( NewCommingSmsSit , -1 , sizeof( NewCommingSmsSit ) );
812E5B FE                MOV     R6,A
812E5C 7F10              MOV     R7,#010H
812E5E 7DFF              MOV     R5,#0FFH
812E60 7B00              MOV     R3,#?C?XDATASEG
812E62 7A15              MOV     R2,#HIGH NewCommingSmsSit
812E64 7982              MOV     R1,#LOW NewCommingSmsSit
812E66 A5128008A6        ECALL   ?C?MEMSET
  386: 						return MOBILE_FINISH;	
812E6B 7F10              MOV     R7,#010H
812E6D 800F              SJMP    ?C0010?MOBILE
  387: 					}
  388: 				break;
  389: 				case ATCMD_ERR_ERR:
812E6F         ?C0064?MOBILE:
  390: 					ZhkAtCmd( "AT+CMGDA=6", 1 );
812E6F 7B80              MOV     R3,#BYTE2 08016A5H
812E71 7A16              MOV     R2,#HIGH 08016A5H
812E73 79A5              MOV     R1,#LOW 08016A5H
812E75         
812E75 7D01              MOV     R5,#01H
812E77 A512812717        ECALL   _ZhkAtCmd
  391: 				break;
  392: 			}
  393: 		break;	
  394: 	}
812E7C         ?C0013?MOBILE:
  395: 	return 0;
812E7C 7F00              MOV     R7,#00H
  396: }
812E7E         ?C0010?MOBILE:
812E7E A522              ERET    
----- FUNCTION MobileInitProcess (END) -------


----- FUNCTION ZhkAtCmdGetErr (BEGIN) -----
 FILE: 'mobile.c'
 1693: uchar ZhkAtCmdGetErr( void )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 804


 1694: {
 1695: //	char xdata *p = NULL;
 1696: //	uchar xdata strcode[5];
 1697: //	uchar xdata i = 0;
 1698: //	uchar xdata j = 0;
 1699: 
 1700: 	ZhkMobileSignalIn();
812E80 A51281303F        ECALL   ZhkMobileSignalIn
 1701: 	if ( ! ZhkMobileSecTimer )  
812E85 E517              MOV     A,ZhkMobileSecTimer
812E87 700F              JNZ     ?C0298?MOBILE
 1702: 	{
 1703: 		ZhkAtCmdBufWr = 0;
812E89 901593            MOV     DPTR,#ZhkAtCmdBufWr
812E8C F0                MOVX    @DPTR,A
812E8D A3                INC     DPTR
812E8E F0                MOVX    @DPTR,A
 1704: 		return ZhkAtCmdErr = ATCMD_ERR_TIMEOUT;
812E8F 900EB3            MOV     DPTR,#ZhkAtCmdErr
812E92 7402              MOV     A,#02H
812E94 F0                MOVX    @DPTR,A
812E95 FF                MOV     R7,A
812E96 8074              SJMP    ?C0299?MOBILE
 1705: 	}
812E98         ?C0298?MOBILE:
 1706: 	if ( ZhkAtCmdBufWr > 0 )
812E98 D3                SETB    C
812E99 901594            MOV     DPTR,#ZhkAtCmdBufWr+01H
812E9C E0                MOVX    A,@DPTR
812E9D 9400              SUBB    A,#00H
812E9F 901593            MOV     DPTR,#ZhkAtCmdBufWr
812EA2 E0                MOVX    A,@DPTR
812EA3 9400              SUBB    A,#00H
812EA5 4063              JC      ?C0300?MOBILE
 1707: 	{
 1708: 		ZhkAtCmdBufWr = 0;
812EA7 E4                CLR     A
812EA8 F0                MOVX    @DPTR,A
812EA9 A3                INC     DPTR
812EAA F0                MOVX    @DPTR,A
 1709: 		if ( strstr( ZhkAtCmdBuffer , "OK" ) != NULL )
812EAB 7B80              MOV     R3,#BYTE2 08016E8H
812EAD 7A16              MOV     R2,#HIGH 08016E8H
812EAF 79E8              MOV     R1,#LOW 08016E8H
812EB1 901D04            MOV     DPTR,#?_strstr?BYTE+03H
812EB4 A5128007B6        ECALL   ?C?PSTXDATA
812EB9 7B00              MOV     R3,#?C?XDATASEG
812EBB 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
812EBD 7981              MOV     R1,#LOW ZhkAtCmdBuffer
812EBF A5128018AE        ECALL   _strstr
812EC4 E4                CLR     A
812EC5 F583              MOV     DPH,A
812EC7 F582              MOV     DPL,A
812EC9 EB                MOV     A,R3
812ECA 7004              JNZ     ?C0335?MOBILE
812ECC E9                MOV     A,R1
812ECD 7001              JNZ     ?C0335?MOBILE
812ECF EA                MOV     A,R2
812ED0         ?C0335?MOBILE:
812ED0 6008              JZ      ?C0301?MOBILE
 1710: 		{
 1711: 			return ZhkAtCmdErr = ATCMD_ERR_NULL;
812ED2 E4                CLR     A
812ED3 900EB3            MOV     DPTR,#ZhkAtCmdErr
812ED6 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 805


812ED7 FF                MOV     R7,A
812ED8 8032              SJMP    ?C0299?MOBILE
 1712: 		}
812EDA         ?C0301?MOBILE:
 1713: 		if ( strstr( ZhkAtCmdBuffer , "ERROR" ) != NULL )
812EDA 7B80              MOV     R3,#BYTE2 08016C4H
812EDC 7A16              MOV     R2,#HIGH 08016C4H
812EDE 79C4              MOV     R1,#LOW 08016C4H
812EE0 901D04            MOV     DPTR,#?_strstr?BYTE+03H
812EE3 A5128007B6        ECALL   ?C?PSTXDATA
812EE8 7B00              MOV     R3,#?C?XDATASEG
812EEA 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
812EEC 7981              MOV     R1,#LOW ZhkAtCmdBuffer
812EEE A5128018AE        ECALL   _strstr
812EF3 E4                CLR     A
812EF4 F583              MOV     DPH,A
812EF6 F582              MOV     DPL,A
812EF8 EB                MOV     A,R3
812EF9 7004              JNZ     ?C0336?MOBILE
812EFB E9                MOV     A,R1
812EFC 7001              JNZ     ?C0336?MOBILE
812EFE EA                MOV     A,R2
812EFF         ?C0336?MOBILE:
812EFF 6009              JZ      ?C0300?MOBILE
 1714: 		{
 1715: 			//分析错误码
 1716: /*			if( ( p = strstr( ZhkAtCmdBuffer ,"+CMS ERROR:" ) ) != NULL )
 1717: 			{
 1718: 				memset( strcode, '\0', sizeof( strcode ) );
 1719: 				strcpy( strcode, p + 11 );
 1720: 				i = strlen( strcode ) ;					
 1721: 		//		Trace( "\n strcode = %s", strcode );
 1722: 				for( j = 0; j < i; j++ )
 1723: 				{
 1724: 					if( ( strcode[j] >= 48 ) && ( strcode[j] <=57 ) )
 1725: 						SMSErrorCode = SMSErrorCode * 10 + strcode[j] - 48;								
 1726: 				}
 1727: 		//		Trace( "\n errorcode = %u", SMSErrorCode );
 1728: 			}
 1729: 	*/		return ZhkAtCmdErr = ATCMD_ERR_ERR;
812F01 900EB3            MOV     DPTR,#ZhkAtCmdErr
812F04 7403              MOV     A,#03H
812F06 F0                MOVX    @DPTR,A
812F07 FF                MOV     R7,A
812F08 8002              SJMP    ?C0299?MOBILE
 1730: 		}
 1731: 	}
812F0A         ?C0300?MOBILE:
 1732: 	return ATCMD_ERR_BLOCK;
812F0A 7F01              MOV     R7,#01H
 1733: }
812F0C         ?C0299?MOBILE:
812F0C A522              ERET    
----- FUNCTION ZhkAtCmdGetErr (END) -------


----- FUNCTION ZhkSerial1Init (BEGIN) -----
 FILE: 'Serial1.C'
   46: uchar ZhkSerial1Init( void )
   47: {
   48: 	uint data dat;
   49: 	 data ch;
   50: 	S1STAT = 0x20 ; // 区分接收和发送中断
812F0E A5758420          MOV     S1STAT,#020H
   51: 	S1CON = 0x00 ; //串口控制寄存器清零
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 806


812F12 E4                CLR     A
812F13 A5F580            MOV     S1CON,A
   52: 	REN_1 = 1 ; //允许接收中断
812F16 A5D284            SETB    REN_1
   53: 	{ //进入8 位UART 模式设置
   54: 	SM0_1 = 0 ;
812F19 A5C287            CLR     SM0_1
   55: 	SM1_1 = 1 ; //设定串口通讯方式为模式1
812F1C A5D286            SETB    SM1_1
   56: 	}
   57: 	if ( ZhkVerifyBit != VERIFY_NULL && ZhkDataBit == 8 )
812F1F 902D54            MOV     DPTR,#ZhkSerial1Param+01H
812F22 E0                MOVX    A,@DPTR
812F23 600A              JZ      ?C0001?SERIAL1
812F25 902D53            MOV     DPTR,#ZhkSerial1Param
812F28 E0                MOVX    A,@DPTR
812F29 B40803            CJNE    A,#08H,?C0001?SERIAL1
   58: 	{
   59: 		SM0_1 = 1;
812F2C A5D287            SETB    SM0_1
   60: 	}
812F2F         ?C0001?SERIAL1:
   61: 	// ZhkBaudRate 是波特率的 千位数和百位数组成的BCD码 
   62: 	ch       = ZhkBaudRate;
812F2F 902D57            MOV     DPTR,#ZhkSerial1Param+04H
812F32 E0                MOVX    A,@DPTR
812F33 752E00            MOV     ch,#00H
812F36 F52F              MOV     ch+01H,A
   63: 	if ( ch > 0x99 || ch % 16 > 9 ) return 0 ;
812F38 D3                SETB    C
812F39 E52F              MOV     A,ch+01H
812F3B 9499              SUBB    A,#099H
812F3D E52E              MOV     A,ch
812F3F 6480              XRL     A,#080H
812F41 9480              SUBB    A,#080H
812F43 5018              JNC     ?C0003?SERIAL1
812F45 AE2E              MOV     R6,ch
812F47 AF2F              MOV     R7,ch+01H
812F49 7C00              MOV     R4,#00H
812F4B 7D10              MOV     R5,#010H
812F4D A5128005C5        ECALL   ?C?SIDIV
812F52 D3                SETB    C
812F53 ED                MOV     A,R5
812F54 9409              SUBB    A,#09H
812F56 EC                MOV     A,R4
812F57 6480              XRL     A,#080H
812F59 9480              SUBB    A,#080H
812F5B 4004              JC      ?C0002?SERIAL1
812F5D         ?C0003?SERIAL1:
812F5D 7F00              MOV     R7,#00H
812F5F 806A              SJMP    ?C0004?SERIAL1
812F61         ?C0002?SERIAL1:
   64: 	
   65: 	dat      = ( ch - ch / 16 * 6 ) * 100;
812F61 AE2E              MOV     R6,ch
812F63 AF2F              MOV     R7,ch+01H
812F65 7C00              MOV     R4,#00H
812F67 7D10              MOV     R5,#010H
812F69 A5128005C5        ECALL   ?C?SIDIV
812F6E 7C00              MOV     R4,#00H
812F70 7D06              MOV     R5,#06H
812F72 A512800559        ECALL   ?C?IMUL
812F77 C3                CLR     C
812F78 E52F              MOV     A,ch+01H
812F7A 9F                SUBB    A,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 807


812F7B FF                MOV     R7,A
812F7C E52E              MOV     A,ch
812F7E 9E                SUBB    A,R6
812F7F FE                MOV     R6,A
812F80 7D64              MOV     R5,#064H
812F82 A512800559        ECALL   ?C?IMUL
812F87 8E2C              MOV     dat,R6
812F89 8F2D              MOV     dat+01H,R7
   66: 	dat      = OSCRATE / dat - 16;
812F8B AB07              MOV     R3,AR7
812F8D AA06              MOV     R2,AR6
812F8F E4                CLR     A
812F90 F9                MOV     R1,A
812F91 F8                MOV     R0,A
812F92 FF                MOV     R7,A
812F93 7EC0              MOV     R6,#0C0H
812F95 7DA8              MOV     R5,#0A8H
812F97 A5128017C6        ECALL   ?C?SLDIV
812F9C EF                MOV     A,R7
812F9D 24F0              ADD     A,#0F0H
812F9F F52D              MOV     dat+01H,A
812FA1 EE                MOV     A,R6
812FA2 34FF              ADDC    A,#0FFH
812FA4 F52C              MOV     dat,A
   67: 	BRGCON = 0X00 ; //关闭波特率发生器，从而设置波特率
812FA6 E4                CLR     A
812FA7 A5F585            MOV     BRGCON,A
   68: 	BRGR1 = dat >> 8 ;
812FAA E52C              MOV     A,dat
812FAC A5F587            MOV     BRGR1,A
   69: 	BRGR0 = dat & 0x0ff ;
812FAF E52D              MOV     A,dat+01H
812FB1 A5F586            MOV     BRGR0,A
   70: 	BRGCON = 0X01 ; //开启波特率发生器
812FB4 A5758501          MOV     BRGCON,#01H
   71: 	
   72: 	ES1R = 1 ; // 开放UART1 接收中断
812FB8 D2E8              SETB    ES1R
   73: 	TI_1 = 1 ;
812FBA A5D281            SETB    TI_1
   74: 	DelayMs( 3 );
812FBD 7F03              MOV     R7,#03H
812FBF A512809789        ECALL   _DelayMs
   75: 	ZhkSerial1RxBufWd = 0;
812FC4 E4                CLR     A
812FC5 F54C              MOV     ZhkSerial1RxBufWd,A
   76: 	ZhkSerial1RxBufRd = 0;
812FC7 F54B              MOV     ZhkSerial1RxBufRd,A
   77: 	return 1;
812FC9 7F01              MOV     R7,#01H
   78: }
812FCB         ?C0004?SERIAL1:
812FCB A522              ERET    
----- FUNCTION ZhkSerial1Init (END) -------


----- FUNCTION ZhkSerial1_Isr (BEGIN) -----
 FILE: 'Serial1.C'
  162: void ZhkSerial1_Isr( void ) interrupt 10 using 1 
812FCD C0E0              PUSH    ACC
812FCF C083              PUSH    DPH
812FD1 C082              PUSH    DPL
812FD3 C0D0              PUSH    PSW
  163: {
  164: 	ZhkSaveChipSelect();
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 808


812FD5 C090              PUSH    P1
  165: 	ZhkHardSramSelect();
812FD7 759008            MOV     P1,#08H
  166: /*
  167: 	if ( TI_1 )
  168: 	{
  169: 		TI_1 = 0;
  170: 		ZhkSerial1TxdEmpty = 1;
  171: 	}
  172: */
  173: 	if ( RI_1 )
812FDA A530801E          JNB     RI_1,?C0017?SERIAL1
  174: 	{
  175: 		RI_1 = 0;
812FDE A5C280            CLR     RI_1
  176: 		ZhkSerial1RxBuf[ ZhkSerial1RxBufWd ] = S1BUF;
812FE1 74D3              MOV     A,#LOW ZhkSerial1RxBuf
812FE3 254C              ADD     A,ZhkSerial1RxBufWd
812FE5 F582              MOV     DPL,A
812FE7 E4                CLR     A
812FE8 342C              ADDC    A,#HIGH ZhkSerial1RxBuf
812FEA F583              MOV     DPH,A
812FEC A5E581            MOV     A,S1BUF
812FEF F0                MOVX    @DPTR,A
  177: 		ZhkSerial1RxBufWd ++;
812FF0 054C              INC     ZhkSerial1RxBufWd
  178: 		if ( ZhkSerial1RxBufWd >= ZHKSERIAL1RXBUFLEN )
812FF2 E54C              MOV     A,ZhkSerial1RxBufWd
812FF4 C3                CLR     C
812FF5 9480              SUBB    A,#080H
812FF7 4003              JC      ?C0017?SERIAL1
  179: 			ZhkSerial1RxBufWd = 0;
812FF9 754C00            MOV     ZhkSerial1RxBufWd,#00H
  180: 	}
812FFC         ?C0017?SERIAL1:
  181: 	ZhkLoadChipSelect();
812FFC D090              POP     P1
  182: 
  183: }
812FFE D0D0              POP     PSW
813000 D082              POP     DPL
813002 D083              POP     DPH
813004 D0E0              POP     ACC
813006 32                RETI    
----- FUNCTION ZhkSerial1_Isr (END) -------


----- FUNCTION ZhkSerialGetCh (BEGIN) -----
 FILE: 'serial.c'
  107: uchar ZhkSerialGetCh( void )
  108: {
  109: 	uchar data ch;
  110: 	ch = ZhkSerialRxBuf[ ZhkSerialRxBufRd ];
813007 902A4B            MOV     DPTR,#ZhkSerialRxBufRd
81300A E0                MOVX    A,@DPTR
81300B FE                MOV     R6,A
81300C A3                INC     DPTR
81300D E0                MOVX    A,@DPTR
81300E 2453              ADD     A,#LOW ZhkSerialRxBuf
813010 F582              MOV     DPL,A
813012 742A              MOV     A,#HIGH ZhkSerialRxBuf
813014 3E                ADDC    A,R6
813015 F583              MOV     DPH,A
813017 E0                MOVX    A,@DPTR
813018 F532              MOV     ch,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 809


  111: 	ZhkSerialRxBufRd ++;
81301A 902A4B            MOV     DPTR,#ZhkSerialRxBufRd
81301D E4                CLR     A
81301E 75F001            MOV     B,#01H
813021 A512800600        ECALL   ?C?IILDX
  112: 	if ( ZhkSerialRxBufRd >= ZHKSERIALRXBUFLEN ) ZhkSerialRxBufRd = 0;
813026 C3                CLR     C
813027 902A4C            MOV     DPTR,#ZhkSerialRxBufRd+01H
81302A E0                MOVX    A,@DPTR
81302B 9480              SUBB    A,#080H
81302D 902A4B            MOV     DPTR,#ZhkSerialRxBufRd
813030 E0                MOVX    A,@DPTR
813031 9401              SUBB    A,#01H
813033 4004              JC      ?C0013?SERIAL
813035 E4                CLR     A
813036 F0                MOVX    @DPTR,A
813037 A3                INC     DPTR
813038 F0                MOVX    @DPTR,A
813039         ?C0013?SERIAL:
  113: 	ZhkHardSetRTS();
813039 C2B4              CLR     PinRTS
  114: 	return ch;
81303B AF32              MOV     R7,ch
  115: 	
  116: }
81303D         ?C0014?SERIAL:
81303D A522              ERET    
----- FUNCTION ZhkSerialGetCh (END) -------


----- FUNCTION ZhkMobileSignalIn (BEGIN) -----
 FILE: 'mobile.c'
  506: void ZhkMobileSignalIn( void )
  507: {
  508: 	#define SMSHEAD  "+CMTI:"			
  509: 	#define GPRSHEAD "+IPD"
  510: 	#define GPRSCLOSE "CLOSED"
  511: 	
  512: //	static uint  xdata CommingMsglen      = 0;
  513: //	static uchar xdata CommingMsgAccepter = 0;
  514: 	// 0 表示无
  515: 	// 1 表示即将受到信息为gprs信息 
  516: 	
  517: 	static uchar MobileMsgTemp[ 512 ];
81303F         ?C0095?MOBILE:
  518: 	static uint  i = 0;
  519: 	uchar data j;
  520: 	uchar data num;
  521: //	if ( CommingMsgAccepter == 0 )
  522: 	{
  523: 		while( ! ZhkSerialIsRxBufNull() )
81303F A5128137DD        ECALL   ZhkSerialIsRxBufNull
813044 EF                MOV     A,R7
813045 6003              JZ      $ + 5H
813047 023216            LJMP    ?C0112?MOBILE
  524: 		{
  525: 			if ( i >= sizeof( MobileMsgTemp ) )
81304A C3                CLR     C
81304B 900D26            MOV     DPTR,#i
81304E E0                MOVX    A,@DPTR
81304F 9402              SUBB    A,#02H
813051 4004              JC      ?C0097?MOBILE
  526: 		 		i = 0;
813053 E4                CLR     A
813054 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 810


813055 A3                INC     DPTR
813056 F0                MOVX    @DPTR,A
813057         ?C0097?MOBILE:
  527: 			MobileMsgTemp[ i ++ ] = ZhkSerialGetCh();
813057 A512813007        ECALL   ZhkSerialGetCh
81305C 900D26            MOV     DPTR,#i
81305F E4                CLR     A
813060 75F001            MOV     B,#01H
813063 A512800617        ECALL   ?C?ILDIX
813068 FC                MOV     R4,A
813069 7426              MOV     A,#LOW MobileMsgTemp
81306B 25F0              ADD     A,B
81306D F582              MOV     DPL,A
81306F 740B              MOV     A,#HIGH MobileMsgTemp
813071 3C                ADDC    A,R4
813072 F583              MOV     DPH,A
813074 EF                MOV     A,R7
813075 F0                MOVX    @DPTR,A
  528: 			MobileMsgTemp[ i ] = '\0';
813076 900D26            MOV     DPTR,#i
813079 E0                MOVX    A,@DPTR
81307A FE                MOV     R6,A
81307B A3                INC     DPTR
81307C E0                MOVX    A,@DPTR
81307D FF                MOV     R7,A
81307E 2426              ADD     A,#LOW MobileMsgTemp
813080 F582              MOV     DPL,A
813082 740B              MOV     A,#HIGH MobileMsgTemp
813084 3E                ADDC    A,R6
813085 F583              MOV     DPH,A
813087 E4                CLR     A
813088 F0                MOVX    @DPTR,A
  529: 			if ( ( i >= 2 ) && ( MobileMsgTemp[ i - 2 ] == '\r') && ( MobileMsgTemp[ i - 1 ] == '\n' ) )
813089 C3                CLR     C
81308A EF                MOV     A,R7
81308B 9402              SUBB    A,#02H
81308D EE                MOV     A,R6
81308E 9400              SUBB    A,#00H
813090 5003              JNC     $ + 5H
813092 0231E7            LJMP    ?C0098?MOBILE
813095 7424              MOV     A,#LOW MobileMsgTemp-02H
813097 2F                ADD     A,R7
813098 F582              MOV     DPL,A
81309A 740B              MOV     A,#HIGH MobileMsgTemp-02H
81309C 3E                ADDC    A,R6
81309D F583              MOV     DPH,A
81309F E0                MOVX    A,@DPTR
8130A0 640D              XRL     A,#0DH
8130A2 6003              JZ      $ + 5H
8130A4 0231E7            LJMP    ?C0098?MOBILE
8130A7 900D26            MOV     DPTR,#i
8130AA E0                MOVX    A,@DPTR
8130AB FE                MOV     R6,A
8130AC A3                INC     DPTR
8130AD E0                MOVX    A,@DPTR
8130AE 2425              ADD     A,#LOW MobileMsgTemp-01H
8130B0 F582              MOV     DPL,A
8130B2 740B              MOV     A,#HIGH MobileMsgTemp-01H
8130B4 3E                ADDC    A,R6
8130B5 F583              MOV     DPH,A
8130B7 E0                MOVX    A,@DPTR
8130B8 640A              XRL     A,#0AH
8130BA 6003              JZ      $ + 5H
8130BC 0231E7            LJMP    ?C0098?MOBILE
  530: 			{		
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 811


  531: 				Trace( "\n rx1: pack = %s ", MobileMsgTemp  );
  532: 				i -= 2;							
8130BF 900D26            MOV     DPTR,#i
8130C2 74FF              MOV     A,#0FFH
8130C4 75F0FE            MOV     B,#0FEH
8130C7 A512800600        ECALL   ?C?IILDX
  533: 				if( ( i > strlen( SMSHEAD )) && ( memcmp( SMSHEAD, MobileMsgTemp, strlen( SMSHEAD ) ) == 0 ))
8130CC 7B80              MOV     R3,#BYTE2 08016B0H
8130CE 7A16              MOV     R2,#HIGH 08016B0H
8130D0 79B0              MOV     R1,#LOW 08016B0H
8130D2 A512800010        ECALL   _strlen
8130D7 D3                SETB    C
8130D8 900D27            MOV     DPTR,#i+01H
8130DB E0                MOVX    A,@DPTR
8130DC 9F                SUBB    A,R7
8130DD 900D26            MOV     DPTR,#i
8130E0 E0                MOVX    A,@DPTR
8130E1 9E                SUBB    A,R6
8130E2 5003              JNC     $ + 5H
8130E4 0231A0            LJMP    ?C0099?MOBILE
8130E7 7B80              MOV     R3,#BYTE2 08016B0H
8130E9 7A16              MOV     R2,#HIGH 08016B0H
8130EB 79B0              MOV     R1,#LOW 08016B0H
8130ED A512800010        ECALL   _strlen
8130F2 78B0              MOV     R0,#LOW 08016B0H
8130F4 7C16              MOV     R4,#HIGH 08016B0H
8130F6 7D80              MOV     R5,#BYTE2 08016B0H
8130F8 7B00              MOV     R3,#?C?XDATASEG
8130FA 7A0B              MOV     R2,#HIGH MobileMsgTemp
8130FC 7926              MOV     R1,#LOW MobileMsgTemp
8130FE A51280086D        ECALL   ?C?MEMCMP
813103 EF                MOV     A,R7
813104 6003              JZ      $ + 5H
813106 0231A0            LJMP    ?C0099?MOBILE
  534: 				{
  535: 		//			Trace( "\n rx1: Find SMSHEAD"  );
  536: 					for( j = sizeof( SMSHEAD ) ; j < i ; j ++ )
813109 753007            MOV     j,#07H
81310C         ?C0100?MOBILE:
81310C D3                SETB    C
81310D 900D27            MOV     DPTR,#i+01H
813110 E0                MOVX    A,@DPTR
813111 9530              SUBB    A,j
813113 900D26            MOV     DPTR,#i
813116 E0                MOVX    A,@DPTR
813117 9400              SUBB    A,#00H
813119 4018              JC      ?C0101?MOBILE
  537: 						if ( isdigit( MobileMsgTemp[ j ] ) )
81311B 7426              MOV     A,#LOW MobileMsgTemp
81311D 2530              ADD     A,j
81311F F582              MOV     DPL,A
813121 E4                CLR     A
813122 340B              ADDC    A,#HIGH MobileMsgTemp
813124 F583              MOV     DPH,A
813126 E0                MOVX    A,@DPTR
813127 FF                MOV     R7,A
813128 A51280197F        ECALL   _isdigit
81312D 4004              JC      ?C0101?MOBILE
  538: 					 		break;
81312F         ?C0102?MOBILE:
81312F 0530              INC     j
813131 80D9              SJMP    ?C0100?MOBILE
813133         ?C0101?MOBILE:
  539: 					num = 0;
813133 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 812


813134 F531              MOV     num,A
  540: 					for( ; j < i ; j ++ )
813136         ?C0104?MOBILE:
813136 D3                SETB    C
813137 900D27            MOV     DPTR,#i+01H
81313A E0                MOVX    A,@DPTR
81313B 9530              SUBB    A,j
81313D 900D26            MOV     DPTR,#i
813140 E0                MOVX    A,@DPTR
813141 9400              SUBB    A,#00H
813143 4032              JC      ?C0105?MOBILE
  541: 					{
  542: 						if ( ! isdigit( MobileMsgTemp[ j ] ) ) 
813145 7426              MOV     A,#LOW MobileMsgTemp
813147 2530              ADD     A,j
813149 F582              MOV     DPL,A
81314B E4                CLR     A
81314C 340B              ADDC    A,#HIGH MobileMsgTemp
81314E F583              MOV     DPH,A
813150 E0                MOVX    A,@DPTR
813151 FF                MOV     R7,A
813152 A51280197F        ECALL   _isdigit
813157 501A              JNC     ?C0106?MOBILE
  543: 							continue;					
813159         ?C0107?MOBILE:
  544: 						num = num * 10 + MobileMsgTemp[ j ] - '0';
813159 7426              MOV     A,#LOW MobileMsgTemp
81315B 2530              ADD     A,j
81315D F582              MOV     DPL,A
81315F E4                CLR     A
813160 340B              ADDC    A,#HIGH MobileMsgTemp
813162 F583              MOV     DPH,A
813164 E0                MOVX    A,@DPTR
813165 FF                MOV     R7,A
813166 E531              MOV     A,num
813168 75F00A            MOV     B,#0AH
81316B A4                MUL     AB
81316C FE                MOV     R6,A
81316D EF                MOV     A,R7
81316E 2E                ADD     A,R6
81316F 24D0              ADD     A,#0D0H
813171 F531              MOV     num,A
  545: 					}
813173         ?C0106?MOBILE:
813173 0530              INC     j
813175 80BF              SJMP    ?C0104?MOBILE
813177         ?C0105?MOBILE:
  546: 		//			Trace( "\n rx1: num = %bu ", num );
  547: 					for( j = 0 ; j < sizeof( NewCommingSmsSit ) ; j ++ ) 
813177 E4                CLR     A
813178 F530              MOV     j,A
81317A         ?C0108?MOBILE:
  548: 					{
  549: 						if ( NewCommingSmsSit[ j ] == -1 )
81317A 7482              MOV     A,#LOW NewCommingSmsSit
81317C 2530              ADD     A,j
81317E F582              MOV     DPL,A
813180 E4                CLR     A
813181 3415              ADDC    A,#HIGH NewCommingSmsSit
813183 F583              MOV     DPH,A
813185 E0                MOVX    A,@DPTR
813186 B4FF10            CJNE    A,#0FFH,?C0110?MOBILE
  550: 						{
  551: 							NewCommingSmsSit[ j ] = num;
813189 7482              MOV     A,#LOW NewCommingSmsSit
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 813


81318B 2530              ADD     A,j
81318D F582              MOV     DPL,A
81318F E4                CLR     A
813190 3415              ADDC    A,#HIGH NewCommingSmsSit
813192 F583              MOV     DPH,A
813194 E531              MOV     A,num
813196 F0                MOVX    @DPTR,A
  552: 			//				Trace( "\n rx1:NewCommingSmsSit[ %bu ] = %bu" , j, NewCommingSmsSit[ j ] );
  553: 				 			break;
813197 8007              SJMP    ?C0099?MOBILE
  554: 						}
  555: 					}
813199         ?C0110?MOBILE:
813199 0530              INC     j
81319B E530              MOV     A,j
81319D B410DA            CJNE    A,#010H,?C0108?MOBILE
  556: 				}				
8131A0         ?C0099?MOBILE:
  557: 				memcpy( ZhkAtCmdBuffer , MobileMsgTemp , i );
8131A0 900D26            MOV     DPTR,#i
8131A3 E0                MOVX    A,@DPTR
8131A4 FE                MOV     R6,A
8131A5 A3                INC     DPTR
8131A6 E0                MOVX    A,@DPTR
8131A7 FF                MOV     R7,A
8131A8 7881              MOV     R0,#LOW ZhkAtCmdBuffer
8131AA 7C11              MOV     R4,#HIGH ZhkAtCmdBuffer
8131AC 7D00              MOV     R5,#?C?XDATASEG
8131AE 7B00              MOV     R3,#?C?XDATASEG
8131B0 7A0B              MOV     R2,#HIGH MobileMsgTemp
8131B2 7926              MOV     R1,#LOW MobileMsgTemp
8131B4 A51280052D        ECALL   ?C?COPY
  558: 				ZhkAtCmdBuffer[ i ] = '\0';
8131B9 900D26            MOV     DPTR,#i
8131BC E0                MOVX    A,@DPTR
8131BD FE                MOV     R6,A
8131BE A3                INC     DPTR
8131BF E0                MOVX    A,@DPTR
8131C0 FF                MOV     R7,A
8131C1 2481              ADD     A,#LOW ZhkAtCmdBuffer
8131C3 F582              MOV     DPL,A
8131C5 7411              MOV     A,#HIGH ZhkAtCmdBuffer
8131C7 3E                ADDC    A,R6
8131C8 F583              MOV     DPH,A
8131CA E4                CLR     A
8131CB F0                MOVX    @DPTR,A
  559: 				ZhkAtCmdBufWr = i;
8131CC 901593            MOV     DPTR,#ZhkAtCmdBufWr
8131CF EE                MOV     A,R6
8131D0 F0                MOVX    @DPTR,A
8131D1 A3                INC     DPTR
8131D2 EF                MOV     A,R7
8131D3 F0                MOVX    @DPTR,A
  560: 	//			Trace( "\n rx1:%s" , MobileMsgTemp );
  561: 				memset( MobileMsgTemp, 0, sizeof( MobileMsgTemp ) );
8131D4 7E02              MOV     R6,#02H
8131D6 7F00              MOV     R7,#00H
8131D8 7D00              MOV     R5,#00H
8131DA 7B00              MOV     R3,#?C?XDATASEG
8131DC 7A0B              MOV     R2,#HIGH MobileMsgTemp
8131DE 7926              MOV     R1,#LOW MobileMsgTemp
8131E0 A5128008A6        ECALL   ?C?MEMSET
  562: 				i = 0;				
8131E5 8028              SJMP    ?C0357?MOBILE
  563: 				return;				
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 814


  564: 			}			
8131E7         ?C0098?MOBILE:
  565: 			if ( MobileMsgTemp[ i - 1 ] == '>' )
8131E7 900D26            MOV     DPTR,#i
8131EA E0                MOVX    A,@DPTR
8131EB FE                MOV     R6,A
8131EC A3                INC     DPTR
8131ED E0                MOVX    A,@DPTR
8131EE 2425              ADD     A,#LOW MobileMsgTemp-01H
8131F0 F582              MOV     DPL,A
8131F2 740B              MOV     A,#HIGH MobileMsgTemp-01H
8131F4 3E                ADDC    A,R6
8131F5 F583              MOV     DPH,A
8131F7 E0                MOVX    A,@DPTR
8131F8 643E              XRL     A,#03EH
8131FA 6003              JZ      $ + 5H
8131FC 02303F            LJMP    ?C0095?MOBILE
  566: 			{
  567: 				
  568: 				ZhkAtCmdBuffer[ 0 ] = '>';
8131FF 901181            MOV     DPTR,#ZhkAtCmdBuffer
813202 743E              MOV     A,#03EH
813204 F0                MOVX    @DPTR,A
  569: 				ZhkAtCmdBuffer[ 1 ] = '\0';
813205 E4                CLR     A
813206 A3                INC     DPTR
813207 F0                MOVX    @DPTR,A
  570: 				ZhkAtCmdBufWr = 1;
813208 901593            MOV     DPTR,#ZhkAtCmdBufWr
81320B F0                MOVX    @DPTR,A
81320C A3                INC     DPTR
81320D 04                INC     A
81320E F0                MOVX    @DPTR,A
  571: 				i = 0;
81320F         
81320F E4                CLR     A
813210 900D26            MOV     DPTR,#i
813213 F0                MOVX    @DPTR,A
813214 A3                INC     DPTR
813215 F0                MOVX    @DPTR,A
  572: 				Trace( "\n rx2: %s" , ZhkAtCmdBuffer );
  573: 				return;
  574: 			} 
  575: 		}
  576: 	}	
  577: }
813216         ?C0112?MOBILE:
813216 A522              ERET    
----- FUNCTION ZhkMobileSignalIn (END) -------


----- FUNCTION ZhkMobileProcess (BEGIN) -----
 FILE: 'mobile.c'
  400: uchar ZhkMobileProcess( void )
  401: {	
  402: 	uchar data i;
  403: 
  404: 	ZhkMobileSignalIn();
813218 A51281303F        ECALL   ZhkMobileSignalIn
  405: 	switch( ZhkMobileCurrentTask )
81321D 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
813220 E0                MOVX    A,@DPTR
813221 6020              JZ      ?C0071?MOBILE
813223 24FB              ADD     A,#0FBH
813225 6024              JZ      ?C0072?MOBILE
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 815


813227 14                DEC     A
813228 6050              JZ      ?C0077?MOBILE
81322A 24FD              ADD     A,#0FDH
81322C 6003              JZ      $ + 5H
81322E 023311            LJMP    ?C0091?MOBILE
  406: 	{
  407: 		case MOBILE_INIT:			
813231         ?C0066?MOBILE:
  408: 			switch( MobileInitProcess() ) 
813231 A512812BB9        ECALL   MobileInitProcess
813236 EF                MOV     A,R7
813237 24F0              ADD     A,#0F0H
813239 24FD              ADD     A,#0FDH
81323B 5003              JNC     ?C0070?MOBILE
81323D 02331A            LJMP    ?C0065?MOBILE
  409: 			{
  410: 				Trace( "\n MobileInitProcess end" );
  411: 				case MOBILE_FINISH:					
  412: 				case MOBILE_TIMEOUT:			
  413: 				case MOBILE_ERROR:
813240         ?C0070?MOBILE:
  414: 					ZhkMobileCurrentTask = MOBILE_NULL;
  415: 				break;
813240 02330A            LJMP    ?C0355?MOBILE
  416: 			}
  417: 		break;
  418: 		case MOBILE_NULL:
813243         ?C0071?MOBILE:
  419: 			ZhkMobileNullProcess();
813243 A512813C55        ECALL   ZhkMobileNullProcess
  420: 		break;
813248 02331A            LJMP    ?C0065?MOBILE
  421: 	#ifdef _MOBILE_SMS_1
  422: 		case MOBILE_TXSHORTMSG:
81324B         ?C0072?MOBILE:
  423: 			switch( ZhkMobileSmsTxProcess() ) 
81324B A51281331E        ECALL   ZhkMobileSmsTxProcess
813250 EF                MOV     A,R7
813251 24EF              ADD     A,#0EFH
813253 600D              JZ      ?C0075?MOBILE
813255 14                DEC     A
813256 601F              JZ      ?C0076?MOBILE
813258 2402              ADD     A,#02H
81325A 6003              JZ      $ + 5H
81325C 02331A            LJMP    ?C0065?MOBILE
  424: 			{			
  425: 				case MOBILE_FINISH:
81325F         ?C0074?MOBILE:
  426: 					ZhkMobileCurrentTask = MOBILE_NULL;
81325F         
  427: 				break;
81325F 02330A            LJMP    ?C0355?MOBILE
  428: 				case MOBILE_TIMEOUT:	
813262         ?C0075?MOBILE:
  429: 					ZhkSerialPutCh( 0x1A );
813262 7F1A              MOV     R7,#01AH
813264 A512807204        ECALL   _ZhkSerialPutCh
  430: 					ZhkSerialPutCh( 0x0D );
813269 7F0D              MOV     R7,#0DH
81326B A512807204        ECALL   _ZhkSerialPutCh
  431: 					ZhkSerialPutCh( 0x0A );			
813270 7F0A              MOV     R7,#0AH
813272 A512807204        ECALL   _ZhkSerialPutCh
  432: 			//		Trace("\n MOBILE_TIMEOUT");
  433: 				case MOBILE_ERROR:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 816


813277         ?C0076?MOBILE:
  434: 			//		Trace("\n MOBILE_ERROR");									
  435: 					ZhkMobileCurrentTask = MOBILE_NULL;					
813277         
  436: 				break;
813277 02330A            LJMP    ?C0355?MOBILE
  437: 			}
  438: 		break;
  439: 		case MOBILE_RXSHORTMSG:
81327A         ?C0077?MOBILE:
  440: 			if( ReceiveSMSTimer !=  0 )
81327A E519              MOV     A,ReceiveSMSTimer
81327C 6003              JZ      $ + 5H
81327E 02331A            LJMP    ?C0065?MOBILE
  441: 				break;
813281         ?C0078?MOBILE:
  442: 			switch( ZhkMobileSmsRxProcess() ) 
813281 A5128134F1        ECALL   ZhkMobileSmsRxProcess
813286 EF                MOV     A,R7
813287 24EF              ADD     A,#0EFH
813289 603D              JZ      ?C0085?MOBILE
81328B 14                DEC     A
81328C 603A              JZ      ?C0085?MOBILE
81328E 2402              ADD     A,#02H
813290 6003              JZ      $ + 5H
813292 02331A            LJMP    ?C0065?MOBILE
  443: 			{
  444: 				case MOBILE_FINISH:	
813295         ?C0080?MOBILE:
  445: 					{
  446: 						Trace("\n ZhkMobileProcess SMSIndex OK " );
  447: 						//去掉这条短信标志
  448: 						for( i = 0 ; i < sizeof( NewCommingSmsSit ) - 1 ; i ++ )
813295 E4                CLR     A
813296 F52A              MOV     i,A
813298         ?C0081?MOBILE:
  449: 						{
  450: 							NewCommingSmsSit[ i ] = NewCommingSmsSit[ i + 1 ];
813298 7483              MOV     A,#LOW NewCommingSmsSit+01H
81329A 252A              ADD     A,i
81329C F582              MOV     DPL,A
81329E E4                CLR     A
81329F 3415              ADDC    A,#HIGH NewCommingSmsSit+01H
8132A1 F583              MOV     DPH,A
8132A3 E0                MOVX    A,@DPTR
8132A4 FF                MOV     R7,A
8132A5 7482              MOV     A,#LOW NewCommingSmsSit
8132A7 252A              ADD     A,i
8132A9 F582              MOV     DPL,A
8132AB E4                CLR     A
8132AC 3415              ADDC    A,#HIGH NewCommingSmsSit
8132AE F583              MOV     DPH,A
8132B0 EF                MOV     A,R7
8132B1 F0                MOVX    @DPTR,A
  451: 						}
8132B2 052A              INC     i
8132B4 E52A              MOV     A,i
8132B6 B40FDF            CJNE    A,#0FH,?C0081?MOBILE
8132B9         ?C0082?MOBILE:
  452: 						NewCommingSmsSit[ sizeof( NewCommingSmsSit ) - 1 ] = -1;
8132B9 901591            MOV     DPTR,#NewCommingSmsSit+0FH
8132BC 74FF              MOV     A,#0FFH
8132BE F0                MOVX    @DPTR,A
  453: 						ReceiveSMSTimer = 0;			
8132BF E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 817


8132C0 F519              MOV     ReceiveSMSTimer,A
  454: 						SMSReceiveTime = 0;
8132C2 9010CD            MOV     DPTR,#SMSReceiveTime
8132C5 F0                MOVX    @DPTR,A
  455: 					}
  456: 					ZhkMobileCurrentTask = MOBILE_NULL;			
  457: 				break;	
8132C6 8043              SJMP    ?C0356?MOBILE
  458: 				case MOBILE_TIMEOUT:			
  459: 				case MOBILE_ERROR:					
8132C8         ?C0085?MOBILE:
  460: 					{
  461: 						Trace("\n ZhkMobileProcess  Fail " );
  462: 						Trace("\n ZhkMobileProcess SMSReceiveTime = %bu ", SMSReceiveTime );
  463: 						if( SMSReceiveTime < RETRYTIME )
8132C8 9010CD            MOV     DPTR,#SMSReceiveTime
8132CB E0                MOVX    A,@DPTR
8132CC C3                CLR     C
8132CD 9405              SUBB    A,#05H
8132CF 5008              JNC     ?C0086?MOBILE
  464: 						{
  465: 							SMSReceiveTime++;
8132D1 E0                MOVX    A,@DPTR
8132D2 04                INC     A
8132D3 F0                MOVX    @DPTR,A
  466: 							ReceiveSMSTimer = INTERVAL_TIME;
8132D4 75191E            MOV     ReceiveSMSTimer,#01EH
  467: 							Trace("\n ZhkMobileProcess ReRead SMS " );
  468: 						}
8132D7 8031              SJMP    ?C0087?MOBILE
8132D9         ?C0086?MOBILE:
  469: 						else
  470: 						{
  471: 							//不再重试读取此条短信了
  472: 							for( i = 0 ; i < sizeof( NewCommingSmsSit ) - 1 ; i ++ )							
8132D9 E4                CLR     A
8132DA F52A              MOV     i,A
8132DC         ?C0088?MOBILE:
  473: 								NewCommingSmsSit[ i ] = NewCommingSmsSit[ i + 1 ];							
8132DC 7483              MOV     A,#LOW NewCommingSmsSit+01H
8132DE 252A              ADD     A,i
8132E0 F582              MOV     DPL,A
8132E2 E4                CLR     A
8132E3 3415              ADDC    A,#HIGH NewCommingSmsSit+01H
8132E5 F583              MOV     DPH,A
8132E7 E0                MOVX    A,@DPTR
8132E8 FF                MOV     R7,A
8132E9 7482              MOV     A,#LOW NewCommingSmsSit
8132EB 252A              ADD     A,i
8132ED F582              MOV     DPL,A
8132EF E4                CLR     A
8132F0 3415              ADDC    A,#HIGH NewCommingSmsSit
8132F2 F583              MOV     DPH,A
8132F4 EF                MOV     A,R7
8132F5 F0                MOVX    @DPTR,A
8132F6 052A              INC     i
8132F8 E52A              MOV     A,i
8132FA B40FDF            CJNE    A,#0FH,?C0088?MOBILE
8132FD         ?C0089?MOBILE:
  474: 							NewCommingSmsSit[ sizeof( NewCommingSmsSit ) - 1 ] = -1;
8132FD 901591            MOV     DPTR,#NewCommingSmsSit+0FH
813300 74FF              MOV     A,#0FFH
813302 F0                MOVX    @DPTR,A
  475: 							ReceiveSMSTimer = 0;			
813303 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 818


813304 F519              MOV     ReceiveSMSTimer,A
  476: 							SMSReceiveTime = 0;	
813306 9010CD            MOV     DPTR,#SMSReceiveTime
813309 F0                MOVX    @DPTR,A
  477: 							Trace("\n ZhkMobileProcess Not Read SMS " );
  478: 						}
81330A         ?C0087?MOBILE:
  479: 					}
  480: 					ZhkMobileCurrentTask = MOBILE_NULL;
81330A         
81330A E4                CLR     A
81330B         
81330B 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
81330E F0                MOVX    @DPTR,A
  481: 				break;
81330F 8009              SJMP    ?C0065?MOBILE
  482: 			}
  483: 		break;
  484: 	#endif
  485: 		default:
813311         ?C0091?MOBILE:
  486: 			ZhkMobileCurrentTask = MOBILE_NULL;
813311 E4                CLR     A
813312 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
813315 F0                MOVX    @DPTR,A
  487: 		return MOBILE_ERROR;
813316 7F12              MOV     R7,#012H
813318 8002              SJMP    ?C0092?MOBILE
  488: 	}
81331A         ?C0065?MOBILE:
  489: 	return 0;
81331A 7F00              MOV     R7,#00H
  490: }
81331C         ?C0092?MOBILE:
81331C A522              ERET    
----- FUNCTION ZhkMobileProcess (END) -------


----- FUNCTION ZhkMobileSmsTxProcess (BEGIN) -----
 FILE: 'mobile.c'
  736: 	uchar ZhkMobileSmsTxProcess( void )
  737: 	{
  738: 		// AT+CMGS=<length><cr><lf>
  739: 		// waitfor '>'
  740: 		// SendMsg
  741: 		// <^Z><cr><lf>
  742: 		// waitfor OK
  743: 		
  744: 		static uchar xdata MsgTxStatus = MOBILE_BEGIN;
  745: 		static uchar xdata DataTemp[ 384 ];
  746: 		
  747: 		struct SHORTMSG xdata SmsTemp;
  748: 		uchar xdata CmdStr[ 64 ];
  749: 		
  750: 		uchar data temp;
  751: 		uint data len;
  752: 		uchar xdata *p = NULL;
81331E E4                CLR     A
81331F 90193B            MOV     DPTR,#p
813322 F0                MOVX    @DPTR,A
813323 A3                INC     DPTR
813324 F0                MOVX    @DPTR,A
  753: 		
  754: 		switch( MsgTxStatus )
813325 900D29            MOV     DPTR,#MsgTxStatus
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 819


813328 E0                MOVX    A,@DPTR
813329 14                DEC     A
81332A 7003              JNZ     $ + 5H
81332C 0233C0            LJMP    ?C0154?MOBILE
81332F 14                DEC     A
813330 7003              JNZ     $ + 5H
813332 023471            LJMP    ?C0161?MOBILE
813335 2402              ADD     A,#02H
813337 6003              JZ      $ + 5H
813339 0234E1            LJMP    ?C0167?MOBILE
  755: 		{
  756: 		case MOBILE_BEGIN:			
81333C         ?C0150?MOBILE:
  757: 			if ( ZhkMobileSmsGetTxMsg( &SmsTemp ) )
81333C 7B00              MOV     R3,#?C?XDATASEG
81333E 7A18              MOV     R2,#HIGH SmsTemp
813340 7949              MOV     R1,#LOW SmsTemp
813342 A512813D75        ECALL   _ZhkMobileSmsGetTxMsg
813347 EF                MOV     A,R7
813348 6007              JZ      ?C0151?MOBILE
  758: 			{
  759: 				ZhkMobileCurrentTask = MOBILE_NULL;
81334A E4                CLR     A
81334B 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
  760: 				return MOBILE_FINISH;
81334E 023499            LJMP    ?C0360?MOBILE
  761: 			}	
813351         ?C0151?MOBILE:
  762: 			memset( DataTemp, 0, sizeof( DataTemp ) );
813351 7E01              MOV     R6,#01H
813353 7F80              MOV     R7,#080H
813355 7D00              MOV     R5,#00H
813357 7B00              MOV     R3,#?C?XDATASEG
813359 7A0D              MOV     R2,#HIGH DataTemp
81335B 792A              MOV     R1,#LOW DataTemp
81335D A5128008A6        ECALL   ?C?MEMSET
  763: 			len = ZhkMobileSmsPack( &SmsTemp , DataTemp );	
813362 7E18              MOV     R6,#HIGH SmsTemp
813364 7F49              MOV     R7,#LOW SmsTemp
813366 7C0D              MOV     R4,#HIGH DataTemp
813368 7D2A              MOV     R5,#LOW DataTemp
81336A A51280730B        ECALL   _ZhkMobileSmsPack
81336F 8E2C              MOV     len,R6
813371 8F2D              MOV     len+01H,R7
  764: 			if ( len == 0 )
813373 E52D              MOV     A,len+01H
813375 452C              ORL     A,len
813377 700A              JNZ     ?C0153?MOBILE
  765: 			{
  766: 				ZhkMobileCurrentTask = MOBILE_NULL;
813379 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
81337C F0                MOVX    @DPTR,A
  767: 				SMSLastErr = SMS_ERR_NULL;
81337D 900EB6            MOV     DPTR,#SMSLastErr
813380         
  768: 				return MOBILE_FINISH;
813380 023499            LJMP    ?C0360?MOBILE
  769: 			}
813383         ?C0153?MOBILE:
  770: 			//发送“发送信息”指令
  771: 			len = sprintf( CmdStr , "AT+CMGS=%d" , len );
813383 7B80              MOV     R3,#BYTE2 08016B7H
813385 7A16              MOV     R2,#HIGH 08016B7H
813387 79B7              MOV     R1,#LOW 08016B7H
813389 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 820


81338C A5128007B6        ECALL   ?C?PSTXDATA
813391 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
813394 E52C              MOV     A,len
813396 F0                MOVX    @DPTR,A
813397 A3                INC     DPTR
813398 E52D              MOV     A,len+01H
81339A F0                MOVX    @DPTR,A
81339B 7B00              MOV     R3,#?C?XDATASEG
81339D 7A18              MOV     R2,#HIGH CmdStr
81339F 79FB              MOV     R1,#LOW CmdStr
8133A1 A512800949        ECALL   _sprintf
8133A6 8E2C              MOV     len,R6
8133A8 8F2D              MOV     len+01H,R7
  772: 			ZhkAtCmd( CmdStr, 1 );
8133AA 7B00              MOV     R3,#?C?XDATASEG
8133AC 7A18              MOV     R2,#HIGH CmdStr
8133AE 79FB              MOV     R1,#LOW CmdStr
8133B0 7D01              MOV     R5,#01H
8133B2 A512812717        ECALL   _ZhkAtCmd
  773: 			MsgTxStatus       = MOBILE_STEP1;			
8133B7 900D29            MOV     DPTR,#MsgTxStatus
8133BA 7401              MOV     A,#01H
8133BC F0                MOVX    @DPTR,A
  774: 			break;	
8133BD 0234EA            LJMP    ?C0149?MOBILE
  775: 		case MOBILE_STEP1:			// 等待提示符	
8133C0         ?C0154?MOBILE:
  776: 			// 阻塞状态直接返回		
  777: 			ZhkMobileSignalIn();
8133C0 A51281303F        ECALL   ZhkMobileSignalIn
  778: 			if ( ZhkMobileSecTimer == 0 ) 
8133C5 E517              MOV     A,ZhkMobileSecTimer
8133C7 7023              JNZ     ?C0155?MOBILE
  779: 			{
  780: 				if( ZhkAtCmdBufWr == 0 )
8133C9 901593            MOV     DPTR,#ZhkAtCmdBufWr
8133CC E0                MOVX    A,@DPTR
8133CD 7002              JNZ     ?C0305?MOBILE
8133CF A3                INC     DPTR
8133D0 E0                MOVX    A,@DPTR
8133D1         ?C0305?MOBILE:
8133D1 7026              JNZ     ?C0157?MOBILE
  781: 				{
  782: 					MsgTxStatus = MOBILE_BEGIN;					
8133D3 900D29            MOV     DPTR,#MsgTxStatus
8133D6 F0                MOVX    @DPTR,A
  783: 					SMSLastErr  = SMS_ERR_TIMEOUT;
8133D7 900EB6            MOV     DPTR,#SMSLastErr
8133DA 7403              MOV     A,#03H
8133DC F0                MOVX    @DPTR,A
  784: 					ZhkGprsStatus     = GPRS_STATUS_BREAK;
8133DD 901180            MOV     DPTR,#ZhkGprsStatus
8133E0 7401              MOV     A,#01H
8133E2 F0                MOVX    @DPTR,A
  785: 					Trace("\n ZhkMobileSmsTxProcess MOBILE_STEP1 TIMEOUT ");
  786: 					ZhkAtCmdBufWr = 0;
8133E3 E4                CLR     A
8133E4 901593            MOV     DPTR,#ZhkAtCmdBufWr
8133E7 F0                MOVX    @DPTR,A
8133E8 A3                INC     DPTR
  787: 					return MOBILE_TIMEOUT;
8133E9 0234BB            LJMP    ?C0361?MOBILE
  788: 				}
  789: 			}
8133EC         ?C0155?MOBILE:
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 821


  790: 			else if( ZhkAtCmdBufWr == 0 )
8133EC 901593            MOV     DPTR,#ZhkAtCmdBufWr
8133EF E0                MOVX    A,@DPTR
8133F0 7002              JNZ     ?C0306?MOBILE
8133F2 A3                INC     DPTR
8133F3 E0                MOVX    A,@DPTR
8133F4         ?C0306?MOBILE:
8133F4 7003              JNZ     $ + 5H
8133F6 0234EA            LJMP    ?C0149?MOBILE
  791: 				break;
8133F9         ?C0157?MOBILE:
  792: 			ZhkAtCmdBufWr = 0;
8133F9 E4                CLR     A
8133FA 901593            MOV     DPTR,#ZhkAtCmdBufWr
8133FD F0                MOVX    @DPTR,A
8133FE A3                INC     DPTR
8133FF F0                MOVX    @DPTR,A
  793: 			// 手机模块正确接受到指令准备接收数据
  794: 			if ( strcmp( ZhkAtCmdBuffer , ">" ) == 0 )
813400 7881              MOV     R0,#LOW ZhkAtCmdBuffer
813402 7C11              MOV     R4,#HIGH ZhkAtCmdBuffer
813404 7D00              MOV     R5,#?C?XDATASEG
813406 7B80              MOV     R3,#BYTE2 08016C2H
813408 7A16              MOV     R2,#HIGH 08016C2H
81340A 79C2              MOV     R1,#LOW 08016C2H
81340C A51280082C        ECALL   ?C?STRCMP
813411 EF                MOV     A,R7
813412 7018              JNZ     ?C0159?MOBILE
  795: 			{
  796: 				// 收到提示符，发送短信内容			
  797: 				ZhkAtCmd( DataTemp, 0 );
813414 7B00              MOV     R3,#?C?XDATASEG
813416 7A0D              MOV     R2,#HIGH DataTemp
813418 792A              MOV     R1,#LOW DataTemp
81341A FD                MOV     R5,A
81341B A512812717        ECALL   _ZhkAtCmd
  798: 				ZhkMobileSecTimer = ZHKMOBILE_SMS_ACKTIMEOUT;
813420 751746            MOV     ZhkMobileSecTimer,#046H
  799: 				MsgTxStatus       = MOBILE_STEP2;
813423 900D29            MOV     DPTR,#MsgTxStatus
813426 7402              MOV     A,#02H
813428 F0                MOVX    @DPTR,A
  800: 				break;
813429 0234EA            LJMP    ?C0149?MOBILE
  801: 			}
81342C         ?C0159?MOBILE:
  802: 			// 指令接受错误
  803: 			if ( strstr( ZhkAtCmdBuffer , "ERROR" ) != NULL )
81342C 7B80              MOV     R3,#BYTE2 08016C4H
81342E 7A16              MOV     R2,#HIGH 08016C4H
813430 79C4              MOV     R1,#LOW 08016C4H
813432 901D04            MOV     DPTR,#?_strstr?BYTE+03H
813435 A5128007B6        ECALL   ?C?PSTXDATA
81343A 7B00              MOV     R3,#?C?XDATASEG
81343C 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
81343E 7981              MOV     R1,#LOW ZhkAtCmdBuffer
813440 A5128018AE        ECALL   _strstr
813445 E4                CLR     A
813446 F583              MOV     DPH,A
813448 F582              MOV     DPL,A
81344A EB                MOV     A,R3
81344B 7004              JNZ     ?C0307?MOBILE
81344D E9                MOV     A,R1
81344E 7001              JNZ     ?C0307?MOBILE
813450 EA                MOV     A,R2
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 822


813451         ?C0307?MOBILE:
813451 7003              JNZ     $ + 5H
813453 0234EA            LJMP    ?C0149?MOBILE
  804: 			{
  805: 				ZhkAtCmdGetErr();
813456 A512812E80        ECALL   ZhkAtCmdGetErr
  806: 				MsgTxStatus     = MOBILE_BEGIN;				
81345B E4                CLR     A
81345C 900D29            MOV     DPTR,#MsgTxStatus
81345F F0                MOVX    @DPTR,A
  807: 				SMSLastErr    	= SMS_ERR_SENDFAIL;	
813460 900EB6            MOV     DPTR,#SMSLastErr
813463 7404              MOV     A,#04H
813465 F0                MOVX    @DPTR,A
  808: 				ZhkMobileCurrentTask = MOBILE_NULL;
813466 E4                CLR     A
813467 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
81346A F0                MOVX    @DPTR,A
  809: 				ZhkGprsStatus     = GPRS_STATUS_BREAK;
81346B 901180            MOV     DPTR,#ZhkGprsStatus
81346E 04                INC     A
  810: 				ZhkSmsTxNum --;
  811: 				//分解错误码				
  812: 		/*		if( ( p = strstr( ZhkAtCmdBuffer ,"ERROR:" ) ) != NULL )
  813: 				{					
  814: 					memset( CmdStr, '\0', sizeof( CmdStr ) );
  815: 					strcpy( CmdStr, p + 6 );
  816: 					temp = strlen( CmdStr );	
  817: 					for( len = 0; len < temp; len++ )
  818: 					{
  819: 						if( ( CmdStr[len] >= '0' ) && ( CmdStr[len] <= '9' ) )					
  820: 							SMSErrorCode = SMSErrorCode * 10 + ( CmdStr[len] - '0' );						
  821: 					}
  822: 					Trace( "\n SMSErrorCode1 = %u", SMSErrorCode );
  823: 					if( ( SMSErrorCode == 193 ) || ( SMSErrorCode == 515 ) )
  824: 					{
  825: 						ZhkMobileCurrentTask = MOBILE_NULL;
  826: 						MsgTxStatus       = MOBILE_BEGIN;				
  827: 						SMSLastErr  = SMS_ERR_TIMEOUT;
  828: 						ZhkGprsStatus     = GPRS_STATUS_BREAK;
  829: 						return MOBILE_TIMEOUT;
  830: 					}
  831: 				}*/
  832: 				return MOBILE_ERROR;
81346F 8068              SJMP    ?C0362?MOBILE
  833: 			}			
  834: 			break;	
  835: 		case MOBILE_STEP2:			// 等待OK
813471         ?C0161?MOBILE:
  836: 			temp = ZhkAtCmdGetErr();
813471 A512812E80        ECALL   ZhkAtCmdGetErr
813476 8F2B              MOV     temp,R7
  837: 			switch( temp )
813478 E52B              MOV     A,temp
81347A 24FE              ADD     A,#0FEH
81347C 6020              JZ      ?C0165?MOBILE
81347E 14                DEC     A
81347F 603F              JZ      ?C0166?MOBILE
813481 2403              ADD     A,#03H
813483 7065              JNZ     ?C0149?MOBILE
  838: 			{
  839: 			case ATCMD_ERR_NULL:
813485         ?C0163?MOBILE:
  840: 				// 发送成功
  841: 				MsgTxStatus       = MOBILE_BEGIN;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 823


813485 E4                CLR     A
813486 900D29            MOV     DPTR,#MsgTxStatus
813489 F0                MOVX    @DPTR,A
  842: 				ZhkMobileCurrentTask = MOBILE_NULL;
81348A 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
81348D F0                MOVX    @DPTR,A
  843: 				SMSLastErr    	= SMS_ERR_SEND_SUCCEED;
81348E 900EB6            MOV     DPTR,#SMSLastErr
813491 7407              MOV     A,#07H
813493 F0                MOVX    @DPTR,A
  844: 				ZhkSmsTxNum --;
813494 901592            MOV     DPTR,#ZhkSmsTxNum
813497 E0                MOVX    A,@DPTR
813498 14                DEC     A
813499         
813499 F0                MOVX    @DPTR,A
  845: 				return MOBILE_FINISH;
81349A 7F10              MOV     R7,#010H
81349C 8051              SJMP    ?C0152?MOBILE
  846: 			case ATCMD_ERR_BLOCK:
  847: 				// 阻塞状态直接返回
  848: 				break;						
  849: 			case ATCMD_ERR_TIMEOUT:
81349E         ?C0165?MOBILE:
  850: 				// 短信超时处理
  851: 				ZhkMobileCurrentTask = MOBILE_NULL;
81349E E4                CLR     A
81349F 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
8134A2 F0                MOVX    @DPTR,A
  852: 				MsgTxStatus       = MOBILE_BEGIN;				
8134A3 900D29            MOV     DPTR,#MsgTxStatus
8134A6 F0                MOVX    @DPTR,A
  853: 				SMSLastErr  = SMS_ERR_TIMEOUT;
8134A7 900EB6            MOV     DPTR,#SMSLastErr
8134AA 7403              MOV     A,#03H
8134AC F0                MOVX    @DPTR,A
  854: 				ZhkGprsStatus     = GPRS_STATUS_BREAK;
8134AD 901180            MOV     DPTR,#ZhkGprsStatus
8134B0 7401              MOV     A,#01H
8134B2 F0                MOVX    @DPTR,A
  855: 				SMSErrorCode = 60;
8134B3 900EAC            MOV     DPTR,#SMSErrorCode
8134B6 E4                CLR     A
8134B7 F0                MOVX    @DPTR,A
8134B8 A3                INC     DPTR
8134B9 743C              MOV     A,#03CH
8134BB         
8134BB F0                MOVX    @DPTR,A
  856: 				Trace("\n MOBILE_STEP2 TIMEOUT ");
  857: 				return MOBILE_TIMEOUT;
8134BC 7F11              MOV     R7,#011H
8134BE 802F              SJMP    ?C0152?MOBILE
  858: 			case ATCMD_ERR_ERR:
8134C0         ?C0166?MOBILE:
  859: 				// 发送失败
  860: 				////////////////////////////
  861: 				//分解错误码				
  862: 			/*	if( ( p = strstr( ZhkAtCmdBuffer ,"ERROR:" ) ) != NULL )
  863: 				{					
  864: 					memset( CmdStr, '\0', sizeof( CmdStr ) );
  865: 					strcpy( CmdStr, p + 6 );
  866: 					temp = strlen( CmdStr );	
  867: 					for( len = 0; len < temp; len++ )
  868: 					{
  869: 						if( ( CmdStr[len] >= '0' ) && ( CmdStr[len] <= '9' ) )					
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 824


  870: 							SMSErrorCode = SMSErrorCode * 10 + ( CmdStr[len] - '0' );						
  871: 					}
  872: 					Trace( "\n SMSErrorCode2 = %u", SMSErrorCode );
  873: 					if( ( SMSErrorCode == 193 ) || ( SMSErrorCode == 515 ) )
  874: 					{
  875: 						ZhkMobileCurrentTask = MOBILE_NULL;
  876: 						MsgTxStatus       = MOBILE_BEGIN;				
  877: 						SMSLastErr  = SMS_ERR_TIMEOUT;
  878: 						ZhkGprsStatus     = GPRS_STATUS_BREAK;
  879: 						return MOBILE_TIMEOUT;
  880: 					}
  881: 				}*/
  882: 				/////////////////////////////
  883: 				ZhkAtCmdGetErr();
8134C0 A512812E80        ECALL   ZhkAtCmdGetErr
  884: 				ZhkMobileCurrentTask = MOBILE_NULL;
8134C5 E4                CLR     A
8134C6 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
8134C9 F0                MOVX    @DPTR,A
  885: 				MsgTxStatus     = MOBILE_BEGIN;					
8134CA 900D29            MOV     DPTR,#MsgTxStatus
8134CD F0                MOVX    @DPTR,A
  886: 				SMSLastErr    	= SMS_ERR_SENDFAIL;	
8134CE 900EB6            MOV     DPTR,#SMSLastErr
8134D1 7404              MOV     A,#04H
8134D3 F0                MOVX    @DPTR,A
  887: 				ZhkGprsStatus     = GPRS_STATUS_BREAK;
8134D4 901180            MOV     DPTR,#ZhkGprsStatus
8134D7 7401              MOV     A,#01H
8134D9         
8134D9 F0                MOVX    @DPTR,A
  888: 				ZhkSmsTxNum --;
8134DA 901592            MOV     DPTR,#ZhkSmsTxNum
8134DD E0                MOVX    A,@DPTR
8134DE 14                DEC     A
  889: 				return MOBILE_ERROR;
8134DF 8004              SJMP    ?C0363?MOBILE
  890: 			}
  891: 			break;	
  892: 		default:
8134E1         ?C0167?MOBILE:
  893: 			MsgTxStatus       = MOBILE_BEGIN;
8134E1 E4                CLR     A
8134E2 900D29            MOV     DPTR,#MsgTxStatus
8134E5         
8134E5 F0                MOVX    @DPTR,A
  894: 			return MOBILE_ERROR;
8134E6 7F12              MOV     R7,#012H
8134E8 8005              SJMP    ?C0152?MOBILE
  895: 		}
8134EA         ?C0149?MOBILE:
  896: 		return MsgTxStatus;
8134EA 900D29            MOV     DPTR,#MsgTxStatus
8134ED E0                MOVX    A,@DPTR
8134EE FF                MOV     R7,A
  897: 	}
8134EF         ?C0152?MOBILE:
8134EF A522              ERET    
----- FUNCTION ZhkMobileSmsTxProcess (END) -------


----- FUNCTION ZhkMobileSmsRxProcess (BEGIN) -----
 FILE: 'mobile.c'
  913: 	uchar ZhkMobileSmsRxProcess( void )
  914: 	{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 825


  915: 		// AT+CMGR=n
  916: 		// getline index "+cgml" and 编号n
  917: 		// getline unpack
  918: 		// waitfor ok
  919: 		// AT+CMGD=n
  920: 		// waitfor ok
  921: 		static uchar xdata MsgRxStatus = MOBILE_BEGIN;
  922: 		uchar xdata DataTemp[ 512 ];
  923: 		static uchar xdata MsgNum;
  924: 		struct SHORTMSG xdata SmsTemp;
  925: 		uchar xdata CmdStr[ 128 ];
  926: 		uchar xdata i;
  927: 		uchar xdata temp;
  928: 		uint  xdata len;	
  929: 
  930: 		switch( MsgRxStatus )
8134F1 900EAA            MOV     DPTR,#MsgRxStatus
8134F4 E0                MOVX    A,@DPTR
8134F5 14                DEC     A
8134F6 6068              JZ      ?C0177?MOBILE
8134F8 14                DEC     A
8134F9 7003              JNZ     $ + 5H
8134FB 023604            LJMP    ?C0185?MOBILE
8134FE 14                DEC     A
8134FF 7003              JNZ     $ + 5H
813501 023763            LJMP    ?C0208?MOBILE
813504 14                DEC     A
813505 7003              JNZ     $ + 5H
813507 0237A3            LJMP    ?C0211?MOBILE
81350A 14                DEC     A
81350B 7003              JNZ     $ + 5H
81350D 023744            LJMP    ?C0202?MOBILE
813510 2405              ADD     A,#05H
813512 6003              JZ      $ + 5H
813514 0237D6            LJMP    ?C0173?MOBILE
  931: 		{
  932: 		case MOBILE_BEGIN:
813517         ?C0174?MOBILE:
  933: 			// 已经有新的短信，准备接收			
  934: 			if ( NewCommingSmsSit[ 0 ] == -1 ) 			
813517 901582            MOV     DPTR,#NewCommingSmsSit
81351A E0                MOVX    A,@DPTR
81351B FE                MOV     R6,A
81351C B4FF05            CJNE    A,#0FFH,?C0175?MOBILE
  935: 				return MOBILE_FINISH;
81351F 7F10              MOV     R7,#010H
813521 0237DB            LJMP    ?C0176?MOBILE
813524         ?C0175?MOBILE:
  936: 
  937: 			MsgNum = NewCommingSmsSit[ 0 ];	
813524 900EAB            MOV     DPTR,#MsgNum
813527 EE                MOV     A,R6
813528 F0                MOVX    @DPTR,A
  938: 			Trace("\n ZhkMobileSmsRxProcess SMSIndex = %bu", MsgNum );
  939: 			sprintf( CmdStr , "AT+CMGR=%bd\0" , MsgNum );			// AT+CMGR=n
813529 7B80              MOV     R3,#BYTE2 08016CAH
81352B 7A16              MOV     R2,#HIGH 08016CAH
81352D 79CA              MOV     R1,#LOW 08016CAH
81352F 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
813532 A5128007B6        ECALL   ?C?PSTXDATA
813537 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
81353A EE                MOV     A,R6
81353B F0                MOVX    @DPTR,A
81353C 7B00              MOV     R3,#?C?XDATASEG
81353E 7A1A              MOV     R2,#HIGH CmdStr
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 826


813540 79FB              MOV     R1,#LOW CmdStr
813542 A512800949        ECALL   _sprintf
  940: 			ZhkAtCmd( CmdStr, 0 );
813547 7B00              MOV     R3,#?C?XDATASEG
813549 7A1A              MOV     R2,#HIGH CmdStr
81354B 79FB              MOV     R1,#LOW CmdStr
81354D E4                CLR     A
81354E FD                MOV     R5,A
81354F A512812717        ECALL   _ZhkAtCmd
  941: 			ZhkMobileSecTimer = ZHKMOBILE_SMS_ACKTIMEOUT;
813554 751746            MOV     ZhkMobileSecTimer,#046H
  942: 			MsgRxStatus       = MOBILE_STEP1;			
813557 900EAA            MOV     DPTR,#MsgRxStatus
81355A 7401              MOV     A,#01H
81355C F0                MOVX    @DPTR,A
  943: 			break;
81355D 0237D6            LJMP    ?C0173?MOBILE
  944: 		case MOBILE_STEP1:
813560         ?C0177?MOBILE:
  945: 			// 阻塞状态直接返回
  946: 			ZhkMobileSignalIn();
813560 A51281303F        ECALL   ZhkMobileSignalIn
  947: 			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP1" );
  948: 			if ( ZhkMobileSecTimer == 0 ) 
813565 E517              MOV     A,ZhkMobileSecTimer
813567 7015              JNZ     ?C0178?MOBILE
  949: 			{			
  950: 		//		Trace("\n ZhkMobileSmsRxProcess ZhkMobileSecTimer = 0" );
  951: 				if( SMSReceiveTime >= RETRYTIME )
813569 9010CD            MOV     DPTR,#SMSReceiveTime
81356C E0                MOVX    A,@DPTR
81356D C3                CLR     C
81356E 9405              SUBB    A,#05H
813570 5003              JNC     $ + 5H
813572 0235F4            LJMP    ?C0365?MOBILE
  952: 				{
  953: 					Trace("\n SMSReceiveTime >= RETRYTIME" );
  954: 					ZhkAtCmdBufWr = 0;
813575 E4                CLR     A
813576 901593            MOV     DPTR,#ZhkAtCmdBufWr
813579 F0                MOVX    @DPTR,A
81357A A3                INC     DPTR
81357B F0                MOVX    @DPTR,A
  955: 					MsgRxStatus       = MOBILE_STEP3;
  956: 					break;
81357C 806D              SJMP    ?C0364?MOBILE
  957: 				}
  958: 				else
  959: 				{
  960: 					MsgRxStatus       = MOBILE_BEGIN;				
  961: 					SMSLastErr    	= SMS_ERR_READFAIL;	
  962: 					return MOBILE_ERROR;
  963: 				}
  964: 			}				
81357E         ?C0178?MOBILE:
  965: 			ZhkAtCmdBufWr = 0;
81357E E4                CLR     A
81357F 901593            MOV     DPTR,#ZhkAtCmdBufWr
813582 F0                MOVX    @DPTR,A
813583 A3                INC     DPTR
813584 F0                MOVX    @DPTR,A
  966: 			// 指令正确接收,进入下一步工作	收到 “+CMGR”	
  967: 			if ( strstr( ZhkAtCmdBuffer , "+CMGR" ) != NULL )
813585 7B80              MOV     R3,#BYTE2 08016D7H
813587 7A16              MOV     R2,#HIGH 08016D7H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 827


813589 79D7              MOV     R1,#LOW 08016D7H
81358B 901D04            MOV     DPTR,#?_strstr?BYTE+03H
81358E A5128007B6        ECALL   ?C?PSTXDATA
813593 7B00              MOV     R3,#?C?XDATASEG
813595 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
813597 7981              MOV     R1,#LOW ZhkAtCmdBuffer
813599 A5128018AE        ECALL   _strstr
81359E E4                CLR     A
81359F F583              MOV     DPH,A
8135A1 F582              MOV     DPL,A
8135A3 EB                MOV     A,R3
8135A4 7004              JNZ     ?C0308?MOBILE
8135A6 E9                MOV     A,R1
8135A7 7001              JNZ     ?C0308?MOBILE
8135A9 EA                MOV     A,R2
8135AA         ?C0308?MOBILE:
8135AA 600C              JZ      ?C0181?MOBILE
  968: 			{	
  969: 				Trace( "\n ZhkMobileSmsRxProcess +CMGR" );
  970: 				ZhkMobileSecTimer = ZHKMOBILE_SMS_ACKTIMEOUT;
8135AC 751746            MOV     ZhkMobileSecTimer,#046H
  971: 				MsgRxStatus       = MOBILE_STEP2;				
8135AF 900EAA            MOV     DPTR,#MsgRxStatus
8135B2 7402              MOV     A,#02H
8135B4 F0                MOVX    @DPTR,A
  972: 				break;
8135B5 0237D6            LJMP    ?C0173?MOBILE
  973: 			}
8135B8         ?C0181?MOBILE:
  974: 			// 指令错误接收,返回
  975: 			if ( strstr( ZhkAtCmdBuffer , "ERROR" ) != NULL )
8135B8 7B80              MOV     R3,#BYTE2 08016C4H
8135BA 7A16              MOV     R2,#HIGH 08016C4H
8135BC 79C4              MOV     R1,#LOW 08016C4H
8135BE 901D04            MOV     DPTR,#?_strstr?BYTE+03H
8135C1 A5128007B6        ECALL   ?C?PSTXDATA
8135C6 7B00              MOV     R3,#?C?XDATASEG
8135C8 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
8135CA 7981              MOV     R1,#LOW ZhkAtCmdBuffer
8135CC A5128018AE        ECALL   _strstr
8135D1 E4                CLR     A
8135D2 F583              MOV     DPH,A
8135D4 F582              MOV     DPL,A
8135D6 EB                MOV     A,R3
8135D7 7004              JNZ     ?C0309?MOBILE
8135D9 E9                MOV     A,R1
8135DA 7001              JNZ     ?C0309?MOBILE
8135DC EA                MOV     A,R2
8135DD         ?C0309?MOBILE:
8135DD 7003              JNZ     $ + 5H
8135DF 0237D6            LJMP    ?C0173?MOBILE
  976: 			{
  977: 				Trace( "\n ZhkMobileSmsRxProcess ERROR" );
  978: 			
  979: 				if( SMSReceiveTime >= RETRYTIME )
8135E2 9010CD            MOV     DPTR,#SMSReceiveTime
8135E5 E0                MOVX    A,@DPTR
8135E6 C3                CLR     C
8135E7 9405              SUBB    A,#05H
8135E9 4009              JC      ?C0183?MOBILE
  980: 				{
  981: 					MsgRxStatus       = MOBILE_STEP3;
8135EB         
8135EB 900EAA            MOV     DPTR,#MsgRxStatus
8135EE 7403              MOV     A,#03H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 828


8135F0 F0                MOVX    @DPTR,A
  982: 					break;
8135F1 0237D6            LJMP    ?C0173?MOBILE
  983: 				}
8135F4         ?C0183?MOBILE:
  984: 				else
  985: 				{
  986: 					MsgRxStatus       = MOBILE_BEGIN;				
8135F4         
8135F4 E4                CLR     A
8135F5 900EAA            MOV     DPTR,#MsgRxStatus
8135F8 F0                MOVX    @DPTR,A
  987: 					SMSLastErr    	= SMS_ERR_READFAIL;	
8135F9 900EB6            MOV     DPTR,#SMSLastErr
8135FC 7405              MOV     A,#05H
8135FE F0                MOVX    @DPTR,A
  988: 					return MOBILE_ERROR;
8135FF 7F12              MOV     R7,#012H
813601 0237DB            LJMP    ?C0176?MOBILE
  989: 				}
  990: 			}		
  991: 			break;
  992: 		case MOBILE_STEP2:		
813604         ?C0185?MOBILE:
  993: 			// 接收到短信,解析处理,并且进入下一步工作
  994: //			ZhkMobileSignalIn();
  995: 			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP2" );
  996: 			if ( ZhkAtCmdBufWr == 0 ) 
813604 901593            MOV     DPTR,#ZhkAtCmdBufWr
813607 E0                MOVX    A,@DPTR
813608 7002              JNZ     ?C0310?MOBILE
81360A A3                INC     DPTR
81360B E0                MOVX    A,@DPTR
81360C         ?C0310?MOBILE:
81360C 700A              JNZ     ?C0186?MOBILE
  997: 			{
  998: 				// 操作超时
  999: 				if ( ZhkMobileSecTimer == 0 ) 
81360E E517              MOV     A,ZhkMobileSecTimer
813610 6003              JZ      $ + 5H
813612 0237D6            LJMP    ?C0173?MOBILE
 1000: 				{
 1001: 					Trace( "\n ZhkMobileSmsRxProcess TIMEOUT1" );
 1002: 					MsgRxStatus       = MOBILE_BEGIN;					
 1003: 					SMSLastErr  = SMS_ERR_TIMEOUT;
 1004: 					ZhkGprsStatus     = GPRS_STATUS_BREAK;
 1005: 					return MOBILE_TIMEOUT;
813615 0237C2            LJMP    ?C0366?MOBILE
 1006: 				}
 1007: 				break;
 1008: 			}		
813618         ?C0186?MOBILE:
 1009: 			// 接收到短信,解析处理,并且进入下一步工作	
 1010: 			memset( DataTemp, 0, sizeof( DataTemp ) );			
813618 7E02              MOV     R6,#02H
81361A 7F00              MOV     R7,#00H
81361C 7D00              MOV     R5,#00H
81361E 7B00              MOV     R3,#?C?XDATASEG
813620 7A18              MOV     R2,#HIGH DataTemp
813622 7949              MOV     R1,#LOW DataTemp
813624 A5128008A6        ECALL   ?C?MEMSET
 1011: 			memset( &SmsTemp, 0, sizeof( struct SHORTMSG ) );			
813629 7E00              MOV     R6,#00H
81362B 7FB2              MOV     R7,#0B2H
81362D 7D00              MOV     R5,#00H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 829


81362F 7B00              MOV     R3,#?C?XDATASEG
813631 7A1A              MOV     R2,#HIGH SmsTemp
813633 7949              MOV     R1,#LOW SmsTemp
813635 A5128008A6        ECALL   ?C?MEMSET
 1012: 			memcpy( DataTemp , ZhkAtCmdBuffer , ZhkAtCmdBufWr );
81363A 901593            MOV     DPTR,#ZhkAtCmdBufWr
81363D E0                MOVX    A,@DPTR
81363E FE                MOV     R6,A
81363F A3                INC     DPTR
813640 E0                MOVX    A,@DPTR
813641 FF                MOV     R7,A
813642 7849              MOV     R0,#LOW DataTemp
813644 7C18              MOV     R4,#HIGH DataTemp
813646 7D00              MOV     R5,#?C?XDATASEG
813648 7B00              MOV     R3,#?C?XDATASEG
81364A 7A11              MOV     R2,#HIGH ZhkAtCmdBuffer
81364C 7981              MOV     R1,#LOW ZhkAtCmdBuffer
81364E A51280052D        ECALL   ?C?COPY
 1013: 			len = ZhkMobileSmsUnpack( &SmsTemp , DataTemp , ZhkAtCmdBufWr );
813653 7E1A              MOV     R6,#HIGH SmsTemp
813655 7F49              MOV     R7,#LOW SmsTemp
813657 7C18              MOV     R4,#HIGH DataTemp
813659 7D49              MOV     R5,#LOW DataTemp
81365B 901593            MOV     DPTR,#ZhkAtCmdBufWr
81365E E0                MOVX    A,@DPTR
81365F FA                MOV     R2,A
813660 A3                INC     DPTR
813661 E0                MOVX    A,@DPTR
813662 FB                MOV     R3,A
813663 A512814205        ECALL   _ZhkMobileSmsUnpack
;---- Variable 'len' assigned to Register 'R6/R7' ----
 1014: 			
 1015: 			Trace( "\n SmsTemp.len = %u", SmsTemp.len );
 1016: 			Trace( "\n SmsTemp.msg = %s", SmsTemp.msg );
 1017: 			Trace( "\n SmsTemp.phone =" );
 1018: 			for( i = 0; i < 8; i++ )
813668 E4                CLR     A
813669 901B7B            MOV     DPTR,#i
81366C F0                MOVX    @DPTR,A
81366D         ?C0188?MOBILE:
81366D 901B7B            MOV     DPTR,#i
813670 E0                MOVX    A,@DPTR
813671 04                INC     A
813672 F0                MOVX    @DPTR,A
813673 E0                MOVX    A,@DPTR
813674 B408F6            CJNE    A,#08H,?C0188?MOBILE
813677         ?C0189?MOBILE:
 1019: 				Trace( "%bx", SmsTemp.phone[i] );
 1020: 			Trace( "\n" );
 1021: 			ZhkAtCmdBufWr = 0;
813677 E4                CLR     A
813678 901593            MOV     DPTR,#ZhkAtCmdBufWr
81367B F0                MOVX    @DPTR,A
81367C A3                INC     DPTR
81367D F0                MOVX    @DPTR,A
 1022: 			if ( len )
81367E EF                MOV     A,R7
81367F 4E                ORL     A,R6
813680 7003              JNZ     $ + 5H
813682 02373A            LJMP    ?C0191?MOBILE
 1023: 			{	
 1024: 				i = 0;
813685 E4                CLR     A
813686 901B7B            MOV     DPTR,#i
813689 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 830


 1025: 				for( i = 0; i < 15; i ++ )
81368A F0                MOVX    @DPTR,A
81368B         ?C0192?MOBILE:
81368B 901B7B            MOV     DPTR,#i
81368E E0                MOVX    A,@DPTR
81368F FF                MOV     R7,A
813690 C3                CLR     C
813691 940F              SUBB    A,#0FH
813693 5030              JNC     ?C0193?MOBILE
 1026: 				{					
 1027: 					if( SystemParameter.GSMNO[i] == 0xff )
813695 7434              MOV     A,#LOW SystemParameter+016H
813697 2F                ADD     A,R7
813698 F582              MOV     DPL,A
81369A E4                CLR     A
81369B 3404              ADDC    A,#HIGH SystemParameter+016H
81369D F583              MOV     DPH,A
81369F E0                MOVX    A,@DPTR
8136A0 FF                MOV     R7,A
8136A1 B4FF08            CJNE    A,#0FFH,?C0195?MOBILE
 1028: 					{					
 1029: 						i = 88;
8136A4 901B7B            MOV     DPTR,#i
8136A7 7458              MOV     A,#058H
8136A9 F0                MOVX    @DPTR,A
 1030: 						break;
8136AA 8019              SJMP    ?C0193?MOBILE
 1031: 					}
8136AC         ?C0195?MOBILE:
 1032: 					else
 1033: 					{
 1034: 						if( SystemParameter.GSMNO[i] != SmsTemp.phone[i] )							
8136AC 901B7B            MOV     DPTR,#i
8136AF E0                MOVX    A,@DPTR
8136B0 2449              ADD     A,#LOW SmsTemp
8136B2 F582              MOV     DPL,A
8136B4 E4                CLR     A
8136B5 341A              ADDC    A,#HIGH SmsTemp
8136B7 F583              MOV     DPH,A
8136B9 E0                MOVX    A,@DPTR
8136BA B50708            CJNE    A,AR7,?C0193?MOBILE
 1035: 							break;
 1036: 					}
 1037: 				}
8136BD         ?C0194?MOBILE:
8136BD 901B7B            MOV     DPTR,#i
8136C0 E0                MOVX    A,@DPTR
8136C1 04                INC     A
8136C2 F0                MOVX    @DPTR,A
8136C3 80C6              SJMP    ?C0192?MOBILE
8136C5         ?C0193?MOBILE:
 1038: 				if( i == 88 )
8136C5 901B7B            MOV     DPTR,#i
8136C8 E0                MOVX    A,@DPTR
8136C9 6458              XRL     A,#058H
8136CB 706D              JNZ     ?C0191?MOBILE
 1039: 				{
 1040: 					//认可的短信,保存,不认可的自动丢弃
 1041: 					for( i = 0; i < strlen( SmsTemp.msg ); i++ )
8136CD F0                MOVX    @DPTR,A
8136CE         ?C0199?MOBILE:
8136CE 7B00              MOV     R3,#?C?XDATASEG
8136D0 7A1A              MOV     R2,#HIGH SmsTemp+012H
8136D2 795B              MOV     R1,#LOW SmsTemp+012H
8136D4 A512800010        ECALL   _strlen
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 831


8136D9 901B7B            MOV     DPTR,#i
8136DC E0                MOVX    A,@DPTR
8136DD FD                MOV     R5,A
8136DE C3                CLR     C
8136DF 9F                SUBB    A,R7
8136E0 EE                MOV     A,R6
8136E1 6480              XRL     A,#080H
8136E3 F8                MOV     R0,A
8136E4 7480              MOV     A,#080H
8136E6 98                SUBB    A,R0
8136E7 5028              JNC     ?C0200?MOBILE
 1042: 						SmsTemp.msg[i] = toupper(SmsTemp.msg[i]);
8136E9 745B              MOV     A,#LOW SmsTemp+012H
8136EB 2D                ADD     A,R5
8136EC F582              MOV     DPL,A
8136EE E4                CLR     A
8136EF 341A              ADDC    A,#HIGH SmsTemp+012H
8136F1 F583              MOV     DPH,A
8136F3 E0                MOVX    A,@DPTR
8136F4 FF                MOV     R7,A
8136F5 A51280196C        ECALL   _toupper
8136FA 901B7B            MOV     DPTR,#i
8136FD E0                MOVX    A,@DPTR
8136FE 245B              ADD     A,#LOW SmsTemp+012H
813700 F582              MOV     DPL,A
813702 E4                CLR     A
813703 341A              ADDC    A,#HIGH SmsTemp+012H
813705 F583              MOV     DPH,A
813707 EF                MOV     A,R7
813708 F0                MOVX    @DPTR,A
813709 901B7B            MOV     DPTR,#i
81370C E0                MOVX    A,@DPTR
81370D 04                INC     A
81370E F0                MOVX    @DPTR,A
81370F 80BD              SJMP    ?C0199?MOBILE
813711         ?C0200?MOBILE:
 1043: 					memcpy( &ZhkSmsRxBuf[ZhkSmsRxNum], &SmsTemp , sizeof( struct SHORTMSG ) );				
813711 901581            MOV     DPTR,#ZhkSmsRxNum
813714 E0                MOVX    A,@DPTR
813715 75F0B2            MOV     B,#0B2H
813718 A4                MUL     AB
813719 24B7              ADD     A,#LOW ZhkSmsRxBuf
81371B F9                MOV     R1,A
81371C 740E              MOV     A,#HIGH ZhkSmsRxBuf
81371E 35F0              ADDC    A,B
813720 A801              MOV     R0,AR1
813722 FC                MOV     R4,A
813723 7D00              MOV     R5,#?C?XDATASEG
813725 7B00              MOV     R3,#?C?XDATASEG
813727 7A1A              MOV     R2,#HIGH SmsTemp
813729 7949              MOV     R1,#LOW SmsTemp
81372B 7E00              MOV     R6,#00H
81372D 7FB2              MOV     R7,#0B2H
81372F A51280052D        ECALL   ?C?COPY
 1044: 					ZhkSmsRxNum ++ ;					
813734 901581            MOV     DPTR,#ZhkSmsRxNum
813737 E0                MOVX    A,@DPTR
813738 04                INC     A
813739 F0                MOVX    @DPTR,A
 1045: 				}
 1046: 			}			
81373A         ?C0191?MOBILE:
 1047: 			MsgRxStatus       = MOBILE_STEP5;
81373A 900EAA            MOV     DPTR,#MsgRxStatus
81373D 7405              MOV     A,#05H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 832


81373F F0                MOVX    @DPTR,A
 1048: 			return 	MsgRxStatus;
813740 FF                MOV     R7,A
813741 0237DB            LJMP    ?C0176?MOBILE
 1049: 			break;
 1050: 		case MOBILE_STEP5:
813744         ?C0202?MOBILE:
 1051: 			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP5" );
 1052: 			temp = ZhkAtCmdGetErr();
813744 A512812E80        ECALL   ZhkAtCmdGetErr
813749 901B7C            MOV     DPTR,#temp
81374C EF                MOV     A,R7
81374D F0                MOVX    @DPTR,A
 1053: 			switch( temp )
81374E 24FE              ADD     A,#0FEH
813750 6007              JZ      ?C0206?MOBILE
813752 14                DEC     A
813753 6004              JZ      ?C0206?MOBILE
813755 2403              ADD     A,#03H
813757 7006              JNZ     ?C0203?MOBILE
 1054: 			{
 1055: 				case ATCMD_ERR_NULL:				
 1056: 				case ATCMD_ERR_ERR:						
 1057: 				case ATCMD_ERR_TIMEOUT://2
813759         ?C0206?MOBILE:
 1058: 					MsgRxStatus       = MOBILE_STEP3;					
813759 900EAA            MOV     DPTR,#MsgRxStatus
81375C 7403              MOV     A,#03H
81375E F0                MOVX    @DPTR,A
 1059: 					break;
 1060: 				case ATCMD_ERR_BLOCK://1
 1061: 					// 阻塞状态直接返回
 1062: 					break;						
 1063: 			}
81375F         ?C0203?MOBILE:
 1064: 			return 	MOBILE_STEP5;
81375F 7F05              MOV     R7,#05H
813761 8078              SJMP    ?C0176?MOBILE
 1065: 			break;
 1066: 		case MOBILE_STEP3:					// 等待OK
813763         ?C0208?MOBILE:
 1067: 			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP3" );
 1068: 			//删除短讯
 1069: 			if( MsgNum > 0 )
813763 900EAB            MOV     DPTR,#MsgNum
813766 E0                MOVX    A,@DPTR
813767 FF                MOV     R7,A
813768 D3                SETB    C
813769 9400              SUBB    A,#00H
81376B 404B              JC      ?C0367?MOBILE
 1070: 			{
 1071: 				sprintf( CmdStr , "AT+CMGD=%d" , (int)MsgNum );
81376D 7B80              MOV     R3,#BYTE2 08016DDH
81376F 7A16              MOV     R2,#HIGH 08016DDH
813771 79DD              MOV     R1,#LOW 08016DDH
813773 901B80            MOV     DPTR,#?_sprintf?BYTE+03H
813776 A5128007B6        ECALL   ?C?PSTXDATA
81377B 901B83            MOV     DPTR,#?_sprintf?BYTE+06H
81377E E4                CLR     A
81377F F0                MOVX    @DPTR,A
813780 A3                INC     DPTR
813781 EF                MOV     A,R7
813782 F0                MOVX    @DPTR,A
813783 7B00              MOV     R3,#?C?XDATASEG
813785 7A1A              MOV     R2,#HIGH CmdStr
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 833


813787 79FB              MOV     R1,#LOW CmdStr
813789 A512800949        ECALL   _sprintf
 1072: 				ZhkAtCmd( CmdStr, 0 );		
81378E 7B00              MOV     R3,#?C?XDATASEG
813790 7A1A              MOV     R2,#HIGH CmdStr
813792 79FB              MOV     R1,#LOW CmdStr
813794 E4                CLR     A
813795 FD                MOV     R5,A
813796 A512812717        ECALL   _ZhkAtCmd
 1073: 				MsgRxStatus       = MOBILE_STEP4;
81379B 900EAA            MOV     DPTR,#MsgRxStatus
81379E 7404              MOV     A,#04H
8137A0 F0                MOVX    @DPTR,A
 1074: 				break;
8137A1 8033              SJMP    ?C0173?MOBILE
 1075: 			}
 1076: 			else
 1077: 			{
 1078: 				MsgRxStatus        = MOBILE_BEGIN;
 1079: 				return MOBILE_FINISH;
 1080: 			}
 1081: 		case MOBILE_STEP4:
8137A3         ?C0211?MOBILE:
 1082: //			Trace( "\n ZhkMobileSmsRxProcess MOBILE_STEP4" );	
 1083: 			temp = ZhkAtCmdGetErr();		
8137A3 A512812E80        ECALL   ZhkAtCmdGetErr
8137A8 901B7C            MOV     DPTR,#temp
8137AB EF                MOV     A,R7
8137AC F0                MOVX    @DPTR,A
 1084: 			switch( temp )
8137AD 24FE              ADD     A,#0FEH
8137AF 6010              JZ      ?C0215?MOBILE
8137B1 14                DEC     A
8137B2 6004              JZ      ?C0214?MOBILE
8137B4 2403              ADD     A,#03H
8137B6 701E              JNZ     ?C0173?MOBILE
 1085: 			{
 1086: 				case ATCMD_ERR_NULL:				
 1087: 				case ATCMD_ERR_ERR:					
8137B8         ?C0214?MOBILE:
 1088: 					MsgRxStatus        = MOBILE_BEGIN;
8137B8         
8137B8 E4                CLR     A
8137B9 900EAA            MOV     DPTR,#MsgRxStatus
8137BC F0                MOVX    @DPTR,A
 1089: 					return MOBILE_FINISH;
8137BD 7F10              MOV     R7,#010H
8137BF 801A              SJMP    ?C0176?MOBILE
 1090: 					break;
 1091: 				case ATCMD_ERR_TIMEOUT://2
8137C1         ?C0215?MOBILE:
 1092: 					Trace( "\n ZhkMobileSmsRxProcess TIMEOUT2" );
 1093: 					MsgRxStatus       = MOBILE_BEGIN;					
8137C1 E4                CLR     A
8137C2         
8137C2 900EAA            MOV     DPTR,#MsgRxStatus
8137C5 F0                MOVX    @DPTR,A
 1094: 					SMSLastErr  = SMS_ERR_TIMEOUT;
8137C6 900EB6            MOV     DPTR,#SMSLastErr
8137C9 7403              MOV     A,#03H
8137CB F0                MOVX    @DPTR,A
 1095: 					ZhkGprsStatus     = GPRS_STATUS_BREAK;
8137CC 901180            MOV     DPTR,#ZhkGprsStatus
8137CF 7401              MOV     A,#01H
8137D1 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 834


 1096: 					return MOBILE_TIMEOUT;
8137D2 7F11              MOV     R7,#011H
8137D4 8005              SJMP    ?C0176?MOBILE
 1097: 					break;
 1098: 				case ATCMD_ERR_BLOCK://1
 1099: 					// 阻塞状态直接返回
 1100: 					break;						
 1101: 			}		
 1102: 		}
8137D6         ?C0173?MOBILE:
 1103: 		return 	MsgRxStatus;
8137D6 900EAA            MOV     DPTR,#MsgRxStatus
8137D9 E0                MOVX    A,@DPTR
8137DA FF                MOV     R7,A
 1104: 	}
8137DB         ?C0176?MOBILE:
8137DB A522              ERET    
----- FUNCTION ZhkMobileSmsRxProcess (END) -------


----- FUNCTION ZhkSerialIsRxBufNull (BEGIN) -----
 FILE: 'serial.c'
  136: uchar ZhkSerialIsRxBufNull( void )
  137: {
  138: 	if ( ZhkSerialRxBufRd - ZhkSerialRxBufWr == 0 ) 
  139: 		return 1;
8137DD 902A4F            MOV     DPTR,#ZhkSerialRxBufWr
8137E0 E0                MOVX    A,@DPTR
8137E1 FE                MOV     R6,A
8137E2 A3                INC     DPTR
8137E3 E0                MOVX    A,@DPTR
8137E4 FF                MOV     R7,A
8137E5 C3                CLR     C
8137E6 902A4C            MOV     DPTR,#ZhkSerialRxBufRd+01H
8137E9 E0                MOVX    A,@DPTR
8137EA 9F                SUBB    A,R7
8137EB FF                MOV     R7,A
8137EC 902A4B            MOV     DPTR,#ZhkSerialRxBufRd
8137EF E0                MOVX    A,@DPTR
8137F0 9E                SUBB    A,R6
8137F1 4F                ORL     A,R7
8137F2 7004              JNZ     ?C0019?SERIAL
  140: 	_nop_();
8137F4 7F01              MOV     R7,#01H
8137F6 8003              SJMP    ?C0020?SERIAL
8137F8         ?C0019?SERIAL:
  141: 	return 0;
8137F8 00                NOP     
  142: }
8137F9 7F00              MOV     R7,#00H
  143: uchar ZhkSerialIsTxBufNull( void )
8137FB         ?C0020?SERIAL:
8137FB A522              ERET    
----- FUNCTION ZhkSerialIsRxBufNull (END) -------


----- FUNCTION ZhkSerialIsTxBufNull (BEGIN) -----
 FILE: 'serial.c'
  143: uchar ZhkSerialIsTxBufNull( void )
  144: {
  145: 	if  ( ZhkSerialTxBufRd - ZhkSerialTxBufWr == 0 ) 
  146: 		return 1;
8137FD 902A51            MOV     DPTR,#ZhkSerialTxBufWr
813800 E0                MOVX    A,@DPTR
813801 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 835


813802 A3                INC     DPTR
813803 E0                MOVX    A,@DPTR
813804 FF                MOV     R7,A
813805 C3                CLR     C
813806 902A4E            MOV     DPTR,#ZhkSerialTxBufRd+01H
813809 E0                MOVX    A,@DPTR
81380A 9F                SUBB    A,R7
81380B FF                MOV     R7,A
81380C 902A4D            MOV     DPTR,#ZhkSerialTxBufRd
81380F E0                MOVX    A,@DPTR
813810 9E                SUBB    A,R6
813811 4F                ORL     A,R7
813812 7F00              MOV     R7,#00H
813814 7002              JNZ     ?C0021?SERIAL
  147: 	return 0;
813816 7F01              MOV     R7,#01H
813818         ?C0021?SERIAL:
  148: }
  149: 
813818         ?C0022?SERIAL:
813818 A522              ERET    
----- FUNCTION ZhkSerialIsTxBufNull (END) -------


----- FUNCTION _ZhkBusTxMsg (BEGIN) -----
 FILE: 'procotol.c'
   63: unsigned char ZhkBusTxMsg( struct COMMTASK xdata* Task )
   64: {
;---- Variable 'Task' assigned to Register 'R6/R7' ----
   65: 	unsigned char  data i;
   66: 	unsigned char  data len;
   67: 	unsigned char  data sum;
   68: 	unsigned char xdata DataString[ 64 ];
   69: 	
   70: //	Trace( "\n ZhkBusTxMsg" );
   71: 	len = Task->ParamLen + 6;
81381A EF                MOV     A,R7
81381B 2405              ADD     A,#05H
81381D F582              MOV     DPL,A
81381F E4                CLR     A
813820 3E                ADDC    A,R6
813821 F583              MOV     DPH,A
813823 E0                MOVX    A,@DPTR
813824 2406              ADD     A,#06H
813826 F52F              MOV     len,A
   72: 	DataString[ 0 ] = CMDHEAD;
813828 90184B            MOV     DPTR,#DataString
81382B 74ED              MOV     A,#0EDH
81382D F0                MOVX    @DPTR,A
   73: 	DataString[ 1 ] = len;
81382E A3                INC     DPTR
81382F E52F              MOV     A,len
813831 F0                MOVX    @DPTR,A
   74: 	DataString[ 2 ] = Task->Sn;
813832 8F82              MOV     DPL,R7
813834 8E83              MOV     DPH,R6
813836 A3                INC     DPTR
813837 A3                INC     DPTR
813838 A3                INC     DPTR
813839 E0                MOVX    A,@DPTR
81383A 90184D            MOV     DPTR,#DataString+02H
81383D F0                MOVX    @DPTR,A
   75: //	Trace( "\n Task->Sn = %bu", Task->Sn );
   76: 	DataString[ 3 ] = Task->Cmd;
81383E 8F82              MOV     DPL,R7
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 836


813840 8E83              MOV     DPH,R6
813842 A3                INC     DPTR
813843 A3                INC     DPTR
813844 E0                MOVX    A,@DPTR
813845 90184E            MOV     DPTR,#DataString+03H
813848 F0                MOVX    @DPTR,A
   77: 	DataString[ 4 ] = Task->Id;
813849 8F82              MOV     DPL,R7
81384B 8E83              MOV     DPH,R6
81384D A3                INC     DPTR
81384E E0                MOVX    A,@DPTR
81384F 90184F            MOV     DPTR,#DataString+04H
813852 F0                MOVX    @DPTR,A
   78: 	for( i = 0 ; i <= len - 6 ; i ++ )
813853 E4                CLR     A
813854 F52E              MOV     i,A
813856         ?C0005?PROCOTOL:
813856 E52F              MOV     A,len
813858 24FA              ADD     A,#0FAH
81385A FD                MOV     R5,A
81385B E52E              MOV     A,i
81385D D3                SETB    C
81385E 9D                SUBB    A,R5
81385F 5027              JNC     ?C0006?PROCOTOL
   79: 		DataString[ 5 + i ] = Task->Param[ i ];	
813861 EF                MOV     A,R7
813862 2406              ADD     A,#06H
813864 F582              MOV     DPL,A
813866 E4                CLR     A
813867 3E                ADDC    A,R6
813868 F583              MOV     DPH,A
81386A E582              MOV     A,DPL
81386C 252E              ADD     A,i
81386E F582              MOV     DPL,A
813870 E4                CLR     A
813871 3583              ADDC    A,DPH
813873 F583              MOV     DPH,A
813875 E0                MOVX    A,@DPTR
813876 FD                MOV     R5,A
813877 7450              MOV     A,#LOW DataString+05H
813879 252E              ADD     A,i
81387B F582              MOV     DPL,A
81387D E4                CLR     A
81387E 3418              ADDC    A,#HIGH DataString+05H
813880 F583              MOV     DPH,A
813882 ED                MOV     A,R5
813883 F0                MOVX    @DPTR,A
813884 052E              INC     i
813886 80CE              SJMP    ?C0005?PROCOTOL
813888         ?C0006?PROCOTOL:
   80: 	sum = 0;
813888 E4                CLR     A
813889 F530              MOV     sum,A
   81: 	for( i = 0 ; i < DataString[ 1 ] - 1 ; i ++ )
81388B F52E              MOV     i,A
81388D         ?C0008?PROCOTOL:
81388D 90184C            MOV     DPTR,#DataString+01H
813890 E0                MOVX    A,@DPTR
813891 14                DEC     A
813892 FF                MOV     R7,A
813893 E52E              MOV     A,i
813895 C3                CLR     C
813896 9F                SUBB    A,R7
813897 5012              JNC     ?C0009?PROCOTOL
   82: 	{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 837


   83: 		sum ^= DataString[ i ];
813899 744B              MOV     A,#LOW DataString
81389B 252E              ADD     A,i
81389D F582              MOV     DPL,A
81389F E4                CLR     A
8138A0 3418              ADDC    A,#HIGH DataString
8138A2 F583              MOV     DPH,A
8138A4 E0                MOVX    A,@DPTR
8138A5 6230              XRL     sum,A
   84: 	}
8138A7 052E              INC     i
8138A9 80E2              SJMP    ?C0008?PROCOTOL
8138AB         ?C0009?PROCOTOL:
   85: 	DataString[ len - 1 ] = sum;	
8138AB 744A              MOV     A,#LOW DataString-01H
8138AD 252F              ADD     A,len
8138AF F582              MOV     DPL,A
8138B1 E4                CLR     A
8138B2 3418              ADDC    A,#HIGH DataString-01H
8138B4 F583              MOV     DPH,A
8138B6 E530              MOV     A,sum
8138B8 F0                MOVX    @DPTR,A
   86: 	for( i = 0 ; i < len ; i ++ )		
8138B9 E4                CLR     A
8138BA F52E              MOV     i,A
8138BC         ?C0011?PROCOTOL:
8138BC E52E              MOV     A,i
8138BE C3                CLR     C
8138BF 952F              SUBB    A,len
8138C1 5016              JNC     ?C0012?PROCOTOL
   87: 		ZhkSerial1PutCh( DataString[ i ] );			
8138C3 744B              MOV     A,#LOW DataString
8138C5 252E              ADD     A,i
8138C7 F582              MOV     DPL,A
8138C9 E4                CLR     A
8138CA 3418              ADDC    A,#HIGH DataString
8138CC F583              MOV     DPH,A
8138CE E0                MOVX    A,@DPTR
8138CF FF                MOV     R7,A
8138D0 A51280FE05        ECALL   _ZhkSerial1PutCh
8138D5 052E              INC     i
8138D7 80E3              SJMP    ?C0011?PROCOTOL
8138D9         ?C0012?PROCOTOL:
   88: 	
   89: #ifdef _DEBUG_TRACE
   90: 	if( Task->Id == ID_CHANNEL )//ID_HOPPER2
   91: 	{
   92: 		Trace( "\n Bus Snd str ");	
   93: 		for( i = 0 ; i < len ; i ++ )
   94: 			Trace( " %02bx,",DataString[ i ] );
   95: 		Trace( "\n" );
   96: 	}
   97: #endif	
   98: 
   99: 	return 1;
8138D9 7F01              MOV     R7,#01H
  100: }
8138DB         ?C0014?PROCOTOL:
8138DB A522              ERET    
----- FUNCTION _ZhkBusTxMsg (END) -------


----- FUNCTION _ZhkChkAddr (BEGIN) -----
 FILE: 'procotol.c'
  536: unsigned char ZhkChkAddr( unsigned char Addr )
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 838


  537: {
;---- Variable 'Addr' assigned to Register 'R7' ----
  538: 	switch( Addr )
  539: 	{
8138DD EF                MOV     A,R7
8138DE A5128007CD        ECALL   ?C?CCASEX
8138E3 3923              DW      ?C0096?PROCOTOL
8138E5 00                DB      00H
8138E6 3923              DW      ?C0096?PROCOTOL
8138E8 01                DB      01H
8138E9 3923              DW      ?C0096?PROCOTOL
8138EB 02                DB      02H
8138EC 3923              DW      ?C0096?PROCOTOL
8138EE 03                DB      03H
8138EF 3923              DW      ?C0096?PROCOTOL
8138F1 04                DB      04H
8138F2 3923              DW      ?C0096?PROCOTOL
8138F4 05                DB      05H
8138F5 3923              DW      ?C0096?PROCOTOL
8138F7 06                DB      06H
8138F8 3923              DW      ?C0096?PROCOTOL
8138FA 07                DB      07H
8138FB 3927              DW      ?C0098?PROCOTOL
8138FD 09                DB      09H
8138FE 392B              DW      ?C0099?PROCOTOL
813900 0A                DB      0AH
813901 392F              DW      ?C0100?PROCOTOL
813903 0B                DB      0BH
813904 3933              DW      ?C0101?PROCOTOL
813906 0C                DB      0CH
813907 3937              DW      ?C0102?PROCOTOL
813909 0D                DB      0DH
81390A 393B              DW      ?C0106?PROCOTOL
81390C 10                DB      010H
81390D 393B              DW      ?C0106?PROCOTOL
81390F 11                DB      011H
813910 393B              DW      ?C0106?PROCOTOL
813912 12                DB      012H
813913 393B              DW      ?C0106?PROCOTOL
813915 13                DB      013H
813916 3947              DW      ?C0109?PROCOTOL
813918 15                DB      015H
813919 393F              DW      ?C0107?PROCOTOL
81391B 7E                DB      07EH
81391C 3943              DW      ?C0108?PROCOTOL
81391E 7F                DB      07FH
81391F 0000              DW      00H
813921 394B              DW      ?C0111?PROCOTOL
  540: 	case ID_HOPPER1:
  541: 	case ID_HOPPER2:
  542: 	case ID_HOPPER3:
  543: 	case ID_HOPPER4:
  544: 	case ID_HOPPER5:
  545: 	case ID_HOPPER6:
  546: 	case ID_HOPPER7:
  547: 	case ID_HOPPER8:
  548: 		return EQUIP_HOPPER;
813923         ?C0096?PROCOTOL:
  549: //	case ID_HUB:
813923 7F08              MOV     R7,#08H
813925 8026              SJMP    ?C0097?PROCOTOL
  550: //		return EQUIP_HUB;
  551: 	case ID_LCD:
813927         ?C0098?PROCOTOL:
  552: 		return EQUIP_LCD;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 839


813927 7F07              MOV     R7,#07H
813929 8022              SJMP    ?C0097?PROCOTOL
  553: 	case ID_POWER:
81392B         ?C0099?PROCOTOL:
  554: 		return EQUIP_POWER;
81392B 7F04              MOV     R7,#04H
81392D 801E              SJMP    ?C0097?PROCOTOL
  555: 	case ID_MODE:
81392F         ?C0100?PROCOTOL:
  556: 		return EQUIP_MODE;
81392F 7F05              MOV     R7,#05H
813931 801A              SJMP    ?C0097?PROCOTOL
  557: 	case ID_PRN:
813933         ?C0101?PROCOTOL:
  558: 		return EQUIP_PRN;
813933 7F06              MOV     R7,#06H
813935 8016              SJMP    ?C0097?PROCOTOL
  559: 	case ID_CASHER:
813937         ?C0102?PROCOTOL:
  560: 		return EQUIP_CASHER;
813937 7F02              MOV     R7,#02H
813939 8012              SJMP    ?C0097?PROCOTOL
  561: 	case ID_COINER1:
  562: 	case ID_COINER2:
  563: 	case ID_COINER3:
  564: 	case ID_COINER4:
81393B         ?C0106?PROCOTOL:
  565: 		return EQUIP_COINER;
81393B 7F03              MOV     R7,#03H
81393D 800E              SJMP    ?C0097?PROCOTOL
  566: 	case ID_MESSAGER:
81393F         ?C0107?PROCOTOL:
  567: 		return EQUIP_MESSAGER;
81393F 7F0B              MOV     R7,#0BH
813941 800A              SJMP    ?C0097?PROCOTOL
  568: 	case ID_SERVER:
813943         ?C0108?PROCOTOL:
  569: 		return EQUIP_SEVER;
813943 7F0A              MOV     R7,#0AH
813945 8006              SJMP    ?C0097?PROCOTOL
  570: 	case ID_CHANNEL:
813947         ?C0109?PROCOTOL:
  571: 		return EQUIP_CHANNEL;
813947 7F0D              MOV     R7,#0DH
813949 8002              SJMP    ?C0097?PROCOTOL
  572: //	case ID_LEDSCR:
  573: //		return EQUIP_LEDSCR;
  574: 	case ID_NULL:
  575: 	default:
81394B         ?C0111?PROCOTOL:
  576: 		return EQUIP_NULL;
81394B 7F00              MOV     R7,#00H
  577: 	}
  578: }
81394D         ?C0097?PROCOTOL:
81394D A522              ERET    
----- FUNCTION _ZhkChkAddr (END) -------


----- FUNCTION DoCommunication (BEGIN) -----
 FILE: 'CommModule.c'
   19: void DoCommunication()
   20: {		
   21: 	switch( g_byCommRunningStatus )
   22: 	{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 840


81394F E54F              MOV     A,g_byCommRunningStatus
813951 14                DEC     A
813952 6011              JZ      ?C0003?COMMMODULE
813954 24F0              ADD     A,#0F0H
813956 6016              JZ      ?C0004?COMMMODULE
813958 2411              ADD     A,#011H
81395A 7019              JNZ     ?C0001?COMMMODULE
   23: 	case STA_COMM_MODULE_INIT:
   24: 		g_byCommRunningStatus = staCommModuleInit();
81395C         ?C0002?COMMMODULE:
   25: 		break;
81395C A512813B85        ECALL   staCommModuleInit
813961 8F4F              MOV     g_byCommRunningStatus,R7
   26: 	//检查通讯状态
813963 8010              SJMP    ?C0001?COMMMODULE
   27: 	case STA_CHECK_COMM_STATUS:
813965         ?C0003?COMMMODULE:
   28: 		g_byCommRunningStatus = staCheckCommStatus();
813965 A512813A0F        ECALL   staCheckCommStatus
81396A 8F4F              MOV     g_byCommRunningStatus,R7
   29: 		break;	
81396C 8007              SJMP    ?C0001?COMMMODULE
   30: 	//检查发送结果
   31: 	case STA_CHECK_SMS_SEND_RESULT:
81396E         ?C0004?COMMMODULE:
   32: 		g_byCommRunningStatus = staCheckSMSSendResult();
81396E A512813A61        ECALL   staCheckSMSSendResult
813973 8F4F              MOV     g_byCommRunningStatus,R7
   33: 		break;
   34: 	}
813975         ?C0001?COMMMODULE:
   35: #ifdef PRINT_TRACE
   36: 	ZhkSerial1Printf( "DoCommunication -> %bd\n", g_byCommRunningStatus );
   37: #endif
   38: 	commDoSendSMS();
813975 A50281397A        EJMP    commDoSendSMS
----- FUNCTION DoCommunication (END) -------


----- FUNCTION commDoSendSMS (BEGIN) -----
 FILE: 'CommModule.c'
  297: 	void commDoSendSMS()
  298: 	{
  299: 		struct SHORTMSG xdata struSMS;	
  300: 
  301: 		if( g_SMSCommModuleInfo.m_byCommStatus != COMM_STATUS_OK )
81397A 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
81397D E0                MOVX    A,@DPTR
81397E 6404              XRL     A,#04H
813980 6003              JZ      $ + 5H
813982 023A0D            LJMP    ?C0055?COMMMODULE
  302: 		{
  303: 		//	Trace("\n commDoSendSMS SENDING");
  304: 			return;
  305: 		}	
813985         ?C0054?COMMMODULE:
  306: 
  307: 		if( !g_SMSCommModuleInfo.m_SMSBuffer.m_byCount || !SystemParameter.GSMNO[ 0 ] )		
813985 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
813988 E0                MOVX    A,@DPTR
813989 7003              JNZ     $ + 5H
81398B 023A0D            LJMP    ?C0055?COMMMODULE
81398E 900434            MOV     DPTR,#SystemParameter+016H
813991 E0                MOVX    A,@DPTR
813992 6079              JZ      ?C0055?COMMMODULE
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 841


813994         ?C0056?COMMMODULE:
  308: 			return;		
  309: 		
  310: 		if( IsMessagerBuzy() )		
813994 A512813B67        ECALL   IsMessagerBuzy
813999 4072              JC      ?C0055?COMMMODULE
81399B         ?C0058?COMMMODULE:
  311: 			return ;		
  312: 
  313: 		if( SendSMSTimer != 0 )
81399B E510              MOV     A,SendSMSTimer
81399D 706E              JNZ     ?C0055?COMMMODULE
81399F         ?C0059?COMMMODULE:
  314: 			return;
  315: 
  316: 		Trace("\n commDoSendSMS Add Msg To Send ");
  317: 		memcpy( struSMS.phone, SystemParameter.GSMNO, sizeof(struSMS.phone) );
81399F 7849              MOV     R0,#LOW struSMS
8139A1 7C18              MOV     R4,#HIGH struSMS
8139A3 7D00              MOV     R5,#?C?XDATASEG
8139A5 7B00              MOV     R3,#?C?XDATASEG
8139A7 7A04              MOV     R2,#HIGH SystemParameter+016H
8139A9 7934              MOV     R1,#LOW SystemParameter+016H
8139AB 7E00              MOV     R6,#00H
8139AD 7F10              MOV     R7,#010H
8139AF A51280052D        ECALL   ?C?COPY
  318: 		struSMS.len = g_SMSCommModuleInfo.m_SMSBuffer.m_byLens[ g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex ];
8139B4 902358            MOV     DPTR,#g_SMSCommModuleInfo+064AH
8139B7 E0                MOVX    A,@DPTR
8139B8 FF                MOV     R7,A
8139B9 244E              ADD     A,#LOW g_SMSCommModuleInfo+0640H
8139BB F582              MOV     DPL,A
8139BD E4                CLR     A
8139BE 3423              ADDC    A,#HIGH g_SMSCommModuleInfo+0640H
8139C0 F583              MOV     DPH,A
8139C2 E0                MOVX    A,@DPTR
8139C3 FD                MOV     R5,A
8139C4 901859            MOV     DPTR,#struSMS+010H
8139C7 E4                CLR     A
8139C8 F0                MOVX    @DPTR,A
8139C9 A3                INC     DPTR
8139CA ED                MOV     A,R5
8139CB F0                MOVX    @DPTR,A
  319: 		memcpy( struSMS.msg
8139CC 901859            MOV     DPTR,#struSMS+010H
8139CF E0                MOVX    A,@DPTR
8139D0 F8                MOV     R0,A
8139D1 A3                INC     DPTR
8139D2 E0                MOVX    A,@DPTR
8139D3 F582              MOV     DPL,A
8139D5 8883              MOV     DPH,R0
8139D7 C083              PUSH    DPH
8139D9 C082              PUSH    DPL
8139DB EF                MOV     A,R7
8139DC 75F0A0            MOV     B,#0A0H
8139DF A4                MUL     AB
8139E0 240E              ADD     A,#LOW g_SMSCommModuleInfo
8139E2 F9                MOV     R1,A
8139E3 741D              MOV     A,#HIGH g_SMSCommModuleInfo
8139E5 35F0              ADDC    A,B
8139E7 FA                MOV     R2,A
8139E8 7B00              MOV     R3,#?C?XDATASEG
8139EA 785B              MOV     R0,#LOW struSMS+012H
8139EC 7C18              MOV     R4,#HIGH struSMS+012H
8139EE 7D00              MOV     R5,#?C?XDATASEG
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 842


8139F0 D007              POP     AR7
8139F2 D006              POP     AR6
8139F4 A51280052D        ECALL   ?C?COPY
  320: 			, g_SMSCommModuleInfo.m_SMSBuffer.m_bySMSs[ g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex ]
  321: 			, struSMS.len );		
  322: 		PutShortMsg( &struSMS );
8139F9 7B00              MOV     R3,#?C?XDATASEG
8139FB 7A18              MOV     R2,#HIGH struSMS
8139FD 7949              MOV     R1,#LOW struSMS
8139FF A512813BA5        ECALL   _PutShortMsg
  323: 		g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_SMS_SENDING;
813A04 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813A07 7408              MOV     A,#08H
813A09 F0                MOVX    @DPTR,A
  324: 
  325: 		g_byCommRunningStatus = STA_CHECK_SMS_SEND_RESULT;
813A0A 754F11            MOV     g_byCommRunningStatus,#011H
  326: 
  327: 		return ;
  328: 	}
813A0D         ?C0055?COMMMODULE:
813A0D A522              ERET    
----- FUNCTION commDoSendSMS (END) -------


----- FUNCTION staCheckCommStatus (BEGIN) -----
 FILE: 'CommModule.c'
   61: unsigned char staCheckCommStatus()
   62: {
   63: //	Trace( "\n staCheckCommStatus" );
   64: 	switch( SMSGetLastErr() )
813A0F A512813B4A        ECALL   SMSGetLastErr
813A14 EF                MOV     A,R7
813A15 14                DEC     A
813A16 6019              JZ      ?C0015?COMMMODULE
813A18 24FD              ADD     A,#0FDH
813A1A 600B              JZ      ?C0013?COMMMODULE
813A1C 14                DEC     A
813A1D 6008              JZ      ?C0013?COMMMODULE
813A1F 24FE              ADD     A,#0FEH
813A21 6004              JZ      ?C0013?COMMMODULE
813A23 2407              ADD     A,#07H
813A25 700E              JNZ     ?C0017?COMMMODULE
   65: 	{	
   66: 		case SMS_ERR_NULL:
   67: 			Trace( "\n staCheckCommStatus SMS_ERR_NULL " );
   68: 		case SMS_ERR_SEND_SUCCEED:
   69: 			Trace( "\n staCheckCommStatus SMS_ERR_SEND_SUCCEED " );
   70: 		case SMS_ERR_SENDFAIL:
   71: 			Trace( "\n staCheckCommStatus SMS_ERR_SENDFAIL " );
   72: 		case SMS_ERR_READFAIL:		
813A27         ?C0013?COMMMODULE:
   73: 			g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_OK;			
813A27 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813A2A 7404              MOV     A,#04H
813A2C F0                MOVX    @DPTR,A
   74: 			return	STA_SMS_NULL;
813A2D 7F12              MOV     R7,#012H
813A2F 800B              SJMP    ?C0014?COMMMODULE
   75: 			break;
   76: 		case SMS_ERR_BLOCK:		
813A31         ?C0015?COMMMODULE:
   77: 	//		Trace( "\n staCheckCommStatus SMS_ERR_BLOCK" );			
   78: 			return STA_CHECK_COMM_STATUS;	
813A31 7F01              MOV     R7,#01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 843


813A33 8007              SJMP    ?C0014?COMMMODULE
   79: 			break;
   80: 		case SMS_ERR_TIMEOUT:		
   81: 		default:
813A35         ?C0017?COMMMODULE:
   82: 			Trace( "\n staCheckCommStatus  SMS_ERR_TIMEOUT " );
   83: 			commInitGPRS();	
813A35 A512813A51        ECALL   commInitGPRS
   84: 			return STA_CHECK_COMM_STATUS;	
813A3A 7F01              MOV     R7,#01H
   85: 		break;
   86: 	}	
   87: }
813A3C         ?C0014?COMMMODULE:
813A3C A522              ERET    
----- FUNCTION staCheckCommStatus (END) -------


----- FUNCTION ?L?COM0026 (BEGIN) -----
813A3E 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
813A41 E0                MOVX    A,@DPTR
813A42 14                DEC     A
813A43 F0                MOVX    @DPTR,A
813A44 75101E            MOV     SendSMSTimer,#01EH
813A47 E4                CLR     A
813A48 900EB2            MOV     DPTR,#SMSSendTime
813A4B F0                MOVX    @DPTR,A
813A4C 900EAE            MOV     DPTR,#DownMobilePowerFlag
813A4F 04                INC     A
813A50 F0                MOVX    @DPTR,A
----- FUNCTION commInitGPRS (BEGIN) -----
 FILE: 'CommModule.c'
   53: void commInitGPRS()
   54: {
   55: 	Trace("\n commInitGPRS " );
   56: 	if( GprsInit() )
813A51 A512813B6F        ECALL   GprsInit
813A56 EF                MOV     A,R7
813A57 6006              JZ      ?C0008?COMMMODULE
   57: 		g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_INITING;
813A59 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813A5C 7407              MOV     A,#07H
813A5E F0                MOVX    @DPTR,A
   58: }
813A5F         ?C0008?COMMMODULE:
813A5F A522              ERET    
----- FUNCTION commInitGPRS (END) -------


----- FUNCTION staCheckSMSSendResult (BEGIN) -----
 FILE: 'CommModule.c'
  164: 	unsigned char staCheckSMSSendResult()
  165: 	{	
  166: 		switch( SMSGetLastErr() )
  167: 		{			
813A61 A512813B4A        ECALL   SMSGetLastErr
813A66 EF                MOV     A,R7
813A67 7003              JNZ     $ + 5H
813A69 023B05            LJMP    ?C0041?COMMMODULE
813A6C 14                DEC     A
813A6D 7003              JNZ     $ + 5H
813A6F 023B05            LJMP    ?C0041?COMMMODULE
813A72 24FE              ADD     A,#0FEH
813A74 7003              JNZ     $ + 5H
813A76 023B09            LJMP    ?C0042?COMMMODULE
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 844


813A79 14                DEC     A
813A7A 603E              JZ      ?C0033?COMMMODULE
813A7C 14                DEC     A
813A7D 607C              JZ      ?C0039?COMMMODULE
813A7F 24FE              ADD     A,#0FEH
813A81 6003              JZ      $ + 5H
813A83 023B48            LJMP    ?C0030?COMMMODULE
  168: 			case SMS_ERR_SEND_SUCCEED:
  169: 				g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_OK;
813A86         ?C0028?COMMMODULE:
  170: 				//短信发送成功,清空原来的短信
813A86 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813A89 7404              MOV     A,#04H
813A8B F0                MOVX    @DPTR,A
  171: 				if( ( RunFlag & 0x01 ) == 0x01 )
813A8C 901D0D            MOV     DPTR,#RunFlag
813A8F E0                MOVX    A,@DPTR
813A90 FF                MOV     R7,A
813A91 30E004            JNB     ACC.0,?C0029?COMMMODULE
  172: 				{
  173: 					RunFlag = RunFlag & 0xFC; //清空测试标志，同时置bit2为0,表示发送成功	
813A94 54FC              ANL     A,#0FCH
  174: 					Trace("\n TestSMSSend succeed" );
  175: 					return STA_CHECK_COMM_STATUS;			
813A96 8068              SJMP    ?C0060?COMMMODULE
  176: 				}
813A98         ?C0029?COMMMODULE:
  177: 				if( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount > 0 )
813A98 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
813A9B E0                MOVX    A,@DPTR
813A9C D3                SETB    C
813A9D 9400              SUBB    A,#00H
813A9F 4011              JC      ?C0031?COMMMODULE
  178: 				{
  179: 					if( ++g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex == MAX_BUFFERED_SMS_COUNT )				
813AA1 902358            MOV     DPTR,#g_SMSCommModuleInfo+064AH
813AA4 E0                MOVX    A,@DPTR
813AA5 04                INC     A
813AA6 F0                MOVX    @DPTR,A
813AA7 B40A02            CJNE    A,#0AH,?C0032?COMMMODULE
  180: 						g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex = 0;
813AAA E4                CLR     A
813AAB F0                MOVX    @DPTR,A
813AAC         ?C0032?COMMMODULE:
  181: 					--g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;										
813AAC 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
813AAF E0                MOVX    A,@DPTR
813AB0 14                DEC     A
813AB1 F0                MOVX    @DPTR,A
  182: 				}	
813AB2         ?C0031?COMMMODULE:
  183: 				ReTryTime = 0;				
813AB2 E4                CLR     A
813AB3 900EB0            MOV     DPTR,#ReTryTime
813AB6 F0                MOVX    @DPTR,A
  184: 				break;
813AB7 023B48            LJMP    ?C0030?COMMMODULE
  185: 			case SMS_ERR_SENDFAIL://如果明确知道发送失败，也要清空	
813ABA         ?C0033?COMMMODULE:
  186: 				if( ( RunFlag & 0x01 ) == 0x01 )	
813ABA 901D0D            MOV     DPTR,#RunFlag
813ABD E0                MOVX    A,@DPTR
813ABE FF                MOV     R7,A
813ABF 30E008            JNB     ACC.0,?C0034?COMMMODULE
  187: 				{
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 845


  188: 					RunFlag &= 0xFE; //清空测试标志,
813AC2 54FE              ANL     A,#0FEH
813AC4 F0                MOVX    @DPTR,A
  189: 					RunFlag |= 0x02; //置发送失败标志
813AC5 4402              ORL     A,#02H
813AC7 F0                MOVX    @DPTR,A
  190: 					Trace("\n TestSMSSend fail" );
  191: 				}
813AC8 802D              SJMP    ?C0035?COMMMODULE
813ACA         ?C0034?COMMMODULE:
  192: 				else
  193: 				{
  194: 					Trace("\n Send SMS Fail SMSSendTime = %bu", SMSSendTime );
  195: 					if( ( SMSSendTime >= RETRYTIME ) &&	( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount > 0 ) )
813ACA 900EB2            MOV     DPTR,#SMSSendTime
813ACD E0                MOVX    A,@DPTR
813ACE C3                CLR     C
813ACF 9405              SUBB    A,#05H
813AD1 401B              JC      ?C0036?COMMMODULE
813AD3 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
813AD6 E0                MOVX    A,@DPTR
813AD7 D3                SETB    C
813AD8 9400              SUBB    A,#00H
813ADA 4012              JC      ?C0036?COMMMODULE
  196: 					{
  197: 						if( ++g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex == MAX_BUFFERED_SMS_COUNT )				
813ADC 902358            MOV     DPTR,#g_SMSCommModuleInfo+064AH
813ADF E0                MOVX    A,@DPTR
813AE0 04                INC     A
813AE1 F0                MOVX    @DPTR,A
813AE2 B40A02            CJNE    A,#0AH,?C0037?COMMMODULE
  198: 							g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex = 0;
813AE5 E4                CLR     A
813AE6 F0                MOVX    @DPTR,A
813AE7         ?C0037?COMMMODULE:
  199: 						--g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;						
813AE7 A512813A3E        ECALL   ?L?COM0026
  200: 					//	SendSMSTimer = 0;
  201: 						SendSMSTimer = INTERVAL_TIME;
  202: 						SMSSendTime = 0;
  203: 						Trace("\n Not ReSend SMS SMSSendTime = %bu", SMSSendTime );
  204: 						//当重发指定次数后还是失败，则重启手机模块
  205: 						DownMobilePowerFlag = 1;
  206: 						commInitGPRS();
  207: 					}
813AEC 8009              SJMP    ?C0035?COMMMODULE
813AEE         ?C0036?COMMMODULE:
  208: 					else
  209: 					{
  210: 						SMSSendTime += 1;
813AEE 900EB2            MOV     DPTR,#SMSSendTime
813AF1 E0                MOVX    A,@DPTR
813AF2 04                INC     A
813AF3 F0                MOVX    @DPTR,A
  211: 						SendSMSTimer = INTERVAL_TIME;
813AF4 75101E            MOV     SendSMSTimer,#01EH
  212: 						Trace("\n ReSend SMS SMSSendTime = %bu", SMSSendTime );
  213: 					}
  214: 				}
813AF7         ?C0035?COMMMODULE:
  215: 				return STA_CHECK_COMM_STATUS;
813AF7 7F01              MOV     R7,#01H
813AF9 804D              SJMP    ?C0030?COMMMODULE
  216: 				break;
  217: 	//		case SMS_ERR_NULL://主控板与手机模块的通讯是正常的
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 846


  218: 			case SMS_ERR_READFAIL:			
813AFB         ?C0039?COMMMODULE:
  219: 				g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_OK;
813AFB 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813AFE 7404              MOV     A,#04H
813B00         
813B00 F0                MOVX    @DPTR,A
  220: 				return STA_CHECK_COMM_STATUS;			
813B01 7F01              MOV     R7,#01H
813B03 8043              SJMP    ?C0030?COMMMODULE
  221: 				break;
  222: 			case SMS_ERR_BLOCK:
  223: 			case SMS_ERR_NULL:
813B05         ?C0041?COMMMODULE:
  224: 				return STA_CHECK_SMS_SEND_RESULT;
813B05 7F11              MOV     R7,#011H
813B07 803F              SJMP    ?C0030?COMMMODULE
  225: 				break;
  226: 			case SMS_ERR_TIMEOUT:						
813B09         ?C0042?COMMMODULE:
  227: 	//		case GPRS_ERR_CONNECTING:
  228: 	//		case GPRS_ERR_CONNECTBREAK:
  229: 				if( ( RunFlag & 0x01 ) == 0x01 )	
813B09 901D0D            MOV     DPTR,#RunFlag
813B0C E0                MOVX    A,@DPTR
813B0D FF                MOV     R7,A
813B0E 30E008            JNB     ACC.0,?C0043?COMMMODULE
  230: 				{
  231: 					RunFlag &= 0xFE; //清空测试标志,
813B11 54FE              ANL     A,#0FEH
813B13 F0                MOVX    @DPTR,A
  232: 					RunFlag |= 0x02; //置发送失败标志
813B14 4402              ORL     A,#02H
813B16 F0                MOVX    @DPTR,A
  233: 					Trace("\n TestSMSSend timeout" );
  234: 				}
813B17 802D              SJMP    ?C0044?COMMMODULE
813B19         ?C0043?COMMMODULE:
  235: 				else
  236: 				{
  237: 					Trace("\n Send SMS TimeOut SMSSendTime = %bu", SMSSendTime );
  238: 					if( ( SMSSendTime >= RETRYTIME ) &&	( g_SMSCommModuleInfo.m_SMSBuffer.m_byCount > 0 ) )
813B19 900EB2            MOV     DPTR,#SMSSendTime
813B1C E0                MOVX    A,@DPTR
813B1D C3                CLR     C
813B1E 9405              SUBB    A,#05H
813B20 401B              JC      ?C0045?COMMMODULE
813B22 902359            MOV     DPTR,#g_SMSCommModuleInfo+064BH
813B25 E0                MOVX    A,@DPTR
813B26 D3                SETB    C
813B27 9400              SUBB    A,#00H
813B29 4012              JC      ?C0045?COMMMODULE
  239: 					{						
  240: 						if( ++g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex == MAX_BUFFERED_SMS_COUNT )				
813B2B 902358            MOV     DPTR,#g_SMSCommModuleInfo+064AH
813B2E E0                MOVX    A,@DPTR
813B2F 04                INC     A
813B30 F0                MOVX    @DPTR,A
813B31 B40A02            CJNE    A,#0AH,?C0046?COMMMODULE
  241: 							g_SMSCommModuleInfo.m_SMSBuffer.m_byBeginIndex = 0;
813B34 E4                CLR     A
813B35 F0                MOVX    @DPTR,A
813B36         ?C0046?COMMMODULE:
  242: 						--g_SMSCommModuleInfo.m_SMSBuffer.m_byCount;						
813B36 A512813A3E        ECALL   ?L?COM0026
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 847


  243: 					//	SendSMSTimer = 0;
  244: 						SendSMSTimer = INTERVAL_TIME;
  245: 						SMSSendTime = 0;
  246: 						//当重发指定次数后还是失败，则重启手机模块
  247: 						DownMobilePowerFlag = 1;
  248: 						commInitGPRS();
  249: 						Trace("\n Send SMS TimeOut SMSSendTime = %bu", SMSSendTime );
  250: 					}
813B3B 8009              SJMP    ?C0044?COMMMODULE
813B3D         ?C0045?COMMMODULE:
  251: 					else
  252: 					{
  253: 						SMSSendTime += 1;
813B3D 900EB2            MOV     DPTR,#SMSSendTime
813B40 E0                MOVX    A,@DPTR
813B41 04                INC     A
813B42 F0                MOVX    @DPTR,A
  254: 						SendSMSTimer = INTERVAL_TIME;
813B43 75101E            MOV     SendSMSTimer,#01EH
  255: 						Trace("\n TimeOut, ReSend SMS SMSSendTime = %bu", SMSSendTime );
  256: 					}
  257: 				}
813B46         ?C0044?COMMMODULE:
  258: 				return STA_CHECK_COMM_STATUS;
813B46 7F01              MOV     R7,#01H
  259: 				break;
  260: 		}						
  261: 	}
813B48         ?C0030?COMMMODULE:
813B48 A522              ERET    
----- FUNCTION staCheckSMSSendResult (END) -------


----- FUNCTION SMSGetLastErr (BEGIN) -----
 FILE: 'mobile.c'
  712: 	uchar SMSGetLastErr( void )
  713: 	{
  714: 		switch( SMSLastErr )
  715: 		{
813B4A 900EB6            MOV     DPTR,#SMSLastErr
813B4D E0                MOVX    A,@DPTR
813B4E FF                MOV     R7,A
813B4F 14                DEC     A
813B50 600A              JZ      ?C0144?MOBILE
813B52 24FE              ADD     A,#0FEH
813B54 24FD              ADD     A,#0FDH
813B56 5006              JNC     ?C0148?MOBILE
813B58 2406              ADD     A,#06H
813B5A 7004              JNZ     ?C0142?MOBILE
  716: 			case SMS_ERR_NULL:
  717: 			case SMS_ERR_BLOCK:
  718: 			return SMSLastErr;
813B5C         ?C0144?MOBILE:
  719: 				break; 
813B5C 8007              SJMP    ?C0145?MOBILE
  720: 			case SMS_ERR_TIMEOUT:
  721: 			case SMS_ERR_SENDFAIL:
  722: 			case SMS_ERR_READFAIL:						
  723: 		//		switch( ZhkGprsStatus )
813B5E         ?C0148?MOBILE:
  724: 		//		{
  725: 		//			case GPRS_STATUS_BREAK:
  726: 		//				return GPRS_ERR_CONNECTBREAK;				
  727: 		//			case GPRS_STATUS_CONNECTING:
  728: 		//				return GPRS_ERR_CONNECTING;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 848


  729: 		//		}
  730: 			return SMSLastErr;
813B5E         
813B5E 8005              SJMP    ?C0145?MOBILE
  731: 			break;
  732: 		}
813B60         ?C0142?MOBILE:
  733: 		return SMSLastErr;
813B60 900EB6            MOV     DPTR,#SMSLastErr
813B63 E0                MOVX    A,@DPTR
813B64 FF                MOV     R7,A
  734: 	}	
813B65         ?C0145?MOBILE:
813B65 A522              ERET    
----- FUNCTION SMSGetLastErr (END) -------


----- FUNCTION IsMessagerBuzy (BEGIN) -----
 FILE: 'mobile.c'
  667: 	bit IsMessagerBuzy( void )
  668: 	{
  669: 		return ZhkSmsTxNum;
  670: 	}
813B67 901592            MOV     DPTR,#ZhkSmsTxNum
813B6A E0                MOVX    A,@DPTR
813B6B 24FF              ADD     A,#0FFH
  671: 	
813B6D         ?C0129?MOBILE:
813B6D A522              ERET    
----- FUNCTION IsMessagerBuzy (END) -------


----- FUNCTION GprsInit (BEGIN) -----
 FILE: 'mobile.c'
  492: uchar GprsInit( void )
  493: {
  494: //	Trace("Init1 GPRS" );
  495: 	if( ZhkMobileCurrentTask == MOBILE_NULL )
813B6F 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
813B72 E0                MOVX    A,@DPTR
813B73 700C              JNZ     ?C0093?MOBILE
  496: 	{
  497: //		Trace("Init2 GPRS" );
  498: 		ZhkMobileCurrentTask = MOBILE_INIT;
813B75 7409              MOV     A,#09H
813B77 F0                MOVX    @DPTR,A
  499: 		ZhkGprsLastErr = GPRS_ERR_BLOCK;
813B78 900EB1            MOV     DPTR,#ZhkGprsLastErr
813B7B 7401              MOV     A,#01H
813B7D F0                MOVX    @DPTR,A
  500: 		return 1;
813B7E FF                MOV     R7,A
813B7F 8002              SJMP    ?C0094?MOBILE
  501: 	}
813B81         ?C0093?MOBILE:
  502: 	return 0;
813B81 7F00              MOV     R7,#00H
  503: }
813B83         ?C0094?MOBILE:
813B83 A522              ERET    
----- FUNCTION GprsInit (END) -------


----- FUNCTION staCommModuleInit (BEGIN) -----
 FILE: 'CommModule.c'
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 849


   42: unsigned char staCommModuleInit()
   43: {
   44: 	Trace("\n staCommModuleInit " );
   45: #ifdef _MOBILE_SMS_1
   46: 	memset( &g_SMSCommModuleInfo, 0, sizeof(g_SMSCommModuleInfo) );
813B85 7E06              MOV     R6,#06H
813B87 7F4E              MOV     R7,#04EH
813B89 7D00              MOV     R5,#00H
813B8B 7B00              MOV     R3,#?C?XDATASEG
813B8D 7A1D              MOV     R2,#HIGH g_SMSCommModuleInfo
813B8F 790E              MOV     R1,#LOW g_SMSCommModuleInfo
813B91 A5128008A6        ECALL   ?C?MEMSET
   47: 	ReTryTime = 0;
813B96 E4                CLR     A
813B97 900EB0            MOV     DPTR,#ReTryTime
813B9A F0                MOVX    @DPTR,A
   48: 	g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_INITING;
813B9B 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813B9E 7407              MOV     A,#07H
813BA0 F0                MOVX    @DPTR,A
   49: #endif		
   50: 	return STA_CHECK_COMM_STATUS;
813BA1 7F01              MOV     R7,#01H
   51: }
813BA3         ?C0006?COMMMODULE:
813BA3 A522              ERET    
----- FUNCTION staCommModuleInit (END) -------


----- FUNCTION _PutShortMsg (BEGIN) -----
 FILE: 'mobile.c'
  698: 	uchar PutShortMsg( struct SHORTMSG* Msg )
  699: 	{
;---- Variable 'Msg' assigned to Register 'R1/R2/R3' ----
  700: 		ZhkTaskClaim |= ZHKTASKCLAIM_TXSMSG;
  701: 	//	Trace( "\n PutShortMsg( %d )" , (int)Msg->len );
813BA5 900EB4            MOV     DPTR,#ZhkTaskClaim
813BA8 E0                MOVX    A,@DPTR
813BA9 4410              ORL     A,#010H
813BAB F0                MOVX    @DPTR,A
  702: 	//	Trace( "\n ZhkSmsTxNum = %bu" , ZhkSmsTxNum );
  703: 		if ( ZhkSmsTxNum > 0 ) 
813BAC 901592            MOV     DPTR,#ZhkSmsTxNum
813BAF E0                MOVX    A,@DPTR
813BB0 D3                SETB    C
813BB1 9400              SUBB    A,#00H
813BB3 4004              JC      ?C0139?MOBILE
  704: 			return 1;
813BB5 7F01              MOV     R7,#01H
813BB7 8030              SJMP    ?C0140?MOBILE
813BB9         ?C0139?MOBILE:
  705: 		memcpy( &ZhkSmsTxBuf, Msg , sizeof( struct SHORTMSG ) );
813BB9 78CE              MOV     R0,#LOW ZhkSmsTxBuf
813BBB 7C10              MOV     R4,#HIGH ZhkSmsTxBuf
813BBD 7D00              MOV     R5,#?C?XDATASEG
813BBF 7E00              MOV     R6,#00H
813BC1 7FB2              MOV     R7,#0B2H
813BC3 A51280052D        ECALL   ?C?COPY
  706: 		ZhkSmsTxNum ++;
813BC8 901592            MOV     DPTR,#ZhkSmsTxNum
813BCB E0                MOVX    A,@DPTR
813BCC 04                INC     A
813BCD F0                MOVX    @DPTR,A
  707: 		if ( ZhkSmsTxBuf.len > MAX_SMS_LEN ) 
813BCE D3                SETB    C
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 850


813BCF 9010DF            MOV     DPTR,#ZhkSmsTxBuf+011H
813BD2 E0                MOVX    A,@DPTR
813BD3 94A0              SUBB    A,#0A0H
813BD5 9010DE            MOV     DPTR,#ZhkSmsTxBuf+010H
813BD8 E0                MOVX    A,@DPTR
813BD9 9400              SUBB    A,#00H
813BDB 4006              JC      ?C0141?MOBILE
  708: 			ZhkSmsTxBuf.len = MAX_SMS_LEN;	
813BDD E4                CLR     A
813BDE F0                MOVX    @DPTR,A
813BDF A3                INC     DPTR
813BE0 74A0              MOV     A,#0A0H
813BE2 F0                MOVX    @DPTR,A
813BE3         ?C0141?MOBILE:
  709: 		return ZhkSmsTxBuf.len;
813BE3 9010DE            MOV     DPTR,#ZhkSmsTxBuf+010H
813BE6 A3                INC     DPTR
813BE7 E0                MOVX    A,@DPTR
813BE8 FF                MOV     R7,A
  710: 	}
813BE9         ?C0140?MOBILE:
813BE9 A522              ERET    
----- FUNCTION _PutShortMsg (END) -------


----- FUNCTION _TestSMSSend (BEGIN) -----
 FILE: 'CommModule.c'
  124: 	unsigned char TestSMSSend( struct SHORTMSG* Msg )
  125: 	{		
;---- Variable 'Msg' assigned to Register 'R1/R2/R3' ----
  126: 		if( g_SMSCommModuleInfo.m_byCommStatus != COMM_STATUS_OK )
  127: 			return 1;
813BEB 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813BEE E0                MOVX    A,@DPTR
813BEF 6404              XRL     A,#04H
813BF1 6004              JZ      ?C0019?COMMMODULE
  128: 		Trace("\n TestSMSSend");
813BF3 7F01              MOV     R7,#01H
813BF5 801E              SJMP    ?C0020?COMMMODULE
813BF7         ?C0019?COMMMODULE:
  129: 		if( PutShortMsg( Msg) == 1 )
813BF7 A512813BA5        ECALL   _PutShortMsg
813BFC BF0104            CJNE    R7,#01H,?C0021?COMMMODULE
  130: 			return 1;
813BFF 7F01              MOV     R7,#01H
813C01 8012              SJMP    ?C0020?COMMMODULE
813C03         ?C0021?COMMMODULE:
  131: 		Trace("\n TestSMSSend Sending");
  132: 		g_SMSCommModuleInfo.m_byCommStatus = COMM_STATUS_SMS_SENDING;
813C03 90235B            MOV     DPTR,#g_SMSCommModuleInfo+064DH
813C06 7408              MOV     A,#08H
813C08 F0                MOVX    @DPTR,A
  133: 		g_byCommRunningStatus = STA_CHECK_SMS_SEND_RESULT;
813C09 754F11            MOV     g_byCommRunningStatus,#011H
  134: 		RunFlag |= 0x01;
813C0C 901D0D            MOV     DPTR,#RunFlag
813C0F E0                MOVX    A,@DPTR
813C10 4401              ORL     A,#01H
813C12 F0                MOVX    @DPTR,A
  135: 		return 0;
813C13 7F00              MOV     R7,#00H
  136: 	}
813C15         ?C0020?COMMMODULE:
813C15 A522              ERET    
----- FUNCTION _TestSMSSend (END) -------
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 851




----- FUNCTION GetTestSMSSendResult (BEGIN) -----
 FILE: 'CommModule.c'
  140: 	unsigned char GetTestSMSSendResult(  )
  141: 	{
  142: 		Trace("\n GetTestSMSSendResult RunFlag = %bu", RunFlag );
  143: 		if( ( RunFlag & 0x01 ) == 0x01 )
813C17 901D0D            MOV     DPTR,#RunFlag
813C1A E0                MOVX    A,@DPTR
813C1B FE                MOV     R6,A
813C1C 30E004            JNB     ACC.0,?C0022?COMMMODULE
  144: 			return 2; 
813C1F 7F02              MOV     R7,#02H
813C21 8015              SJMP    ?C0023?COMMMODULE
813C23         ?C0022?COMMMODULE:
  145: 		if( ( RunFlag & 0x02 ) == 0x02 )
813C23 EE                MOV     A,R6
813C24 901D0D            MOV     DPTR,#RunFlag
813C27 30E108            JNB     ACC.1,?C0024?COMMMODULE
  146: 		{ 
  147: 			RunFlag &= 0xfb; //清除bit0和bit1，置为0
813C2A E0                MOVX    A,@DPTR
813C2B 54FB              ANL     A,#0FBH
813C2D F0                MOVX    @DPTR,A
  148: 			return 1;
813C2E 7F01              MOV     R7,#01H
813C30 8006              SJMP    ?C0023?COMMMODULE
  149: 		}
813C32         ?C0024?COMMMODULE:
  150: 		else
  151: 		{
  152: 			RunFlag &= 0xfb; //清除bit0和bit1，置为0
813C32 E0                MOVX    A,@DPTR
813C33 54FB              ANL     A,#0FBH
813C35 F0                MOVX    @DPTR,A
  153: 			return 0;
813C36 7F00              MOV     R7,#00H
  154: 		}
  155: 	}
813C38         ?C0023?COMMMODULE:
813C38 A522              ERET    
----- FUNCTION GetTestSMSSendResult (END) -------


----- FUNCTION GetATCMDResult (BEGIN) -----
 FILE: 'CommModule.c'
  158: 	unsigned int  GetATCMDResult()
  159: 	{
  160: 		return SMSErrorCode;
  161: 	}
813C3A 900EAC            MOV     DPTR,#SMSErrorCode
813C3D E0                MOVX    A,@DPTR
813C3E FE                MOV     R6,A
813C3F A3                INC     DPTR
813C40 E0                MOVX    A,@DPTR
813C41 FF                MOV     R7,A
  162: 
813C42         ?C0026?COMMMODULE:
813C42 A522              ERET    
----- FUNCTION GetATCMDResult (END) -------


----- FUNCTION ClearAllSMSInSMSBuffer (BEGIN) -----
 FILE: 'communication.c'
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 852


   11: 	void ClearAllSMSInSMSBuffer()
   12: 	{
   13: 		memset( &g_SMSCommModuleInfo.m_SMSBuffer, 0, sizeof(g_SMSCommModuleInfo.m_SMSBuffer) );
   14: 	}
813C44 7E06              MOV     R6,#06H
813C46 7F4C              MOV     R7,#04CH
813C48 7D00              MOV     R5,#00H
813C4A 7B00              MOV     R3,#?C?XDATASEG
813C4C 7A1D              MOV     R2,#HIGH g_SMSCommModuleInfo
813C4E 790E              MOV     R1,#LOW g_SMSCommModuleInfo
813C50 A5028008A6        EJMP    ?C?MEMSET
----- FUNCTION ClearAllSMSInSMSBuffer (END) -------


----- FUNCTION ZhkMobileNullProcess (BEGIN) -----
 FILE: 'mobile.c'
  123: uchar ZhkMobileNullProcess( void )
  124: {
  125: 	if ( ZhkTaskClaim & ZHKTASKCLAIM_TXSMSG )
  126: 	{
813C55 900EB4            MOV     DPTR,#ZhkTaskClaim
813C58 E0                MOVX    A,@DPTR
813C59 FF                MOV     R7,A
813C5A 30E416            JNB     ACC.4,?C0001?MOBILE
  127: 		ZhkMobileCurrentTask  = MOBILE_TXSHORTMSG;
  128: 		ZhkTaskClaim   &= ~ZHKTASKCLAIM_TXSMSG;		
813C5D 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
813C60 7405              MOV     A,#05H
813C62 F0                MOVX    @DPTR,A
  129: 		SMSLastErr = SMS_ERR_NULL;
813C63 EF                MOV     A,R7
813C64 54EF              ANL     A,#0EFH
813C66 900EB4            MOV     DPTR,#ZhkTaskClaim
813C69 F0                MOVX    @DPTR,A
  130: 		return ZhkMobileCurrentTask;
813C6A E4                CLR     A
813C6B 900EB6            MOV     DPTR,#SMSLastErr
813C6E F0                MOVX    @DPTR,A
  131: 	}
813C6F 7F05              MOV     R7,#05H
813C71 8023              SJMP    ?C0002?MOBILE
  132: 
813C73         ?C0001?MOBILE:
  133: 	if( ( NewCommingSmsSit[ 0 ] != -1 ) && ( ZhkSmsRxNum < SmsRxMaxNum ) )
813C73 901582            MOV     DPTR,#NewCommingSmsSit
813C76 E0                MOVX    A,@DPTR
813C77 F4                CPL     A
813C78 601A              JZ      ?C0003?MOBILE
813C7A 901581            MOV     DPTR,#ZhkSmsRxNum
813C7D E0                MOVX    A,@DPTR
813C7E C3                CLR     C
813C7F 9403              SUBB    A,#03H
813C81 5011              JNC     ?C0003?MOBILE
  134: 	{
  135: 		Trace("\n ZhkMobileNullProcess ZhkSmsRxNum = %bu", ZhkSmsRxNum ); 		
  136: 		if( ReceiveSMSTimer != 0  )
813C83 E519              MOV     A,ReceiveSMSTimer
813C85 6004              JZ      ?C0004?MOBILE
  137: 			return 0;
813C87 7F00              MOV     R7,#00H
813C89 800B              SJMP    ?C0002?MOBILE
813C8B         ?C0004?MOBILE:
  138: 		Trace("\n ZhkMobileNullProcess = MOBILE_RXSHORTMSG ");
  139: 		ZhkMobileCurrentTask  = MOBILE_RXSHORTMSG;		
813C8B 900EAF            MOV     DPTR,#ZhkMobileCurrentTask
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 853


813C8E 7406              MOV     A,#06H
813C90 F0                MOVX    @DPTR,A
  140: 		return ZhkMobileCurrentTask;
813C91 FF                MOV     R7,A
813C92 8002              SJMP    ?C0002?MOBILE
  141: 	}
813C94         ?C0003?MOBILE:
  142: 	return 0;
813C94 7F00              MOV     R7,#00H
  143: }
813C96         ?C0002?MOBILE:
813C96 A522              ERET    
----- FUNCTION ZhkMobileNullProcess (END) -------


----- FUNCTION _GetShortMsg (BEGIN) -----
 FILE: 'mobile.c'
  680: 	uchar GetShortMsg( struct SHORTMSG* Msg )
  681: 	{
813C98 901652            MOV     DPTR,#Msg
813C9B A5128007B6        ECALL   ?C?PSTXDATA
  682: 		uchar data i = 0;	
  683: 
813CA0 E4                CLR     A
813CA1 F528              MOV     i,A
  684: 		if( ZhkSmsRxNum == 0 )
813CA3 901581            MOV     DPTR,#ZhkSmsRxNum
813CA6 E0                MOVX    A,@DPTR
813CA7 7005              JNZ     ?C0133?MOBILE
  685: 			return 1;
813CA9 7F01              MOV     R7,#01H
813CAB 023D34            LJMP    ?C0134?MOBILE
813CAE         ?C0133?MOBILE:
  686: 
  687: 		memcpy( Msg , &ZhkSmsRxBuf[0], sizeof( struct SHORTMSG ) );
813CAE 901652            MOV     DPTR,#Msg
813CB1 A5128007AC        ECALL   ?C?PLDXDATA
813CB6 A801              MOV     R0,AR1
813CB8 AC02              MOV     R4,AR2
813CBA AD03              MOV     R5,AR3
813CBC 7B00              MOV     R3,#?C?XDATASEG
813CBE 7A0E              MOV     R2,#HIGH ZhkSmsRxBuf
813CC0 79B7              MOV     R1,#LOW ZhkSmsRxBuf
813CC2 7E00              MOV     R6,#00H
813CC4 7FB2              MOV     R7,#0B2H
813CC6 A51280052D        ECALL   ?C?COPY
  688: 		ZhkSmsRxNum -- ;
813CCB 901581            MOV     DPTR,#ZhkSmsRxNum
813CCE E0                MOVX    A,@DPTR
813CCF 14                DEC     A
813CD0 F0                MOVX    @DPTR,A
  689: 		if( ZhkSmsRxNum > 0 )
813CD1 E0                MOVX    A,@DPTR
813CD2 D3                SETB    C
813CD3 9400              SUBB    A,#00H
813CD5 403D              JC      ?C0135?MOBILE
  690: 		{
  691: 			for( i = 0; i < ZhkSmsRxNum; i ++ )
813CD7 E4                CLR     A
813CD8 F528              MOV     i,A
813CDA         ?C0136?MOBILE:
813CDA 901581            MOV     DPTR,#ZhkSmsRxNum
813CDD E0                MOVX    A,@DPTR
813CDE FF                MOV     R7,A
813CDF E528              MOV     A,i
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 854


813CE1 C3                CLR     C
813CE2 9F                SUBB    A,R7
813CE3 502F              JNC     ?C0135?MOBILE
  692: 				memcpy( &ZhkSmsRxBuf[i], &ZhkSmsRxBuf[i+1], sizeof( struct SHORTMSG ) );
813CE5 E528              MOV     A,i
813CE7 75F0B2            MOV     B,#0B2H
813CEA A4                MUL     AB
813CEB FF                MOV     R7,A
813CEC AEF0              MOV     R6,B
813CEE 2469              ADD     A,#LOW ZhkSmsRxBuf+0B2H
813CF0 F9                MOV     R1,A
813CF1 740F              MOV     A,#HIGH ZhkSmsRxBuf+0B2H
813CF3 3E                ADDC    A,R6
813CF4 FA                MOV     R2,A
813CF5 7B00              MOV     R3,#?C?XDATASEG
813CF7 C001              PUSH    AR1
813CF9 74B7              MOV     A,#LOW ZhkSmsRxBuf
813CFB 2F                ADD     A,R7
813CFC F9                MOV     R1,A
813CFD 740E              MOV     A,#HIGH ZhkSmsRxBuf
813CFF 3E                ADDC    A,R6
813D00 A801              MOV     R0,AR1
813D02 FC                MOV     R4,A
813D03 7D00              MOV     R5,#?C?XDATASEG
813D05 D001              POP     AR1
813D07 7E00              MOV     R6,#00H
813D09 7FB2              MOV     R7,#0B2H
813D0B A51280052D        ECALL   ?C?COPY
813D10 0528              INC     i
813D12 80C6              SJMP    ?C0136?MOBILE
  693: 		}
813D14         ?C0135?MOBILE:
  694: 		memset( &ZhkSmsRxBuf[i], 0, sizeof( struct SHORTMSG ) );
813D14 9000B2            MOV     DPTR,#0B2H
813D17 7D00              MOV     R5,#00H
813D19 E528              MOV     A,i
813D1B 75F0B2            MOV     B,#0B2H
813D1E A4                MUL     AB
813D1F 24B7              ADD     A,#LOW ZhkSmsRxBuf
813D21 F9                MOV     R1,A
813D22 740E              MOV     A,#HIGH ZhkSmsRxBuf
813D24 35F0              ADDC    A,B
813D26 FA                MOV     R2,A
813D27 7B00              MOV     R3,#?C?XDATASEG
813D29 AE83              MOV     R6,DPH
813D2B AF82              MOV     R7,DPL
813D2D A5128008A6        ECALL   ?C?MEMSET
  695: 		return 0;	
813D32 7F00              MOV     R7,#00H
  696: 	}
813D34         ?C0134?MOBILE:
813D34 A522              ERET    
----- FUNCTION _GetShortMsg (END) -------


----- FUNCTION ?L?COM0039 (BEGIN) -----
813D36 3E                ADDC    A,R6
813D37 F583              MOV     DPH,A
813D39 E0                MOVX    A,@DPTR
813D3A FF                MOV     R7,A
----- FUNCTION _ASCToInt (BEGIN) -----
 FILE: 'mobile.c'
  899: 	uchar ASCToInt( uchar val )
  900: 	{
;---- Variable 'val' assigned to Register 'R7' ----
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 855


  901: 		if ((val >= '0') && (val <= '9'))
  902:         	return  val - '0';
813D3B EF                MOV     A,R7
813D3C C3                CLR     C
813D3D 9430              SUBB    A,#030H
813D3F 400C              JC      ?C0168?MOBILE
813D41 EF                MOV     A,R7
813D42 D3                SETB    C
813D43 9439              SUBB    A,#039H
813D45 5006              JNC     ?C0168?MOBILE
  903:         else
813D47 EF                MOV     A,R7
813D48 24D0              ADD     A,#0D0H
813D4A FF                MOV     R7,A
813D4B 8026              SJMP    ?C0169?MOBILE
813D4D         ?C0168?MOBILE:
  904:         {
  905:             if ((val >= 'A') && (val <= 'Z'))
813D4D EF                MOV     A,R7
813D4E C3                CLR     C
813D4F 9441              SUBB    A,#041H
813D51 400C              JC      ?C0171?MOBILE
813D53 EF                MOV     A,R7
813D54 D3                SETB    C
813D55 945A              SUBB    A,#05AH
813D57 5006              JNC     ?C0171?MOBILE
  906:                 return val - 'A' + 10;
813D59 EF                MOV     A,R7
813D5A 24C9              ADD     A,#0C9H
813D5C FF                MOV     R7,A
813D5D 8014              SJMP    ?C0169?MOBILE
813D5F         ?C0171?MOBILE:
  907:             if ((val >= 'a') && (val <= 'z'))
813D5F EF                MOV     A,R7
813D60 C3                CLR     C
813D61 9461              SUBB    A,#061H
813D63 400C              JC      ?C0170?MOBILE
813D65 EF                MOV     A,R7
813D66 D3                SETB    C
813D67 947A              SUBB    A,#07AH
813D69 5006              JNC     ?C0170?MOBILE
  908:                 return val - 'a' + 10;
813D6B EF                MOV     A,R7
813D6C 24A9              ADD     A,#0A9H
813D6E FF                MOV     R7,A
813D6F 8002              SJMP    ?C0169?MOBILE
  909:         }
813D71         ?C0170?MOBILE:
  910:         return 0;
813D71 7F00              MOV     R7,#00H
  911: 	}
813D73         ?C0169?MOBILE:
813D73 A522              ERET    
----- FUNCTION _ASCToInt (END) -------


----- FUNCTION _ZhkMobileSmsGetTxMsg (BEGIN) -----
 FILE: 'mobile.c'
 1108: 	uchar ZhkMobileSmsGetTxMsg( struct SHORTMSG* Msg )
 1109: 	{
813D75 90193D            MOV     DPTR,#Msg
813D78 A5128007B6        ECALL   ?C?PSTXDATA
 1110: 		if ( ZhkSmsTxNum == 0) 
 1111: 			return 1;
813D7D 901592            MOV     DPTR,#ZhkSmsTxNum
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 856


813D80 E0                MOVX    A,@DPTR
813D81 7004              JNZ     ?C0217?MOBILE
 1112: 		memcpy( Msg , &ZhkSmsTxBuf, sizeof( struct SHORTMSG ) );
813D83 7F01              MOV     R7,#01H
813D85 801F              SJMP    ?C0218?MOBILE
813D87         ?C0217?MOBILE:
 1113: 	//	ZhkSmsTxNum --;
813D87 90193D            MOV     DPTR,#Msg
813D8A A5128007AC        ECALL   ?C?PLDXDATA
813D8F A801              MOV     R0,AR1
813D91 AC02              MOV     R4,AR2
813D93 AD03              MOV     R5,AR3
813D95 7B00              MOV     R3,#?C?XDATASEG
813D97 7A10              MOV     R2,#HIGH ZhkSmsTxBuf
813D99 79CE              MOV     R1,#LOW ZhkSmsTxBuf
813D9B 7E00              MOV     R6,#00H
813D9D 7FB2              MOV     R7,#0B2H
813D9F A51280052D        ECALL   ?C?COPY
 1114: 		return 0;
813DA4 7F00              MOV     R7,#00H
 1115: 	}
813DA6         ?C0218?MOBILE:
813DA6 A522              ERET    
----- FUNCTION _ZhkMobileSmsGetTxMsg (END) -------


----- FUNCTION _ZhkGSMToAsc (BEGIN) -----
 FILE: 'mobile.c'
 1123: 	uint ZhkGSMToAsc( uchar xdata* GSMCode , uchar xdata* AscCode , uint len )
 1124: 	{
813DA8 901C86            MOV     DPTR,#GSMCode
813DAB EE                MOV     A,R6
813DAC F0                MOVX    @DPTR,A
813DAD A3                INC     DPTR
813DAE EF                MOV     A,R7
813DAF F0                MOVX    @DPTR,A
813DB0 A3                INC     DPTR
813DB1 EC                MOV     A,R4
813DB2 F0                MOVX    @DPTR,A
813DB3 A3                INC     DPTR
813DB4 ED                MOV     A,R5
813DB5 F0                MOVX    @DPTR,A
813DB6 A3                INC     DPTR
813DB7 EA                MOV     A,R2
813DB8 F0                MOVX    @DPTR,A
813DB9 A3                INC     DPTR
813DBA EB                MOV     A,R3
813DBB F0                MOVX    @DPTR,A
 1125: 		uint data lentemp;
 1126: 		uchar data i;
 1127: 		uchar xdata GSMTemp[7];
 1128: 		uchar xdata AscTemp[8];
 1129: 	
 1130: 		// 如需考虑西欧字母和符号应在此处未进行查表处理.
 1131: 		lentemp = len - ( len/8 ) ;
813DBC 901C8A            MOV     DPTR,#len
813DBF E0                MOVX    A,@DPTR
813DC0 FC                MOV     R4,A
813DC1 A3                INC     DPTR
813DC2 E0                MOVX    A,@DPTR
813DC3 FD                MOV     R5,A
813DC4 AE04              MOV     R6,AR4
813DC6 7803              MOV     R0,#03H
813DC8         ?C0311?MOBILE:
813DC8 CE                XCH     A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 857


813DC9 C3                CLR     C
813DCA 13                RRC     A
813DCB CE                XCH     A,R6
813DCC 13                RRC     A
813DCD D8F9              DJNZ    R0,?C0311?MOBILE
813DCF FF                MOV     R7,A
813DD0 C3                CLR     C
813DD1 ED                MOV     A,R5
813DD2 9F                SUBB    A,R7
813DD3 F52E              MOV     lentemp+01H,A
813DD5 EC                MOV     A,R4
813DD6 9E                SUBB    A,R6
813DD7 F52D              MOV     lentemp,A
813DD9         ?C0219?MOBILE:
 1132: 		while( lentemp )
813DD9 E52E              MOV     A,lentemp+01H
813DDB 452D              ORL     A,lentemp
813DDD 7003              JNZ     $ + 5H
813DDF 024065            LJMP    ?C0220?MOBILE
 1133: 		{
 1134: 			if( lentemp >= 7 )
813DE2 C3                CLR     C
813DE3 E52E              MOV     A,lentemp+01H
813DE5 9407              SUBB    A,#07H
813DE7 E52D              MOV     A,lentemp
813DE9 9400              SUBB    A,#00H
813DEB 5003              JNC     $ + 5H
813DED 023F09            LJMP    ?C0221?MOBILE
 1135: 			{
 1136: 				for( i = 0 ; ( i < 7 ) && ( i < lentemp ) ; i ++ ) 
813DF0 E4                CLR     A
813DF1 F52F              MOV     i,A
813DF3         ?C0222?MOBILE:
813DF3 C3                CLR     C
813DF4 E52F              MOV     A,i
813DF6 952E              SUBB    A,lentemp+01H
813DF8 E4                CLR     A
813DF9 952D              SUBB    A,lentemp
813DFB 5025              JNC     ?C0223?MOBILE
 1137: 					GSMTemp[ i ] = GSMCode[ i ];				
813DFD 901C86            MOV     DPTR,#GSMCode
813E00 E0                MOVX    A,@DPTR
813E01 FC                MOV     R4,A
813E02 A3                INC     DPTR
813E03 E0                MOVX    A,@DPTR
813E04 252F              ADD     A,i
813E06 F582              MOV     DPL,A
813E08 E4                CLR     A
813E09 3C                ADDC    A,R4
813E0A F583              MOV     DPH,A
813E0C E0                MOVX    A,@DPTR
813E0D FF                MOV     R7,A
813E0E 748C              MOV     A,#LOW GSMTemp
813E10 252F              ADD     A,i
813E12 F582              MOV     DPL,A
813E14 E4                CLR     A
813E15 341C              ADDC    A,#HIGH GSMTemp
813E17 F583              MOV     DPH,A
813E19 EF                MOV     A,R7
813E1A F0                MOVX    @DPTR,A
813E1B 052F              INC     i
813E1D E52F              MOV     A,i
813E1F B407D1            CJNE    A,#07H,?C0222?MOBILE
813E22         ?C0223?MOBILE:
 1138: 				AscTemp[ 0 ] =   GSMTemp[ 0 ] & 0x7F;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 858


813E22 901C8C            MOV     DPTR,#GSMTemp
813E25 E0                MOVX    A,@DPTR
813E26 FE                MOV     R6,A
813E27 547F              ANL     A,#07FH
813E29 901C93            MOV     DPTR,#AscTemp
813E2C F0                MOVX    @DPTR,A
 1139: 				AscTemp[ 1 ] = ( GSMTemp[ 0 ] >> 7 ) | ( ( GSMTemp[ 1 ] << 1 ) & 0x7F );
813E2D 901C8D            MOV     DPTR,#GSMTemp+01H
813E30 E0                MOVX    A,@DPTR
813E31 FC                MOV     R4,A
813E32 25E0              ADD     A,ACC
813E34 547F              ANL     A,#07FH
813E36 FD                MOV     R5,A
813E37 EE                MOV     A,R6
813E38 C4                SWAP    A
813E39 13                RRC     A
813E3A 13                RRC     A
813E3B 13                RRC     A
813E3C 5401              ANL     A,#01H
813E3E 4D                ORL     A,R5
813E3F 901C94            MOV     DPTR,#AscTemp+01H
813E42 F0                MOVX    @DPTR,A
 1140: 				AscTemp[ 2 ] = ( GSMTemp[ 1 ] >> 6 ) | ( ( GSMTemp[ 2 ] << 2 ) & 0x7F );
813E43 901C8E            MOV     DPTR,#GSMTemp+02H
813E46 E0                MOVX    A,@DPTR
813E47 FB                MOV     R3,A
813E48 25E0              ADD     A,ACC
813E4A 25E0              ADD     A,ACC
813E4C 547F              ANL     A,#07FH
813E4E FE                MOV     R6,A
813E4F EC                MOV     A,R4
813E50 C4                SWAP    A
813E51 13                RRC     A
813E52 13                RRC     A
813E53 5403              ANL     A,#03H
813E55 4E                ORL     A,R6
813E56 901C95            MOV     DPTR,#AscTemp+02H
813E59 F0                MOVX    @DPTR,A
 1141: 				AscTemp[ 3 ] = ( GSMTemp[ 2 ] >> 5 ) | ( ( GSMTemp[ 3 ] << 3 ) & 0x7F );
813E5A 901C8F            MOV     DPTR,#GSMTemp+03H
813E5D E0                MOVX    A,@DPTR
813E5E FC                MOV     R4,A
813E5F 33                RLC     A
813E60 33                RLC     A
813E61 33                RLC     A
813E62 5478              ANL     A,#078H
813E64 FE                MOV     R6,A
813E65 EB                MOV     A,R3
813E66 C4                SWAP    A
813E67 13                RRC     A
813E68 5407              ANL     A,#07H
813E6A 4E                ORL     A,R6
813E6B 901C96            MOV     DPTR,#AscTemp+03H
813E6E F0                MOVX    @DPTR,A
 1142: 				AscTemp[ 4 ] = ( GSMTemp[ 3 ] >> 4 ) | ( ( GSMTemp[ 4 ] << 4 ) & 0x7F );
813E6F 901C90            MOV     DPTR,#GSMTemp+04H
813E72 E0                MOVX    A,@DPTR
813E73 FB                MOV     R3,A
813E74 C4                SWAP    A
813E75 5470              ANL     A,#070H
813E77 FE                MOV     R6,A
813E78 EC                MOV     A,R4
813E79 C4                SWAP    A
813E7A 540F              ANL     A,#0FH
813E7C 4E                ORL     A,R6
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 859


813E7D 901C97            MOV     DPTR,#AscTemp+04H
813E80 F0                MOVX    @DPTR,A
 1143: 				AscTemp[ 5 ] = ( GSMTemp[ 4 ] >> 3 ) | ( ( GSMTemp[ 5 ] << 5 ) & 0x7F );
813E81 901C91            MOV     DPTR,#GSMTemp+05H
813E84 E0                MOVX    A,@DPTR
813E85 FC                MOV     R4,A
813E86 C4                SWAP    A
813E87 33                RLC     A
813E88 5460              ANL     A,#060H
813E8A FE                MOV     R6,A
813E8B EB                MOV     A,R3
813E8C 13                RRC     A
813E8D 13                RRC     A
813E8E 13                RRC     A
813E8F 541F              ANL     A,#01FH
813E91 4E                ORL     A,R6
813E92 901C98            MOV     DPTR,#AscTemp+05H
813E95 F0                MOVX    @DPTR,A
 1144: 				AscTemp[ 6 ] = ( GSMTemp[ 5 ] >> 2 ) | ( ( GSMTemp[ 6 ] << 6 ) & 0x7F );
813E96 901C92            MOV     DPTR,#GSMTemp+06H
813E99 E0                MOVX    A,@DPTR
813E9A FB                MOV     R3,A
813E9B C4                SWAP    A
813E9C 33                RLC     A
813E9D 33                RLC     A
813E9E 5440              ANL     A,#040H
813EA0 FE                MOV     R6,A
813EA1 EC                MOV     A,R4
813EA2 13                RRC     A
813EA3 13                RRC     A
813EA4 543F              ANL     A,#03FH
813EA6 4E                ORL     A,R6
813EA7 901C99            MOV     DPTR,#AscTemp+06H
813EAA F0                MOVX    @DPTR,A
 1145: 				AscTemp[ 7 ] =   GSMTemp[ 6 ] >> 1;
813EAB EB                MOV     A,R3
813EAC C3                CLR     C
813EAD 13                RRC     A
813EAE A3                INC     DPTR
813EAF F0                MOVX    @DPTR,A
 1146: 			//	Trace("\n AscCode = ");
 1147: 				for( i = 0 ; i < 8 && i < lentemp ; i ++ )				
813EB0 E4                CLR     A
813EB1 F52F              MOV     i,A
813EB3         ?C0225?MOBILE:
813EB3 C3                CLR     C
813EB4 E52F              MOV     A,i
813EB6 952E              SUBB    A,lentemp+01H
813EB8 E4                CLR     A
813EB9 952D              SUBB    A,lentemp
813EBB 5025              JNC     ?C0226?MOBILE
 1148: 					AscCode[ i ] = AscTemp[ i ];
813EBD 7493              MOV     A,#LOW AscTemp
813EBF 252F              ADD     A,i
813EC1 F582              MOV     DPL,A
813EC3 E4                CLR     A
813EC4 341C              ADDC    A,#HIGH AscTemp
813EC6 F583              MOV     DPH,A
813EC8 E0                MOVX    A,@DPTR
813EC9 FF                MOV     R7,A
813ECA 901C88            MOV     DPTR,#AscCode
813ECD E0                MOVX    A,@DPTR
813ECE FC                MOV     R4,A
813ECF A3                INC     DPTR
813ED0 E0                MOVX    A,@DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 860


813ED1 252F              ADD     A,i
813ED3 F582              MOV     DPL,A
813ED5 E4                CLR     A
813ED6 3C                ADDC    A,R4
813ED7 F583              MOV     DPH,A
813ED9 EF                MOV     A,R7
813EDA F0                MOVX    @DPTR,A
813EDB 052F              INC     i
813EDD E52F              MOV     A,i
813EDF B408D1            CJNE    A,#08H,?C0225?MOBILE
813EE2         ?C0226?MOBILE:
 1149: 			//		Trace(" %02bx", AscCode[i] );				
 1150: 			//	Trace("\n");
 1151: 				AscCode += 8;
813EE2 901C88            MOV     DPTR,#AscCode
813EE5 E4                CLR     A
813EE6 75F008            MOV     B,#08H
813EE9 A512800600        ECALL   ?C?IILDX
 1152: 				GSMCode += 7;				
813EEE 901C86            MOV     DPTR,#GSMCode
813EF1 E4                CLR     A
813EF2 75F007            MOV     B,#07H
813EF5 A512800600        ECALL   ?C?IILDX
 1153: 				lentemp -= 7;
813EFA 74F9              MOV     A,#0F9H
813EFC 252E              ADD     A,lentemp+01H
813EFE F52E              MOV     lentemp+01H,A
813F00 74FF              MOV     A,#0FFH
813F02 352D              ADDC    A,lentemp
813F04 F52D              MOV     lentemp,A
 1154: 			}
813F06 023DD9            LJMP    ?C0219?MOBILE
813F09         ?C0221?MOBILE:
 1155: 			else
 1156: 			{
 1157: 				for( i = 0 ; ( i < 7 ) && ( i < lentemp ) ; i ++ ) 
813F09 E4                CLR     A
813F0A F52F              MOV     i,A
813F0C         ?C0229?MOBILE:
813F0C C3                CLR     C
813F0D E52F              MOV     A,i
813F0F 952E              SUBB    A,lentemp+01H
813F11 E4                CLR     A
813F12 952D              SUBB    A,lentemp
813F14 4003              JC      $ + 5H
813F16 024013            LJMP    ?C0230?MOBILE
 1158: 				{
 1159: 					GSMTemp[ i ] = GSMCode[ i ];
813F19 901C86            MOV     DPTR,#GSMCode
813F1C E0                MOVX    A,@DPTR
813F1D FC                MOV     R4,A
813F1E A3                INC     DPTR
813F1F E0                MOVX    A,@DPTR
813F20 252F              ADD     A,i
813F22 F582              MOV     DPL,A
813F24 E4                CLR     A
813F25 3C                ADDC    A,R4
813F26 F583              MOV     DPH,A
813F28 E0                MOVX    A,@DPTR
813F29 FF                MOV     R7,A
813F2A 748C              MOV     A,#LOW GSMTemp
813F2C 252F              ADD     A,i
813F2E F582              MOV     DPL,A
813F30 E4                CLR     A
813F31 341C              ADDC    A,#HIGH GSMTemp
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 861


813F33 F583              MOV     DPH,A
813F35 EF                MOV     A,R7
813F36 F0                MOVX    @DPTR,A
 1160: 					switch( i )
813F37 E52F              MOV     A,i
813F39 A5128007CD        ECALL   ?C?CCASEX
813F3E 3F5A              DW      ?C0233?MOBILE
813F40 00                DB      00H
813F41 3F67              DW      ?C0234?MOBILE
813F43 01                DB      01H
813F44 3F82              DW      ?C0235?MOBILE
813F46 02                DB      02H
813F47 3F9D              DW      ?C0236?MOBILE
813F49 03                DB      03H
813F4A 3FB6              DW      ?C0237?MOBILE
813F4C 04                DB      04H
813F4D 3FCC              DW      ?C0238?MOBILE
813F4F 05                DB      05H
813F50 3FE5              DW      ?C0239?MOBILE
813F52 06                DB      06H
813F53 3FFE              DW      ?C0240?MOBILE
813F55 07                DB      07H
813F56 0000              DW      00H
813F58 4008              DW      ?C0231?MOBILE
 1161: 					{
 1162: 						case  0:
813F5A         ?C0233?MOBILE:
 1163: 							AscTemp[ 0 ] =   GSMTemp[ 0 ] & 0x7F;
813F5A 901C8C            MOV     DPTR,#GSMTemp
813F5D E0                MOVX    A,@DPTR
813F5E 547F              ANL     A,#07FH
813F60 901C93            MOV     DPTR,#AscTemp
813F63 F0                MOVX    @DPTR,A
 1164: 						break;
813F64 024008            LJMP    ?C0231?MOBILE
 1165: 						case 1:
813F67         ?C0234?MOBILE:
 1166: 							AscTemp[ 1 ] = ( GSMTemp[ 0 ] >> 7 ) | ( ( GSMTemp[ 1 ] << 1 ) & 0x7F );
813F67 901C8D            MOV     DPTR,#GSMTemp+01H
813F6A E0                MOVX    A,@DPTR
813F6B 25E0              ADD     A,ACC
813F6D 547F              ANL     A,#07FH
813F6F FF                MOV     R7,A
813F70 901C8C            MOV     DPTR,#GSMTemp
813F73 E0                MOVX    A,@DPTR
813F74 C4                SWAP    A
813F75 13                RRC     A
813F76 13                RRC     A
813F77 13                RRC     A
813F78 5401              ANL     A,#01H
813F7A 4F                ORL     A,R7
813F7B 901C94            MOV     DPTR,#AscTemp+01H
813F7E F0                MOVX    @DPTR,A
 1167: 						break;
813F7F 024008            LJMP    ?C0231?MOBILE
 1168: 						case 2:
813F82         ?C0235?MOBILE:
 1169: 							AscTemp[ 2 ] = ( GSMTemp[ 1 ] >> 6 ) | ( ( GSMTemp[ 2 ] << 2 ) & 0x7F );
813F82 901C8E            MOV     DPTR,#GSMTemp+02H
813F85 E0                MOVX    A,@DPTR
813F86 25E0              ADD     A,ACC
813F88 25E0              ADD     A,ACC
813F8A 547F              ANL     A,#07FH
813F8C FF                MOV     R7,A
813F8D 901C8D            MOV     DPTR,#GSMTemp+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 862


813F90 E0                MOVX    A,@DPTR
813F91 C4                SWAP    A
813F92 13                RRC     A
813F93 13                RRC     A
813F94 5403              ANL     A,#03H
813F96 4F                ORL     A,R7
813F97 901C95            MOV     DPTR,#AscTemp+02H
813F9A F0                MOVX    @DPTR,A
 1170: 						break;
813F9B 806B              SJMP    ?C0231?MOBILE
 1171: 						case 3:
813F9D         ?C0236?MOBILE:
 1172: 							AscTemp[ 3 ] = ( GSMTemp[ 2 ] >> 5 ) | ( ( GSMTemp[ 3 ] << 3 ) & 0x7F );
813F9D 901C8F            MOV     DPTR,#GSMTemp+03H
813FA0 E0                MOVX    A,@DPTR
813FA1 33                RLC     A
813FA2 33                RLC     A
813FA3 33                RLC     A
813FA4 5478              ANL     A,#078H
813FA6 FF                MOV     R7,A
813FA7 901C8E            MOV     DPTR,#GSMTemp+02H
813FAA E0                MOVX    A,@DPTR
813FAB C4                SWAP    A
813FAC 13                RRC     A
813FAD 5407              ANL     A,#07H
813FAF 4F                ORL     A,R7
813FB0 901C96            MOV     DPTR,#AscTemp+03H
813FB3 F0                MOVX    @DPTR,A
 1173: 						break;						
813FB4 8052              SJMP    ?C0231?MOBILE
 1174: 						case 4:
813FB6         ?C0237?MOBILE:
 1175: 							AscTemp[ 4 ] = ( GSMTemp[ 3 ] >> 4 ) | ( ( GSMTemp[ 4 ] << 4 ) & 0x7F );
813FB6 901C90            MOV     DPTR,#GSMTemp+04H
813FB9 E0                MOVX    A,@DPTR
813FBA C4                SWAP    A
813FBB 5470              ANL     A,#070H
813FBD FF                MOV     R7,A
813FBE 901C8F            MOV     DPTR,#GSMTemp+03H
813FC1 E0                MOVX    A,@DPTR
813FC2 C4                SWAP    A
813FC3 540F              ANL     A,#0FH
813FC5 4F                ORL     A,R7
813FC6 901C97            MOV     DPTR,#AscTemp+04H
813FC9 F0                MOVX    @DPTR,A
 1176: 						break;
813FCA 803C              SJMP    ?C0231?MOBILE
 1177: 						case 5:
813FCC         ?C0238?MOBILE:
 1178: 							AscTemp[ 5 ] = ( GSMTemp[ 4 ] >> 3 ) | ( ( GSMTemp[ 5 ] << 5 ) & 0x7F );
813FCC 901C91            MOV     DPTR,#GSMTemp+05H
813FCF E0                MOVX    A,@DPTR
813FD0 C4                SWAP    A
813FD1 33                RLC     A
813FD2 5460              ANL     A,#060H
813FD4 FF                MOV     R7,A
813FD5 901C90            MOV     DPTR,#GSMTemp+04H
813FD8 E0                MOVX    A,@DPTR
813FD9 13                RRC     A
813FDA 13                RRC     A
813FDB 13                RRC     A
813FDC 541F              ANL     A,#01FH
813FDE 4F                ORL     A,R7
813FDF 901C98            MOV     DPTR,#AscTemp+05H
813FE2 F0                MOVX    @DPTR,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 863


 1179: 						break;
813FE3 8023              SJMP    ?C0231?MOBILE
 1180: 						case 6:
813FE5         ?C0239?MOBILE:
 1181: 							AscTemp[ 6 ] = ( GSMTemp[ 5 ] >> 2 ) | ( ( GSMTemp[ 6 ] << 6 ) & 0x7F );
813FE5 901C92            MOV     DPTR,#GSMTemp+06H
813FE8 E0                MOVX    A,@DPTR
813FE9 C4                SWAP    A
813FEA 33                RLC     A
813FEB 33                RLC     A
813FEC 5440              ANL     A,#040H
813FEE FF                MOV     R7,A
813FEF 901C91            MOV     DPTR,#GSMTemp+05H
813FF2 E0                MOVX    A,@DPTR
813FF3 13                RRC     A
813FF4 13                RRC     A
813FF5 543F              ANL     A,#03FH
813FF7 4F                ORL     A,R7
813FF8 901C99            MOV     DPTR,#AscTemp+06H
813FFB F0                MOVX    @DPTR,A
 1182: 						break;
813FFC 800A              SJMP    ?C0231?MOBILE
 1183: 						case 7:
813FFE         ?C0240?MOBILE:
 1184: 							AscTemp[ 7 ] =   GSMTemp[ 6 ] >> 1;
813FFE 901C92            MOV     DPTR,#GSMTemp+06H
814001 E0                MOVX    A,@DPTR
814002 C3                CLR     C
814003 13                RRC     A
814004 901C9A            MOV     DPTR,#AscTemp+07H
814007 F0                MOVX    @DPTR,A
 1185: 						break;
 1186: 					}
 1187: 				}								
814008         ?C0231?MOBILE:
814008 052F              INC     i
81400A E52F              MOV     A,i
81400C 6407              XRL     A,#07H
81400E 6003              JZ      $ + 5H
814010 023F0C            LJMP    ?C0229?MOBILE
814013         ?C0230?MOBILE:
 1188: 			//	Trace("\n AscCode = ");
 1189: 				for( i = 0 ; ( i < 8 ) && ( i < lentemp ); i ++ )			
814013 E4                CLR     A
814014 F52F              MOV     i,A
814016         ?C0241?MOBILE:
814016 C3                CLR     C
814017 E52F              MOV     A,i
814019 952E              SUBB    A,lentemp+01H
81401B E4                CLR     A
81401C 952D              SUBB    A,lentemp
81401E 5025              JNC     ?C0242?MOBILE
 1190: 					AscCode[ i ] = AscTemp[ i ];
814020 7493              MOV     A,#LOW AscTemp
814022 252F              ADD     A,i
814024 F582              MOV     DPL,A
814026 E4                CLR     A
814027 341C              ADDC    A,#HIGH AscTemp
814029 F583              MOV     DPH,A
81402B E0                MOVX    A,@DPTR
81402C FF                MOV     R7,A
81402D 901C88            MOV     DPTR,#AscCode
814030 E0                MOVX    A,@DPTR
814031 FC                MOV     R4,A
814032 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 864


814033 E0                MOVX    A,@DPTR
814034 252F              ADD     A,i
814036 F582              MOV     DPL,A
814038 E4                CLR     A
814039 3C                ADDC    A,R4
81403A F583              MOV     DPH,A
81403C EF                MOV     A,R7
81403D F0                MOVX    @DPTR,A
81403E 052F              INC     i
814040 E52F              MOV     A,i
814042 B408D1            CJNE    A,#08H,?C0241?MOBILE
814045         ?C0242?MOBILE:
 1191: 			//		Trace(" %02bx", AscCode[i] );
 1192: 			//	Trace("\n");
 1193: 				AscCode += 8;
814045 901C88            MOV     DPTR,#AscCode
814048 E4                CLR     A
814049 75F008            MOV     B,#08H
81404C A512800600        ECALL   ?C?IILDX
 1194: 				GSMCode += 7;
814051 901C86            MOV     DPTR,#GSMCode
814054 E4                CLR     A
814055 75F007            MOV     B,#07H
814058 A512800600        ECALL   ?C?IILDX
 1195: 				lentemp = 0;
81405D E4                CLR     A
81405E F52D              MOV     lentemp,A
814060 F52E              MOV     lentemp+01H,A
 1196: 			}
 1197: 		}
814062 023DD9            LJMP    ?C0219?MOBILE
814065         ?C0220?MOBILE:
 1198: 		return len;
814065 901C8A            MOV     DPTR,#len
814068 E0                MOVX    A,@DPTR
814069 FE                MOV     R6,A
81406A A3                INC     DPTR
81406B E0                MOVX    A,@DPTR
81406C FF                MOV     R7,A
 1199: 	}
81406D         ?C0244?MOBILE:
81406D A522              ERET    
----- FUNCTION _ZhkGSMToAsc (END) -------


----- FUNCTION _ZhkMessageToGSM (BEGIN) -----
 FILE: 'mobile.c'
 1206: 	uint ZhkMessageToGSM( uchar xdata* GSMCode , uchar xdata* MessageCode , uint len )
 1207: 	{
81406F 901AC1            MOV     DPTR,#GSMCode
814072 EE                MOV     A,R6
814073 F0                MOVX    @DPTR,A
814074 A3                INC     DPTR
814075 EF                MOV     A,R7
814076 F0                MOVX    @DPTR,A
814077 A3                INC     DPTR
814078 EC                MOV     A,R4
814079 F0                MOVX    @DPTR,A
81407A A3                INC     DPTR
81407B ED                MOV     A,R5
81407C F0                MOVX    @DPTR,A
81407D A3                INC     DPTR
81407E EA                MOV     A,R2
81407F F0                MOVX    @DPTR,A
814080 A3                INC     DPTR
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 865


814081 EB                MOV     A,R3
814082 F0                MOVX    @DPTR,A
 1208: 		uint lentemp;
 1209: 		uchar data i;
 1210: 		uchar xdata GSMTemp[7];
 1211: 		uchar xdata AscTemp[8];
 1212: 		
 1213: //		for( i = 0; i < len; i++ )		
 1214: //			sprintf( GSMCode+2*i,"%02bx", MessageCode[i] );
 1215: 
 1216: 		lentemp = len;
;---- Variable 'lentemp' assigned to Register 'R2/R3' ----
814083         ?C0245?MOBILE:
 1217: 		while( lentemp )
814083 EB                MOV     A,R3
814084 4A                ORL     A,R2
814085 7003              JNZ     $ + 5H
814087 0241E0            LJMP    ?C0246?MOBILE
 1218: 		{
 1219: 			for( i = 0 ; i < 8  ; i ++ ) 
81408A E4                CLR     A
81408B F532              MOV     i,A
81408D         ?C0247?MOBILE:
 1220: 				AscTemp[ i ] = 0;
81408D 74CE              MOV     A,#LOW AscTemp
81408F 2532              ADD     A,i
814091 F582              MOV     DPL,A
814093 E4                CLR     A
814094 341A              ADDC    A,#HIGH AscTemp
814096 F583              MOV     DPH,A
814098 E4                CLR     A
814099 F0                MOVX    @DPTR,A
81409A 0532              INC     i
81409C E532              MOV     A,i
81409E B408EC            CJNE    A,#08H,?C0247?MOBILE
8140A1         ?C0248?MOBILE:
 1221: 			for( i = 0 ; i < 8 && i < lentemp; i ++ ) 
8140A1 E4                CLR     A
8140A2 F532              MOV     i,A
8140A4         ?C0250?MOBILE:
8140A4 C3                CLR     C
8140A5 E532              MOV     A,i
8140A7 9B                SUBB    A,R3
8140A8 E4                CLR     A
8140A9 9A                SUBB    A,R2
8140AA 5027              JNC     ?C0251?MOBILE
 1222: 				AscTemp[ i ] = MessageCode[ i ] & 0x7F;
8140AC 901AC3            MOV     DPTR,#MessageCode
8140AF E0                MOVX    A,@DPTR
8140B0 FC                MOV     R4,A
8140B1 A3                INC     DPTR
8140B2 E0                MOVX    A,@DPTR
8140B3 2532              ADD     A,i
8140B5 F582              MOV     DPL,A
8140B7 E4                CLR     A
8140B8 3C                ADDC    A,R4
8140B9 F583              MOV     DPH,A
8140BB E0                MOVX    A,@DPTR
8140BC 547F              ANL     A,#07FH
8140BE FF                MOV     R7,A
8140BF 74CE              MOV     A,#LOW AscTemp
8140C1 2532              ADD     A,i
8140C3 F582              MOV     DPL,A
8140C5 E4                CLR     A
8140C6 341A              ADDC    A,#HIGH AscTemp
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 866


8140C8 F583              MOV     DPH,A
8140CA EF                MOV     A,R7
8140CB F0                MOVX    @DPTR,A
8140CC 0532              INC     i
8140CE E532              MOV     A,i
8140D0 B408D1            CJNE    A,#08H,?C0250?MOBILE
8140D3         ?C0251?MOBILE:
 1223: 			
 1224: 			GSMTemp[ 0 ] =   AscTemp[ 0 ]        | ( AscTemp[ 1 ] << 7 );
8140D3 901ACF            MOV     DPTR,#AscTemp+01H
8140D6 E0                MOVX    A,@DPTR
8140D7 FF                MOV     R7,A
8140D8 C4                SWAP    A
8140D9 33                RLC     A
8140DA 33                RLC     A
8140DB 33                RLC     A
8140DC 5480              ANL     A,#080H
8140DE FE                MOV     R6,A
8140DF 901ACE            MOV     DPTR,#AscTemp
8140E2 E0                MOVX    A,@DPTR
8140E3 4E                ORL     A,R6
8140E4 901AC7            MOV     DPTR,#GSMTemp
8140E7 F0                MOVX    @DPTR,A
 1225: 			GSMTemp[ 1 ] = ( AscTemp[ 1 ] >> 1 ) | ( AscTemp[ 2 ] << 6 );
8140E8 901AD0            MOV     DPTR,#AscTemp+02H
8140EB E0                MOVX    A,@DPTR
8140EC FE                MOV     R6,A
8140ED C4                SWAP    A
8140EE 33                RLC     A
8140EF 33                RLC     A
8140F0 54C0              ANL     A,#0C0H
8140F2 FD                MOV     R5,A
8140F3 EF                MOV     A,R7
8140F4 C3                CLR     C
8140F5 13                RRC     A
8140F6 4D                ORL     A,R5
8140F7 901AC8            MOV     DPTR,#GSMTemp+01H
8140FA F0                MOVX    @DPTR,A
 1226: 			GSMTemp[ 2 ] = ( AscTemp[ 2 ] >> 2 ) | ( AscTemp[ 3 ] << 5 );
8140FB 901AD1            MOV     DPTR,#AscTemp+03H
8140FE E0                MOVX    A,@DPTR
8140FF FF                MOV     R7,A
814100 C4                SWAP    A
814101 33                RLC     A
814102 54E0              ANL     A,#0E0H
814104 FD                MOV     R5,A
814105 EE                MOV     A,R6
814106 13                RRC     A
814107 13                RRC     A
814108 543F              ANL     A,#03FH
81410A 4D                ORL     A,R5
81410B 901AC9            MOV     DPTR,#GSMTemp+02H
81410E F0                MOVX    @DPTR,A
 1227: 			GSMTemp[ 3 ] = ( AscTemp[ 3 ] >> 3 ) | ( AscTemp[ 4 ] << 4 );
81410F 901AD2            MOV     DPTR,#AscTemp+04H
814112 E0                MOVX    A,@DPTR
814113 FE                MOV     R6,A
814114 C4                SWAP    A
814115 54F0              ANL     A,#0F0H
814117 FD                MOV     R5,A
814118 EF                MOV     A,R7
814119 13                RRC     A
81411A 13                RRC     A
81411B 13                RRC     A
81411C 541F              ANL     A,#01FH
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 867


81411E 4D                ORL     A,R5
81411F 901ACA            MOV     DPTR,#GSMTemp+03H
814122 F0                MOVX    @DPTR,A
 1228: 			GSMTemp[ 4 ] = ( AscTemp[ 4 ] >> 4 ) | ( AscTemp[ 5 ] << 3 );
814123 901AD3            MOV     DPTR,#AscTemp+05H
814126 E0                MOVX    A,@DPTR
814127 FF                MOV     R7,A
814128 33                RLC     A
814129 33                RLC     A
81412A 33                RLC     A
81412B 54F8              ANL     A,#0F8H
81412D FD                MOV     R5,A
81412E EE                MOV     A,R6
81412F C4                SWAP    A
814130 540F              ANL     A,#0FH
814132 4D                ORL     A,R5
814133 901ACB            MOV     DPTR,#GSMTemp+04H
814136 F0                MOVX    @DPTR,A
 1229: 			GSMTemp[ 5 ] = ( AscTemp[ 5 ] >> 5 ) | ( AscTemp[ 6 ] << 2 );
814137 901AD4            MOV     DPTR,#AscTemp+06H
81413A E0                MOVX    A,@DPTR
81413B FE                MOV     R6,A
81413C 25E0              ADD     A,ACC
81413E 25E0              ADD     A,ACC
814140 FD                MOV     R5,A
814141 EF                MOV     A,R7
814142 C4                SWAP    A
814143 13                RRC     A
814144 5407              ANL     A,#07H
814146 4D                ORL     A,R5
814147 901ACC            MOV     DPTR,#GSMTemp+05H
81414A F0                MOVX    @DPTR,A
 1230: 			GSMTemp[ 6 ] = ( AscTemp[ 6 ] >> 6 ) | ( AscTemp[ 7 ] << 1 );
81414B 901AD5            MOV     DPTR,#AscTemp+07H
81414E E0                MOVX    A,@DPTR
81414F 25E0              ADD     A,ACC
814151 FF                MOV     R7,A
814152 EE                MOV     A,R6
814153 C4                SWAP    A
814154 13                RRC     A
814155 13                RRC     A
814156 5403              ANL     A,#03H
814158 4F                ORL     A,R7
814159 901ACD            MOV     DPTR,#GSMTemp+06H
81415C F0                MOVX    @DPTR,A
 1231: 			
 1232: 			for( i = 0 ; i < 7 && i < ( len * 7 + 7 ) / 8 ; i ++ )
81415D E4                CLR     A
81415E F532              MOV     i,A
814160         ?C0253?MOBILE:
814160 901AC5            MOV     DPTR,#len
814163 E0                MOVX    A,@DPTR
814164 FE                MOV     R6,A
814165 A3                INC     DPTR
814166 E0                MOVX    A,@DPTR
814167 FF                MOV     R7,A
814168 7C00              MOV     R4,#00H
81416A 7D07              MOV     R5,#07H
81416C A512800559        ECALL   ?C?IMUL
814171 EF                MOV     A,R7
814172 2407              ADD     A,#07H
814174 FF                MOV     R7,A
814175 E4                CLR     A
814176 3E                ADDC    A,R6
814177 FE                MOV     R6,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 868


814178 EF                MOV     A,R7
814179 7803              MOV     R0,#03H
81417B         ?C0312?MOBILE:
81417B CE                XCH     A,R6
81417C C3                CLR     C
81417D 13                RRC     A
81417E CE                XCH     A,R6
81417F 13                RRC     A
814180 D8F9              DJNZ    R0,?C0312?MOBILE
814182 FF                MOV     R7,A
814183 C3                CLR     C
814184 E532              MOV     A,i
814186 9F                SUBB    A,R7
814187 E4                CLR     A
814188 9E                SUBB    A,R6
814189 5025              JNC     ?C0254?MOBILE
 1233: 				GSMCode[ i ] = GSMTemp[ i ];
81418B 74C7              MOV     A,#LOW GSMTemp
81418D 2532              ADD     A,i
81418F F582              MOV     DPL,A
814191 E4                CLR     A
814192 341A              ADDC    A,#HIGH GSMTemp
814194 F583              MOV     DPH,A
814196 E0                MOVX    A,@DPTR
814197 FF                MOV     R7,A
814198 901AC1            MOV     DPTR,#GSMCode
81419B E0                MOVX    A,@DPTR
81419C FC                MOV     R4,A
81419D A3                INC     DPTR
81419E E0                MOVX    A,@DPTR
81419F 2532              ADD     A,i
8141A1 F582              MOV     DPL,A
8141A3 E4                CLR     A
8141A4 3C                ADDC    A,R4
8141A5 F583              MOV     DPH,A
8141A7 EF                MOV     A,R7
8141A8 F0                MOVX    @DPTR,A
8141A9 0532              INC     i
8141AB E532              MOV     A,i
8141AD B407B0            CJNE    A,#07H,?C0253?MOBILE
8141B0         ?C0254?MOBILE:
 1234: 			if ( lentemp < 8 ) 
8141B0 C3                CLR     C
8141B1 EB                MOV     A,R3
8141B2 9408              SUBB    A,#08H
8141B4 EA                MOV     A,R2
8141B5 9400              SUBB    A,#00H
8141B7 5004              JNC     ?C0256?MOBILE
 1235: 				lentemp = 8;
8141B9 7A00              MOV     R2,#00H
8141BB 7B08              MOV     R3,#08H
8141BD         ?C0256?MOBILE:
 1236: 			MessageCode += 8;
8141BD 901AC3            MOV     DPTR,#MessageCode
8141C0 E4                CLR     A
8141C1 75F008            MOV     B,#08H
8141C4 A512800600        ECALL   ?C?IILDX
 1237: 			GSMCode += 7;
8141C9 901AC1            MOV     DPTR,#GSMCode
8141CC E4                CLR     A
8141CD 75F007            MOV     B,#07H
8141D0 A512800600        ECALL   ?C?IILDX
 1238: 			lentemp -= 8;
8141D5 74F8              MOV     A,#0F8H
8141D7 2B                ADD     A,R3
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 869


8141D8 FB                MOV     R3,A
8141D9 74FF              MOV     A,#0FFH
8141DB 3A                ADDC    A,R2
8141DC FA                MOV     R2,A
 1239: 		}
8141DD 024083            LJMP    ?C0245?MOBILE
8141E0         ?C0246?MOBILE:
 1240: //		Trace("\n 7bit Encode ");
 1241: 		// 如需考虑西欧字母和符号应在此处未进行查表处理.
 1242: 		return ((len * 7 + 7) / 8);
8141E0 901AC5            MOV     DPTR,#len
8141E3 E0                MOVX    A,@DPTR
8141E4 FE                MOV     R6,A
8141E5 A3                INC     DPTR
8141E6 E0                MOVX    A,@DPTR
8141E7 FF                MOV     R7,A
8141E8 7C00              MOV     R4,#00H
8141EA 7D07              MOV     R5,#07H
8141EC A512800559        ECALL   ?C?IMUL
8141F1 EF                MOV     A,R7
8141F2 2407              ADD     A,#07H
8141F4 FF                MOV     R7,A
8141F5 E4                CLR     A
8141F6 3E                ADDC    A,R6
8141F7 FE                MOV     R6,A
8141F8 EF                MOV     A,R7
8141F9 7803              MOV     R0,#03H
8141FB         ?C0313?MOBILE:
8141FB CE                XCH     A,R6
8141FC C3                CLR     C
8141FD 13                RRC     A
8141FE CE                XCH     A,R6
8141FF 13                RRC     A
814200 D8F9              DJNZ    R0,?C0313?MOBILE
814202 FF                MOV     R7,A
 1243: 	}
814203         ?C0257?MOBILE:
814203 A522              ERET    
----- FUNCTION _ZhkMessageToGSM (END) -------


----- FUNCTION _ZhkMobileSmsUnpack (BEGIN) -----
 FILE: 'mobile.c'
 1336: 	uint ZhkMobileSmsUnpack( struct SHORTMSG xdata* Msg, uchar xdata* DataBuf, uint DataLen ) 
 1337: 	{	
814205 901B7D            MOV     DPTR,#Msg
814208 EE                MOV     A,R6
814209 F0                MOVX    @DPTR,A
81420A A3                INC     DPTR
81420B EF                MOV     A,R7
81420C F0                MOVX    @DPTR,A
81420D A3                INC     DPTR
81420E EC                MOV     A,R4
81420F F0                MOVX    @DPTR,A
814210 A3                INC     DPTR
814211 ED                MOV     A,R5
814212 F0                MOVX    @DPTR,A
814213 A3                INC     DPTR
814214 EA                MOV     A,R2
814215 F0                MOVX    @DPTR,A
814216 A3                INC     DPTR
814217 EB                MOV     A,R3
814218 F0                MOVX    @DPTR,A
 1338: 		uchar xdata TempBuf[ 256 ];
 1339: 		uint xdata i;
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 870


 1340: 		uchar xdata ch;
 1341: 		uchar xdata* data p;
 1342: 	//	uchar VpfTemp;	
 1343: 	
 1344: 		memset( TempBuf,0,sizeof(TempBuf) );
814219 7E01              MOV     R6,#01H
81421B 7F00              MOV     R7,#00H
81421D 7D00              MOV     R5,#00H
81421F 7B00              MOV     R3,#?C?XDATASEG
814221 7A1B              MOV     R2,#HIGH TempBuf
814223 7983              MOV     R1,#LOW TempBuf
814225 A5128008A6        ECALL   ?C?MEMSET
 1345: 		//字符串转化为字节数组
 1346: 		for( i = 0 ; i < DataLen / 2 ; i ++ )
81422A E4                CLR     A
81422B 901C83            MOV     DPTR,#i
81422E F0                MOVX    @DPTR,A
81422F A3                INC     DPTR
814230 F0                MOVX    @DPTR,A
814231         ?C0272?MOBILE:
814231 901B81            MOV     DPTR,#DataLen
814234 E0                MOVX    A,@DPTR
814235 C3                CLR     C
814236 13                RRC     A
814237 FE                MOV     R6,A
814238 A3                INC     DPTR
814239 E0                MOVX    A,@DPTR
81423A 13                RRC     A
81423B FF                MOV     R7,A
81423C 901C83            MOV     DPTR,#i
81423F E0                MOVX    A,@DPTR
814240 FC                MOV     R4,A
814241 A3                INC     DPTR
814242 E0                MOVX    A,@DPTR
814243 FD                MOV     R5,A
814244 C3                CLR     C
814245 9F                SUBB    A,R7
814246 EC                MOV     A,R4
814247 9E                SUBB    A,R6
814248 5061              JNC     ?C0273?MOBILE
 1347: 		{
 1348: 			TempBuf[ i ] = ASCToInt( DataBuf[ 2 * i ] ) * 16 + ASCToInt( DataBuf[ 2 * i + 1 ] );	
81424A ED                MOV     A,R5
81424B 25E0              ADD     A,ACC
81424D FF                MOV     R7,A
81424E EC                MOV     A,R4
81424F 33                RLC     A
814250 FE                MOV     R6,A
814251 EF                MOV     A,R7
814252 2401              ADD     A,#01H
814254 FF                MOV     R7,A
814255 E4                CLR     A
814256 3E                ADDC    A,R6
814257 FE                MOV     R6,A
814258 901B7F            MOV     DPTR,#DataBuf
81425B E0                MOVX    A,@DPTR
81425C FC                MOV     R4,A
81425D A3                INC     DPTR
81425E E0                MOVX    A,@DPTR
81425F 2F                ADD     A,R7
814260 F582              MOV     DPL,A
814262 EC                MOV     A,R4
814263 A512813D36        ECALL   ?L?COM0039
814268 AD07              MOV     R5,AR7
81426A 901C84            MOV     DPTR,#i+01H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 871


81426D E0                MOVX    A,@DPTR
81426E 25E0              ADD     A,ACC
814270 FF                MOV     R7,A
814271 901C83            MOV     DPTR,#i
814274 E0                MOVX    A,@DPTR
814275 33                RLC     A
814276 FE                MOV     R6,A
814277 901B7F            MOV     DPTR,#DataBuf
81427A E0                MOVX    A,@DPTR
81427B FA                MOV     R2,A
81427C A3                INC     DPTR
81427D E0                MOVX    A,@DPTR
81427E 2F                ADD     A,R7
81427F F582              MOV     DPL,A
814281 EA                MOV     A,R2
814282 A512813D36        ECALL   ?L?COM0039
814287 EF                MOV     A,R7
814288 C4                SWAP    A
814289 54F0              ANL     A,#0F0H
81428B 2D                ADD     A,R5
81428C FF                MOV     R7,A
81428D 901C83            MOV     DPTR,#i
814290 A3                INC     DPTR
814291 E0                MOVX    A,@DPTR
814292 2483              ADD     A,#LOW TempBuf
814294 F582              MOV     DPL,A
814296 E4                CLR     A
814297 341B              ADDC    A,#HIGH TempBuf
814299 F583              MOV     DPH,A
81429B EF                MOV     A,R7
81429C F0                MOVX    @DPTR,A
 1349: 		}
81429D 901C83            MOV     DPTR,#i
8142A0 E4                CLR     A
8142A1 75F001            MOV     B,#01H
8142A4 A512800600        ECALL   ?C?IILDX
8142A9 8086              SJMP    ?C0272?MOBILE
8142AB         ?C0273?MOBILE:
 1350: 		if( TempBuf[0] == 0x08 )
8142AB 901B83            MOV     DPTR,#TempBuf
8142AE E0                MOVX    A,@DPTR
8142AF FF                MOV     R7,A
8142B0 B40808            CJNE    A,#08H,?C0275?MOBILE
 1351: 		{
 1352: 			//PDU模式的短信结构,有短信中心号码
 1353: 			// 取手机号码长度		
 1354: 			p  = TempBuf + 10;	
8142B3 752B1B            MOV     p,#HIGH TempBuf+0AH
8142B6 752C8D            MOV     p+01H,#LOW TempBuf+0AH
 1355: 		}
8142B9 8009              SJMP    ?C0276?MOBILE
8142BB         ?C0275?MOBILE:
 1356: 		else if( TempBuf[0] == 0x00 )
8142BB EF                MOV     A,R7
8142BC 7006              JNZ     ?C0276?MOBILE
 1357: 		{
 1358: 			//PDU模式的短信结构,无短信中心号码
 1359: 			// 取手机号码长度		
 1360: 			p  = TempBuf + 1;	
8142BE 752B1B            MOV     p,#HIGH TempBuf+01H
8142C1 752C84            MOV     p+01H,#LOW TempBuf+01H
 1361: 		}	
8142C4         ?C0276?MOBILE:
 1362: 
 1363: 		//取源手机号码长度
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 872


 1364: 		ch = *p;		
8142C4 852C82            MOV     DPL,p+01H
8142C7 852B83            MOV     DPH,p
8142CA E0                MOVX    A,@DPTR
8142CB 901C85            MOV     DPTR,#ch
8142CE F0                MOVX    @DPTR,A
 1365: 		// 取手机号码
 1366: 		p += 2;	
8142CF 7402              MOV     A,#02H
8142D1 252C              ADD     A,p+01H
8142D3 F52C              MOV     p+01H,A
8142D5 E4                CLR     A
8142D6 352B              ADDC    A,p
8142D8 F52B              MOV     p,A
 1367: 		for( i = 0 ; i < ( ch + 1 ) / 2 ; i ++ )
8142DA E4                CLR     A
8142DB 901C83            MOV     DPTR,#i
8142DE F0                MOVX    @DPTR,A
8142DF A3                INC     DPTR
8142E0 F0                MOVX    @DPTR,A
8142E1         ?C0278?MOBILE:
8142E1 901C85            MOV     DPTR,#ch
8142E4 E0                MOVX    A,@DPTR
8142E5 04                INC     A
8142E6 C3                CLR     C
8142E7 13                RRC     A
8142E8 FF                MOV     R7,A
8142E9 901C83            MOV     DPTR,#i
8142EC E0                MOVX    A,@DPTR
8142ED FC                MOV     R4,A
8142EE A3                INC     DPTR
8142EF E0                MOVX    A,@DPTR
8142F0 FD                MOV     R5,A
8142F1 C3                CLR     C
8142F2 9F                SUBB    A,R7
8142F3 EC                MOV     A,R4
8142F4 9400              SUBB    A,#00H
8142F6 5038              JNC     ?C0279?MOBILE
 1368: 		{		
 1369: 			Msg->phone[ i ] = ( p[ i ] & 0x0F ) * 16 + ( ( p[ i ] &0xF0 )>> 4 );	
8142F8 E52C              MOV     A,p+01H
8142FA 2D                ADD     A,R5
8142FB F582              MOV     DPL,A
8142FD E52B              MOV     A,p
8142FF 3C                ADDC    A,R4
814300 F583              MOV     DPH,A
814302 E0                MOVX    A,@DPTR
814303 FF                MOV     R7,A
814304 54F0              ANL     A,#0F0H
814306 C4                SWAP    A
814307 540F              ANL     A,#0FH
814309 FE                MOV     R6,A
81430A EF                MOV     A,R7
81430B 540F              ANL     A,#0FH
81430D C4                SWAP    A
81430E 54F0              ANL     A,#0F0H
814310 2E                ADD     A,R6
814311 FF                MOV     R7,A
814312 901B7D            MOV     DPTR,#Msg
814315 E0                MOVX    A,@DPTR
814316 FA                MOV     R2,A
814317 A3                INC     DPTR
814318 E0                MOVX    A,@DPTR
814319 2D                ADD     A,R5
81431A F582              MOV     DPL,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 873


81431C EA                MOV     A,R2
81431D 3C                ADDC    A,R4
81431E F583              MOV     DPH,A
814320 EF                MOV     A,R7
814321 F0                MOVX    @DPTR,A
 1370: 		}	
814322 901C83            MOV     DPTR,#i
814325 E4                CLR     A
814326 75F001            MOV     B,#01H
814329 A512800600        ECALL   ?C?IILDX
81432E 80B1              SJMP    ?C0278?MOBILE
814330         ?C0279?MOBILE:
 1371: 		Msg->phone[ i ] = 0xFF;
814330 901C83            MOV     DPTR,#i
814333 E0                MOVX    A,@DPTR
814334 FE                MOV     R6,A
814335 A3                INC     DPTR
814336 E0                MOVX    A,@DPTR
814337 FF                MOV     R7,A
814338 901B7D            MOV     DPTR,#Msg
81433B E0                MOVX    A,@DPTR
81433C FC                MOV     R4,A
81433D A3                INC     DPTR
81433E E0                MOVX    A,@DPTR
81433F FD                MOV     R5,A
814340 2F                ADD     A,R7
814341 F582              MOV     DPL,A
814343 EC                MOV     A,R4
814344 3E                ADDC    A,R6
814345 F583              MOV     DPH,A
814347 74FF              MOV     A,#0FFH
814349 F0                MOVX    @DPTR,A
 1372: 				
 1373: 		// 取DCS
 1374: 		p += i + 1;	
81434A EF                MOV     A,R7
81434B 2401              ADD     A,#01H
81434D FF                MOV     R7,A
81434E E4                CLR     A
81434F 3E                ADDC    A,R6
814350 FE                MOV     R6,A
814351 EF                MOV     A,R7
814352 252C              ADD     A,p+01H
814354 F52C              MOV     p+01H,A
814356 EE                MOV     A,R6
814357 352B              ADDC    A,p
814359 F52B              MOV     p,A
 1375: 		ch = *p;	
81435B 852C82            MOV     DPL,p+01H
81435E F583              MOV     DPH,A
814360 E0                MOVX    A,@DPTR
814361 901C85            MOV     DPTR,#ch
814364 F0                MOVX    @DPTR,A
 1376: 		// 根据信息的编码方式处理
 1377: 		if ( ch == 0 )
814365 702B              JNZ     ?C0281?MOBILE
 1378: 		{ 	
 1379: 			//7位编号			
 1380: 			// 取短信长度
 1381: 			p += 8;
814367 7408              MOV     A,#08H
814369 252C              ADD     A,p+01H
81436B F52C              MOV     p+01H,A
81436D E4                CLR     A
81436E 352B              ADDC    A,p
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 874


814370 F52B              MOV     p,A
 1382: 			Msg->len = *p;	
814372 852C82            MOV     DPL,p+01H
814375 F583              MOV     DPH,A
814377 E0                MOVX    A,@DPTR
814378 FF                MOV     R7,A
814379 ED                MOV     A,R5
81437A 2410              ADD     A,#010H
81437C F582              MOV     DPL,A
81437E E4                CLR     A
81437F 3C                ADDC    A,R4
814380 F583              MOV     DPH,A
814382 E4                CLR     A
814383 F0                MOVX    @DPTR,A
814384 A3                INC     DPTR
814385 EF                MOV     A,R7
814386 F0                MOVX    @DPTR,A
 1383: 			Trace("\n 7bit Msg->len = %u", Msg->len );	
 1384: 			// 取短信
 1385: 			p ++;
814387 052C              INC     p+01H
814389 E52C              MOV     A,p+01H
81438B 7002              JNZ     ?C0330?MOBILE
81438D 052B              INC     p
81438F         ?C0330?MOBILE:
 1386: 			return ZhkGSMToAsc( p , Msg->msg , Msg->len );
81438F 024592            LJMP    ?C0369?MOBILE
 1387: 		}
814392         ?C0281?MOBILE:
 1388: 		else if( ( ch & 0x04 ) == 0x04 )
814392 901C85            MOV     DPTR,#ch
814395 E0                MOVX    A,@DPTR
814396 30E25D            JNB     ACC.2,?C0284?MOBILE
 1389: 		{
 1390: 			//8位编码			
 1391: 			// 取短信长度		
 1392: 			p += 8;//跳过日期块
814399 7408              MOV     A,#08H
81439B 252C              ADD     A,p+01H
81439D F52C              MOV     p+01H,A
81439F E4                CLR     A
8143A0 352B              ADDC    A,p
8143A2 F52B              MOV     p,A
 1393: 			Msg->len = *p;
8143A4 852C82            MOV     DPL,p+01H
8143A7 F583              MOV     DPH,A
8143A9 E0                MOVX    A,@DPTR
8143AA FF                MOV     R7,A
8143AB 901B7D            MOV     DPTR,#Msg
8143AE E0                MOVX    A,@DPTR
8143AF FC                MOV     R4,A
8143B0 A3                INC     DPTR
8143B1 E0                MOVX    A,@DPTR
8143B2 FD                MOV     R5,A
8143B3 2410              ADD     A,#010H
8143B5 F582              MOV     DPL,A
8143B7 E4                CLR     A
8143B8 3C                ADDC    A,R4
8143B9 F583              MOV     DPH,A
8143BB E4                CLR     A
8143BC F0                MOVX    @DPTR,A
8143BD A3                INC     DPTR
8143BE EF                MOV     A,R7
8143BF F0                MOVX    @DPTR,A
 1394: 			Trace("\n 8bit Msg->len = %u", Msg->len );	
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 875


 1395: 		
 1396: 			// 取短信
 1397: 			p ++;		
8143C0 052C              INC     p+01H
8143C2 E52C              MOV     A,p+01H
8143C4 7002              JNZ     ?C0331?MOBILE
8143C6 052B              INC     p
8143C8         ?C0331?MOBILE:
 1398: 			memcpy( Msg->msg, p, Msg->len );		
8143C8 ED                MOV     A,R5
8143C9 2410              ADD     A,#010H
8143CB F582              MOV     DPL,A
8143CD E4                CLR     A
8143CE 3C                ADDC    A,R4
8143CF F583              MOV     DPH,A
8143D1 E0                MOVX    A,@DPTR
8143D2 FE                MOV     R6,A
8143D3 A3                INC     DPTR
8143D4 E0                MOVX    A,@DPTR
8143D5 FF                MOV     R7,A
8143D6 AA2B              MOV     R2,p
8143D8 A92C              MOV     R1,p+01H
8143DA 7B00              MOV     R3,#?C?XDATASEG
8143DC 901B7E            MOV     DPTR,#Msg+01H
8143DF E0                MOVX    A,@DPTR
8143E0 2412              ADD     A,#012H
8143E2 FD                MOV     R5,A
8143E3 901B7D            MOV     DPTR,#Msg
8143E6 E0                MOVX    A,@DPTR
8143E7 3400              ADDC    A,#00H
8143E9 A805              MOV     R0,AR5
8143EB FC                MOV     R4,A
8143EC 7D00              MOV     R5,#?C?XDATASEG
8143EE A51280052D        ECALL   ?C?COPY
 1399: 			return Msg->len;
8143F3 02454D            LJMP    ?C0370?MOBILE
 1400: 		}
8143F6         ?C0284?MOBILE:
 1401: 		else if( ( ch & 0x08 ) == 0x08 )
8143F6 901C85            MOV     DPTR,#ch
8143F9 E0                MOVX    A,@DPTR
8143FA 20E303            JB      ACC.3,$ + 6H
8143FD 024563            LJMP    ?C0286?MOBILE
 1402: 		{
 1403: 			//16位编码
 1404: 			// 取短信长度		
 1405: 			p += 8;//跳过日期块					
814400 7408              MOV     A,#08H
814402 252C              ADD     A,p+01H
814404 F52C              MOV     p+01H,A
814406 E4                CLR     A
814407 352B              ADDC    A,p
814409 F52B              MOV     p,A
 1406: 			Msg->len = *p;
81440B 852C82            MOV     DPL,p+01H
81440E F583              MOV     DPH,A
814410 E0                MOVX    A,@DPTR
814411 FF                MOV     R7,A
814412 901B7D            MOV     DPTR,#Msg
814415 E0                MOVX    A,@DPTR
814416 FC                MOV     R4,A
814417 A3                INC     DPTR
814418 E0                MOVX    A,@DPTR
814419 FD                MOV     R5,A
81441A 2410              ADD     A,#010H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 876


81441C F582              MOV     DPL,A
81441E E4                CLR     A
81441F 3C                ADDC    A,R4
814420 F583              MOV     DPH,A
814422 E4                CLR     A
814423 F0                MOVX    @DPTR,A
814424 A3                INC     DPTR
814425 EF                MOV     A,R7
814426 F0                MOVX    @DPTR,A
 1407: 			Trace("\n 16bit Msg->len = %u", Msg->len );	
 1408: 		
 1409: 			// 取短信
 1410: 			p ++;		
814427 052C              INC     p+01H
814429 E52C              MOV     A,p+01H
81442B 7002              JNZ     ?C0332?MOBILE
81442D 052B              INC     p
81442F         ?C0332?MOBILE:
 1411: 			memcpy( Msg->msg, p, Msg->len );
81442F ED                MOV     A,R5
814430 2410              ADD     A,#010H
814432 F582              MOV     DPL,A
814434 E4                CLR     A
814435 3C                ADDC    A,R4
814436 F583              MOV     DPH,A
814438 E0                MOVX    A,@DPTR
814439 FE                MOV     R6,A
81443A A3                INC     DPTR
81443B E0                MOVX    A,@DPTR
81443C FF                MOV     R7,A
81443D AA2B              MOV     R2,p
81443F A92C              MOV     R1,p+01H
814441 7B00              MOV     R3,#?C?XDATASEG
814443 901B7E            MOV     DPTR,#Msg+01H
814446 E0                MOVX    A,@DPTR
814447 2412              ADD     A,#012H
814449 FD                MOV     R5,A
81444A 901B7D            MOV     DPTR,#Msg
81444D E0                MOVX    A,@DPTR
81444E 3400              ADDC    A,#00H
814450 A805              MOV     R0,AR5
814452 FC                MOV     R4,A
814453 7D00              MOV     R5,#?C?XDATASEG
814455 A51280052D        ECALL   ?C?COPY
 1412: 			
 1413: 			if( Msg->len > 0 )
81445A 901B7D            MOV     DPTR,#Msg
81445D E0                MOVX    A,@DPTR
81445E FE                MOV     R6,A
81445F A3                INC     DPTR
814460 E0                MOVX    A,@DPTR
814461 2410              ADD     A,#010H
814463 F582              MOV     DPL,A
814465 E4                CLR     A
814466 3E                ADDC    A,R6
814467 F583              MOV     DPH,A
814469 E0                MOVX    A,@DPTR
81446A FE                MOV     R6,A
81446B A3                INC     DPTR
81446C E0                MOVX    A,@DPTR
81446D D3                SETB    C
81446E 9400              SUBB    A,#00H
814470 EE                MOV     A,R6
814471 9400              SUBB    A,#00H
814473 5003              JNC     $ + 5H
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 877


814475 02454D            LJMP    ?C0287?MOBILE
 1414: 			{
 1415: 				//转化为8位ASC码
 1416: 				for( i = 0; i < ( Msg->len / 2 ); i++ )
814478 E4                CLR     A
814479 901C83            MOV     DPTR,#i
81447C F0                MOVX    @DPTR,A
81447D A3                INC     DPTR
81447E F0                MOVX    @DPTR,A
81447F         ?C0288?MOBILE:
81447F 901B7D            MOV     DPTR,#Msg
814482 E0                MOVX    A,@DPTR
814483 FC                MOV     R4,A
814484 A3                INC     DPTR
814485 E0                MOVX    A,@DPTR
814486 FD                MOV     R5,A
814487 2410              ADD     A,#010H
814489 F582              MOV     DPL,A
81448B E4                CLR     A
81448C 3C                ADDC    A,R4
81448D F583              MOV     DPH,A
81448F E0                MOVX    A,@DPTR
814490 C3                CLR     C
814491 13                RRC     A
814492 FE                MOV     R6,A
814493 A3                INC     DPTR
814494 E0                MOVX    A,@DPTR
814495 13                RRC     A
814496 FF                MOV     R7,A
814497 901C83            MOV     DPTR,#i
81449A E0                MOVX    A,@DPTR
81449B FA                MOV     R2,A
81449C A3                INC     DPTR
81449D E0                MOVX    A,@DPTR
81449E FB                MOV     R3,A
81449F C3                CLR     C
8144A0 9F                SUBB    A,R7
8144A1 EA                MOV     A,R2
8144A2 9E                SUBB    A,R6
8144A3 503B              JNC     ?C0291?MOBILE
 1417: 					Msg->msg[i] = Msg->msg[2*i + 1];
8144A5 EB                MOV     A,R3
8144A6 25E0              ADD     A,ACC
8144A8 FF                MOV     R7,A
8144A9 EA                MOV     A,R2
8144AA 33                RLC     A
8144AB FE                MOV     R6,A
8144AC EF                MOV     A,R7
8144AD 2413              ADD     A,#013H
8144AF FF                MOV     R7,A
8144B0 E4                CLR     A
8144B1 3E                ADDC    A,R6
8144B2 FE                MOV     R6,A
8144B3 ED                MOV     A,R5
8144B4 2F                ADD     A,R7
8144B5 F582              MOV     DPL,A
8144B7 EC                MOV     A,R4
8144B8 3E                ADDC    A,R6
8144B9 F583              MOV     DPH,A
8144BB E0                MOVX    A,@DPTR
8144BC FF                MOV     R7,A
8144BD ED                MOV     A,R5
8144BE 2412              ADD     A,#012H
8144C0 F582              MOV     DPL,A
8144C2 E4                CLR     A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 878


8144C3 3C                ADDC    A,R4
8144C4 F583              MOV     DPH,A
8144C6 E582              MOV     A,DPL
8144C8 2B                ADD     A,R3
8144C9 F582              MOV     DPL,A
8144CB E583              MOV     A,DPH
8144CD 3A                ADDC    A,R2
8144CE F583              MOV     DPH,A
8144D0 EF                MOV     A,R7
8144D1 F0                MOVX    @DPTR,A
8144D2 901C83            MOV     DPTR,#i
8144D5 E4                CLR     A
8144D6 75F001            MOV     B,#01H
8144D9 A512800600        ECALL   ?C?IILDX
8144DE 809F              SJMP    ?C0288?MOBILE
 1418: 				for( ; i < Msg->len; i++ )
8144E0         ?C0291?MOBILE:
8144E0 901B7D            MOV     DPTR,#Msg
8144E3 E0                MOVX    A,@DPTR
8144E4 FE                MOV     R6,A
8144E5 A3                INC     DPTR
8144E6 E0                MOVX    A,@DPTR
8144E7 2410              ADD     A,#010H
8144E9 F582              MOV     DPL,A
8144EB E4                CLR     A
8144EC 3E                ADDC    A,R6
8144ED F583              MOV     DPH,A
8144EF E0                MOVX    A,@DPTR
8144F0 FE                MOV     R6,A
8144F1 A3                INC     DPTR
8144F2 E0                MOVX    A,@DPTR
8144F3 FF                MOV     R7,A
8144F4 901C83            MOV     DPTR,#i
8144F7 E0                MOVX    A,@DPTR
8144F8 FC                MOV     R4,A
8144F9 A3                INC     DPTR
8144FA E0                MOVX    A,@DPTR
8144FB FD                MOV     R5,A
8144FC C3                CLR     C
8144FD 9F                SUBB    A,R7
8144FE EC                MOV     A,R4
8144FF 9E                SUBB    A,R6
814500 5028              JNC     ?C0292?MOBILE
 1419: 					Msg->msg[i] = 0;			
814502 901B7D            MOV     DPTR,#Msg
814505 E0                MOVX    A,@DPTR
814506 FE                MOV     R6,A
814507 A3                INC     DPTR
814508 E0                MOVX    A,@DPTR
814509 2412              ADD     A,#012H
81450B F582              MOV     DPL,A
81450D E4                CLR     A
81450E 3E                ADDC    A,R6
81450F F583              MOV     DPH,A
814511 E582              MOV     A,DPL
814513 2D                ADD     A,R5
814514 F582              MOV     DPL,A
814516 E583              MOV     A,DPH
814518 3C                ADDC    A,R4
814519 F583              MOV     DPH,A
81451B E4                CLR     A
81451C F0                MOVX    @DPTR,A
81451D 901C83            MOV     DPTR,#i
814520 75F001            MOV     B,#01H
814523 A512800600        ECALL   ?C?IILDX
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 879


814528 80B6              SJMP    ?C0291?MOBILE
81452A         ?C0292?MOBILE:
 1420: 				Msg->len = Msg->len / 2 ;
81452A 901B7D            MOV     DPTR,#Msg
81452D E0                MOVX    A,@DPTR
81452E FE                MOV     R6,A
81452F A3                INC     DPTR
814530 E0                MOVX    A,@DPTR
814531 2410              ADD     A,#010H
814533 F582              MOV     DPL,A
814535 E4                CLR     A
814536 3E                ADDC    A,R6
814537 F583              MOV     DPH,A
814539 C083              PUSH    DPH
81453B C082              PUSH    DPL
81453D E0                MOVX    A,@DPTR
81453E C3                CLR     C
81453F 13                RRC     A
814540 FF                MOV     R7,A
814541 A3                INC     DPTR
814542 E0                MOVX    A,@DPTR
814543 13                RRC     A
814544 D082              POP     DPL
814546 D083              POP     DPH
814548 CF                XCH     A,R7
814549 F0                MOVX    @DPTR,A
81454A A3                INC     DPTR
81454B EF                MOV     A,R7
81454C F0                MOVX    @DPTR,A
 1421: 			}			
81454D         ?C0287?MOBILE:
 1422: 			return Msg->len;
81454D         
81454D 901B7D            MOV     DPTR,#Msg
814550 E0                MOVX    A,@DPTR
814551 FE                MOV     R6,A
814552 A3                INC     DPTR
814553 E0                MOVX    A,@DPTR
814554 2410              ADD     A,#010H
814556 F582              MOV     DPL,A
814558 E4                CLR     A
814559 3E                ADDC    A,R6
81455A F583              MOV     DPH,A
81455C E0                MOVX    A,@DPTR
81455D FE                MOV     R6,A
81455E A3                INC     DPTR
81455F E0                MOVX    A,@DPTR
814560 FF                MOV     R7,A
814561 8053              SJMP    ?C0282?MOBILE
 1423: 		}
814563         ?C0286?MOBILE:
 1424: 		else
 1425: 		{
 1426: 			//其它不明确的编码方式都按7位编号			
 1427: 			// 取短信长度
 1428: 			p += 8;
814563 7408              MOV     A,#08H
814565 252C              ADD     A,p+01H
814567 F52C              MOV     p+01H,A
814569 E4                CLR     A
81456A 352B              ADDC    A,p
81456C F52B              MOV     p,A
 1429: 			Msg->len = *p;		
81456E 852C82            MOV     DPL,p+01H
814571 F583              MOV     DPH,A
LX51 LINKER/LOCATER V3.65b                                                            09/06/2010  14:46:59  PAGE 880


814573 E0                MOVX    A,@DPTR
814574 FF                MOV     R7,A
814575 901B7D            MOV     DPTR,#Msg
814578 E0                MOVX    A,@DPTR
814579 FC                MOV     R4,A
81457A A3                INC     DPTR
81457B E0                MOVX    A,@DPTR
81457C FD                MOV     R5,A
81457D 2410              ADD     A,#010H
81457F F582              MOV     DPL,A
814581 E4                CLR     A
814582 3C                ADDC    A,R4
814583 F583              MOV     DPH,A
814585 E4                CLR     A
814586 F0                MOVX    @DPTR,A
814587 A3                INC     DPTR
814588 EF                MOV     A,R7
814589 F0                MOVX    @DPTR,A
 1430: 			// 取短信
 1431: 			p ++;
81458A 052C              INC     p+01H
81458C E52C              MOV     A,p+01H
81458E 7002              JNZ     ?C0333?MOBILE
814590 052B              INC     p
814592         ?C0333?MOBILE:
 1432: 			return ZhkGSMToAsc( p , Msg->msg , Msg->len );
814592         
814592 ED                MOV     A,R5
814593 2412              ADD     A,#012H
814595 FD                MOV     R5,A
814596 E4                CLR     A
814597 3C                ADDC    A,R4
814598 FC                MOV     R4,A
814599 901B7D            MOV     DPTR,#Msg
81459C E0                MOVX    A,@DPTR
81459D FE                MOV     R6,A
81459E A3                INC     DPTR
81459F E0                MOVX    A,@DPTR
8145A0 2410              ADD     A,#010H
8145A2 F582              MOV     DPL,A
8145A4 E4                CLR     A
8145A5 3E                ADDC    A,R6
8145A6 F583              MOV     DPH,A
8145A8 E0                MOVX    A,@DPTR
8145A9 FA                MOV     R2,A
8145AA A3                INC     DPTR
8145AB E0                MOVX    A,@DPTR
8145AC FB                MOV     R3,A
8145AD AF2C              MOV     R7,p+01H
8145AF AE2B              MOV     R6,p
8145B1 A512813DA8        ECALL   _ZhkGSMToAsc
 1433: 		}
 1434: 	}	
8145B6         ?C0282?MOBILE:
8145B6 A522              ERET    
----- FUNCTION _ZhkMobileSmsUnpack (END) -------


